Current data layout: e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128
Current target triple: 
Creating plugin CorePlugin
Creating plugin BaseInstructions
Creating plugin ExecutionTracer
Creating plugin HostFiles
Creating plugin InterruptMonitor
Creating plugin LinuxSyscallMonitor
Creating plugin DasosPreproc
1 [State 0] Created initial state
Adding memory block (startAddr = 0x0, size = 0xa0000, hostAddr = 0x38e8000, isSharedConcrete=0)
Adding memory block (startAddr = 0xa0000, size = 0x60000, hostAddr = 0x3b8f000, isSharedConcrete=1)
Adding memory block (startAddr = 0x100000, size = 0x7f00000, hostAddr = 0x2aaab82ad000, isSharedConcrete=0)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1ca70000, isSharedConcrete=1)
Adding memory block (startAddr = 0xc0000, size = 0x20000, hostAddr = 0x1cab9000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x800000, hostAddr = 0x2aaac01af000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x10000, hostAddr = 0x1e5e0000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1e654000, isSharedConcrete=1)
Initing initial device state.
Looking for relevant virtual devices...
   Registering device slirp
   Shared device block
   Registering device timer
   Shared device ram
   Registering device cpu_common
   Shared device cpu
   Registering device apic
   Registering device fw_cfg
   Registering device i8259
   Registering device i8259
   Registering device PCIBUS
   Registering device I440FX
   Registering device PIIX3
   Registering device cirrus_vga
   Registering device mc146818rtc
   Registering device ioapic
   Registering device i8254
   Registering device serial
   Registering device e1000
   Registering device ide
   Registering device ps2kbd
   Registering device ps2mouse
   Registering device vmmouse
   Registering device pckbd
   Registering device dma
   Registering device dma
   Registering device fdc
   Registering device piix4_pm
   Registering device i2c_bus
WARNING!!! All writes to disk will be lost after shutdown.
Initializing periodic timer
Firing timer event
Firing timer event
Firing timer event
24 [State 0] Message from guest (0xbfba29dc): << Within execShellcode with params f: 0, c: 1024, eip_known: no

>> fuzzInit: datum forking for value 0
>> fuzzInit: datum forking for value 0
24 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 0)
        (ReadLSB w32 0 v0_fuzz_symb_0)))
    state 1 with condition (Not (Eq false
         (Eq (w32 0)
             (ReadLSB w32 0 v0_fuzz_symb_0))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
Size=2 Low=0 splitIndex=1 high=1
24 [State 0] Switching from state 0 to state 1
Copied 34928 (count=1)
Finalizing TB execution 1
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
24 [State 1] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 0 not yet applied), shell_len: 1024, eip: 0x00000000

24 [State 1] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 266. This is the 1th success
>> Success densities, overlay: 0.990706; avg: 0.990706
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3380:  0  0             add [eax], al           
>>      2   2B @0xbfba3382:  0  0             add [eax], al           
>>      3   2B @0xbfba3384:  0  0             add [eax], al           
>>      4   2B @0xbfba3386:  0  0             add [eax], al           
>>      5   2B @0xbfba3388:  0  0             add [eax], al           
>>      6   2B @0xbfba338a:  0  0             add [eax], al           
>>      7   2B @0xbfba338c:  0  0             add [eax], al           
>>      8   2B @0xbfba338e:  0  0             add [eax], al           
>>      9   2B @0xbfba3390:  0  0             add [eax], al           
>>     10   2B @0xbfba3392:  0  0             add [eax], al           
>>     11   2B @0xbfba3394:  0  0             add [eax], al           
>>     12   2B @0xbfba3396:  0  0             add [eax], al           
>>     13   2B @0xbfba3398:  0  0             add [eax], al           
>>     14   2B @0xbfba339a:  0  0             add [eax], al           
>>     15   2B @0xbfba339c:  0  0             add [eax], al           
>>     16   2B @0xbfba339e:  0  0             add [eax], al           
>>     17   2B @0xbfba33a0:  0  0             add [eax], al           
>>     18   2B @0xbfba33a2:  0  0             add [eax], al           
>>     19   2B @0xbfba33a4:  0  0             add [eax], al           
>>     20   2B @0xbfba33a6:  0  0             add [eax], al           
>>     21   2B @0xbfba33a8:  0  0             add [eax], al           
>>     22   2B @0xbfba33aa:  0  0             add [eax], al           
>>     23   2B @0xbfba33ac:  0  0             add [eax], al           
>>     24   2B @0xbfba33ae:  0  0             add [eax], al           
>>     25   2B @0xbfba33b0:  0  0             add [eax], al           
>>     26   2B @0xbfba33b2:  0  0             add [eax], al           
>>     27   2B @0xbfba33b4:  0  0             add [eax], al           
>>     28   2B @0xbfba33b6:  0  0             add [eax], al           
>>     29   2B @0xbfba33b8:  0  0             add [eax], al           
>>     30   2B @0xbfba33ba:  0  0             add [eax], al           
>>     31   2B @0xbfba33bc:  0  0             add [eax], al           
>>     32   2B @0xbfba33be:  0  0             add [eax], al           
>>     33   2B @0xbfba33c0:  0  0             add [eax], al           
>>     34   2B @0xbfba33c2:  0  0             add [eax], al           
>>     35   2B @0xbfba33c4:  0  0             add [eax], al           
>>     36   2B @0xbfba33c6:  0  0             add [eax], al           
>>     37   2B @0xbfba33c8:  0  0             add [eax], al           
>>     38   2B @0xbfba33ca:  0  0             add [eax], al           
>>     39   2B @0xbfba33cc:  0  0             add [eax], al           
>>     40   2B @0xbfba33ce:  0  0             add [eax], al           
>>     41   2B @0xbfba33d0:  0  0             add [eax], al           
>>     42   2B @0xbfba33d2:  0  0             add [eax], al           
>>     43   2B @0xbfba33d4:  0  0             add [eax], al           
>>     44   2B @0xbfba33d6:  0  0             add [eax], al           
>>     45   2B @0xbfba33d8:  0  0             add [eax], al           
>>     46   2B @0xbfba33da:  0  0             add [eax], al           
>>     47   2B @0xbfba33dc:  0  0             add [eax], al           
>>     48   2B @0xbfba33de:  0  0             add [eax], al           
>>     49   2B @0xbfba33e0:  0  0             add [eax], al           
>>     50   2B @0xbfba33e2:  0  0             add [eax], al           
>>     51   2B @0xbfba33e4:  0  0             add [eax], al           
>>     52   2B @0xbfba33e6:  0  0             add [eax], al           
>>     53   2B @0xbfba33e8:  0  0             add [eax], al           
>>     54   2B @0xbfba33ea:  0  0             add [eax], al           
>>     55   2B @0xbfba33ec:  0  0             add [eax], al           
>>     56   2B @0xbfba33ee:  0  0             add [eax], al           
>>     57   2B @0xbfba33f0:  0  0             add [eax], al           
>>     58   2B @0xbfba33f2:  0  0             add [eax], al           
>>     59   2B @0xbfba33f4:  0  0             add [eax], al           
>>     60   2B @0xbfba33f6:  0  0             add [eax], al           
>>     61   2B @0xbfba33f8:  0  0             add [eax], al           
>>     62   2B @0xbfba33fa:  0  0             add [eax], al           
>>     63   2B @0xbfba33fc:  0  0             add [eax], al           
>>     64   2B @0xbfba33fe:  0  0             add [eax], al           
>>     65   2B @0xbfba3400:  0  0             add [eax], al           
>>     66   2B @0xbfba3402:  0  0             add [eax], al           
>>     67   2B @0xbfba3404:  0  0             add [eax], al           
>>     68   2B @0xbfba3406:  0  0             add [eax], al           
>>     69   2B @0xbfba3408:  0  0             add [eax], al           
>>     70   2B @0xbfba340a:  0  0             add [eax], al           
>>     71   2B @0xbfba340c:  0  0             add [eax], al           
>>     72   2B @0xbfba340e:  0  0             add [eax], al           
>>     73   2B @0xbfba3410:  0  0             add [eax], al           
>>     74   2B @0xbfba3412:  0  0             add [eax], al           
>>     75   2B @0xbfba3414:  0  0             add [eax], al           
>>     76   2B @0xbfba3416:  0  0             add [eax], al           
>>     77   2B @0xbfba3418:  0  0             add [eax], al           
>>     78   2B @0xbfba341a:  0  0             add [eax], al           
>>     79   2B @0xbfba341c:  0  0             add [eax], al           
>>     80   2B @0xbfba341e:  0  0             add [eax], al           
>>     81   2B @0xbfba3420:  0  0             add [eax], al           
>>     82   2B @0xbfba3422:  0  0             add [eax], al           
>>     83   2B @0xbfba3424:  0  0             add [eax], al           
>>     84   2B @0xbfba3426:  0  0             add [eax], al           
>>     85   2B @0xbfba3428:  0  0             add [eax], al           
>>     86   2B @0xbfba342a:  0  0             add [eax], al           
>>     87   2B @0xbfba342c:  0  0             add [eax], al           
>>     88   2B @0xbfba342e:  0  0             add [eax], al           
>>     89   2B @0xbfba3430:  0  0             add [eax], al           
>>     90   2B @0xbfba3432:  0  0             add [eax], al           
>>     91   2B @0xbfba3434:  0  0             add [eax], al           
>>     92   2B @0xbfba3436:  0  0             add [eax], al           
>>     93   2B @0xbfba3438:  0  0             add [eax], al           
>>     94   2B @0xbfba343a:  0  0             add [eax], al           
>>     95   2B @0xbfba343c:  0  0             add [eax], al           
>>     96   2B @0xbfba343e:  0  0             add [eax], al           
>>     97   2B @0xbfba3440:  0  0             add [eax], al           
>>     98   2B @0xbfba3442:  0  0             add [eax], al           
>>     99   2B @0xbfba3444:  0  0             add [eax], al           
>>    100   2B @0xbfba3446:  0  0             add [eax], al           
>>    101   2B @0xbfba3448:  0  0             add [eax], al           
>>    102   2B @0xbfba344a:  0  0             add [eax], al           
>>    103   2B @0xbfba344c:  0  0             add [eax], al           
>>    104   2B @0xbfba344e:  0  0             add [eax], al           
>>    105   2B @0xbfba3450:  0  0             add [eax], al           
>>    106   2B @0xbfba3452:  0  0             add [eax], al           
>>    107   2B @0xbfba3454:  0  0             add [eax], al           
>>    108   2B @0xbfba3456:  0  0             add [eax], al           
>>    109   2B @0xbfba3458:  0  0             add [eax], al           
>>    110   2B @0xbfba345a:  0  0             add [eax], al           
>>    111   2B @0xbfba345c:  0  0             add [eax], al           
>>    112   2B @0xbfba345e:  0  0             add [eax], al           
>>    113   2B @0xbfba3460:  0  0             add [eax], al           
>>    114   2B @0xbfba3462:  0  0             add [eax], al           
>>    115   2B @0xbfba3464:  0  0             add [eax], al           
>>    116   2B @0xbfba3466:  0  0             add [eax], al           
>>    117   2B @0xbfba3468:  0  0             add [eax], al           
>>    118   2B @0xbfba346a:  0  0             add [eax], al           
>>    119   2B @0xbfba346c:  0  0             add [eax], al           
>>    120   2B @0xbfba346e:  0  0             add [eax], al           
>>    121   2B @0xbfba3470:  0  0             add [eax], al           
>>    122   2B @0xbfba3472:  0  0             add [eax], al           
>>    123   2B @0xbfba3474:  0  0             add [eax], al           
>>    124   2B @0xbfba3476:  0  0             add [eax], al           
>>    125   2B @0xbfba3478:  0  0             add [eax], al           
>>    126   2B @0xbfba347a:  0  0             add [eax], al           
>>    127   2B @0xbfba347c:  0  0             add [eax], al           
>>    128   2B @0xbfba347e:  0  0             add [eax], al           
>>    129   2B @0xbfba3480:  0  0             add [eax], al           
>>    130   2B @0xbfba3482:  0  0             add [eax], al           
>>    131   2B @0xbfba3484:  0  0             add [eax], al           
>>    132   2B @0xbfba3486:  0  0             add [eax], al           
>>    133   2B @0xbfba3488:  0  0             add [eax], al           
>>    134   2B @0xbfba348a:  0  0             add [eax], al           
>>    135   2B @0xbfba348c:  0  0             add [eax], al           
>>    136   2B @0xbfba348e:  0  0             add [eax], al           
>>    137   2B @0xbfba3490:  0  0             add [eax], al           
>>    138   2B @0xbfba3492:  0  0             add [eax], al           
>>    139   2B @0xbfba3494:  0  0             add [eax], al           
>>    140   2B @0xbfba3496:  0  0             add [eax], al           
>>    141   2B @0xbfba3498:  0  0             add [eax], al           
>>    142   2B @0xbfba349a:  0  0             add [eax], al           
>>    143   2B @0xbfba349c:  0  0             add [eax], al           
>>    144   2B @0xbfba349e:  0  0             add [eax], al           
>>    145   2B @0xbfba34a0:  0  0             add [eax], al           
>>    146   2B @0xbfba34a2:  0  0             add [eax], al           
>>    147   2B @0xbfba34a4:  0  0             add [eax], al           
>>    148   2B @0xbfba34a6:  0  0             add [eax], al           
>>    149   2B @0xbfba34a8:  0  0             add [eax], al           
>>    150   2B @0xbfba34aa:  0  0             add [eax], al           
>>    151   2B @0xbfba34ac:  0  0             add [eax], al           
>>    152   2B @0xbfba34ae:  0  0             add [eax], al           
>>    153   2B @0xbfba34b0:  0  0             add [eax], al           
>>    154   2B @0xbfba34b2:  0  0             add [eax], al           
>>    155   2B @0xbfba34b4:  0  0             add [eax], al           
>>    156   2B @0xbfba34b6:  0  0             add [eax], al           
>>    157   2B @0xbfba34b8:  0  0             add [eax], al           
>>    158   2B @0xbfba34ba:  0  0             add [eax], al           
>>    159   2B @0xbfba34bc:  0  0             add [eax], al           
>>    160   2B @0xbfba34be:  0  0             add [eax], al           
>>    161   2B @0xbfba34c0:  0  0             add [eax], al           
>>    162   2B @0xbfba34c2:  0  0             add [eax], al           
>>    163   2B @0xbfba34c4:  0  0             add [eax], al           
>>    164   2B @0xbfba34c6:  0  0             add [eax], al           
>>    165   2B @0xbfba34c8:  0  0             add [eax], al           
>>    166   2B @0xbfba34ca:  0  0             add [eax], al           
>>    167   2B @0xbfba34cc:  0  0             add [eax], al           
>>    168   2B @0xbfba34ce:  0  0             add [eax], al           
>>    169   2B @0xbfba34d0:  0  0             add [eax], al           
>>    170   2B @0xbfba34d2:  0  0             add [eax], al           
>>    171   2B @0xbfba34d4:  0  0             add [eax], al           
>>    172   2B @0xbfba34d6:  0  0             add [eax], al           
>>    173   2B @0xbfba34d8:  0  0             add [eax], al           
>>    174   2B @0xbfba34da:  0  0             add [eax], al           
>>    175   2B @0xbfba34dc:  0  0             add [eax], al           
>>    176   2B @0xbfba34de:  0  0             add [eax], al           
>>    177   2B @0xbfba34e0:  0  0             add [eax], al           
>>    178   2B @0xbfba34e2:  0  0             add [eax], al           
>>    179   2B @0xbfba34e4:  0  0             add [eax], al           
>>    180   2B @0xbfba34e6:  0  0             add [eax], al           
>>    181   2B @0xbfba34e8:  0  0             add [eax], al           
>>    182   2B @0xbfba34ea:  0  0             add [eax], al           
>>    183   2B @0xbfba34ec:  0  0             add [eax], al           
>>    184   2B @0xbfba34ee:  0  0             add [eax], al           
>>    185   2B @0xbfba34f0:  0  0             add [eax], al           
>>    186   2B @0xbfba34f2:  0  0             add [eax], al           
>>    187   2B @0xbfba34f4:  0  0             add [eax], al           
>>    188   2B @0xbfba34f6:  0  0             add [eax], al           
>>    189   2B @0xbfba34f8:  0  0             add [eax], al           
>>    190   2B @0xbfba34fa:  0  0             add [eax], al           
>>    191   2B @0xbfba34fc:  0  0             add [eax], al           
>>    192   2B @0xbfba34fe:  0  0             add [eax], al           
>>    193   2B @0xbfba3500:  0  0             add [eax], al           
>>    194   2B @0xbfba3502:  0  0             add [eax], al           
>>    195   2B @0xbfba3504:  0  0             add [eax], al           
>>    196   2B @0xbfba3506:  0  0             add [eax], al           
>>    197   2B @0xbfba3508:  0  0             add [eax], al           
>>    198   2B @0xbfba350a:  0  0             add [eax], al           
>>    199   2B @0xbfba350c:  0  0             add [eax], al           
>>    200   2B @0xbfba350e:  0  0             add [eax], al           
>>    201   2B @0xbfba3510:  0  0             add [eax], al           
>>    202   2B @0xbfba3512:  0  0             add [eax], al           
>>    203   2B @0xbfba3514:  0  0             add [eax], al           
>>    204   2B @0xbfba3516:  0  0             add [eax], al           
>>    205   2B @0xbfba3518:  0  0             add [eax], al           
>>    206   2B @0xbfba351a:  0  0             add [eax], al           
>>    207   2B @0xbfba351c:  0  0             add [eax], al           
>>    208   2B @0xbfba351e:  0  0             add [eax], al           
>>    209   2B @0xbfba3520:  0  0             add [eax], al           
>>    210   2B @0xbfba3522:  0  0             add [eax], al           
>>    211   2B @0xbfba3524:  0  0             add [eax], al           
>>    212   2B @0xbfba3526:  0  0             add [eax], al           
>>    213   2B @0xbfba3528:  0  0             add [eax], al           
>>    214   2B @0xbfba352a:  0  0             add [eax], al           
>>    215   2B @0xbfba352c:  0  0             add [eax], al           
>>    216   2B @0xbfba352e:  0  0             add [eax], al           
>>    217   2B @0xbfba3530:  0  0             add [eax], al           
>>    218   2B @0xbfba3532:  0  0             add [eax], al           
>>    219   2B @0xbfba3534:  0  0             add [eax], al           
>>    220   2B @0xbfba3536:  0  0             add [eax], al           
>>    221   2B @0xbfba3538:  0  0             add [eax], al           
>>    222   2B @0xbfba353a:  0  0             add [eax], al           
>>    223   2B @0xbfba353c:  0  0             add [eax], al           
>>    224   2B @0xbfba353e:  0  0             add [eax], al           
>>    225   2B @0xbfba3540:  0  0             add [eax], al           
>>    226   2B @0xbfba3542:  0  0             add [eax], al           
>>    227   2B @0xbfba3544:  0  0             add [eax], al           
>>    228   2B @0xbfba3546:  0  0             add [eax], al           
>>    229   2B @0xbfba3548:  0  0             add [eax], al           
>>    230   2B @0xbfba354a:  0  0             add [eax], al           
>>    231   2B @0xbfba354c:  0  0             add [eax], al           
>>    232   2B @0xbfba354e:  0  0             add [eax], al           
>>    233   2B @0xbfba3550:  0  0             add [eax], al           
>>    234   2B @0xbfba3552:  0  0             add [eax], al           
>>    235   2B @0xbfba3554:  0  0             add [eax], al           
>>    236   2B @0xbfba3556:  0  0             add [eax], al           
>>    237   2B @0xbfba3558:  0  0             add [eax], al           
>>    238   2B @0xbfba355a:  0  0             add [eax], al           
>>    239   2B @0xbfba355c:  0  0             add [eax], al           
>>    240   2B @0xbfba355e:  0  0             add [eax], al           
>>    241   2B @0xbfba3560:  0  0             add [eax], al           
>>    242   2B @0xbfba3562:  0  0             add [eax], al           
>>    243   2B @0xbfba3564:  0  0             add [eax], al           
>>    244   2B @0xbfba3566:  0  0             add [eax], al           
>>    245   2B @0xbfba3568:  0  0             add [eax], al           
>>    246   2B @0xbfba356a:  0  0             add [eax], al           
>>    247   2B @0xbfba356c:  0  0             add [eax], al           
>>    248   2B @0xbfba356e:  0  0             add [eax], al           
>>    249   2B @0xbfba3570:  0  0             add [eax], al           
>>    250   2B @0xbfba3572:  0  0             add [eax], al           
>>    251   2B @0xbfba3574:  0  0             add [eax], al           
>>    252   2B @0xbfba3576:  0  0             add [eax], al           
>>    253   2B @0xbfba3578:  0  0             add [eax], al           
>>    254   2B @0xbfba357a:  0  0             add [eax], al           
>>    255   2B @0xbfba357c:  0  0             add [eax], al           
>>    256   2B @0xbfba357e:  0  0             add [eax], al           
>>    257   2B @0xbfba3580: eb 13             jmp 0x15                
>>    258   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    259   1B @0xbfba3582: 59                pop ecx                 
>>    260   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    261   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    262   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    263   1B @0xbfba3589: 43                inc ebx                 
>>    264   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    265   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    266   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (533/538) = 0.990706
>>    Mem_map start_addr: 0xbfba3380, length: 1024B, exec'ed bytes: 533, range: 538B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3380 00000000 00000000 00000000 00000000  ................
0xbfba3390 00000000 00000000 00000000 00000000  ................
0xbfba33a0 00000000 00000000 00000000 00000000  ................
0xbfba33b0 00000000 00000000 00000000 00000000  ................
0xbfba33c0 00000000 00000000 00000000 00000000  ................
0xbfba33d0 00000000 00000000 00000000 00000000  ................
0xbfba33e0 00000000 00000000 00000000 00000000  ................
0xbfba33f0 00000000 00000000 00000000 00000000  ................
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

25 [State 1] Terminating state 1 with message 'EIP reached, success'
25 [State 1] Switching from state 1 to state 0
Copied 34928 (count=1)
Deleting state 1 0x0x1fe4a020
Firing timer event
25 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 0
>> fuzzInit: datum forking for value 1
>> fuzzInit: datum forking for value 1
25 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1)
        (ReadLSB w32 0 v1_fuzz_symb_1)))
    state 2 with condition (Not (Eq false
         (Eq (w32 1)
             (ReadLSB w32 0 v1_fuzz_symb_1))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1-8048a0e
Size=2 Low=0 splitIndex=1 high=1
25 [State 0] Switching from state 0 to state 2
Copied 34928 (count=1)
Finalizing TB execution 2
s2e_dummyMainFunction
tcg-llvm-tb-1-8048a0e
25 [State 2] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1 not yet applied), shell_len: 1024, eip: 0x00000000

25 [State 2] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
25 [State 2] Leaving buffer range @0xc126f278, 102 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
25 [State 2] Killing state 2
25 [State 2] Terminating state 2 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
25 [State 2] Switching from state 2 to state 0
Copied 34928 (count=1)
Deleting state 2 0x0x1f955fd0
25 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1
>> fuzzInit: datum forking for value 2
>> fuzzInit: datum forking for value 2
25 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 2)
        (ReadLSB w32 0 v2_fuzz_symb_2)))
    state 3 with condition (Not (Eq false
         (Eq (w32 2)
             (ReadLSB w32 0 v2_fuzz_symb_2))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-2-8048a0e
Size=2 Low=0 splitIndex=1 high=1
25 [State 0] Switching from state 0 to state 3
Copied 34928 (count=1)
Finalizing TB execution 3
s2e_dummyMainFunction
tcg-llvm-tb-2-8048a0e
25 [State 3] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 2 not yet applied), shell_len: 1024, eip: 0x00000000

25 [State 3] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 265 instructions, PCs: bfba3382 bfba3384 bfba3386 bfba3388 bfba338a bfba338c bfba338e bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
25 [State 3] Terminating state 3 with message 'eliminated this false positive, execution path subset of another success'
25 [State 3] Switching from state 3 to state 0
Copied 34928 (count=1)
Deleting state 3 0x0x38e71e0
Firing timer event
26 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 2
>> fuzzInit: datum forking for value 3
>> fuzzInit: datum forking for value 3
26 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 3)
        (ReadLSB w32 0 v3_fuzz_symb_3)))
    state 4 with condition (Not (Eq false
         (Eq (w32 3)
             (ReadLSB w32 0 v3_fuzz_symb_3))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-3-8048a0e
Size=2 Low=0 splitIndex=1 high=1
26 [State 0] Switching from state 0 to state 4
Copied 34928 (count=1)
Finalizing TB execution 4
s2e_dummyMainFunction
tcg-llvm-tb-3-8048a0e
26 [State 4] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 3 not yet applied), shell_len: 1024, eip: 0x00000000

26 [State 4] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
26 [State 4] Leaving buffer range @0xc126f278, 101 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
26 [State 4] Killing state 4
26 [State 4] Terminating state 4 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
26 [State 4] Switching from state 4 to state 0
Copied 34928 (count=1)
Deleting state 4 0x0x1fb69c80
26 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 3
>> fuzzInit: datum forking for value 4
>> fuzzInit: datum forking for value 4
26 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 4)
        (ReadLSB w32 0 v4_fuzz_symb_4)))
    state 5 with condition (Not (Eq false
         (Eq (w32 4)
             (ReadLSB w32 0 v4_fuzz_symb_4))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-4-8048a0e
Size=2 Low=0 splitIndex=1 high=1
26 [State 0] Switching from state 0 to state 5
Copied 34928 (count=1)
Finalizing TB execution 5
s2e_dummyMainFunction
tcg-llvm-tb-4-8048a0e
26 [State 5] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 4 not yet applied), shell_len: 1024, eip: 0x00000000

26 [State 5] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 264 instructions, PCs: bfba3384 bfba3386 bfba3388 bfba338a bfba338c bfba338e bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
26 [State 5] Terminating state 5 with message 'eliminated this false positive, execution path subset of another success'
26 [State 5] Switching from state 5 to state 0
Copied 34928 (count=1)
Deleting state 5 0x0x38b0d30
26 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 4
>> fuzzInit: datum forking for value 5
>> fuzzInit: datum forking for value 5
27 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 5)
        (ReadLSB w32 0 v5_fuzz_symb_5)))
    state 6 with condition (Not (Eq false
         (Eq (w32 5)
             (ReadLSB w32 0 v5_fuzz_symb_5))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-5-8048a0e
Size=2 Low=0 splitIndex=1 high=1
27 [State 0] Switching from state 0 to state 6
Copied 34928 (count=1)
Finalizing TB execution 6
s2e_dummyMainFunction
tcg-llvm-tb-5-8048a0e
Firing timer event
27 [State 6] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 5 not yet applied), shell_len: 1024, eip: 0x00000000

27 [State 6] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
27 [State 6] Leaving buffer range @0xc126f278, 101 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
27 [State 6] Killing state 6
27 [State 6] Terminating state 6 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
27 [State 6] Switching from state 6 to state 0
Copied 34928 (count=1)
Deleting state 6 0x0x38b0d30
27 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 5
>> fuzzInit: datum forking for value 6
>> fuzzInit: datum forking for value 6
27 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 6)
        (ReadLSB w32 0 v6_fuzz_symb_6)))
    state 7 with condition (Not (Eq false
         (Eq (w32 6)
             (ReadLSB w32 0 v6_fuzz_symb_6))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-6-8048a0e
Size=2 Low=0 splitIndex=1 high=1
27 [State 0] Switching from state 0 to state 7
Copied 34928 (count=1)
Finalizing TB execution 7
s2e_dummyMainFunction
tcg-llvm-tb-6-8048a0e
27 [State 7] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 6 not yet applied), shell_len: 1024, eip: 0x00000000

27 [State 7] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 263 instructions, PCs: bfba3386 bfba3388 bfba338a bfba338c bfba338e bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
27 [State 7] Terminating state 7 with message 'eliminated this false positive, execution path subset of another success'
27 [State 7] Switching from state 7 to state 0
Copied 34928 (count=1)
Deleting state 7 0x0x2002d3f0
27 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 6
>> fuzzInit: datum forking for value 7
>> fuzzInit: datum forking for value 7
27 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 7)
        (ReadLSB w32 0 v7_fuzz_symb_7)))
    state 8 with condition (Not (Eq false
         (Eq (w32 7)
             (ReadLSB w32 0 v7_fuzz_symb_7))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-7-8048a0e
Size=2 Low=0 splitIndex=1 high=1
27 [State 0] Switching from state 0 to state 8
Copied 34928 (count=1)
Finalizing TB execution 8
s2e_dummyMainFunction
tcg-llvm-tb-7-8048a0e
28 [State 8] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 7 not yet applied), shell_len: 1024, eip: 0x00000000

28 [State 8] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
28 [State 8] Leaving buffer range @0xc126f278, 100 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
28 [State 8] Killing state 8
28 [State 8] Terminating state 8 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
28 [State 8] Switching from state 8 to state 0
Copied 34928 (count=1)
Deleting state 8 0x0x2024c9e0
28 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 7
>> fuzzInit: datum forking for value 8
>> fuzzInit: datum forking for value 8
28 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 8)
        (ReadLSB w32 0 v8_fuzz_symb_8)))
    state 9 with condition (Not (Eq false
         (Eq (w32 8)
             (ReadLSB w32 0 v8_fuzz_symb_8))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-8-8048a0e
Size=2 Low=0 splitIndex=1 high=1
28 [State 0] Switching from state 0 to state 9
Copied 34928 (count=1)
Finalizing TB execution 9
s2e_dummyMainFunction
tcg-llvm-tb-8-8048a0e
28 [State 9] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 8 not yet applied), shell_len: 1024, eip: 0x00000000

28 [State 9] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 262 instructions, PCs: bfba3388 bfba338a bfba338c bfba338e bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
28 [State 9] Terminating state 9 with message 'eliminated this false positive, execution path subset of another success'
28 [State 9] Switching from state 9 to state 0
Copied 34928 (count=1)
Deleting state 9 0x0x2024c9e0
28 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 8
>> fuzzInit: datum forking for value 9
>> fuzzInit: datum forking for value 9
28 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 9)
        (ReadLSB w32 0 v9_fuzz_symb_9)))
    state 10 with condition (Not (Eq false
         (Eq (w32 9)
             (ReadLSB w32 0 v9_fuzz_symb_9))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-9-8048a0e
Size=2 Low=0 splitIndex=1 high=1
28 [State 0] Switching from state 0 to state 10
Copied 34928 (count=1)
Finalizing TB execution 10
s2e_dummyMainFunction
tcg-llvm-tb-9-8048a0e
29 [State 10] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 9 not yet applied), shell_len: 1024, eip: 0x00000000

29 [State 10] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
29 [State 10] Leaving buffer range @0xc126f278, 100 IoB insns; prev insn @0xbfba3591
  1   3B @0xbfba3591:  1 4b cd          add [ebx-0x33], ecx     
29 [State 10] Killing state 10
29 [State 10] Terminating state 10 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
29 [State 10] Switching from state 10 to state 0
Copied 34928 (count=1)
Deleting state 10 0x0x20024000
29 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 9
>> fuzzInit: datum forking for value 10
>> fuzzInit: datum forking for value 10
29 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 10)
        (ReadLSB w32 0 v10_fuzz_symb_10)))
    state 11 with condition (Not (Eq false
         (Eq (w32 10)
             (ReadLSB w32 0 v10_fuzz_symb_10))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-10-8048a0e
Size=2 Low=0 splitIndex=1 high=1
29 [State 0] Switching from state 0 to state 11
Copied 34928 (count=1)
Finalizing TB execution 11
s2e_dummyMainFunction
tcg-llvm-tb-10-8048a0e
29 [State 11] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 10 not yet applied), shell_len: 1024, eip: 0x00000000

29 [State 11] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 261 instructions, PCs: bfba338a bfba338c bfba338e bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
29 [State 11] Terminating state 11 with message 'eliminated this false positive, execution path subset of another success'
29 [State 11] Switching from state 11 to state 0
Copied 34928 (count=1)
Deleting state 11 0x0x20024000
29 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 10
>> fuzzInit: datum forking for value 11
>> fuzzInit: datum forking for value 11
29 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 11)
        (ReadLSB w32 0 v11_fuzz_symb_11)))
    state 12 with condition (Not (Eq false
         (Eq (w32 11)
             (ReadLSB w32 0 v11_fuzz_symb_11))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-11-8048a0e
Size=2 Low=0 splitIndex=1 high=1
29 [State 0] Switching from state 0 to state 12
Copied 34928 (count=1)
Finalizing TB execution 12
s2e_dummyMainFunction
tcg-llvm-tb-11-8048a0e
30 [State 12] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 11 not yet applied), shell_len: 1024, eip: 0x00000000

30 [State 12] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
30 [State 12] Leaving buffer range @0xc126f278, 100 IoB insns; prev insn @0xbfba3594
  1   3B @0xbfba3594: 80 e8 e8          sub al, 0xe8            
30 [State 12] Killing state 12
30 [State 12] Terminating state 12 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
30 [State 12] Switching from state 12 to state 0
Copied 34928 (count=1)
Deleting state 12 0x0x20024000
30 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 11
>> fuzzInit: datum forking for value 12
>> fuzzInit: datum forking for value 12
30 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 12)
        (ReadLSB w32 0 v12_fuzz_symb_12)))
    state 13 with condition (Not (Eq false
         (Eq (w32 12)
             (ReadLSB w32 0 v12_fuzz_symb_12))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-12-8048a0e
Size=2 Low=0 splitIndex=1 high=1
30 [State 0] Switching from state 0 to state 13
Copied 34928 (count=1)
Finalizing TB execution 13
s2e_dummyMainFunction
tcg-llvm-tb-12-8048a0e
30 [State 13] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 12 not yet applied), shell_len: 1024, eip: 0x00000000

30 [State 13] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 260 instructions, PCs: bfba338c bfba338e bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
30 [State 13] Terminating state 13 with message 'eliminated this false positive, execution path subset of another success'
30 [State 13] Switching from state 13 to state 0
Copied 34928 (count=1)
Deleting state 13 0x0x20024000
30 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 12
>> fuzzInit: datum forking for value 13
>> fuzzInit: datum forking for value 13
30 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 13)
        (ReadLSB w32 0 v13_fuzz_symb_13)))
    state 14 with condition (Not (Eq false
         (Eq (w32 13)
             (ReadLSB w32 0 v13_fuzz_symb_13))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-13-8048a0e
Size=2 Low=0 splitIndex=1 high=1
30 [State 0] Switching from state 0 to state 14
Copied 34928 (count=1)
Finalizing TB execution 14
s2e_dummyMainFunction
tcg-llvm-tb-13-8048a0e
30 [State 14] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 13 not yet applied), shell_len: 1024, eip: 0x00000000

30 [State 14] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
31 [State 14] Leaving buffer range @0xc126f278, 100 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
31 [State 14] Killing state 14
31 [State 14] Terminating state 14 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
31 [State 14] Switching from state 14 to state 0
Copied 34928 (count=1)
Deleting state 14 0x0x20024000
31 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 13
>> fuzzInit: datum forking for value 14
>> fuzzInit: datum forking for value 14
31 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 14)
        (ReadLSB w32 0 v14_fuzz_symb_14)))
    state 15 with condition (Not (Eq false
         (Eq (w32 14)
             (ReadLSB w32 0 v14_fuzz_symb_14))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-14-8048a0e
Size=2 Low=0 splitIndex=1 high=1
31 [State 0] Switching from state 0 to state 15
Copied 34928 (count=1)
Finalizing TB execution 15
s2e_dummyMainFunction
tcg-llvm-tb-14-8048a0e
31 [State 15] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 14 not yet applied), shell_len: 1024, eip: 0x00000000

31 [State 15] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 259 instructions, PCs: bfba338e bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
31 [State 15] Terminating state 15 with message 'eliminated this false positive, execution path subset of another success'
31 [State 15] Switching from state 15 to state 0
Copied 34928 (count=1)
Deleting state 15 0x0x203610c0
31 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 14
>> fuzzInit: datum forking for value 15
>> fuzzInit: datum forking for value 15
31 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 15)
        (ReadLSB w32 0 v15_fuzz_symb_15)))
    state 16 with condition (Not (Eq false
         (Eq (w32 15)
             (ReadLSB w32 0 v15_fuzz_symb_15))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-15-8048a0e
Size=2 Low=0 splitIndex=1 high=1
31 [State 0] Switching from state 0 to state 16
Copied 34928 (count=1)
Finalizing TB execution 16
s2e_dummyMainFunction
tcg-llvm-tb-15-8048a0e
31 [State 16] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 15 not yet applied), shell_len: 1024, eip: 0x00000000

31 [State 16] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
32 [State 16] Leaving buffer range @0xc126f278, ff IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
32 [State 16] Killing state 16
32 [State 16] Terminating state 16 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
32 [State 16] Switching from state 16 to state 0
Copied 34928 (count=1)
Deleting state 16 0x0x203610c0
Firing timer event
32 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 15
>> fuzzInit: datum forking for value 16
>> fuzzInit: datum forking for value 16
32 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 16)
        (ReadLSB w32 0 v16_fuzz_symb_16)))
    state 17 with condition (Not (Eq false
         (Eq (w32 16)
             (ReadLSB w32 0 v16_fuzz_symb_16))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-16-8048a0e
Size=2 Low=0 splitIndex=1 high=1
32 [State 0] Switching from state 0 to state 17
Copied 34928 (count=1)
Finalizing TB execution 17
s2e_dummyMainFunction
tcg-llvm-tb-16-8048a0e
32 [State 17] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 16 not yet applied), shell_len: 1024, eip: 0x00000000

32 [State 17] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 258 instructions, PCs: bfba3390 bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
32 [State 17] Terminating state 17 with message 'eliminated this false positive, execution path subset of another success'
32 [State 17] Switching from state 17 to state 0
Copied 34928 (count=1)
Deleting state 17 0x0x203610c0
32 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 16
>> fuzzInit: datum forking for value 17
>> fuzzInit: datum forking for value 17
32 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 17)
        (ReadLSB w32 0 v17_fuzz_symb_17)))
    state 18 with condition (Not (Eq false
         (Eq (w32 17)
             (ReadLSB w32 0 v17_fuzz_symb_17))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-17-8048a0e
Size=2 Low=0 splitIndex=1 high=1
32 [State 0] Switching from state 0 to state 18
Copied 34928 (count=1)
Finalizing TB execution 18
s2e_dummyMainFunction
tcg-llvm-tb-17-8048a0e
32 [State 18] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 17 not yet applied), shell_len: 1024, eip: 0x00000000

32 [State 18] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
32 [State 18] Leaving buffer range @0xc126f278, fe IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
33 [State 18] Killing state 18
33 [State 18] Terminating state 18 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
33 [State 18] Switching from state 18 to state 0
Copied 34928 (count=1)
Deleting state 18 0x0x203610c0
Firing timer event
33 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 17
>> fuzzInit: datum forking for value 18
>> fuzzInit: datum forking for value 18
33 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 18)
        (ReadLSB w32 0 v18_fuzz_symb_18)))
    state 19 with condition (Not (Eq false
         (Eq (w32 18)
             (ReadLSB w32 0 v18_fuzz_symb_18))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-18-8048a0e
Size=2 Low=0 splitIndex=1 high=1
33 [State 0] Switching from state 0 to state 19
Copied 34928 (count=1)
Finalizing TB execution 19
s2e_dummyMainFunction
tcg-llvm-tb-18-8048a0e
33 [State 19] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 18 not yet applied), shell_len: 1024, eip: 0x00000000

33 [State 19] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 257 instructions, PCs: bfba3392 bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
33 [State 19] Terminating state 19 with message 'eliminated this false positive, execution path subset of another success'
33 [State 19] Switching from state 19 to state 0
Copied 34928 (count=1)
Deleting state 19 0x0x203610c0
33 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 18
>> fuzzInit: datum forking for value 19
>> fuzzInit: datum forking for value 19
33 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 19)
        (ReadLSB w32 0 v19_fuzz_symb_19)))
    state 20 with condition (Not (Eq false
         (Eq (w32 19)
             (ReadLSB w32 0 v19_fuzz_symb_19))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-19-8048a0e
Size=2 Low=0 splitIndex=1 high=1
33 [State 0] Switching from state 0 to state 20
Copied 34928 (count=1)
Finalizing TB execution 20
s2e_dummyMainFunction
tcg-llvm-tb-19-8048a0e
33 [State 20] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 19 not yet applied), shell_len: 1024, eip: 0x00000000

33 [State 20] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
33 [State 20] Leaving buffer range @0xc126f278, fd IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
33 [State 20] Killing state 20
33 [State 20] Terminating state 20 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
33 [State 20] Switching from state 20 to state 0
Copied 34928 (count=1)
Deleting state 20 0x0x203610c0
34 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 19
>> fuzzInit: datum forking for value 20
>> fuzzInit: datum forking for value 20
34 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 20)
        (ReadLSB w32 0 v20_fuzz_symb_20)))
    state 21 with condition (Not (Eq false
         (Eq (w32 20)
             (ReadLSB w32 0 v20_fuzz_symb_20))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-20-8048a0e
Size=2 Low=0 splitIndex=1 high=1
34 [State 0] Switching from state 0 to state 21
Copied 34928 (count=1)
Finalizing TB execution 21
s2e_dummyMainFunction
tcg-llvm-tb-20-8048a0e
Firing timer event
34 [State 21] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 20 not yet applied), shell_len: 1024, eip: 0x00000000

34 [State 21] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 256 instructions, PCs: bfba3394 bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
34 [State 21] Terminating state 21 with message 'eliminated this false positive, execution path subset of another success'
34 [State 21] Switching from state 21 to state 0
Copied 34928 (count=1)
Deleting state 21 0x0x203610c0
34 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 20
>> fuzzInit: datum forking for value 21
>> fuzzInit: datum forking for value 21
34 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 21)
        (ReadLSB w32 0 v21_fuzz_symb_21)))
    state 22 with condition (Not (Eq false
         (Eq (w32 21)
             (ReadLSB w32 0 v21_fuzz_symb_21))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-21-8048a0e
Size=2 Low=0 splitIndex=1 high=1
34 [State 0] Switching from state 0 to state 22
Copied 34928 (count=1)
Finalizing TB execution 22
s2e_dummyMainFunction
tcg-llvm-tb-21-8048a0e
34 [State 22] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 21 not yet applied), shell_len: 1024, eip: 0x00000000

34 [State 22] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
34 [State 22] Leaving buffer range @0xc126f278, fc IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
34 [State 22] Killing state 22
34 [State 22] Terminating state 22 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
34 [State 22] Switching from state 22 to state 0
Copied 34928 (count=1)
Deleting state 22 0x0x203610c0
35 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 21
>> fuzzInit: datum forking for value 22
>> fuzzInit: datum forking for value 22
>> fuzzInit: datum forking for value 22
35 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 22)
        (ReadLSB w32 0 v22_fuzz_symb_22)))
    state 23 with condition (Not (Eq false
         (Eq (w32 22)
             (ReadLSB w32 0 v22_fuzz_symb_22))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-22-8048a0e
Size=2 Low=0 splitIndex=1 high=1
35 [State 0] Switching from state 0 to state 23
Copied 34928 (count=1)
Finalizing TB execution 23
s2e_dummyMainFunction
tcg-llvm-tb-22-8048a0e
Firing timer event
35 [State 23] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 22 not yet applied), shell_len: 1024, eip: 0x00000000

35 [State 23] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 255 instructions, PCs: bfba3396 bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
35 [State 23] Terminating state 23 with message 'eliminated this false positive, execution path subset of another success'
35 [State 23] Switching from state 23 to state 0
Copied 34928 (count=1)
Deleting state 23 0x0x1ff6ed00
35 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 22
>> fuzzInit: datum forking for value 23
>> fuzzInit: datum forking for value 23
35 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 23)
        (ReadLSB w32 0 v23_fuzz_symb_23)))
    state 24 with condition (Not (Eq false
         (Eq (w32 23)
             (ReadLSB w32 0 v23_fuzz_symb_23))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-23-8048a0e
Size=2 Low=0 splitIndex=1 high=1
35 [State 0] Switching from state 0 to state 24
Copied 34928 (count=1)
Finalizing TB execution 24
s2e_dummyMainFunction
tcg-llvm-tb-23-8048a0e
35 [State 24] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 23 not yet applied), shell_len: 1024, eip: 0x00000000

35 [State 24] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
35 [State 24] Leaving buffer range @0xc126f278, fb IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
35 [State 24] Killing state 24
35 [State 24] Terminating state 24 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
35 [State 24] Switching from state 24 to state 0
Copied 34928 (count=1)
Deleting state 24 0x0x1ff6ed00
36 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 23
>> fuzzInit: datum forking for value 24
>> fuzzInit: datum forking for value 24
36 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 24)
        (ReadLSB w32 0 v24_fuzz_symb_24)))
    state 25 with condition (Not (Eq false
         (Eq (w32 24)
             (ReadLSB w32 0 v24_fuzz_symb_24))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-24-8048a0e
Size=2 Low=0 splitIndex=1 high=1
36 [State 0] Switching from state 0 to state 25
Copied 34928 (count=1)
Finalizing TB execution 25
s2e_dummyMainFunction
tcg-llvm-tb-24-8048a0e
Firing timer event
36 [State 25] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 24 not yet applied), shell_len: 1024, eip: 0x00000000

36 [State 25] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 254 instructions, PCs: bfba3398 bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
36 [State 25] Terminating state 25 with message 'eliminated this false positive, execution path subset of another success'
36 [State 25] Switching from state 25 to state 0
Copied 34928 (count=1)
Deleting state 25 0x0x1ff6ed00
36 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 24
>> fuzzInit: datum forking for value 25
>> fuzzInit: datum forking for value 25
36 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 25)
        (ReadLSB w32 0 v25_fuzz_symb_25)))
    state 26 with condition (Not (Eq false
         (Eq (w32 25)
             (ReadLSB w32 0 v25_fuzz_symb_25))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-25-8048a0e
Size=2 Low=0 splitIndex=1 high=1
36 [State 0] Switching from state 0 to state 26
Copied 34928 (count=1)
Finalizing TB execution 26
s2e_dummyMainFunction
tcg-llvm-tb-25-8048a0e
36 [State 26] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 25 not yet applied), shell_len: 1024, eip: 0x00000000

36 [State 26] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
36 [State 26] Leaving buffer range @0xc126f278, fa IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
36 [State 26] Killing state 26
36 [State 26] Terminating state 26 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
36 [State 26] Switching from state 26 to state 0
Copied 34928 (count=1)
Deleting state 26 0x0x1ff6ed00
37 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 25
>> fuzzInit: datum forking for value 26
>> fuzzInit: datum forking for value 26
37 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 26)
        (ReadLSB w32 0 v26_fuzz_symb_26)))
    state 27 with condition (Not (Eq false
         (Eq (w32 26)
             (ReadLSB w32 0 v26_fuzz_symb_26))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-26-8048a0e
Size=2 Low=0 splitIndex=1 high=1
37 [State 0] Switching from state 0 to state 27
Copied 34928 (count=1)
Finalizing TB execution 27
s2e_dummyMainFunction
tcg-llvm-tb-26-8048a0e
Firing timer event
37 [State 27] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 26 not yet applied), shell_len: 1024, eip: 0x00000000

37 [State 27] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 253 instructions, PCs: bfba339a bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
37 [State 27] Terminating state 27 with message 'eliminated this false positive, execution path subset of another success'
37 [State 27] Switching from state 27 to state 0
Copied 34928 (count=1)
Deleting state 27 0x0x207c2c60
37 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 26
>> fuzzInit: datum forking for value 27
>> fuzzInit: datum forking for value 27
37 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 27)
        (ReadLSB w32 0 v27_fuzz_symb_27)))
    state 28 with condition (Not (Eq false
         (Eq (w32 27)
             (ReadLSB w32 0 v27_fuzz_symb_27))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-27-8048a0e
Size=2 Low=0 splitIndex=1 high=1
37 [State 0] Switching from state 0 to state 28
Copied 34928 (count=1)
Finalizing TB execution 28
s2e_dummyMainFunction
tcg-llvm-tb-27-8048a0e
37 [State 28] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 27 not yet applied), shell_len: 1024, eip: 0x00000000

37 [State 28] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
37 [State 28] Leaving buffer range @0xc126f278, f9 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
37 [State 28] Killing state 28
37 [State 28] Terminating state 28 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
37 [State 28] Switching from state 28 to state 0
Copied 34928 (count=1)
Deleting state 28 0x0x207c2c60
38 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 27
>> fuzzInit: datum forking for value 28
>> fuzzInit: datum forking for value 28
38 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 28)
        (ReadLSB w32 0 v28_fuzz_symb_28)))
    state 29 with condition (Not (Eq false
         (Eq (w32 28)
             (ReadLSB w32 0 v28_fuzz_symb_28))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-28-8048a0e
Size=2 Low=0 splitIndex=1 high=1
38 [State 0] Switching from state 0 to state 29
Copied 34928 (count=1)
Finalizing TB execution 29
s2e_dummyMainFunction
tcg-llvm-tb-28-8048a0e
Firing timer event
38 [State 29] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 28 not yet applied), shell_len: 1024, eip: 0x00000000

38 [State 29] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 252 instructions, PCs: bfba339c bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
38 [State 29] Terminating state 29 with message 'eliminated this false positive, execution path subset of another success'
38 [State 29] Switching from state 29 to state 0
Copied 34928 (count=1)
Deleting state 29 0x0x207c2c60
38 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 28
>> fuzzInit: datum forking for value 29
>> fuzzInit: datum forking for value 29
38 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 29)
        (ReadLSB w32 0 v29_fuzz_symb_29)))
    state 30 with condition (Not (Eq false
         (Eq (w32 29)
             (ReadLSB w32 0 v29_fuzz_symb_29))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-29-8048a0e
Size=2 Low=0 splitIndex=1 high=1
38 [State 0] Switching from state 0 to state 30
Copied 34928 (count=1)
Finalizing TB execution 30
s2e_dummyMainFunction
tcg-llvm-tb-29-8048a0e
38 [State 30] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 29 not yet applied), shell_len: 1024, eip: 0x00000000

38 [State 30] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
38 [State 30] Leaving buffer range @0xc126f278, f8 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
38 [State 30] Killing state 30
38 [State 30] Terminating state 30 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
38 [State 30] Switching from state 30 to state 0
Copied 34928 (count=1)
Deleting state 30 0x0x207c2c60
38 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 29
>> fuzzInit: datum forking for value 30
>> fuzzInit: datum forking for value 30
39 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 30)
        (ReadLSB w32 0 v30_fuzz_symb_30)))
    state 31 with condition (Not (Eq false
         (Eq (w32 30)
             (ReadLSB w32 0 v30_fuzz_symb_30))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-30-8048a0e
Size=2 Low=0 splitIndex=1 high=1
39 [State 0] Switching from state 0 to state 31
Copied 34928 (count=1)
Finalizing TB execution 31
s2e_dummyMainFunction
tcg-llvm-tb-30-8048a0e
39 [State 31] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 30 not yet applied), shell_len: 1024, eip: 0x00000000

39 [State 31] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 251 instructions, PCs: bfba339e bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
39 [State 31] Terminating state 31 with message 'eliminated this false positive, execution path subset of another success'
39 [State 31] Switching from state 31 to state 0
Copied 34928 (count=1)
Deleting state 31 0x0x207c2c60
39 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 30
>> fuzzInit: datum forking for value 31
>> fuzzInit: datum forking for value 31
39 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 31)
        (ReadLSB w32 0 v31_fuzz_symb_31)))
    state 32 with condition (Not (Eq false
         (Eq (w32 31)
             (ReadLSB w32 0 v31_fuzz_symb_31))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-31-8048a0e
Size=2 Low=0 splitIndex=1 high=1
39 [State 0] Switching from state 0 to state 32
Copied 34928 (count=1)
Finalizing TB execution 32
s2e_dummyMainFunction
tcg-llvm-tb-31-8048a0e
39 [State 32] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 31 not yet applied), shell_len: 1024, eip: 0x00000000

39 [State 32] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
39 [State 32] Leaving buffer range @0xc126f278, f7 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
39 [State 32] Killing state 32
39 [State 32] Terminating state 32 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
39 [State 32] Switching from state 32 to state 0
Copied 34928 (count=1)
Deleting state 32 0x0x207c1b10
39 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 31
>> fuzzInit: datum forking for value 32
>> fuzzInit: datum forking for value 32
40 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 32)
        (ReadLSB w32 0 v32_fuzz_symb_32)))
    state 33 with condition (Not (Eq false
         (Eq (w32 32)
             (ReadLSB w32 0 v32_fuzz_symb_32))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-32-8048a0e
Size=2 Low=0 splitIndex=1 high=1
40 [State 0] Switching from state 0 to state 33
Copied 34928 (count=1)
Finalizing TB execution 33
s2e_dummyMainFunction
tcg-llvm-tb-32-8048a0e
40 [State 33] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 32 not yet applied), shell_len: 1024, eip: 0x00000000

40 [State 33] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 250 instructions, PCs: bfba33a0 bfba33a2 bfba33a4 bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
40 [State 33] Terminating state 33 with message 'eliminated this false positive, execution path subset of another success'
40 [State 33] Switching from state 33 to state 0
Copied 34928 (count=1)
Deleting state 33 0x0x207c1b10
40 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 32
>> fuzzInit: datum forking for value 33
>> fuzzInit: datum forking for value 33
40 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 33)
        (ReadLSB w32 0 v33_fuzz_symb_33)))
    state 34 with condition (Not (Eq false
         (Eq (w32 33)
             (ReadLSB w32 0 v33_fuzz_symb_33))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-33-8048a0e
Size=2 Low=0 splitIndex=1 high=1
40 [State 0] Switching from state 0 to state 34
Copied 34928 (count=1)
Finalizing TB execution 34
s2e_dummyMainFunction
tcg-llvm-tb-33-8048a0e
40 [State 34] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 33 not yet applied), shell_len: 1024, eip: 0x00000000

40 [State 34] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
40 [State 34] Leaving buffer range @0xc126f278, f6 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
40 [State 34] Killing state 34
40 [State 34] Terminating state 34 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
40 [State 34] Switching from state 34 to state 0
Copied 34928 (count=1)
Deleting state 34 0x0x207c1b10
40 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 33
>> fuzzInit: datum forking for value 34
>> fuzzInit: datum forking for value 34
41 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 34)
        (ReadLSB w32 0 v34_fuzz_symb_34)))
    state 35 with condition (Not (Eq false
         (Eq (w32 34)
             (ReadLSB w32 0 v34_fuzz_symb_34))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-34-8048a0e
Size=2 Low=0 splitIndex=1 high=1
41 [State 0] Switching from state 0 to state 35
Copied 34928 (count=1)
Finalizing TB execution 35
s2e_dummyMainFunction
tcg-llvm-tb-34-8048a0e
41 [State 35] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 34 not yet applied), shell_len: 1024, eip: 0x00000000

41 [State 35] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
41 [State 35] Leaving buffer range @0xc1046a95, 94 IoB insns; prev insn @0xbfba34c8
  1   2B @0xbfba34c8:  0  0             add [eax], al           
41 [State 35] Entering buffer range @0xbfba34ca, 1857 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 2106. This is the 2th success
>> Success densities, overlay: 0.990079; avg: 0.990079
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33a2:  0  0             add [eax], al           
>>      2   2B @0xbfba33a4:  0  0             add [eax], al           
>>      3   2B @0xbfba33a6:  0  0             add [eax], al           
>>      4   2B @0xbfba33a8:  0  0             add [eax], al           
>>      5   2B @0xbfba33aa:  0  0             add [eax], al           
>>      6   2B @0xbfba33ac:  0  0             add [eax], al           
>>      7   2B @0xbfba33ae:  0  0             add [eax], al           
>>      8   2B @0xbfba33b0:  0  0             add [eax], al           
>>      9   2B @0xbfba33b2:  0  0             add [eax], al           
>>     10   2B @0xbfba33b4:  0  0             add [eax], al           
>>     11   2B @0xbfba33b6:  0  0             add [eax], al           
>>     12   2B @0xbfba33b8:  0  0             add [eax], al           
>>     13   2B @0xbfba33ba:  0  0             add [eax], al           
>>     14   2B @0xbfba33bc:  0  0             add [eax], al           
>>     15   2B @0xbfba33be:  0  0             add [eax], al           
>>     16   2B @0xbfba33c0:  0  0             add [eax], al           
>>     17   2B @0xbfba33c2:  0  0             add [eax], al           
>>     18   2B @0xbfba33c4:  0  0             add [eax], al           
>>     19   2B @0xbfba33c6:  0  0             add [eax], al           
>>     20   2B @0xbfba33c8:  0  0             add [eax], al           
>>     21   2B @0xbfba33ca:  0  0             add [eax], al           
>>     22   2B @0xbfba33cc:  0  0             add [eax], al           
>>     23   2B @0xbfba33ce:  0  0             add [eax], al           
>>     24   2B @0xbfba33d0:  0  0             add [eax], al           
>>     25   2B @0xbfba33d2:  0  0             add [eax], al           
>>     26   2B @0xbfba33d4:  0  0             add [eax], al           
>>     27   2B @0xbfba33d6:  0  0             add [eax], al           
>>     28   2B @0xbfba33d8:  0  0             add [eax], al           
>>     29   2B @0xbfba33da:  0  0             add [eax], al           
>>     30   2B @0xbfba33dc:  0  0             add [eax], al           
>>     31   2B @0xbfba33de:  0  0             add [eax], al           
>>     32   2B @0xbfba33e0:  0  0             add [eax], al           
>>     33   2B @0xbfba33e2:  0  0             add [eax], al           
>>     34   2B @0xbfba33e4:  0  0             add [eax], al           
>>     35   2B @0xbfba33e6:  0  0             add [eax], al           
>>     36   2B @0xbfba33e8:  0  0             add [eax], al           
>>     37   2B @0xbfba33ea:  0  0             add [eax], al           
>>     38   2B @0xbfba33ec:  0  0             add [eax], al           
>>     39   2B @0xbfba33ee:  0  0             add [eax], al           
>>     40   2B @0xbfba33f0:  0  0             add [eax], al           
>>     41   2B @0xbfba33f2:  0  0             add [eax], al           
>>     42   2B @0xbfba33f4:  0  0             add [eax], al           
>>     43   2B @0xbfba33f6:  0  0             add [eax], al           
>>     44   2B @0xbfba33f8:  0  0             add [eax], al           
>>     45   2B @0xbfba33fa:  0  0             add [eax], al           
>>     46   2B @0xbfba33fc:  0  0             add [eax], al           
>>     47   2B @0xbfba33fe:  0  0             add [eax], al           
>>     48   2B @0xbfba3400:  0  0             add [eax], al           
>>     49   2B @0xbfba3402:  0  0             add [eax], al           
>>     50   2B @0xbfba3404:  0  0             add [eax], al           
>>     51   2B @0xbfba3406:  0  0             add [eax], al           
>>     52   2B @0xbfba3408:  0  0             add [eax], al           
>>     53   2B @0xbfba340a:  0  0             add [eax], al           
>>     54   2B @0xbfba340c:  0  0             add [eax], al           
>>     55   2B @0xbfba340e:  0  0             add [eax], al           
>>     56   2B @0xbfba3410:  0  0             add [eax], al           
>>     57   2B @0xbfba3412:  0  0             add [eax], al           
>>     58   2B @0xbfba3414:  0  0             add [eax], al           
>>     59   2B @0xbfba3416:  0  0             add [eax], al           
>>     60   2B @0xbfba3418:  0  0             add [eax], al           
>>     61   2B @0xbfba341a:  0  0             add [eax], al           
>>     62   2B @0xbfba341c:  0  0             add [eax], al           
>>     63   2B @0xbfba341e:  0  0             add [eax], al           
>>     64   2B @0xbfba3420:  0  0             add [eax], al           
>>     65   2B @0xbfba3422:  0  0             add [eax], al           
>>     66   2B @0xbfba3424:  0  0             add [eax], al           
>>     67   2B @0xbfba3426:  0  0             add [eax], al           
>>     68   2B @0xbfba3428:  0  0             add [eax], al           
>>     69   2B @0xbfba342a:  0  0             add [eax], al           
>>     70   2B @0xbfba342c:  0  0             add [eax], al           
>>     71   2B @0xbfba342e:  0  0             add [eax], al           
>>     72   2B @0xbfba3430:  0  0             add [eax], al           
>>     73   2B @0xbfba3432:  0  0             add [eax], al           
>>     74   2B @0xbfba3434:  0  0             add [eax], al           
>>     75   2B @0xbfba3436:  0  0             add [eax], al           
>>     76   2B @0xbfba3438:  0  0             add [eax], al           
>>     77   2B @0xbfba343a:  0  0             add [eax], al           
>>     78   2B @0xbfba343c:  0  0             add [eax], al           
>>     79   2B @0xbfba343e:  0  0             add [eax], al           
>>     80   2B @0xbfba3440:  0  0             add [eax], al           
>>     81   2B @0xbfba3442:  0  0             add [eax], al           
>>     82   2B @0xbfba3444:  0  0             add [eax], al           
>>     83   2B @0xbfba3446:  0  0             add [eax], al           
>>     84   2B @0xbfba3448:  0  0             add [eax], al           
>>     85   2B @0xbfba344a:  0  0             add [eax], al           
>>     86   2B @0xbfba344c:  0  0             add [eax], al           
>>     87   2B @0xbfba344e:  0  0             add [eax], al           
>>     88   2B @0xbfba3450:  0  0             add [eax], al           
>>     89   2B @0xbfba3452:  0  0             add [eax], al           
>>     90   2B @0xbfba3454:  0  0             add [eax], al           
>>     91   2B @0xbfba3456:  0  0             add [eax], al           
>>     92   2B @0xbfba3458:  0  0             add [eax], al           
>>     93   2B @0xbfba345a:  0  0             add [eax], al           
>>     94   2B @0xbfba345c:  0  0             add [eax], al           
>>     95   2B @0xbfba345e:  0  0             add [eax], al           
>>     96   2B @0xbfba3460:  0  0             add [eax], al           
>>     97   2B @0xbfba3462:  0  0             add [eax], al           
>>     98   2B @0xbfba3464:  0  0             add [eax], al           
>>     99   2B @0xbfba3466:  0  0             add [eax], al           
>>    100   2B @0xbfba3468:  0  0             add [eax], al           
>>    101   2B @0xbfba346a:  0  0             add [eax], al           
>>    102   2B @0xbfba346c:  0  0             add [eax], al           
>>    103   2B @0xbfba346e:  0  0             add [eax], al           
>>    104   2B @0xbfba3470:  0  0             add [eax], al           
>>    105   2B @0xbfba3472:  0  0             add [eax], al           
>>    106   2B @0xbfba3474:  0  0             add [eax], al           
>>    107   2B @0xbfba3476:  0  0             add [eax], al           
>>    108   2B @0xbfba3478:  0  0             add [eax], al           
>>    109   2B @0xbfba347a:  0  0             add [eax], al           
>>    110   2B @0xbfba347c:  0  0             add [eax], al           
>>    111   2B @0xbfba347e:  0  0             add [eax], al           
>>    112   2B @0xbfba3480:  0  0             add [eax], al           
>>    113   2B @0xbfba3482:  0  0             add [eax], al           
>>    114   2B @0xbfba3484:  0  0             add [eax], al           
>>    115   2B @0xbfba3486:  0  0             add [eax], al           
>>    116   2B @0xbfba3488:  0  0             add [eax], al           
>>    117   2B @0xbfba348a:  0  0             add [eax], al           
>>    118   2B @0xbfba348c:  0  0             add [eax], al           
>>    119   2B @0xbfba348e:  0  0             add [eax], al           
>>    120   2B @0xbfba3490:  0  0             add [eax], al           
>>    121   2B @0xbfba3492:  0  0             add [eax], al           
>>    122   2B @0xbfba3494:  0  0             add [eax], al           
>>    123   2B @0xbfba3496:  0  0             add [eax], al           
>>    124   2B @0xbfba3498:  0  0             add [eax], al           
>>    125   2B @0xbfba349a:  0  0             add [eax], al           
>>    126   2B @0xbfba349c:  0  0             add [eax], al           
>>    127   2B @0xbfba349e:  0  0             add [eax], al           
>>    128   2B @0xbfba34a0:  0  0             add [eax], al           
>>    129   2B @0xbfba34a2:  0  0             add [eax], al           
>>    130   2B @0xbfba34a4:  0  0             add [eax], al           
>>    131   2B @0xbfba34a6:  0  0             add [eax], al           
>>    132   2B @0xbfba34a8:  0  0             add [eax], al           
>>    133   2B @0xbfba34aa:  0  0             add [eax], al           
>>    134   2B @0xbfba34ac:  0  0             add [eax], al           
>>    135   2B @0xbfba34ae:  0  0             add [eax], al           
>>    136   2B @0xbfba34b0:  0  0             add [eax], al           
>>    137   2B @0xbfba34b2:  0  0             add [eax], al           
>>    138   2B @0xbfba34b4:  0  0             add [eax], al           
>>    139   2B @0xbfba34b6:  0  0             add [eax], al           
>>    140   2B @0xbfba34b8:  0  0             add [eax], al           
>>    141   2B @0xbfba34ba:  0  0             add [eax], al           
>>    142   2B @0xbfba34bc:  0  0             add [eax], al           
>>    143   2B @0xbfba34be:  0  0             add [eax], al           
>>    144   2B @0xbfba34c0:  0  0             add [eax], al           
>>    145   2B @0xbfba34c2:  0  0             add [eax], al           
>>    146   2B @0xbfba34c4:  0  0             add [eax], al           
>>    147   2B @0xbfba34c6:  0  0             add [eax], al           
>>    148   2B @0xbfba34c8:  0  0             add [eax], al           
>>    149   2B @0xc1046a95: OOB, bytes not captured
>>    150   2B @0xc1046a97: OOB, bytes not captured
>>    151   5B @0xc1046a99: OOB, bytes not captured
>>    152   1B @0xc10468ae: OOB, bytes not captured
>>    153   1B @0xc10468af: OOB, bytes not captured
>>    154   1B @0xc10468b0: OOB, bytes not captured
>>    155   2B @0xc10468b1: OOB, bytes not captured
>>    156   1B @0xc10468b3: OOB, bytes not captured
>>    157   3B @0xc10468b4: OOB, bytes not captured
>>    158   3B @0xc10468b7: OOB, bytes not captured
>>    159   3B @0xc10468ba: OOB, bytes not captured
>>    160   4B @0xc10468bd: OOB, bytes not captured
>>    161   2B @0xc10468c1: OOB, bytes not captured
>>    162   1B @0xc10468c3: OOB, bytes not captured
>>    163   1B @0xc10468c4: OOB, bytes not captured
>>    164   4B @0xc10468c5: OOB, bytes not captured
>>    165   3B @0xc10468c9: OOB, bytes not captured
>>    166   2B @0xc10468cc: OOB, bytes not captured
>>    167   2B @0xc10468dd: OOB, bytes not captured
>>    168   5B @0xc10468df: OOB, bytes not captured
>>    169   7B @0xc1046456: OOB, bytes not captured
>>    170   1B @0xc104645d: OOB, bytes not captured
>>    171   2B @0xc104645e: OOB, bytes not captured
>>    172   1B @0xc1046460: OOB, bytes not captured
>>    173   2B @0xc1046461: OOB, bytes not captured
>>    174   1B @0xc1046479: OOB, bytes not captured
>>    175   1B @0xc104647a: OOB, bytes not captured
>>    176   1B @0xc104647b: OOB, bytes not captured
>>    177   5B @0xc10468e4: OOB, bytes not captured
>>    178   2B @0xc10468e9: OOB, bytes not captured
>>    179   2B @0xc10468eb: OOB, bytes not captured
>>    180   4B @0xc10468ed: OOB, bytes not captured
>>    181   5B @0xc10468f1: OOB, bytes not captured
>>    182   1B @0xc10466dd: OOB, bytes not captured
>>    183   2B @0xc10466de: OOB, bytes not captured
>>    184   1B @0xc10466e0: OOB, bytes not captured
>>    185   2B @0xc10466e1: OOB, bytes not captured
>>    186   1B @0xc10466e3: OOB, bytes not captured
>>    187   2B @0xc10466e4: OOB, bytes not captured
>>    188   4B @0xc10466e6: OOB, bytes not captured
>>    189   2B @0xc10466ea: OOB, bytes not captured
>>    190   3B @0xc10466ec: OOB, bytes not captured
>>    191   2B @0xc10466ef: OOB, bytes not captured
>>    192   5B @0xc10466f1: OOB, bytes not captured
>>    193   2B @0xc11397c4: OOB, bytes not captured
>>    194   2B @0xc11397c6: OOB, bytes not captured
>>    195   2B @0xc11397c8: OOB, bytes not captured
>>    196   3B @0xc11397ca: OOB, bytes not captured
>>    197   2B @0xc11397cd: OOB, bytes not captured
>>    198   2B @0xc11397cf: OOB, bytes not captured
>>    199   3B @0xc11397d1: OOB, bytes not captured
>>    200   2B @0xc11397d4: OOB, bytes not captured
>>    201   2B @0xc11397d6: OOB, bytes not captured
>>    202   2B @0xc11397e9: OOB, bytes not captured
>>    203   2B @0xc11397eb: OOB, bytes not captured
>>    204   3B @0xc11397ed: OOB, bytes not captured
>>    205   2B @0xc11397f0: OOB, bytes not captured
>>    206   3B @0xc11397f2: OOB, bytes not captured
>>    207   2B @0xc11397f5: OOB, bytes not captured
>>    208   2B @0xc11397f7: OOB, bytes not captured
>>    209   1B @0xc11397f9: OOB, bytes not captured
>>    210   5B @0xc10466f6: OOB, bytes not captured
>>    211   3B @0xc10466fb: OOB, bytes not captured
>>    212   2B @0xc10466fe: OOB, bytes not captured
>>    213   3B @0xc1046735: OOB, bytes not captured
>>    214   2B @0xc1046738: OOB, bytes not captured
>>    215   5B @0xc104673a: OOB, bytes not captured
>>    216   1B @0xc113959b: OOB, bytes not captured
>>    217   2B @0xc113959c: OOB, bytes not captured
>>    218   1B @0xc113959e: OOB, bytes not captured
>>    219   1B @0xc113959f: OOB, bytes not captured
>>    220   2B @0xc11395a0: OOB, bytes not captured
>>    221   1B @0xc11395a2: OOB, bytes not captured
>>    222   3B @0xc11395a3: OOB, bytes not captured
>>    223   3B @0xc11395a6: OOB, bytes not captured
>>    224   3B @0xc11395a9: OOB, bytes not captured
>>    225   2B @0xc11395ac: OOB, bytes not captured
>>    226   2B @0xc11395ae: OOB, bytes not captured
>>    227   2B @0xc11395b0: OOB, bytes not captured
>>    228   5B @0xc11395b2: OOB, bytes not captured
>>    229   2B @0xc113963c: OOB, bytes not captured
>>    230   2B @0xc113963e: OOB, bytes not captured
>>    231   3B @0xc1139640: OOB, bytes not captured
>>    232   3B @0xc1139643: OOB, bytes not captured
>>    233   2B @0xc1139646: OOB, bytes not captured
>>    234   2B @0xc1139648: OOB, bytes not captured
>>    235   4B @0xc113964a: OOB, bytes not captured
>>    236   2B @0xc113964e: OOB, bytes not captured
>>    237   2B @0xc1139659: OOB, bytes not captured
>>    238   2B @0xc113965b: OOB, bytes not captured
>>    239   3B @0xc113965d: OOB, bytes not captured
>>    240   2B @0xc1139660: OOB, bytes not captured
>>    241   3B @0xc1139662: OOB, bytes not captured
>>    242   2B @0xc1139665: OOB, bytes not captured
>>    243   5B @0xc113966f: OOB, bytes not captured
>>    244   2B @0xc1139674: OOB, bytes not captured
>>    245   6B @0xc1139676: OOB, bytes not captured
>>    246   1B @0xc1139799: OOB, bytes not captured
>>    247   1B @0xc113979a: OOB, bytes not captured
>>    248   1B @0xc113979b: OOB, bytes not captured
>>    249   1B @0xc113979c: OOB, bytes not captured
>>    250   1B @0xc113979d: OOB, bytes not captured
>>    251   1B @0xc113979e: OOB, bytes not captured
>>    252   1B @0xc113979f: OOB, bytes not captured
>>    253   3B @0xc104673f: OOB, bytes not captured
>>    254   1B @0xc1046742: OOB, bytes not captured
>>    255   1B @0xc1046743: OOB, bytes not captured
>>    256   1B @0xc1046744: OOB, bytes not captured
>>    257   1B @0xc1046745: OOB, bytes not captured
>>    258   7B @0xc10468f6: OOB, bytes not captured
>>    259   1B @0xc10468fd: OOB, bytes not captured
>>    260   2B @0xc10468fe: OOB, bytes not captured
>>    261   3B @0xc1046919: OOB, bytes not captured
>>    262   2B @0xc104691c: OOB, bytes not captured
>>    263   7B @0xc104691e: OOB, bytes not captured
>>    264   2B @0xc1046925: OOB, bytes not captured
>>    265   2B @0xc1046940: OOB, bytes not captured
>>    266   2B @0xc1046942: OOB, bytes not captured
>>    267   3B @0xc1046896: OOB, bytes not captured
>>    268   7B @0xc1046899: OOB, bytes not captured
>>    269   2B @0xc10468a0: OOB, bytes not captured
>>    270   2B @0xc10468a2: OOB, bytes not captured
>>    271   2B @0xc10468a4: OOB, bytes not captured
>>    272   5B @0xc10468a6: OOB, bytes not captured
>>    273   2B @0xc102d73b: OOB, bytes not captured
>>    274   5B @0xc102d73d: OOB, bytes not captured
>>    275   5B @0xc102d742: OOB, bytes not captured
>>    276   1B @0xc102d479: OOB, bytes not captured
>>    277   1B @0xc102d47a: OOB, bytes not captured
>>    278   2B @0xc102d47b: OOB, bytes not captured
>>    279   1B @0xc102d47d: OOB, bytes not captured
>>    280   2B @0xc102d47e: OOB, bytes not captured
>>    281   1B @0xc102d480: OOB, bytes not captured
>>    282   3B @0xc102d481: OOB, bytes not captured
>>    283   3B @0xc102d484: OOB, bytes not captured
>>    284   2B @0xc102d487: OOB, bytes not captured
>>    285   7B @0xc102d489: OOB, bytes not captured
>>    286   3B @0xc102d490: OOB, bytes not captured
>>    287   4B @0xc102d493: OOB, bytes not captured
>>    288   4B @0xc102d497: OOB, bytes not captured
>>    289   2B @0xc102d49b: OOB, bytes not captured
>>    290   5B @0xc102d49d: OOB, bytes not captured
>>    291   1B @0xc102570d: OOB, bytes not captured
>>    292   2B @0xc102570e: OOB, bytes not captured
>>    293   1B @0xc1025710: OOB, bytes not captured
>>    294   2B @0xc1025711: OOB, bytes not captured
>>    295   1B @0xc1025713: OOB, bytes not captured
>>    296   5B @0xc1025714: OOB, bytes not captured
>>    297   1B @0xc1025719: OOB, bytes not captured
>>    298   3B @0xc102571a: OOB, bytes not captured
>>    299   1B @0xc102571d: OOB, bytes not captured
>>    300   1B @0xc102571e: OOB, bytes not captured
>>    301   4B @0xc102571f: OOB, bytes not captured
>>    302   2B @0xc1025723: OOB, bytes not captured
>>    303   1B @0xc1025725: OOB, bytes not captured
>>    304   1B @0xc1025726: OOB, bytes not captured
>>    305   4B @0xc1025727: OOB, bytes not captured
>>    306   2B @0xc102572b: OOB, bytes not captured
>>    307   3B @0xc102572d: OOB, bytes not captured
>>    308   2B @0xc1025730: OOB, bytes not captured
>>    309   3B @0xc1025732: OOB, bytes not captured
>>    310   7B @0xc1025735: OOB, bytes not captured
>>    311   2B @0xc102573c: OOB, bytes not captured
>>    312   5B @0xc102573e: OOB, bytes not captured
>>    313   3B @0xc1025743: OOB, bytes not captured
>>    314   3B @0xc1025746: OOB, bytes not captured
>>    315   7B @0xc1025749: OOB, bytes not captured
>>    316   3B @0xc1025750: OOB, bytes not captured
>>    317   2B @0xc1025753: OOB, bytes not captured
>>    318   2B @0xc1025755: OOB, bytes not captured
>>    319   1B @0xc1025757: OOB, bytes not captured
>>    320   2B @0xc1025758: OOB, bytes not captured
>>    321   1B @0xc102575a: OOB, bytes not captured
>>    322   1B @0xc102575b: OOB, bytes not captured
>>    323   1B @0xc102575c: OOB, bytes not captured
>>    324   1B @0xc102575d: OOB, bytes not captured
>>    325   1B @0xc102575e: OOB, bytes not captured
>>    326   2B @0xc102d4a2: OOB, bytes not captured
>>    327   5B @0xc102d4a4: OOB, bytes not captured
>>    328   2B @0xc102d4a9: OOB, bytes not captured
>>    329   2B @0xc102d4ab: OOB, bytes not captured
>>    330   2B @0xc102d4ad: OOB, bytes not captured
>>    331   4B @0xc102d4be: OOB, bytes not captured
>>    332   2B @0xc102d4c2: OOB, bytes not captured
>>    333   3B @0xc102d4d3: OOB, bytes not captured
>>    334   2B @0xc102d4d6: OOB, bytes not captured
>>    335   3B @0xc102d4d8: OOB, bytes not captured
>>    336   4B @0xc102d4db: OOB, bytes not captured
>>    337   6B @0xc102d4df: OOB, bytes not captured
>>    338   6B @0xc102d4e5: OOB, bytes not captured
>>    339   2B @0xc102d4eb: OOB, bytes not captured
>>    340   2B @0xc102d4ed: OOB, bytes not captured
>>    341   2B @0xc102d4ef: OOB, bytes not captured
>>    342   3B @0xc102d524: OOB, bytes not captured
>>    343   6B @0xc102d527: OOB, bytes not captured
>>    344   3B @0xc102d52d: OOB, bytes not captured
>>    345   2B @0xc102d530: OOB, bytes not captured
>>    346   2B @0xc102d532: OOB, bytes not captured
>>    347   2B @0xc102d534: OOB, bytes not captured
>>    348   2B @0xc102d536: OOB, bytes not captured
>>    349   2B @0xc102d538: OOB, bytes not captured
>>    350   6B @0xc101ff4d: OOB, bytes not captured
>>    351   1B @0xc101ff53: OOB, bytes not captured
>>    352   3B @0xc101ff54: OOB, bytes not captured
>>    353   3B @0xc101ff57: OOB, bytes not captured
>>    354   3B @0xc101ff5a: OOB, bytes not captured
>>    355   3B @0xc101ff5d: OOB, bytes not captured
>>    356   1B @0xc101ff60: OOB, bytes not captured
>>    357   1B @0xc101ff61: OOB, bytes not captured
>>    358   4B @0xc102d53a: OOB, bytes not captured
>>    359   5B @0xc102d53e: OOB, bytes not captured
>>    360   2B @0xc102d543: OOB, bytes not captured
>>    361   2B @0xc102d545: OOB, bytes not captured
>>    362   5B @0xc102d547: OOB, bytes not captured
>>    363   1B @0xc102afc2: OOB, bytes not captured
>>    364   2B @0xc102afc3: OOB, bytes not captured
>>    365   1B @0xc102afc5: OOB, bytes not captured
>>    366   3B @0xc102afc6: OOB, bytes not captured
>>    367   4B @0xc102afc9: OOB, bytes not captured
>>    368   3B @0xc102afcd: OOB, bytes not captured
>>    369   1B @0xc1028a3e: OOB, bytes not captured
>>    370   1B @0xc1028a3f: OOB, bytes not captured
>>    371   1B @0xc1028a40: OOB, bytes not captured
>>    372   1B @0xc1028a41: OOB, bytes not captured
>>    373   6B @0xc1028a42: OOB, bytes not captured
>>    374   4B @0xc1028a48: OOB, bytes not captured
>>    375   4B @0xc1028a4c: OOB, bytes not captured
>>    376   4B @0xc1028a50: OOB, bytes not captured
>>    377   4B @0xc1028a54: OOB, bytes not captured
>>    378   7B @0xc1028a58: OOB, bytes not captured
>>    379   7B @0xc1028a5f: OOB, bytes not captured
>>    380   4B @0xc1028a66: OOB, bytes not captured
>>    381   4B @0xc1028a6a: OOB, bytes not captured
>>    382   4B @0xc1028a6e: OOB, bytes not captured
>>    383   3B @0xc1028a72: OOB, bytes not captured
>>    384   3B @0xc1028a75: OOB, bytes not captured
>>    385   3B @0xc1028a78: OOB, bytes not captured
>>    386   4B @0xc1028a7b: OOB, bytes not captured
>>    387   4B @0xc1028a7f: OOB, bytes not captured
>>    388   2B @0xc1028a83: OOB, bytes not captured
>>    389   7B @0xc1028a8b: OOB, bytes not captured
>>    390   2B @0xc1028a92: OOB, bytes not captured
>>    391   4B @0xc1028a94: OOB, bytes not captured
>>    392   4B @0xc1028a98: OOB, bytes not captured
>>    393   7B @0xc1028a9c: OOB, bytes not captured
>>    394   2B @0xc1028aa3: OOB, bytes not captured
>>    395   2B @0xc1028aa5: OOB, bytes not captured
>>    396   2B @0xc1028aa7: OOB, bytes not captured
>>    397   4B @0xc1028aa9: OOB, bytes not captured
>>    398   8B @0xc1028aad: OOB, bytes not captured
>>    399   4B @0xc1028ab5: OOB, bytes not captured
>>    400   2B @0xc1028ab9: OOB, bytes not captured
>>    401   4B @0xc1028acb: OOB, bytes not captured
>>    402   5B @0xc1028acf: OOB, bytes not captured
>>    403   2B @0xc1028ad4: OOB, bytes not captured
>>    404   2B @0xc1028ad6: OOB, bytes not captured
>>    405   7B @0xc1028ad8: OOB, bytes not captured
>>    406   6B @0xc1028adf: OOB, bytes not captured
>>    407   8B @0xc1028ae5: OOB, bytes not captured
>>    408   8B @0xc1028aed: OOB, bytes not captured
>>    409   3B @0xc1028af5: OOB, bytes not captured
>>    410   5B @0xc1028af8: OOB, bytes not captured
>>    411   2B @0xc1028bc1: OOB, bytes not captured
>>    412   6B @0xc1028bc3: OOB, bytes not captured
>>    413   7B @0xc1028bc9: OOB, bytes not captured
>>    414   2B @0xc1028bd0: OOB, bytes not captured
>>    415   5B @0xc1028bd2: OOB, bytes not captured
>>    416   2B @0xc1028bd7: OOB, bytes not captured
>>    417   2B @0xc1028bff: OOB, bytes not captured
>>    418   2B @0xc1028c01: OOB, bytes not captured
>>    419   5B @0xc1028c17: OOB, bytes not captured
>>    420   2B @0xc1028c1c: OOB, bytes not captured
>>    421   4B @0xc1028c1e: OOB, bytes not captured
>>    422   5B @0xc1028c22: OOB, bytes not captured
>>    423   4B @0xc1028c27: OOB, bytes not captured
>>    424   4B @0xc1028c2b: OOB, bytes not captured
>>    425   6B @0xc1028c2f: OOB, bytes not captured
>>    426   4B @0xc1028c35: OOB, bytes not captured
>>    427   4B @0xc1028c39: OOB, bytes not captured
>>    428   5B @0xc1028c3d: OOB, bytes not captured
>>    429   2B @0xc102913a: OOB, bytes not captured
>>    430   6B @0xc102913c: OOB, bytes not captured
>>    431   4B @0xc1029142: OOB, bytes not captured
>>    432   6B @0xc1029146: OOB, bytes not captured
>>    433   1B @0xc102914c: OOB, bytes not captured
>>    434   1B @0xc102914d: OOB, bytes not captured
>>    435   1B @0xc102914e: OOB, bytes not captured
>>    436   1B @0xc102914f: OOB, bytes not captured
>>    437   1B @0xc1029150: OOB, bytes not captured
>>    438   2B @0xc102afd0: OOB, bytes not captured
>>    439   7B @0xc102afd2: OOB, bytes not captured
>>    440   2B @0xc102afd9: OOB, bytes not captured
>>    441   2B @0xc102afdb: OOB, bytes not captured
>>    442   1B @0xc102afdd: OOB, bytes not captured
>>    443   2B @0xc102afde: OOB, bytes not captured
>>    444   5B @0xc102afe0: OOB, bytes not captured
>>    445   3B @0xc102afe5: OOB, bytes not captured
>>    446   2B @0xc102afe8: OOB, bytes not captured
>>    447   2B @0xc102afea: OOB, bytes not captured
>>    448   2B @0xc102afec: OOB, bytes not captured
>>    449   2B @0xc102affd: OOB, bytes not captured
>>    450   1B @0xc102afff: OOB, bytes not captured
>>    451   1B @0xc102b000: OOB, bytes not captured
>>    452   1B @0xc102b001: OOB, bytes not captured
>>    453   2B @0xc102d54c: OOB, bytes not captured
>>    454   1B @0xc102d54e: OOB, bytes not captured
>>    455   4B @0xc102d54f: OOB, bytes not captured
>>    456   2B @0xc102d553: OOB, bytes not captured
>>    457   2B @0xc102d55e: OOB, bytes not captured
>>    458   5B @0xc102d560: OOB, bytes not captured
>>    459   7B @0xc102d565: OOB, bytes not captured
>>    460   2B @0xc102d56c: OOB, bytes not captured
>>    461   5B @0xc102d56e: OOB, bytes not captured
>>    462   2B @0xc102d573: OOB, bytes not captured
>>    463   5B @0xc102d575: OOB, bytes not captured
>>    464   1B @0xc102c88e: OOB, bytes not captured
>>    465   1B @0xc102c88f: OOB, bytes not captured
>>    466   3B @0xc102d57a: OOB, bytes not captured
>>    467   3B @0xc102d57d: OOB, bytes not captured
>>    468   2B @0xc102d580: OOB, bytes not captured
>>    469   2B @0xc102d591: OOB, bytes not captured
>>    470   5B @0xc102d593: OOB, bytes not captured
>>    471   2B @0xc102d598: OOB, bytes not captured
>>    472   2B @0xc102d5a9: OOB, bytes not captured
>>    473   5B @0xc102d5ab: OOB, bytes not captured
>>    474   2B @0xc102d5b0: OOB, bytes not captured
>>    475   5B @0xc102d5b2: OOB, bytes not captured
>>    476   1B @0xc1020476: OOB, bytes not captured
>>    477   2B @0xc1020477: OOB, bytes not captured
>>    478   2B @0xc1020479: OOB, bytes not captured
>>    479   2B @0xc102047b: OOB, bytes not captured
>>    480   2B @0xc102047d: OOB, bytes not captured
>>    481   2B @0xc102048b: OOB, bytes not captured
>>    482   2B @0xc102048d: OOB, bytes not captured
>>    483   5B @0xc102048f: OOB, bytes not captured
>>    484   1B @0xc10202e9: OOB, bytes not captured
>>    485   2B @0xc10202ea: OOB, bytes not captured
>>    486   1B @0xc10202ec: OOB, bytes not captured
>>    487   2B @0xc10202ed: OOB, bytes not captured
>>    488   1B @0xc10202ef: OOB, bytes not captured
>>    489   2B @0xc10202f0: OOB, bytes not captured
>>    490   1B @0xc10202f2: OOB, bytes not captured
>>    491   4B @0xc10202f3: OOB, bytes not captured
>>    492   2B @0xc10202f7: OOB, bytes not captured
>>    493   3B @0xc10202f9: OOB, bytes not captured
>>    494   3B @0xc10202fc: OOB, bytes not captured
>>    495   6B @0xc10202ff: OOB, bytes not captured
>>    496   6B @0xc1020305: OOB, bytes not captured
>>    497   7B @0xc102030b: OOB, bytes not captured
>>    498   2B @0xc1020312: OOB, bytes not captured
>>    499   6B @0xc1020314: OOB, bytes not captured
>>    500   6B @0xc102031a: OOB, bytes not captured
>>    501   2B @0xc1020320: OOB, bytes not captured
>>    502   3B @0xc1020322: OOB, bytes not captured
>>    503   5B @0xc1020325: OOB, bytes not captured
>>    504   3B @0xc102032a: OOB, bytes not captured
>>    505   7B @0xc102032d: OOB, bytes not captured
>>    506   7B @0xc1020334: OOB, bytes not captured
>>    507   2B @0xc102033b: OOB, bytes not captured
>>    508   3B @0xc102033d: OOB, bytes not captured
>>    509   6B @0xc1020340: OOB, bytes not captured
>>    510   6B @0xc1020346: OOB, bytes not captured
>>    511   3B @0xc102034c: OOB, bytes not captured
>>    512   2B @0xc102034f: OOB, bytes not captured
>>    513   3B @0xc1020351: OOB, bytes not captured
>>    514   2B @0xc1020354: OOB, bytes not captured
>>    515   1B @0xc1020356: OOB, bytes not captured
>>    516   2B @0xc1020357: OOB, bytes not captured
>>    517   3B @0xc1020359: OOB, bytes not captured
>>    518   1B @0xc102667d: OOB, bytes not captured
>>    519   2B @0xc102667e: OOB, bytes not captured
>>    520   1B @0xc1026680: OOB, bytes not captured
>>    521   2B @0xc1026681: OOB, bytes not captured
>>    522   3B @0xc1026683: OOB, bytes not captured
>>    523   3B @0xc1026686: OOB, bytes not captured
>>    524   1B @0xc1026689: OOB, bytes not captured
>>    525   2B @0xc102668a: OOB, bytes not captured
>>    526   2B @0xc102668c: OOB, bytes not captured
>>    527   3B @0xc102668e: OOB, bytes not captured
>>    528   3B @0xc1026691: OOB, bytes not captured
>>    529   5B @0xc1026694: OOB, bytes not captured
>>    530   3B @0xc1026699: OOB, bytes not captured
>>    531   2B @0xc102669c: OOB, bytes not captured
>>    532   2B @0xc10266b8: OOB, bytes not captured
>>    533   2B @0xc10266ba: OOB, bytes not captured
>>    534   4B @0xc102669e: OOB, bytes not captured
>>    535   2B @0xc10266a2: OOB, bytes not captured
>>    536   3B @0xc10266a4: OOB, bytes not captured
>>    537   2B @0xc10266a7: OOB, bytes not captured
>>    538   2B @0xc10266a9: OOB, bytes not captured
>>    539   5B @0xc10266ab: OOB, bytes not captured
>>    540   5B @0xc10266b0: OOB, bytes not captured
>>    541   1B @0xc1025efd: OOB, bytes not captured
>>    542   1B @0xc1025efe: OOB, bytes not captured
>>    543   2B @0xc1025eff: OOB, bytes not captured
>>    544   1B @0xc1025f01: OOB, bytes not captured
>>    545   2B @0xc1025f02: OOB, bytes not captured
>>    546   2B @0xc1025f04: OOB, bytes not captured
>>    547   1B @0xc1025f06: OOB, bytes not captured
>>    548   3B @0xc1025f07: OOB, bytes not captured
>>    549   3B @0xc1025f0a: OOB, bytes not captured
>>    550   1B @0xc1025f0d: OOB, bytes not captured
>>    551   2B @0xc1025f0e: OOB, bytes not captured
>>    552   2B @0xc1025f10: OOB, bytes not captured
>>    553   3B @0xc1025f12: OOB, bytes not captured
>>    554   3B @0xc1025f15: OOB, bytes not captured
>>    555   3B @0xc1025f18: OOB, bytes not captured
>>    556   3B @0xc1025f1b: OOB, bytes not captured
>>    557   2B @0xc1025f1e: OOB, bytes not captured
>>    558   5B @0xc1025f20: OOB, bytes not captured
>>    559   2B @0xc1025f25: OOB, bytes not captured
>>    560   2B @0xc1025f27: OOB, bytes not captured
>>    561   7B @0xc1025f29: OOB, bytes not captured
>>    562   4B @0xc1025f30: OOB, bytes not captured
>>    563   2B @0xc1025f34: OOB, bytes not captured
>>    564   3B @0xc1025f36: OOB, bytes not captured
>>    565   2B @0xc1025f39: OOB, bytes not captured
>>    566   3B @0xc1025f3b: OOB, bytes not captured
>>    567   7B @0xc1025f3e: OOB, bytes not captured
>>    568   4B @0xc1025f45: OOB, bytes not captured
>>    569   2B @0xc1025f49: OOB, bytes not captured
>>    570   2B @0xc1025f4b: OOB, bytes not captured
>>    571   3B @0xc1025f4d: OOB, bytes not captured
>>    572   3B @0xc1025f50: OOB, bytes not captured
>>    573   3B @0xc1025f53: OOB, bytes not captured
>>    574   3B @0xc1025f56: OOB, bytes not captured
>>    575   3B @0xc1025f59: OOB, bytes not captured
>>    576   3B @0xc1025f5c: OOB, bytes not captured
>>    577   3B @0xc1025f5f: OOB, bytes not captured
>>    578   3B @0xc1025f62: OOB, bytes not captured
>>    579   3B @0xc1025f65: OOB, bytes not captured
>>    580   3B @0xc1025f68: OOB, bytes not captured
>>    581   7B @0xc1025f6b: OOB, bytes not captured
>>    582   2B @0xc1025f72: OOB, bytes not captured
>>    583   2B @0xc1025f74: OOB, bytes not captured
>>    584   2B @0xc1025f76: OOB, bytes not captured
>>    585   2B @0xc1025f78: OOB, bytes not captured
>>    586   5B @0xc1025f7a: OOB, bytes not captured
>>    587   1B @0xc1020cf9: OOB, bytes not captured
>>    588   2B @0xc1020cfa: OOB, bytes not captured
>>    589   1B @0xc1020cfc: OOB, bytes not captured
>>    590   2B @0xc1020cfd: OOB, bytes not captured
>>    591   6B @0xc1020cff: OOB, bytes not captured
>>    592   1B @0xc1020d05: OOB, bytes not captured
>>    593   1B @0xc1020d06: OOB, bytes not captured
>>    594   3B @0xc1020d07: OOB, bytes not captured
>>    595   3B @0xc1020d0a: OOB, bytes not captured
>>    596   2B @0xc1020d0d: OOB, bytes not captured
>>    597   3B @0xc1020d2a: OOB, bytes not captured
>>    598   2B @0xc1020d2d: OOB, bytes not captured
>>    599   3B @0xc1020d2f: OOB, bytes not captured
>>    600   6B @0xc1020d32: OOB, bytes not captured
>>    601   2B @0xc1020d38: OOB, bytes not captured
>>    602   2B @0xc1020d5b: OOB, bytes not captured
>>    603   2B @0xc1020d5d: OOB, bytes not captured
>>    604   7B @0xc1020d5f: OOB, bytes not captured
>>    605   3B @0xc1020d66: OOB, bytes not captured
>>    606   2B @0xc1020d69: OOB, bytes not captured
>>    607   2B @0xc1020d6b: OOB, bytes not captured
>>    608   2B @0xc1020d6d: OOB, bytes not captured
>>    609   3B @0xc1020d6f: OOB, bytes not captured
>>    610   2B @0xc1020d72: OOB, bytes not captured
>>    611   2B @0xc1020d74: OOB, bytes not captured
>>    612   3B @0xc1020d76: OOB, bytes not captured
>>    613   2B @0xc1020d79: OOB, bytes not captured
>>    614   2B @0xc1020d7b: OOB, bytes not captured
>>    615   3B @0xc1020d7d: OOB, bytes not captured
>>    616   2B @0xc1020d80: OOB, bytes not captured
>>    617   2B @0xc1020d82: OOB, bytes not captured
>>    618   2B @0xc1020d89: OOB, bytes not captured
>>    619   2B @0xc1020d8b: OOB, bytes not captured
>>    620   3B @0xc1020d8d: OOB, bytes not captured
>>    621   3B @0xc1020d90: OOB, bytes not captured
>>    622   1B @0xc1020d93: OOB, bytes not captured
>>    623   1B @0xc1020d94: OOB, bytes not captured
>>    624   1B @0xc1020d95: OOB, bytes not captured
>>    625   1B @0xc1020d96: OOB, bytes not captured
>>    626   1B @0xc1020d97: OOB, bytes not captured
>>    627   3B @0xc1025f7f: OOB, bytes not captured
>>    628   6B @0xc1025f82: OOB, bytes not captured
>>    629   3B @0xc1025f88: OOB, bytes not captured
>>    630   3B @0xc1025f8b: OOB, bytes not captured
>>    631   3B @0xc1025f8e: OOB, bytes not captured
>>    632   3B @0xc1025f91: OOB, bytes not captured
>>    633   4B @0xc1025f94: OOB, bytes not captured
>>    634   3B @0xc1025f98: OOB, bytes not captured
>>    635   3B @0xc1025f9b: OOB, bytes not captured
>>    636   3B @0xc1025f9e: OOB, bytes not captured
>>    637   8B @0xc1025fa1: OOB, bytes not captured
>>    638   4B @0xc1025fa9: OOB, bytes not captured
>>    639   8B @0xc1025fad: OOB, bytes not captured
>>    640   2B @0xc1025fb5: OOB, bytes not captured
>>    641   2B @0xc1025fe2: OOB, bytes not captured
>>    642   2B @0xc1025fe4: OOB, bytes not captured
>>    643   2B @0xc1025fe6: OOB, bytes not captured
>>    644   5B @0xc1025fe8: OOB, bytes not captured
>>    645   2B @0xc1025fed: OOB, bytes not captured
>>    646   3B @0xc1025fef: OOB, bytes not captured
>>    647   3B @0xc1025ff2: OOB, bytes not captured
>>    648   4B @0xc1025ff5: OOB, bytes not captured
>>    649   3B @0xc1025ff9: OOB, bytes not captured
>>    650   7B @0xc1025ffc: OOB, bytes not captured
>>    651   7B @0xc1026003: OOB, bytes not captured
>>    652   3B @0xc102600a: OOB, bytes not captured
>>    653   2B @0xc102600d: OOB, bytes not captured
>>    654   3B @0xc102600f: OOB, bytes not captured
>>    655   3B @0xc1026012: OOB, bytes not captured
>>    656   1B @0xc1026015: OOB, bytes not captured
>>    657   1B @0xc1026016: OOB, bytes not captured
>>    658   1B @0xc1026017: OOB, bytes not captured
>>    659   1B @0xc1026018: OOB, bytes not captured
>>    660   5B @0xc1026019: OOB, bytes not captured
>>    661   1B @0xc11394e6: OOB, bytes not captured
>>    662   2B @0xc11394e7: OOB, bytes not captured
>>    663   1B @0xc11394e9: OOB, bytes not captured
>>    664   1B @0xc11394ea: OOB, bytes not captured
>>    665   1B @0xc11394eb: OOB, bytes not captured
>>    666   3B @0xc11394ec: OOB, bytes not captured
>>    667   3B @0xc11394ef: OOB, bytes not captured
>>    668   5B @0xc11394f2: OOB, bytes not captured
>>    669   3B @0xc1139579: OOB, bytes not captured
>>    670   2B @0xc113957c: OOB, bytes not captured
>>    671   3B @0xc113957e: OOB, bytes not captured
>>    672   2B @0xc1139581: OOB, bytes not captured
>>    673   3B @0xc113958d: OOB, bytes not captured
>>    674   2B @0xc1139590: OOB, bytes not captured
>>    675   3B @0xc1139592: OOB, bytes not captured
>>    676   1B @0xc1139595: OOB, bytes not captured
>>    677   1B @0xc1139596: OOB, bytes not captured
>>    678   1B @0xc1139597: OOB, bytes not captured
>>    679   1B @0xc1139598: OOB, bytes not captured
>>    680   1B @0xc1139599: OOB, bytes not captured
>>    681   1B @0xc113959a: OOB, bytes not captured
>>    682   3B @0xc10266b5: OOB, bytes not captured
>>    683   2B @0xc10266b8: OOB, bytes not captured
>>    684   2B @0xc10266ba: OOB, bytes not captured
>>    685   6B @0xc10266bc: OOB, bytes not captured
>>    686   7B @0xc10266c2: OOB, bytes not captured
>>    687   2B @0xc10266c9: OOB, bytes not captured
>>    688   6B @0xc10266cb: OOB, bytes not captured
>>    689   3B @0xc10266d1: OOB, bytes not captured
>>    690   6B @0xc10266d4: OOB, bytes not captured
>>    691   2B @0xc10266da: OOB, bytes not captured
>>    692   2B @0xc10266dc: OOB, bytes not captured
>>    693   1B @0xc10266de: OOB, bytes not captured
>>    694   1B @0xc10266df: OOB, bytes not captured
>>    695   1B @0xc10266e0: OOB, bytes not captured
>>    696   5B @0xc10266e1: OOB, bytes not captured
>>    697   1B @0xc102644d: OOB, bytes not captured
>>    698   2B @0xc102644e: OOB, bytes not captured
>>    699   1B @0xc1026450: OOB, bytes not captured
>>    700   2B @0xc1026451: OOB, bytes not captured
>>    701   1B @0xc1026453: OOB, bytes not captured
>>    702   5B @0xc1026454: OOB, bytes not captured
>>    703   1B @0xc1026459: OOB, bytes not captured
>>    704   6B @0xc102645a: OOB, bytes not captured
>>    705   3B @0xc1026460: OOB, bytes not captured
>>    706   3B @0xc1026463: OOB, bytes not captured
>>    707   7B @0xc1026466: OOB, bytes not captured
>>    708   2B @0xc102646d: OOB, bytes not captured
>>    709   2B @0xc102646f: OOB, bytes not captured
>>    710   7B @0xc1026480: OOB, bytes not captured
>>    711   6B @0xc1026487: OOB, bytes not captured
>>    712   1B @0xc1026581: OOB, bytes not captured
>>    713   1B @0xc1026582: OOB, bytes not captured
>>    714   1B @0xc1026583: OOB, bytes not captured
>>    715   1B @0xc1026584: OOB, bytes not captured
>>    716   1B @0xc1026585: OOB, bytes not captured
>>    717   7B @0xc102035c: OOB, bytes not captured
>>    718   1B @0xc1020363: OOB, bytes not captured
>>    719   1B @0xc1020364: OOB, bytes not captured
>>    720   1B @0xc1020365: OOB, bytes not captured
>>    721   1B @0xc1020366: OOB, bytes not captured
>>    722   1B @0xc1020367: OOB, bytes not captured
>>    723   1B @0xc1020368: OOB, bytes not captured
>>    724   3B @0xc1020494: OOB, bytes not captured
>>    725   1B @0xc1020497: OOB, bytes not captured
>>    726   1B @0xc1020498: OOB, bytes not captured
>>    727   1B @0xc1020499: OOB, bytes not captured
>>    728   2B @0xc102d5b7: OOB, bytes not captured
>>    729   5B @0xc102d5b9: OOB, bytes not captured
>>    730   8B @0xc102d5be: OOB, bytes not captured
>>    731   7B @0xc102d5c6: OOB, bytes not captured
>>    732   2B @0xc102d5cd: OOB, bytes not captured
>>    733   7B @0xc102d64a: OOB, bytes not captured
>>    734   2B @0xc102d651: OOB, bytes not captured
>>    735   4B @0xc102d66f: OOB, bytes not captured
>>    736   2B @0xc102d673: OOB, bytes not captured
>>    737   2B @0xc102d675: OOB, bytes not captured
>>    738   5B @0xc102d677: OOB, bytes not captured
>>    739   1B @0xc1020547: OOB, bytes not captured
>>    740   1B @0xc1020548: OOB, bytes not captured
>>    741   2B @0xc1020549: OOB, bytes not captured
>>    742   1B @0xc102054b: OOB, bytes not captured
>>    743   2B @0xc102054c: OOB, bytes not captured
>>    744   1B @0xc102054e: OOB, bytes not captured
>>    745   6B @0xc102054f: OOB, bytes not captured
>>    746   5B @0xc1020555: OOB, bytes not captured
>>    747   3B @0xc102055a: OOB, bytes not captured
>>    748   3B @0xc102055d: OOB, bytes not captured
>>    749   2B @0xc1020560: OOB, bytes not captured
>>    750   2B @0xc1020562: OOB, bytes not captured
>>    751   2B @0xc1020564: OOB, bytes not captured
>>    752   2B @0xc1020566: OOB, bytes not captured
>>    753   3B @0xc1020568: OOB, bytes not captured
>>    754   1B @0xc102525f: OOB, bytes not captured
>>    755   1B @0xc1025260: OOB, bytes not captured
>>    756   2B @0xc1025261: OOB, bytes not captured
>>    757   1B @0xc1025263: OOB, bytes not captured
>>    758   1B @0xc1025264: OOB, bytes not captured
>>    759   3B @0xc1025265: OOB, bytes not captured
>>    760   4B @0xc1025268: OOB, bytes not captured
>>    761   3B @0xc102526c: OOB, bytes not captured
>>    762   6B @0xc102526f: OOB, bytes not captured
>>    763   6B @0xc1025275: OOB, bytes not captured
>>    764   3B @0xc102527b: OOB, bytes not captured
>>    765   4B @0xc102527e: OOB, bytes not captured
>>    766   6B @0xc1025282: OOB, bytes not captured
>>    767   4B @0xc1025288: OOB, bytes not captured
>>    768   5B @0xc102528c: OOB, bytes not captured
>>    769   4B @0xc1025291: OOB, bytes not captured
>>    770   6B @0xc1025295: OOB, bytes not captured
>>    771   7B @0xc102543f: OOB, bytes not captured
>>    772   6B @0xc1025446: OOB, bytes not captured
>>    773   3B @0xc10252a0: OOB, bytes not captured
>>    774   3B @0xc10252a3: OOB, bytes not captured
>>    775   2B @0xc10252a6: OOB, bytes not captured
>>    776   6B @0xc10252a8: OOB, bytes not captured
>>    777   4B @0xc10252ae: OOB, bytes not captured
>>    778   4B @0xc10252b2: OOB, bytes not captured
>>    779   5B @0xc10252b6: OOB, bytes not captured
>>    780   7B @0xc10252bb: OOB, bytes not captured
>>    781   2B @0xc10252c2: OOB, bytes not captured
>>    782   3B @0xc10252f2: OOB, bytes not captured
>>    783   4B @0xc10252f5: OOB, bytes not captured
>>    784   6B @0xc10252f9: OOB, bytes not captured
>>    785   7B @0xc10252ff: OOB, bytes not captured
>>    786   6B @0xc1025306: OOB, bytes not captured
>>    787   7B @0xc102530c: OOB, bytes not captured
>>    788   2B @0xc1025313: OOB, bytes not captured
>>    789   6B @0xc1025315: OOB, bytes not captured
>>    790   2B @0xc102531b: OOB, bytes not captured
>>    791   2B @0xc102531d: OOB, bytes not captured
>>    792   3B @0xc1025325: OOB, bytes not captured
>>    793   2B @0xc1025328: OOB, bytes not captured
>>    794   3B @0xc1025349: OOB, bytes not captured
>>    795   2B @0xc102534c: OOB, bytes not captured
>>    796   3B @0xc1025399: OOB, bytes not captured
>>    797   6B @0xc102539c: OOB, bytes not captured
>>    798   2B @0xc10253a2: OOB, bytes not captured
>>    799   2B @0xc10253a4: OOB, bytes not captured
>>    800   2B @0xc10253a6: OOB, bytes not captured
>>    801   2B @0xc10253ac: OOB, bytes not captured
>>    802   2B @0xc10253ae: OOB, bytes not captured
>>    803   3B @0xc10253a8: OOB, bytes not captured
>>    804   1B @0xc10253ab: OOB, bytes not captured
>>    805   2B @0xc10253ac: OOB, bytes not captured
>>    806   2B @0xc10253ae: OOB, bytes not captured
>>    807   2B @0xc10253b0: OOB, bytes not captured
>>    808   2B @0xc10253b2: OOB, bytes not captured
>>    809   2B @0xc10253b4: OOB, bytes not captured
>>    810   2B @0xc10253ba: OOB, bytes not captured
>>    811   2B @0xc10253bc: OOB, bytes not captured
>>    812   3B @0xc10253b6: OOB, bytes not captured
>>    813   1B @0xc10253b9: OOB, bytes not captured
>>    814   2B @0xc10253ba: OOB, bytes not captured
>>    815   2B @0xc10253bc: OOB, bytes not captured
>>    816   2B @0xc10253be: OOB, bytes not captured
>>    817   2B @0xc10253c4: OOB, bytes not captured
>>    818   2B @0xc10253c6: OOB, bytes not captured
>>    819   2B @0xc10253c8: OOB, bytes not captured
>>    820   2B @0xc10253ce: OOB, bytes not captured
>>    821   2B @0xc10253d0: OOB, bytes not captured
>>    822   3B @0xc10253d2: OOB, bytes not captured
>>    823   3B @0xc10253d5: OOB, bytes not captured
>>    824   2B @0xc10253d8: OOB, bytes not captured
>>    825   2B @0xc10253da: OOB, bytes not captured
>>    826   2B @0xc10253dc: OOB, bytes not captured
>>    827   2B @0xc10253e2: OOB, bytes not captured
>>    828   2B @0xc10253e4: OOB, bytes not captured
>>    829   5B @0xc10253e6: OOB, bytes not captured
>>    830   1B @0xc101fff1: OOB, bytes not captured
>>    831   1B @0xc101fff2: OOB, bytes not captured
>>    832   1B @0xc101fff3: OOB, bytes not captured
>>    833   1B @0xc101fff4: OOB, bytes not captured
>>    834   3B @0xc101fff5: OOB, bytes not captured
>>    835   4B @0xc101fff8: OOB, bytes not captured
>>    836   2B @0xc101fffc: OOB, bytes not captured
>>    837   4B @0xc101fffe: OOB, bytes not captured
>>    838   4B @0xc1020002: OOB, bytes not captured
>>    839   3B @0xc1020006: OOB, bytes not captured
>>    840   3B @0xc1020009: OOB, bytes not captured
>>    841   4B @0xc102000c: OOB, bytes not captured
>>    842   4B @0xc1020010: OOB, bytes not captured
>>    843   3B @0xc1020014: OOB, bytes not captured
>>    844   3B @0xc1020017: OOB, bytes not captured
>>    845   4B @0xc102001a: OOB, bytes not captured
>>    846   4B @0xc102001e: OOB, bytes not captured
>>    847   5B @0xc1020022: OOB, bytes not captured
>>    848   2B @0xc1020027: OOB, bytes not captured
>>    849   2B @0xc1020029: OOB, bytes not captured
>>    850   5B @0xc102002b: OOB, bytes not captured
>>    851   2B @0xc1020030: OOB, bytes not captured
>>    852   4B @0xc102003a: OOB, bytes not captured
>>    853   6B @0xc102003e: OOB, bytes not captured
>>    854   3B @0xc1020044: OOB, bytes not captured
>>    855   4B @0xc1020047: OOB, bytes not captured
>>    856   2B @0xc102004b: OOB, bytes not captured
>>    857   7B @0xc102004d: OOB, bytes not captured
>>    858   2B @0xc1020054: OOB, bytes not captured
>>    859   4B @0xc1020056: OOB, bytes not captured
>>    860   3B @0xc102005a: OOB, bytes not captured
>>    861   3B @0xc102005d: OOB, bytes not captured
>>    862   3B @0xc1020060: OOB, bytes not captured
>>    863   3B @0xc1020063: OOB, bytes not captured
>>    864   3B @0xc1020066: OOB, bytes not captured
>>    865   3B @0xc1020069: OOB, bytes not captured
>>    866   3B @0xc102006c: OOB, bytes not captured
>>    867   3B @0xc102006f: OOB, bytes not captured
>>    868   2B @0xc1020072: OOB, bytes not captured
>>    869   2B @0xc1020074: OOB, bytes not captured
>>    870   2B @0xc1020076: OOB, bytes not captured
>>    871   4B @0xc1020078: OOB, bytes not captured
>>    872   3B @0xc102007c: OOB, bytes not captured
>>    873   4B @0xc102007f: OOB, bytes not captured
>>    874   4B @0xc1020083: OOB, bytes not captured
>>    875   2B @0xc1020087: OOB, bytes not captured
>>    876   2B @0xc1020089: OOB, bytes not captured
>>    877   2B @0xc102008b: OOB, bytes not captured
>>    878   2B @0xc102008d: OOB, bytes not captured
>>    879   2B @0xc102008f: OOB, bytes not captured
>>    880   2B @0xc1020091: OOB, bytes not captured
>>    881   2B @0xc1020093: OOB, bytes not captured
>>    882   2B @0xc1020095: OOB, bytes not captured
>>    883   2B @0xc1020097: OOB, bytes not captured
>>    884   3B @0xc102009d: OOB, bytes not captured
>>    885   2B @0xc10200a0: OOB, bytes not captured
>>    886   2B @0xc10200a2: OOB, bytes not captured
>>    887   2B @0xc10200a4: OOB, bytes not captured
>>    888   2B @0xc10200a6: OOB, bytes not captured
>>    889   2B @0xc10200a8: OOB, bytes not captured
>>    890   2B @0xc10200ac: OOB, bytes not captured
>>    891   7B @0xc10200ae: OOB, bytes not captured
>>    892   2B @0xc10200b5: OOB, bytes not captured
>>    893   4B @0xc10200b7: OOB, bytes not captured
>>    894   6B @0xc10200bb: OOB, bytes not captured
>>    895   2B @0xc10200c1: OOB, bytes not captured
>>    896   2B @0xc10200c3: OOB, bytes not captured
>>    897   2B @0xc10200c5: OOB, bytes not captured
>>    898   5B @0xc10200dc: OOB, bytes not captured
>>    899   5B @0xc10200e1: OOB, bytes not captured
>>    900   2B @0xc10200e6: OOB, bytes not captured
>>    901   2B @0xc10200e8: OOB, bytes not captured
>>    902   4B @0xc10200ea: OOB, bytes not captured
>>    903   2B @0xc10200ee: OOB, bytes not captured
>>    904   3B @0xc10200f2: OOB, bytes not captured
>>    905   1B @0xc10200f5: OOB, bytes not captured
>>    906   1B @0xc10200f6: OOB, bytes not captured
>>    907   1B @0xc10200f7: OOB, bytes not captured
>>    908   1B @0xc10200f8: OOB, bytes not captured
>>    909   1B @0xc10200f9: OOB, bytes not captured
>>    910   1B @0xc10253eb: OOB, bytes not captured
>>    911   2B @0xc10253ec: OOB, bytes not captured
>>    912   2B @0xc10253ee: OOB, bytes not captured
>>    913   5B @0xc10253f0: OOB, bytes not captured
>>    914   1B @0xc101fbe8: OOB, bytes not captured
>>    915   2B @0xc101fbe9: OOB, bytes not captured
>>    916   3B @0xc101fbeb: OOB, bytes not captured
>>    917   5B @0xc101fbee: OOB, bytes not captured
>>    918   3B @0xc101fbf3: OOB, bytes not captured
>>    919   7B @0xc101fbf6: OOB, bytes not captured
>>    920   2B @0xc101fbfd: OOB, bytes not captured
>>    921   2B @0xc101fbff: OOB, bytes not captured
>>    922   3B @0xc101fc01: OOB, bytes not captured
>>    923   2B @0xc101fc04: OOB, bytes not captured
>>    924   2B @0xc101fc06: OOB, bytes not captured
>>    925   4B @0xc101fc0c: OOB, bytes not captured
>>    926   2B @0xc101fc10: OOB, bytes not captured
>>    927   3B @0xc101fc12: OOB, bytes not captured
>>    928   5B @0xc101fc15: OOB, bytes not captured
>>    929   3B @0xc101fc1a: OOB, bytes not captured
>>    930   3B @0xc101fc1d: OOB, bytes not captured
>>    931   6B @0xc101fc20: OOB, bytes not captured
>>    932   2B @0xc101fc26: OOB, bytes not captured
>>    933   2B @0xc101fc28: OOB, bytes not captured
>>    934   1B @0xc101fc40: OOB, bytes not captured
>>    935   1B @0xc101fc41: OOB, bytes not captured
>>    936   4B @0xc10253f5: OOB, bytes not captured
>>    937   2B @0xc10253f9: OOB, bytes not captured
>>    938   4B @0xc10253fb: OOB, bytes not captured
>>    939   6B @0xc10253ff: OOB, bytes not captured
>>    940   2B @0xc1025405: OOB, bytes not captured
>>    941   8B @0xc1025407: OOB, bytes not captured
>>    942   2B @0xc102540f: OOB, bytes not captured
>>    943   5B @0xc1025411: OOB, bytes not captured
>>    944   2B @0xc1025416: OOB, bytes not captured
>>    945   3B @0xc1025459: OOB, bytes not captured
>>    946   1B @0xc102545c: OOB, bytes not captured
>>    947   1B @0xc102545d: OOB, bytes not captured
>>    948   1B @0xc102545e: OOB, bytes not captured
>>    949   1B @0xc102545f: OOB, bytes not captured
>>    950   1B @0xc1025460: OOB, bytes not captured
>>    951   2B @0xc102056b: OOB, bytes not captured
>>    952   1B @0xc1020586: OOB, bytes not captured
>>    953   1B @0xc1020587: OOB, bytes not captured
>>    954   1B @0xc1020588: OOB, bytes not captured
>>    955   1B @0xc1020589: OOB, bytes not captured
>>    956   1B @0xc102058a: OOB, bytes not captured
>>    957   3B @0xc102d67c: OOB, bytes not captured
>>    958   6B @0xc102d67f: OOB, bytes not captured
>>    959   3B @0xc102d685: OOB, bytes not captured
>>    960   2B @0xc102d688: OOB, bytes not captured
>>    961   2B @0xc102d68a: OOB, bytes not captured
>>    962   6B @0xc102d692: OOB, bytes not captured
>>    963   6B @0xc102d698: OOB, bytes not captured
>>    964   2B @0xc102d69e: OOB, bytes not captured
>>    965   2B @0xc102d6a0: OOB, bytes not captured
>>    966   2B @0xc102d6a2: OOB, bytes not captured
>>    967   4B @0xc102d715: OOB, bytes not captured
>>    968   2B @0xc102d719: OOB, bytes not captured
>>    969   5B @0xc102d71b: OOB, bytes not captured
>>    970   4B @0xc102d720: OOB, bytes not captured
>>    971   3B @0xc102d724: OOB, bytes not captured
>>    972   1B @0xc102d727: OOB, bytes not captured
>>    973   1B @0xc102d728: OOB, bytes not captured
>>    974   1B @0xc102d729: OOB, bytes not captured
>>    975   1B @0xc102d72a: OOB, bytes not captured
>>    976   1B @0xc102d72b: OOB, bytes not captured
>>    977   2B @0xc10468ab: OOB, bytes not captured
>>    978   1B @0xc10468ad: OOB, bytes not captured
>>    979   7B @0xc1046944: OOB, bytes not captured
>>    980   2B @0xc104694b: OOB, bytes not captured
>>    981   2B @0xc104694d: OOB, bytes not captured
>>    982   2B @0xc1046965: OOB, bytes not captured
>>    983   5B @0xc1046967: OOB, bytes not captured
>>    984   2B @0xc104696c: OOB, bytes not captured
>>    985   2B @0xc104696e: OOB, bytes not captured
>>    986   4B @0xc1046985: OOB, bytes not captured
>>    987   2B @0xc1046989: OOB, bytes not captured
>>    988   4B @0xc10469ad: OOB, bytes not captured
>>    989   1B @0xc10469b1: OOB, bytes not captured
>>    990   1B @0xc10469b2: OOB, bytes not captured
>>    991   1B @0xc10469b3: OOB, bytes not captured
>>    992   1B @0xc10469b4: OOB, bytes not captured
>>    993   1B @0xc10469b5: OOB, bytes not captured
>>    994   1B @0xc10469b6: OOB, bytes not captured
>>    995   1B @0xc10469b7: OOB, bytes not captured
>>    996   2B @0xc1025050: OOB, bytes not captured
>>    997   3B @0xc1025052: OOB, bytes not captured
>>    998   3B @0xc1025055: OOB, bytes not captured
>>    999   2B @0xc1025058: OOB, bytes not captured
>>    1000   2B @0xc1025060: OOB, bytes not captured
>>    1001   2B @0xc1025062: OOB, bytes not captured
>>    1002   2B @0xc1025064: OOB, bytes not captured
>>    1003   2B @0xc1025066: OOB, bytes not captured
>>    1004   2B @0xc1025068: OOB, bytes not captured
>>    1005   2B @0xc102506a: OOB, bytes not captured
>>    1006   2B @0xc1025070: OOB, bytes not captured
>>    1007   2B @0xc1025072: OOB, bytes not captured
>>    1008   4B @0xc1025074: OOB, bytes not captured
>>    1009   4B @0xc1025078: OOB, bytes not captured
>>    1010   3B @0xc102507c: OOB, bytes not captured
>>    1011   2B @0xc102507f: OOB, bytes not captured
>>    1012   4B @0xc1025090: OOB, bytes not captured
>>    1013   4B @0xc1025094: OOB, bytes not captured
>>    1014   4B @0xc1025098: OOB, bytes not captured
>>    1015   3B @0xc102509c: OOB, bytes not captured
>>    1016   3B @0xc102509f: OOB, bytes not captured
>>    1017   4B @0xc10250a2: OOB, bytes not captured
>>    1018   4B @0xc10250a6: OOB, bytes not captured
>>    1019   3B @0xc10250aa: OOB, bytes not captured
>>    1020   3B @0xc10250ad: OOB, bytes not captured
>>    1021   3B @0xc10250b0: OOB, bytes not captured
>>    1022   6B @0xc10250b3: OOB, bytes not captured
>>    1023   2B @0xc10251ba: OOB, bytes not captured
>>    1024   2B @0xc10251bc: OOB, bytes not captured
>>    1025   5B @0xc10251be: OOB, bytes not captured
>>    1026   1B @0xc101fece: OOB, bytes not captured
>>    1027   2B @0xc101fecf: OOB, bytes not captured
>>    1028   1B @0xc101fed1: OOB, bytes not captured
>>    1029   2B @0xc101fed2: OOB, bytes not captured
>>    1030   1B @0xc101fed4: OOB, bytes not captured
>>    1031   1B @0xc101fed5: OOB, bytes not captured
>>    1032   3B @0xc101fed6: OOB, bytes not captured
>>    1033   4B @0xc101fed9: OOB, bytes not captured
>>    1034   3B @0xc101fedd: OOB, bytes not captured
>>    1035   3B @0xc101fee0: OOB, bytes not captured
>>    1036   6B @0xc101fee3: OOB, bytes not captured
>>    1037   5B @0xc101fee9: OOB, bytes not captured
>>    1038   2B @0xc101feee: OOB, bytes not captured
>>    1039   2B @0xc101fef0: OOB, bytes not captured
>>    1040   2B @0xc101fef2: OOB, bytes not captured
>>    1041   2B @0xc101fef4: OOB, bytes not captured
>>    1042   2B @0xc101ff3c: OOB, bytes not captured
>>    1043   2B @0xc101ff3e: OOB, bytes not captured
>>    1044   2B @0xc101ff40: OOB, bytes not captured
>>    1045   3B @0xc101ff04: OOB, bytes not captured
>>    1046   4B @0xc101ff07: OOB, bytes not captured
>>    1047   2B @0xc101ff0b: OOB, bytes not captured
>>    1048   2B @0xc101ff0d: OOB, bytes not captured
>>    1049   2B @0xc101ff2a: OOB, bytes not captured
>>    1050   2B @0xc101ff2c: OOB, bytes not captured
>>    1051   2B @0xc101ff2e: OOB, bytes not captured
>>    1052   5B @0xc101ff30: OOB, bytes not captured
>>    1053   1B @0xc101fd3e: OOB, bytes not captured
>>    1054   1B @0xc101fd3f: OOB, bytes not captured
>>    1055   2B @0xc101fd40: OOB, bytes not captured
>>    1056   1B @0xc101fd42: OOB, bytes not captured
>>    1057   2B @0xc101fd43: OOB, bytes not captured
>>    1058   3B @0xc101fd45: OOB, bytes not captured
>>    1059   4B @0xc101fd48: OOB, bytes not captured
>>    1060   2B @0xc101fd4c: OOB, bytes not captured
>>    1061   2B @0xc101fd4e: OOB, bytes not captured
>>    1062   2B @0xc101fd50: OOB, bytes not captured
>>    1063   2B @0xc101fd52: OOB, bytes not captured
>>    1064   3B @0xc101fd54: OOB, bytes not captured
>>    1065   2B @0xc101fd57: OOB, bytes not captured
>>    1066   2B @0xc101fd59: OOB, bytes not captured
>>    1067   2B @0xc101fd5b: OOB, bytes not captured
>>    1068   1B @0xc101fd5d: OOB, bytes not captured
>>    1069   3B @0xc101fd5e: OOB, bytes not captured
>>    1070   2B @0xc101fd61: OOB, bytes not captured
>>    1071   2B @0xc101fd63: OOB, bytes not captured
>>    1072   3B @0xc101fd65: OOB, bytes not captured
>>    1073   2B @0xc101fd68: OOB, bytes not captured
>>    1074   2B @0xc101fd6a: OOB, bytes not captured
>>    1075   5B @0xc101fd6c: OOB, bytes not captured
>>    1076   3B @0xc101fd71: OOB, bytes not captured
>>    1077   3B @0xc101fd74: OOB, bytes not captured
>>    1078   4B @0xc101fd77: OOB, bytes not captured
>>    1079   3B @0xc101fd7b: OOB, bytes not captured
>>    1080   2B @0xc101fd7e: OOB, bytes not captured
>>    1081   3B @0xc101fd80: OOB, bytes not captured
>>    1082   2B @0xc101fd83: OOB, bytes not captured
>>    1083   5B @0xc101fd85: OOB, bytes not captured
>>    1084   3B @0xc101fd8a: OOB, bytes not captured
>>    1085   3B @0xc101fd8d: OOB, bytes not captured
>>    1086   4B @0xc101fd90: OOB, bytes not captured
>>    1087   3B @0xc101fd94: OOB, bytes not captured
>>    1088   2B @0xc101fd97: OOB, bytes not captured
>>    1089   3B @0xc101fdb2: OOB, bytes not captured
>>    1090   2B @0xc101fdb5: OOB, bytes not captured
>>    1091   5B @0xc101fdb7: OOB, bytes not captured
>>    1092   2B @0xc101fdbc: OOB, bytes not captured
>>    1093   1B @0xc101fdc3: OOB, bytes not captured
>>    1094   1B @0xc101fdc4: OOB, bytes not captured
>>    1095   1B @0xc101fdc5: OOB, bytes not captured
>>    1096   1B @0xc101fdc6: OOB, bytes not captured
>>    1097   1B @0xc101fdc7: OOB, bytes not captured
>>    1098   3B @0xc101ff35: OOB, bytes not captured
>>    1099   2B @0xc101ff38: OOB, bytes not captured
>>    1100   2B @0xc101ff3a: OOB, bytes not captured
>>    1101   2B @0xc101ff3e: OOB, bytes not captured
>>    1102   2B @0xc101ff40: OOB, bytes not captured
>>    1103   1B @0xc101ff42: OOB, bytes not captured
>>    1104   2B @0xc101ff43: OOB, bytes not captured
>>    1105   2B @0xc101ff45: OOB, bytes not captured
>>    1106   1B @0xc101ff47: OOB, bytes not captured
>>    1107   1B @0xc101ff48: OOB, bytes not captured
>>    1108   1B @0xc101ff49: OOB, bytes not captured
>>    1109   1B @0xc101ff4a: OOB, bytes not captured
>>    1110   1B @0xc101ff4b: OOB, bytes not captured
>>    1111   1B @0xc101ff4c: OOB, bytes not captured
>>    1112   2B @0xc10251c3: OOB, bytes not captured
>>    1113   3B @0xc10251c5: OOB, bytes not captured
>>    1114   3B @0xc10251c8: OOB, bytes not captured
>>    1115   2B @0xc10251cb: OOB, bytes not captured
>>    1116   2B @0xc10251cd: OOB, bytes not captured
>>    1117   3B @0xc10251cf: OOB, bytes not captured
>>    1118   6B @0xc10251d2: OOB, bytes not captured
>>    1119   5B @0xc10251d8: OOB, bytes not captured
>>    1120   2B @0xc10251dd: OOB, bytes not captured
>>    1121   3B @0xc10251df: OOB, bytes not captured
>>    1122   3B @0xc10251e2: OOB, bytes not captured
>>    1123   2B @0xc10251e5: OOB, bytes not captured
>>    1124   3B @0xc10251ee: OOB, bytes not captured
>>    1125   2B @0xc10251f1: OOB, bytes not captured
>>    1126   3B @0xc10251fa: OOB, bytes not captured
>>    1127   2B @0xc10251fd: OOB, bytes not captured
>>    1128   2B @0xc10251ff: OOB, bytes not captured
>>    1129   2B @0xc1025201: OOB, bytes not captured
>>    1130   2B @0xc101fd61: OOB, bytes not captured
>>    1131   2B @0xc101fd63: OOB, bytes not captured
>>    1132   3B @0xc101fd65: OOB, bytes not captured
>>    1133   2B @0xc101fd68: OOB, bytes not captured
>>    1134   2B @0xc101fd6a: OOB, bytes not captured
>>    1135   3B @0xc100327c: OOB, bytes not captured
>>    1136   2B @0xc100327f: OOB, bytes not captured
>>    1137   5B @0xc1003281: OOB, bytes not captured
>>    1138   1B @0xc126d817: OOB, bytes not captured
>>    1139   5B @0xc126d818: OOB, bytes not captured
>>    1140   1B @0xc126d81d: OOB, bytes not captured
>>    1141   1B @0xc126d81e: OOB, bytes not captured
>>    1142   1B @0xc126d81f: OOB, bytes not captured
>>    1143   3B @0xc126d820: OOB, bytes not captured
>>    1144   4B @0xc126d823: OOB, bytes not captured
>>    1145   4B @0xc126d827: OOB, bytes not captured
>>    1146   4B @0xc126d82b: OOB, bytes not captured
>>    1147   7B @0xc126d82f: OOB, bytes not captured
>>    1148   7B @0xc126d836: OOB, bytes not captured
>>    1149   2B @0xc126d83d: OOB, bytes not captured
>>    1150   4B @0xc126d83f: OOB, bytes not captured
>>    1151   5B @0xc126d843: OOB, bytes not captured
>>    1152   5B @0xc106ec90: OOB, bytes not captured
>>    1153   7B @0xc106ec95: OOB, bytes not captured
>>    1154   2B @0xc106ec9c: OOB, bytes not captured
>>    1155   3B @0xc106ec9e: OOB, bytes not captured
>>    1156   4B @0xc106eca1: OOB, bytes not captured
>>    1157   1B @0xc106eca5: OOB, bytes not captured
>>    1158   4B @0xc126d848: OOB, bytes not captured
>>    1159   6B @0xc126d84c: OOB, bytes not captured
>>    1160   4B @0xc126d852: OOB, bytes not captured
>>    1161   2B @0xc126d856: OOB, bytes not captured
>>    1162   6B @0xc126d85d: OOB, bytes not captured
>>    1163   6B @0xc126d863: OOB, bytes not captured
>>    1164   4B @0xc126d869: OOB, bytes not captured
>>    1165   4B @0xc126d86d: OOB, bytes not captured
>>    1166   4B @0xc126d871: OOB, bytes not captured
>>    1167   2B @0xc126d875: OOB, bytes not captured
>>    1168   5B @0xc126d877: OOB, bytes not captured
>>    1169   7B @0xc126d87c: OOB, bytes not captured
>>    1170   2B @0xc126d883: OOB, bytes not captured
>>    1171   7B @0xc126d895: OOB, bytes not captured
>>    1172   4B @0xc126d89c: OOB, bytes not captured
>>    1173   2B @0xc126d8a0: OOB, bytes not captured
>>    1174   7B @0xc126d8b1: OOB, bytes not captured
>>    1175   2B @0xc126d8b8: OOB, bytes not captured
>>    1176   4B @0xc126d8d1: OOB, bytes not captured
>>    1177   5B @0xc126d8d5: OOB, bytes not captured
>>    1178   4B @0xc126d8da: OOB, bytes not captured
>>    1179   5B @0xc126d8de: OOB, bytes not captured
>>    1180   3B @0xc126d8e3: OOB, bytes not captured
>>    1181   3B @0xc126d8e6: OOB, bytes not captured
>>    1182   5B @0xc126d8e9: OOB, bytes not captured
>>    1183   3B @0xc126d8ee: OOB, bytes not captured
>>    1184   2B @0xc126d8f1: OOB, bytes not captured
>>    1185   2B @0xc126d8f3: OOB, bytes not captured
>>    1186   3B @0xc126d941: OOB, bytes not captured
>>    1187   3B @0xc126d944: OOB, bytes not captured
>>    1188   2B @0xc126d947: OOB, bytes not captured
>>    1189   2B @0xc126d949: OOB, bytes not captured
>>    1190   4B @0xc126d953: OOB, bytes not captured
>>    1191   4B @0xc126d957: OOB, bytes not captured
>>    1192   6B @0xc126d95b: OOB, bytes not captured
>>    1193   3B @0xc126dcc4: OOB, bytes not captured
>>    1194   6B @0xc126dcc7: OOB, bytes not captured
>>    1195   3B @0xc126dccd: OOB, bytes not captured
>>    1196   3B @0xc126dcd0: OOB, bytes not captured
>>    1197   6B @0xc126dcd3: OOB, bytes not captured
>>    1198   3B @0xc126dcd9: OOB, bytes not captured
>>    1199   2B @0xc126dcdc: OOB, bytes not captured
>>    1200   2B @0xc126dcde: OOB, bytes not captured
>>    1201   2B @0xc126dce0: OOB, bytes not captured
>>    1202   2B @0xc126dce2: OOB, bytes not captured
>>    1203   4B @0xc126dce4: OOB, bytes not captured
>>    1204   3B @0xc126dce8: OOB, bytes not captured
>>    1205   2B @0xc126dceb: OOB, bytes not captured
>>    1206   3B @0xc126dced: OOB, bytes not captured
>>    1207   2B @0xc126dcf0: OOB, bytes not captured
>>    1208   6B @0xc126dcf2: OOB, bytes not captured
>>    1209   6B @0xc126dcf8: OOB, bytes not captured
>>    1210   2B @0xc126dcfe: OOB, bytes not captured
>>    1211   2B @0xc126dd00: OOB, bytes not captured
>>    1212   5B @0xc126dd02: OOB, bytes not captured
>>    1213   2B @0xc126dd07: OOB, bytes not captured
>>    1214   3B @0xc126dd09: OOB, bytes not captured
>>    1215   3B @0xc126dd0c: OOB, bytes not captured
>>    1216   2B @0xc126dd0f: OOB, bytes not captured
>>    1217   2B @0xc126dd11: OOB, bytes not captured
>>    1218   2B @0xc126dd13: OOB, bytes not captured
>>    1219   2B @0xc126dd15: OOB, bytes not captured
>>    1220   2B @0xc126dd17: OOB, bytes not captured
>>    1221   2B @0xc126dd19: OOB, bytes not captured
>>    1222   2B @0xc126dd1f: OOB, bytes not captured
>>    1223   2B @0xc126dd21: OOB, bytes not captured
>>    1224   4B @0xc126dd23: OOB, bytes not captured
>>    1225   3B @0xc126dd27: OOB, bytes not captured
>>    1226   2B @0xc126dd2a: OOB, bytes not captured
>>    1227   2B @0xc126dd2c: OOB, bytes not captured
>>    1228   3B @0xc126dd2e: OOB, bytes not captured
>>    1229   3B @0xc126dd31: OOB, bytes not captured
>>    1230   2B @0xc126dd34: OOB, bytes not captured
>>    1231   3B @0xc126dd58: OOB, bytes not captured
>>    1232   2B @0xc126dd5b: OOB, bytes not captured
>>    1233   4B @0xc126dd5d: OOB, bytes not captured
>>    1234   3B @0xc126dd61: OOB, bytes not captured
>>    1235   1B @0xc1026263: OOB, bytes not captured
>>    1236   1B @0xc1026264: OOB, bytes not captured
>>    1237   1B @0xc1026265: OOB, bytes not captured
>>    1238   1B @0xc1026266: OOB, bytes not captured
>>    1239   3B @0xc1026267: OOB, bytes not captured
>>    1240   3B @0xc102626a: OOB, bytes not captured
>>    1241   5B @0xc102626d: OOB, bytes not captured
>>    1242   2B @0xc1026325: OOB, bytes not captured
>>    1243   6B @0xc1026327: OOB, bytes not captured
>>    1244   4B @0xc1026272: OOB, bytes not captured
>>    1245   3B @0xc1026276: OOB, bytes not captured
>>    1246   2B @0xc1026279: OOB, bytes not captured
>>    1247   2B @0xc102627b: OOB, bytes not captured
>>    1248   5B @0xc102627d: OOB, bytes not captured
>>    1249   4B @0xc1026282: OOB, bytes not captured
>>    1250   6B @0xc1026286: OOB, bytes not captured
>>    1251   3B @0xc102628c: OOB, bytes not captured
>>    1252   3B @0xc102628f: OOB, bytes not captured
>>    1253   3B @0xc1026292: OOB, bytes not captured
>>    1254   4B @0xc1026295: OOB, bytes not captured
>>    1255   4B @0xc1026299: OOB, bytes not captured
>>    1256   3B @0xc102629d: OOB, bytes not captured
>>    1257   3B @0xc10262a0: OOB, bytes not captured
>>    1258   4B @0xc10262a3: OOB, bytes not captured
>>    1259   8B @0xc10262a7: OOB, bytes not captured
>>    1260   4B @0xc10262af: OOB, bytes not captured
>>    1261   7B @0xc10262b3: OOB, bytes not captured
>>    1262   2B @0xc10262ba: OOB, bytes not captured
>>    1263   2B @0xc10262e7: OOB, bytes not captured
>>    1264   2B @0xc10262e9: OOB, bytes not captured
>>    1265   2B @0xc10262eb: OOB, bytes not captured
>>    1266   3B @0xc10262bc: OOB, bytes not captured
>>    1267   3B @0xc10262bf: OOB, bytes not captured
>>    1268   4B @0xc10262c2: OOB, bytes not captured
>>    1269   4B @0xc10262c6: OOB, bytes not captured
>>    1270   2B @0xc10262ca: OOB, bytes not captured
>>    1271   2B @0xc10262cc: OOB, bytes not captured
>>    1272   3B @0xc10262d9: OOB, bytes not captured
>>    1273   7B @0xc10262dc: OOB, bytes not captured
>>    1274   4B @0xc10262e3: OOB, bytes not captured
>>    1275   2B @0xc10262e7: OOB, bytes not captured
>>    1276   2B @0xc10262e9: OOB, bytes not captured
>>    1277   2B @0xc10262eb: OOB, bytes not captured
>>    1278   4B @0xc10262ed: OOB, bytes not captured
>>    1279   2B @0xc10262f1: OOB, bytes not captured
>>    1280   4B @0xc10262f9: OOB, bytes not captured
>>    1281   3B @0xc10262fd: OOB, bytes not captured
>>    1282   7B @0xc1026300: OOB, bytes not captured
>>    1283   7B @0xc1026307: OOB, bytes not captured
>>    1284   3B @0xc102630e: OOB, bytes not captured
>>    1285   2B @0xc1026311: OOB, bytes not captured
>>    1286   3B @0xc1026313: OOB, bytes not captured
>>    1287   5B @0xc1026316: OOB, bytes not captured
>>    1288   2B @0xc1139583: OOB, bytes not captured
>>    1289   2B @0xc1139585: OOB, bytes not captured
>>    1290   6B @0xc1139587: OOB, bytes not captured
>>    1291   7B @0xc102631b: OOB, bytes not captured
>>    1292   3B @0xc1026322: OOB, bytes not captured
>>    1293   2B @0xc1026325: OOB, bytes not captured
>>    1294   6B @0xc1026327: OOB, bytes not captured
>>    1295   3B @0xc102632d: OOB, bytes not captured
>>    1296   1B @0xc1026330: OOB, bytes not captured
>>    1297   1B @0xc1026331: OOB, bytes not captured
>>    1298   1B @0xc1026332: OOB, bytes not captured
>>    1299   1B @0xc1026333: OOB, bytes not captured
>>    1300   1B @0xc1026334: OOB, bytes not captured
>>    1301   4B @0xc126dd64: OOB, bytes not captured
>>    1302   5B @0xc126dd68: OOB, bytes not captured
>>    1303   1B @0xc102092e: OOB, bytes not captured
>>    1304   2B @0xc102092f: OOB, bytes not captured
>>    1305   1B @0xc1020931: OOB, bytes not captured
>>    1306   3B @0xc1020932: OOB, bytes not captured
>>    1307   3B @0xc1020935: OOB, bytes not captured
>>    1308   2B @0xc1020938: OOB, bytes not captured
>>    1309   2B @0xc1020941: OOB, bytes not captured
>>    1310   5B @0xc1020943: OOB, bytes not captured
>>    1311   1B @0xc1026586: OOB, bytes not captured
>>    1312   2B @0xc1026587: OOB, bytes not captured
>>    1313   1B @0xc1026589: OOB, bytes not captured
>>    1314   1B @0xc102658a: OOB, bytes not captured
>>    1315   1B @0xc102658b: OOB, bytes not captured
>>    1316   2B @0xc102658c: OOB, bytes not captured
>>    1317   4B @0xc102658e: OOB, bytes not captured
>>    1318   6B @0xc1026592: OOB, bytes not captured
>>    1319   3B @0xc1026598: OOB, bytes not captured
>>    1320   3B @0xc102659b: OOB, bytes not captured
>>    1321   5B @0xc102659e: OOB, bytes not captured
>>    1322   2B @0xc10265a3: OOB, bytes not captured
>>    1323   3B @0xc10265a5: OOB, bytes not captured
>>    1324   3B @0xc10265a8: OOB, bytes not captured
>>    1325   3B @0xc10265ab: OOB, bytes not captured
>>    1326   2B @0xc10265ae: OOB, bytes not captured
>>    1327   2B @0xc10265b0: OOB, bytes not captured
>>    1328   2B @0xc10265c2: OOB, bytes not captured
>>    1329   3B @0xc10265c4: OOB, bytes not captured
>>    1330   2B @0xc10265c7: OOB, bytes not captured
>>    1331   2B @0xc10265c9: OOB, bytes not captured
>>    1332   2B @0xc10265d9: OOB, bytes not captured
>>    1333   2B @0xc10265db: OOB, bytes not captured
>>    1334   2B @0xc10265fb: OOB, bytes not captured
>>    1335   2B @0xc10265fd: OOB, bytes not captured
>>    1336   3B @0xc10265dd: OOB, bytes not captured
>>    1337   3B @0xc10265e0: OOB, bytes not captured
>>    1338   2B @0xc10265e3: OOB, bytes not captured
>>    1339   3B @0xc10265ec: OOB, bytes not captured
>>    1340   2B @0xc10265ef: OOB, bytes not captured
>>    1341   3B @0xc10265f8: OOB, bytes not captured
>>    1342   2B @0xc10265fb: OOB, bytes not captured
>>    1343   2B @0xc10265fd: OOB, bytes not captured
>>    1344   2B @0xc10265ff: OOB, bytes not captured
>>    1345   2B @0xc1026601: OOB, bytes not captured
>>    1346   5B @0xc1026603: OOB, bytes not captured
>>    1347   1B @0xc10257be: OOB, bytes not captured
>>    1348   2B @0xc10257bf: OOB, bytes not captured
>>    1349   1B @0xc10257c1: OOB, bytes not captured
>>    1350   2B @0xc10257c2: OOB, bytes not captured
>>    1351   1B @0xc10257c4: OOB, bytes not captured
>>    1352   4B @0xc10257c5: OOB, bytes not captured
>>    1353   2B @0xc10257c9: OOB, bytes not captured
>>    1354   3B @0xc10257cb: OOB, bytes not captured
>>    1355   3B @0xc10257ce: OOB, bytes not captured
>>    1356   2B @0xc10257d1: OOB, bytes not captured
>>    1357   2B @0xc10257d3: OOB, bytes not captured
>>    1358   5B @0xc10257d5: OOB, bytes not captured
>>    1359   3B @0xc11397d8: OOB, bytes not captured
>>    1360   2B @0xc11397db: OOB, bytes not captured
>>    1361   2B @0xc11397dd: OOB, bytes not captured
>>    1362   2B @0xc11397e3: OOB, bytes not captured
>>    1363   2B @0xc11397e5: OOB, bytes not captured
>>    1364   3B @0xc10257da: OOB, bytes not captured
>>    1365   3B @0xc10257dd: OOB, bytes not captured
>>    1366   2B @0xc10257e0: OOB, bytes not captured
>>    1367   5B @0xc10257e2: OOB, bytes not captured
>>    1368   2B @0xc1139650: OOB, bytes not captured
>>    1369   3B @0xc1139652: OOB, bytes not captured
>>    1370   2B @0xc1139655: OOB, bytes not captured
>>    1371   2B @0xc1139657: OOB, bytes not captured
>>    1372   2B @0xc1139659: OOB, bytes not captured
>>    1373   2B @0xc113965b: OOB, bytes not captured
>>    1374   3B @0xc113966c: OOB, bytes not captured
>>    1375   5B @0xc113966f: OOB, bytes not captured
>>    1376   2B @0xc1139674: OOB, bytes not captured
>>    1377   6B @0xc1139676: OOB, bytes not captured
>>    1378   5B @0xc113967c: OOB, bytes not captured
>>    1379   2B @0xc1139780: OOB, bytes not captured
>>    1380   2B @0xc1139782: OOB, bytes not captured
>>    1381   3B @0xc1139784: OOB, bytes not captured
>>    1382   2B @0xc1139787: OOB, bytes not captured
>>    1383   3B @0xc1139796: OOB, bytes not captured
>>    1384   1B @0xc1139799: OOB, bytes not captured
>>    1385   1B @0xc113979a: OOB, bytes not captured
>>    1386   1B @0xc113979b: OOB, bytes not captured
>>    1387   1B @0xc113979c: OOB, bytes not captured
>>    1388   1B @0xc113979d: OOB, bytes not captured
>>    1389   1B @0xc113979e: OOB, bytes not captured
>>    1390   1B @0xc113979f: OOB, bytes not captured
>>    1391   3B @0xc10257e7: OOB, bytes not captured
>>    1392   1B @0xc10257ea: OOB, bytes not captured
>>    1393   6B @0xc10257eb: OOB, bytes not captured
>>    1394   6B @0xc10257f1: OOB, bytes not captured
>>    1395   3B @0xc10257f7: OOB, bytes not captured
>>    1396   3B @0xc10257fa: OOB, bytes not captured
>>    1397   3B @0xc10257fd: OOB, bytes not captured
>>    1398   3B @0xc1025800: OOB, bytes not captured
>>    1399   3B @0xc1025803: OOB, bytes not captured
>>    1400   3B @0xc1025806: OOB, bytes not captured
>>    1401   3B @0xc1025809: OOB, bytes not captured
>>    1402   1B @0xc102580c: OOB, bytes not captured
>>    1403   1B @0xc102580d: OOB, bytes not captured
>>    1404   1B @0xc102580e: OOB, bytes not captured
>>    1405   3B @0xc1026608: OOB, bytes not captured
>>    1406   2B @0xc102660b: OOB, bytes not captured
>>    1407   2B @0xc102660d: OOB, bytes not captured
>>    1408   2B @0xc102660f: OOB, bytes not captured
>>    1409   5B @0xc1026611: OOB, bytes not captured
>>    1410   2B @0xc1026616: OOB, bytes not captured
>>    1411   2B @0xc1026618: OOB, bytes not captured
>>    1412   2B @0xc102661a: OOB, bytes not captured
>>    1413   5B @0xc102661c: OOB, bytes not captured
>>    1414   2B @0xc1026621: OOB, bytes not captured
>>    1415   1B @0xc1026623: OOB, bytes not captured
>>    1416   1B @0xc1026624: OOB, bytes not captured
>>    1417   1B @0xc1026625: OOB, bytes not captured
>>    1418   1B @0xc1026626: OOB, bytes not captured
>>    1419   1B @0xc1026627: OOB, bytes not captured
>>    1420   2B @0xc1020948: OOB, bytes not captured
>>    1421   2B @0xc102094a: OOB, bytes not captured
>>    1422   1B @0xc102095b: OOB, bytes not captured
>>    1423   1B @0xc102095c: OOB, bytes not captured
>>    1424   1B @0xc102095d: OOB, bytes not captured
>>    1425   2B @0xc126dd6d: OOB, bytes not captured
>>    1426   2B @0xc126dd6f: OOB, bytes not captured
>>    1427   6B @0xc126dd71: OOB, bytes not captured
>>    1428   7B @0xc126dd77: OOB, bytes not captured
>>    1429   6B @0xc126dd7e: OOB, bytes not captured
>>    1430   3B @0xc126dd84: OOB, bytes not captured
>>    1431   5B @0xc126dd87: OOB, bytes not captured
>>    1432   3B @0xc126dd8c: OOB, bytes not captured
>>    1433   7B @0xc126dd8f: OOB, bytes not captured
>>    1434   3B @0xc126dd96: OOB, bytes not captured
>>    1435   6B @0xc126dd99: OOB, bytes not captured
>>    1436   2B @0xc126dd9f: OOB, bytes not captured
>>    1437   3B @0xc126dda1: OOB, bytes not captured
>>    1438   2B @0xc126dda4: OOB, bytes not captured
>>    1439   2B @0xc126dda6: OOB, bytes not captured
>>    1440   6B @0xc126dda8: OOB, bytes not captured
>>    1441   6B @0xc126ddae: OOB, bytes not captured
>>    1442   2B @0xc126ddb4: OOB, bytes not captured
>>    1443   7B @0xc126ddb6: OOB, bytes not captured
>>    1444   7B @0xc126ddbd: OOB, bytes not captured
>>    1445   6B @0xc126ddc4: OOB, bytes not captured
>>    1446   6B @0xc126ddca: OOB, bytes not captured
>>    1447   6B @0xc126ddd0: OOB, bytes not captured
>>    1448   6B @0xc126ddd6: OOB, bytes not captured
>>    1449   3B @0xc126dddc: OOB, bytes not captured
>>    1450   5B @0xc126dddf: OOB, bytes not captured
>>    1451   3B @0xc126dde4: OOB, bytes not captured
>>    1452   7B @0xc126dde7: OOB, bytes not captured
>>    1453   7B @0xc126ddee: OOB, bytes not captured
>>    1454   7B @0xc126ddf5: OOB, bytes not captured
>>    1455   4B @0xc126ddfc: OOB, bytes not captured
>>    1456   2B @0xc126de00: OOB, bytes not captured
>>    1457   4B @0xc126de02: OOB, bytes not captured
>>    1458   6B @0xc126de06: OOB, bytes not captured
>>    1459   2B @0xc126de0c: OOB, bytes not captured
>>    1460   6B @0xc126de0e: OOB, bytes not captured
>>    1461   2B @0xc126de14: OOB, bytes not captured
>>    1462   2B @0xc126de16: OOB, bytes not captured
>>    1463   2B @0xc126de18: OOB, bytes not captured
>>    1464   4B @0xc126de1a: OOB, bytes not captured
>>    1465   4B @0xc126de1e: OOB, bytes not captured
>>    1466   2B @0xc126de22: OOB, bytes not captured
>>    1467   2B @0xc126de24: OOB, bytes not captured
>>    1468   6B @0xc126de26: OOB, bytes not captured
>>    1469   6B @0xc126de2c: OOB, bytes not captured
>>    1470  10B @0xc126de32: OOB, bytes not captured
>>    1471  10B @0xc126de3c: OOB, bytes not captured
>>    1472   4B @0xc126de46: OOB, bytes not captured
>>    1473   4B @0xc126de4a: OOB, bytes not captured
>>    1474   6B @0xc126de4e: OOB, bytes not captured
>>    1475   6B @0xc126de54: OOB, bytes not captured
>>    1476   6B @0xc126de5a: OOB, bytes not captured
>>    1477   4B @0xc126de60: OOB, bytes not captured
>>    1478   2B @0xc126de64: OOB, bytes not captured
>>    1479   2B @0xc126de66: OOB, bytes not captured
>>    1480   5B @0xc126de68: OOB, bytes not captured
>>    1481   1B @0xc10868d6: OOB, bytes not captured
>>    1482   2B @0xc10868d7: OOB, bytes not captured
>>    1483   1B @0xc10868d9: OOB, bytes not captured
>>    1484   1B @0xc10868da: OOB, bytes not captured
>>    1485   2B @0xc10868db: OOB, bytes not captured
>>    1486   1B @0xc10868dd: OOB, bytes not captured
>>    1487   5B @0xc10868de: OOB, bytes not captured
>>    1488   3B @0xc10868e3: OOB, bytes not captured
>>    1489   7B @0xc10868e6: OOB, bytes not captured
>>    1490   4B @0xc10868ed: OOB, bytes not captured
>>    1491   6B @0xc10868f1: OOB, bytes not captured
>>    1492   3B @0xc10868f7: OOB, bytes not captured
>>    1493   5B @0xc10868fa: OOB, bytes not captured
>>    1494   2B @0xc10868ff: OOB, bytes not captured
>>    1495   2B @0xc1086901: OOB, bytes not captured
>>    1496   2B @0xc1086924: OOB, bytes not captured
>>    1497   6B @0xc1086926: OOB, bytes not captured
>>    1498   3B @0xc1086b0c: OOB, bytes not captured
>>    1499   1B @0xc1086b0f: OOB, bytes not captured
>>    1500   1B @0xc1086b10: OOB, bytes not captured
>>    1501   1B @0xc1086b11: OOB, bytes not captured
>>    1502   1B @0xc1086b12: OOB, bytes not captured
>>    1503   1B @0xc1086b13: OOB, bytes not captured
>>    1504   4B @0xc126de6d: OOB, bytes not captured
>>    1505   4B @0xc126de71: OOB, bytes not captured
>>    1506   4B @0xc126de75: OOB, bytes not captured
>>    1507   6B @0xc126de79: OOB, bytes not captured
>>    1508   4B @0xc126de7f: OOB, bytes not captured
>>    1509   2B @0xc126de83: OOB, bytes not captured
>>    1510   6B @0xc126de85: OOB, bytes not captured
>>    1511   2B @0xc126de8b: OOB, bytes not captured
>>    1512   2B @0xc126de8d: OOB, bytes not captured
>>    1513   7B @0xc126dea3: OOB, bytes not captured
>>    1514   2B @0xc126deaa: OOB, bytes not captured
>>    1515   6B @0xc126dec8: OOB, bytes not captured
>>    1516   2B @0xc126dece: OOB, bytes not captured
>>    1517   6B @0xc126ded0: OOB, bytes not captured
>>    1518   6B @0xc126ded6: OOB, bytes not captured
>>    1519   2B @0xc126dedc: OOB, bytes not captured
>>    1520   2B @0xc126dede: OOB, bytes not captured
>>    1521   2B @0xc126df03: OOB, bytes not captured
>>    1522   2B @0xc126df05: OOB, bytes not captured
>>    1523   2B @0xc126df07: OOB, bytes not captured
>>    1524   5B @0xc126df09: OOB, bytes not captured
>>    1525   1B @0xc1024e18: OOB, bytes not captured
>>    1526   2B @0xc1024e19: OOB, bytes not captured
>>    1527   1B @0xc1024e1b: OOB, bytes not captured
>>    1528   1B @0xc1024e1c: OOB, bytes not captured
>>    1529   2B @0xc1024e1d: OOB, bytes not captured
>>    1530   3B @0xc1024e1f: OOB, bytes not captured
>>    1531   7B @0xc1024e22: OOB, bytes not captured
>>    1532   2B @0xc1024e29: OOB, bytes not captured
>>    1533   2B @0xc1024e2b: OOB, bytes not captured
>>    1534  11B @0xc1024e2d: OOB, bytes not captured
>>    1535   7B @0xc1024e38: OOB, bytes not captured
>>    1536   6B @0xc1024e3f: OOB, bytes not captured
>>    1537   8B @0xc1024e45: OOB, bytes not captured
>>    1538   3B @0xc1024e4d: OOB, bytes not captured
>>    1539   5B @0xc1024e50: OOB, bytes not captured
>>    1540   3B @0xc1024e55: OOB, bytes not captured
>>    1541   3B @0xc1024e58: OOB, bytes not captured
>>    1542   6B @0xc1024e5b: OOB, bytes not captured
>>    1543   8B @0xc1024e61: OOB, bytes not captured
>>    1544   6B @0xc1024e69: OOB, bytes not captured
>>    1545   6B @0xc1024e6f: OOB, bytes not captured
>>    1546   2B @0xc1024e75: OOB, bytes not captured
>>    1547   1B @0xc1024ec9: OOB, bytes not captured
>>    1548   1B @0xc1024eca: OOB, bytes not captured
>>    1549   1B @0xc1024ecb: OOB, bytes not captured
>>    1550   1B @0xc1024ecc: OOB, bytes not captured
>>    1551   1B @0xc1024ecd: OOB, bytes not captured
>>    1552   1B @0xc1024ece: OOB, bytes not captured
>>    1553   7B @0xc126df0e: OOB, bytes not captured
>>    1554   2B @0xc126df15: OOB, bytes not captured
>>    1555   2B @0xc126df2b: OOB, bytes not captured
>>    1556   2B @0xc126df2d: OOB, bytes not captured
>>    1557   1B @0xc126df2f: OOB, bytes not captured
>>    1558   1B @0xc126df30: OOB, bytes not captured
>>    1559   6B @0xc126df31: OOB, bytes not captured
>>    1560   6B @0xc126df37: OOB, bytes not captured
>>    1561  10B @0xc126df3d: OOB, bytes not captured
>>    1562   6B @0xc126df47: OOB, bytes not captured
>>    1563   6B @0xc126df4d: OOB, bytes not captured
>>    1564   7B @0xc126df53: OOB, bytes not captured
>>    1565   5B @0xc126df5a: OOB, bytes not captured
>>    1566   1B @0xc1001e41: OOB, bytes not captured
>>    1567   1B @0xc1001e42: OOB, bytes not captured
>>    1568   1B @0xc1001e43: OOB, bytes not captured
>>    1569   2B @0xc1001e44: OOB, bytes not captured
>>    1570   1B @0xc1001e46: OOB, bytes not captured
>>    1571   2B @0xc1001e47: OOB, bytes not captured
>>    1572   3B @0xc1001e49: OOB, bytes not captured
>>    1573   5B @0xc1001e4c: OOB, bytes not captured
>>    1574   6B @0xc1001e51: OOB, bytes not captured
>>    1575   7B @0xc1001e57: OOB, bytes not captured
>>    1576   4B @0xc1001e5e: OOB, bytes not captured
>>    1577   2B @0xc1001e62: OOB, bytes not captured
>>    1578   2B @0xc1001e64: OOB, bytes not captured
>>    1579   4B @0xc1001e66: OOB, bytes not captured
>>    1580   3B @0xc1001e6a: OOB, bytes not captured
>>    1581   2B @0xc1001e6d: OOB, bytes not captured
>>    1582   2B @0xc1001e6f: OOB, bytes not captured
>>    1583   7B @0xc1001e71: OOB, bytes not captured
>>    1584   3B @0xc1001e78: OOB, bytes not captured
>>    1585   2B @0xc1001e7b: OOB, bytes not captured
>>    1586   3B @0xc1001e7d: OOB, bytes not captured
>>    1587   3B @0xc1001e80: OOB, bytes not captured
>>    1588   2B @0xc1001e83: OOB, bytes not captured
>>    1589   2B @0xc1001e85: OOB, bytes not captured
>>    1590   7B @0xc1001edd: OOB, bytes not captured
>>    1591   2B @0xc1001ee4: OOB, bytes not captured
>>    1592   2B @0xc1001ee6: OOB, bytes not captured
>>    1593   2B @0xc1001ee8: OOB, bytes not captured
>>    1594   6B @0xc1001ef4: OOB, bytes not captured
>>    1595   3B @0xc1001efa: OOB, bytes not captured
>>    1596   2B @0xc1001efd: OOB, bytes not captured
>>    1597   5B @0xc1001eff: OOB, bytes not captured
>>    1598   1B @0xc101abc9: OOB, bytes not captured
>>    1599   2B @0xc101abca: OOB, bytes not captured
>>    1600   3B @0xc101abcc: OOB, bytes not captured
>>    1601   3B @0xc101abcf: OOB, bytes not captured
>>    1602   4B @0xc101abd2: OOB, bytes not captured
>>    1603   3B @0xc101abd6: OOB, bytes not captured
>>    1604   2B @0xc101abd9: OOB, bytes not captured
>>    1605   2B @0xc101abdb: OOB, bytes not captured
>>    1606   1B @0xc101abf1: OOB, bytes not captured
>>    1607   1B @0xc101abf2: OOB, bytes not captured
>>    1608   1B @0xc1001f04: OOB, bytes not captured
>>    1609   2B @0xc1001f05: OOB, bytes not captured
>>    1610   4B @0xc1001f07: OOB, bytes not captured
>>    1611   5B @0xc1001f0b: OOB, bytes not captured
>>    1612   1B @0xc101acbe: OOB, bytes not captured
>>    1613   2B @0xc101acbf: OOB, bytes not captured
>>    1614   1B @0xc101acc1: OOB, bytes not captured
>>    1615   5B @0xc101acc2: OOB, bytes not captured
>>    1616   7B @0xc101acc7: OOB, bytes not captured
>>    1617   2B @0xc101acce: OOB, bytes not captured
>>    1618   3B @0xc101acd0: OOB, bytes not captured
>>    1619   4B @0xc101acd3: OOB, bytes not captured
>>    1620   4B @0xc101acd7: OOB, bytes not captured
>>    1621   4B @0xc101acdb: OOB, bytes not captured
>>    1622   1B @0xc101acdf: OOB, bytes not captured
>>    1623   3B @0xc101ace0: OOB, bytes not captured
>>    1624   2B @0xc101ace3: OOB, bytes not captured
>>    1625   3B @0xc101acd0: OOB, bytes not captured
>>    1626   4B @0xc101acd3: OOB, bytes not captured
>>    1627   4B @0xc101acd7: OOB, bytes not captured
>>    1628   4B @0xc101acdb: OOB, bytes not captured
>>    1629   1B @0xc101acdf: OOB, bytes not captured
>>    1630   3B @0xc101ace0: OOB, bytes not captured
>>    1631   2B @0xc101ace3: OOB, bytes not captured
>>    1632   1B @0xc101ace5: OOB, bytes not captured
>>    1633   1B @0xc101ace6: OOB, bytes not captured
>>    1634   1B @0xc101ace7: OOB, bytes not captured
>>    1635   1B @0xc1001f10: OOB, bytes not captured
>>    1636   7B @0xc1001f11: OOB, bytes not captured
>>    1637   2B @0xc1001f18: OOB, bytes not captured
>>    1638   3B @0xc1001f2e: OOB, bytes not captured
>>    1639   7B @0xc1001f31: OOB, bytes not captured
>>    1640   2B @0xc1001f38: OOB, bytes not captured
>>    1641   3B @0xc1001f3a: OOB, bytes not captured
>>    1642   7B @0xc1001f3d: OOB, bytes not captured
>>    1643   2B @0xc1001f44: OOB, bytes not captured
>>    1644   2B @0xc1001f52: OOB, bytes not captured
>>    1645   2B @0xc1001f54: OOB, bytes not captured
>>    1646   2B @0xc1001f56: OOB, bytes not captured
>>    1647   2B @0xc1001f5e: OOB, bytes not captured
>>    1648   6B @0xc1001f60: OOB, bytes not captured
>>    1649   2B @0xc1001f66: OOB, bytes not captured
>>    1650   2B @0xc1001f68: OOB, bytes not captured
>>    1651   2B @0xc1001f6a: OOB, bytes not captured
>>    1652   7B @0xc1001f71: OOB, bytes not captured
>>    1653   2B @0xc1001f78: OOB, bytes not captured
>>    1654   3B @0xc1001f7a: OOB, bytes not captured
>>    1655   1B @0xc1001f7d: OOB, bytes not captured
>>    1656   1B @0xc1001f7e: OOB, bytes not captured
>>    1657   1B @0xc1001f7f: OOB, bytes not captured
>>    1658   1B @0xc1001f80: OOB, bytes not captured
>>    1659   1B @0xc1001f81: OOB, bytes not captured
>>    1660   1B @0xc126df5f: OOB, bytes not captured
>>    1661   1B @0xc126df60: OOB, bytes not captured
>>    1662   3B @0xc126df61: OOB, bytes not captured
>>    1663   3B @0xc126df64: OOB, bytes not captured
>>    1664   5B @0xc126df67: OOB, bytes not captured
>>    1665   6B @0xc126df6c: OOB, bytes not captured
>>    1666   2B @0xc126df72: OOB, bytes not captured
>>    1667   5B @0xc126df74: OOB, bytes not captured
>>    1668   1B @0xc102b82e: OOB, bytes not captured
>>    1669   2B @0xc102b82f: OOB, bytes not captured
>>    1670   1B @0xc102b831: OOB, bytes not captured
>>    1671   1B @0xc102b832: OOB, bytes not captured
>>    1672   1B @0xc102b833: OOB, bytes not captured
>>    1673   2B @0xc102b834: OOB, bytes not captured
>>    1674   3B @0xc102b836: OOB, bytes not captured
>>    1675   6B @0xc102b839: OOB, bytes not captured
>>    1676  10B @0xc102b83f: OOB, bytes not captured
>>    1677   2B @0xc102b849: OOB, bytes not captured
>>    1678   7B @0xc102b84b: OOB, bytes not captured
>>    1679   3B @0xc102b852: OOB, bytes not captured
>>    1680   6B @0xc102b855: OOB, bytes not captured
>>    1681   2B @0xc102b85b: OOB, bytes not captured
>>    1682   5B @0xc102b85d: OOB, bytes not captured
>>    1683   1B @0xc10837f4: OOB, bytes not captured
>>    1684   2B @0xc10837f5: OOB, bytes not captured
>>    1685   1B @0xc10837f7: OOB, bytes not captured
>>    1686   6B @0xc10837f8: OOB, bytes not captured
>>    1687   5B @0xc10837fe: OOB, bytes not captured
>>    1688   7B @0xc1083803: OOB, bytes not captured
>>    1689   2B @0xc108380a: OOB, bytes not captured
>>    1690   2B @0xc108380c: OOB, bytes not captured
>>    1691   1B @0xc1083822: OOB, bytes not captured
>>    1692   1B @0xc1083823: OOB, bytes not captured
>>    1693   1B @0xc1083824: OOB, bytes not captured
>>    1694   2B @0xc102b862: OOB, bytes not captured
>>    1695   1B @0xc102b864: OOB, bytes not captured
>>    1696   1B @0xc102b865: OOB, bytes not captured
>>    1697   4B @0xc102b866: OOB, bytes not captured
>>    1698   6B @0xc102b86a: OOB, bytes not captured
>>    1699   2B @0xc102b870: OOB, bytes not captured
>>    1700   2B @0xc102b872: OOB, bytes not captured
>>    1701   2B @0xc102b88c: OOB, bytes not captured
>>    1702   2B @0xc102b88e: OOB, bytes not captured
>>    1703   4B @0xc102b8a4: OOB, bytes not captured
>>    1704   2B @0xc102b8a8: OOB, bytes not captured
>>    1705   1B @0xc102b8bd: OOB, bytes not captured
>>    1706   1B @0xc102b8be: OOB, bytes not captured
>>    1707   1B @0xc102b8bf: OOB, bytes not captured
>>    1708   1B @0xc102b8c0: OOB, bytes not captured
>>    1709   1B @0xc102b8c1: OOB, bytes not captured
>>    1710   1B @0xc102b8c2: OOB, bytes not captured
>>    1711   7B @0xc126df79: OOB, bytes not captured
>>    1712   7B @0xc126df80: OOB, bytes not captured
>>    1713   4B @0xc126df87: OOB, bytes not captured
>>    1714   4B @0xc126df8b: OOB, bytes not captured
>>    1715   2B @0xc126df8f: OOB, bytes not captured
>>    1716   4B @0xc126df9d: OOB, bytes not captured
>>    1717   5B @0xc126dfa1: OOB, bytes not captured
>>    1718   1B @0xc1024b08: OOB, bytes not captured
>>    1719   1B @0xc1024b09: OOB, bytes not captured
>>    1720   2B @0xc1024b0a: OOB, bytes not captured
>>    1721   7B @0xc1024b0c: OOB, bytes not captured
>>    1722   2B @0xc1024b13: OOB, bytes not captured
>>    1723   1B @0xc1024b43: OOB, bytes not captured
>>    1724   1B @0xc1024b44: OOB, bytes not captured
>>    1725   1B @0xc1024b45: OOB, bytes not captured
>>    1726   6B @0xc126dfa6: OOB, bytes not captured
>>    1727   4B @0xc126dfac: OOB, bytes not captured
>>    1728   2B @0xc126dfb0: OOB, bytes not captured
>>    1729   2B @0xc126dfbf: OOB, bytes not captured
>>    1730   5B @0xc126dfc1: OOB, bytes not captured
>>    1731   4B @0xc126dfc6: OOB, bytes not captured
>>    1732   6B @0xc126dfca: OOB, bytes not captured
>>    1733   4B @0xc126d82b: OOB, bytes not captured
>>    1734   7B @0xc126d82f: OOB, bytes not captured
>>    1735   7B @0xc126d836: OOB, bytes not captured
>>    1736   2B @0xc126d83d: OOB, bytes not captured
>>    1737   4B @0xc126d83f: OOB, bytes not captured
>>    1738   5B @0xc126d843: OOB, bytes not captured
>>    1739   2B @0xc10262ce: OOB, bytes not captured
>>    1740   2B @0xc10262d0: OOB, bytes not captured
>>    1741   2B @0xc10262d2: OOB, bytes not captured
>>    1742   2B @0xc1001e7b: OOB, bytes not captured
>>    1743   3B @0xc1001e7d: OOB, bytes not captured
>>    1744   3B @0xc1001e80: OOB, bytes not captured
>>    1745   2B @0xc1001e83: OOB, bytes not captured
>>    1746   2B @0xc1001e85: OOB, bytes not captured
>>    1747   2B @0xc126dfd0: OOB, bytes not captured
>>    1748   3B @0xc126dfeb: OOB, bytes not captured
>>    1749   1B @0xc126dfee: OOB, bytes not captured
>>    1750   1B @0xc126dfef: OOB, bytes not captured
>>    1751   1B @0xc126dff0: OOB, bytes not captured
>>    1752   1B @0xc126dff1: OOB, bytes not captured
>>    1753   1B @0xc126dff2: OOB, bytes not captured
>>    1754   2B @0xc126e8a0: OOB, bytes not captured
>>    1755   5B @0xc126e8a2: OOB, bytes not captured
>>    1756   1B @0xc1046f65: OOB, bytes not captured
>>    1757   2B @0xc1046f66: OOB, bytes not captured
>>    1758   2B @0xc1046f68: OOB, bytes not captured
>>    1759   5B @0xc1046f6a: OOB, bytes not captured
>>    1760   1B @0xc1046f30: OOB, bytes not captured
>>    1761   3B @0xc1046f31: OOB, bytes not captured
>>    1762   1B @0xc1046f34: OOB, bytes not captured
>>    1763   2B @0xc1046f35: OOB, bytes not captured
>>    1764   3B @0xc1046f37: OOB, bytes not captured
>>    1765   2B @0xc1046f3a: OOB, bytes not captured
>>    1766   5B @0xc1046f3c: OOB, bytes not captured
>>    1767   1B @0xc1046ecc: OOB, bytes not captured
>>    1768   2B @0xc1046ecd: OOB, bytes not captured
>>    1769   1B @0xc1046ecf: OOB, bytes not captured
>>    1770   2B @0xc1046ed0: OOB, bytes not captured
>>    1771   1B @0xc1046ed2: OOB, bytes not captured
>>    1772   3B @0xc1046ed3: OOB, bytes not captured
>>    1773   2B @0xc1046ed6: OOB, bytes not captured
>>    1774   2B @0xc1046ed8: OOB, bytes not captured
>>    1775   2B @0xc1046eda: OOB, bytes not captured
>>    1776   5B @0xc1046edc: OOB, bytes not captured
>>    1777   2B @0xc1046ee1: OOB, bytes not captured
>>    1778   3B @0xc1046ee3: OOB, bytes not captured
>>    1779   2B @0xc1046ee6: OOB, bytes not captured
>>    1780   2B @0xc1046ee8: OOB, bytes not captured
>>    1781   1B @0xc1046eea: OOB, bytes not captured
>>    1782   1B @0xc1046eeb: OOB, bytes not captured
>>    1783   1B @0xc1046eec: OOB, bytes not captured
>>    1784   1B @0xc1046eed: OOB, bytes not captured
>>    1785   4B @0xc1046f41: OOB, bytes not captured
>>    1786   2B @0xc1046f45: OOB, bytes not captured
>>    1787   2B @0xc1046f47: OOB, bytes not captured
>>    1788   2B @0xc1046f49: OOB, bytes not captured
>>    1789   5B @0xc1046f4b: OOB, bytes not captured
>>    1790   1B @0xc1046746: OOB, bytes not captured
>>    1791   2B @0xc1046747: OOB, bytes not captured
>>    1792   1B @0xc1046749: OOB, bytes not captured
>>    1793   2B @0xc104674a: OOB, bytes not captured
>>    1794   2B @0xc104674c: OOB, bytes not captured
>>    1795   4B @0xc104674e: OOB, bytes not captured
>>    1796   2B @0xc1046752: OOB, bytes not captured
>>    1797   1B @0xc104678e: OOB, bytes not captured
>>    1798   1B @0xc104678f: OOB, bytes not captured
>>    1799   1B @0xc1046790: OOB, bytes not captured
>>    1800   2B @0xc1046f50: OOB, bytes not captured
>>    1801   3B @0xc1046f52: OOB, bytes not captured
>>    1802   3B @0xc1046f55: OOB, bytes not captured
>>    1803   2B @0xc1046f58: OOB, bytes not captured
>>    1804   5B @0xc1046f5a: OOB, bytes not captured
>>    1805   2B @0xc1046f5f: OOB, bytes not captured
>>    1806   1B @0xc1046f61: OOB, bytes not captured
>>    1807   1B @0xc1046f62: OOB, bytes not captured
>>    1808   1B @0xc1046f63: OOB, bytes not captured
>>    1809   1B @0xc1046f64: OOB, bytes not captured
>>    1810   2B @0xc1046f6f: OOB, bytes not captured
>>    1811   2B @0xc1046f71: OOB, bytes not captured
>>    1812   1B @0xc1046f73: OOB, bytes not captured
>>    1813   1B @0xc1046f74: OOB, bytes not captured
>>    1814   6B @0xc126e8a7: OOB, bytes not captured
>>    1815   6B @0xc126e8ad: OOB, bytes not captured
>>    1816   5B @0xc126e8b3: OOB, bytes not captured
>>    1817   2B @0xc126e8b8: OOB, bytes not captured
>>    1818   2B @0xc126e8ba: OOB, bytes not captured
>>    1819   3B @0xc126e8bc: OOB, bytes not captured
>>    1820   4B @0xc126e8bf: OOB, bytes not captured
>>    1821   7B @0xc126e8c3: OOB, bytes not captured
>>    1822   2B @0xc126e8ca: OOB, bytes not captured
>>    1823   3B @0xc126e8d1: OOB, bytes not captured
>>    1824   1B @0xc126e8d4: OOB, bytes not captured
>>    1825   1B @0xc126e8d5: OOB, bytes not captured
>>    1826   1B @0xc126e8d6: OOB, bytes not captured
>>    1827   1B @0xc126e8d7: OOB, bytes not captured
>>    1828   1B @0xc126e8d8: OOB, bytes not captured
>>    1829   2B @0xc10bef52: OOB, bytes not captured
>>    1830   6B @0xc10bef54: OOB, bytes not captured
>>    1831   6B @0xc10bef5a: OOB, bytes not captured
>>    1832   2B @0xc10bef60: OOB, bytes not captured
>>    1833   3B @0xc10bef62: OOB, bytes not captured
>>    1834   2B @0xc10bef65: OOB, bytes not captured
>>    1835   1B @0xc10bef67: OOB, bytes not captured
>>    1836   1B @0xc10bef68: OOB, bytes not captured
>>    1837   1B @0xc10bef69: OOB, bytes not captured
>>    1838   1B @0xc10bf8a6: OOB, bytes not captured
>>    1839   2B @0xc10bf8a7: OOB, bytes not captured
>>    1840   3B @0xc10bf8a9: OOB, bytes not captured
>>    1841   2B @0xc10bf8ac: OOB, bytes not captured
>>    1842   3B @0xc10bf8ae: OOB, bytes not captured
>>    1843   4B @0xc10bf8b1: OOB, bytes not captured
>>    1844   5B @0xc10bf8b5: OOB, bytes not captured
>>    1845   4B @0xc10bf62d: OOB, bytes not captured
>>    1846   4B @0xc10bf631: OOB, bytes not captured
>>    1847   4B @0xc10bf635: OOB, bytes not captured
>>    1848   4B @0xc10bf639: OOB, bytes not captured
>>    1849   2B @0xc10bf63d: OOB, bytes not captured
>>    1850   4B @0xc10bf63f: OOB, bytes not captured
>>    1851   3B @0xc10bf643: OOB, bytes not captured
>>    1852   4B @0xc10bf646: OOB, bytes not captured
>>    1853   4B @0xc10bf64a: OOB, bytes not captured
>>    1854   3B @0xc10bf64e: OOB, bytes not captured
>>    1855   4B @0xc10bf651: OOB, bytes not captured
>>    1856   4B @0xc10bf655: OOB, bytes not captured
>>    1857   3B @0xc10bf659: OOB, bytes not captured
>>    1858   4B @0xc10bf65c: OOB, bytes not captured
>>    1859   3B @0xc10bf660: OOB, bytes not captured
>>    1860   4B @0xc10bf663: OOB, bytes not captured
>>    1861   3B @0xc10bf667: OOB, bytes not captured
>>    1862   8B @0xc10bf66a: OOB, bytes not captured
>>    1863   8B @0xc10bf672: OOB, bytes not captured
>>    1864   4B @0xc10bf67a: OOB, bytes not captured
>>    1865   2B @0xc10bf67e: OOB, bytes not captured
>>    1866   5B @0xc10bf680: OOB, bytes not captured
>>    1867   4B @0xc10bf820: OOB, bytes not captured
>>    1868   6B @0xc10bf824: OOB, bytes not captured
>>    1869   4B @0xc10bf685: OOB, bytes not captured
>>    1870   4B @0xc10bf689: OOB, bytes not captured
>>    1871   4B @0xc10bf68d: OOB, bytes not captured
>>    1872   3B @0xc10bf691: OOB, bytes not captured
>>    1873   4B @0xc10bf694: OOB, bytes not captured
>>    1874   4B @0xc10bf698: OOB, bytes not captured
>>    1875   4B @0xc10bf69c: OOB, bytes not captured
>>    1876   3B @0xc10bf6a0: OOB, bytes not captured
>>    1877   4B @0xc10bf6a3: OOB, bytes not captured
>>    1878   4B @0xc10bf6a7: OOB, bytes not captured
>>    1879   3B @0xc10bf6ab: OOB, bytes not captured
>>    1880   4B @0xc10bf6ae: OOB, bytes not captured
>>    1881   2B @0xc10bf6b2: OOB, bytes not captured
>>    1882   4B @0xc10bf6b4: OOB, bytes not captured
>>    1883   4B @0xc10bf6b8: OOB, bytes not captured
>>    1884   4B @0xc10bf6bc: OOB, bytes not captured
>>    1885   2B @0xc10bf6c0: OOB, bytes not captured
>>    1886   4B @0xc10bf6c2: OOB, bytes not captured
>>    1887   3B @0xc10bf6c6: OOB, bytes not captured
>>    1888   5B @0xc10bf6c9: OOB, bytes not captured
>>    1889   8B @0xc10bf6ce: OOB, bytes not captured
>>    1890   8B @0xc10bf6d6: OOB, bytes not captured
>>    1891   8B @0xc10bf6de: OOB, bytes not captured
>>    1892   3B @0xc10bf6e6: OOB, bytes not captured
>>    1893   2B @0xc10bf6e9: OOB, bytes not captured
>>    1894   4B @0xc10bf703: OOB, bytes not captured
>>    1895   6B @0xc10bf707: OOB, bytes not captured
>>    1896   4B @0xc10bf7bf: OOB, bytes not captured
>>    1897   3B @0xc10bf7c3: OOB, bytes not captured
>>    1898   4B @0xc10bf7c6: OOB, bytes not captured
>>    1899   6B @0xc10bf7ca: OOB, bytes not captured
>>    1900   4B @0xc10bf6f3: OOB, bytes not captured
>>    1901   4B @0xc10bf6f7: OOB, bytes not captured
>>    1902   6B @0xc10bf6fb: OOB, bytes not captured
>>    1903   2B @0xc10bf701: OOB, bytes not captured
>>    1904   4B @0xc10bf703: OOB, bytes not captured
>>    1905   6B @0xc10bf707: OOB, bytes not captured
>>    1906   4B @0xc10bf70d: OOB, bytes not captured
>>    1907   7B @0xc10bf711: OOB, bytes not captured
>>    1908   5B @0xc10bf718: OOB, bytes not captured
>>    1909   2B @0xc10bf71d: OOB, bytes not captured
>>    1910   2B @0xc10bf71f: OOB, bytes not captured
>>    1911   6B @0xc10bf721: OOB, bytes not captured
>>    1912   3B @0xc10bf727: OOB, bytes not captured
>>    1913   2B @0xc10bf72a: OOB, bytes not captured
>>    1914   2B @0xc10bf72c: OOB, bytes not captured
>>    1915   3B @0xc10bf72e: OOB, bytes not captured
>>    1916   2B @0xc10bf731: OOB, bytes not captured
>>    1917   2B @0xc10bf733: OOB, bytes not captured
>>    1918   2B @0xc10bf735: OOB, bytes not captured
>>    1919   2B @0xc10bf737: OOB, bytes not captured
>>    1920   2B @0xc10bf75a: OOB, bytes not captured
>>    1921   2B @0xc10bf75c: OOB, bytes not captured
>>    1922   2B @0xc10bf75e: OOB, bytes not captured
>>    1923   1B @0xc10b8d2a: OOB, bytes not captured
>>    1924   2B @0xc10b8d2b: OOB, bytes not captured
>>    1925   1B @0xc10b8d2d: OOB, bytes not captured
>>    1926   1B @0xc10b8d2e: OOB, bytes not captured
>>    1927   2B @0xc10b8d2f: OOB, bytes not captured
>>    1928   1B @0xc10b8d31: OOB, bytes not captured
>>    1929   3B @0xc10b8d32: OOB, bytes not captured
>>    1930   2B @0xc10b8d35: OOB, bytes not captured
>>    1931   3B @0xc10b8d37: OOB, bytes not captured
>>    1932   6B @0xc10b8d3a: OOB, bytes not captured
>>    1933   2B @0xc10b8d40: OOB, bytes not captured
>>    1934   3B @0xc10b8d4e: OOB, bytes not captured
>>    1935   2B @0xc10b8d51: OOB, bytes not captured
>>    1936   3B @0xc10b8d53: OOB, bytes not captured
>>    1937   3B @0xc10b8d56: OOB, bytes not captured
>>    1938   2B @0xc10b8d59: OOB, bytes not captured
>>    1939   2B @0xc10b8d5b: OOB, bytes not captured
>>    1940   5B @0xc10b8d5d: OOB, bytes not captured
>>    1941   2B @0xc10b8d62: OOB, bytes not captured
>>    1942   3B @0xc10b8d64: OOB, bytes not captured
>>    1943   4B @0xc10b8d67: OOB, bytes not captured
>>    1944   2B @0xc10b8d6b: OOB, bytes not captured
>>    1945   3B @0xc10b8d7f: OOB, bytes not captured
>>    1946   2B @0xc10b8d82: OOB, bytes not captured
>>    1947   2B @0xc10b8d84: OOB, bytes not captured
>>    1948   5B @0xc10b8d86: OOB, bytes not captured
>>    1949   3B @0xc10b8d8b: OOB, bytes not captured
>>    1950   3B @0xc10b8d8e: OOB, bytes not captured
>>    1951   2B @0xc10b8d91: OOB, bytes not captured
>>    1952   2B @0xc10b8d93: OOB, bytes not captured
>>    1953   3B @0xc10b8d95: OOB, bytes not captured
>>    1954   4B @0xc10b8d98: OOB, bytes not captured
>>    1955   3B @0xc10b8d9c: OOB, bytes not captured
>>    1956   2B @0xc10b8d9f: OOB, bytes not captured
>>    1957   1B @0xc10b8da1: OOB, bytes not captured
>>    1958   1B @0xc10b8da2: OOB, bytes not captured
>>    1959   1B @0xc10b8da3: OOB, bytes not captured
>>    1960   1B @0xc10b8da4: OOB, bytes not captured
>>    1961   1B @0xc10b8da5: OOB, bytes not captured
>>    1962   2B @0xc10bf760: OOB, bytes not captured
>>    1963   2B @0xc10bf762: OOB, bytes not captured
>>    1964   8B @0xc10bf769: OOB, bytes not captured
>>    1965   2B @0xc10bf771: OOB, bytes not captured
>>    1966   6B @0xc10bf77a: OOB, bytes not captured
>>    1967   2B @0xc10bf780: OOB, bytes not captured
>>    1968   6B @0xc10bf792: OOB, bytes not captured
>>    1969   2B @0xc10bf798: OOB, bytes not captured
>>    1970   4B @0xc10bf79a: OOB, bytes not captured
>>    1971   2B @0xc10bf79e: OOB, bytes not captured
>>    1972   3B @0xc10bf7aa: OOB, bytes not captured
>>    1973   2B @0xc10bf7ad: OOB, bytes not captured
>>    1974   5B @0xc10bf7d0: OOB, bytes not captured
>>    1975   2B @0xc10bf7d5: OOB, bytes not captured
>>    1976   5B @0xc10bf7e6: OOB, bytes not captured
>>    1977   2B @0xc10bf7eb: OOB, bytes not captured
>>    1978   5B @0xc10bf7fc: OOB, bytes not captured
>>    1979   2B @0xc10bf801: OOB, bytes not captured
>>    1980   5B @0xc10bf812: OOB, bytes not captured
>>    1981   3B @0xc126e0f0: OOB, bytes not captured
>>    1982   5B @0xc126e0f3: OOB, bytes not captured
>>    1983   2B @0xc126e0f8: OOB, bytes not captured
>>    1984   5B @0xc126e0fa: OOB, bytes not captured
>>    1985   3B @0xc126e0ff: OOB, bytes not captured
>>    1986   5B @0xc126e102: OOB, bytes not captured
>>    1987   3B @0xc1141730: OOB, bytes not captured
>>    1988   5B @0xc1141733: OOB, bytes not captured
>>    1989   3B @0xc1141738: OOB, bytes not captured
>>    1990   3B @0xc114173b: OOB, bytes not captured
>>    1991   3B @0xc114173e: OOB, bytes not captured
>>    1992   6B @0xc1141741: OOB, bytes not captured
>>    1993   2B @0xc1141747: OOB, bytes not captured
>>    1994   2B @0xc1141749: OOB, bytes not captured
>>    1995   1B @0xc114174d: OOB, bytes not captured
>>    1996   1B @0xc114174e: OOB, bytes not captured
>>    1997   1B @0xc114174f: OOB, bytes not captured
>>    1998   1B @0xc1141750: OOB, bytes not captured
>>    1999   1B @0xc1141751: OOB, bytes not captured
>>    2000   1B @0xc1141752: OOB, bytes not captured
>>    2001   1B @0xc1003286: OOB, bytes not captured
>>    2002   6B @0xc1003287: OOB, bytes not captured
>>    2003   3B @0xc100328d: OOB, bytes not captured
>>    2004   6B @0xc1003290: OOB, bytes not captured
>>    2005   6B @0xc1003296: OOB, bytes not captured
>>    2006   2B @0xbfba34ca:  0  0             add [eax], al           
>>    2007   2B @0xbfba34cc:  0  0             add [eax], al           
>>    2008   2B @0xbfba34ce:  0  0             add [eax], al           
>>    2009   2B @0xbfba34d0:  0  0             add [eax], al           
>>    2010   2B @0xbfba34d2:  0  0             add [eax], al           
>>    2011   2B @0xbfba34d4:  0  0             add [eax], al           
>>    2012   2B @0xbfba34d6:  0  0             add [eax], al           
>>    2013   2B @0xbfba34d8:  0  0             add [eax], al           
>>    2014   2B @0xbfba34da:  0  0             add [eax], al           
>>    2015   2B @0xbfba34dc:  0  0             add [eax], al           
>>    2016   2B @0xbfba34de:  0  0             add [eax], al           
>>    2017   2B @0xbfba34e0:  0  0             add [eax], al           
>>    2018   2B @0xbfba34e2:  0  0             add [eax], al           
>>    2019   2B @0xbfba34e4:  0  0             add [eax], al           
>>    2020   2B @0xbfba34e6:  0  0             add [eax], al           
>>    2021   2B @0xbfba34e8:  0  0             add [eax], al           
>>    2022   2B @0xbfba34ea:  0  0             add [eax], al           
>>    2023   2B @0xbfba34ec:  0  0             add [eax], al           
>>    2024   2B @0xbfba34ee:  0  0             add [eax], al           
>>    2025   2B @0xbfba34f0:  0  0             add [eax], al           
>>    2026   2B @0xbfba34f2:  0  0             add [eax], al           
>>    2027   2B @0xbfba34f4:  0  0             add [eax], al           
>>    2028   2B @0xbfba34f6:  0  0             add [eax], al           
>>    2029   2B @0xbfba34f8:  0  0             add [eax], al           
>>    2030   2B @0xbfba34fa:  0  0             add [eax], al           
>>    2031   2B @0xbfba34fc:  0  0             add [eax], al           
>>    2032   2B @0xbfba34fe:  0  0             add [eax], al           
>>    2033   2B @0xbfba3500:  0  0             add [eax], al           
>>    2034   2B @0xbfba3502:  0  0             add [eax], al           
>>    2035   2B @0xbfba3504:  0  0             add [eax], al           
>>    2036   2B @0xbfba3506:  0  0             add [eax], al           
>>    2037   2B @0xbfba3508:  0  0             add [eax], al           
>>    2038   2B @0xbfba350a:  0  0             add [eax], al           
>>    2039   2B @0xbfba350c:  0  0             add [eax], al           
>>    2040   2B @0xbfba350e:  0  0             add [eax], al           
>>    2041   2B @0xbfba3510:  0  0             add [eax], al           
>>    2042   2B @0xbfba3512:  0  0             add [eax], al           
>>    2043   2B @0xbfba3514:  0  0             add [eax], al           
>>    2044   2B @0xbfba3516:  0  0             add [eax], al           
>>    2045   2B @0xbfba3518:  0  0             add [eax], al           
>>    2046   2B @0xbfba351a:  0  0             add [eax], al           
>>    2047   2B @0xbfba351c:  0  0             add [eax], al           
>>    2048   2B @0xbfba351e:  0  0             add [eax], al           
>>    2049   2B @0xbfba3520:  0  0             add [eax], al           
>>    2050   2B @0xbfba3522:  0  0             add [eax], al           
>>    2051   2B @0xbfba3524:  0  0             add [eax], al           
>>    2052   2B @0xbfba3526:  0  0             add [eax], al           
>>    2053   2B @0xbfba3528:  0  0             add [eax], al           
>>    2054   2B @0xbfba352a:  0  0             add [eax], al           
>>    2055   2B @0xbfba352c:  0  0             add [eax], al           
>>    2056   2B @0xbfba352e:  0  0             add [eax], al           
>>    2057   2B @0xbfba3530:  0  0             add [eax], al           
>>    2058   2B @0xbfba3532:  0  0             add [eax], al           
>>    2059   2B @0xbfba3534:  0  0             add [eax], al           
>>    2060   2B @0xbfba3536:  0  0             add [eax], al           
>>    2061   2B @0xbfba3538:  0  0             add [eax], al           
>>    2062   2B @0xbfba353a:  0  0             add [eax], al           
>>    2063   2B @0xbfba353c:  0  0             add [eax], al           
>>    2064   2B @0xbfba353e:  0  0             add [eax], al           
>>    2065   2B @0xbfba3540:  0  0             add [eax], al           
>>    2066   2B @0xbfba3542:  0  0             add [eax], al           
>>    2067   2B @0xbfba3544:  0  0             add [eax], al           
>>    2068   2B @0xbfba3546:  0  0             add [eax], al           
>>    2069   2B @0xbfba3548:  0  0             add [eax], al           
>>    2070   2B @0xbfba354a:  0  0             add [eax], al           
>>    2071   2B @0xbfba354c:  0  0             add [eax], al           
>>    2072   2B @0xbfba354e:  0  0             add [eax], al           
>>    2073   2B @0xbfba3550:  0  0             add [eax], al           
>>    2074   2B @0xbfba3552:  0  0             add [eax], al           
>>    2075   2B @0xbfba3554:  0  0             add [eax], al           
>>    2076   2B @0xbfba3556:  0  0             add [eax], al           
>>    2077   2B @0xbfba3558:  0  0             add [eax], al           
>>    2078   2B @0xbfba355a:  0  0             add [eax], al           
>>    2079   2B @0xbfba355c:  0  0             add [eax], al           
>>    2080   2B @0xbfba355e:  0  0             add [eax], al           
>>    2081   2B @0xbfba3560:  0  0             add [eax], al           
>>    2082   2B @0xbfba3562:  0  0             add [eax], al           
>>    2083   2B @0xbfba3564:  0  0             add [eax], al           
>>    2084   2B @0xbfba3566:  0  0             add [eax], al           
>>    2085   2B @0xbfba3568:  0  0             add [eax], al           
>>    2086   2B @0xbfba356a:  0  0             add [eax], al           
>>    2087   2B @0xbfba356c:  0  0             add [eax], al           
>>    2088   2B @0xbfba356e:  0  0             add [eax], al           
>>    2089   2B @0xbfba3570:  0  0             add [eax], al           
>>    2090   2B @0xbfba3572:  0  0             add [eax], al           
>>    2091   2B @0xbfba3574:  0  0             add [eax], al           
>>    2092   2B @0xbfba3576:  0  0             add [eax], al           
>>    2093   2B @0xbfba3578:  0  0             add [eax], al           
>>    2094   2B @0xbfba357a:  0  0             add [eax], al           
>>    2095   2B @0xbfba357c:  0  0             add [eax], al           
>>    2096   2B @0xbfba357e:  0  0             add [eax], al           
>>    2097   2B @0xbfba3580: eb 13             jmp 0x15                
>>    2098   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    2099   1B @0xbfba3582: 59                pop ecx                 
>>    2100   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    2101   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    2102   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    2103   1B @0xbfba3589: 43                inc ebx                 
>>    2104   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    2105   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    2106   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (499/504) = 0.990079
>>    Mem_map start_addr: 0xbfba33a2, length: 1024B, exec'ed bytes: 499, range: 504B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33a0     0000 00000000 00000000 00000000    ..............
0xbfba33b0 00000000 00000000 00000000 00000000  ................
0xbfba33c0 00000000 00000000 00000000 00000000  ................
0xbfba33d0 00000000 00000000 00000000 00000000  ................
0xbfba33e0 00000000 00000000 00000000 00000000  ................
0xbfba33f0 00000000 00000000 00000000 00000000  ................
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

41 [State 35] Terminating state 35 with message 'EIP reached, success'
41 [State 35] Switching from state 35 to state 0
Copied 34928 (count=1)
Deleting state 35 0x0x207c1b10
41 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 34
>> fuzzInit: datum forking for value 35
>> fuzzInit: datum forking for value 35
41 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 35)
        (ReadLSB w32 0 v35_fuzz_symb_35)))
    state 36 with condition (Not (Eq false
         (Eq (w32 35)
             (ReadLSB w32 0 v35_fuzz_symb_35))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-35-8048a0e
Size=2 Low=0 splitIndex=1 high=1
41 [State 0] Switching from state 0 to state 36
Copied 34928 (count=1)
Finalizing TB execution 36
s2e_dummyMainFunction
tcg-llvm-tb-35-8048a0e
41 [State 36] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 35 not yet applied), shell_len: 1024, eip: 0x00000000

41 [State 36] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
42 [State 36] Leaving buffer range @0xc126f278, f5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
42 [State 36] Killing state 36
42 [State 36] Terminating state 36 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
42 [State 36] Switching from state 36 to state 0
Copied 34928 (count=1)
Deleting state 36 0x0x207c1b10
42 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 35
>> fuzzInit: datum forking for value 36
>> fuzzInit: datum forking for value 36
42 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 36)
        (ReadLSB w32 0 v36_fuzz_symb_36)))
    state 37 with condition (Not (Eq false
         (Eq (w32 36)
             (ReadLSB w32 0 v36_fuzz_symb_36))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-36-8048a0e
Size=2 Low=0 splitIndex=1 high=1
42 [State 0] Switching from state 0 to state 37
Copied 34928 (count=1)
Finalizing TB execution 37
s2e_dummyMainFunction
tcg-llvm-tb-36-8048a0e
42 [State 37] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 36 not yet applied), shell_len: 1024, eip: 0x00000000

42 [State 37] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
42 [State 37] Leaving buffer range @0xc113c60c, f0 IoB insns; prev insn @0xbfba3595
  1   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
42 [State 37] Entering buffer range @0xbfba3582, 18 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 266. This is the 3th success
>> Success densities, overlay: 0.99004; avg: 0.99004
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33a4:  0  0             add [eax], al           
>>      2   2B @0xbfba33a6:  0  0             add [eax], al           
>>      3   2B @0xbfba33a8:  0  0             add [eax], al           
>>      4   2B @0xbfba33aa:  0  0             add [eax], al           
>>      5   2B @0xbfba33ac:  0  0             add [eax], al           
>>      6   2B @0xbfba33ae:  0  0             add [eax], al           
>>      7   2B @0xbfba33b0:  0  0             add [eax], al           
>>      8   2B @0xbfba33b2:  0  0             add [eax], al           
>>      9   2B @0xbfba33b4:  0  0             add [eax], al           
>>     10   2B @0xbfba33b6:  0  0             add [eax], al           
>>     11   2B @0xbfba33b8:  0  0             add [eax], al           
>>     12   2B @0xbfba33ba:  0  0             add [eax], al           
>>     13   2B @0xbfba33bc:  0  0             add [eax], al           
>>     14   2B @0xbfba33be:  0  0             add [eax], al           
>>     15   2B @0xbfba33c0:  0  0             add [eax], al           
>>     16   2B @0xbfba33c2:  0  0             add [eax], al           
>>     17   2B @0xbfba33c4:  0  0             add [eax], al           
>>     18   2B @0xbfba33c6:  0  0             add [eax], al           
>>     19   2B @0xbfba33c8:  0  0             add [eax], al           
>>     20   2B @0xbfba33ca:  0  0             add [eax], al           
>>     21   2B @0xbfba33cc:  0  0             add [eax], al           
>>     22   2B @0xbfba33ce:  0  0             add [eax], al           
>>     23   2B @0xbfba33d0:  0  0             add [eax], al           
>>     24   2B @0xbfba33d2:  0  0             add [eax], al           
>>     25   2B @0xbfba33d4:  0  0             add [eax], al           
>>     26   2B @0xbfba33d6:  0  0             add [eax], al           
>>     27   2B @0xbfba33d8:  0  0             add [eax], al           
>>     28   2B @0xbfba33da:  0  0             add [eax], al           
>>     29   2B @0xbfba33dc:  0  0             add [eax], al           
>>     30   2B @0xbfba33de:  0  0             add [eax], al           
>>     31   2B @0xbfba33e0:  0  0             add [eax], al           
>>     32   2B @0xbfba33e2:  0  0             add [eax], al           
>>     33   2B @0xbfba33e4:  0  0             add [eax], al           
>>     34   2B @0xbfba33e6:  0  0             add [eax], al           
>>     35   2B @0xbfba33e8:  0  0             add [eax], al           
>>     36   2B @0xbfba33ea:  0  0             add [eax], al           
>>     37   2B @0xbfba33ec:  0  0             add [eax], al           
>>     38   2B @0xbfba33ee:  0  0             add [eax], al           
>>     39   2B @0xbfba33f0:  0  0             add [eax], al           
>>     40   2B @0xbfba33f2:  0  0             add [eax], al           
>>     41   2B @0xbfba33f4:  0  0             add [eax], al           
>>     42   2B @0xbfba33f6:  0  0             add [eax], al           
>>     43   2B @0xbfba33f8:  0  0             add [eax], al           
>>     44   2B @0xbfba33fa:  0  0             add [eax], al           
>>     45   2B @0xbfba33fc:  0  0             add [eax], al           
>>     46   2B @0xbfba33fe:  0  0             add [eax], al           
>>     47   2B @0xbfba3400:  0  0             add [eax], al           
>>     48   2B @0xbfba3402:  0  0             add [eax], al           
>>     49   2B @0xbfba3404:  0  0             add [eax], al           
>>     50   2B @0xbfba3406:  0  0             add [eax], al           
>>     51   2B @0xbfba3408:  0  0             add [eax], al           
>>     52   2B @0xbfba340a:  0  0             add [eax], al           
>>     53   2B @0xbfba340c:  0  0             add [eax], al           
>>     54   2B @0xbfba340e:  0  0             add [eax], al           
>>     55   2B @0xbfba3410:  0  0             add [eax], al           
>>     56   2B @0xbfba3412:  0  0             add [eax], al           
>>     57   2B @0xbfba3414:  0  0             add [eax], al           
>>     58   2B @0xbfba3416:  0  0             add [eax], al           
>>     59   2B @0xbfba3418:  0  0             add [eax], al           
>>     60   2B @0xbfba341a:  0  0             add [eax], al           
>>     61   2B @0xbfba341c:  0  0             add [eax], al           
>>     62   2B @0xbfba341e:  0  0             add [eax], al           
>>     63   2B @0xbfba3420:  0  0             add [eax], al           
>>     64   2B @0xbfba3422:  0  0             add [eax], al           
>>     65   2B @0xbfba3424:  0  0             add [eax], al           
>>     66   2B @0xbfba3426:  0  0             add [eax], al           
>>     67   2B @0xbfba3428:  0  0             add [eax], al           
>>     68   2B @0xbfba342a:  0  0             add [eax], al           
>>     69   2B @0xbfba342c:  0  0             add [eax], al           
>>     70   2B @0xbfba342e:  0  0             add [eax], al           
>>     71   2B @0xbfba3430:  0  0             add [eax], al           
>>     72   2B @0xbfba3432:  0  0             add [eax], al           
>>     73   2B @0xbfba3434:  0  0             add [eax], al           
>>     74   2B @0xbfba3436:  0  0             add [eax], al           
>>     75   2B @0xbfba3438:  0  0             add [eax], al           
>>     76   2B @0xbfba343a:  0  0             add [eax], al           
>>     77   2B @0xbfba343c:  0  0             add [eax], al           
>>     78   2B @0xbfba343e:  0  0             add [eax], al           
>>     79   2B @0xbfba3440:  0  0             add [eax], al           
>>     80   2B @0xbfba3442:  0  0             add [eax], al           
>>     81   2B @0xbfba3444:  0  0             add [eax], al           
>>     82   2B @0xbfba3446:  0  0             add [eax], al           
>>     83   2B @0xbfba3448:  0  0             add [eax], al           
>>     84   2B @0xbfba344a:  0  0             add [eax], al           
>>     85   2B @0xbfba344c:  0  0             add [eax], al           
>>     86   2B @0xbfba344e:  0  0             add [eax], al           
>>     87   2B @0xbfba3450:  0  0             add [eax], al           
>>     88   2B @0xbfba3452:  0  0             add [eax], al           
>>     89   2B @0xbfba3454:  0  0             add [eax], al           
>>     90   2B @0xbfba3456:  0  0             add [eax], al           
>>     91   2B @0xbfba3458:  0  0             add [eax], al           
>>     92   2B @0xbfba345a:  0  0             add [eax], al           
>>     93   2B @0xbfba345c:  0  0             add [eax], al           
>>     94   2B @0xbfba345e:  0  0             add [eax], al           
>>     95   2B @0xbfba3460:  0  0             add [eax], al           
>>     96   2B @0xbfba3462:  0  0             add [eax], al           
>>     97   2B @0xbfba3464:  0  0             add [eax], al           
>>     98   2B @0xbfba3466:  0  0             add [eax], al           
>>     99   2B @0xbfba3468:  0  0             add [eax], al           
>>    100   2B @0xbfba346a:  0  0             add [eax], al           
>>    101   2B @0xbfba346c:  0  0             add [eax], al           
>>    102   2B @0xbfba346e:  0  0             add [eax], al           
>>    103   2B @0xbfba3470:  0  0             add [eax], al           
>>    104   2B @0xbfba3472:  0  0             add [eax], al           
>>    105   2B @0xbfba3474:  0  0             add [eax], al           
>>    106   2B @0xbfba3476:  0  0             add [eax], al           
>>    107   2B @0xbfba3478:  0  0             add [eax], al           
>>    108   2B @0xbfba347a:  0  0             add [eax], al           
>>    109   2B @0xbfba347c:  0  0             add [eax], al           
>>    110   2B @0xbfba347e:  0  0             add [eax], al           
>>    111   2B @0xbfba3480:  0  0             add [eax], al           
>>    112   2B @0xbfba3482:  0  0             add [eax], al           
>>    113   2B @0xbfba3484:  0  0             add [eax], al           
>>    114   2B @0xbfba3486:  0  0             add [eax], al           
>>    115   2B @0xbfba3488:  0  0             add [eax], al           
>>    116   2B @0xbfba348a:  0  0             add [eax], al           
>>    117   2B @0xbfba348c:  0  0             add [eax], al           
>>    118   2B @0xbfba348e:  0  0             add [eax], al           
>>    119   2B @0xbfba3490:  0  0             add [eax], al           
>>    120   2B @0xbfba3492:  0  0             add [eax], al           
>>    121   2B @0xbfba3494:  0  0             add [eax], al           
>>    122   2B @0xbfba3496:  0  0             add [eax], al           
>>    123   2B @0xbfba3498:  0  0             add [eax], al           
>>    124   2B @0xbfba349a:  0  0             add [eax], al           
>>    125   2B @0xbfba349c:  0  0             add [eax], al           
>>    126   2B @0xbfba349e:  0  0             add [eax], al           
>>    127   2B @0xbfba34a0:  0  0             add [eax], al           
>>    128   2B @0xbfba34a2:  0  0             add [eax], al           
>>    129   2B @0xbfba34a4:  0  0             add [eax], al           
>>    130   2B @0xbfba34a6:  0  0             add [eax], al           
>>    131   2B @0xbfba34a8:  0  0             add [eax], al           
>>    132   2B @0xbfba34aa:  0  0             add [eax], al           
>>    133   2B @0xbfba34ac:  0  0             add [eax], al           
>>    134   2B @0xbfba34ae:  0  0             add [eax], al           
>>    135   2B @0xbfba34b0:  0  0             add [eax], al           
>>    136   2B @0xbfba34b2:  0  0             add [eax], al           
>>    137   2B @0xbfba34b4:  0  0             add [eax], al           
>>    138   2B @0xbfba34b6:  0  0             add [eax], al           
>>    139   2B @0xbfba34b8:  0  0             add [eax], al           
>>    140   2B @0xbfba34ba:  0  0             add [eax], al           
>>    141   2B @0xbfba34bc:  0  0             add [eax], al           
>>    142   2B @0xbfba34be:  0  0             add [eax], al           
>>    143   2B @0xbfba34c0:  0  0             add [eax], al           
>>    144   2B @0xbfba34c2:  0  0             add [eax], al           
>>    145   2B @0xbfba34c4:  0  0             add [eax], al           
>>    146   2B @0xbfba34c6:  0  0             add [eax], al           
>>    147   2B @0xbfba34c8:  0  0             add [eax], al           
>>    148   2B @0xbfba34ca:  0  0             add [eax], al           
>>    149   2B @0xbfba34cc:  0  0             add [eax], al           
>>    150   2B @0xbfba34ce:  0  0             add [eax], al           
>>    151   2B @0xbfba34d0:  0  0             add [eax], al           
>>    152   2B @0xbfba34d2:  0  0             add [eax], al           
>>    153   2B @0xbfba34d4:  0  0             add [eax], al           
>>    154   2B @0xbfba34d6:  0  0             add [eax], al           
>>    155   2B @0xbfba34d8:  0  0             add [eax], al           
>>    156   2B @0xbfba34da:  0  0             add [eax], al           
>>    157   2B @0xbfba34dc:  0  0             add [eax], al           
>>    158   2B @0xbfba34de:  0  0             add [eax], al           
>>    159   2B @0xbfba34e0:  0  0             add [eax], al           
>>    160   2B @0xbfba34e2:  0  0             add [eax], al           
>>    161   2B @0xbfba34e4:  0  0             add [eax], al           
>>    162   2B @0xbfba34e6:  0  0             add [eax], al           
>>    163   2B @0xbfba34e8:  0  0             add [eax], al           
>>    164   2B @0xbfba34ea:  0  0             add [eax], al           
>>    165   2B @0xbfba34ec:  0  0             add [eax], al           
>>    166   2B @0xbfba34ee:  0  0             add [eax], al           
>>    167   2B @0xbfba34f0:  0  0             add [eax], al           
>>    168   2B @0xbfba34f2:  0  0             add [eax], al           
>>    169   2B @0xbfba34f4:  0  0             add [eax], al           
>>    170   2B @0xbfba34f6:  0  0             add [eax], al           
>>    171   2B @0xbfba34f8:  0  0             add [eax], al           
>>    172   2B @0xbfba34fa:  0  0             add [eax], al           
>>    173   2B @0xbfba34fc:  0  0             add [eax], al           
>>    174   2B @0xbfba34fe:  0  0             add [eax], al           
>>    175   2B @0xbfba3500:  0  0             add [eax], al           
>>    176   2B @0xbfba3502:  0  0             add [eax], al           
>>    177   2B @0xbfba3504:  0  0             add [eax], al           
>>    178   2B @0xbfba3506:  0  0             add [eax], al           
>>    179   2B @0xbfba3508:  0  0             add [eax], al           
>>    180   2B @0xbfba350a:  0  0             add [eax], al           
>>    181   2B @0xbfba350c:  0  0             add [eax], al           
>>    182   2B @0xbfba350e:  0  0             add [eax], al           
>>    183   2B @0xbfba3510:  0  0             add [eax], al           
>>    184   2B @0xbfba3512:  0  0             add [eax], al           
>>    185   2B @0xbfba3514:  0  0             add [eax], al           
>>    186   2B @0xbfba3516:  0  0             add [eax], al           
>>    187   2B @0xbfba3518:  0  0             add [eax], al           
>>    188   2B @0xbfba351a:  0  0             add [eax], al           
>>    189   2B @0xbfba351c:  0  0             add [eax], al           
>>    190   2B @0xbfba351e:  0  0             add [eax], al           
>>    191   2B @0xbfba3520:  0  0             add [eax], al           
>>    192   2B @0xbfba3522:  0  0             add [eax], al           
>>    193   2B @0xbfba3524:  0  0             add [eax], al           
>>    194   2B @0xbfba3526:  0  0             add [eax], al           
>>    195   2B @0xbfba3528:  0  0             add [eax], al           
>>    196   2B @0xbfba352a:  0  0             add [eax], al           
>>    197   2B @0xbfba352c:  0  0             add [eax], al           
>>    198   2B @0xbfba352e:  0  0             add [eax], al           
>>    199   2B @0xbfba3530:  0  0             add [eax], al           
>>    200   2B @0xbfba3532:  0  0             add [eax], al           
>>    201   2B @0xbfba3534:  0  0             add [eax], al           
>>    202   2B @0xbfba3536:  0  0             add [eax], al           
>>    203   2B @0xbfba3538:  0  0             add [eax], al           
>>    204   2B @0xbfba353a:  0  0             add [eax], al           
>>    205   2B @0xbfba353c:  0  0             add [eax], al           
>>    206   2B @0xbfba353e:  0  0             add [eax], al           
>>    207   2B @0xbfba3540:  0  0             add [eax], al           
>>    208   2B @0xbfba3542:  0  0             add [eax], al           
>>    209   2B @0xbfba3544:  0  0             add [eax], al           
>>    210   2B @0xbfba3546:  0  0             add [eax], al           
>>    211   2B @0xbfba3548:  0  0             add [eax], al           
>>    212   2B @0xbfba354a:  0  0             add [eax], al           
>>    213   2B @0xbfba354c:  0  0             add [eax], al           
>>    214   2B @0xbfba354e:  0  0             add [eax], al           
>>    215   2B @0xbfba3550:  0  0             add [eax], al           
>>    216   2B @0xbfba3552:  0  0             add [eax], al           
>>    217   2B @0xbfba3554:  0  0             add [eax], al           
>>    218   2B @0xbfba3556:  0  0             add [eax], al           
>>    219   2B @0xbfba3558:  0  0             add [eax], al           
>>    220   2B @0xbfba355a:  0  0             add [eax], al           
>>    221   2B @0xbfba355c:  0  0             add [eax], al           
>>    222   2B @0xbfba355e:  0  0             add [eax], al           
>>    223   2B @0xbfba3560:  0  0             add [eax], al           
>>    224   2B @0xbfba3562:  0  0             add [eax], al           
>>    225   2B @0xbfba3564:  0  0             add [eax], al           
>>    226   2B @0xbfba3566:  0  0             add [eax], al           
>>    227   2B @0xbfba3568:  0  0             add [eax], al           
>>    228   2B @0xbfba356a:  0  0             add [eax], al           
>>    229   2B @0xbfba356c:  0  0             add [eax], al           
>>    230   2B @0xbfba356e:  0  0             add [eax], al           
>>    231   2B @0xbfba3570:  0  0             add [eax], al           
>>    232   2B @0xbfba3572:  0  0             add [eax], al           
>>    233   2B @0xbfba3574:  0  0             add [eax], al           
>>    234   2B @0xbfba3576:  0  0             add [eax], al           
>>    235   2B @0xbfba3578:  0  0             add [eax], al           
>>    236   2B @0xbfba357a:  0  0             add [eax], al           
>>    237   2B @0xbfba357c:  0  0             add [eax], al           
>>    238   2B @0xbfba357e:  0  0             add [eax], al           
>>    239   2B @0xbfba3580: eb 13             jmp 0x15                
>>    240   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    241   2B @0xc113c60c: OOB, bytes not captured
>>    242   2B @0xc113c60e: OOB, bytes not captured
>>    243   6B @0xc113c610: OOB, bytes not captured
>>    244   6B @0xc113c616: OOB, bytes not captured
>>    245   2B @0xc113c6bf: OOB, bytes not captured
>>    246   3B @0xc10b657b: OOB, bytes not captured
>>    247   2B @0xc10b657e: OOB, bytes not captured
>>    248   3B @0xc10b6580: OOB, bytes not captured
>>    249   2B @0xc10b6583: OOB, bytes not captured
>>    250   3B @0xc10b6585: OOB, bytes not captured
>>    251   1B @0xc10b6588: OOB, bytes not captured
>>    252   1B @0xc10b6589: OOB, bytes not captured
>>    253   1B @0xc10b658a: OOB, bytes not captured
>>    254   1B @0xc10b658b: OOB, bytes not captured
>>    255   1B @0xc10b658c: OOB, bytes not captured
>>    256   3B @0xc10b6a35: OOB, bytes not captured
>>    257   1B @0xc10b6a38: OOB, bytes not captured
>>    258   1B @0xc10b6a39: OOB, bytes not captured
>>    259   1B @0xbfba3582: 59                pop ecx                 
>>    260   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    261   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    262   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    263   1B @0xbfba3589: 43                inc ebx                 
>>    264   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    265   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    266   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (497/502) = 0.99004
>>    Mem_map start_addr: 0xbfba33a4, length: 1024B, exec'ed bytes: 497, range: 502B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33a0          00000000 00000000 00000000      ............
0xbfba33b0 00000000 00000000 00000000 00000000  ................
0xbfba33c0 00000000 00000000 00000000 00000000  ................
0xbfba33d0 00000000 00000000 00000000 00000000  ................
0xbfba33e0 00000000 00000000 00000000 00000000  ................
0xbfba33f0 00000000 00000000 00000000 00000000  ................
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

43 [State 37] Terminating state 37 with message 'EIP reached, success'
43 [State 37] Switching from state 37 to state 0
Copied 34928 (count=1)
Deleting state 37 0x0x20081970
43 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 36
>> fuzzInit: datum forking for value 37
>> fuzzInit: datum forking for value 37
43 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 37)
        (ReadLSB w32 0 v37_fuzz_symb_37)))
    state 38 with condition (Not (Eq false
         (Eq (w32 37)
             (ReadLSB w32 0 v37_fuzz_symb_37))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-37-8048a0e
Size=2 Low=0 splitIndex=1 high=1
43 [State 0] Switching from state 0 to state 38
Copied 34928 (count=1)
Finalizing TB execution 38
s2e_dummyMainFunction
tcg-llvm-tb-37-8048a0e
Firing timer event
43 [State 38] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 37 not yet applied), shell_len: 1024, eip: 0x00000000

43 [State 38] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
43 [State 38] Leaving buffer range @0xc126f278, f4 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
43 [State 38] Killing state 38
43 [State 38] Terminating state 38 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
43 [State 38] Switching from state 38 to state 0
Copied 34928 (count=1)
Deleting state 38 0x0x20081970
44 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 37
>> fuzzInit: datum forking for value 38
>> fuzzInit: datum forking for value 38
44 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 38)
        (ReadLSB w32 0 v38_fuzz_symb_38)))
    state 39 with condition (Not (Eq false
         (Eq (w32 38)
             (ReadLSB w32 0 v38_fuzz_symb_38))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-38-8048a0e
Size=2 Low=0 splitIndex=1 high=1
44 [State 0] Switching from state 0 to state 39
Copied 34928 (count=1)
Finalizing TB execution 39
s2e_dummyMainFunction
tcg-llvm-tb-38-8048a0e
Firing timer event
44 [State 39] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 38 not yet applied), shell_len: 1024, eip: 0x00000000

44 [State 39] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 247 instructions, PCs: bfba33a6 bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
44 [State 39] Terminating state 39 with message 'eliminated this false positive, execution path subset of another success'
44 [State 39] Switching from state 39 to state 0
Copied 34928 (count=1)
Deleting state 39 0x0x20a2ce30
44 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 38
>> fuzzInit: datum forking for value 39
>> fuzzInit: datum forking for value 39
44 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 39)
        (ReadLSB w32 0 v39_fuzz_symb_39)))
    state 40 with condition (Not (Eq false
         (Eq (w32 39)
             (ReadLSB w32 0 v39_fuzz_symb_39))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-39-8048a0e
Size=2 Low=0 splitIndex=1 high=1
44 [State 0] Switching from state 0 to state 40
Copied 34928 (count=1)
Finalizing TB execution 40
s2e_dummyMainFunction
tcg-llvm-tb-39-8048a0e
44 [State 40] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 39 not yet applied), shell_len: 1024, eip: 0x00000000

44 [State 40] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
44 [State 40] Leaving buffer range @0xc126f278, f3 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
44 [State 40] Killing state 40
44 [State 40] Terminating state 40 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
44 [State 40] Switching from state 40 to state 0
Copied 34928 (count=1)
Deleting state 40 0x0x20a2ce30
45 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 39
>> fuzzInit: datum forking for value 40
>> fuzzInit: datum forking for value 40
45 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 40)
        (ReadLSB w32 0 v40_fuzz_symb_40)))
    state 41 with condition (Not (Eq false
         (Eq (w32 40)
             (ReadLSB w32 0 v40_fuzz_symb_40))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-40-8048a0e
Size=2 Low=0 splitIndex=1 high=1
45 [State 0] Switching from state 0 to state 41
Copied 34928 (count=1)
Finalizing TB execution 41
s2e_dummyMainFunction
tcg-llvm-tb-40-8048a0e
45 [State 41] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 40 not yet applied), shell_len: 1024, eip: 0x00000000

45 [State 41] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 246 instructions, PCs: bfba33a8 bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
45 [State 41] Terminating state 41 with message 'eliminated this false positive, execution path subset of another success'
45 [State 41] Switching from state 41 to state 0
Copied 34928 (count=1)
Deleting state 41 0x0x20a2ce30
45 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 40
>> fuzzInit: datum forking for value 41
>> fuzzInit: datum forking for value 41
>> fuzzInit: datum forking for value 41
45 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 41)
        (ReadLSB w32 0 v41_fuzz_symb_41)))
    state 42 with condition (Not (Eq false
         (Eq (w32 41)
             (ReadLSB w32 0 v41_fuzz_symb_41))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-41-8048a0e
Size=2 Low=0 splitIndex=1 high=1
45 [State 0] Switching from state 0 to state 42
Copied 34928 (count=1)
Finalizing TB execution 42
s2e_dummyMainFunction
tcg-llvm-tb-41-8048a0e
45 [State 42] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 41 not yet applied), shell_len: 1024, eip: 0x00000000

45 [State 42] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
45 [State 42] Leaving buffer range @0xc126f278, f2 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
45 [State 42] Killing state 42
45 [State 42] Terminating state 42 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
45 [State 42] Switching from state 42 to state 0
Copied 34928 (count=1)
Deleting state 42 0x0x20a2ce30
45 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 41
>> fuzzInit: datum forking for value 42
>> fuzzInit: datum forking for value 42
45 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 42)
        (ReadLSB w32 0 v42_fuzz_symb_42)))
    state 43 with condition (Not (Eq false
         (Eq (w32 42)
             (ReadLSB w32 0 v42_fuzz_symb_42))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-42-8048a0e
Size=2 Low=0 splitIndex=1 high=1
45 [State 0] Switching from state 0 to state 43
Copied 34928 (count=1)
Finalizing TB execution 43
s2e_dummyMainFunction
tcg-llvm-tb-42-8048a0e
46 [State 43] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 42 not yet applied), shell_len: 1024, eip: 0x00000000

46 [State 43] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 245 instructions, PCs: bfba33aa bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
46 [State 43] Terminating state 43 with message 'eliminated this false positive, execution path subset of another success'
46 [State 43] Switching from state 43 to state 0
Copied 34928 (count=1)
Deleting state 43 0x0x20b5eda0
Firing timer event
46 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 42
>> fuzzInit: datum forking for value 43
>> fuzzInit: datum forking for value 43
46 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 43)
        (ReadLSB w32 0 v43_fuzz_symb_43)))
    state 44 with condition (Not (Eq false
         (Eq (w32 43)
             (ReadLSB w32 0 v43_fuzz_symb_43))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-43-8048a0e
Size=2 Low=0 splitIndex=1 high=1
46 [State 0] Switching from state 0 to state 44
Copied 34928 (count=1)
Finalizing TB execution 44
s2e_dummyMainFunction
tcg-llvm-tb-43-8048a0e
46 [State 44] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 43 not yet applied), shell_len: 1024, eip: 0x00000000

46 [State 44] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
46 [State 44] Leaving buffer range @0xc126f278, f1 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
46 [State 44] Killing state 44
46 [State 44] Terminating state 44 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
46 [State 44] Switching from state 44 to state 0
Copied 34928 (count=1)
Deleting state 44 0x0x20b5eda0
46 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 43
>> fuzzInit: datum forking for value 44
>> fuzzInit: datum forking for value 44
46 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 44)
        (ReadLSB w32 0 v44_fuzz_symb_44)))
    state 45 with condition (Not (Eq false
         (Eq (w32 44)
             (ReadLSB w32 0 v44_fuzz_symb_44))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-44-8048a0e
Size=2 Low=0 splitIndex=1 high=1
46 [State 0] Switching from state 0 to state 45
Copied 34928 (count=1)
Finalizing TB execution 45
s2e_dummyMainFunction
tcg-llvm-tb-44-8048a0e
47 [State 45] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 44 not yet applied), shell_len: 1024, eip: 0x00000000

47 [State 45] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 244 instructions, PCs: bfba33ac bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
47 [State 45] Terminating state 45 with message 'eliminated this false positive, execution path subset of another success'
47 [State 45] Switching from state 45 to state 0
Copied 34928 (count=1)
Deleting state 45 0x0x20b5eda0
Firing timer event
47 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 44
>> fuzzInit: datum forking for value 45
>> fuzzInit: datum forking for value 45
47 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 45)
        (ReadLSB w32 0 v45_fuzz_symb_45)))
    state 46 with condition (Not (Eq false
         (Eq (w32 45)
             (ReadLSB w32 0 v45_fuzz_symb_45))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-45-8048a0e
Size=2 Low=0 splitIndex=1 high=1
47 [State 0] Switching from state 0 to state 46
Copied 34928 (count=1)
Finalizing TB execution 46
s2e_dummyMainFunction
tcg-llvm-tb-45-8048a0e
47 [State 46] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 45 not yet applied), shell_len: 1024, eip: 0x00000000

47 [State 46] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
47 [State 46] Leaving buffer range @0xc126f278, f0 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
47 [State 46] Killing state 46
47 [State 46] Terminating state 46 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
47 [State 46] Switching from state 46 to state 0
Copied 34928 (count=1)
Deleting state 46 0x0x20b5eda0
47 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 45
>> fuzzInit: datum forking for value 46
>> fuzzInit: datum forking for value 46
47 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 46)
        (ReadLSB w32 0 v46_fuzz_symb_46)))
    state 47 with condition (Not (Eq false
         (Eq (w32 46)
             (ReadLSB w32 0 v46_fuzz_symb_46))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-46-8048a0e
Size=2 Low=0 splitIndex=1 high=1
47 [State 0] Switching from state 0 to state 47
Copied 34928 (count=1)
Finalizing TB execution 47
s2e_dummyMainFunction
tcg-llvm-tb-46-8048a0e
48 [State 47] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 46 not yet applied), shell_len: 1024, eip: 0x00000000

48 [State 47] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 243 instructions, PCs: bfba33ae bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
48 [State 47] Terminating state 47 with message 'eliminated this false positive, execution path subset of another success'
48 [State 47] Switching from state 47 to state 0
Copied 34928 (count=1)
Deleting state 47 0x0x20bd0cb0
Firing timer event
48 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 46
>> fuzzInit: datum forking for value 47
>> fuzzInit: datum forking for value 47
48 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 47)
        (ReadLSB w32 0 v47_fuzz_symb_47)))
    state 48 with condition (Not (Eq false
         (Eq (w32 47)
             (ReadLSB w32 0 v47_fuzz_symb_47))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-47-8048a0e
Size=2 Low=0 splitIndex=1 high=1
48 [State 0] Switching from state 0 to state 48
Copied 34928 (count=1)
Finalizing TB execution 48
s2e_dummyMainFunction
tcg-llvm-tb-47-8048a0e
48 [State 48] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 47 not yet applied), shell_len: 1024, eip: 0x00000000

48 [State 48] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
48 [State 48] Leaving buffer range @0xc126f278, ef IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
48 [State 48] Killing state 48
48 [State 48] Terminating state 48 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
48 [State 48] Switching from state 48 to state 0
Copied 34928 (count=1)
Deleting state 48 0x0x20bd0cb0
48 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 47
>> fuzzInit: datum forking for value 48
>> fuzzInit: datum forking for value 48
48 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 48)
        (ReadLSB w32 0 v48_fuzz_symb_48)))
    state 49 with condition (Not (Eq false
         (Eq (w32 48)
             (ReadLSB w32 0 v48_fuzz_symb_48))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-48-8048a0e
Size=2 Low=0 splitIndex=1 high=1
48 [State 0] Switching from state 0 to state 49
Copied 34928 (count=1)
Finalizing TB execution 49
s2e_dummyMainFunction
tcg-llvm-tb-48-8048a0e
48 [State 49] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 48 not yet applied), shell_len: 1024, eip: 0x00000000

48 [State 49] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 242 instructions, PCs: bfba33b0 bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
49 [State 49] Terminating state 49 with message 'eliminated this false positive, execution path subset of another success'
49 [State 49] Switching from state 49 to state 0
Copied 34928 (count=1)
Deleting state 49 0x0x20bd0cb0
49 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 48
>> fuzzInit: datum forking for value 49
>> fuzzInit: datum forking for value 49
>> fuzzInit: datum forking for value 49
49 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 49)
        (ReadLSB w32 0 v49_fuzz_symb_49)))
    state 50 with condition (Not (Eq false
         (Eq (w32 49)
             (ReadLSB w32 0 v49_fuzz_symb_49))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-49-8048a0e
Size=2 Low=0 splitIndex=1 high=1
49 [State 0] Switching from state 0 to state 50
Copied 34928 (count=1)
Finalizing TB execution 50
s2e_dummyMainFunction
tcg-llvm-tb-49-8048a0e
Firing timer event
49 [State 50] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 49 not yet applied), shell_len: 1024, eip: 0x00000000

49 [State 50] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
49 [State 50] Leaving buffer range @0xc126f278, ee IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
49 [State 50] Killing state 50
49 [State 50] Terminating state 50 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
49 [State 50] Switching from state 50 to state 0
Copied 34928 (count=1)
Deleting state 50 0x0x20bd0cb0
49 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 49
>> fuzzInit: datum forking for value 50
>> fuzzInit: datum forking for value 50
49 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 50)
        (ReadLSB w32 0 v50_fuzz_symb_50)))
    state 51 with condition (Not (Eq false
         (Eq (w32 50)
             (ReadLSB w32 0 v50_fuzz_symb_50))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-50-8048a0e
Size=2 Low=0 splitIndex=1 high=1
49 [State 0] Switching from state 0 to state 51
Copied 34928 (count=1)
Finalizing TB execution 51
s2e_dummyMainFunction
tcg-llvm-tb-50-8048a0e
49 [State 51] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 50 not yet applied), shell_len: 1024, eip: 0x00000000

49 [State 51] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 241 instructions, PCs: bfba33b2 bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
50 [State 51] Terminating state 51 with message 'eliminated this false positive, execution path subset of another success'
50 [State 51] Switching from state 51 to state 0
Copied 34928 (count=1)
Deleting state 51 0x0x20bd0cb0
50 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 50
>> fuzzInit: datum forking for value 51
>> fuzzInit: datum forking for value 51
50 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 51)
        (ReadLSB w32 0 v51_fuzz_symb_51)))
    state 52 with condition (Not (Eq false
         (Eq (w32 51)
             (ReadLSB w32 0 v51_fuzz_symb_51))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-51-8048a0e
Size=2 Low=0 splitIndex=1 high=1
50 [State 0] Switching from state 0 to state 52
Copied 34928 (count=1)
Finalizing TB execution 52
s2e_dummyMainFunction
tcg-llvm-tb-51-8048a0e
Firing timer event
50 [State 52] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 51 not yet applied), shell_len: 1024, eip: 0x00000000

50 [State 52] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
50 [State 52] Leaving buffer range @0xc126f278, ed IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
50 [State 52] Killing state 52
50 [State 52] Terminating state 52 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
50 [State 52] Switching from state 52 to state 0
Copied 34928 (count=1)
Deleting state 52 0x0x20bd0cb0
50 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 51
>> fuzzInit: datum forking for value 52
>> fuzzInit: datum forking for value 52
50 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 52)
        (ReadLSB w32 0 v52_fuzz_symb_52)))
    state 53 with condition (Not (Eq false
         (Eq (w32 52)
             (ReadLSB w32 0 v52_fuzz_symb_52))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-52-8048a0e
Size=2 Low=0 splitIndex=1 high=1
50 [State 0] Switching from state 0 to state 53
Copied 34928 (count=1)
Finalizing TB execution 53
s2e_dummyMainFunction
tcg-llvm-tb-52-8048a0e
50 [State 53] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 52 not yet applied), shell_len: 1024, eip: 0x00000000

50 [State 53] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 240 instructions, PCs: bfba33b4 bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
50 [State 53] Terminating state 53 with message 'eliminated this false positive, execution path subset of another success'
50 [State 53] Switching from state 53 to state 0
Copied 34928 (count=1)
Deleting state 53 0x0x20bd0cb0
51 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 52
>> fuzzInit: datum forking for value 53
>> fuzzInit: datum forking for value 53
51 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 53)
        (ReadLSB w32 0 v53_fuzz_symb_53)))
    state 54 with condition (Not (Eq false
         (Eq (w32 53)
             (ReadLSB w32 0 v53_fuzz_symb_53))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-53-8048a0e
Size=2 Low=0 splitIndex=1 high=1
51 [State 0] Switching from state 0 to state 54
Copied 34928 (count=1)
Finalizing TB execution 54
s2e_dummyMainFunction
tcg-llvm-tb-53-8048a0e
51 [State 54] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 53 not yet applied), shell_len: 1024, eip: 0x00000000

51 [State 54] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
51 [State 54] Leaving buffer range @0xc126f278, ec IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
51 [State 54] Killing state 54
51 [State 54] Terminating state 54 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
51 [State 54] Switching from state 54 to state 0
Copied 34928 (count=1)
Deleting state 54 0x0x20bd0cb0
51 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 53
>> fuzzInit: datum forking for value 54
>> fuzzInit: datum forking for value 54
51 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 54)
        (ReadLSB w32 0 v54_fuzz_symb_54)))
    state 55 with condition (Not (Eq false
         (Eq (w32 54)
             (ReadLSB w32 0 v54_fuzz_symb_54))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-54-8048a0e
Size=2 Low=0 splitIndex=1 high=1
51 [State 0] Switching from state 0 to state 55
Copied 34928 (count=1)
Finalizing TB execution 55
s2e_dummyMainFunction
tcg-llvm-tb-54-8048a0e
51 [State 55] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 54 not yet applied), shell_len: 1024, eip: 0x00000000

51 [State 55] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 239 instructions, PCs: bfba33b6 bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
51 [State 55] Terminating state 55 with message 'eliminated this false positive, execution path subset of another success'
51 [State 55] Switching from state 55 to state 0
Copied 34928 (count=1)
Deleting state 55 0x0x20eae1e0
52 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 54
>> fuzzInit: datum forking for value 55
>> fuzzInit: datum forking for value 55
52 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 55)
        (ReadLSB w32 0 v55_fuzz_symb_55)))
    state 56 with condition (Not (Eq false
         (Eq (w32 55)
             (ReadLSB w32 0 v55_fuzz_symb_55))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-55-8048a0e
Size=2 Low=0 splitIndex=1 high=1
52 [State 0] Switching from state 0 to state 56
Copied 34928 (count=1)
Finalizing TB execution 56
s2e_dummyMainFunction
tcg-llvm-tb-55-8048a0e
52 [State 56] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 55 not yet applied), shell_len: 1024, eip: 0x00000000

52 [State 56] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
52 [State 56] Leaving buffer range @0xc126f278, eb IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
52 [State 56] Killing state 56
52 [State 56] Terminating state 56 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
52 [State 56] Switching from state 56 to state 0
Copied 34928 (count=1)
Deleting state 56 0x0x20eae1e0
52 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 55
>> fuzzInit: datum forking for value 56
>> fuzzInit: datum forking for value 56
52 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 56)
        (ReadLSB w32 0 v56_fuzz_symb_56)))
    state 57 with condition (Not (Eq false
         (Eq (w32 56)
             (ReadLSB w32 0 v56_fuzz_symb_56))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-56-8048a0e
Size=2 Low=0 splitIndex=1 high=1
52 [State 0] Switching from state 0 to state 57
Copied 34928 (count=1)
Finalizing TB execution 57
s2e_dummyMainFunction
tcg-llvm-tb-56-8048a0e
52 [State 57] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 56 not yet applied), shell_len: 1024, eip: 0x00000000

52 [State 57] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 238 instructions, PCs: bfba33b8 bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
52 [State 57] Terminating state 57 with message 'eliminated this false positive, execution path subset of another success'
52 [State 57] Switching from state 57 to state 0
Copied 34928 (count=1)
Deleting state 57 0x0x21124d90
52 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 56
>> fuzzInit: datum forking for value 57
>> fuzzInit: datum forking for value 57
53 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 57)
        (ReadLSB w32 0 v57_fuzz_symb_57)))
    state 58 with condition (Not (Eq false
         (Eq (w32 57)
             (ReadLSB w32 0 v57_fuzz_symb_57))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-57-8048a0e
Size=2 Low=0 splitIndex=1 high=1
53 [State 0] Switching from state 0 to state 58
Copied 34928 (count=1)
Finalizing TB execution 58
s2e_dummyMainFunction
tcg-llvm-tb-57-8048a0e
53 [State 58] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 57 not yet applied), shell_len: 1024, eip: 0x00000000

53 [State 58] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
53 [State 58] Leaving buffer range @0xc126f278, ea IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
53 [State 58] Killing state 58
53 [State 58] Terminating state 58 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
53 [State 58] Switching from state 58 to state 0
Copied 34928 (count=1)
Deleting state 58 0x0x21124d90
Firing timer event
53 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 57
>> fuzzInit: datum forking for value 58
>> fuzzInit: datum forking for value 58
53 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 58)
        (ReadLSB w32 0 v58_fuzz_symb_58)))
    state 59 with condition (Not (Eq false
         (Eq (w32 58)
             (ReadLSB w32 0 v58_fuzz_symb_58))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-58-8048a0e
Size=2 Low=0 splitIndex=1 high=1
53 [State 0] Switching from state 0 to state 59
Copied 34928 (count=1)
Finalizing TB execution 59
s2e_dummyMainFunction
tcg-llvm-tb-58-8048a0e
53 [State 59] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 58 not yet applied), shell_len: 1024, eip: 0x00000000

53 [State 59] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 237 instructions, PCs: bfba33ba bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
53 [State 59] Terminating state 59 with message 'eliminated this false positive, execution path subset of another success'
53 [State 59] Switching from state 59 to state 0
Copied 34928 (count=1)
Deleting state 59 0x0x21124d90
53 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 58
>> fuzzInit: datum forking for value 59
>> fuzzInit: datum forking for value 59
53 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 59)
        (ReadLSB w32 0 v59_fuzz_symb_59)))
    state 60 with condition (Not (Eq false
         (Eq (w32 59)
             (ReadLSB w32 0 v59_fuzz_symb_59))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-59-8048a0e
Size=2 Low=0 splitIndex=1 high=1
53 [State 0] Switching from state 0 to state 60
Copied 34928 (count=1)
Finalizing TB execution 60
s2e_dummyMainFunction
tcg-llvm-tb-59-8048a0e
54 [State 60] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 59 not yet applied), shell_len: 1024, eip: 0x00000000

54 [State 60] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
54 [State 60] Leaving buffer range @0xc126f278, e9 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
54 [State 60] Killing state 60
54 [State 60] Terminating state 60 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
54 [State 60] Switching from state 60 to state 0
Copied 34928 (count=1)
Deleting state 60 0x0x21124d90
54 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 59
>> fuzzInit: datum forking for value 60
>> fuzzInit: datum forking for value 60
54 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 60)
        (ReadLSB w32 0 v60_fuzz_symb_60)))
    state 61 with condition (Not (Eq false
         (Eq (w32 60)
             (ReadLSB w32 0 v60_fuzz_symb_60))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-60-8048a0e
Size=2 Low=0 splitIndex=1 high=1
54 [State 0] Switching from state 0 to state 61
Copied 34928 (count=1)
Finalizing TB execution 61
s2e_dummyMainFunction
tcg-llvm-tb-60-8048a0e
Firing timer event
54 [State 61] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 60 not yet applied), shell_len: 1024, eip: 0x00000000

54 [State 61] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 236 instructions, PCs: bfba33bc bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
54 [State 61] Terminating state 61 with message 'eliminated this false positive, execution path subset of another success'
54 [State 61] Switching from state 61 to state 0
Copied 34928 (count=1)
Deleting state 61 0x0x21124d90
54 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 60
>> fuzzInit: datum forking for value 61
>> fuzzInit: datum forking for value 61
54 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 61)
        (ReadLSB w32 0 v61_fuzz_symb_61)))
    state 62 with condition (Not (Eq false
         (Eq (w32 61)
             (ReadLSB w32 0 v61_fuzz_symb_61))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-61-8048a0e
Size=2 Low=0 splitIndex=1 high=1
54 [State 0] Switching from state 0 to state 62
Copied 34928 (count=1)
Finalizing TB execution 62
s2e_dummyMainFunction
tcg-llvm-tb-61-8048a0e
54 [State 62] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 61 not yet applied), shell_len: 1024, eip: 0x00000000

54 [State 62] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
55 [State 62] Leaving buffer range @0xc126f278, e8 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
55 [State 62] Killing state 62
55 [State 62] Terminating state 62 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
55 [State 62] Switching from state 62 to state 0
Copied 34928 (count=1)
Deleting state 62 0x0x21124d90
55 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 61
>> fuzzInit: datum forking for value 62
>> fuzzInit: datum forking for value 62
55 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 62)
        (ReadLSB w32 0 v62_fuzz_symb_62)))
    state 63 with condition (Not (Eq false
         (Eq (w32 62)
             (ReadLSB w32 0 v62_fuzz_symb_62))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-62-8048a0e
Size=2 Low=0 splitIndex=1 high=1
55 [State 0] Switching from state 0 to state 63
Copied 34928 (count=1)
Finalizing TB execution 63
s2e_dummyMainFunction
tcg-llvm-tb-62-8048a0e
Firing timer event
55 [State 63] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 62 not yet applied), shell_len: 1024, eip: 0x00000000

55 [State 63] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 235 instructions, PCs: bfba33be bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
55 [State 63] Terminating state 63 with message 'eliminated this false positive, execution path subset of another success'
55 [State 63] Switching from state 63 to state 0
Copied 34928 (count=1)
Deleting state 63 0x0x21124d90
55 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 62
>> fuzzInit: datum forking for value 63
>> fuzzInit: datum forking for value 63
>> fuzzInit: datum forking for value 63
55 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 63)
        (ReadLSB w32 0 v63_fuzz_symb_63)))
    state 64 with condition (Not (Eq false
         (Eq (w32 63)
             (ReadLSB w32 0 v63_fuzz_symb_63))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-63-8048a0e
Size=2 Low=0 splitIndex=1 high=1
55 [State 0] Switching from state 0 to state 64
Copied 34928 (count=1)
Finalizing TB execution 64
s2e_dummyMainFunction
tcg-llvm-tb-63-8048a0e
55 [State 64] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 63 not yet applied), shell_len: 1024, eip: 0x00000000

55 [State 64] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
55 [State 64] Leaving buffer range @0xc126f278, e7 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
56 [State 64] Killing state 64
56 [State 64] Terminating state 64 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
56 [State 64] Switching from state 64 to state 0
Copied 34928 (count=1)
Deleting state 64 0x0x21124d90
56 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 63
>> fuzzInit: datum forking for value 64
>> fuzzInit: datum forking for value 64
56 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 64)
        (ReadLSB w32 0 v64_fuzz_symb_64)))
    state 65 with condition (Not (Eq false
         (Eq (w32 64)
             (ReadLSB w32 0 v64_fuzz_symb_64))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-64-8048a0e
Size=2 Low=0 splitIndex=1 high=1
56 [State 0] Switching from state 0 to state 65
Copied 34928 (count=1)
Finalizing TB execution 65
s2e_dummyMainFunction
tcg-llvm-tb-64-8048a0e
Firing timer event
56 [State 65] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 64 not yet applied), shell_len: 1024, eip: 0x00000000

56 [State 65] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 234 instructions, PCs: bfba33c0 bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
56 [State 65] Terminating state 65 with message 'eliminated this false positive, execution path subset of another success'
56 [State 65] Switching from state 65 to state 0
Copied 34928 (count=1)
Deleting state 65 0x0x21124d90
56 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 64
>> fuzzInit: datum forking for value 65
>> fuzzInit: datum forking for value 65
56 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 65)
        (ReadLSB w32 0 v65_fuzz_symb_65)))
    state 66 with condition (Not (Eq false
         (Eq (w32 65)
             (ReadLSB w32 0 v65_fuzz_symb_65))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-65-8048a0e
Size=2 Low=0 splitIndex=1 high=1
56 [State 0] Switching from state 0 to state 66
Copied 34928 (count=1)
Finalizing TB execution 66
s2e_dummyMainFunction
tcg-llvm-tb-65-8048a0e
56 [State 66] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 65 not yet applied), shell_len: 1024, eip: 0x00000000

56 [State 66] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
57 [State 66] Leaving buffer range @0xc126f278, e6 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
57 [State 66] Killing state 66
57 [State 66] Terminating state 66 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
57 [State 66] Switching from state 66 to state 0
Copied 34928 (count=1)
Deleting state 66 0x0x21183820
57 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 65
>> fuzzInit: datum forking for value 66
>> fuzzInit: datum forking for value 66
57 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 66)
        (ReadLSB w32 0 v66_fuzz_symb_66)))
    state 67 with condition (Not (Eq false
         (Eq (w32 66)
             (ReadLSB w32 0 v66_fuzz_symb_66))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-66-8048a0e
Size=2 Low=0 splitIndex=1 high=1
57 [State 0] Switching from state 0 to state 67
Copied 34928 (count=1)
Finalizing TB execution 67
s2e_dummyMainFunction
tcg-llvm-tb-66-8048a0e
Firing timer event
57 [State 67] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 66 not yet applied), shell_len: 1024, eip: 0x00000000

57 [State 67] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 233 instructions, PCs: bfba33c2 bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
57 [State 67] Terminating state 67 with message 'eliminated this false positive, execution path subset of another success'
57 [State 67] Switching from state 67 to state 0
Copied 34928 (count=1)
Deleting state 67 0x0x20fdf580
57 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 66
>> fuzzInit: datum forking for value 67
>> fuzzInit: datum forking for value 67
57 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 67)
        (ReadLSB w32 0 v67_fuzz_symb_67)))
    state 68 with condition (Not (Eq false
         (Eq (w32 67)
             (ReadLSB w32 0 v67_fuzz_symb_67))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-67-8048a0e
Size=2 Low=0 splitIndex=1 high=1
57 [State 0] Switching from state 0 to state 68
Copied 34928 (count=1)
Finalizing TB execution 68
s2e_dummyMainFunction
tcg-llvm-tb-67-8048a0e
58 [State 68] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 67 not yet applied), shell_len: 1024, eip: 0x00000000

58 [State 68] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
58 [State 68] Leaving buffer range @0xc126f278, e5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
58 [State 68] Killing state 68
58 [State 68] Terminating state 68 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
58 [State 68] Switching from state 68 to state 0
Copied 34928 (count=1)
Deleting state 68 0x0x20fdf580
Firing timer event
58 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 67
>> fuzzInit: datum forking for value 68
>> fuzzInit: datum forking for value 68
58 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 68)
        (ReadLSB w32 0 v68_fuzz_symb_68)))
    state 69 with condition (Not (Eq false
         (Eq (w32 68)
             (ReadLSB w32 0 v68_fuzz_symb_68))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-68-8048a0e
Size=2 Low=0 splitIndex=1 high=1
58 [State 0] Switching from state 0 to state 69
Copied 34928 (count=1)
Finalizing TB execution 69
s2e_dummyMainFunction
tcg-llvm-tb-68-8048a0e
58 [State 69] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 68 not yet applied), shell_len: 1024, eip: 0x00000000

58 [State 69] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 232 instructions, PCs: bfba33c4 bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
58 [State 69] Terminating state 69 with message 'eliminated this false positive, execution path subset of another success'
58 [State 69] Switching from state 69 to state 0
Copied 34928 (count=1)
Deleting state 69 0x0x20fdf580
58 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 68
>> fuzzInit: datum forking for value 69
>> fuzzInit: datum forking for value 69
59 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 69)
        (ReadLSB w32 0 v69_fuzz_symb_69)))
    state 70 with condition (Not (Eq false
         (Eq (w32 69)
             (ReadLSB w32 0 v69_fuzz_symb_69))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-69-8048a0e
Size=2 Low=0 splitIndex=1 high=1
59 [State 0] Switching from state 0 to state 70
Copied 34928 (count=1)
Finalizing TB execution 70
s2e_dummyMainFunction
tcg-llvm-tb-69-8048a0e
59 [State 70] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 69 not yet applied), shell_len: 1024, eip: 0x00000000

59 [State 70] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
59 [State 70] Leaving buffer range @0xc126f278, e4 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
59 [State 70] Killing state 70
59 [State 70] Terminating state 70 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
59 [State 70] Switching from state 70 to state 0
Copied 34928 (count=1)
Deleting state 70 0x0x211730a0
59 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 69
>> fuzzInit: datum forking for value 70
>> fuzzInit: datum forking for value 70
59 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 70)
        (ReadLSB w32 0 v70_fuzz_symb_70)))
    state 71 with condition (Not (Eq false
         (Eq (w32 70)
             (ReadLSB w32 0 v70_fuzz_symb_70))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-70-8048a0e
Size=2 Low=0 splitIndex=1 high=1
59 [State 0] Switching from state 0 to state 71
Copied 34928 (count=1)
Finalizing TB execution 71
s2e_dummyMainFunction
tcg-llvm-tb-70-8048a0e
Firing timer event
59 [State 71] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 70 not yet applied), shell_len: 1024, eip: 0x00000000

59 [State 71] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 231 instructions, PCs: bfba33c6 bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
59 [State 71] Terminating state 71 with message 'eliminated this false positive, execution path subset of another success'
59 [State 71] Switching from state 71 to state 0
Copied 34928 (count=1)
Deleting state 71 0x0x211730a0
59 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 70
>> fuzzInit: datum forking for value 71
>> fuzzInit: datum forking for value 71
59 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 71)
        (ReadLSB w32 0 v71_fuzz_symb_71)))
    state 72 with condition (Not (Eq false
         (Eq (w32 71)
             (ReadLSB w32 0 v71_fuzz_symb_71))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-71-8048a0e
Size=2 Low=0 splitIndex=1 high=1
60 [State 0] Switching from state 0 to state 72
Copied 34928 (count=1)
Finalizing TB execution 72
s2e_dummyMainFunction
tcg-llvm-tb-71-8048a0e
60 [State 72] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 71 not yet applied), shell_len: 1024, eip: 0x00000000

60 [State 72] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
60 [State 72] Leaving buffer range @0xc126f278, e3 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
60 [State 72] Killing state 72
60 [State 72] Terminating state 72 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
60 [State 72] Switching from state 72 to state 0
Copied 34928 (count=1)
Deleting state 72 0x0x21219720
60 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 71
>> fuzzInit: datum forking for value 72
>> fuzzInit: datum forking for value 72
60 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 72)
        (ReadLSB w32 0 v72_fuzz_symb_72)))
    state 73 with condition (Not (Eq false
         (Eq (w32 72)
             (ReadLSB w32 0 v72_fuzz_symb_72))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-72-8048a0e
Size=2 Low=0 splitIndex=1 high=1
60 [State 0] Switching from state 0 to state 73
Copied 34928 (count=1)
Finalizing TB execution 73
s2e_dummyMainFunction
tcg-llvm-tb-72-8048a0e
Firing timer event
60 [State 73] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 72 not yet applied), shell_len: 1024, eip: 0x00000000

60 [State 73] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 230 instructions, PCs: bfba33c8 bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
60 [State 73] Terminating state 73 with message 'eliminated this false positive, execution path subset of another success'
60 [State 73] Switching from state 73 to state 0
Copied 34928 (count=1)
Deleting state 73 0x0x21219720
60 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 72
>> fuzzInit: datum forking for value 73
>> fuzzInit: datum forking for value 73
60 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 73)
        (ReadLSB w32 0 v73_fuzz_symb_73)))
    state 74 with condition (Not (Eq false
         (Eq (w32 73)
             (ReadLSB w32 0 v73_fuzz_symb_73))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-73-8048a0e
Size=2 Low=0 splitIndex=1 high=1
60 [State 0] Switching from state 0 to state 74
Copied 34928 (count=1)
Finalizing TB execution 74
s2e_dummyMainFunction
tcg-llvm-tb-73-8048a0e
61 [State 74] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 73 not yet applied), shell_len: 1024, eip: 0x00000000

61 [State 74] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
61 [State 74] Leaving buffer range @0xc126f278, e2 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
61 [State 74] Killing state 74
61 [State 74] Terminating state 74 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
61 [State 74] Switching from state 74 to state 0
Copied 34928 (count=1)
Deleting state 74 0x0x212f1630
61 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 73
>> fuzzInit: datum forking for value 74
>> fuzzInit: datum forking for value 74
61 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 74)
        (ReadLSB w32 0 v74_fuzz_symb_74)))
    state 75 with condition (Not (Eq false
         (Eq (w32 74)
             (ReadLSB w32 0 v74_fuzz_symb_74))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-74-8048a0e
Size=2 Low=0 splitIndex=1 high=1
61 [State 0] Switching from state 0 to state 75
Copied 34928 (count=1)
Finalizing TB execution 75
s2e_dummyMainFunction
tcg-llvm-tb-74-8048a0e
61 [State 75] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 74 not yet applied), shell_len: 1024, eip: 0x00000000

61 [State 75] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 229 instructions, PCs: bfba33ca bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
61 [State 75] Terminating state 75 with message 'eliminated this false positive, execution path subset of another success'
61 [State 75] Switching from state 75 to state 0
Copied 34928 (count=1)
Deleting state 75 0x0x212f1630
61 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 74
>> fuzzInit: datum forking for value 75
>> fuzzInit: datum forking for value 75
61 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 75)
        (ReadLSB w32 0 v75_fuzz_symb_75)))
    state 76 with condition (Not (Eq false
         (Eq (w32 75)
             (ReadLSB w32 0 v75_fuzz_symb_75))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-75-8048a0e
Size=2 Low=0 splitIndex=1 high=1
61 [State 0] Switching from state 0 to state 76
Copied 34928 (count=1)
Finalizing TB execution 76
s2e_dummyMainFunction
tcg-llvm-tb-75-8048a0e
61 [State 76] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 75 not yet applied), shell_len: 1024, eip: 0x00000000

61 [State 76] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
62 [State 76] Leaving buffer range @0xc126f278, dd IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
62 [State 76] Killing state 76
62 [State 76] Terminating state 76 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
62 [State 76] Switching from state 76 to state 0
Copied 34928 (count=1)
Deleting state 76 0x0x212f1630
62 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 75
>> fuzzInit: datum forking for value 76
>> fuzzInit: datum forking for value 76
62 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 76)
        (ReadLSB w32 0 v76_fuzz_symb_76)))
    state 77 with condition (Not (Eq false
         (Eq (w32 76)
             (ReadLSB w32 0 v76_fuzz_symb_76))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-76-8048a0e
Size=2 Low=0 splitIndex=1 high=1
62 [State 0] Switching from state 0 to state 77
Copied 34928 (count=1)
Finalizing TB execution 77
s2e_dummyMainFunction
tcg-llvm-tb-76-8048a0e
62 [State 77] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 76 not yet applied), shell_len: 1024, eip: 0x00000000

62 [State 77] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 228 instructions, PCs: bfba33cc bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
62 [State 77] Terminating state 77 with message 'eliminated this false positive, execution path subset of another success'
62 [State 77] Switching from state 77 to state 0
Copied 34928 (count=1)
Deleting state 77 0x0x212f1630
62 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 76
>> fuzzInit: datum forking for value 77
>> fuzzInit: datum forking for value 77
62 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 77)
        (ReadLSB w32 0 v77_fuzz_symb_77)))
    state 78 with condition (Not (Eq false
         (Eq (w32 77)
             (ReadLSB w32 0 v77_fuzz_symb_77))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-77-8048a0e
Size=2 Low=0 splitIndex=1 high=1
62 [State 0] Switching from state 0 to state 78
Copied 34928 (count=1)
Finalizing TB execution 78
s2e_dummyMainFunction
tcg-llvm-tb-77-8048a0e
62 [State 78] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 77 not yet applied), shell_len: 1024, eip: 0x00000000

62 [State 78] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
63 [State 78] Leaving buffer range @0xc126f278, dc IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
63 [State 78] Killing state 78
63 [State 78] Terminating state 78 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
63 [State 78] Switching from state 78 to state 0
Copied 34928 (count=1)
Deleting state 78 0x0x212f1630
63 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 77
>> fuzzInit: datum forking for value 78
>> fuzzInit: datum forking for value 78
63 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 78)
        (ReadLSB w32 0 v78_fuzz_symb_78)))
    state 79 with condition (Not (Eq false
         (Eq (w32 78)
             (ReadLSB w32 0 v78_fuzz_symb_78))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-78-8048a0e
Size=2 Low=0 splitIndex=1 high=1
63 [State 0] Switching from state 0 to state 79
Copied 34928 (count=1)
Finalizing TB execution 79
s2e_dummyMainFunction
tcg-llvm-tb-78-8048a0e
63 [State 79] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 78 not yet applied), shell_len: 1024, eip: 0x00000000

63 [State 79] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 227 instructions, PCs: bfba33ce bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
63 [State 79] Terminating state 79 with message 'eliminated this false positive, execution path subset of another success'
63 [State 79] Switching from state 79 to state 0
Copied 34928 (count=1)
Deleting state 79 0x0x212f1630
Firing timer event
63 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 78
>> fuzzInit: datum forking for value 79
>> fuzzInit: datum forking for value 79
63 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 79)
        (ReadLSB w32 0 v79_fuzz_symb_79)))
    state 80 with condition (Not (Eq false
         (Eq (w32 79)
             (ReadLSB w32 0 v79_fuzz_symb_79))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-79-8048a0e
Size=2 Low=0 splitIndex=1 high=1
63 [State 0] Switching from state 0 to state 80
Copied 34928 (count=1)
Finalizing TB execution 80
s2e_dummyMainFunction
tcg-llvm-tb-79-8048a0e
63 [State 80] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 79 not yet applied), shell_len: 1024, eip: 0x00000000

63 [State 80] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
63 [State 80] Leaving buffer range @0xc126f278, dc IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
63 [State 80] Killing state 80
63 [State 80] Terminating state 80 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
63 [State 80] Switching from state 80 to state 0
Copied 34928 (count=1)
Deleting state 80 0x0x212f1630
64 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 79
>> fuzzInit: datum forking for value 80
>> fuzzInit: datum forking for value 80
64 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 80)
        (ReadLSB w32 0 v80_fuzz_symb_80)))
    state 81 with condition (Not (Eq false
         (Eq (w32 80)
             (ReadLSB w32 0 v80_fuzz_symb_80))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-80-8048a0e
Size=2 Low=0 splitIndex=1 high=1
64 [State 0] Switching from state 0 to state 81
Copied 34928 (count=1)
Finalizing TB execution 81
s2e_dummyMainFunction
tcg-llvm-tb-80-8048a0e
64 [State 81] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 80 not yet applied), shell_len: 1024, eip: 0x00000000

64 [State 81] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 226 instructions, PCs: bfba33d0 bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
64 [State 81] Terminating state 81 with message 'eliminated this false positive, execution path subset of another success'
64 [State 81] Switching from state 81 to state 0
Copied 34928 (count=1)
Deleting state 81 0x0x212f1630
64 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 80
>> fuzzInit: datum forking for value 81
>> fuzzInit: datum forking for value 81
64 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 81)
        (ReadLSB w32 0 v81_fuzz_symb_81)))
    state 82 with condition (Not (Eq false
         (Eq (w32 81)
             (ReadLSB w32 0 v81_fuzz_symb_81))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-81-8048a0e
Size=2 Low=0 splitIndex=1 high=1
64 [State 0] Switching from state 0 to state 82
Copied 34928 (count=1)
Finalizing TB execution 82
s2e_dummyMainFunction
tcg-llvm-tb-81-8048a0e
Firing timer event
64 [State 82] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 81 not yet applied), shell_len: 1024, eip: 0x00000000

64 [State 82] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
64 [State 82] Leaving buffer range @0xc126f278, db IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
64 [State 82] Killing state 82
64 [State 82] Terminating state 82 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
64 [State 82] Switching from state 82 to state 0
Copied 34928 (count=1)
Deleting state 82 0x0x212f1630
65 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 81
>> fuzzInit: datum forking for value 82
>> fuzzInit: datum forking for value 82
65 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 82)
        (ReadLSB w32 0 v82_fuzz_symb_82)))
    state 83 with condition (Not (Eq false
         (Eq (w32 82)
             (ReadLSB w32 0 v82_fuzz_symb_82))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-82-8048a0e
Size=2 Low=0 splitIndex=1 high=1
65 [State 0] Switching from state 0 to state 83
Copied 34928 (count=1)
Finalizing TB execution 83
s2e_dummyMainFunction
tcg-llvm-tb-82-8048a0e
65 [State 83] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 82 not yet applied), shell_len: 1024, eip: 0x00000000

65 [State 83] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 225 instructions, PCs: bfba33d2 bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
65 [State 83] Terminating state 83 with message 'eliminated this false positive, execution path subset of another success'
65 [State 83] Switching from state 83 to state 0
Copied 34928 (count=1)
Deleting state 83 0x0x212f1630
65 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 82
>> fuzzInit: datum forking for value 83
>> fuzzInit: datum forking for value 83
65 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 83)
        (ReadLSB w32 0 v83_fuzz_symb_83)))
    state 84 with condition (Not (Eq false
         (Eq (w32 83)
             (ReadLSB w32 0 v83_fuzz_symb_83))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-83-8048a0e
Size=2 Low=0 splitIndex=1 high=1
65 [State 0] Switching from state 0 to state 84
Copied 34928 (count=1)
Finalizing TB execution 84
s2e_dummyMainFunction
tcg-llvm-tb-83-8048a0e
Firing timer event
65 [State 84] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 83 not yet applied), shell_len: 1024, eip: 0x00000000

65 [State 84] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
65 [State 84] Leaving buffer range @0xc126f278, db IoB insns; prev insn @0xbfba3591
  1   3B @0xbfba3591:  1 4b cd          add [ebx-0x33], ecx     
65 [State 84] Killing state 84
65 [State 84] Terminating state 84 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
65 [State 84] Switching from state 84 to state 0
Copied 34928 (count=1)
Deleting state 84 0x0x212f1630
65 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 83
>> fuzzInit: datum forking for value 84
>> fuzzInit: datum forking for value 84
66 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 84)
        (ReadLSB w32 0 v84_fuzz_symb_84)))
    state 85 with condition (Not (Eq false
         (Eq (w32 84)
             (ReadLSB w32 0 v84_fuzz_symb_84))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-84-8048a0e
Size=2 Low=0 splitIndex=1 high=1
66 [State 0] Switching from state 0 to state 85
Copied 34928 (count=1)
Finalizing TB execution 85
s2e_dummyMainFunction
tcg-llvm-tb-84-8048a0e
66 [State 85] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 84 not yet applied), shell_len: 1024, eip: 0x00000000

66 [State 85] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 224 instructions, PCs: bfba33d4 bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
66 [State 85] Terminating state 85 with message 'eliminated this false positive, execution path subset of another success'
66 [State 85] Switching from state 85 to state 0
Copied 34928 (count=1)
Deleting state 85 0x0x21649690
66 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 84
>> fuzzInit: datum forking for value 85
>> fuzzInit: datum forking for value 85
66 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 85)
        (ReadLSB w32 0 v85_fuzz_symb_85)))
    state 86 with condition (Not (Eq false
         (Eq (w32 85)
             (ReadLSB w32 0 v85_fuzz_symb_85))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-85-8048a0e
Size=2 Low=0 splitIndex=1 high=1
66 [State 0] Switching from state 0 to state 86
Copied 34928 (count=1)
Finalizing TB execution 86
s2e_dummyMainFunction
tcg-llvm-tb-85-8048a0e
66 [State 86] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 85 not yet applied), shell_len: 1024, eip: 0x00000000

66 [State 86] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
66 [State 86] Leaving buffer range @0xc126f278, db IoB insns; prev insn @0xbfba3594
  1   3B @0xbfba3594: 80 e8 e8          sub al, 0xe8            
66 [State 86] Killing state 86
66 [State 86] Terminating state 86 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
66 [State 86] Switching from state 86 to state 0
Copied 34928 (count=1)
Deleting state 86 0x0x21649690
66 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 85
>> fuzzInit: datum forking for value 86
>> fuzzInit: datum forking for value 86
67 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 86)
        (ReadLSB w32 0 v86_fuzz_symb_86)))
    state 87 with condition (Not (Eq false
         (Eq (w32 86)
             (ReadLSB w32 0 v86_fuzz_symb_86))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-86-8048a0e
Size=2 Low=0 splitIndex=1 high=1
67 [State 0] Switching from state 0 to state 87
Copied 34928 (count=1)
Finalizing TB execution 87
s2e_dummyMainFunction
tcg-llvm-tb-86-8048a0e
67 [State 87] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 86 not yet applied), shell_len: 1024, eip: 0x00000000

67 [State 87] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 223 instructions, PCs: bfba33d6 bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
67 [State 87] Terminating state 87 with message 'eliminated this false positive, execution path subset of another success'
67 [State 87] Switching from state 87 to state 0
Copied 34928 (count=1)
Deleting state 87 0x0x2186ece0
67 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 86
>> fuzzInit: datum forking for value 87
>> fuzzInit: datum forking for value 87
67 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 87)
        (ReadLSB w32 0 v87_fuzz_symb_87)))
    state 88 with condition (Not (Eq false
         (Eq (w32 87)
             (ReadLSB w32 0 v87_fuzz_symb_87))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-87-8048a0e
Size=2 Low=0 splitIndex=1 high=1
67 [State 0] Switching from state 0 to state 88
Copied 34928 (count=1)
Finalizing TB execution 88
s2e_dummyMainFunction
tcg-llvm-tb-87-8048a0e
67 [State 88] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 87 not yet applied), shell_len: 1024, eip: 0x00000000

67 [State 88] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
67 [State 88] Leaving buffer range @0xc126f278, db IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
67 [State 88] Killing state 88
67 [State 88] Terminating state 88 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
67 [State 88] Switching from state 88 to state 0
Copied 34928 (count=1)
Deleting state 88 0x0x2186ece0
67 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 87
>> fuzzInit: datum forking for value 88
>> fuzzInit: datum forking for value 88
68 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 88)
        (ReadLSB w32 0 v88_fuzz_symb_88)))
    state 89 with condition (Not (Eq false
         (Eq (w32 88)
             (ReadLSB w32 0 v88_fuzz_symb_88))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-88-8048a0e
Size=2 Low=0 splitIndex=1 high=1
68 [State 0] Switching from state 0 to state 89
Copied 34928 (count=1)
Finalizing TB execution 89
s2e_dummyMainFunction
tcg-llvm-tb-88-8048a0e
68 [State 89] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 88 not yet applied), shell_len: 1024, eip: 0x00000000

68 [State 89] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 222 instructions, PCs: bfba33d8 bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
68 [State 89] Terminating state 89 with message 'eliminated this false positive, execution path subset of another success'
68 [State 89] Switching from state 89 to state 0
Copied 34928 (count=1)
Deleting state 89 0x0x2186ece0
68 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 88
>> fuzzInit: datum forking for value 89
>> fuzzInit: datum forking for value 89
68 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 89)
        (ReadLSB w32 0 v89_fuzz_symb_89)))
    state 90 with condition (Not (Eq false
         (Eq (w32 89)
             (ReadLSB w32 0 v89_fuzz_symb_89))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-89-8048a0e
Size=2 Low=0 splitIndex=1 high=1
68 [State 0] Switching from state 0 to state 90
Copied 34928 (count=1)
Finalizing TB execution 90
s2e_dummyMainFunction
tcg-llvm-tb-89-8048a0e
68 [State 90] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 89 not yet applied), shell_len: 1024, eip: 0x00000000

68 [State 90] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
68 [State 90] Leaving buffer range @0xc126f278, da IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
68 [State 90] Killing state 90
68 [State 90] Terminating state 90 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
68 [State 90] Switching from state 90 to state 0
Copied 34928 (count=1)
Deleting state 90 0x0x2186ece0
68 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 89
>> fuzzInit: datum forking for value 90
>> fuzzInit: datum forking for value 90
68 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 90)
        (ReadLSB w32 0 v90_fuzz_symb_90)))
    state 91 with condition (Not (Eq false
         (Eq (w32 90)
             (ReadLSB w32 0 v90_fuzz_symb_90))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-90-8048a0e
Size=2 Low=0 splitIndex=1 high=1
68 [State 0] Switching from state 0 to state 91
Copied 34928 (count=1)
Finalizing TB execution 91
s2e_dummyMainFunction
tcg-llvm-tb-90-8048a0e
69 [State 91] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 90 not yet applied), shell_len: 1024, eip: 0x00000000

69 [State 91] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 221 instructions, PCs: bfba33da bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
69 [State 91] Terminating state 91 with message 'eliminated this false positive, execution path subset of another success'
69 [State 91] Switching from state 91 to state 0
Copied 34928 (count=1)
Deleting state 91 0x0x2186ece0
69 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 90
>> fuzzInit: datum forking for value 91
>> fuzzInit: datum forking for value 91
69 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 91)
        (ReadLSB w32 0 v91_fuzz_symb_91)))
    state 92 with condition (Not (Eq false
         (Eq (w32 91)
             (ReadLSB w32 0 v91_fuzz_symb_91))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-91-8048a0e
Size=2 Low=0 splitIndex=1 high=1
69 [State 0] Switching from state 0 to state 92
Copied 34928 (count=1)
Finalizing TB execution 92
s2e_dummyMainFunction
tcg-llvm-tb-91-8048a0e
69 [State 92] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 91 not yet applied), shell_len: 1024, eip: 0x00000000

69 [State 92] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
69 [State 92] Leaving buffer range @0xc126f278, d9 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
69 [State 92] Killing state 92
69 [State 92] Terminating state 92 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
69 [State 92] Switching from state 92 to state 0
Copied 34928 (count=1)
Deleting state 92 0x0x2186ece0
69 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 91
>> fuzzInit: datum forking for value 92
>> fuzzInit: datum forking for value 92
69 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 92)
        (ReadLSB w32 0 v92_fuzz_symb_92)))
    state 93 with condition (Not (Eq false
         (Eq (w32 92)
             (ReadLSB w32 0 v92_fuzz_symb_92))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-92-8048a0e
Size=2 Low=0 splitIndex=1 high=1
69 [State 0] Switching from state 0 to state 93
Copied 34928 (count=1)
Finalizing TB execution 93
s2e_dummyMainFunction
tcg-llvm-tb-92-8048a0e
70 [State 93] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 92 not yet applied), shell_len: 1024, eip: 0x00000000

70 [State 93] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 220 instructions, PCs: bfba33dc bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
70 [State 93] Terminating state 93 with message 'eliminated this false positive, execution path subset of another success'
70 [State 93] Switching from state 93 to state 0
Copied 34928 (count=1)
Deleting state 93 0x0x2186ece0
70 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 92
>> fuzzInit: datum forking for value 93
>> fuzzInit: datum forking for value 93
>> fuzzInit: datum forking for value 93
70 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 93)
        (ReadLSB w32 0 v93_fuzz_symb_93)))
    state 94 with condition (Not (Eq false
         (Eq (w32 93)
             (ReadLSB w32 0 v93_fuzz_symb_93))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-93-8048a0e
Size=2 Low=0 splitIndex=1 high=1
70 [State 0] Switching from state 0 to state 94
Copied 34928 (count=1)
Finalizing TB execution 94
s2e_dummyMainFunction
tcg-llvm-tb-93-8048a0e
70 [State 94] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 93 not yet applied), shell_len: 1024, eip: 0x00000000

70 [State 94] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
70 [State 94] Leaving buffer range @0xc126f278, d8 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
70 [State 94] Killing state 94
70 [State 94] Terminating state 94 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
70 [State 94] Switching from state 94 to state 0
Copied 34928 (count=1)
Deleting state 94 0x0x2186ece0
Firing timer event
70 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 93
>> fuzzInit: datum forking for value 94
>> fuzzInit: datum forking for value 94
70 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 94)
        (ReadLSB w32 0 v94_fuzz_symb_94)))
    state 95 with condition (Not (Eq false
         (Eq (w32 94)
             (ReadLSB w32 0 v94_fuzz_symb_94))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-94-8048a0e
Size=2 Low=0 splitIndex=1 high=1
70 [State 0] Switching from state 0 to state 95
Copied 34928 (count=1)
Finalizing TB execution 95
s2e_dummyMainFunction
tcg-llvm-tb-94-8048a0e
70 [State 95] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 94 not yet applied), shell_len: 1024, eip: 0x00000000

70 [State 95] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 219 instructions, PCs: bfba33de bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
71 [State 95] Terminating state 95 with message 'eliminated this false positive, execution path subset of another success'
71 [State 95] Switching from state 95 to state 0
Copied 34928 (count=1)
Deleting state 95 0x0x2186ece0
71 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 94
>> fuzzInit: datum forking for value 95
>> fuzzInit: datum forking for value 95
71 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 95)
        (ReadLSB w32 0 v95_fuzz_symb_95)))
    state 96 with condition (Not (Eq false
         (Eq (w32 95)
             (ReadLSB w32 0 v95_fuzz_symb_95))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-95-8048a0e
Size=2 Low=0 splitIndex=1 high=1
71 [State 0] Switching from state 0 to state 96
Copied 34928 (count=1)
Finalizing TB execution 96
s2e_dummyMainFunction
tcg-llvm-tb-95-8048a0e
71 [State 96] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 95 not yet applied), shell_len: 1024, eip: 0x00000000

71 [State 96] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
71 [State 96] Leaving buffer range @0xc126f278, d7 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
71 [State 96] Killing state 96
71 [State 96] Terminating state 96 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
71 [State 96] Switching from state 96 to state 0
Copied 34928 (count=1)
Deleting state 96 0x0x2186ece0
71 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 95
>> fuzzInit: datum forking for value 96
>> fuzzInit: datum forking for value 96
71 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 96)
        (ReadLSB w32 0 v96_fuzz_symb_96)))
    state 97 with condition (Not (Eq false
         (Eq (w32 96)
             (ReadLSB w32 0 v96_fuzz_symb_96))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-96-8048a0e
Size=2 Low=0 splitIndex=1 high=1
71 [State 0] Switching from state 0 to state 97
Copied 34928 (count=1)
Finalizing TB execution 97
s2e_dummyMainFunction
tcg-llvm-tb-96-8048a0e
Firing timer event
71 [State 97] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 96 not yet applied), shell_len: 1024, eip: 0x00000000

71 [State 97] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 218 instructions, PCs: bfba33e0 bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
72 [State 97] Terminating state 97 with message 'eliminated this false positive, execution path subset of another success'
72 [State 97] Switching from state 97 to state 0
Copied 34928 (count=1)
Deleting state 97 0x0x2186ece0
72 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 96
>> fuzzInit: datum forking for value 97
>> fuzzInit: datum forking for value 97
72 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 97)
        (ReadLSB w32 0 v97_fuzz_symb_97)))
    state 98 with condition (Not (Eq false
         (Eq (w32 97)
             (ReadLSB w32 0 v97_fuzz_symb_97))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-97-8048a0e
Size=2 Low=0 splitIndex=1 high=1
72 [State 0] Switching from state 0 to state 98
Copied 34928 (count=1)
Finalizing TB execution 98
s2e_dummyMainFunction
tcg-llvm-tb-97-8048a0e
72 [State 98] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 97 not yet applied), shell_len: 1024, eip: 0x00000000

72 [State 98] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
72 [State 98] Leaving buffer range @0xc126f278, d6 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
72 [State 98] Killing state 98
72 [State 98] Terminating state 98 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
72 [State 98] Switching from state 98 to state 0
Copied 34928 (count=1)
Deleting state 98 0x0x2186ece0
72 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 97
>> fuzzInit: datum forking for value 98
>> fuzzInit: datum forking for value 98
72 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 98)
        (ReadLSB w32 0 v98_fuzz_symb_98)))
    state 99 with condition (Not (Eq false
         (Eq (w32 98)
             (ReadLSB w32 0 v98_fuzz_symb_98))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-98-8048a0e
Size=2 Low=0 splitIndex=1 high=1
72 [State 0] Switching from state 0 to state 99
Copied 34928 (count=1)
Finalizing TB execution 99
s2e_dummyMainFunction
tcg-llvm-tb-98-8048a0e
Firing timer event
72 [State 99] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 98 not yet applied), shell_len: 1024, eip: 0x00000000

72 [State 99] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 217 instructions, PCs: bfba33e2 bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
73 [State 99] Terminating state 99 with message 'eliminated this false positive, execution path subset of another success'
73 [State 99] Switching from state 99 to state 0
Copied 34928 (count=1)
Deleting state 99 0x0x2186ece0
73 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 98
>> fuzzInit: datum forking for value 99
>> fuzzInit: datum forking for value 99
73 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 99)
        (ReadLSB w32 0 v99_fuzz_symb_99)))
    state 100 with condition (Not (Eq false
         (Eq (w32 99)
             (ReadLSB w32 0 v99_fuzz_symb_99))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-99-8048a0e
Size=2 Low=0 splitIndex=1 high=1
73 [State 0] Switching from state 0 to state 100
Copied 34928 (count=1)
Finalizing TB execution 100
s2e_dummyMainFunction
tcg-llvm-tb-99-8048a0e
73 [State 100] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 99 not yet applied), shell_len: 1024, eip: 0x00000000

73 [State 100] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
73 [State 100] Leaving buffer range @0xc126f278, d5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
73 [State 100] Killing state 100
73 [State 100] Terminating state 100 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
73 [State 100] Switching from state 100 to state 0
Copied 34928 (count=1)
Deleting state 100 0x0x2186ece0
73 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 99
>> fuzzInit: datum forking for value 100
>> fuzzInit: datum forking for value 100
73 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 100)
        (ReadLSB w32 0 v100_fuzz_symb_100)))
    state 101 with condition (Not (Eq false
         (Eq (w32 100)
             (ReadLSB w32 0 v100_fuzz_symb_100))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-100-8048a0e
Size=2 Low=0 splitIndex=1 high=1
73 [State 0] Switching from state 0 to state 101
Copied 34928 (count=1)
Finalizing TB execution 101
s2e_dummyMainFunction
tcg-llvm-tb-100-8048a0e
73 [State 101] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 100 not yet applied), shell_len: 1024, eip: 0x00000000

73 [State 101] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 216 instructions, PCs: bfba33e4 bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
73 [State 101] Terminating state 101 with message 'eliminated this false positive, execution path subset of another success'
73 [State 101] Switching from state 101 to state 0
Copied 34928 (count=1)
Deleting state 101 0x0x2186ece0
74 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 100
>> fuzzInit: datum forking for value 101
>> fuzzInit: datum forking for value 101
74 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 101)
        (ReadLSB w32 0 v101_fuzz_symb_101)))
    state 102 with condition (Not (Eq false
         (Eq (w32 101)
             (ReadLSB w32 0 v101_fuzz_symb_101))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-101-8048a0e
Size=2 Low=0 splitIndex=1 high=1
74 [State 0] Switching from state 0 to state 102
Copied 34928 (count=1)
Finalizing TB execution 102
s2e_dummyMainFunction
tcg-llvm-tb-101-8048a0e
74 [State 102] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 101 not yet applied), shell_len: 1024, eip: 0x00000000

74 [State 102] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
74 [State 102] Leaving buffer range @0xc126f278, d4 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
74 [State 102] Killing state 102
74 [State 102] Terminating state 102 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
74 [State 102] Switching from state 102 to state 0
Copied 34928 (count=1)
Deleting state 102 0x0x2186ece0
74 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 101
>> fuzzInit: datum forking for value 102
>> fuzzInit: datum forking for value 102
74 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 102)
        (ReadLSB w32 0 v102_fuzz_symb_102)))
    state 103 with condition (Not (Eq false
         (Eq (w32 102)
             (ReadLSB w32 0 v102_fuzz_symb_102))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-102-8048a0e
Size=2 Low=0 splitIndex=1 high=1
74 [State 0] Switching from state 0 to state 103
Copied 34928 (count=1)
Finalizing TB execution 103
s2e_dummyMainFunction
tcg-llvm-tb-102-8048a0e
74 [State 103] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 102 not yet applied), shell_len: 1024, eip: 0x00000000

74 [State 103] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 215 instructions, PCs: bfba33e6 bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
74 [State 103] Terminating state 103 with message 'eliminated this false positive, execution path subset of another success'
74 [State 103] Switching from state 103 to state 0
Copied 34928 (count=1)
Deleting state 103 0x0x2186ece0
75 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 102
>> fuzzInit: datum forking for value 103
>> fuzzInit: datum forking for value 103
75 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 103)
        (ReadLSB w32 0 v103_fuzz_symb_103)))
    state 104 with condition (Not (Eq false
         (Eq (w32 103)
             (ReadLSB w32 0 v103_fuzz_symb_103))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-103-8048a0e
Size=2 Low=0 splitIndex=1 high=1
75 [State 0] Switching from state 0 to state 104
Copied 34928 (count=1)
Finalizing TB execution 104
s2e_dummyMainFunction
tcg-llvm-tb-103-8048a0e
75 [State 104] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 103 not yet applied), shell_len: 1024, eip: 0x00000000

75 [State 104] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
75 [State 104] Leaving buffer range @0xc126f278, d3 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
75 [State 104] Killing state 104
75 [State 104] Terminating state 104 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
75 [State 104] Switching from state 104 to state 0
Copied 34928 (count=1)
Deleting state 104 0x0x2186ece0
75 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 103
>> fuzzInit: datum forking for value 104
>> fuzzInit: datum forking for value 104
75 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 104)
        (ReadLSB w32 0 v104_fuzz_symb_104)))
    state 105 with condition (Not (Eq false
         (Eq (w32 104)
             (ReadLSB w32 0 v104_fuzz_symb_104))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-104-8048a0e
Size=2 Low=0 splitIndex=1 high=1
75 [State 0] Switching from state 0 to state 105
Copied 34928 (count=1)
Finalizing TB execution 105
s2e_dummyMainFunction
tcg-llvm-tb-104-8048a0e
75 [State 105] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 104 not yet applied), shell_len: 1024, eip: 0x00000000

75 [State 105] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 214 instructions, PCs: bfba33e8 bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
75 [State 105] Terminating state 105 with message 'eliminated this false positive, execution path subset of another success'
75 [State 105] Switching from state 105 to state 0
Copied 34928 (count=1)
Deleting state 105 0x0x21f3c960
76 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 104
>> fuzzInit: datum forking for value 105
>> fuzzInit: datum forking for value 105
76 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 105)
        (ReadLSB w32 0 v105_fuzz_symb_105)))
    state 106 with condition (Not (Eq false
         (Eq (w32 105)
             (ReadLSB w32 0 v105_fuzz_symb_105))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-105-8048a0e
Size=2 Low=0 splitIndex=1 high=1
76 [State 0] Switching from state 0 to state 106
Copied 34928 (count=1)
Finalizing TB execution 106
s2e_dummyMainFunction
tcg-llvm-tb-105-8048a0e
76 [State 106] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 105 not yet applied), shell_len: 1024, eip: 0x00000000

76 [State 106] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
76 [State 106] Leaving buffer range @0xc126f278, d2 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
76 [State 106] Killing state 106
76 [State 106] Terminating state 106 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
76 [State 106] Switching from state 106 to state 0
Copied 34928 (count=1)
Deleting state 106 0x0x21f3c960
76 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 105
>> fuzzInit: datum forking for value 106
>> fuzzInit: datum forking for value 106
76 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 106)
        (ReadLSB w32 0 v106_fuzz_symb_106)))
    state 107 with condition (Not (Eq false
         (Eq (w32 106)
             (ReadLSB w32 0 v106_fuzz_symb_106))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-106-8048a0e
Size=2 Low=0 splitIndex=1 high=1
76 [State 0] Switching from state 0 to state 107
Copied 34928 (count=1)
Finalizing TB execution 107
s2e_dummyMainFunction
tcg-llvm-tb-106-8048a0e
Firing timer event
76 [State 107] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 106 not yet applied), shell_len: 1024, eip: 0x00000000

76 [State 107] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 213 instructions, PCs: bfba33ea bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
77 [State 107] Terminating state 107 with message 'eliminated this false positive, execution path subset of another success'
77 [State 107] Switching from state 107 to state 0
Copied 34928 (count=1)
Deleting state 107 0x0x21f3c960
77 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 106
>> fuzzInit: datum forking for value 107
>> fuzzInit: datum forking for value 107
77 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 107)
        (ReadLSB w32 0 v107_fuzz_symb_107)))
    state 108 with condition (Not (Eq false
         (Eq (w32 107)
             (ReadLSB w32 0 v107_fuzz_symb_107))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-107-8048a0e
Size=2 Low=0 splitIndex=1 high=1
77 [State 0] Switching from state 0 to state 108
Copied 34928 (count=1)
Finalizing TB execution 108
s2e_dummyMainFunction
tcg-llvm-tb-107-8048a0e
77 [State 108] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 107 not yet applied), shell_len: 1024, eip: 0x00000000

77 [State 108] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
77 [State 108] Leaving buffer range @0xc126f278, d1 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
77 [State 108] Killing state 108
77 [State 108] Terminating state 108 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
77 [State 108] Switching from state 108 to state 0
Copied 34928 (count=1)
Deleting state 108 0x0x21f3c960
77 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 107
>> fuzzInit: datum forking for value 108
>> fuzzInit: datum forking for value 108
77 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 108)
        (ReadLSB w32 0 v108_fuzz_symb_108)))
    state 109 with condition (Not (Eq false
         (Eq (w32 108)
             (ReadLSB w32 0 v108_fuzz_symb_108))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-108-8048a0e
Size=2 Low=0 splitIndex=1 high=1
77 [State 0] Switching from state 0 to state 109
Copied 34928 (count=1)
Finalizing TB execution 109
s2e_dummyMainFunction
tcg-llvm-tb-108-8048a0e
Firing timer event
78 [State 109] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 108 not yet applied), shell_len: 1024, eip: 0x00000000

78 [State 109] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 212 instructions, PCs: bfba33ec bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
78 [State 109] Terminating state 109 with message 'eliminated this false positive, execution path subset of another success'
78 [State 109] Switching from state 109 to state 0
Copied 34928 (count=1)
Deleting state 109 0x0x21f3c960
78 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 108
>> fuzzInit: datum forking for value 109
>> fuzzInit: datum forking for value 109
78 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 109)
        (ReadLSB w32 0 v109_fuzz_symb_109)))
    state 110 with condition (Not (Eq false
         (Eq (w32 109)
             (ReadLSB w32 0 v109_fuzz_symb_109))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-109-8048a0e
Size=2 Low=0 splitIndex=1 high=1
78 [State 0] Switching from state 0 to state 110
Copied 34928 (count=1)
Finalizing TB execution 110
s2e_dummyMainFunction
tcg-llvm-tb-109-8048a0e
78 [State 110] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 109 not yet applied), shell_len: 1024, eip: 0x00000000

78 [State 110] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
78 [State 110] Leaving buffer range @0xc126f278, d0 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
78 [State 110] Killing state 110
78 [State 110] Terminating state 110 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
78 [State 110] Switching from state 110 to state 0
Copied 34928 (count=1)
Deleting state 110 0x0x21f3c960
78 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 109
>> fuzzInit: datum forking for value 110
>> fuzzInit: datum forking for value 110
78 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 110)
        (ReadLSB w32 0 v110_fuzz_symb_110)))
    state 111 with condition (Not (Eq false
         (Eq (w32 110)
             (ReadLSB w32 0 v110_fuzz_symb_110))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-110-8048a0e
Size=2 Low=0 splitIndex=1 high=1
78 [State 0] Switching from state 0 to state 111
Copied 34928 (count=1)
Finalizing TB execution 111
s2e_dummyMainFunction
tcg-llvm-tb-110-8048a0e
Firing timer event
79 [State 111] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 110 not yet applied), shell_len: 1024, eip: 0x00000000

79 [State 111] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 211 instructions, PCs: bfba33ee bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
79 [State 111] Terminating state 111 with message 'eliminated this false positive, execution path subset of another success'
79 [State 111] Switching from state 111 to state 0
Copied 34928 (count=1)
Deleting state 111 0x0x21f3c960
79 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 110
>> fuzzInit: datum forking for value 111
>> fuzzInit: datum forking for value 111
79 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 111)
        (ReadLSB w32 0 v111_fuzz_symb_111)))
    state 112 with condition (Not (Eq false
         (Eq (w32 111)
             (ReadLSB w32 0 v111_fuzz_symb_111))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-111-8048a0e
Size=2 Low=0 splitIndex=1 high=1
79 [State 0] Switching from state 0 to state 112
Copied 34928 (count=1)
Finalizing TB execution 112
s2e_dummyMainFunction
tcg-llvm-tb-111-8048a0e
79 [State 112] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 111 not yet applied), shell_len: 1024, eip: 0x00000000

79 [State 112] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
79 [State 112] Leaving buffer range @0xc126f278, cf IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
79 [State 112] Killing state 112
79 [State 112] Terminating state 112 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
79 [State 112] Switching from state 112 to state 0
Copied 34928 (count=1)
Deleting state 112 0x0x21f3c960
Firing timer event
80 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 111
>> fuzzInit: datum forking for value 112
>> fuzzInit: datum forking for value 112
80 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 112)
        (ReadLSB w32 0 v112_fuzz_symb_112)))
    state 113 with condition (Not (Eq false
         (Eq (w32 112)
             (ReadLSB w32 0 v112_fuzz_symb_112))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-112-8048a0e
Size=2 Low=0 splitIndex=1 high=1
80 [State 0] Switching from state 0 to state 113
Copied 34928 (count=1)
Finalizing TB execution 113
s2e_dummyMainFunction
tcg-llvm-tb-112-8048a0e
80 [State 113] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 112 not yet applied), shell_len: 1024, eip: 0x00000000

80 [State 113] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 210 instructions, PCs: bfba33f0 bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
80 [State 113] Terminating state 113 with message 'eliminated this false positive, execution path subset of another success'
80 [State 113] Switching from state 113 to state 0
Copied 34928 (count=1)
Deleting state 113 0x0x221b63e0
80 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 112
>> fuzzInit: datum forking for value 113
>> fuzzInit: datum forking for value 113
80 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 113)
        (ReadLSB w32 0 v113_fuzz_symb_113)))
    state 114 with condition (Not (Eq false
         (Eq (w32 113)
             (ReadLSB w32 0 v113_fuzz_symb_113))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-113-8048a0e
Size=2 Low=0 splitIndex=1 high=1
80 [State 0] Switching from state 0 to state 114
Copied 34928 (count=1)
Finalizing TB execution 114
s2e_dummyMainFunction
tcg-llvm-tb-113-8048a0e
Firing timer event
81 [State 114] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 113 not yet applied), shell_len: 1024, eip: 0x00000000

81 [State 114] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
81 [State 114] Leaving buffer range @0xc126f278, ce IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
81 [State 114] Killing state 114
81 [State 114] Terminating state 114 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
81 [State 114] Switching from state 114 to state 0
Copied 34928 (count=1)
Deleting state 114 0x0x221b63e0
81 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 113
>> fuzzInit: datum forking for value 114
>> fuzzInit: datum forking for value 114
81 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 114)
        (ReadLSB w32 0 v114_fuzz_symb_114)))
    state 115 with condition (Not (Eq false
         (Eq (w32 114)
             (ReadLSB w32 0 v114_fuzz_symb_114))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-114-8048a0e
Size=2 Low=0 splitIndex=1 high=1
81 [State 0] Switching from state 0 to state 115
Copied 34928 (count=1)
Finalizing TB execution 115
s2e_dummyMainFunction
tcg-llvm-tb-114-8048a0e
Firing timer event
82 [State 115] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 114 not yet applied), shell_len: 1024, eip: 0x00000000

82 [State 115] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 209 instructions, PCs: bfba33f2 bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
82 [State 115] Terminating state 115 with message 'eliminated this false positive, execution path subset of another success'
82 [State 115] Switching from state 115 to state 0
Copied 34928 (count=1)
Deleting state 115 0x0x221b63e0
82 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 114
>> fuzzInit: datum forking for value 115
>> fuzzInit: datum forking for value 115
82 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 115)
        (ReadLSB w32 0 v115_fuzz_symb_115)))
    state 116 with condition (Not (Eq false
         (Eq (w32 115)
             (ReadLSB w32 0 v115_fuzz_symb_115))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-115-8048a0e
Size=2 Low=0 splitIndex=1 high=1
82 [State 0] Switching from state 0 to state 116
Copied 34928 (count=1)
Finalizing TB execution 116
s2e_dummyMainFunction
tcg-llvm-tb-115-8048a0e
Firing timer event
83 [State 116] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 115 not yet applied), shell_len: 1024, eip: 0x00000000

83 [State 116] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
83 [State 116] Leaving buffer range @0xc126f278, cd IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
83 [State 116] Killing state 116
83 [State 116] Terminating state 116 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
83 [State 116] Switching from state 116 to state 0
Copied 34928 (count=1)
Deleting state 116 0x0x224c17e0
83 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 115
>> fuzzInit: datum forking for value 116
>> fuzzInit: datum forking for value 116
83 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 116)
        (ReadLSB w32 0 v116_fuzz_symb_116)))
    state 117 with condition (Not (Eq false
         (Eq (w32 116)
             (ReadLSB w32 0 v116_fuzz_symb_116))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-116-8048a0e
Size=2 Low=0 splitIndex=1 high=1
83 [State 0] Switching from state 0 to state 117
Copied 34928 (count=1)
Finalizing TB execution 117
s2e_dummyMainFunction
tcg-llvm-tb-116-8048a0e
84 [State 117] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 116 not yet applied), shell_len: 1024, eip: 0x00000000

84 [State 117] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 208 instructions, PCs: bfba33f4 bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
84 [State 117] Terminating state 117 with message 'eliminated this false positive, execution path subset of another success'
84 [State 117] Switching from state 117 to state 0
Copied 34928 (count=1)
Deleting state 117 0x0x224c17e0
84 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 116
>> fuzzInit: datum forking for value 117
>> fuzzInit: datum forking for value 117
84 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 117)
        (ReadLSB w32 0 v117_fuzz_symb_117)))
    state 118 with condition (Not (Eq false
         (Eq (w32 117)
             (ReadLSB w32 0 v117_fuzz_symb_117))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-117-8048a0e
Size=2 Low=0 splitIndex=1 high=1
84 [State 0] Switching from state 0 to state 118
Copied 34928 (count=1)
Finalizing TB execution 118
s2e_dummyMainFunction
tcg-llvm-tb-117-8048a0e
84 [State 118] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 117 not yet applied), shell_len: 1024, eip: 0x00000000

84 [State 118] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
85 [State 118] Leaving buffer range @0xc126f278, cc IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
85 [State 118] Killing state 118
85 [State 118] Terminating state 118 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
85 [State 118] Switching from state 118 to state 0
Copied 34928 (count=1)
Deleting state 118 0x0x224c17e0
85 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 117
>> fuzzInit: datum forking for value 118
>> fuzzInit: datum forking for value 118
>> fuzzInit: datum forking for value 118
85 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 118)
        (ReadLSB w32 0 v118_fuzz_symb_118)))
    state 119 with condition (Not (Eq false
         (Eq (w32 118)
             (ReadLSB w32 0 v118_fuzz_symb_118))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-118-8048a0e
Size=2 Low=0 splitIndex=1 high=1
85 [State 0] Switching from state 0 to state 119
Copied 34928 (count=1)
Finalizing TB execution 119
s2e_dummyMainFunction
tcg-llvm-tb-118-8048a0e
85 [State 119] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 118 not yet applied), shell_len: 1024, eip: 0x00000000

85 [State 119] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 207 instructions, PCs: bfba33f6 bfba33f8 bfba33fa bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
86 [State 119] Terminating state 119 with message 'eliminated this false positive, execution path subset of another success'
86 [State 119] Switching from state 119 to state 0
Copied 34928 (count=1)
Deleting state 119 0x0x224c17e0
Firing timer event
86 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 118
>> fuzzInit: datum forking for value 119
>> fuzzInit: datum forking for value 119
86 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 119)
        (ReadLSB w32 0 v119_fuzz_symb_119)))
    state 120 with condition (Not (Eq false
         (Eq (w32 119)
             (ReadLSB w32 0 v119_fuzz_symb_119))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-119-8048a0e
Size=2 Low=0 splitIndex=1 high=1
86 [State 0] Switching from state 0 to state 120
Copied 34928 (count=1)
Finalizing TB execution 120
s2e_dummyMainFunction
tcg-llvm-tb-119-8048a0e
86 [State 120] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 119 not yet applied), shell_len: 1024, eip: 0x00000000

86 [State 120] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
86 [State 120] Leaving buffer range @0xc8a3599c, 4a IoB insns; prev insn @0xbfba3489
  1   2B @0xbfba3489:  0  0             add [eax], al           
86 [State 120] Entering buffer range @0xbfba348b, 171 OoB insns
86 [State 120] Leaving buffer range @0xc126f278, 81 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
87 [State 120] Killing state 120
87 [State 120] Terminating state 120 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
87 [State 120] Switching from state 120 to state 0
Copied 34928 (count=1)
Deleting state 120 0x0x224c17e0
Firing timer event
87 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 119
>> fuzzInit: datum forking for value 120
>> fuzzInit: datum forking for value 120
87 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 120)
        (ReadLSB w32 0 v120_fuzz_symb_120)))
    state 121 with condition (Not (Eq false
         (Eq (w32 120)
             (ReadLSB w32 0 v120_fuzz_symb_120))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-120-8048a0e
Size=2 Low=0 splitIndex=1 high=1
87 [State 0] Switching from state 0 to state 121
Copied 34928 (count=1)
Finalizing TB execution 121
s2e_dummyMainFunction
tcg-llvm-tb-120-8048a0e
87 [State 121] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 120 not yet applied), shell_len: 1024, eip: 0x00000000

87 [State 121] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
87 [State 121] Leaving buffer range @0xc112cd1a, 25 IoB insns; prev insn @0xbfba3440
  1   2B @0xbfba3440:  0  0             add [eax], al           
87 [State 121] Entering buffer range @0xbfba3442, 25 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 231. This is the 4th success
>> Success densities, overlay: 0.988038; avg: 0.988038
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33f8:  0  0             add [eax], al           
>>      2   2B @0xbfba33fa:  0  0             add [eax], al           
>>      3   2B @0xbfba33fc:  0  0             add [eax], al           
>>      4   2B @0xbfba33fe:  0  0             add [eax], al           
>>      5   2B @0xbfba3400:  0  0             add [eax], al           
>>      6   2B @0xbfba3402:  0  0             add [eax], al           
>>      7   2B @0xbfba3404:  0  0             add [eax], al           
>>      8   2B @0xbfba3406:  0  0             add [eax], al           
>>      9   2B @0xbfba3408:  0  0             add [eax], al           
>>     10   2B @0xbfba340a:  0  0             add [eax], al           
>>     11   2B @0xbfba340c:  0  0             add [eax], al           
>>     12   2B @0xbfba340e:  0  0             add [eax], al           
>>     13   2B @0xbfba3410:  0  0             add [eax], al           
>>     14   2B @0xbfba3412:  0  0             add [eax], al           
>>     15   2B @0xbfba3414:  0  0             add [eax], al           
>>     16   2B @0xbfba3416:  0  0             add [eax], al           
>>     17   2B @0xbfba3418:  0  0             add [eax], al           
>>     18   2B @0xbfba341a:  0  0             add [eax], al           
>>     19   2B @0xbfba341c:  0  0             add [eax], al           
>>     20   2B @0xbfba341e:  0  0             add [eax], al           
>>     21   2B @0xbfba3420:  0  0             add [eax], al           
>>     22   2B @0xbfba3422:  0  0             add [eax], al           
>>     23   2B @0xbfba3424:  0  0             add [eax], al           
>>     24   2B @0xbfba3426:  0  0             add [eax], al           
>>     25   2B @0xbfba3428:  0  0             add [eax], al           
>>     26   2B @0xbfba342a:  0  0             add [eax], al           
>>     27   2B @0xbfba342c:  0  0             add [eax], al           
>>     28   2B @0xbfba342e:  0  0             add [eax], al           
>>     29   2B @0xbfba3430:  0  0             add [eax], al           
>>     30   2B @0xbfba3432:  0  0             add [eax], al           
>>     31   2B @0xbfba3434:  0  0             add [eax], al           
>>     32   2B @0xbfba3436:  0  0             add [eax], al           
>>     33   2B @0xbfba3438:  0  0             add [eax], al           
>>     34   2B @0xbfba343a:  0  0             add [eax], al           
>>     35   2B @0xbfba343c:  0  0             add [eax], al           
>>     36   2B @0xbfba343e:  0  0             add [eax], al           
>>     37   2B @0xbfba3440:  0  0             add [eax], al           
>>     38   3B @0xc112cd1a: OOB, bytes not captured
>>     39   2B @0xc112cd1d: OOB, bytes not captured
>>     40   5B @0xc112cd1f: OOB, bytes not captured
>>     41   3B @0xc113e1bf: OOB, bytes not captured
>>     42   3B @0xc113e1c2: OOB, bytes not captured
>>     43   2B @0xc113e1c5: OOB, bytes not captured
>>     44   3B @0xc113e1c7: OOB, bytes not captured
>>     45   2B @0xc113e1ca: OOB, bytes not captured
>>     46   3B @0xc113e1cc: OOB, bytes not captured
>>     47   2B @0xc113e1cf: OOB, bytes not captured
>>     48   1B @0xc113e1d1: OOB, bytes not captured
>>     49   2B @0xc112cd24: OOB, bytes not captured
>>     50   2B @0xc112cd26: OOB, bytes not captured
>>     51   3B @0xc112cd28: OOB, bytes not captured
>>     52   2B @0xc112cd2b: OOB, bytes not captured
>>     53   2B @0xc112cd2d: OOB, bytes not captured
>>     54   2B @0xc112cd2f: OOB, bytes not captured
>>     55   2B @0xc1025930: OOB, bytes not captured
>>     56   2B @0xc1025932: OOB, bytes not captured
>>     57   2B @0xc1025934: OOB, bytes not captured
>>     58   2B @0xc1025936: OOB, bytes not captured
>>     59   4B @0xc1025938: OOB, bytes not captured
>>     60   4B @0xc102593c: OOB, bytes not captured
>>     61   3B @0xc1025940: OOB, bytes not captured
>>     62   2B @0xc1025943: OOB, bytes not captured
>>     63   2B @0xbfba3442:  0  0             add [eax], al           
>>     64   2B @0xbfba3444:  0  0             add [eax], al           
>>     65   2B @0xbfba3446:  0  0             add [eax], al           
>>     66   2B @0xbfba3448:  0  0             add [eax], al           
>>     67   2B @0xbfba344a:  0  0             add [eax], al           
>>     68   2B @0xbfba344c:  0  0             add [eax], al           
>>     69   2B @0xbfba344e:  0  0             add [eax], al           
>>     70   2B @0xbfba3450:  0  0             add [eax], al           
>>     71   2B @0xbfba3452:  0  0             add [eax], al           
>>     72   2B @0xbfba3454:  0  0             add [eax], al           
>>     73   2B @0xbfba3456:  0  0             add [eax], al           
>>     74   2B @0xbfba3458:  0  0             add [eax], al           
>>     75   2B @0xbfba345a:  0  0             add [eax], al           
>>     76   2B @0xbfba345c:  0  0             add [eax], al           
>>     77   2B @0xbfba345e:  0  0             add [eax], al           
>>     78   2B @0xbfba3460:  0  0             add [eax], al           
>>     79   2B @0xbfba3462:  0  0             add [eax], al           
>>     80   2B @0xbfba3464:  0  0             add [eax], al           
>>     81   2B @0xbfba3466:  0  0             add [eax], al           
>>     82   2B @0xbfba3468:  0  0             add [eax], al           
>>     83   2B @0xbfba346a:  0  0             add [eax], al           
>>     84   2B @0xbfba346c:  0  0             add [eax], al           
>>     85   2B @0xbfba346e:  0  0             add [eax], al           
>>     86   2B @0xbfba3470:  0  0             add [eax], al           
>>     87   2B @0xbfba3472:  0  0             add [eax], al           
>>     88   2B @0xbfba3474:  0  0             add [eax], al           
>>     89   2B @0xbfba3476:  0  0             add [eax], al           
>>     90   2B @0xbfba3478:  0  0             add [eax], al           
>>     91   2B @0xbfba347a:  0  0             add [eax], al           
>>     92   2B @0xbfba347c:  0  0             add [eax], al           
>>     93   2B @0xbfba347e:  0  0             add [eax], al           
>>     94   2B @0xbfba3480:  0  0             add [eax], al           
>>     95   2B @0xbfba3482:  0  0             add [eax], al           
>>     96   2B @0xbfba3484:  0  0             add [eax], al           
>>     97   2B @0xbfba3486:  0  0             add [eax], al           
>>     98   2B @0xbfba3488:  0  0             add [eax], al           
>>     99   2B @0xbfba348a:  0  0             add [eax], al           
>>    100   2B @0xbfba348c:  0  0             add [eax], al           
>>    101   2B @0xbfba348e:  0  0             add [eax], al           
>>    102   2B @0xbfba3490:  0  0             add [eax], al           
>>    103   2B @0xbfba3492:  0  0             add [eax], al           
>>    104   2B @0xbfba3494:  0  0             add [eax], al           
>>    105   2B @0xbfba3496:  0  0             add [eax], al           
>>    106   2B @0xbfba3498:  0  0             add [eax], al           
>>    107   2B @0xbfba349a:  0  0             add [eax], al           
>>    108   2B @0xbfba349c:  0  0             add [eax], al           
>>    109   2B @0xbfba349e:  0  0             add [eax], al           
>>    110   2B @0xbfba34a0:  0  0             add [eax], al           
>>    111   2B @0xbfba34a2:  0  0             add [eax], al           
>>    112   2B @0xbfba34a4:  0  0             add [eax], al           
>>    113   2B @0xbfba34a6:  0  0             add [eax], al           
>>    114   2B @0xbfba34a8:  0  0             add [eax], al           
>>    115   2B @0xbfba34aa:  0  0             add [eax], al           
>>    116   2B @0xbfba34ac:  0  0             add [eax], al           
>>    117   2B @0xbfba34ae:  0  0             add [eax], al           
>>    118   2B @0xbfba34b0:  0  0             add [eax], al           
>>    119   2B @0xbfba34b2:  0  0             add [eax], al           
>>    120   2B @0xbfba34b4:  0  0             add [eax], al           
>>    121   2B @0xbfba34b6:  0  0             add [eax], al           
>>    122   2B @0xbfba34b8:  0  0             add [eax], al           
>>    123   2B @0xbfba34ba:  0  0             add [eax], al           
>>    124   2B @0xbfba34bc:  0  0             add [eax], al           
>>    125   2B @0xbfba34be:  0  0             add [eax], al           
>>    126   2B @0xbfba34c0:  0  0             add [eax], al           
>>    127   2B @0xbfba34c2:  0  0             add [eax], al           
>>    128   2B @0xbfba34c4:  0  0             add [eax], al           
>>    129   2B @0xbfba34c6:  0  0             add [eax], al           
>>    130   2B @0xbfba34c8:  0  0             add [eax], al           
>>    131   2B @0xbfba34ca:  0  0             add [eax], al           
>>    132   2B @0xbfba34cc:  0  0             add [eax], al           
>>    133   2B @0xbfba34ce:  0  0             add [eax], al           
>>    134   2B @0xbfba34d0:  0  0             add [eax], al           
>>    135   2B @0xbfba34d2:  0  0             add [eax], al           
>>    136   2B @0xbfba34d4:  0  0             add [eax], al           
>>    137   2B @0xbfba34d6:  0  0             add [eax], al           
>>    138   2B @0xbfba34d8:  0  0             add [eax], al           
>>    139   2B @0xbfba34da:  0  0             add [eax], al           
>>    140   2B @0xbfba34dc:  0  0             add [eax], al           
>>    141   2B @0xbfba34de:  0  0             add [eax], al           
>>    142   2B @0xbfba34e0:  0  0             add [eax], al           
>>    143   2B @0xbfba34e2:  0  0             add [eax], al           
>>    144   2B @0xbfba34e4:  0  0             add [eax], al           
>>    145   2B @0xbfba34e6:  0  0             add [eax], al           
>>    146   2B @0xbfba34e8:  0  0             add [eax], al           
>>    147   2B @0xbfba34ea:  0  0             add [eax], al           
>>    148   2B @0xbfba34ec:  0  0             add [eax], al           
>>    149   2B @0xbfba34ee:  0  0             add [eax], al           
>>    150   2B @0xbfba34f0:  0  0             add [eax], al           
>>    151   2B @0xbfba34f2:  0  0             add [eax], al           
>>    152   2B @0xbfba34f4:  0  0             add [eax], al           
>>    153   2B @0xbfba34f6:  0  0             add [eax], al           
>>    154   2B @0xbfba34f8:  0  0             add [eax], al           
>>    155   2B @0xbfba34fa:  0  0             add [eax], al           
>>    156   2B @0xbfba34fc:  0  0             add [eax], al           
>>    157   2B @0xbfba34fe:  0  0             add [eax], al           
>>    158   2B @0xbfba3500:  0  0             add [eax], al           
>>    159   2B @0xbfba3502:  0  0             add [eax], al           
>>    160   2B @0xbfba3504:  0  0             add [eax], al           
>>    161   2B @0xbfba3506:  0  0             add [eax], al           
>>    162   2B @0xbfba3508:  0  0             add [eax], al           
>>    163   2B @0xbfba350a:  0  0             add [eax], al           
>>    164   2B @0xbfba350c:  0  0             add [eax], al           
>>    165   2B @0xbfba350e:  0  0             add [eax], al           
>>    166   2B @0xbfba3510:  0  0             add [eax], al           
>>    167   2B @0xbfba3512:  0  0             add [eax], al           
>>    168   2B @0xbfba3514:  0  0             add [eax], al           
>>    169   2B @0xbfba3516:  0  0             add [eax], al           
>>    170   2B @0xbfba3518:  0  0             add [eax], al           
>>    171   2B @0xbfba351a:  0  0             add [eax], al           
>>    172   2B @0xbfba351c:  0  0             add [eax], al           
>>    173   2B @0xbfba351e:  0  0             add [eax], al           
>>    174   2B @0xbfba3520:  0  0             add [eax], al           
>>    175   2B @0xbfba3522:  0  0             add [eax], al           
>>    176   2B @0xbfba3524:  0  0             add [eax], al           
>>    177   2B @0xbfba3526:  0  0             add [eax], al           
>>    178   2B @0xbfba3528:  0  0             add [eax], al           
>>    179   2B @0xbfba352a:  0  0             add [eax], al           
>>    180   2B @0xbfba352c:  0  0             add [eax], al           
>>    181   2B @0xbfba352e:  0  0             add [eax], al           
>>    182   2B @0xbfba3530:  0  0             add [eax], al           
>>    183   2B @0xbfba3532:  0  0             add [eax], al           
>>    184   2B @0xbfba3534:  0  0             add [eax], al           
>>    185   2B @0xbfba3536:  0  0             add [eax], al           
>>    186   2B @0xbfba3538:  0  0             add [eax], al           
>>    187   2B @0xbfba353a:  0  0             add [eax], al           
>>    188   2B @0xbfba353c:  0  0             add [eax], al           
>>    189   2B @0xbfba353e:  0  0             add [eax], al           
>>    190   2B @0xbfba3540:  0  0             add [eax], al           
>>    191   2B @0xbfba3542:  0  0             add [eax], al           
>>    192   2B @0xbfba3544:  0  0             add [eax], al           
>>    193   2B @0xbfba3546:  0  0             add [eax], al           
>>    194   2B @0xbfba3548:  0  0             add [eax], al           
>>    195   2B @0xbfba354a:  0  0             add [eax], al           
>>    196   2B @0xbfba354c:  0  0             add [eax], al           
>>    197   2B @0xbfba354e:  0  0             add [eax], al           
>>    198   2B @0xbfba3550:  0  0             add [eax], al           
>>    199   2B @0xbfba3552:  0  0             add [eax], al           
>>    200   2B @0xbfba3554:  0  0             add [eax], al           
>>    201   2B @0xbfba3556:  0  0             add [eax], al           
>>    202   2B @0xbfba3558:  0  0             add [eax], al           
>>    203   2B @0xbfba355a:  0  0             add [eax], al           
>>    204   2B @0xbfba355c:  0  0             add [eax], al           
>>    205   2B @0xbfba355e:  0  0             add [eax], al           
>>    206   2B @0xbfba3560:  0  0             add [eax], al           
>>    207   2B @0xbfba3562:  0  0             add [eax], al           
>>    208   2B @0xbfba3564:  0  0             add [eax], al           
>>    209   2B @0xbfba3566:  0  0             add [eax], al           
>>    210   2B @0xbfba3568:  0  0             add [eax], al           
>>    211   2B @0xbfba356a:  0  0             add [eax], al           
>>    212   2B @0xbfba356c:  0  0             add [eax], al           
>>    213   2B @0xbfba356e:  0  0             add [eax], al           
>>    214   2B @0xbfba3570:  0  0             add [eax], al           
>>    215   2B @0xbfba3572:  0  0             add [eax], al           
>>    216   2B @0xbfba3574:  0  0             add [eax], al           
>>    217   2B @0xbfba3576:  0  0             add [eax], al           
>>    218   2B @0xbfba3578:  0  0             add [eax], al           
>>    219   2B @0xbfba357a:  0  0             add [eax], al           
>>    220   2B @0xbfba357c:  0  0             add [eax], al           
>>    221   2B @0xbfba357e:  0  0             add [eax], al           
>>    222   2B @0xbfba3580: eb 13             jmp 0x15                
>>    223   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    224   1B @0xbfba3582: 59                pop ecx                 
>>    225   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    226   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    227   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    228   1B @0xbfba3589: 43                inc ebx                 
>>    229   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    230   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    231   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (413/418) = 0.988038
>>    Mem_map start_addr: 0xbfba33f8, length: 1024B, exec'ed bytes: 413, range: 418B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33f0                   00000000 00000000          ........
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

87 [State 121] Terminating state 121 with message 'EIP reached, success'
87 [State 121] Switching from state 121 to state 0
Copied 34928 (count=1)
Deleting state 121 0x0x224c17e0
Firing timer event
88 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 120
>> fuzzInit: datum forking for value 121
>> fuzzInit: datum forking for value 121
88 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 121)
        (ReadLSB w32 0 v121_fuzz_symb_121)))
    state 122 with condition (Not (Eq false
         (Eq (w32 121)
             (ReadLSB w32 0 v121_fuzz_symb_121))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-121-8048a0e
Size=2 Low=0 splitIndex=1 high=1
88 [State 0] Switching from state 0 to state 122
Copied 34928 (count=1)
Finalizing TB execution 122
s2e_dummyMainFunction
tcg-llvm-tb-121-8048a0e
88 [State 122] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 121 not yet applied), shell_len: 1024, eip: 0x00000000

88 [State 122] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
88 [State 122] Leaving buffer range @0xc126f278, ca IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
88 [State 122] Killing state 122
88 [State 122] Terminating state 122 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
88 [State 122] Switching from state 122 to state 0
Copied 34928 (count=1)
Deleting state 122 0x0x224c17e0
Firing timer event
89 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 121
>> fuzzInit: datum forking for value 122
>> fuzzInit: datum forking for value 122
89 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 122)
        (ReadLSB w32 0 v122_fuzz_symb_122)))
    state 123 with condition (Not (Eq false
         (Eq (w32 122)
             (ReadLSB w32 0 v122_fuzz_symb_122))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-122-8048a0e
Size=2 Low=0 splitIndex=1 high=1
89 [State 0] Switching from state 0 to state 123
Copied 34928 (count=1)
Finalizing TB execution 123
s2e_dummyMainFunction
tcg-llvm-tb-122-8048a0e
89 [State 123] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 122 not yet applied), shell_len: 1024, eip: 0x00000000

89 [State 123] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
89 [State 123] Leaving buffer range @0xc10252ff, 25 IoB insns; prev insn @0xbfba3442
  1   2B @0xbfba3442:  0  0             add [eax], al           
89 [State 123] Entering buffer range @0xbfba3444, 267 OoB insns
89 [State 123] Leaving buffer range @0xc8a3631c, 25 IoB insns; prev insn @0xbfba348c
  1   2B @0xbfba348c:  0  0             add [eax], al           
89 [State 123] Entering buffer range @0xbfba348e, 70 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 542. This is the 5th success
>> Success densities, overlay: 0.987981; avg: 0.987981
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33fa:  0  0             add [eax], al           
>>      2   2B @0xbfba33fc:  0  0             add [eax], al           
>>      3   2B @0xbfba33fe:  0  0             add [eax], al           
>>      4   2B @0xbfba3400:  0  0             add [eax], al           
>>      5   2B @0xbfba3402:  0  0             add [eax], al           
>>      6   2B @0xbfba3404:  0  0             add [eax], al           
>>      7   2B @0xbfba3406:  0  0             add [eax], al           
>>      8   2B @0xbfba3408:  0  0             add [eax], al           
>>      9   2B @0xbfba340a:  0  0             add [eax], al           
>>     10   2B @0xbfba340c:  0  0             add [eax], al           
>>     11   2B @0xbfba340e:  0  0             add [eax], al           
>>     12   2B @0xbfba3410:  0  0             add [eax], al           
>>     13   2B @0xbfba3412:  0  0             add [eax], al           
>>     14   2B @0xbfba3414:  0  0             add [eax], al           
>>     15   2B @0xbfba3416:  0  0             add [eax], al           
>>     16   2B @0xbfba3418:  0  0             add [eax], al           
>>     17   2B @0xbfba341a:  0  0             add [eax], al           
>>     18   2B @0xbfba341c:  0  0             add [eax], al           
>>     19   2B @0xbfba341e:  0  0             add [eax], al           
>>     20   2B @0xbfba3420:  0  0             add [eax], al           
>>     21   2B @0xbfba3422:  0  0             add [eax], al           
>>     22   2B @0xbfba3424:  0  0             add [eax], al           
>>     23   2B @0xbfba3426:  0  0             add [eax], al           
>>     24   2B @0xbfba3428:  0  0             add [eax], al           
>>     25   2B @0xbfba342a:  0  0             add [eax], al           
>>     26   2B @0xbfba342c:  0  0             add [eax], al           
>>     27   2B @0xbfba342e:  0  0             add [eax], al           
>>     28   2B @0xbfba3430:  0  0             add [eax], al           
>>     29   2B @0xbfba3432:  0  0             add [eax], al           
>>     30   2B @0xbfba3434:  0  0             add [eax], al           
>>     31   2B @0xbfba3436:  0  0             add [eax], al           
>>     32   2B @0xbfba3438:  0  0             add [eax], al           
>>     33   2B @0xbfba343a:  0  0             add [eax], al           
>>     34   2B @0xbfba343c:  0  0             add [eax], al           
>>     35   2B @0xbfba343e:  0  0             add [eax], al           
>>     36   2B @0xbfba3440:  0  0             add [eax], al           
>>     37   2B @0xbfba3442:  0  0             add [eax], al           
>>     38   7B @0xc10252ff: OOB, bytes not captured
>>     39   6B @0xc1025306: OOB, bytes not captured
>>     40   7B @0xc102530c: OOB, bytes not captured
>>     41   2B @0xc1025313: OOB, bytes not captured
>>     42   6B @0xc1025315: OOB, bytes not captured
>>     43   2B @0xc102531b: OOB, bytes not captured
>>     44   2B @0xc102531d: OOB, bytes not captured
>>     45   3B @0xc1025325: OOB, bytes not captured
>>     46   2B @0xc1025328: OOB, bytes not captured
>>     47   3B @0xc1025349: OOB, bytes not captured
>>     48   2B @0xc102534c: OOB, bytes not captured
>>     49   3B @0xc1025399: OOB, bytes not captured
>>     50   6B @0xc102539c: OOB, bytes not captured
>>     51   2B @0xc10253a2: OOB, bytes not captured
>>     52   2B @0xc10253a4: OOB, bytes not captured
>>     53   2B @0xc10253a6: OOB, bytes not captured
>>     54   2B @0xc10253ac: OOB, bytes not captured
>>     55   2B @0xc10253ae: OOB, bytes not captured
>>     56   3B @0xc10253a8: OOB, bytes not captured
>>     57   1B @0xc10253ab: OOB, bytes not captured
>>     58   2B @0xc10253ac: OOB, bytes not captured
>>     59   2B @0xc10253ae: OOB, bytes not captured
>>     60   2B @0xc10253b0: OOB, bytes not captured
>>     61   2B @0xc10253b2: OOB, bytes not captured
>>     62   2B @0xc10253b4: OOB, bytes not captured
>>     63   2B @0xc10253ba: OOB, bytes not captured
>>     64   2B @0xc10253bc: OOB, bytes not captured
>>     65   3B @0xc10253b6: OOB, bytes not captured
>>     66   1B @0xc10253b9: OOB, bytes not captured
>>     67   2B @0xc10253ba: OOB, bytes not captured
>>     68   2B @0xc10253bc: OOB, bytes not captured
>>     69   2B @0xc10253be: OOB, bytes not captured
>>     70   2B @0xc10253c4: OOB, bytes not captured
>>     71   2B @0xc10253c6: OOB, bytes not captured
>>     72   2B @0xc10253c8: OOB, bytes not captured
>>     73   2B @0xc10253ce: OOB, bytes not captured
>>     74   2B @0xc10253d0: OOB, bytes not captured
>>     75   3B @0xc10253d2: OOB, bytes not captured
>>     76   3B @0xc10253d5: OOB, bytes not captured
>>     77   2B @0xc10253d8: OOB, bytes not captured
>>     78   2B @0xc10253da: OOB, bytes not captured
>>     79   2B @0xc10253dc: OOB, bytes not captured
>>     80   2B @0xc10253e2: OOB, bytes not captured
>>     81   2B @0xc10253e4: OOB, bytes not captured
>>     82   5B @0xc10253e6: OOB, bytes not captured
>>     83   1B @0xc101fff1: OOB, bytes not captured
>>     84   1B @0xc101fff2: OOB, bytes not captured
>>     85   1B @0xc101fff3: OOB, bytes not captured
>>     86   1B @0xc101fff4: OOB, bytes not captured
>>     87   3B @0xc101fff5: OOB, bytes not captured
>>     88   4B @0xc101fff8: OOB, bytes not captured
>>     89   2B @0xc101fffc: OOB, bytes not captured
>>     90   4B @0xc101fffe: OOB, bytes not captured
>>     91   4B @0xc1020002: OOB, bytes not captured
>>     92   3B @0xc1020006: OOB, bytes not captured
>>     93   3B @0xc1020009: OOB, bytes not captured
>>     94   4B @0xc102000c: OOB, bytes not captured
>>     95   4B @0xc1020010: OOB, bytes not captured
>>     96   3B @0xc1020014: OOB, bytes not captured
>>     97   3B @0xc1020017: OOB, bytes not captured
>>     98   4B @0xc102001a: OOB, bytes not captured
>>     99   4B @0xc102001e: OOB, bytes not captured
>>    100   5B @0xc1020022: OOB, bytes not captured
>>    101   2B @0xc1020027: OOB, bytes not captured
>>    102   2B @0xc1020029: OOB, bytes not captured
>>    103   5B @0xc102002b: OOB, bytes not captured
>>    104   2B @0xc1020030: OOB, bytes not captured
>>    105   4B @0xc102003a: OOB, bytes not captured
>>    106   6B @0xc102003e: OOB, bytes not captured
>>    107   3B @0xc1020044: OOB, bytes not captured
>>    108   4B @0xc1020047: OOB, bytes not captured
>>    109   2B @0xc102004b: OOB, bytes not captured
>>    110   7B @0xc102004d: OOB, bytes not captured
>>    111   2B @0xc1020054: OOB, bytes not captured
>>    112   4B @0xc1020056: OOB, bytes not captured
>>    113   3B @0xc102005a: OOB, bytes not captured
>>    114   3B @0xc102005d: OOB, bytes not captured
>>    115   3B @0xc1020060: OOB, bytes not captured
>>    116   3B @0xc1020063: OOB, bytes not captured
>>    117   3B @0xc1020066: OOB, bytes not captured
>>    118   3B @0xc1020069: OOB, bytes not captured
>>    119   3B @0xc102006c: OOB, bytes not captured
>>    120   3B @0xc102006f: OOB, bytes not captured
>>    121   2B @0xc1020072: OOB, bytes not captured
>>    122   2B @0xc1020074: OOB, bytes not captured
>>    123   2B @0xc1020076: OOB, bytes not captured
>>    124   4B @0xc1020078: OOB, bytes not captured
>>    125   3B @0xc102007c: OOB, bytes not captured
>>    126   4B @0xc102007f: OOB, bytes not captured
>>    127   4B @0xc1020083: OOB, bytes not captured
>>    128   2B @0xc1020087: OOB, bytes not captured
>>    129   2B @0xc1020089: OOB, bytes not captured
>>    130   2B @0xc102008b: OOB, bytes not captured
>>    131   2B @0xc102008d: OOB, bytes not captured
>>    132   2B @0xc102008f: OOB, bytes not captured
>>    133   2B @0xc1020091: OOB, bytes not captured
>>    134   2B @0xc1020099: OOB, bytes not captured
>>    135   2B @0xc102009b: OOB, bytes not captured
>>    136   3B @0xc102009d: OOB, bytes not captured
>>    137   2B @0xc10200a0: OOB, bytes not captured
>>    138   2B @0xc10200a2: OOB, bytes not captured
>>    139   2B @0xc10200a4: OOB, bytes not captured
>>    140   2B @0xc10200a6: OOB, bytes not captured
>>    141   2B @0xc10200a8: OOB, bytes not captured
>>    142   2B @0xc10200aa: OOB, bytes not captured
>>    143   2B @0xc10200ac: OOB, bytes not captured
>>    144   7B @0xc10200ae: OOB, bytes not captured
>>    145   2B @0xc10200b5: OOB, bytes not captured
>>    146   4B @0xc10200b7: OOB, bytes not captured
>>    147   6B @0xc10200bb: OOB, bytes not captured
>>    148   2B @0xc10200c1: OOB, bytes not captured
>>    149   2B @0xc10200c3: OOB, bytes not captured
>>    150   2B @0xc10200c5: OOB, bytes not captured
>>    151   5B @0xc10200dc: OOB, bytes not captured
>>    152   5B @0xc10200e1: OOB, bytes not captured
>>    153   2B @0xc10200e6: OOB, bytes not captured
>>    154   2B @0xc10200e8: OOB, bytes not captured
>>    155   4B @0xc10200ea: OOB, bytes not captured
>>    156   2B @0xc10200ee: OOB, bytes not captured
>>    157   3B @0xc10200f2: OOB, bytes not captured
>>    158   1B @0xc10200f5: OOB, bytes not captured
>>    159   1B @0xc10200f6: OOB, bytes not captured
>>    160   1B @0xc10200f7: OOB, bytes not captured
>>    161   1B @0xc10200f8: OOB, bytes not captured
>>    162   1B @0xc10200f9: OOB, bytes not captured
>>    163   1B @0xc10253eb: OOB, bytes not captured
>>    164   2B @0xc10253ec: OOB, bytes not captured
>>    165   2B @0xc10253ee: OOB, bytes not captured
>>    166   5B @0xc10253f0: OOB, bytes not captured
>>    167   4B @0xc10253f5: OOB, bytes not captured
>>    168   2B @0xc10253f9: OOB, bytes not captured
>>    169   4B @0xc10253fb: OOB, bytes not captured
>>    170   6B @0xc10253ff: OOB, bytes not captured
>>    171   2B @0xc1025405: OOB, bytes not captured
>>    172   8B @0xc1025407: OOB, bytes not captured
>>    173   2B @0xc102540f: OOB, bytes not captured
>>    174   5B @0xc1025411: OOB, bytes not captured
>>    175   2B @0xc1025416: OOB, bytes not captured
>>    176   5B @0xc1134182: OOB, bytes not captured
>>    177   2B @0xc1134187: OOB, bytes not captured
>>    178   5B @0xc1134189: OOB, bytes not captured
>>    179   2B @0xc1132f80: OOB, bytes not captured
>>    180   2B @0xc1132f82: OOB, bytes not captured
>>    181   5B @0xc1132f84: OOB, bytes not captured
>>    182   3B @0xc1132f89: OOB, bytes not captured
>>    183   2B @0xc1132f8c: OOB, bytes not captured
>>    184   3B @0xc1132f8e: OOB, bytes not captured
>>    185   2B @0xc1132f91: OOB, bytes not captured
>>    186   6B @0xc1132f93: OOB, bytes not captured
>>    187   2B @0xc1132f99: OOB, bytes not captured
>>    188   2B @0xc1132f9b: OOB, bytes not captured
>>    189   1B @0xc1132f33: OOB, bytes not captured
>>    190   1B @0xc1132f34: OOB, bytes not captured
>>    191   1B @0xc1132f35: OOB, bytes not captured
>>    192   5B @0xc113418e: OOB, bytes not captured
>>    193   5B @0xc8a3626a: OOB, bytes not captured
>>    194   4B @0xc8a3630d: OOB, bytes not captured
>>    195   3B @0xc8a36311: OOB, bytes not captured
>>    196   2B @0xc8a36314: OOB, bytes not captured
>>    197   6B @0xc8a36316: OOB, bytes not captured
>>    198   5B @0xc8a3626f: OOB, bytes not captured
>>    199   2B @0xc8a36274: OOB, bytes not captured
>>    200   6B @0xc8a36276: OOB, bytes not captured
>>    201   4B @0xc8a3627c: OOB, bytes not captured
>>    202   3B @0xc8a36280: OOB, bytes not captured
>>    203   3B @0xc8a36283: OOB, bytes not captured
>>    204   3B @0xc8a36286: OOB, bytes not captured
>>    205   4B @0xc8a36289: OOB, bytes not captured
>>    206   5B @0xc8a3628d: OOB, bytes not captured
>>    207   4B @0xc8a36292: OOB, bytes not captured
>>    208   2B @0xc8a36296: OOB, bytes not captured
>>    209   5B @0xc8a36298: OOB, bytes not captured
>>    210   1B @0xc8a340e1: OOB, bytes not captured
>>    211   2B @0xc8a340e2: OOB, bytes not captured
>>    212   1B @0xc8a340e4: OOB, bytes not captured
>>    213   2B @0xc8a340e5: OOB, bytes not captured
>>    214   1B @0xc8a340e7: OOB, bytes not captured
>>    215   2B @0xc8a340e8: OOB, bytes not captured
>>    216   2B @0xc8a340ea: OOB, bytes not captured
>>    217   5B @0xc8a340f7: OOB, bytes not captured
>>    218   2B @0xc8a340fc: OOB, bytes not captured
>>    219   2B @0xc8a340fe: OOB, bytes not captured
>>    220   2B @0xc8a34100: OOB, bytes not captured
>>    221   6B @0xc8a34102: OOB, bytes not captured
>>    222   2B @0xc8a34108: OOB, bytes not captured
>>    223   5B @0xc8a3410a: OOB, bytes not captured
>>    224   2B @0xc8a3410f: OOB, bytes not captured
>>    225   5B @0xc8a34111: OOB, bytes not captured
>>    226   3B @0xc8a34077: OOB, bytes not captured
>>    227   2B @0xc8a3407a: OOB, bytes not captured
>>    228   6B @0xc8a34116: OOB, bytes not captured
>>    229   2B @0xc8a3411c: OOB, bytes not captured
>>    230   3B @0xc8a3411e: OOB, bytes not captured
>>    231   5B @0xc8a34121: OOB, bytes not captured
>>    232   1B @0xc8a34126: OOB, bytes not captured
>>    233   1B @0xc8a34127: OOB, bytes not captured
>>    234   1B @0xc8a34128: OOB, bytes not captured
>>    235   1B @0xc8a34129: OOB, bytes not captured
>>    236   2B @0xc8a3629d: OOB, bytes not captured
>>    237   5B @0xc8a3629f: OOB, bytes not captured
>>    238   1B @0xc8a37f85: OOB, bytes not captured
>>    239   2B @0xc8a37f86: OOB, bytes not captured
>>    240   2B @0xc8a37f88: OOB, bytes not captured
>>    241   2B @0xc8a37f8a: OOB, bytes not captured
>>    242   5B @0xc8a37f97: OOB, bytes not captured
>>    243   2B @0xc8a37f9c: OOB, bytes not captured
>>    244   2B @0xc8a37f9e: OOB, bytes not captured
>>    245   2B @0xc8a37fa0: OOB, bytes not captured
>>    246   3B @0xc8a37fa2: OOB, bytes not captured
>>    247   2B @0xc8a37fa5: OOB, bytes not captured
>>    248   2B @0xc8a37fa7: OOB, bytes not captured
>>    249   1B @0xc8a37fad: OOB, bytes not captured
>>    250   2B @0xc8a37fae: OOB, bytes not captured
>>    251   3B @0xc8a37fb0: OOB, bytes not captured
>>    252   2B @0xc8a37fb3: OOB, bytes not captured
>>    253   4B @0xc8a37fb5: OOB, bytes not captured
>>    254   2B @0xc8a37fb9: OOB, bytes not captured
>>    255   2B @0xc8a37fbb: OOB, bytes not captured
>>    256   5B @0xc8a37fbd: OOB, bytes not captured
>>    257   2B @0xc8a37fc2: OOB, bytes not captured
>>    258   5B @0xc8a37fc4: OOB, bytes not captured
>>    259   3B @0xc8a37fc9: OOB, bytes not captured
>>    260   5B @0xc8a37fcc: OOB, bytes not captured
>>    261   1B @0xc8a37fd1: OOB, bytes not captured
>>    262   1B @0xc8a37fd2: OOB, bytes not captured
>>    263   2B @0xc8a362a4: OOB, bytes not captured
>>    264   5B @0xc8a362a6: OOB, bytes not captured
>>    265   3B @0xc8a362ab: OOB, bytes not captured
>>    266   2B @0xc8a362ae: OOB, bytes not captured
>>    267   2B @0xc8a362b0: OOB, bytes not captured
>>    268   2B @0xc8a362b6: OOB, bytes not captured
>>    269   5B @0xc8a362b8: OOB, bytes not captured
>>    270   2B @0xc10cd7d5: OOB, bytes not captured
>>    271   3B @0xc10cd7d7: OOB, bytes not captured
>>    272   3B @0xc10cd7da: OOB, bytes not captured
>>    273   2B @0xc10cd7dd: OOB, bytes not captured
>>    274   5B @0xc10cd7e3: OOB, bytes not captured
>>    275   5B @0xc10cd7e8: OOB, bytes not captured
>>    276   5B @0xc10cd7ed: OOB, bytes not captured
>>    277   7B @0xc10cd7f2: OOB, bytes not captured
>>    278   3B @0xc10cd7f9: OOB, bytes not captured
>>    279   5B @0xc10cd7fc: OOB, bytes not captured
>>    280   4B @0xc8a362bd: OOB, bytes not captured
>>    281   3B @0xc8a362c1: OOB, bytes not captured
>>    282   3B @0xc8a362c4: OOB, bytes not captured
>>    283   2B @0xc8a362c7: OOB, bytes not captured
>>    284   3B @0xc8a362c9: OOB, bytes not captured
>>    285   5B @0xc8a362cc: OOB, bytes not captured
>>    286   2B @0xc8a362d1: OOB, bytes not captured
>>    287   5B @0xc8a362d3: OOB, bytes not captured
>>    288   2B @0xc8a362d8: OOB, bytes not captured
>>    289   4B @0xc8a362de: OOB, bytes not captured
>>    290   5B @0xc8a362e2: OOB, bytes not captured
>>    291   2B @0xc8a362e7: OOB, bytes not captured
>>    292   5B @0xc8a362e9: OOB, bytes not captured
>>    293   3B @0xc8a3407c: OOB, bytes not captured
>>    294   2B @0xc8a3407f: OOB, bytes not captured
>>    295   3B @0xc8a3423c: OOB, bytes not captured
>>    296   2B @0xc8a3423f: OOB, bytes not captured
>>    297   3B @0xc8a362ee: OOB, bytes not captured
>>    298   2B @0xc8a362f1: OOB, bytes not captured
>>    299   5B @0xc8a362f3: OOB, bytes not captured
>>    300   2B @0xc8a362f8: OOB, bytes not captured
>>    301   5B @0xc8a362fa: OOB, bytes not captured
>>    302   2B @0xc8a362ff: OOB, bytes not captured
>>    303   5B @0xc8a36301: OOB, bytes not captured
>>    304   2B @0xc8a36306: OOB, bytes not captured
>>    305   2B @0xbfba3444:  0  0             add [eax], al           
>>    306   2B @0xbfba3446:  0  0             add [eax], al           
>>    307   2B @0xbfba3448:  0  0             add [eax], al           
>>    308   2B @0xbfba344a:  0  0             add [eax], al           
>>    309   2B @0xbfba344c:  0  0             add [eax], al           
>>    310   2B @0xbfba344e:  0  0             add [eax], al           
>>    311   2B @0xbfba3450:  0  0             add [eax], al           
>>    312   2B @0xbfba3452:  0  0             add [eax], al           
>>    313   2B @0xbfba3454:  0  0             add [eax], al           
>>    314   2B @0xbfba3456:  0  0             add [eax], al           
>>    315   2B @0xbfba3458:  0  0             add [eax], al           
>>    316   2B @0xbfba345a:  0  0             add [eax], al           
>>    317   2B @0xbfba345c:  0  0             add [eax], al           
>>    318   2B @0xbfba345e:  0  0             add [eax], al           
>>    319   2B @0xbfba3460:  0  0             add [eax], al           
>>    320   2B @0xbfba3462:  0  0             add [eax], al           
>>    321   2B @0xbfba3464:  0  0             add [eax], al           
>>    322   2B @0xbfba3466:  0  0             add [eax], al           
>>    323   2B @0xbfba3468:  0  0             add [eax], al           
>>    324   2B @0xbfba346a:  0  0             add [eax], al           
>>    325   2B @0xbfba346c:  0  0             add [eax], al           
>>    326   2B @0xbfba346e:  0  0             add [eax], al           
>>    327   2B @0xbfba3470:  0  0             add [eax], al           
>>    328   2B @0xbfba3472:  0  0             add [eax], al           
>>    329   2B @0xbfba3474:  0  0             add [eax], al           
>>    330   2B @0xbfba3476:  0  0             add [eax], al           
>>    331   2B @0xbfba3478:  0  0             add [eax], al           
>>    332   2B @0xbfba347a:  0  0             add [eax], al           
>>    333   2B @0xbfba347c:  0  0             add [eax], al           
>>    334   2B @0xbfba347e:  0  0             add [eax], al           
>>    335   2B @0xbfba3480:  0  0             add [eax], al           
>>    336   2B @0xbfba3482:  0  0             add [eax], al           
>>    337   2B @0xbfba3484:  0  0             add [eax], al           
>>    338   2B @0xbfba3486:  0  0             add [eax], al           
>>    339   2B @0xbfba3488:  0  0             add [eax], al           
>>    340   2B @0xbfba348a:  0  0             add [eax], al           
>>    341   2B @0xbfba348c:  0  0             add [eax], al           
>>    342   4B @0xc8a3631c: OOB, bytes not captured
>>    343   5B @0xc8a36320: OOB, bytes not captured
>>    344   2B @0xc8a36325: OOB, bytes not captured
>>    345   4B @0xc8a36376: OOB, bytes not captured
>>    346   3B @0xc8a3637a: OOB, bytes not captured
>>    347   2B @0xc8a3637d: OOB, bytes not captured
>>    348   2B @0xc8a3637f: OOB, bytes not captured
>>    349   3B @0xc8a3632b: OOB, bytes not captured
>>    350   2B @0xc8a3632e: OOB, bytes not captured
>>    351   3B @0xc8a36330: OOB, bytes not captured
>>    352   2B @0xc8a36333: OOB, bytes not captured
>>    353   5B @0xc8a3633e: OOB, bytes not captured
>>    354   2B @0xc8a36343: OOB, bytes not captured
>>    355   2B @0xc8a36345: OOB, bytes not captured
>>    356   4B @0xc8a36347: OOB, bytes not captured
>>    357   3B @0xc8a3634b: OOB, bytes not captured
>>    358   3B @0xc8a3634e: OOB, bytes not captured
>>    359   4B @0xc8a36351: OOB, bytes not captured
>>    360   3B @0xc8a36355: OOB, bytes not captured
>>    361   5B @0xc8a36358: OOB, bytes not captured
>>    362   4B @0xc8a3635d: OOB, bytes not captured
>>    363   2B @0xc8a36361: OOB, bytes not captured
>>    364   5B @0xc8a36363: OOB, bytes not captured
>>    365   3B @0xc8a34081: OOB, bytes not captured
>>    366   2B @0xc8a34084: OOB, bytes not captured
>>    367   2B @0xc8a36368: OOB, bytes not captured
>>    368   5B @0xc8a3636a: OOB, bytes not captured
>>    369   2B @0xc8a3636f: OOB, bytes not captured
>>    370   5B @0xc8a36371: OOB, bytes not captured
>>    371   5B @0xc8a36381: OOB, bytes not captured
>>    372   2B @0xc8a36386: OOB, bytes not captured
>>    373   4B @0xc8a36395: OOB, bytes not captured
>>    374   3B @0xc8a36399: OOB, bytes not captured
>>    375   6B @0xc8a3639c: OOB, bytes not captured
>>    376   2B @0xc8a363a2: OOB, bytes not captured
>>    377   5B @0xc8a363a4: OOB, bytes not captured
>>    378   2B @0xc113928a: OOB, bytes not captured
>>    379   5B @0xc113928c: OOB, bytes not captured
>>    380   1B @0xc113917d: OOB, bytes not captured
>>    381   3B @0xc113917e: OOB, bytes not captured
>>    382   2B @0xc1139181: OOB, bytes not captured
>>    383   6B @0xc1139183: OOB, bytes not captured
>>    384   2B @0xc1139189: OOB, bytes not captured
>>    385   2B @0xc113918b: OOB, bytes not captured
>>    386   7B @0xc113918d: OOB, bytes not captured
>>    387   5B @0xc1139194: OOB, bytes not captured
>>    388   3B @0xc1139199: OOB, bytes not captured
>>    389   2B @0xc113919c: OOB, bytes not captured
>>    390   2B @0xc113919e: OOB, bytes not captured
>>    391   2B @0xc11391a0: OOB, bytes not captured
>>    392   1B @0xc11391a2: OOB, bytes not captured
>>    393   4B @0xc11391a3: OOB, bytes not captured
>>    394   8B @0xc11391a7: OOB, bytes not captured
>>    395   2B @0xc11391af: OOB, bytes not captured
>>    396   2B @0xc11391b1: OOB, bytes not captured
>>    397   2B @0xc11391b3: OOB, bytes not captured
>>    398   3B @0xc11391c3: OOB, bytes not captured
>>    399   2B @0xc11391c6: OOB, bytes not captured
>>    400   2B @0xc11391cc: OOB, bytes not captured
>>    401   1B @0xc11391ce: OOB, bytes not captured
>>    402   1B @0xc11391cf: OOB, bytes not captured
>>    403   2B @0xc1139291: OOB, bytes not captured
>>    404   2B @0xc1139293: OOB, bytes not captured
>>    405   6B @0xc1139295: OOB, bytes not captured
>>    406   2B @0xc113929b: OOB, bytes not captured
>>    407   2B @0xc113929d: OOB, bytes not captured
>>    408   2B @0xc113929f: OOB, bytes not captured
>>    409   4B @0xc11392a1: OOB, bytes not captured
>>    410   3B @0xc11392a5: OOB, bytes not captured
>>    411   2B @0xc11392a8: OOB, bytes not captured
>>    412   2B @0xbfba348e:  0  0             add [eax], al           
>>    413   2B @0xbfba3490:  0  0             add [eax], al           
>>    414   2B @0xbfba3492:  0  0             add [eax], al           
>>    415   2B @0xbfba3494:  0  0             add [eax], al           
>>    416   2B @0xbfba3496:  0  0             add [eax], al           
>>    417   2B @0xbfba3498:  0  0             add [eax], al           
>>    418   2B @0xbfba349a:  0  0             add [eax], al           
>>    419   2B @0xbfba349c:  0  0             add [eax], al           
>>    420   2B @0xbfba349e:  0  0             add [eax], al           
>>    421   2B @0xbfba34a0:  0  0             add [eax], al           
>>    422   2B @0xbfba34a2:  0  0             add [eax], al           
>>    423   2B @0xbfba34a4:  0  0             add [eax], al           
>>    424   2B @0xbfba34a6:  0  0             add [eax], al           
>>    425   2B @0xbfba34a8:  0  0             add [eax], al           
>>    426   2B @0xbfba34aa:  0  0             add [eax], al           
>>    427   2B @0xbfba34ac:  0  0             add [eax], al           
>>    428   2B @0xbfba34ae:  0  0             add [eax], al           
>>    429   2B @0xbfba34b0:  0  0             add [eax], al           
>>    430   2B @0xbfba34b2:  0  0             add [eax], al           
>>    431   2B @0xbfba34b4:  0  0             add [eax], al           
>>    432   2B @0xbfba34b6:  0  0             add [eax], al           
>>    433   2B @0xbfba34b8:  0  0             add [eax], al           
>>    434   2B @0xbfba34ba:  0  0             add [eax], al           
>>    435   2B @0xbfba34bc:  0  0             add [eax], al           
>>    436   2B @0xbfba34be:  0  0             add [eax], al           
>>    437   2B @0xbfba34c0:  0  0             add [eax], al           
>>    438   2B @0xbfba34c2:  0  0             add [eax], al           
>>    439   2B @0xbfba34c4:  0  0             add [eax], al           
>>    440   2B @0xbfba34c6:  0  0             add [eax], al           
>>    441   2B @0xbfba34c8:  0  0             add [eax], al           
>>    442   2B @0xbfba34ca:  0  0             add [eax], al           
>>    443   2B @0xbfba34cc:  0  0             add [eax], al           
>>    444   2B @0xbfba34ce:  0  0             add [eax], al           
>>    445   2B @0xbfba34d0:  0  0             add [eax], al           
>>    446   2B @0xbfba34d2:  0  0             add [eax], al           
>>    447   2B @0xbfba34d4:  0  0             add [eax], al           
>>    448   2B @0xbfba34d6:  0  0             add [eax], al           
>>    449   2B @0xbfba34d8:  0  0             add [eax], al           
>>    450   2B @0xbfba34da:  0  0             add [eax], al           
>>    451   2B @0xbfba34dc:  0  0             add [eax], al           
>>    452   2B @0xbfba34de:  0  0             add [eax], al           
>>    453   2B @0xbfba34e0:  0  0             add [eax], al           
>>    454   2B @0xbfba34e2:  0  0             add [eax], al           
>>    455   2B @0xbfba34e4:  0  0             add [eax], al           
>>    456   2B @0xbfba34e6:  0  0             add [eax], al           
>>    457   2B @0xbfba34e8:  0  0             add [eax], al           
>>    458   2B @0xbfba34ea:  0  0             add [eax], al           
>>    459   2B @0xbfba34ec:  0  0             add [eax], al           
>>    460   2B @0xbfba34ee:  0  0             add [eax], al           
>>    461   2B @0xbfba34f0:  0  0             add [eax], al           
>>    462   2B @0xbfba34f2:  0  0             add [eax], al           
>>    463   2B @0xbfba34f4:  0  0             add [eax], al           
>>    464   2B @0xbfba34f6:  0  0             add [eax], al           
>>    465   2B @0xbfba34f8:  0  0             add [eax], al           
>>    466   2B @0xbfba34fa:  0  0             add [eax], al           
>>    467   2B @0xbfba34fc:  0  0             add [eax], al           
>>    468   2B @0xbfba34fe:  0  0             add [eax], al           
>>    469   2B @0xbfba3500:  0  0             add [eax], al           
>>    470   2B @0xbfba3502:  0  0             add [eax], al           
>>    471   2B @0xbfba3504:  0  0             add [eax], al           
>>    472   2B @0xbfba3506:  0  0             add [eax], al           
>>    473   2B @0xbfba3508:  0  0             add [eax], al           
>>    474   2B @0xbfba350a:  0  0             add [eax], al           
>>    475   2B @0xbfba350c:  0  0             add [eax], al           
>>    476   2B @0xbfba350e:  0  0             add [eax], al           
>>    477   2B @0xbfba3510:  0  0             add [eax], al           
>>    478   2B @0xbfba3512:  0  0             add [eax], al           
>>    479   2B @0xbfba3514:  0  0             add [eax], al           
>>    480   2B @0xbfba3516:  0  0             add [eax], al           
>>    481   2B @0xbfba3518:  0  0             add [eax], al           
>>    482   2B @0xbfba351a:  0  0             add [eax], al           
>>    483   2B @0xbfba351c:  0  0             add [eax], al           
>>    484   2B @0xbfba351e:  0  0             add [eax], al           
>>    485   2B @0xbfba3520:  0  0             add [eax], al           
>>    486   2B @0xbfba3522:  0  0             add [eax], al           
>>    487   2B @0xbfba3524:  0  0             add [eax], al           
>>    488   2B @0xbfba3526:  0  0             add [eax], al           
>>    489   2B @0xbfba3528:  0  0             add [eax], al           
>>    490   2B @0xbfba352a:  0  0             add [eax], al           
>>    491   2B @0xbfba352c:  0  0             add [eax], al           
>>    492   2B @0xbfba352e:  0  0             add [eax], al           
>>    493   2B @0xbfba3530:  0  0             add [eax], al           
>>    494   2B @0xbfba3532:  0  0             add [eax], al           
>>    495   2B @0xbfba3534:  0  0             add [eax], al           
>>    496   2B @0xbfba3536:  0  0             add [eax], al           
>>    497   2B @0xbfba3538:  0  0             add [eax], al           
>>    498   2B @0xbfba353a:  0  0             add [eax], al           
>>    499   2B @0xbfba353c:  0  0             add [eax], al           
>>    500   2B @0xbfba353e:  0  0             add [eax], al           
>>    501   2B @0xbfba3540:  0  0             add [eax], al           
>>    502   2B @0xbfba3542:  0  0             add [eax], al           
>>    503   2B @0xbfba3544:  0  0             add [eax], al           
>>    504   2B @0xbfba3546:  0  0             add [eax], al           
>>    505   2B @0xbfba3548:  0  0             add [eax], al           
>>    506   2B @0xbfba354a:  0  0             add [eax], al           
>>    507   2B @0xbfba354c:  0  0             add [eax], al           
>>    508   2B @0xbfba354e:  0  0             add [eax], al           
>>    509   2B @0xbfba3550:  0  0             add [eax], al           
>>    510   2B @0xbfba3552:  0  0             add [eax], al           
>>    511   2B @0xbfba3554:  0  0             add [eax], al           
>>    512   2B @0xbfba3556:  0  0             add [eax], al           
>>    513   2B @0xbfba3558:  0  0             add [eax], al           
>>    514   2B @0xbfba355a:  0  0             add [eax], al           
>>    515   2B @0xbfba355c:  0  0             add [eax], al           
>>    516   2B @0xbfba355e:  0  0             add [eax], al           
>>    517   2B @0xbfba3560:  0  0             add [eax], al           
>>    518   2B @0xbfba3562:  0  0             add [eax], al           
>>    519   2B @0xbfba3564:  0  0             add [eax], al           
>>    520   2B @0xbfba3566:  0  0             add [eax], al           
>>    521   2B @0xbfba3568:  0  0             add [eax], al           
>>    522   2B @0xbfba356a:  0  0             add [eax], al           
>>    523   2B @0xbfba356c:  0  0             add [eax], al           
>>    524   2B @0xbfba356e:  0  0             add [eax], al           
>>    525   2B @0xbfba3570:  0  0             add [eax], al           
>>    526   2B @0xbfba3572:  0  0             add [eax], al           
>>    527   2B @0xbfba3574:  0  0             add [eax], al           
>>    528   2B @0xbfba3576:  0  0             add [eax], al           
>>    529   2B @0xbfba3578:  0  0             add [eax], al           
>>    530   2B @0xbfba357a:  0  0             add [eax], al           
>>    531   2B @0xbfba357c:  0  0             add [eax], al           
>>    532   2B @0xbfba357e:  0  0             add [eax], al           
>>    533   2B @0xbfba3580: eb 13             jmp 0x15                
>>    534   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    535   1B @0xbfba3582: 59                pop ecx                 
>>    536   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    537   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    538   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    539   1B @0xbfba3589: 43                inc ebx                 
>>    540   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    541   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    542   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (411/416) = 0.987981
>>    Mem_map start_addr: 0xbfba33fa, length: 1024B, exec'ed bytes: 411, range: 416B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33f0                       0000 00000000            ......
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

90 [State 123] Terminating state 123 with message 'EIP reached, success'
90 [State 123] Switching from state 123 to state 0
Copied 34928 (count=1)
Deleting state 123 0x0x224c17e0
Firing timer event
90 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 122
>> fuzzInit: datum forking for value 123
>> fuzzInit: datum forking for value 123
90 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 123)
        (ReadLSB w32 0 v123_fuzz_symb_123)))
    state 124 with condition (Not (Eq false
         (Eq (w32 123)
             (ReadLSB w32 0 v123_fuzz_symb_123))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-123-8048a0e
Size=2 Low=0 splitIndex=1 high=1
90 [State 0] Switching from state 0 to state 124
Copied 34928 (count=1)
Finalizing TB execution 124
s2e_dummyMainFunction
tcg-llvm-tb-123-8048a0e
90 [State 124] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 123 not yet applied), shell_len: 1024, eip: 0x00000000

90 [State 124] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
90 [State 124] Leaving buffer range @0xc126f278, c9 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
91 [State 124] Killing state 124
91 [State 124] Terminating state 124 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
91 [State 124] Switching from state 124 to state 0
Copied 34928 (count=1)
Deleting state 124 0x0x224c17e0
Firing timer event
91 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 123
>> fuzzInit: datum forking for value 124
>> fuzzInit: datum forking for value 124
91 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 124)
        (ReadLSB w32 0 v124_fuzz_symb_124)))
    state 125 with condition (Not (Eq false
         (Eq (w32 124)
             (ReadLSB w32 0 v124_fuzz_symb_124))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-124-8048a0e
Size=2 Low=0 splitIndex=1 high=1
91 [State 0] Switching from state 0 to state 125
Copied 34928 (count=1)
Finalizing TB execution 125
s2e_dummyMainFunction
tcg-llvm-tb-124-8048a0e
91 [State 125] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 124 not yet applied), shell_len: 1024, eip: 0x00000000

91 [State 125] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 204 instructions, PCs: bfba33fc bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
91 [State 125] Terminating state 125 with message 'eliminated this false positive, execution path subset of another success'
91 [State 125] Switching from state 125 to state 0
Copied 34928 (count=1)
Deleting state 125 0x0x224c17e0
Firing timer event
92 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 124
>> fuzzInit: datum forking for value 125
>> fuzzInit: datum forking for value 125
92 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 125)
        (ReadLSB w32 0 v125_fuzz_symb_125)))
    state 126 with condition (Not (Eq false
         (Eq (w32 125)
             (ReadLSB w32 0 v125_fuzz_symb_125))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-125-8048a0e
Size=2 Low=0 splitIndex=1 high=1
92 [State 0] Switching from state 0 to state 126
Copied 34928 (count=1)
Finalizing TB execution 126
s2e_dummyMainFunction
tcg-llvm-tb-125-8048a0e
92 [State 126] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 125 not yet applied), shell_len: 1024, eip: 0x00000000

92 [State 126] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
92 [State 126] Leaving buffer range @0xc126f278, c8 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
92 [State 126] Killing state 126
92 [State 126] Terminating state 126 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
92 [State 126] Switching from state 126 to state 0
Copied 34928 (count=1)
Deleting state 126 0x0x224c17e0
93 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 125
>> fuzzInit: datum forking for value 126
>> fuzzInit: datum forking for value 126
93 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 126)
        (ReadLSB w32 0 v126_fuzz_symb_126)))
    state 127 with condition (Not (Eq false
         (Eq (w32 126)
             (ReadLSB w32 0 v126_fuzz_symb_126))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-126-8048a0e
Size=2 Low=0 splitIndex=1 high=1
93 [State 0] Switching from state 0 to state 127
Copied 34928 (count=1)
Finalizing TB execution 127
s2e_dummyMainFunction
tcg-llvm-tb-126-8048a0e
Firing timer event
93 [State 127] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 126 not yet applied), shell_len: 1024, eip: 0x00000000

93 [State 127] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 203 instructions, PCs: bfba33fe bfba3400 bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
93 [State 127] Terminating state 127 with message 'eliminated this false positive, execution path subset of another success'
93 [State 127] Switching from state 127 to state 0
Copied 34928 (count=1)
Deleting state 127 0x0x22b91f70
93 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 126
>> fuzzInit: datum forking for value 127
>> fuzzInit: datum forking for value 127
93 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 127)
        (ReadLSB w32 0 v127_fuzz_symb_127)))
    state 128 with condition (Not (Eq false
         (Eq (w32 127)
             (ReadLSB w32 0 v127_fuzz_symb_127))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-127-8048a0e
Size=2 Low=0 splitIndex=1 high=1
93 [State 0] Switching from state 0 to state 128
Copied 34928 (count=1)
Finalizing TB execution 128
s2e_dummyMainFunction
tcg-llvm-tb-127-8048a0e
Firing timer event
94 [State 128] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 127 not yet applied), shell_len: 1024, eip: 0x00000000

94 [State 128] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
94 [State 128] Leaving buffer range @0xc126f278, c7 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
94 [State 128] Killing state 128
94 [State 128] Terminating state 128 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
94 [State 128] Switching from state 128 to state 0
Copied 34928 (count=1)
Deleting state 128 0x0x22b91f70
94 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 127
>> fuzzInit: datum forking for value 128
>> fuzzInit: datum forking for value 128
94 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 128)
        (ReadLSB w32 0 v128_fuzz_symb_128)))
    state 129 with condition (Not (Eq false
         (Eq (w32 128)
             (ReadLSB w32 0 v128_fuzz_symb_128))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-128-8048a0e
Size=2 Low=0 splitIndex=1 high=1
94 [State 0] Switching from state 0 to state 129
Copied 34928 (count=1)
Finalizing TB execution 129
s2e_dummyMainFunction
tcg-llvm-tb-128-8048a0e
95 [State 129] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 128 not yet applied), shell_len: 1024, eip: 0x00000000

95 [State 129] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
95 [State 129] Leaving buffer range @0xc8a35e91, 25 IoB insns; prev insn @0xbfba3448
  1   2B @0xbfba3448:  0  0             add [eax], al           
95 [State 129] Entering buffer range @0xbfba344a, 336 OoB insns
95 [State 129] Leaving buffer range @0xc1129e92, 94 IoB insns; prev insn @0xbfba3570
  1   2B @0xbfba3570:  0  0             add [eax], al           
95 [State 129] Entering buffer range @0xbfba3572, 10 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 548. This is the 6th success
>> Success densities, overlay: 0.987805; avg: 0.987805
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3400:  0  0             add [eax], al           
>>      2   2B @0xbfba3402:  0  0             add [eax], al           
>>      3   2B @0xbfba3404:  0  0             add [eax], al           
>>      4   2B @0xbfba3406:  0  0             add [eax], al           
>>      5   2B @0xbfba3408:  0  0             add [eax], al           
>>      6   2B @0xbfba340a:  0  0             add [eax], al           
>>      7   2B @0xbfba340c:  0  0             add [eax], al           
>>      8   2B @0xbfba340e:  0  0             add [eax], al           
>>      9   2B @0xbfba3410:  0  0             add [eax], al           
>>     10   2B @0xbfba3412:  0  0             add [eax], al           
>>     11   2B @0xbfba3414:  0  0             add [eax], al           
>>     12   2B @0xbfba3416:  0  0             add [eax], al           
>>     13   2B @0xbfba3418:  0  0             add [eax], al           
>>     14   2B @0xbfba341a:  0  0             add [eax], al           
>>     15   2B @0xbfba341c:  0  0             add [eax], al           
>>     16   2B @0xbfba341e:  0  0             add [eax], al           
>>     17   2B @0xbfba3420:  0  0             add [eax], al           
>>     18   2B @0xbfba3422:  0  0             add [eax], al           
>>     19   2B @0xbfba3424:  0  0             add [eax], al           
>>     20   2B @0xbfba3426:  0  0             add [eax], al           
>>     21   2B @0xbfba3428:  0  0             add [eax], al           
>>     22   2B @0xbfba342a:  0  0             add [eax], al           
>>     23   2B @0xbfba342c:  0  0             add [eax], al           
>>     24   2B @0xbfba342e:  0  0             add [eax], al           
>>     25   2B @0xbfba3430:  0  0             add [eax], al           
>>     26   2B @0xbfba3432:  0  0             add [eax], al           
>>     27   2B @0xbfba3434:  0  0             add [eax], al           
>>     28   2B @0xbfba3436:  0  0             add [eax], al           
>>     29   2B @0xbfba3438:  0  0             add [eax], al           
>>     30   2B @0xbfba343a:  0  0             add [eax], al           
>>     31   2B @0xbfba343c:  0  0             add [eax], al           
>>     32   2B @0xbfba343e:  0  0             add [eax], al           
>>     33   2B @0xbfba3440:  0  0             add [eax], al           
>>     34   2B @0xbfba3442:  0  0             add [eax], al           
>>     35   2B @0xbfba3444:  0  0             add [eax], al           
>>     36   2B @0xbfba3446:  0  0             add [eax], al           
>>     37   2B @0xbfba3448:  0  0             add [eax], al           
>>     38   5B @0xc8a35e91: OOB, bytes not captured
>>     39   4B @0xc8a35f3d: OOB, bytes not captured
>>     40   5B @0xc8a35f41: OOB, bytes not captured
>>     41   2B @0xc8a35f46: OOB, bytes not captured
>>     42   4B @0xc8a35f9c: OOB, bytes not captured
>>     43   3B @0xc8a35fa0: OOB, bytes not captured
>>     44   2B @0xc8a35fa3: OOB, bytes not captured
>>     45   6B @0xc8a35fa5: OOB, bytes not captured
>>     46   3B @0xc8a35e96: OOB, bytes not captured
>>     47   2B @0xc8a35e99: OOB, bytes not captured
>>     48   3B @0xc8a35e9b: OOB, bytes not captured
>>     49   4B @0xc8a35e9e: OOB, bytes not captured
>>     50   3B @0xc8a35ea2: OOB, bytes not captured
>>     51   2B @0xc8a35ea5: OOB, bytes not captured
>>     52   4B @0xc8a35ea7: OOB, bytes not captured
>>     53   2B @0xc8a35eab: OOB, bytes not captured
>>     54   2B @0xc8a35ead: OOB, bytes not captured
>>     55   5B @0xc8a35eaf: OOB, bytes not captured
>>     56   1B @0xc8a35994: OOB, bytes not captured
>>     57   2B @0xc8a35995: OOB, bytes not captured
>>     58   5B @0xc8a35997: OOB, bytes not captured
>>     59   3B @0xc8a3599c: OOB, bytes not captured
>>     60   2B @0xc8a3599f: OOB, bytes not captured
>>     61   2B @0xc8a359a8: OOB, bytes not captured
>>     62   1B @0xc8a359aa: OOB, bytes not captured
>>     63   5B @0xc8a359ab: OOB, bytes not captured
>>     64   3B @0xc10ceb9e: OOB, bytes not captured
>>     65   2B @0xc10ceba1: OOB, bytes not captured
>>     66   5B @0xc10ceba3: OOB, bytes not captured
>>     67   5B @0xc10ceba8: OOB, bytes not captured
>>     68   2B @0xc10cebad: OOB, bytes not captured
>>     69   5B @0xc10cebaf: OOB, bytes not captured
>>     70   1B @0xc126e4fe: OOB, bytes not captured
>>     71   5B @0xc126e4ff: OOB, bytes not captured
>>     72   1B @0xc126e504: OOB, bytes not captured
>>     73   1B @0xc126e505: OOB, bytes not captured
>>     74   1B @0xc126e506: OOB, bytes not captured
>>     75   3B @0xc126e507: OOB, bytes not captured
>>     76   6B @0xc126e50a: OOB, bytes not captured
>>     77   4B @0xc126e510: OOB, bytes not captured
>>     78   5B @0xc126e514: OOB, bytes not captured
>>     79   3B @0xc126e519: OOB, bytes not captured
>>     80   3B @0xc126e51c: OOB, bytes not captured
>>     81   4B @0xc126e51f: OOB, bytes not captured
>>     82   3B @0xc126e523: OOB, bytes not captured
>>     83   5B @0xc126e526: OOB, bytes not captured
>>     84   4B @0xc126e52b: OOB, bytes not captured
>>     85   3B @0xc126e52f: OOB, bytes not captured
>>     86   6B @0xc126e532: OOB, bytes not captured
>>     87   3B @0xc126e538: OOB, bytes not captured
>>     88   2B @0xc126e53b: OOB, bytes not captured
>>     89   6B @0xc126e53d: OOB, bytes not captured
>>     90   6B @0xc126e543: OOB, bytes not captured
>>     91   6B @0xc126e549: OOB, bytes not captured
>>     92   6B @0xc126e54f: OOB, bytes not captured
>>     93   7B @0xc126e555: OOB, bytes not captured
>>     94   2B @0xc126e55c: OOB, bytes not captured
>>     95   2B @0xc126e55e: OOB, bytes not captured
>>     96   2B @0xc126e560: OOB, bytes not captured
>>     97   2B @0xc126e562: OOB, bytes not captured
>>     98   3B @0xc126e564: OOB, bytes not captured
>>     99   2B @0xc126e567: OOB, bytes not captured
>>    100   3B @0xc126e569: OOB, bytes not captured
>>    101   4B @0xc126e56c: OOB, bytes not captured
>>    102   4B @0xc126e570: OOB, bytes not captured
>>    103   2B @0xc126e574: OOB, bytes not captured
>>    104   2B @0xc126e576: OOB, bytes not captured
>>    105   2B @0xc126e578: OOB, bytes not captured
>>    106   2B @0xc126e578: OOB, bytes not captured
>>    107   4B @0xc126e57a: OOB, bytes not captured
>>    108   4B @0xc126e57e: OOB, bytes not captured
>>    109   4B @0xc126e582: OOB, bytes not captured
>>    110   4B @0xc126e586: OOB, bytes not captured
>>    111   4B @0xc126e58a: OOB, bytes not captured
>>    112   4B @0xc126e58e: OOB, bytes not captured
>>    113   4B @0xc126e592: OOB, bytes not captured
>>    114   8B @0xc126e596: OOB, bytes not captured
>>    115   4B @0xc126e59e: OOB, bytes not captured
>>    116   4B @0xc126e5a2: OOB, bytes not captured
>>    117   4B @0xc126e5a6: OOB, bytes not captured
>>    118   4B @0xc126e5aa: OOB, bytes not captured
>>    119   5B @0xc126e5ae: OOB, bytes not captured
>>    120   1B @0xc126e4a6: OOB, bytes not captured
>>    121   2B @0xc126e4a7: OOB, bytes not captured
>>    122   1B @0xc126e4a9: OOB, bytes not captured
>>    123   1B @0xc126e4aa: OOB, bytes not captured
>>    124   2B @0xc126e4ab: OOB, bytes not captured
>>    125   1B @0xc126e4ad: OOB, bytes not captured
>>    126   3B @0xc126e4ae: OOB, bytes not captured
>>    127   3B @0xc126e4b1: OOB, bytes not captured
>>    128   3B @0xc126e4b4: OOB, bytes not captured
>>    129   4B @0xc126e4b7: OOB, bytes not captured
>>    130   2B @0xc126e4bb: OOB, bytes not captured
>>    131   2B @0xc126e4bd: OOB, bytes not captured
>>    132   5B @0xc126e4bf: OOB, bytes not captured
>>    133   2B @0xc126e4c4: OOB, bytes not captured
>>    134   3B @0xc126e4c6: OOB, bytes not captured
>>    135   3B @0xc126e4c9: OOB, bytes not captured
>>    136   2B @0xc126e4cc: OOB, bytes not captured
>>    137   2B @0xc126e4ce: OOB, bytes not captured
>>    138   2B @0xc126e4d0: OOB, bytes not captured
>>    139   2B @0xc126e4d2: OOB, bytes not captured
>>    140   2B @0xc126e4d4: OOB, bytes not captured
>>    141   3B @0xc126e4d6: OOB, bytes not captured
>>    142   3B @0xc10cec0e: OOB, bytes not captured
>>    143   2B @0xc10cec11: OOB, bytes not captured
>>    144   3B @0xc10cec13: OOB, bytes not captured
>>    145   2B @0xc10cec16: OOB, bytes not captured
>>    146   2B @0xc10cec18: OOB, bytes not captured
>>    147   3B @0xc10cec1a: OOB, bytes not captured
>>    148   6B @0xc10cec1d: OOB, bytes not captured
>>    149   2B @0xc10cec23: OOB, bytes not captured
>>    150   2B @0xc10cec25: OOB, bytes not captured
>>    151   3B @0xc10cec27: OOB, bytes not captured
>>    152   2B @0xc10cec2a: OOB, bytes not captured
>>    153   2B @0xc10cec2c: OOB, bytes not captured
>>    154   3B @0xc10cec2e: OOB, bytes not captured
>>    155   2B @0xc10cec31: OOB, bytes not captured
>>    156   2B @0xc10cec33: OOB, bytes not captured
>>    157   2B @0xc10cec35: OOB, bytes not captured
>>    158   2B @0xc10cec37: OOB, bytes not captured
>>    159   3B @0xc112340f: OOB, bytes not captured
>>    160   5B @0xc1123412: OOB, bytes not captured
>>    161   1B @0xc11233de: OOB, bytes not captured
>>    162   2B @0xc11233df: OOB, bytes not captured
>>    163   1B @0xc11233e1: OOB, bytes not captured
>>    164   4B @0xc11233e2: OOB, bytes not captured
>>    165   2B @0xc11233e6: OOB, bytes not captured
>>    166   7B @0xc11233e8: OOB, bytes not captured
>>    167   2B @0xc11233ef: OOB, bytes not captured
>>    168   2B @0xc1123407: OOB, bytes not captured
>>    169   3B @0xc1123409: OOB, bytes not captured
>>    170   3B @0xc8885795: OOB, bytes not captured
>>    171   3B @0xc8885798: OOB, bytes not captured
>>    172   3B @0xc888579b: OOB, bytes not captured
>>    173   3B @0xc888579e: OOB, bytes not captured
>>    174   3B @0xc88857a1: OOB, bytes not captured
>>    175   2B @0xc88857a4: OOB, bytes not captured
>>    176   3B @0xc88857a6: OOB, bytes not captured
>>    177   3B @0xc88857a9: OOB, bytes not captured
>>    178   3B @0xc88857ac: OOB, bytes not captured
>>    179   3B @0xc88857af: OOB, bytes not captured
>>    180   2B @0xc88857b2: OOB, bytes not captured
>>    181   6B @0xc88857b4: OOB, bytes not captured
>>    182   1B @0xc88857ba: OOB, bytes not captured
>>    183   5B @0xc88857bb: OOB, bytes not captured
>>    184   3B @0xc112cd1a: OOB, bytes not captured
>>    185   2B @0xc112cd1d: OOB, bytes not captured
>>    186   5B @0xc112cd1f: OOB, bytes not captured
>>    187   3B @0xc113e1bf: OOB, bytes not captured
>>    188   3B @0xc113e1c2: OOB, bytes not captured
>>    189   2B @0xc113e1c5: OOB, bytes not captured
>>    190   3B @0xc113e1c7: OOB, bytes not captured
>>    191   2B @0xc113e1ca: OOB, bytes not captured
>>    192   3B @0xc113e1cc: OOB, bytes not captured
>>    193   2B @0xc113e1cf: OOB, bytes not captured
>>    194   1B @0xc113e1d1: OOB, bytes not captured
>>    195   2B @0xc112cd24: OOB, bytes not captured
>>    196   2B @0xc112cd26: OOB, bytes not captured
>>    197   3B @0xc112cd28: OOB, bytes not captured
>>    198   2B @0xc112cd2b: OOB, bytes not captured
>>    199   2B @0xc112cd2d: OOB, bytes not captured
>>    200   2B @0xc112cd2f: OOB, bytes not captured
>>    201   2B @0xc10442b6: OOB, bytes not captured
>>    202   5B @0xc10442b8: OOB, bytes not captured
>>    203   3B @0xc10442bd: OOB, bytes not captured
>>    204   5B @0xc10442c0: OOB, bytes not captured
>>    205   1B @0xc10442c5: OOB, bytes not captured
>>    206   2B @0xc10442c6: OOB, bytes not captured
>>    207   5B @0xc10442c8: OOB, bytes not captured
>>    208   1B @0xc104435b: OOB, bytes not captured
>>    209   2B @0xc104435c: OOB, bytes not captured
>>    210   1B @0xc104435e: OOB, bytes not captured
>>    211   2B @0xc104435f: OOB, bytes not captured
>>    212   1B @0xc1044361: OOB, bytes not captured
>>    213   4B @0xc1044362: OOB, bytes not captured
>>    214   2B @0xc1044366: OOB, bytes not captured
>>    215   3B @0xc1044368: OOB, bytes not captured
>>    216   3B @0xc104436b: OOB, bytes not captured
>>    217   2B @0xc104436e: OOB, bytes not captured
>>    218   2B @0xc1044370: OOB, bytes not captured
>>    219   3B @0xc1044372: OOB, bytes not captured
>>    220   3B @0xc1044375: OOB, bytes not captured
>>    221   2B @0xc1044378: OOB, bytes not captured
>>    222   3B @0xc104437a: OOB, bytes not captured
>>    223   2B @0xc104437d: OOB, bytes not captured
>>    224   2B @0xc104437f: OOB, bytes not captured
>>    225   2B @0xc1044381: OOB, bytes not captured
>>    226   2B @0xc1044383: OOB, bytes not captured
>>    227   2B @0xc1044385: OOB, bytes not captured
>>    228   2B @0xc1044387: OOB, bytes not captured
>>    229   1B @0xc1044389: OOB, bytes not captured
>>    230   1B @0xc104438a: OOB, bytes not captured
>>    231   1B @0xc104438b: OOB, bytes not captured
>>    232   5B @0xc104438c: OOB, bytes not captured
>>    233   2B @0xc102d4c4: OOB, bytes not captured
>>    234   8B @0xc102d4c6: OOB, bytes not captured
>>    235   5B @0xc102d4ce: OOB, bytes not captured
>>    236   2B @0xc1044356: OOB, bytes not captured
>>    237   1B @0xc1044358: OOB, bytes not captured
>>    238   1B @0xc1044359: OOB, bytes not captured
>>    239   1B @0xc104435a: OOB, bytes not captured
>>    240   1B @0xc10442cd: OOB, bytes not captured
>>    241   1B @0xc10442ce: OOB, bytes not captured
>>    242   1B @0xc10442cf: OOB, bytes not captured
>>    243   1B @0xc10442d0: OOB, bytes not captured
>>    244   1B @0xc10442d1: OOB, bytes not captured
>>    245   3B @0xc8885755: OOB, bytes not captured
>>    246   3B @0xc8885758: OOB, bytes not captured
>>    247   3B @0xc888575b: OOB, bytes not captured
>>    248   3B @0xc888575e: OOB, bytes not captured
>>    249   3B @0xc8885761: OOB, bytes not captured
>>    250   2B @0xc8885764: OOB, bytes not captured
>>    251   3B @0xc8885766: OOB, bytes not captured
>>    252   3B @0xc8885769: OOB, bytes not captured
>>    253   3B @0xc888576c: OOB, bytes not captured
>>    254   3B @0xc888576f: OOB, bytes not captured
>>    255   6B @0xc8885772: OOB, bytes not captured
>>    256   2B @0xc8885778: OOB, bytes not captured
>>    257   1B @0xc888577a: OOB, bytes not captured
>>    258   5B @0xc888577b: OOB, bytes not captured
>>    259   1B @0xc112340c: OOB, bytes not captured
>>    260   1B @0xc112340d: OOB, bytes not captured
>>    261   1B @0xc112340e: OOB, bytes not captured
>>    262   5B @0xc10cec39: OOB, bytes not captured
>>    263   1B @0xc126dff3: OOB, bytes not captured
>>    264   5B @0xc126dff4: OOB, bytes not captured
>>    265   1B @0xc126dff9: OOB, bytes not captured
>>    266   7B @0xc126dffa: OOB, bytes not captured
>>    267   1B @0xc126e001: OOB, bytes not captured
>>    268   3B @0xc126e002: OOB, bytes not captured
>>    269   6B @0xc126e005: OOB, bytes not captured
>>    270   7B @0xc126e00b: OOB, bytes not captured
>>    271   2B @0xc126e012: OOB, bytes not captured
>>    272   6B @0xc126e014: OOB, bytes not captured
>>    273   4B @0xc126e01a: OOB, bytes not captured
>>    274   6B @0xc126e01e: OOB, bytes not captured
>>    275   7B @0xc126e024: OOB, bytes not captured
>>    276   2B @0xc126e02b: OOB, bytes not captured
>>    277   5B @0xc126e02d: OOB, bytes not captured
>>    278   6B @0xc1070d98: OOB, bytes not captured
>>    279   6B @0xc1070d9e: OOB, bytes not captured
>>    280   3B @0xc1070da4: OOB, bytes not captured
>>    281   5B @0xc1070da7: OOB, bytes not captured
>>    282   1B @0xc104b3dc: OOB, bytes not captured
>>    283   1B @0xc104b3dd: OOB, bytes not captured
>>    284   1B @0xc104b3de: OOB, bytes not captured
>>    285   1B @0xc104b3df: OOB, bytes not captured
>>    286   3B @0xc104b3e0: OOB, bytes not captured
>>    287   7B @0xc104b3e3: OOB, bytes not captured
>>    288   4B @0xc104b3ea: OOB, bytes not captured
>>    289   2B @0xc104b3ee: OOB, bytes not captured
>>    290   5B @0xc104b3ff: OOB, bytes not captured
>>    291   2B @0xc104b404: OOB, bytes not captured
>>    292   4B @0xc104b406: OOB, bytes not captured
>>    293   2B @0xc104b40a: OOB, bytes not captured
>>    294   5B @0xc104b410: OOB, bytes not captured
>>    295   4B @0xc104b415: OOB, bytes not captured
>>    296   6B @0xc104b419: OOB, bytes not captured
>>    297   2B @0xc104b41f: OOB, bytes not captured
>>    298   3B @0xc104b421: OOB, bytes not captured
>>    299   6B @0xc104b424: OOB, bytes not captured
>>    300   6B @0xc104b42a: OOB, bytes not captured
>>    301   6B @0xc104b430: OOB, bytes not captured
>>    302   2B @0xc104b436: OOB, bytes not captured
>>    303   3B @0xc104b438: OOB, bytes not captured
>>    304   3B @0xc104b43b: OOB, bytes not captured
>>    305   3B @0xc104b43e: OOB, bytes not captured
>>    306   2B @0xc104b441: OOB, bytes not captured
>>    307   5B @0xc104b443: OOB, bytes not captured
>>    308   3B @0xc104b448: OOB, bytes not captured
>>    309   2B @0xc104b44b: OOB, bytes not captured
>>    310   3B @0xc104b44d: OOB, bytes not captured
>>    311   3B @0xc104b450: OOB, bytes not captured
>>    312   2B @0xc104b453: OOB, bytes not captured
>>    313   3B @0xc104b455: OOB, bytes not captured
>>    314   6B @0xc104b458: OOB, bytes not captured
>>    315   2B @0xc104b45e: OOB, bytes not captured
>>    316   2B @0xc104b460: OOB, bytes not captured
>>    317   2B @0xc104b462: OOB, bytes not captured
>>    318   2B @0xc104b464: OOB, bytes not captured
>>    319   3B @0xc104b466: OOB, bytes not captured
>>    320   3B @0xc104b469: OOB, bytes not captured
>>    321   3B @0xc104b46c: OOB, bytes not captured
>>    322   3B @0xc104b46f: OOB, bytes not captured
>>    323   3B @0xc104b472: OOB, bytes not captured
>>    324   4B @0xc104b475: OOB, bytes not captured
>>    325   4B @0xc104b479: OOB, bytes not captured
>>    326   6B @0xc104b47d: OOB, bytes not captured
>>    327   6B @0xc104b483: OOB, bytes not captured
>>    328   4B @0xc104b489: OOB, bytes not captured
>>    329   3B @0xc104b48d: OOB, bytes not captured
>>    330   2B @0xc104b490: OOB, bytes not captured
>>    331   2B @0xc104b492: OOB, bytes not captured
>>    332   1B @0xc104b494: OOB, bytes not captured
>>    333   3B @0xc104b495: OOB, bytes not captured
>>    334   4B @0xc104b498: OOB, bytes not captured
>>    335   1B @0xc104b49c: OOB, bytes not captured
>>    336   2B @0xc104b49d: OOB, bytes not captured
>>    337   1B @0xc104b49f: OOB, bytes not captured
>>    338   4B @0xc104b4a0: OOB, bytes not captured
>>    339   5B @0xc104b4a4: OOB, bytes not captured
>>    340   1B @0xc1034364: OOB, bytes not captured
>>    341   2B @0xc1034365: OOB, bytes not captured
>>    342   4B @0xc1034367: OOB, bytes not captured
>>    343   2B @0xc103436b: OOB, bytes not captured
>>    344   4B @0xc103436d: OOB, bytes not captured
>>    345   2B @0xc1034371: OOB, bytes not captured
>>    346   3B @0xc103437c: OOB, bytes not captured
>>    347   2B @0xc103437f: OOB, bytes not captured
>>    348   2B @0xc1034381: OOB, bytes not captured
>>    349   5B @0xc1034383: OOB, bytes not captured
>>    350   2B @0xc1034388: OOB, bytes not captured
>>    351   5B @0xc1034373: OOB, bytes not captured
>>    352   3B @0xc1034378: OOB, bytes not captured
>>    353   1B @0xc103437b: OOB, bytes not captured
>>    354   3B @0xc103437c: OOB, bytes not captured
>>    355   2B @0xc103437f: OOB, bytes not captured
>>    356   2B @0xc103438a: OOB, bytes not captured
>>    357   2B @0xc1034395: OOB, bytes not captured
>>    358   2B @0xc1034397: OOB, bytes not captured
>>    359   2B @0xc1034399: OOB, bytes not captured
>>    360   3B @0xc103439b: OOB, bytes not captured
>>    361   1B @0xc103439e: OOB, bytes not captured
>>    362   1B @0xc103439f: OOB, bytes not captured
>>    363   3B @0xc104b4a9: OOB, bytes not captured
>>    364   1B @0xc104b4ac: OOB, bytes not captured
>>    365   1B @0xc104b4ad: OOB, bytes not captured
>>    366   1B @0xc104b4ae: OOB, bytes not captured
>>    367   1B @0xc104b4af: OOB, bytes not captured
>>    368   1B @0xc104b4b0: OOB, bytes not captured
>>    369   6B @0xc126e032: OOB, bytes not captured
>>    370   7B @0xc126e038: OOB, bytes not captured
>>    371   7B @0xc126e03f: OOB, bytes not captured
>>    372   7B @0xc126e046: OOB, bytes not captured
>>    373   5B @0xc126e04d: OOB, bytes not captured
>>    374   2B @0xbfba344a:  0  0             add [eax], al           
>>    375   2B @0xbfba344c:  0  0             add [eax], al           
>>    376   2B @0xbfba344e:  0  0             add [eax], al           
>>    377   2B @0xbfba3450:  0  0             add [eax], al           
>>    378   2B @0xbfba3452:  0  0             add [eax], al           
>>    379   2B @0xbfba3454:  0  0             add [eax], al           
>>    380   2B @0xbfba3456:  0  0             add [eax], al           
>>    381   2B @0xbfba3458:  0  0             add [eax], al           
>>    382   2B @0xbfba345a:  0  0             add [eax], al           
>>    383   2B @0xbfba345c:  0  0             add [eax], al           
>>    384   2B @0xbfba345e:  0  0             add [eax], al           
>>    385   2B @0xbfba3460:  0  0             add [eax], al           
>>    386   2B @0xbfba3462:  0  0             add [eax], al           
>>    387   2B @0xbfba3464:  0  0             add [eax], al           
>>    388   2B @0xbfba3466:  0  0             add [eax], al           
>>    389   2B @0xbfba3468:  0  0             add [eax], al           
>>    390   2B @0xbfba346a:  0  0             add [eax], al           
>>    391   2B @0xbfba346c:  0  0             add [eax], al           
>>    392   2B @0xbfba346e:  0  0             add [eax], al           
>>    393   2B @0xbfba3470:  0  0             add [eax], al           
>>    394   2B @0xbfba3472:  0  0             add [eax], al           
>>    395   2B @0xbfba3474:  0  0             add [eax], al           
>>    396   2B @0xbfba3476:  0  0             add [eax], al           
>>    397   2B @0xbfba3478:  0  0             add [eax], al           
>>    398   2B @0xbfba347a:  0  0             add [eax], al           
>>    399   2B @0xbfba347c:  0  0             add [eax], al           
>>    400   2B @0xbfba347e:  0  0             add [eax], al           
>>    401   2B @0xbfba3480:  0  0             add [eax], al           
>>    402   2B @0xbfba3482:  0  0             add [eax], al           
>>    403   2B @0xbfba3484:  0  0             add [eax], al           
>>    404   2B @0xbfba3486:  0  0             add [eax], al           
>>    405   2B @0xbfba3488:  0  0             add [eax], al           
>>    406   2B @0xbfba348a:  0  0             add [eax], al           
>>    407   2B @0xbfba348c:  0  0             add [eax], al           
>>    408   2B @0xbfba348e:  0  0             add [eax], al           
>>    409   2B @0xbfba3490:  0  0             add [eax], al           
>>    410   2B @0xbfba3492:  0  0             add [eax], al           
>>    411   2B @0xbfba3494:  0  0             add [eax], al           
>>    412   2B @0xbfba3496:  0  0             add [eax], al           
>>    413   2B @0xbfba3498:  0  0             add [eax], al           
>>    414   2B @0xbfba349a:  0  0             add [eax], al           
>>    415   2B @0xbfba349c:  0  0             add [eax], al           
>>    416   2B @0xbfba349e:  0  0             add [eax], al           
>>    417   2B @0xbfba34a0:  0  0             add [eax], al           
>>    418   2B @0xbfba34a2:  0  0             add [eax], al           
>>    419   2B @0xbfba34a4:  0  0             add [eax], al           
>>    420   2B @0xbfba34a6:  0  0             add [eax], al           
>>    421   2B @0xbfba34a8:  0  0             add [eax], al           
>>    422   2B @0xbfba34aa:  0  0             add [eax], al           
>>    423   2B @0xbfba34ac:  0  0             add [eax], al           
>>    424   2B @0xbfba34ae:  0  0             add [eax], al           
>>    425   2B @0xbfba34b0:  0  0             add [eax], al           
>>    426   2B @0xbfba34b2:  0  0             add [eax], al           
>>    427   2B @0xbfba34b4:  0  0             add [eax], al           
>>    428   2B @0xbfba34b6:  0  0             add [eax], al           
>>    429   2B @0xbfba34b8:  0  0             add [eax], al           
>>    430   2B @0xbfba34ba:  0  0             add [eax], al           
>>    431   2B @0xbfba34bc:  0  0             add [eax], al           
>>    432   2B @0xbfba34be:  0  0             add [eax], al           
>>    433   2B @0xbfba34c0:  0  0             add [eax], al           
>>    434   2B @0xbfba34c2:  0  0             add [eax], al           
>>    435   2B @0xbfba34c4:  0  0             add [eax], al           
>>    436   2B @0xbfba34c6:  0  0             add [eax], al           
>>    437   2B @0xbfba34c8:  0  0             add [eax], al           
>>    438   2B @0xbfba34ca:  0  0             add [eax], al           
>>    439   2B @0xbfba34cc:  0  0             add [eax], al           
>>    440   2B @0xbfba34ce:  0  0             add [eax], al           
>>    441   2B @0xbfba34d0:  0  0             add [eax], al           
>>    442   2B @0xbfba34d2:  0  0             add [eax], al           
>>    443   2B @0xbfba34d4:  0  0             add [eax], al           
>>    444   2B @0xbfba34d6:  0  0             add [eax], al           
>>    445   2B @0xbfba34d8:  0  0             add [eax], al           
>>    446   2B @0xbfba34da:  0  0             add [eax], al           
>>    447   2B @0xbfba34dc:  0  0             add [eax], al           
>>    448   2B @0xbfba34de:  0  0             add [eax], al           
>>    449   2B @0xbfba34e0:  0  0             add [eax], al           
>>    450   2B @0xbfba34e2:  0  0             add [eax], al           
>>    451   2B @0xbfba34e4:  0  0             add [eax], al           
>>    452   2B @0xbfba34e6:  0  0             add [eax], al           
>>    453   2B @0xbfba34e8:  0  0             add [eax], al           
>>    454   2B @0xbfba34ea:  0  0             add [eax], al           
>>    455   2B @0xbfba34ec:  0  0             add [eax], al           
>>    456   2B @0xbfba34ee:  0  0             add [eax], al           
>>    457   2B @0xbfba34f0:  0  0             add [eax], al           
>>    458   2B @0xbfba34f2:  0  0             add [eax], al           
>>    459   2B @0xbfba34f4:  0  0             add [eax], al           
>>    460   2B @0xbfba34f6:  0  0             add [eax], al           
>>    461   2B @0xbfba34f8:  0  0             add [eax], al           
>>    462   2B @0xbfba34fa:  0  0             add [eax], al           
>>    463   2B @0xbfba34fc:  0  0             add [eax], al           
>>    464   2B @0xbfba34fe:  0  0             add [eax], al           
>>    465   2B @0xbfba3500:  0  0             add [eax], al           
>>    466   2B @0xbfba3502:  0  0             add [eax], al           
>>    467   2B @0xbfba3504:  0  0             add [eax], al           
>>    468   2B @0xbfba3506:  0  0             add [eax], al           
>>    469   2B @0xbfba3508:  0  0             add [eax], al           
>>    470   2B @0xbfba350a:  0  0             add [eax], al           
>>    471   2B @0xbfba350c:  0  0             add [eax], al           
>>    472   2B @0xbfba350e:  0  0             add [eax], al           
>>    473   2B @0xbfba3510:  0  0             add [eax], al           
>>    474   2B @0xbfba3512:  0  0             add [eax], al           
>>    475   2B @0xbfba3514:  0  0             add [eax], al           
>>    476   2B @0xbfba3516:  0  0             add [eax], al           
>>    477   2B @0xbfba3518:  0  0             add [eax], al           
>>    478   2B @0xbfba351a:  0  0             add [eax], al           
>>    479   2B @0xbfba351c:  0  0             add [eax], al           
>>    480   2B @0xbfba351e:  0  0             add [eax], al           
>>    481   2B @0xbfba3520:  0  0             add [eax], al           
>>    482   2B @0xbfba3522:  0  0             add [eax], al           
>>    483   2B @0xbfba3524:  0  0             add [eax], al           
>>    484   2B @0xbfba3526:  0  0             add [eax], al           
>>    485   2B @0xbfba3528:  0  0             add [eax], al           
>>    486   2B @0xbfba352a:  0  0             add [eax], al           
>>    487   2B @0xbfba352c:  0  0             add [eax], al           
>>    488   2B @0xbfba352e:  0  0             add [eax], al           
>>    489   2B @0xbfba3530:  0  0             add [eax], al           
>>    490   2B @0xbfba3532:  0  0             add [eax], al           
>>    491   2B @0xbfba3534:  0  0             add [eax], al           
>>    492   2B @0xbfba3536:  0  0             add [eax], al           
>>    493   2B @0xbfba3538:  0  0             add [eax], al           
>>    494   2B @0xbfba353a:  0  0             add [eax], al           
>>    495   2B @0xbfba353c:  0  0             add [eax], al           
>>    496   2B @0xbfba353e:  0  0             add [eax], al           
>>    497   2B @0xbfba3540:  0  0             add [eax], al           
>>    498   2B @0xbfba3542:  0  0             add [eax], al           
>>    499   2B @0xbfba3544:  0  0             add [eax], al           
>>    500   2B @0xbfba3546:  0  0             add [eax], al           
>>    501   2B @0xbfba3548:  0  0             add [eax], al           
>>    502   2B @0xbfba354a:  0  0             add [eax], al           
>>    503   2B @0xbfba354c:  0  0             add [eax], al           
>>    504   2B @0xbfba354e:  0  0             add [eax], al           
>>    505   2B @0xbfba3550:  0  0             add [eax], al           
>>    506   2B @0xbfba3552:  0  0             add [eax], al           
>>    507   2B @0xbfba3554:  0  0             add [eax], al           
>>    508   2B @0xbfba3556:  0  0             add [eax], al           
>>    509   2B @0xbfba3558:  0  0             add [eax], al           
>>    510   2B @0xbfba355a:  0  0             add [eax], al           
>>    511   2B @0xbfba355c:  0  0             add [eax], al           
>>    512   2B @0xbfba355e:  0  0             add [eax], al           
>>    513   2B @0xbfba3560:  0  0             add [eax], al           
>>    514   2B @0xbfba3562:  0  0             add [eax], al           
>>    515   2B @0xbfba3564:  0  0             add [eax], al           
>>    516   2B @0xbfba3566:  0  0             add [eax], al           
>>    517   2B @0xbfba3568:  0  0             add [eax], al           
>>    518   2B @0xbfba356a:  0  0             add [eax], al           
>>    519   2B @0xbfba356c:  0  0             add [eax], al           
>>    520   2B @0xbfba356e:  0  0             add [eax], al           
>>    521   2B @0xbfba3570:  0  0             add [eax], al           
>>    522   1B @0xc1129e92: OOB, bytes not captured
>>    523   1B @0xc1129e93: OOB, bytes not captured
>>    524   2B @0xc1025930: OOB, bytes not captured
>>    525   2B @0xc1025932: OOB, bytes not captured
>>    526   2B @0xc1025934: OOB, bytes not captured
>>    527   2B @0xc1025936: OOB, bytes not captured
>>    528   4B @0xc1025938: OOB, bytes not captured
>>    529   4B @0xc102593c: OOB, bytes not captured
>>    530   3B @0xc1025940: OOB, bytes not captured
>>    531   2B @0xc1025943: OOB, bytes not captured
>>    532   2B @0xbfba3572:  0  0             add [eax], al           
>>    533   2B @0xbfba3574:  0  0             add [eax], al           
>>    534   2B @0xbfba3576:  0  0             add [eax], al           
>>    535   2B @0xbfba3578:  0  0             add [eax], al           
>>    536   2B @0xbfba357a:  0  0             add [eax], al           
>>    537   2B @0xbfba357c:  0  0             add [eax], al           
>>    538   2B @0xbfba357e:  0  0             add [eax], al           
>>    539   2B @0xbfba3580: eb 13             jmp 0x15                
>>    540   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    541   1B @0xbfba3582: 59                pop ecx                 
>>    542   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    543   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    544   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    545   1B @0xbfba3589: 43                inc ebx                 
>>    546   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    547   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    548   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (405/410) = 0.987805
>>    Mem_map start_addr: 0xbfba3400, length: 1024B, exec'ed bytes: 405, range: 410B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

95 [State 129] Terminating state 129 with message 'EIP reached, success'
95 [State 129] Switching from state 129 to state 0
Copied 34928 (count=1)
Deleting state 129 0x0x2302fda0
95 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 128
>> fuzzInit: datum forking for value 129
>> fuzzInit: datum forking for value 129
95 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 129)
        (ReadLSB w32 0 v129_fuzz_symb_129)))
    state 130 with condition (Not (Eq false
         (Eq (w32 129)
             (ReadLSB w32 0 v129_fuzz_symb_129))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-129-8048a0e
Size=2 Low=0 splitIndex=1 high=1
95 [State 0] Switching from state 0 to state 130
Copied 34928 (count=1)
Finalizing TB execution 130
s2e_dummyMainFunction
tcg-llvm-tb-129-8048a0e
96 [State 130] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 129 not yet applied), shell_len: 1024, eip: 0x00000000

96 [State 130] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
96 [State 130] Leaving buffer range @0xc126f278, c6 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
96 [State 130] Killing state 130
96 [State 130] Terminating state 130 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
96 [State 130] Switching from state 130 to state 0
Copied 34928 (count=1)
Deleting state 130 0x0x2302fda0
96 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 129
>> fuzzInit: datum forking for value 130
>> fuzzInit: datum forking for value 130
96 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 130)
        (ReadLSB w32 0 v130_fuzz_symb_130)))
    state 131 with condition (Not (Eq false
         (Eq (w32 130)
             (ReadLSB w32 0 v130_fuzz_symb_130))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-130-8048a0e
Size=2 Low=0 splitIndex=1 high=1
96 [State 0] Switching from state 0 to state 131
Copied 34928 (count=1)
Finalizing TB execution 131
s2e_dummyMainFunction
tcg-llvm-tb-130-8048a0e
96 [State 131] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 130 not yet applied), shell_len: 1024, eip: 0x00000000

96 [State 131] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 201 instructions, PCs: bfba3402 bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
97 [State 131] Terminating state 131 with message 'eliminated this false positive, execution path subset of another success'
97 [State 131] Switching from state 131 to state 0
Copied 34928 (count=1)
Deleting state 131 0x0x2302fda0
Firing timer event
97 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 130
>> fuzzInit: datum forking for value 131
>> fuzzInit: datum forking for value 131
97 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 131)
        (ReadLSB w32 0 v131_fuzz_symb_131)))
    state 132 with condition (Not (Eq false
         (Eq (w32 131)
             (ReadLSB w32 0 v131_fuzz_symb_131))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-131-8048a0e
Size=2 Low=0 splitIndex=1 high=1
97 [State 0] Switching from state 0 to state 132
Copied 34928 (count=1)
Finalizing TB execution 132
s2e_dummyMainFunction
tcg-llvm-tb-131-8048a0e
97 [State 132] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 131 not yet applied), shell_len: 1024, eip: 0x00000000

97 [State 132] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
97 [State 132] Leaving buffer range @0xc10251b1, 25 IoB insns; prev insn @0xbfba344b
  1   2B @0xbfba344b:  0  0             add [eax], al           
97 [State 132] Entering buffer range @0xbfba344d, 905 OoB insns
97 [State 132] Leaving buffer range @0xc126f278, a0 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
98 [State 132] Killing state 132
98 [State 132] Terminating state 132 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
98 [State 132] Switching from state 132 to state 0
Copied 34928 (count=1)
Deleting state 132 0x0x2302fda0
Firing timer event
98 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 131
>> fuzzInit: datum forking for value 132
>> fuzzInit: datum forking for value 132
98 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 132)
        (ReadLSB w32 0 v132_fuzz_symb_132)))
    state 133 with condition (Not (Eq false
         (Eq (w32 132)
             (ReadLSB w32 0 v132_fuzz_symb_132))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-132-8048a0e
Size=2 Low=0 splitIndex=1 high=1
98 [State 0] Switching from state 0 to state 133
Copied 34928 (count=1)
Finalizing TB execution 133
s2e_dummyMainFunction
tcg-llvm-tb-132-8048a0e
98 [State 133] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 132 not yet applied), shell_len: 1024, eip: 0x00000000

98 [State 133] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 200 instructions, PCs: bfba3404 bfba3406 bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
98 [State 133] Terminating state 133 with message 'eliminated this false positive, execution path subset of another success'
98 [State 133] Switching from state 133 to state 0
Copied 34928 (count=1)
Deleting state 133 0x0x2302fda0
Firing timer event
99 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 132
>> fuzzInit: datum forking for value 133
>> fuzzInit: datum forking for value 133
99 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 133)
        (ReadLSB w32 0 v133_fuzz_symb_133)))
    state 134 with condition (Not (Eq false
         (Eq (w32 133)
             (ReadLSB w32 0 v133_fuzz_symb_133))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-133-8048a0e
Size=2 Low=0 splitIndex=1 high=1
99 [State 0] Switching from state 0 to state 134
Copied 34928 (count=1)
Finalizing TB execution 134
s2e_dummyMainFunction
tcg-llvm-tb-133-8048a0e
99 [State 134] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 133 not yet applied), shell_len: 1024, eip: 0x00000000

99 [State 134] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
99 [State 134] Leaving buffer range @0xc103b667, 25 IoB insns; prev insn @0xbfba344d
  1   2B @0xbfba344d:  0  0             add [eax], al           
99 [State 134] Entering buffer range @0xbfba344f, 342 OoB insns
99 [State 134] Leaving buffer range @0xc1003072, 94 IoB insns; prev insn @0xbfba3575
  1   2B @0xbfba3575:  0  0             add [eax], al           
99 [State 134] Entering buffer range @0xbfba3577, 1 OoB insns
99 [State 134] Leaving buffer range @0xc126f278, b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
100 [State 134] Killing state 134
100 [State 134] Terminating state 134 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
100 [State 134] Switching from state 134 to state 0
Copied 34928 (count=1)
Deleting state 134 0x0x2302fda0
Firing timer event
100 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 133
>> fuzzInit: datum forking for value 134
>> fuzzInit: datum forking for value 134
100 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 134)
        (ReadLSB w32 0 v134_fuzz_symb_134)))
    state 135 with condition (Not (Eq false
         (Eq (w32 134)
             (ReadLSB w32 0 v134_fuzz_symb_134))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-134-8048a0e
Size=2 Low=0 splitIndex=1 high=1
100 [State 0] Switching from state 0 to state 135
Copied 34928 (count=1)
Finalizing TB execution 135
s2e_dummyMainFunction
tcg-llvm-tb-134-8048a0e
100 [State 135] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 134 not yet applied), shell_len: 1024, eip: 0x00000000

100 [State 135] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
100 [State 135] Leaving buffer range @0xc10251b1, 25 IoB insns; prev insn @0xbfba344e
  1   2B @0xbfba344e:  0  0             add [eax], al           
100 [State 135] Entering buffer range @0xbfba3450, 713 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 912. This is the 7th success
>> Success densities, overlay: 0.987624; avg: 0.987624
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3406:  0  0             add [eax], al           
>>      2   2B @0xbfba3408:  0  0             add [eax], al           
>>      3   2B @0xbfba340a:  0  0             add [eax], al           
>>      4   2B @0xbfba340c:  0  0             add [eax], al           
>>      5   2B @0xbfba340e:  0  0             add [eax], al           
>>      6   2B @0xbfba3410:  0  0             add [eax], al           
>>      7   2B @0xbfba3412:  0  0             add [eax], al           
>>      8   2B @0xbfba3414:  0  0             add [eax], al           
>>      9   2B @0xbfba3416:  0  0             add [eax], al           
>>     10   2B @0xbfba3418:  0  0             add [eax], al           
>>     11   2B @0xbfba341a:  0  0             add [eax], al           
>>     12   2B @0xbfba341c:  0  0             add [eax], al           
>>     13   2B @0xbfba341e:  0  0             add [eax], al           
>>     14   2B @0xbfba3420:  0  0             add [eax], al           
>>     15   2B @0xbfba3422:  0  0             add [eax], al           
>>     16   2B @0xbfba3424:  0  0             add [eax], al           
>>     17   2B @0xbfba3426:  0  0             add [eax], al           
>>     18   2B @0xbfba3428:  0  0             add [eax], al           
>>     19   2B @0xbfba342a:  0  0             add [eax], al           
>>     20   2B @0xbfba342c:  0  0             add [eax], al           
>>     21   2B @0xbfba342e:  0  0             add [eax], al           
>>     22   2B @0xbfba3430:  0  0             add [eax], al           
>>     23   2B @0xbfba3432:  0  0             add [eax], al           
>>     24   2B @0xbfba3434:  0  0             add [eax], al           
>>     25   2B @0xbfba3436:  0  0             add [eax], al           
>>     26   2B @0xbfba3438:  0  0             add [eax], al           
>>     27   2B @0xbfba343a:  0  0             add [eax], al           
>>     28   2B @0xbfba343c:  0  0             add [eax], al           
>>     29   2B @0xbfba343e:  0  0             add [eax], al           
>>     30   2B @0xbfba3440:  0  0             add [eax], al           
>>     31   2B @0xbfba3442:  0  0             add [eax], al           
>>     32   2B @0xbfba3444:  0  0             add [eax], al           
>>     33   2B @0xbfba3446:  0  0             add [eax], al           
>>     34   2B @0xbfba3448:  0  0             add [eax], al           
>>     35   2B @0xbfba344a:  0  0             add [eax], al           
>>     36   2B @0xbfba344c:  0  0             add [eax], al           
>>     37   2B @0xbfba344e:  0  0             add [eax], al           
>>     38   3B @0xc10251b1: OOB, bytes not captured
>>     39   6B @0xc10251b4: OOB, bytes not captured
>>     40   5B @0xc1003072: OOB, bytes not captured
>>     41   3B @0xc10aec8f: OOB, bytes not captured
>>     42   2B @0xc10aec92: OOB, bytes not captured
>>     43   2B @0xc10aec94: OOB, bytes not captured
>>     44   1B @0xc10aec96: OOB, bytes not captured
>>     45   4B @0xc10aec97: OOB, bytes not captured
>>     46   5B @0xc10aec9b: OOB, bytes not captured
>>     47   1B @0xc10add05: OOB, bytes not captured
>>     48   2B @0xc10add06: OOB, bytes not captured
>>     49   1B @0xc10add08: OOB, bytes not captured
>>     50   1B @0xc10add09: OOB, bytes not captured
>>     51   2B @0xc10add0a: OOB, bytes not captured
>>     52   1B @0xc10add0c: OOB, bytes not captured
>>     53   2B @0xc10add0d: OOB, bytes not captured
>>     54   3B @0xc10add0f: OOB, bytes not captured
>>     55   4B @0xc10add12: OOB, bytes not captured
>>     56   4B @0xc10add16: OOB, bytes not captured
>>     57   4B @0xc10add1a: OOB, bytes not captured
>>     58   3B @0xc10add1e: OOB, bytes not captured
>>     59   2B @0xc10add21: OOB, bytes not captured
>>     60   5B @0xc10add2a: OOB, bytes not captured
>>     61   2B @0xc10add2f: OOB, bytes not captured
>>     62   2B @0xc10add31: OOB, bytes not captured
>>     63   2B @0xc10add33: OOB, bytes not captured
>>     64   3B @0xc10add35: OOB, bytes not captured
>>     65   2B @0xc10add38: OOB, bytes not captured
>>     66   3B @0xc10add3a: OOB, bytes not captured
>>     67   3B @0xc10add3d: OOB, bytes not captured
>>     68   3B @0xc10add40: OOB, bytes not captured
>>     69   3B @0xc10add43: OOB, bytes not captured
>>     70   3B @0xc10add46: OOB, bytes not captured
>>     71   1B @0xc10add49: OOB, bytes not captured
>>     72   3B @0xc10add4a: OOB, bytes not captured
>>     73   4B @0xc10add4d: OOB, bytes not captured
>>     74   2B @0xc10add51: OOB, bytes not captured
>>     75   3B @0xc10add53: OOB, bytes not captured
>>     76   2B @0xc10add56: OOB, bytes not captured
>>     77   2B @0xc10add58: OOB, bytes not captured
>>     78   2B @0xc10add5a: OOB, bytes not captured
>>     79   3B @0xc10add5c: OOB, bytes not captured
>>     80   5B @0xc10add5f: OOB, bytes not captured
>>     81   2B @0xc10add64: OOB, bytes not captured
>>     82   5B @0xc10add66: OOB, bytes not captured
>>     83   1B @0xc10ad1eb: OOB, bytes not captured
>>     84   2B @0xc10ad1ec: OOB, bytes not captured
>>     85   1B @0xc10ad1ee: OOB, bytes not captured
>>     86   2B @0xc10ad1ef: OOB, bytes not captured
>>     87   1B @0xc10ad1f1: OOB, bytes not captured
>>     88   2B @0xc10ad1f2: OOB, bytes not captured
>>     89   5B @0xc10ad1f4: OOB, bytes not captured
>>     90   3B @0xc10ad1f9: OOB, bytes not captured
>>     91   3B @0xc10ad1fc: OOB, bytes not captured
>>     92   2B @0xc10ad1ff: OOB, bytes not captured
>>     93   3B @0xc10ad201: OOB, bytes not captured
>>     94   2B @0xc10ad204: OOB, bytes not captured
>>     95   3B @0xc10ad206: OOB, bytes not captured
>>     96   3B @0xc10ad209: OOB, bytes not captured
>>     97   3B @0xc10ad20c: OOB, bytes not captured
>>     98   3B @0xc10ad20f: OOB, bytes not captured
>>     99   2B @0xc10ad212: OOB, bytes not captured
>>    100   2B @0xc10ad214: OOB, bytes not captured
>>    101   2B @0xc10ad225: OOB, bytes not captured
>>    102   1B @0xc10ad227: OOB, bytes not captured
>>    103   1B @0xc10ad228: OOB, bytes not captured
>>    104   1B @0xc10ad229: OOB, bytes not captured
>>    105   1B @0xc10ad22a: OOB, bytes not captured
>>    106   4B @0xc10add6b: OOB, bytes not captured
>>    107   1B @0xc10add6f: OOB, bytes not captured
>>    108   1B @0xc10add70: OOB, bytes not captured
>>    109   1B @0xc10add71: OOB, bytes not captured
>>    110   1B @0xc10add72: OOB, bytes not captured
>>    111   1B @0xc10add73: OOB, bytes not captured
>>    112   1B @0xc10add74: OOB, bytes not captured
>>    113   1B @0xc10add75: OOB, bytes not captured
>>    114   1B @0xc10aeca0: OOB, bytes not captured
>>    115   1B @0xc10aeca1: OOB, bytes not captured
>>    116   2B @0xc10aeca2: OOB, bytes not captured
>>    117   1B @0xc10aeca4: OOB, bytes not captured
>>    118   1B @0xc10aeca5: OOB, bytes not captured
>>    119   4B @0xc112888b: OOB, bytes not captured
>>    120   2B @0xc112888f: OOB, bytes not captured
>>    121   2B @0xc10442b6: OOB, bytes not captured
>>    122   5B @0xc10442b8: OOB, bytes not captured
>>    123   3B @0xc10442bd: OOB, bytes not captured
>>    124   5B @0xc10442c0: OOB, bytes not captured
>>    125   1B @0xc10442c5: OOB, bytes not captured
>>    126   2B @0xc10442c6: OOB, bytes not captured
>>    127   5B @0xc10442c8: OOB, bytes not captured
>>    128   1B @0xc104435b: OOB, bytes not captured
>>    129   2B @0xc104435c: OOB, bytes not captured
>>    130   1B @0xc104435e: OOB, bytes not captured
>>    131   2B @0xc104435f: OOB, bytes not captured
>>    132   1B @0xc1044361: OOB, bytes not captured
>>    133   4B @0xc1044362: OOB, bytes not captured
>>    134   2B @0xc1044366: OOB, bytes not captured
>>    135   3B @0xc1044368: OOB, bytes not captured
>>    136   3B @0xc104436b: OOB, bytes not captured
>>    137   2B @0xc104436e: OOB, bytes not captured
>>    138   2B @0xc1044370: OOB, bytes not captured
>>    139   3B @0xc1044372: OOB, bytes not captured
>>    140   3B @0xc1044375: OOB, bytes not captured
>>    141   2B @0xc1044378: OOB, bytes not captured
>>    142   3B @0xc104437a: OOB, bytes not captured
>>    143   2B @0xc104437d: OOB, bytes not captured
>>    144   2B @0xc104437f: OOB, bytes not captured
>>    145   2B @0xc1044381: OOB, bytes not captured
>>    146   2B @0xc1044383: OOB, bytes not captured
>>    147   2B @0xc1044385: OOB, bytes not captured
>>    148   2B @0xc1044387: OOB, bytes not captured
>>    149   1B @0xc1044389: OOB, bytes not captured
>>    150   1B @0xc104438a: OOB, bytes not captured
>>    151   1B @0xc104438b: OOB, bytes not captured
>>    152   5B @0xc104438c: OOB, bytes not captured
>>    153   4B @0xc102d4f1: OOB, bytes not captured
>>    154   2B @0xc102d4f5: OOB, bytes not captured
>>    155   5B @0xc102d4f7: OOB, bytes not captured
>>    156   4B @0xc102d4fc: OOB, bytes not captured
>>    157   3B @0xc102d500: OOB, bytes not captured
>>    158   2B @0xc102d503: OOB, bytes not captured
>>    159   2B @0xc102d505: OOB, bytes not captured
>>    160   2B @0xc102d507: OOB, bytes not captured
>>    161   6B @0xc102d509: OOB, bytes not captured
>>    162   2B @0xc102d50f: OOB, bytes not captured
>>    163   7B @0xc10252ff: OOB, bytes not captured
>>    164   6B @0xc1025306: OOB, bytes not captured
>>    165   7B @0xc102530c: OOB, bytes not captured
>>    166   2B @0xc1025313: OOB, bytes not captured
>>    167   6B @0xc1025315: OOB, bytes not captured
>>    168   2B @0xc102531b: OOB, bytes not captured
>>    169   2B @0xc102531d: OOB, bytes not captured
>>    170   3B @0xc1025325: OOB, bytes not captured
>>    171   2B @0xc1025328: OOB, bytes not captured
>>    172   3B @0xc1025349: OOB, bytes not captured
>>    173   2B @0xc102534c: OOB, bytes not captured
>>    174   3B @0xc1025399: OOB, bytes not captured
>>    175   6B @0xc102539c: OOB, bytes not captured
>>    176   2B @0xc10253a2: OOB, bytes not captured
>>    177   2B @0xc10253a4: OOB, bytes not captured
>>    178   2B @0xc10253a6: OOB, bytes not captured
>>    179   2B @0xc10253ac: OOB, bytes not captured
>>    180   2B @0xc10253ae: OOB, bytes not captured
>>    181   3B @0xc10253a8: OOB, bytes not captured
>>    182   1B @0xc10253ab: OOB, bytes not captured
>>    183   2B @0xc10253ac: OOB, bytes not captured
>>    184   2B @0xc10253ae: OOB, bytes not captured
>>    185   2B @0xc10253b0: OOB, bytes not captured
>>    186   2B @0xc10253b2: OOB, bytes not captured
>>    187   2B @0xc10253b4: OOB, bytes not captured
>>    188   2B @0xc10253ba: OOB, bytes not captured
>>    189   2B @0xc10253bc: OOB, bytes not captured
>>    190   3B @0xc10253b6: OOB, bytes not captured
>>    191   1B @0xc10253b9: OOB, bytes not captured
>>    192   2B @0xc10253ba: OOB, bytes not captured
>>    193   2B @0xc10253bc: OOB, bytes not captured
>>    194   2B @0xc10253be: OOB, bytes not captured
>>    195   2B @0xc10253c4: OOB, bytes not captured
>>    196   2B @0xc10253c6: OOB, bytes not captured
>>    197   2B @0xc10253c8: OOB, bytes not captured
>>    198   2B @0xc10253ce: OOB, bytes not captured
>>    199   2B @0xc10253d0: OOB, bytes not captured
>>    200   3B @0xc10253d2: OOB, bytes not captured
>>    201   3B @0xc10253d5: OOB, bytes not captured
>>    202   2B @0xc10253d8: OOB, bytes not captured
>>    203   2B @0xc10253da: OOB, bytes not captured
>>    204   2B @0xc10253dc: OOB, bytes not captured
>>    205   2B @0xc10253e2: OOB, bytes not captured
>>    206   2B @0xc10253e4: OOB, bytes not captured
>>    207   5B @0xc10253e6: OOB, bytes not captured
>>    208   1B @0xc101fff1: OOB, bytes not captured
>>    209   1B @0xc101fff2: OOB, bytes not captured
>>    210   1B @0xc101fff3: OOB, bytes not captured
>>    211   1B @0xc101fff4: OOB, bytes not captured
>>    212   3B @0xc101fff5: OOB, bytes not captured
>>    213   4B @0xc101fff8: OOB, bytes not captured
>>    214   2B @0xc101fffc: OOB, bytes not captured
>>    215   4B @0xc101fffe: OOB, bytes not captured
>>    216   4B @0xc1020002: OOB, bytes not captured
>>    217   3B @0xc1020006: OOB, bytes not captured
>>    218   3B @0xc1020009: OOB, bytes not captured
>>    219   4B @0xc102000c: OOB, bytes not captured
>>    220   4B @0xc1020010: OOB, bytes not captured
>>    221   3B @0xc1020014: OOB, bytes not captured
>>    222   3B @0xc1020017: OOB, bytes not captured
>>    223   4B @0xc102001a: OOB, bytes not captured
>>    224   4B @0xc102001e: OOB, bytes not captured
>>    225   5B @0xc1020022: OOB, bytes not captured
>>    226   2B @0xc1020027: OOB, bytes not captured
>>    227   2B @0xc1020029: OOB, bytes not captured
>>    228   5B @0xc102002b: OOB, bytes not captured
>>    229   2B @0xc1020030: OOB, bytes not captured
>>    230   4B @0xc102003a: OOB, bytes not captured
>>    231   6B @0xc102003e: OOB, bytes not captured
>>    232   3B @0xc1020044: OOB, bytes not captured
>>    233   4B @0xc1020047: OOB, bytes not captured
>>    234   2B @0xc102004b: OOB, bytes not captured
>>    235   7B @0xc102004d: OOB, bytes not captured
>>    236   2B @0xc1020054: OOB, bytes not captured
>>    237   4B @0xc1020056: OOB, bytes not captured
>>    238   3B @0xc102005a: OOB, bytes not captured
>>    239   3B @0xc102005d: OOB, bytes not captured
>>    240   3B @0xc1020060: OOB, bytes not captured
>>    241   3B @0xc1020063: OOB, bytes not captured
>>    242   3B @0xc1020066: OOB, bytes not captured
>>    243   3B @0xc1020069: OOB, bytes not captured
>>    244   3B @0xc102006c: OOB, bytes not captured
>>    245   3B @0xc102006f: OOB, bytes not captured
>>    246   2B @0xc1020072: OOB, bytes not captured
>>    247   2B @0xc1020074: OOB, bytes not captured
>>    248   2B @0xc1020076: OOB, bytes not captured
>>    249   4B @0xc1020078: OOB, bytes not captured
>>    250   3B @0xc102007c: OOB, bytes not captured
>>    251   4B @0xc102007f: OOB, bytes not captured
>>    252   4B @0xc1020083: OOB, bytes not captured
>>    253   2B @0xc1020087: OOB, bytes not captured
>>    254   2B @0xc1020089: OOB, bytes not captured
>>    255   2B @0xc102008b: OOB, bytes not captured
>>    256   2B @0xc102008d: OOB, bytes not captured
>>    257   2B @0xc102008f: OOB, bytes not captured
>>    258   2B @0xc1020091: OOB, bytes not captured
>>    259   2B @0xc1020099: OOB, bytes not captured
>>    260   2B @0xc102009b: OOB, bytes not captured
>>    261   3B @0xc102009d: OOB, bytes not captured
>>    262   2B @0xc10200a0: OOB, bytes not captured
>>    263   2B @0xc10200a2: OOB, bytes not captured
>>    264   2B @0xc10200a4: OOB, bytes not captured
>>    265   2B @0xc10200a6: OOB, bytes not captured
>>    266   2B @0xc10200a8: OOB, bytes not captured
>>    267   2B @0xc10200aa: OOB, bytes not captured
>>    268   2B @0xc10200ac: OOB, bytes not captured
>>    269   7B @0xc10200ae: OOB, bytes not captured
>>    270   2B @0xc10200b5: OOB, bytes not captured
>>    271   4B @0xc10200b7: OOB, bytes not captured
>>    272   6B @0xc10200bb: OOB, bytes not captured
>>    273   2B @0xc10200c1: OOB, bytes not captured
>>    274   2B @0xc10200c3: OOB, bytes not captured
>>    275   2B @0xc10200c5: OOB, bytes not captured
>>    276   5B @0xc10200dc: OOB, bytes not captured
>>    277   5B @0xc10200e1: OOB, bytes not captured
>>    278   2B @0xc10200e6: OOB, bytes not captured
>>    279   2B @0xc10200e8: OOB, bytes not captured
>>    280   4B @0xc10200ea: OOB, bytes not captured
>>    281   2B @0xc10200ee: OOB, bytes not captured
>>    282   3B @0xc10200f2: OOB, bytes not captured
>>    283   1B @0xc10200f5: OOB, bytes not captured
>>    284   1B @0xc10200f6: OOB, bytes not captured
>>    285   1B @0xc10200f7: OOB, bytes not captured
>>    286   1B @0xc10200f8: OOB, bytes not captured
>>    287   1B @0xc10200f9: OOB, bytes not captured
>>    288   1B @0xc10253eb: OOB, bytes not captured
>>    289   2B @0xc10253ec: OOB, bytes not captured
>>    290   2B @0xc10253ee: OOB, bytes not captured
>>    291   5B @0xc10253f0: OOB, bytes not captured
>>    292   4B @0xc10253f5: OOB, bytes not captured
>>    293   2B @0xc10253f9: OOB, bytes not captured
>>    294   4B @0xc10253fb: OOB, bytes not captured
>>    295   6B @0xc10253ff: OOB, bytes not captured
>>    296   2B @0xc1025405: OOB, bytes not captured
>>    297   8B @0xc1025407: OOB, bytes not captured
>>    298   2B @0xc102540f: OOB, bytes not captured
>>    299   5B @0xc1025411: OOB, bytes not captured
>>    300   2B @0xc1025416: OOB, bytes not captured
>>    301   1B @0xc10442cd: OOB, bytes not captured
>>    302   1B @0xc10442ce: OOB, bytes not captured
>>    303   1B @0xc10442cf: OOB, bytes not captured
>>    304   1B @0xc10442d0: OOB, bytes not captured
>>    305   1B @0xc10442d1: OOB, bytes not captured
>>    306   7B @0xc126e052: OOB, bytes not captured
>>    307   7B @0xc126e059: OOB, bytes not captured
>>    308   7B @0xc126e060: OOB, bytes not captured
>>    309   2B @0xc126e067: OOB, bytes not captured
>>    310   5B @0xc126e069: OOB, bytes not captured
>>    311   1B @0xc1070e4a: OOB, bytes not captured
>>    312   6B @0xc1070e4b: OOB, bytes not captured
>>    313   6B @0xc1070e51: OOB, bytes not captured
>>    314   4B @0xc1070e57: OOB, bytes not captured
>>    315   3B @0xc1070e5b: OOB, bytes not captured
>>    316   3B @0xc1070e5e: OOB, bytes not captured
>>    317   2B @0xc1070e61: OOB, bytes not captured
>>    318   3B @0xc1070e6b: OOB, bytes not captured
>>    319   3B @0xc1070e6e: OOB, bytes not captured
>>    320   1B @0xc1070e71: OOB, bytes not captured
>>    321   2B @0xc1070e72: OOB, bytes not captured
>>    322   5B @0xc1070e74: OOB, bytes not captured
>>    323   1B @0xc1070dac: OOB, bytes not captured
>>    324   2B @0xc1070dad: OOB, bytes not captured
>>    325   1B @0xc1070daf: OOB, bytes not captured
>>    326   1B @0xc1070db0: OOB, bytes not captured
>>    327   2B @0xc1070db1: OOB, bytes not captured
>>    328   1B @0xc1070db3: OOB, bytes not captured
>>    329   2B @0xc1070db4: OOB, bytes not captured
>>    330   2B @0xc1070db6: OOB, bytes not captured
>>    331   3B @0xc1070db8: OOB, bytes not captured
>>    332   5B @0xc1070dbb: OOB, bytes not captured
>>    333   3B @0xc1070dc0: OOB, bytes not captured
>>    334   3B @0xc1070dc3: OOB, bytes not captured
>>    335   2B @0xc1070dc6: OOB, bytes not captured
>>    336   2B @0xc1070dc8: OOB, bytes not captured
>>    337   2B @0xc1070dca: OOB, bytes not captured
>>    338   3B @0xc1070dcc: OOB, bytes not captured
>>    339   2B @0xc1070dcf: OOB, bytes not captured
>>    340   1B @0xc1070dd1: OOB, bytes not captured
>>    341   1B @0xc1070dd2: OOB, bytes not captured
>>    342   5B @0xc1070dd3: OOB, bytes not captured
>>    343   5B @0xc1070dd8: OOB, bytes not captured
>>    344   4B @0xc1070ddd: OOB, bytes not captured
>>    345   2B @0xc1070de1: OOB, bytes not captured
>>    346   2B @0xc1070de3: OOB, bytes not captured
>>    347   4B @0xc1070de5: OOB, bytes not captured
>>    348   2B @0xc1070de9: OOB, bytes not captured
>>    349   1B @0xc1070deb: OOB, bytes not captured
>>    350   1B @0xc1070dec: OOB, bytes not captured
>>    351   1B @0xc1070ded: OOB, bytes not captured
>>    352   2B @0xc1070dee: OOB, bytes not captured
>>    353   2B @0xc1070df0: OOB, bytes not captured
>>    354   2B @0xc1070df2: OOB, bytes not captured
>>    355   2B @0xc1070df4: OOB, bytes not captured
>>    356   7B @0xc1070df6: OOB, bytes not captured
>>    357   6B @0xc1070dfd: OOB, bytes not captured
>>    358   5B @0xc1070e03: OOB, bytes not captured
>>    359   3B @0xc1070e08: OOB, bytes not captured
>>    360   3B @0xc1070e0b: OOB, bytes not captured
>>    361   2B @0xc1070e0e: OOB, bytes not captured
>>    362   4B @0xc1070e10: OOB, bytes not captured
>>    363   2B @0xc1070e14: OOB, bytes not captured
>>    364   6B @0xc1070e16: OOB, bytes not captured
>>    365   5B @0xc1070e1c: OOB, bytes not captured
>>    366   1B @0xc1070e21: OOB, bytes not captured
>>    367   1B @0xc1070e22: OOB, bytes not captured
>>    368   1B @0xc1070e23: OOB, bytes not captured
>>    369   1B @0xc1070e24: OOB, bytes not captured
>>    370   1B @0xc1070e25: OOB, bytes not captured
>>    371   1B @0xc1070e26: OOB, bytes not captured
>>    372   1B @0xc1070e27: OOB, bytes not captured
>>    373   1B @0xc1070e79: OOB, bytes not captured
>>    374   1B @0xc1070e7a: OOB, bytes not captured
>>    375   1B @0xc1070e7b: OOB, bytes not captured
>>    376   6B @0xc126e06e: OOB, bytes not captured
>>    377   7B @0xc126e074: OOB, bytes not captured
>>    378   2B @0xc126e07b: OOB, bytes not captured
>>    379   6B @0xc126e07d: OOB, bytes not captured
>>    380   4B @0xc126e083: OOB, bytes not captured
>>    381   1B @0xc126e087: OOB, bytes not captured
>>    382   1B @0xc126e088: OOB, bytes not captured
>>    383   1B @0xc126e089: OOB, bytes not captured
>>    384   1B @0xc126e08a: OOB, bytes not captured
>>    385   2B @0xc10cec3e: OOB, bytes not captured
>>    386   1B @0xc10cec40: OOB, bytes not captured
>>    387   2B @0xc126e4d9: OOB, bytes not captured
>>    388   2B @0xc126e4db: OOB, bytes not captured
>>    389   3B @0xc126e4dd: OOB, bytes not captured
>>    390   3B @0xc126e4e0: OOB, bytes not captured
>>    391   2B @0xc126e4e3: OOB, bytes not captured
>>    392   2B @0xc126e4e5: OOB, bytes not captured
>>    393   2B @0xc126e4e7: OOB, bytes not captured
>>    394   2B @0xc126e4ed: OOB, bytes not captured
>>    395   2B @0xc126e4ef: OOB, bytes not captured
>>    396   5B @0xc126e4f1: OOB, bytes not captured
>>    397   2B @0xc126e4f6: OOB, bytes not captured
>>    398   1B @0xc126e4f8: OOB, bytes not captured
>>    399   1B @0xc126e4f9: OOB, bytes not captured
>>    400   1B @0xc126e4fa: OOB, bytes not captured
>>    401   1B @0xc126e4fb: OOB, bytes not captured
>>    402   1B @0xc126e4fc: OOB, bytes not captured
>>    403   1B @0xc126e4fd: OOB, bytes not captured
>>    404   3B @0xc126e5b3: OOB, bytes not captured
>>    405   1B @0xc126e5b6: OOB, bytes not captured
>>    406   1B @0xc126e5b7: OOB, bytes not captured
>>    407   1B @0xc126e5b8: OOB, bytes not captured
>>    408   1B @0xc126e5b9: OOB, bytes not captured
>>    409   1B @0xc126e5ba: OOB, bytes not captured
>>    410   1B @0xc10cebb4: OOB, bytes not captured
>>    411   1B @0xc10cebb5: OOB, bytes not captured
>>    412   5B @0xc8a3626a: OOB, bytes not captured
>>    413   4B @0xc8a3630d: OOB, bytes not captured
>>    414   3B @0xc8a36311: OOB, bytes not captured
>>    415   2B @0xc8a36314: OOB, bytes not captured
>>    416   6B @0xc8a36316: OOB, bytes not captured
>>    417   5B @0xc8a3626f: OOB, bytes not captured
>>    418   2B @0xc8a36274: OOB, bytes not captured
>>    419   6B @0xc8a36276: OOB, bytes not captured
>>    420   4B @0xc8a3627c: OOB, bytes not captured
>>    421   3B @0xc8a36280: OOB, bytes not captured
>>    422   3B @0xc8a36283: OOB, bytes not captured
>>    423   3B @0xc8a36286: OOB, bytes not captured
>>    424   4B @0xc8a36289: OOB, bytes not captured
>>    425   5B @0xc8a3628d: OOB, bytes not captured
>>    426   4B @0xc8a36292: OOB, bytes not captured
>>    427   2B @0xc8a36296: OOB, bytes not captured
>>    428   5B @0xc8a36298: OOB, bytes not captured
>>    429   1B @0xc8a340e1: OOB, bytes not captured
>>    430   2B @0xc8a340e2: OOB, bytes not captured
>>    431   1B @0xc8a340e4: OOB, bytes not captured
>>    432   2B @0xc8a340e5: OOB, bytes not captured
>>    433   1B @0xc8a340e7: OOB, bytes not captured
>>    434   2B @0xc8a340e8: OOB, bytes not captured
>>    435   2B @0xc8a340ea: OOB, bytes not captured
>>    436   5B @0xc8a340f7: OOB, bytes not captured
>>    437   2B @0xc8a340fc: OOB, bytes not captured
>>    438   2B @0xc8a340fe: OOB, bytes not captured
>>    439   2B @0xc8a34100: OOB, bytes not captured
>>    440   6B @0xc8a34102: OOB, bytes not captured
>>    441   2B @0xc8a34108: OOB, bytes not captured
>>    442   5B @0xc8a3410a: OOB, bytes not captured
>>    443   2B @0xc8a3410f: OOB, bytes not captured
>>    444   5B @0xc8a34111: OOB, bytes not captured
>>    445   1B @0xc8a340d0: OOB, bytes not captured
>>    446   2B @0xc8a340d1: OOB, bytes not captured
>>    447   5B @0xc8a340d3: OOB, bytes not captured
>>    448   1B @0xc8a34001: OOB, bytes not captured
>>    449   1B @0xc8a34002: OOB, bytes not captured
>>    450   2B @0xc8a34003: OOB, bytes not captured
>>    451   1B @0xc8a34005: OOB, bytes not captured
>>    452   2B @0xc8a34006: OOB, bytes not captured
>>    453   2B @0xc8a34008: OOB, bytes not captured
>>    454   5B @0xc8a3400a: OOB, bytes not captured
>>    455   2B @0xc8a3400f: OOB, bytes not captured
>>    456   3B @0xc8a34015: OOB, bytes not captured
>>    457   2B @0xc8a34018: OOB, bytes not captured
>>    458   2B @0xc8a3401a: OOB, bytes not captured
>>    459   2B @0xc8a3401c: OOB, bytes not captured
>>    460   6B @0xc8a3401e: OOB, bytes not captured
>>    461   2B @0xc8a34024: OOB, bytes not captured
>>    462   3B @0xc8a34026: OOB, bytes not captured
>>    463   2B @0xc8a34029: OOB, bytes not captured
>>    464   2B @0xc8a3402b: OOB, bytes not captured
>>    465   3B @0xc8a34031: OOB, bytes not captured
>>    466   3B @0xc8a34034: OOB, bytes not captured
>>    467   2B @0xc8a34037: OOB, bytes not captured
>>    468   2B @0xc8a3403d: OOB, bytes not captured
>>    469   6B @0xc8a3403f: OOB, bytes not captured
>>    470   2B @0xc8a34045: OOB, bytes not captured
>>    471   2B @0xc8a34047: OOB, bytes not captured
>>    472   2B @0xc8a3404d: OOB, bytes not captured
>>    473   3B @0xc8a3404f: OOB, bytes not captured
>>    474   2B @0xc8a34052: OOB, bytes not captured
>>    475   7B @0xc8a34054: OOB, bytes not captured
>>    476   3B @0xc8a34077: OOB, bytes not captured
>>    477   2B @0xc8a3407a: OOB, bytes not captured
>>    478   2B @0xc8a3408e: OOB, bytes not captured
>>    479   2B @0xc8a34090: OOB, bytes not captured
>>    480   3B @0xc8a3409e: OOB, bytes not captured
>>    481   3B @0xc8a340a1: OOB, bytes not captured
>>    482   3B @0xc8a340a4: OOB, bytes not captured
>>    483   3B @0xc8a340a7: OOB, bytes not captured
>>    484   3B @0xc8a340aa: OOB, bytes not captured
>>    485   3B @0xc8a340ad: OOB, bytes not captured
>>    486   7B @0xc8a340b0: OOB, bytes not captured
>>    487   5B @0xc8a340b7: OOB, bytes not captured
>>    488   2B @0xc8a340bc: OOB, bytes not captured
>>    489   2B @0xc8a340be: OOB, bytes not captured
>>    490   2B @0xc8a340c0: OOB, bytes not captured
>>    491   1B @0xc8a340cc: OOB, bytes not captured
>>    492   1B @0xc8a340cd: OOB, bytes not captured
>>    493   1B @0xc8a340ce: OOB, bytes not captured
>>    494   1B @0xc8a340cf: OOB, bytes not captured
>>    495   7B @0xc8a340d8: OOB, bytes not captured
>>    496   1B @0xc8a340df: OOB, bytes not captured
>>    497   1B @0xc8a340e0: OOB, bytes not captured
>>    498   6B @0xc8a34116: OOB, bytes not captured
>>    499   2B @0xc8a3411c: OOB, bytes not captured
>>    500   3B @0xc8a3411e: OOB, bytes not captured
>>    501   5B @0xc8a34121: OOB, bytes not captured
>>    502   1B @0xc8a34126: OOB, bytes not captured
>>    503   1B @0xc8a34127: OOB, bytes not captured
>>    504   1B @0xc8a34128: OOB, bytes not captured
>>    505   1B @0xc8a34129: OOB, bytes not captured
>>    506   2B @0xc8a3629d: OOB, bytes not captured
>>    507   5B @0xc8a3629f: OOB, bytes not captured
>>    508   1B @0xc8a37f85: OOB, bytes not captured
>>    509   2B @0xc8a37f86: OOB, bytes not captured
>>    510   2B @0xc8a37f88: OOB, bytes not captured
>>    511   2B @0xc8a37f8a: OOB, bytes not captured
>>    512   5B @0xc8a37f97: OOB, bytes not captured
>>    513   2B @0xc8a37f9c: OOB, bytes not captured
>>    514   2B @0xc8a37f9e: OOB, bytes not captured
>>    515   2B @0xc8a37fa0: OOB, bytes not captured
>>    516   3B @0xc8a37fa2: OOB, bytes not captured
>>    517   2B @0xc8a37fa5: OOB, bytes not captured
>>    518   2B @0xc8a37fa7: OOB, bytes not captured
>>    519   1B @0xc8a37fad: OOB, bytes not captured
>>    520   2B @0xc8a37fae: OOB, bytes not captured
>>    521   3B @0xc8a37fb0: OOB, bytes not captured
>>    522   2B @0xc8a37fb3: OOB, bytes not captured
>>    523   4B @0xc8a37fb5: OOB, bytes not captured
>>    524   2B @0xc8a37fb9: OOB, bytes not captured
>>    525   2B @0xc8a37fbb: OOB, bytes not captured
>>    526   5B @0xc8a37fbd: OOB, bytes not captured
>>    527   1B @0xc8a37e97: OOB, bytes not captured
>>    528   2B @0xc8a37e98: OOB, bytes not captured
>>    529   1B @0xc8a37e9a: OOB, bytes not captured
>>    530   3B @0xc8a37e9b: OOB, bytes not captured
>>    531   4B @0xc8a37e9e: OOB, bytes not captured
>>    532   2B @0xc8a37ea2: OOB, bytes not captured
>>    533   3B @0xc8a37ea8: OOB, bytes not captured
>>    534   4B @0xc8a37eab: OOB, bytes not captured
>>    535   4B @0xc8a37eaf: OOB, bytes not captured
>>    536   6B @0xc8a37eb3: OOB, bytes not captured
>>    537   4B @0xc8a37eb9: OOB, bytes not captured
>>    538   6B @0xc8a37ebd: OOB, bytes not captured
>>    539   4B @0xc8a37ec3: OOB, bytes not captured
>>    540   6B @0xc8a37ec7: OOB, bytes not captured
>>    541   4B @0xc8a37ecd: OOB, bytes not captured
>>    542   6B @0xc8a37ed1: OOB, bytes not captured
>>    543   4B @0xc8a37ed7: OOB, bytes not captured
>>    544   2B @0xc8a37edb: OOB, bytes not captured
>>    545   2B @0xc8a37ee1: OOB, bytes not captured
>>    546   5B @0xc8a37ee3: OOB, bytes not captured
>>    547   2B @0xc8a37ee8: OOB, bytes not captured
>>    548   2B @0xc8a37eee: OOB, bytes not captured
>>    549   2B @0xc8a37ef0: OOB, bytes not captured
>>    550   4B @0xc8a37ef6: OOB, bytes not captured
>>    551   2B @0xc8a37efa: OOB, bytes not captured
>>    552   4B @0xc8a37f27: OOB, bytes not captured
>>    553   2B @0xc8a37f2b: OOB, bytes not captured
>>    554   7B @0xc8a37f58: OOB, bytes not captured
>>    555   3B @0xc8a37f5f: OOB, bytes not captured
>>    556   6B @0xc8a37f62: OOB, bytes not captured
>>    557   5B @0xc8a37f68: OOB, bytes not captured
>>    558   2B @0xc8a37f6d: OOB, bytes not captured
>>    559   5B @0xc8a37f6f: OOB, bytes not captured
>>    560   2B @0xc10cdff9: OOB, bytes not captured
>>    561   3B @0xc10cdffb: OOB, bytes not captured
>>    562   2B @0xc10cdffe: OOB, bytes not captured
>>    563   2B @0xc10ce000: OOB, bytes not captured
>>    564   3B @0xc10ce002: OOB, bytes not captured
>>    565   4B @0xc10ce005: OOB, bytes not captured
>>    566   1B @0xc10ce009: OOB, bytes not captured
>>    567   5B @0xc8a37f74: OOB, bytes not captured
>>    568   2B @0xc8a37f79: OOB, bytes not captured
>>    569   1B @0xc8a37f7b: OOB, bytes not captured
>>    570   1B @0xc8a37f7c: OOB, bytes not captured
>>    571   5B @0xc8a37f7d: OOB, bytes not captured
>>    572   2B @0xc8a37fc2: OOB, bytes not captured
>>    573   5B @0xc8a37fc4: OOB, bytes not captured
>>    574   3B @0xc8a37fc9: OOB, bytes not captured
>>    575   5B @0xc8a37fcc: OOB, bytes not captured
>>    576   1B @0xc8a37fd1: OOB, bytes not captured
>>    577   1B @0xc8a37fd2: OOB, bytes not captured
>>    578   2B @0xc8a362a4: OOB, bytes not captured
>>    579   5B @0xc8a362a6: OOB, bytes not captured
>>    580   3B @0xc8a362ab: OOB, bytes not captured
>>    581   2B @0xc8a362ae: OOB, bytes not captured
>>    582   2B @0xc8a362b0: OOB, bytes not captured
>>    583   2B @0xc8a362b6: OOB, bytes not captured
>>    584   5B @0xc8a362b8: OOB, bytes not captured
>>    585   2B @0xc10cd7d5: OOB, bytes not captured
>>    586   3B @0xc10cd7d7: OOB, bytes not captured
>>    587   3B @0xc10cd7da: OOB, bytes not captured
>>    588   2B @0xc10cd7dd: OOB, bytes not captured
>>    589   5B @0xc10cd7e3: OOB, bytes not captured
>>    590   5B @0xc10cd7e8: OOB, bytes not captured
>>    591   5B @0xc10cd7ed: OOB, bytes not captured
>>    592   7B @0xc10cd7f2: OOB, bytes not captured
>>    593   3B @0xc10cd7f9: OOB, bytes not captured
>>    594   5B @0xc10cd7fc: OOB, bytes not captured
>>    595   1B @0xc10cd762: OOB, bytes not captured
>>    596   1B @0xc10cd763: OOB, bytes not captured
>>    597   1B @0xc10cd764: OOB, bytes not captured
>>    598   5B @0xc10cd765: OOB, bytes not captured
>>    599   6B @0xc10cd76a: OOB, bytes not captured
>>    600   2B @0xc10cd770: OOB, bytes not captured
>>    601   3B @0xc10cd772: OOB, bytes not captured
>>    602   3B @0xc10cd775: OOB, bytes not captured
>>    603   6B @0xc10cd778: OOB, bytes not captured
>>    604   3B @0xc10cd77e: OOB, bytes not captured
>>    605   2B @0xc10cd781: OOB, bytes not captured
>>    606   1B @0xc10cd7d1: OOB, bytes not captured
>>    607   1B @0xc10cd7d2: OOB, bytes not captured
>>    608   1B @0xc10cd7d3: OOB, bytes not captured
>>    609   1B @0xc10cd7d4: OOB, bytes not captured
>>    610   4B @0xc8a362bd: OOB, bytes not captured
>>    611   3B @0xc8a362c1: OOB, bytes not captured
>>    612   3B @0xc8a362c4: OOB, bytes not captured
>>    613   2B @0xc8a362c7: OOB, bytes not captured
>>    614   3B @0xc8a362c9: OOB, bytes not captured
>>    615   5B @0xc8a362cc: OOB, bytes not captured
>>    616   2B @0xc8a362d1: OOB, bytes not captured
>>    617   5B @0xc8a362d3: OOB, bytes not captured
>>    618   2B @0xc8a362d8: OOB, bytes not captured
>>    619   4B @0xc8a362de: OOB, bytes not captured
>>    620   5B @0xc8a362e2: OOB, bytes not captured
>>    621   2B @0xc8a362e7: OOB, bytes not captured
>>    622   5B @0xc8a362e9: OOB, bytes not captured
>>    623   1B @0xc8a34383: OOB, bytes not captured
>>    624   2B @0xc8a34384: OOB, bytes not captured
>>    625   1B @0xc8a34386: OOB, bytes not captured
>>    626   2B @0xc8a34387: OOB, bytes not captured
>>    627   1B @0xc8a34389: OOB, bytes not captured
>>    628   2B @0xc8a3438a: OOB, bytes not captured
>>    629   2B @0xc8a3438c: OOB, bytes not captured
>>    630   2B @0xc8a3438e: OOB, bytes not captured
>>    631   5B @0xc8a3439b: OOB, bytes not captured
>>    632   2B @0xc8a343a0: OOB, bytes not captured
>>    633   2B @0xc8a343a2: OOB, bytes not captured
>>    634   2B @0xc8a343a4: OOB, bytes not captured
>>    635   2B @0xc8a343a6: OOB, bytes not captured
>>    636   5B @0xc8a343a8: OOB, bytes not captured
>>    637   5B @0xc8a343ad: OOB, bytes not captured
>>    638   2B @0xc8a343b2: OOB, bytes not captured
>>    639   2B @0xc8a343b4: OOB, bytes not captured
>>    640   2B @0xc8a343b6: OOB, bytes not captured
>>    641   5B @0xc8a343b8: OOB, bytes not captured
>>    642   1B @0xc8a3412a: OOB, bytes not captured
>>    643   2B @0xc8a3412b: OOB, bytes not captured
>>    644   1B @0xc8a3412d: OOB, bytes not captured
>>    645   2B @0xc8a3412e: OOB, bytes not captured
>>    646   1B @0xc8a34130: OOB, bytes not captured
>>    647   1B @0xc8a34131: OOB, bytes not captured
>>    648   2B @0xc8a34132: OOB, bytes not captured
>>    649   3B @0xc8a34134: OOB, bytes not captured
>>    650   2B @0xc8a34137: OOB, bytes not captured
>>    651   6B @0xc8a34139: OOB, bytes not captured
>>    652   4B @0xc8a3413f: OOB, bytes not captured
>>    653   2B @0xc8a34143: OOB, bytes not captured
>>    654   2B @0xc8a34145: OOB, bytes not captured
>>    655   5B @0xc8a34147: OOB, bytes not captured
>>    656   2B @0xc8a3414c: OOB, bytes not captured
>>    657   2B @0xc8a34152: OOB, bytes not captured
>>    658   6B @0xc8a34154: OOB, bytes not captured
>>    659   2B @0xc8a3415a: OOB, bytes not captured
>>    660   3B @0xc8a3415c: OOB, bytes not captured
>>    661   2B @0xc8a3415f: OOB, bytes not captured
>>    662   2B @0xc8a34161: OOB, bytes not captured
>>    663   3B @0xc8a34167: OOB, bytes not captured
>>    664   3B @0xc8a3416a: OOB, bytes not captured
>>    665   2B @0xc8a3416d: OOB, bytes not captured
>>    666   3B @0xc8a34173: OOB, bytes not captured
>>    667   2B @0xc8a34176: OOB, bytes not captured
>>    668   2B @0xc8a34178: OOB, bytes not captured
>>    669   2B @0xc8a34182: OOB, bytes not captured
>>    670   2B @0xc8a34184: OOB, bytes not captured
>>    671   2B @0xc8a34186: OOB, bytes not captured
>>    672   6B @0xc8a34188: OOB, bytes not captured
>>    673   3B @0xc8a3418e: OOB, bytes not captured
>>    674   2B @0xc8a34191: OOB, bytes not captured
>>    675   3B @0xc8a34193: OOB, bytes not captured
>>    676   2B @0xc8a34196: OOB, bytes not captured
>>    677   3B @0xc8a34198: OOB, bytes not captured
>>    678   2B @0xc8a3419b: OOB, bytes not captured
>>    679   3B @0xc8a3419d: OOB, bytes not captured
>>    680   2B @0xc8a341a0: OOB, bytes not captured
>>    681   3B @0xc8a341a2: OOB, bytes not captured
>>    682   2B @0xc8a341a5: OOB, bytes not captured
>>    683   5B @0xc8a341d7: OOB, bytes not captured
>>    684   2B @0xc8a341dc: OOB, bytes not captured
>>    685   2B @0xc8a341de: OOB, bytes not captured
>>    686   2B @0xc8a341e0: OOB, bytes not captured
>>    687   5B @0xc8a341e2: OOB, bytes not captured
>>    688   2B @0xc8a341e7: OOB, bytes not captured
>>    689   2B @0xc8a341e9: OOB, bytes not captured
>>    690   2B @0xc8a341eb: OOB, bytes not captured
>>    691   7B @0xc8a341f6: OOB, bytes not captured
>>    692   4B @0xc8a341fd: OOB, bytes not captured
>>    693   2B @0xc8a34201: OOB, bytes not captured
>>    694   2B @0xc8a34203: OOB, bytes not captured
>>    695   5B @0xc8a34205: OOB, bytes not captured
>>    696   3B @0xc8a3407c: OOB, bytes not captured
>>    697   2B @0xc8a3407f: OOB, bytes not captured
>>    698   2B @0xc8a3420a: OOB, bytes not captured
>>    699   3B @0xc8a3420c: OOB, bytes not captured
>>    700   3B @0xc8a3420f: OOB, bytes not captured
>>    701   2B @0xc8a34212: OOB, bytes not captured
>>    702   7B @0xc8a34214: OOB, bytes not captured
>>    703   3B @0xc8a3423c: OOB, bytes not captured
>>    704   2B @0xc8a3423f: OOB, bytes not captured
>>    705   2B @0xc8a34258: OOB, bytes not captured
>>    706   2B @0xc8a3425a: OOB, bytes not captured
>>    707   2B @0xc8a3425c: OOB, bytes not captured
>>    708   3B @0xc8a3425e: OOB, bytes not captured
>>    709   3B @0xc8a34261: OOB, bytes not captured
>>    710   2B @0xc8a34264: OOB, bytes not captured
>>    711   2B @0xc8a34266: OOB, bytes not captured
>>    712   4B @0xc8a34277: OOB, bytes not captured
>>    713   3B @0xc8a3427b: OOB, bytes not captured
>>    714   2B @0xc8a3427e: OOB, bytes not captured
>>    715   3B @0xc8a34280: OOB, bytes not captured
>>    716   5B @0xc8a34283: OOB, bytes not captured
>>    717   4B @0xc8a34288: OOB, bytes not captured
>>    718   7B @0xc8a3428c: OOB, bytes not captured
>>    719   2B @0xc8a34293: OOB, bytes not captured
>>    720   3B @0xc8a3429a: OOB, bytes not captured
>>    721   1B @0xc8a3429d: OOB, bytes not captured
>>    722   1B @0xc8a3429e: OOB, bytes not captured
>>    723   1B @0xc8a3429f: OOB, bytes not captured
>>    724   1B @0xc8a342a0: OOB, bytes not captured
>>    725   1B @0xc8a342a1: OOB, bytes not captured
>>    726   2B @0xc8a343bd: OOB, bytes not captured
>>    727   6B @0xc8a343bf: OOB, bytes not captured
>>    728   2B @0xc8a343c5: OOB, bytes not captured
>>    729   3B @0xc8a343c7: OOB, bytes not captured
>>    730   5B @0xc8a343ca: OOB, bytes not captured
>>    731   1B @0xc8a343cf: OOB, bytes not captured
>>    732   1B @0xc8a343d0: OOB, bytes not captured
>>    733   1B @0xc8a343d1: OOB, bytes not captured
>>    734   1B @0xc8a343d2: OOB, bytes not captured
>>    735   3B @0xc8a362ee: OOB, bytes not captured
>>    736   2B @0xc8a362f1: OOB, bytes not captured
>>    737   5B @0xc8a362f3: OOB, bytes not captured
>>    738   2B @0xc8a362f8: OOB, bytes not captured
>>    739   5B @0xc8a362fa: OOB, bytes not captured
>>    740   2B @0xc8a362ff: OOB, bytes not captured
>>    741   5B @0xc8a36301: OOB, bytes not captured
>>    742   2B @0xc8a36306: OOB, bytes not captured
>>    743   3B @0xc8a34268: OOB, bytes not captured
>>    744   3B @0xc8a3426b: OOB, bytes not captured
>>    745   3B @0xc8a3426e: OOB, bytes not captured
>>    746   3B @0xc8a34271: OOB, bytes not captured
>>    747   3B @0xc8a34274: OOB, bytes not captured
>>    748   4B @0xc8a34277: OOB, bytes not captured
>>    749   3B @0xc8a3427b: OOB, bytes not captured
>>    750   2B @0xc8a3427e: OOB, bytes not captured
>>    751   2B @0xbfba3450:  0  0             add [eax], al           
>>    752   2B @0xbfba3452:  0  0             add [eax], al           
>>    753   2B @0xbfba3454:  0  0             add [eax], al           
>>    754   2B @0xbfba3456:  0  0             add [eax], al           
>>    755   2B @0xbfba3458:  0  0             add [eax], al           
>>    756   2B @0xbfba345a:  0  0             add [eax], al           
>>    757   2B @0xbfba345c:  0  0             add [eax], al           
>>    758   2B @0xbfba345e:  0  0             add [eax], al           
>>    759   2B @0xbfba3460:  0  0             add [eax], al           
>>    760   2B @0xbfba3462:  0  0             add [eax], al           
>>    761   2B @0xbfba3464:  0  0             add [eax], al           
>>    762   2B @0xbfba3466:  0  0             add [eax], al           
>>    763   2B @0xbfba3468:  0  0             add [eax], al           
>>    764   2B @0xbfba346a:  0  0             add [eax], al           
>>    765   2B @0xbfba346c:  0  0             add [eax], al           
>>    766   2B @0xbfba346e:  0  0             add [eax], al           
>>    767   2B @0xbfba3470:  0  0             add [eax], al           
>>    768   2B @0xbfba3472:  0  0             add [eax], al           
>>    769   2B @0xbfba3474:  0  0             add [eax], al           
>>    770   2B @0xbfba3476:  0  0             add [eax], al           
>>    771   2B @0xbfba3478:  0  0             add [eax], al           
>>    772   2B @0xbfba347a:  0  0             add [eax], al           
>>    773   2B @0xbfba347c:  0  0             add [eax], al           
>>    774   2B @0xbfba347e:  0  0             add [eax], al           
>>    775   2B @0xbfba3480:  0  0             add [eax], al           
>>    776   2B @0xbfba3482:  0  0             add [eax], al           
>>    777   2B @0xbfba3484:  0  0             add [eax], al           
>>    778   2B @0xbfba3486:  0  0             add [eax], al           
>>    779   2B @0xbfba3488:  0  0             add [eax], al           
>>    780   2B @0xbfba348a:  0  0             add [eax], al           
>>    781   2B @0xbfba348c:  0  0             add [eax], al           
>>    782   2B @0xbfba348e:  0  0             add [eax], al           
>>    783   2B @0xbfba3490:  0  0             add [eax], al           
>>    784   2B @0xbfba3492:  0  0             add [eax], al           
>>    785   2B @0xbfba3494:  0  0             add [eax], al           
>>    786   2B @0xbfba3496:  0  0             add [eax], al           
>>    787   2B @0xbfba3498:  0  0             add [eax], al           
>>    788   2B @0xbfba349a:  0  0             add [eax], al           
>>    789   2B @0xbfba349c:  0  0             add [eax], al           
>>    790   2B @0xbfba349e:  0  0             add [eax], al           
>>    791   2B @0xbfba34a0:  0  0             add [eax], al           
>>    792   2B @0xbfba34a2:  0  0             add [eax], al           
>>    793   2B @0xbfba34a4:  0  0             add [eax], al           
>>    794   2B @0xbfba34a6:  0  0             add [eax], al           
>>    795   2B @0xbfba34a8:  0  0             add [eax], al           
>>    796   2B @0xbfba34aa:  0  0             add [eax], al           
>>    797   2B @0xbfba34ac:  0  0             add [eax], al           
>>    798   2B @0xbfba34ae:  0  0             add [eax], al           
>>    799   2B @0xbfba34b0:  0  0             add [eax], al           
>>    800   2B @0xbfba34b2:  0  0             add [eax], al           
>>    801   2B @0xbfba34b4:  0  0             add [eax], al           
>>    802   2B @0xbfba34b6:  0  0             add [eax], al           
>>    803   2B @0xbfba34b8:  0  0             add [eax], al           
>>    804   2B @0xbfba34ba:  0  0             add [eax], al           
>>    805   2B @0xbfba34bc:  0  0             add [eax], al           
>>    806   2B @0xbfba34be:  0  0             add [eax], al           
>>    807   2B @0xbfba34c0:  0  0             add [eax], al           
>>    808   2B @0xbfba34c2:  0  0             add [eax], al           
>>    809   2B @0xbfba34c4:  0  0             add [eax], al           
>>    810   2B @0xbfba34c6:  0  0             add [eax], al           
>>    811   2B @0xbfba34c8:  0  0             add [eax], al           
>>    812   2B @0xbfba34ca:  0  0             add [eax], al           
>>    813   2B @0xbfba34cc:  0  0             add [eax], al           
>>    814   2B @0xbfba34ce:  0  0             add [eax], al           
>>    815   2B @0xbfba34d0:  0  0             add [eax], al           
>>    816   2B @0xbfba34d2:  0  0             add [eax], al           
>>    817   2B @0xbfba34d4:  0  0             add [eax], al           
>>    818   2B @0xbfba34d6:  0  0             add [eax], al           
>>    819   2B @0xbfba34d8:  0  0             add [eax], al           
>>    820   2B @0xbfba34da:  0  0             add [eax], al           
>>    821   2B @0xbfba34dc:  0  0             add [eax], al           
>>    822   2B @0xbfba34de:  0  0             add [eax], al           
>>    823   2B @0xbfba34e0:  0  0             add [eax], al           
>>    824   2B @0xbfba34e2:  0  0             add [eax], al           
>>    825   2B @0xbfba34e4:  0  0             add [eax], al           
>>    826   2B @0xbfba34e6:  0  0             add [eax], al           
>>    827   2B @0xbfba34e8:  0  0             add [eax], al           
>>    828   2B @0xbfba34ea:  0  0             add [eax], al           
>>    829   2B @0xbfba34ec:  0  0             add [eax], al           
>>    830   2B @0xbfba34ee:  0  0             add [eax], al           
>>    831   2B @0xbfba34f0:  0  0             add [eax], al           
>>    832   2B @0xbfba34f2:  0  0             add [eax], al           
>>    833   2B @0xbfba34f4:  0  0             add [eax], al           
>>    834   2B @0xbfba34f6:  0  0             add [eax], al           
>>    835   2B @0xbfba34f8:  0  0             add [eax], al           
>>    836   2B @0xbfba34fa:  0  0             add [eax], al           
>>    837   2B @0xbfba34fc:  0  0             add [eax], al           
>>    838   2B @0xbfba34fe:  0  0             add [eax], al           
>>    839   2B @0xbfba3500:  0  0             add [eax], al           
>>    840   2B @0xbfba3502:  0  0             add [eax], al           
>>    841   2B @0xbfba3504:  0  0             add [eax], al           
>>    842   2B @0xbfba3506:  0  0             add [eax], al           
>>    843   2B @0xbfba3508:  0  0             add [eax], al           
>>    844   2B @0xbfba350a:  0  0             add [eax], al           
>>    845   2B @0xbfba350c:  0  0             add [eax], al           
>>    846   2B @0xbfba350e:  0  0             add [eax], al           
>>    847   2B @0xbfba3510:  0  0             add [eax], al           
>>    848   2B @0xbfba3512:  0  0             add [eax], al           
>>    849   2B @0xbfba3514:  0  0             add [eax], al           
>>    850   2B @0xbfba3516:  0  0             add [eax], al           
>>    851   2B @0xbfba3518:  0  0             add [eax], al           
>>    852   2B @0xbfba351a:  0  0             add [eax], al           
>>    853   2B @0xbfba351c:  0  0             add [eax], al           
>>    854   2B @0xbfba351e:  0  0             add [eax], al           
>>    855   2B @0xbfba3520:  0  0             add [eax], al           
>>    856   2B @0xbfba3522:  0  0             add [eax], al           
>>    857   2B @0xbfba3524:  0  0             add [eax], al           
>>    858   2B @0xbfba3526:  0  0             add [eax], al           
>>    859   2B @0xbfba3528:  0  0             add [eax], al           
>>    860   2B @0xbfba352a:  0  0             add [eax], al           
>>    861   2B @0xbfba352c:  0  0             add [eax], al           
>>    862   2B @0xbfba352e:  0  0             add [eax], al           
>>    863   2B @0xbfba3530:  0  0             add [eax], al           
>>    864   2B @0xbfba3532:  0  0             add [eax], al           
>>    865   2B @0xbfba3534:  0  0             add [eax], al           
>>    866   2B @0xbfba3536:  0  0             add [eax], al           
>>    867   2B @0xbfba3538:  0  0             add [eax], al           
>>    868   2B @0xbfba353a:  0  0             add [eax], al           
>>    869   2B @0xbfba353c:  0  0             add [eax], al           
>>    870   2B @0xbfba353e:  0  0             add [eax], al           
>>    871   2B @0xbfba3540:  0  0             add [eax], al           
>>    872   2B @0xbfba3542:  0  0             add [eax], al           
>>    873   2B @0xbfba3544:  0  0             add [eax], al           
>>    874   2B @0xbfba3546:  0  0             add [eax], al           
>>    875   2B @0xbfba3548:  0  0             add [eax], al           
>>    876   2B @0xbfba354a:  0  0             add [eax], al           
>>    877   2B @0xbfba354c:  0  0             add [eax], al           
>>    878   2B @0xbfba354e:  0  0             add [eax], al           
>>    879   2B @0xbfba3550:  0  0             add [eax], al           
>>    880   2B @0xbfba3552:  0  0             add [eax], al           
>>    881   2B @0xbfba3554:  0  0             add [eax], al           
>>    882   2B @0xbfba3556:  0  0             add [eax], al           
>>    883   2B @0xbfba3558:  0  0             add [eax], al           
>>    884   2B @0xbfba355a:  0  0             add [eax], al           
>>    885   2B @0xbfba355c:  0  0             add [eax], al           
>>    886   2B @0xbfba355e:  0  0             add [eax], al           
>>    887   2B @0xbfba3560:  0  0             add [eax], al           
>>    888   2B @0xbfba3562:  0  0             add [eax], al           
>>    889   2B @0xbfba3564:  0  0             add [eax], al           
>>    890   2B @0xbfba3566:  0  0             add [eax], al           
>>    891   2B @0xbfba3568:  0  0             add [eax], al           
>>    892   2B @0xbfba356a:  0  0             add [eax], al           
>>    893   2B @0xbfba356c:  0  0             add [eax], al           
>>    894   2B @0xbfba356e:  0  0             add [eax], al           
>>    895   2B @0xbfba3570:  0  0             add [eax], al           
>>    896   2B @0xbfba3572:  0  0             add [eax], al           
>>    897   2B @0xbfba3574:  0  0             add [eax], al           
>>    898   2B @0xbfba3576:  0  0             add [eax], al           
>>    899   2B @0xbfba3578:  0  0             add [eax], al           
>>    900   2B @0xbfba357a:  0  0             add [eax], al           
>>    901   2B @0xbfba357c:  0  0             add [eax], al           
>>    902   2B @0xbfba357e:  0  0             add [eax], al           
>>    903   2B @0xbfba3580: eb 13             jmp 0x15                
>>    904   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    905   1B @0xbfba3582: 59                pop ecx                 
>>    906   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    907   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    908   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    909   1B @0xbfba3589: 43                inc ebx                 
>>    910   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    911   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    912   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (399/404) = 0.987624
>>    Mem_map start_addr: 0xbfba3406, length: 1024B, exec'ed bytes: 399, range: 404B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3400              0000 00000000 00000000        ..........
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

101 [State 135] Terminating state 135 with message 'EIP reached, success'
101 [State 135] Switching from state 135 to state 0
Copied 34928 (count=1)
Deleting state 135 0x0x2302fda0
Firing timer event
101 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 134
>> fuzzInit: datum forking for value 135
>> fuzzInit: datum forking for value 135
101 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 135)
        (ReadLSB w32 0 v135_fuzz_symb_135)))
    state 136 with condition (Not (Eq false
         (Eq (w32 135)
             (ReadLSB w32 0 v135_fuzz_symb_135))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-135-8048a0e
Size=2 Low=0 splitIndex=1 high=1
101 [State 0] Switching from state 0 to state 136
Copied 34928 (count=1)
Finalizing TB execution 136
s2e_dummyMainFunction
tcg-llvm-tb-135-8048a0e
101 [State 136] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 135 not yet applied), shell_len: 1024, eip: 0x00000000

101 [State 136] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
101 [State 136] Leaving buffer range @0xc126f278, c3 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
102 [State 136] Killing state 136
102 [State 136] Terminating state 136 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
102 [State 136] Switching from state 136 to state 0
Copied 34928 (count=1)
Deleting state 136 0x0x2302fda0
Firing timer event
102 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 135
>> fuzzInit: datum forking for value 136
>> fuzzInit: datum forking for value 136
102 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 136)
        (ReadLSB w32 0 v136_fuzz_symb_136)))
    state 137 with condition (Not (Eq false
         (Eq (w32 136)
             (ReadLSB w32 0 v136_fuzz_symb_136))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-136-8048a0e
Size=2 Low=0 splitIndex=1 high=1
102 [State 0] Switching from state 0 to state 137
Copied 34928 (count=1)
Finalizing TB execution 137
s2e_dummyMainFunction
tcg-llvm-tb-136-8048a0e
102 [State 137] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 136 not yet applied), shell_len: 1024, eip: 0x00000000

102 [State 137] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 198 instructions, PCs: bfba3408 bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
102 [State 137] Terminating state 137 with message 'eliminated this false positive, execution path subset of another success'
102 [State 137] Switching from state 137 to state 0
Copied 34928 (count=1)
Deleting state 137 0x0x2302fda0
103 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 136
>> fuzzInit: datum forking for value 137
>> fuzzInit: datum forking for value 137
103 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 137)
        (ReadLSB w32 0 v137_fuzz_symb_137)))
    state 138 with condition (Not (Eq false
         (Eq (w32 137)
             (ReadLSB w32 0 v137_fuzz_symb_137))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-137-8048a0e
Size=2 Low=0 splitIndex=1 high=1
103 [State 0] Switching from state 0 to state 138
Copied 34928 (count=1)
Finalizing TB execution 138
s2e_dummyMainFunction
tcg-llvm-tb-137-8048a0e
Firing timer event
103 [State 138] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 137 not yet applied), shell_len: 1024, eip: 0x00000000

103 [State 138] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
103 [State 138] Leaving buffer range @0xc126f278, c2 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
103 [State 138] Killing state 138
103 [State 138] Terminating state 138 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
103 [State 138] Switching from state 138 to state 0
Copied 34928 (count=1)
Deleting state 138 0x0x2306a130
103 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 137
>> fuzzInit: datum forking for value 138
>> fuzzInit: datum forking for value 138
103 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 138)
        (ReadLSB w32 0 v138_fuzz_symb_138)))
    state 139 with condition (Not (Eq false
         (Eq (w32 138)
             (ReadLSB w32 0 v138_fuzz_symb_138))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-138-8048a0e
Size=2 Low=0 splitIndex=1 high=1
103 [State 0] Switching from state 0 to state 139
Copied 34928 (count=1)
Finalizing TB execution 139
s2e_dummyMainFunction
tcg-llvm-tb-138-8048a0e
Firing timer event
104 [State 139] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 138 not yet applied), shell_len: 1024, eip: 0x00000000

104 [State 139] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 197 instructions, PCs: bfba340a bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
104 [State 139] Terminating state 139 with message 'eliminated this false positive, execution path subset of another success'
104 [State 139] Switching from state 139 to state 0
Copied 34928 (count=1)
Deleting state 139 0x0x2306a130
104 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 138
>> fuzzInit: datum forking for value 139
>> fuzzInit: datum forking for value 139
104 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 139)
        (ReadLSB w32 0 v139_fuzz_symb_139)))
    state 140 with condition (Not (Eq false
         (Eq (w32 139)
             (ReadLSB w32 0 v139_fuzz_symb_139))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-139-8048a0e
Size=2 Low=0 splitIndex=1 high=1
104 [State 0] Switching from state 0 to state 140
Copied 34928 (count=1)
Finalizing TB execution 140
s2e_dummyMainFunction
tcg-llvm-tb-139-8048a0e
105 [State 140] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 139 not yet applied), shell_len: 1024, eip: 0x00000000

105 [State 140] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
105 [State 140] Leaving buffer range @0xc126f278, c1 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
105 [State 140] Killing state 140
105 [State 140] Terminating state 140 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
105 [State 140] Switching from state 140 to state 0
Copied 34928 (count=1)
Deleting state 140 0x0x2306a130
105 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 139
>> fuzzInit: datum forking for value 140
>> fuzzInit: datum forking for value 140
>> fuzzInit: datum forking for value 140
105 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 140)
        (ReadLSB w32 0 v140_fuzz_symb_140)))
    state 141 with condition (Not (Eq false
         (Eq (w32 140)
             (ReadLSB w32 0 v140_fuzz_symb_140))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-140-8048a0e
Size=2 Low=0 splitIndex=1 high=1
105 [State 0] Switching from state 0 to state 141
Copied 34928 (count=1)
Finalizing TB execution 141
s2e_dummyMainFunction
tcg-llvm-tb-140-8048a0e
105 [State 141] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 140 not yet applied), shell_len: 1024, eip: 0x00000000

105 [State 141] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 196 instructions, PCs: bfba340c bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
106 [State 141] Terminating state 141 with message 'eliminated this false positive, execution path subset of another success'
106 [State 141] Switching from state 141 to state 0
Copied 34928 (count=1)
Deleting state 141 0x0x238f4e90
Firing timer event
106 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 140
>> fuzzInit: datum forking for value 141
>> fuzzInit: datum forking for value 141
106 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 141)
        (ReadLSB w32 0 v141_fuzz_symb_141)))
    state 142 with condition (Not (Eq false
         (Eq (w32 141)
             (ReadLSB w32 0 v141_fuzz_symb_141))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-141-8048a0e
Size=2 Low=0 splitIndex=1 high=1
106 [State 0] Switching from state 0 to state 142
Copied 34928 (count=1)
Finalizing TB execution 142
s2e_dummyMainFunction
tcg-llvm-tb-141-8048a0e
106 [State 142] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 141 not yet applied), shell_len: 1024, eip: 0x00000000

106 [State 142] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
106 [State 142] Leaving buffer range @0xc126f278, c0 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
107 [State 142] Killing state 142
107 [State 142] Terminating state 142 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
107 [State 142] Switching from state 142 to state 0
Copied 34928 (count=1)
Deleting state 142 0x0x238f4e90
Firing timer event
107 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 141
>> fuzzInit: datum forking for value 142
>> fuzzInit: datum forking for value 142
107 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 142)
        (ReadLSB w32 0 v142_fuzz_symb_142)))
    state 143 with condition (Not (Eq false
         (Eq (w32 142)
             (ReadLSB w32 0 v142_fuzz_symb_142))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-142-8048a0e
Size=2 Low=0 splitIndex=1 high=1
107 [State 0] Switching from state 0 to state 143
Copied 34928 (count=1)
Finalizing TB execution 143
s2e_dummyMainFunction
tcg-llvm-tb-142-8048a0e
107 [State 143] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 142 not yet applied), shell_len: 1024, eip: 0x00000000

107 [State 143] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 195 instructions, PCs: bfba340e bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
107 [State 143] Terminating state 143 with message 'eliminated this false positive, execution path subset of another success'
107 [State 143] Switching from state 143 to state 0
Copied 34928 (count=1)
Deleting state 143 0x0x23a59150
108 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 142
>> fuzzInit: datum forking for value 143
>> fuzzInit: datum forking for value 143
108 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 143)
        (ReadLSB w32 0 v143_fuzz_symb_143)))
    state 144 with condition (Not (Eq false
         (Eq (w32 143)
             (ReadLSB w32 0 v143_fuzz_symb_143))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-143-8048a0e
Size=2 Low=0 splitIndex=1 high=1
108 [State 0] Switching from state 0 to state 144
Copied 34928 (count=1)
Finalizing TB execution 144
s2e_dummyMainFunction
tcg-llvm-tb-143-8048a0e
Firing timer event
108 [State 144] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 143 not yet applied), shell_len: 1024, eip: 0x00000000

108 [State 144] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
108 [State 144] Leaving buffer range @0xc126f278, bf IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
108 [State 144] Killing state 144
108 [State 144] Terminating state 144 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
108 [State 144] Switching from state 144 to state 0
Copied 34928 (count=1)
Deleting state 144 0x0x23a41920
109 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 143
>> fuzzInit: datum forking for value 144
>> fuzzInit: datum forking for value 144
109 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 144)
        (ReadLSB w32 0 v144_fuzz_symb_144)))
    state 145 with condition (Not (Eq false
         (Eq (w32 144)
             (ReadLSB w32 0 v144_fuzz_symb_144))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-144-8048a0e
Size=2 Low=0 splitIndex=1 high=1
109 [State 0] Switching from state 0 to state 145
Copied 34928 (count=1)
Finalizing TB execution 145
s2e_dummyMainFunction
tcg-llvm-tb-144-8048a0e
Firing timer event
109 [State 145] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 144 not yet applied), shell_len: 1024, eip: 0x00000000

109 [State 145] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 194 instructions, PCs: bfba3410 bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
109 [State 145] Terminating state 145 with message 'eliminated this false positive, execution path subset of another success'
109 [State 145] Switching from state 145 to state 0
Copied 34928 (count=1)
Deleting state 145 0x0x23a41920
109 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 144
>> fuzzInit: datum forking for value 145
>> fuzzInit: datum forking for value 145
109 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 145)
        (ReadLSB w32 0 v145_fuzz_symb_145)))
    state 146 with condition (Not (Eq false
         (Eq (w32 145)
             (ReadLSB w32 0 v145_fuzz_symb_145))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-145-8048a0e
Size=2 Low=0 splitIndex=1 high=1
109 [State 0] Switching from state 0 to state 146
Copied 34928 (count=1)
Finalizing TB execution 146
s2e_dummyMainFunction
tcg-llvm-tb-145-8048a0e
110 [State 146] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 145 not yet applied), shell_len: 1024, eip: 0x00000000

110 [State 146] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
110 [State 146] Leaving buffer range @0xc126f278, be IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
110 [State 146] Killing state 146
110 [State 146] Terminating state 146 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
110 [State 146] Switching from state 146 to state 0
Copied 34928 (count=1)
Deleting state 146 0x0x23a41920
Firing timer event
110 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 145
>> fuzzInit: datum forking for value 146
>> fuzzInit: datum forking for value 146
110 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 146)
        (ReadLSB w32 0 v146_fuzz_symb_146)))
    state 147 with condition (Not (Eq false
         (Eq (w32 146)
             (ReadLSB w32 0 v146_fuzz_symb_146))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-146-8048a0e
Size=2 Low=0 splitIndex=1 high=1
110 [State 0] Switching from state 0 to state 147
Copied 34928 (count=1)
Finalizing TB execution 147
s2e_dummyMainFunction
tcg-llvm-tb-146-8048a0e
110 [State 147] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 146 not yet applied), shell_len: 1024, eip: 0x00000000

110 [State 147] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 193 instructions, PCs: bfba3412 bfba3414 bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
111 [State 147] Terminating state 147 with message 'eliminated this false positive, execution path subset of another success'
111 [State 147] Switching from state 147 to state 0
Copied 34928 (count=1)
Deleting state 147 0x0x23a41920
111 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 146
>> fuzzInit: datum forking for value 147
>> fuzzInit: datum forking for value 147
111 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 147)
        (ReadLSB w32 0 v147_fuzz_symb_147)))
    state 148 with condition (Not (Eq false
         (Eq (w32 147)
             (ReadLSB w32 0 v147_fuzz_symb_147))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-147-8048a0e
Size=2 Low=0 splitIndex=1 high=1
111 [State 0] Switching from state 0 to state 148
Copied 34928 (count=1)
Finalizing TB execution 148
s2e_dummyMainFunction
tcg-llvm-tb-147-8048a0e
Firing timer event
111 [State 148] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 147 not yet applied), shell_len: 1024, eip: 0x00000000

111 [State 148] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
111 [State 148] Leaving buffer range @0xc1003072, 25 IoB insns; prev insn @0xbfba345b
  1   2B @0xbfba345b:  0  0             add [eax], al           
111 [State 148] Entering buffer range @0xbfba345d, 48 OoB insns
111 [State 148] Leaving buffer range @0xc126f278, 98 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
111 [State 148] Killing state 148
111 [State 148] Terminating state 148 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
111 [State 148] Switching from state 148 to state 0
Copied 34928 (count=1)
Deleting state 148 0x0x23a41920
112 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 147
>> fuzzInit: datum forking for value 148
>> fuzzInit: datum forking for value 148
112 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 148)
        (ReadLSB w32 0 v148_fuzz_symb_148)))
    state 149 with condition (Not (Eq false
         (Eq (w32 148)
             (ReadLSB w32 0 v148_fuzz_symb_148))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-148-8048a0e
Size=2 Low=0 splitIndex=1 high=1
112 [State 0] Switching from state 0 to state 149
Copied 34928 (count=1)
Finalizing TB execution 149
s2e_dummyMainFunction
tcg-llvm-tb-148-8048a0e
Firing timer event
112 [State 149] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 148 not yet applied), shell_len: 1024, eip: 0x00000000

112 [State 149] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
112 [State 149] Leaving buffer range @0xc1003072, 25 IoB insns; prev insn @0xbfba345c
  1   2B @0xbfba345c:  0  0             add [eax], al           
112 [State 149] Entering buffer range @0xbfba345e, 1 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 193. This is the 8th success
>> Success densities, overlay: 0.987179; avg: 0.987179
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3414:  0  0             add [eax], al           
>>      2   2B @0xbfba3416:  0  0             add [eax], al           
>>      3   2B @0xbfba3418:  0  0             add [eax], al           
>>      4   2B @0xbfba341a:  0  0             add [eax], al           
>>      5   2B @0xbfba341c:  0  0             add [eax], al           
>>      6   2B @0xbfba341e:  0  0             add [eax], al           
>>      7   2B @0xbfba3420:  0  0             add [eax], al           
>>      8   2B @0xbfba3422:  0  0             add [eax], al           
>>      9   2B @0xbfba3424:  0  0             add [eax], al           
>>     10   2B @0xbfba3426:  0  0             add [eax], al           
>>     11   2B @0xbfba3428:  0  0             add [eax], al           
>>     12   2B @0xbfba342a:  0  0             add [eax], al           
>>     13   2B @0xbfba342c:  0  0             add [eax], al           
>>     14   2B @0xbfba342e:  0  0             add [eax], al           
>>     15   2B @0xbfba3430:  0  0             add [eax], al           
>>     16   2B @0xbfba3432:  0  0             add [eax], al           
>>     17   2B @0xbfba3434:  0  0             add [eax], al           
>>     18   2B @0xbfba3436:  0  0             add [eax], al           
>>     19   2B @0xbfba3438:  0  0             add [eax], al           
>>     20   2B @0xbfba343a:  0  0             add [eax], al           
>>     21   2B @0xbfba343c:  0  0             add [eax], al           
>>     22   2B @0xbfba343e:  0  0             add [eax], al           
>>     23   2B @0xbfba3440:  0  0             add [eax], al           
>>     24   2B @0xbfba3442:  0  0             add [eax], al           
>>     25   2B @0xbfba3444:  0  0             add [eax], al           
>>     26   2B @0xbfba3446:  0  0             add [eax], al           
>>     27   2B @0xbfba3448:  0  0             add [eax], al           
>>     28   2B @0xbfba344a:  0  0             add [eax], al           
>>     29   2B @0xbfba344c:  0  0             add [eax], al           
>>     30   2B @0xbfba344e:  0  0             add [eax], al           
>>     31   2B @0xbfba3450:  0  0             add [eax], al           
>>     32   2B @0xbfba3452:  0  0             add [eax], al           
>>     33   2B @0xbfba3454:  0  0             add [eax], al           
>>     34   2B @0xbfba3456:  0  0             add [eax], al           
>>     35   2B @0xbfba3458:  0  0             add [eax], al           
>>     36   2B @0xbfba345a:  0  0             add [eax], al           
>>     37   2B @0xbfba345c:  0  0             add [eax], al           
>>     38   5B @0xc1003072: OOB, bytes not captured
>>     39   2B @0xbfba345e:  0  0             add [eax], al           
>>     40   2B @0xbfba3460:  0  0             add [eax], al           
>>     41   2B @0xbfba3462:  0  0             add [eax], al           
>>     42   2B @0xbfba3464:  0  0             add [eax], al           
>>     43   2B @0xbfba3466:  0  0             add [eax], al           
>>     44   2B @0xbfba3468:  0  0             add [eax], al           
>>     45   2B @0xbfba346a:  0  0             add [eax], al           
>>     46   2B @0xbfba346c:  0  0             add [eax], al           
>>     47   2B @0xbfba346e:  0  0             add [eax], al           
>>     48   2B @0xbfba3470:  0  0             add [eax], al           
>>     49   2B @0xbfba3472:  0  0             add [eax], al           
>>     50   2B @0xbfba3474:  0  0             add [eax], al           
>>     51   2B @0xbfba3476:  0  0             add [eax], al           
>>     52   2B @0xbfba3478:  0  0             add [eax], al           
>>     53   2B @0xbfba347a:  0  0             add [eax], al           
>>     54   2B @0xbfba347c:  0  0             add [eax], al           
>>     55   2B @0xbfba347e:  0  0             add [eax], al           
>>     56   2B @0xbfba3480:  0  0             add [eax], al           
>>     57   2B @0xbfba3482:  0  0             add [eax], al           
>>     58   2B @0xbfba3484:  0  0             add [eax], al           
>>     59   2B @0xbfba3486:  0  0             add [eax], al           
>>     60   2B @0xbfba3488:  0  0             add [eax], al           
>>     61   2B @0xbfba348a:  0  0             add [eax], al           
>>     62   2B @0xbfba348c:  0  0             add [eax], al           
>>     63   2B @0xbfba348e:  0  0             add [eax], al           
>>     64   2B @0xbfba3490:  0  0             add [eax], al           
>>     65   2B @0xbfba3492:  0  0             add [eax], al           
>>     66   2B @0xbfba3494:  0  0             add [eax], al           
>>     67   2B @0xbfba3496:  0  0             add [eax], al           
>>     68   2B @0xbfba3498:  0  0             add [eax], al           
>>     69   2B @0xbfba349a:  0  0             add [eax], al           
>>     70   2B @0xbfba349c:  0  0             add [eax], al           
>>     71   2B @0xbfba349e:  0  0             add [eax], al           
>>     72   2B @0xbfba34a0:  0  0             add [eax], al           
>>     73   2B @0xbfba34a2:  0  0             add [eax], al           
>>     74   2B @0xbfba34a4:  0  0             add [eax], al           
>>     75   2B @0xbfba34a6:  0  0             add [eax], al           
>>     76   2B @0xbfba34a8:  0  0             add [eax], al           
>>     77   2B @0xbfba34aa:  0  0             add [eax], al           
>>     78   2B @0xbfba34ac:  0  0             add [eax], al           
>>     79   2B @0xbfba34ae:  0  0             add [eax], al           
>>     80   2B @0xbfba34b0:  0  0             add [eax], al           
>>     81   2B @0xbfba34b2:  0  0             add [eax], al           
>>     82   2B @0xbfba34b4:  0  0             add [eax], al           
>>     83   2B @0xbfba34b6:  0  0             add [eax], al           
>>     84   2B @0xbfba34b8:  0  0             add [eax], al           
>>     85   2B @0xbfba34ba:  0  0             add [eax], al           
>>     86   2B @0xbfba34bc:  0  0             add [eax], al           
>>     87   2B @0xbfba34be:  0  0             add [eax], al           
>>     88   2B @0xbfba34c0:  0  0             add [eax], al           
>>     89   2B @0xbfba34c2:  0  0             add [eax], al           
>>     90   2B @0xbfba34c4:  0  0             add [eax], al           
>>     91   2B @0xbfba34c6:  0  0             add [eax], al           
>>     92   2B @0xbfba34c8:  0  0             add [eax], al           
>>     93   2B @0xbfba34ca:  0  0             add [eax], al           
>>     94   2B @0xbfba34cc:  0  0             add [eax], al           
>>     95   2B @0xbfba34ce:  0  0             add [eax], al           
>>     96   2B @0xbfba34d0:  0  0             add [eax], al           
>>     97   2B @0xbfba34d2:  0  0             add [eax], al           
>>     98   2B @0xbfba34d4:  0  0             add [eax], al           
>>     99   2B @0xbfba34d6:  0  0             add [eax], al           
>>    100   2B @0xbfba34d8:  0  0             add [eax], al           
>>    101   2B @0xbfba34da:  0  0             add [eax], al           
>>    102   2B @0xbfba34dc:  0  0             add [eax], al           
>>    103   2B @0xbfba34de:  0  0             add [eax], al           
>>    104   2B @0xbfba34e0:  0  0             add [eax], al           
>>    105   2B @0xbfba34e2:  0  0             add [eax], al           
>>    106   2B @0xbfba34e4:  0  0             add [eax], al           
>>    107   2B @0xbfba34e6:  0  0             add [eax], al           
>>    108   2B @0xbfba34e8:  0  0             add [eax], al           
>>    109   2B @0xbfba34ea:  0  0             add [eax], al           
>>    110   2B @0xbfba34ec:  0  0             add [eax], al           
>>    111   2B @0xbfba34ee:  0  0             add [eax], al           
>>    112   2B @0xbfba34f0:  0  0             add [eax], al           
>>    113   2B @0xbfba34f2:  0  0             add [eax], al           
>>    114   2B @0xbfba34f4:  0  0             add [eax], al           
>>    115   2B @0xbfba34f6:  0  0             add [eax], al           
>>    116   2B @0xbfba34f8:  0  0             add [eax], al           
>>    117   2B @0xbfba34fa:  0  0             add [eax], al           
>>    118   2B @0xbfba34fc:  0  0             add [eax], al           
>>    119   2B @0xbfba34fe:  0  0             add [eax], al           
>>    120   2B @0xbfba3500:  0  0             add [eax], al           
>>    121   2B @0xbfba3502:  0  0             add [eax], al           
>>    122   2B @0xbfba3504:  0  0             add [eax], al           
>>    123   2B @0xbfba3506:  0  0             add [eax], al           
>>    124   2B @0xbfba3508:  0  0             add [eax], al           
>>    125   2B @0xbfba350a:  0  0             add [eax], al           
>>    126   2B @0xbfba350c:  0  0             add [eax], al           
>>    127   2B @0xbfba350e:  0  0             add [eax], al           
>>    128   2B @0xbfba3510:  0  0             add [eax], al           
>>    129   2B @0xbfba3512:  0  0             add [eax], al           
>>    130   2B @0xbfba3514:  0  0             add [eax], al           
>>    131   2B @0xbfba3516:  0  0             add [eax], al           
>>    132   2B @0xbfba3518:  0  0             add [eax], al           
>>    133   2B @0xbfba351a:  0  0             add [eax], al           
>>    134   2B @0xbfba351c:  0  0             add [eax], al           
>>    135   2B @0xbfba351e:  0  0             add [eax], al           
>>    136   2B @0xbfba3520:  0  0             add [eax], al           
>>    137   2B @0xbfba3522:  0  0             add [eax], al           
>>    138   2B @0xbfba3524:  0  0             add [eax], al           
>>    139   2B @0xbfba3526:  0  0             add [eax], al           
>>    140   2B @0xbfba3528:  0  0             add [eax], al           
>>    141   2B @0xbfba352a:  0  0             add [eax], al           
>>    142   2B @0xbfba352c:  0  0             add [eax], al           
>>    143   2B @0xbfba352e:  0  0             add [eax], al           
>>    144   2B @0xbfba3530:  0  0             add [eax], al           
>>    145   2B @0xbfba3532:  0  0             add [eax], al           
>>    146   2B @0xbfba3534:  0  0             add [eax], al           
>>    147   2B @0xbfba3536:  0  0             add [eax], al           
>>    148   2B @0xbfba3538:  0  0             add [eax], al           
>>    149   2B @0xbfba353a:  0  0             add [eax], al           
>>    150   2B @0xbfba353c:  0  0             add [eax], al           
>>    151   2B @0xbfba353e:  0  0             add [eax], al           
>>    152   2B @0xbfba3540:  0  0             add [eax], al           
>>    153   2B @0xbfba3542:  0  0             add [eax], al           
>>    154   2B @0xbfba3544:  0  0             add [eax], al           
>>    155   2B @0xbfba3546:  0  0             add [eax], al           
>>    156   2B @0xbfba3548:  0  0             add [eax], al           
>>    157   2B @0xbfba354a:  0  0             add [eax], al           
>>    158   2B @0xbfba354c:  0  0             add [eax], al           
>>    159   2B @0xbfba354e:  0  0             add [eax], al           
>>    160   2B @0xbfba3550:  0  0             add [eax], al           
>>    161   2B @0xbfba3552:  0  0             add [eax], al           
>>    162   2B @0xbfba3554:  0  0             add [eax], al           
>>    163   2B @0xbfba3556:  0  0             add [eax], al           
>>    164   2B @0xbfba3558:  0  0             add [eax], al           
>>    165   2B @0xbfba355a:  0  0             add [eax], al           
>>    166   2B @0xbfba355c:  0  0             add [eax], al           
>>    167   2B @0xbfba355e:  0  0             add [eax], al           
>>    168   2B @0xbfba3560:  0  0             add [eax], al           
>>    169   2B @0xbfba3562:  0  0             add [eax], al           
>>    170   2B @0xbfba3564:  0  0             add [eax], al           
>>    171   2B @0xbfba3566:  0  0             add [eax], al           
>>    172   2B @0xbfba3568:  0  0             add [eax], al           
>>    173   2B @0xbfba356a:  0  0             add [eax], al           
>>    174   2B @0xbfba356c:  0  0             add [eax], al           
>>    175   2B @0xbfba356e:  0  0             add [eax], al           
>>    176   2B @0xbfba3570:  0  0             add [eax], al           
>>    177   2B @0xbfba3572:  0  0             add [eax], al           
>>    178   2B @0xbfba3574:  0  0             add [eax], al           
>>    179   2B @0xbfba3576:  0  0             add [eax], al           
>>    180   2B @0xbfba3578:  0  0             add [eax], al           
>>    181   2B @0xbfba357a:  0  0             add [eax], al           
>>    182   2B @0xbfba357c:  0  0             add [eax], al           
>>    183   2B @0xbfba357e:  0  0             add [eax], al           
>>    184   2B @0xbfba3580: eb 13             jmp 0x15                
>>    185   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    186   1B @0xbfba3582: 59                pop ecx                 
>>    187   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    188   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    189   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    190   1B @0xbfba3589: 43                inc ebx                 
>>    191   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    192   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    193   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (385/390) = 0.987179
>>    Mem_map start_addr: 0xbfba3414, length: 1024B, exec'ed bytes: 385, range: 390B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3410          00000000 00000000 00000000      ............
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

112 [State 149] Terminating state 149 with message 'EIP reached, success'
112 [State 149] Switching from state 149 to state 0
Copied 34928 (count=1)
Deleting state 149 0x0x23a41920
113 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 148
>> fuzzInit: datum forking for value 149
>> fuzzInit: datum forking for value 149
113 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 149)
        (ReadLSB w32 0 v149_fuzz_symb_149)))
    state 150 with condition (Not (Eq false
         (Eq (w32 149)
             (ReadLSB w32 0 v149_fuzz_symb_149))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-149-8048a0e
Size=2 Low=0 splitIndex=1 high=1
113 [State 0] Switching from state 0 to state 150
Copied 34928 (count=1)
Finalizing TB execution 150
s2e_dummyMainFunction
tcg-llvm-tb-149-8048a0e
Firing timer event
113 [State 150] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 149 not yet applied), shell_len: 1024, eip: 0x00000000

113 [State 150] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
113 [State 150] Leaving buffer range @0xc126f278, b8 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
113 [State 150] Killing state 150
113 [State 150] Terminating state 150 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
113 [State 150] Switching from state 150 to state 0
Copied 34928 (count=1)
Deleting state 150 0x0x23a41920
114 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 149
>> fuzzInit: datum forking for value 150
>> fuzzInit: datum forking for value 150
114 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 150)
        (ReadLSB w32 0 v150_fuzz_symb_150)))
    state 151 with condition (Not (Eq false
         (Eq (w32 150)
             (ReadLSB w32 0 v150_fuzz_symb_150))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-150-8048a0e
Size=2 Low=0 splitIndex=1 high=1
114 [State 0] Switching from state 0 to state 151
Copied 34928 (count=1)
Finalizing TB execution 151
s2e_dummyMainFunction
tcg-llvm-tb-150-8048a0e
Firing timer event
114 [State 151] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 150 not yet applied), shell_len: 1024, eip: 0x00000000

114 [State 151] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 191 instructions, PCs: bfba3416 bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
114 [State 151] Terminating state 151 with message 'eliminated this false positive, execution path subset of another success'
114 [State 151] Switching from state 151 to state 0
Copied 34928 (count=1)
Deleting state 151 0x0x23ca6280
114 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 150
>> fuzzInit: datum forking for value 151
>> fuzzInit: datum forking for value 151
114 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 151)
        (ReadLSB w32 0 v151_fuzz_symb_151)))
    state 152 with condition (Not (Eq false
         (Eq (w32 151)
             (ReadLSB w32 0 v151_fuzz_symb_151))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-151-8048a0e
Size=2 Low=0 splitIndex=1 high=1
114 [State 0] Switching from state 0 to state 152
Copied 34928 (count=1)
Finalizing TB execution 152
s2e_dummyMainFunction
tcg-llvm-tb-151-8048a0e
115 [State 152] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 151 not yet applied), shell_len: 1024, eip: 0x00000000

115 [State 152] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
115 [State 152] Leaving buffer range @0xc126f278, b7 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
115 [State 152] Killing state 152
115 [State 152] Terminating state 152 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
115 [State 152] Switching from state 152 to state 0
Copied 34928 (count=1)
Deleting state 152 0x0x23ca6280
115 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 151
>> fuzzInit: datum forking for value 152
>> fuzzInit: datum forking for value 152
115 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 152)
        (ReadLSB w32 0 v152_fuzz_symb_152)))
    state 153 with condition (Not (Eq false
         (Eq (w32 152)
             (ReadLSB w32 0 v152_fuzz_symb_152))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-152-8048a0e
Size=2 Low=0 splitIndex=1 high=1
115 [State 0] Switching from state 0 to state 153
Copied 34928 (count=1)
Finalizing TB execution 153
s2e_dummyMainFunction
tcg-llvm-tb-152-8048a0e
Firing timer event
115 [State 153] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 152 not yet applied), shell_len: 1024, eip: 0x00000000

115 [State 153] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 190 instructions, PCs: bfba3418 bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
115 [State 153] Terminating state 153 with message 'eliminated this false positive, execution path subset of another success'
115 [State 153] Switching from state 153 to state 0
Copied 34928 (count=1)
Deleting state 153 0x0x23ca6280
115 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 152
>> fuzzInit: datum forking for value 153
>> fuzzInit: datum forking for value 153
116 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 153)
        (ReadLSB w32 0 v153_fuzz_symb_153)))
    state 154 with condition (Not (Eq false
         (Eq (w32 153)
             (ReadLSB w32 0 v153_fuzz_symb_153))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-153-8048a0e
Size=2 Low=0 splitIndex=1 high=1
116 [State 0] Switching from state 0 to state 154
Copied 34928 (count=1)
Finalizing TB execution 154
s2e_dummyMainFunction
tcg-llvm-tb-153-8048a0e
116 [State 154] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 153 not yet applied), shell_len: 1024, eip: 0x00000000

116 [State 154] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
116 [State 154] Leaving buffer range @0xc126f278, b7 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
116 [State 154] Killing state 154
116 [State 154] Terminating state 154 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
116 [State 154] Switching from state 154 to state 0
Copied 34928 (count=1)
Deleting state 154 0x0x23ca6280
Firing timer event
116 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 153
>> fuzzInit: datum forking for value 154
>> fuzzInit: datum forking for value 154
116 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 154)
        (ReadLSB w32 0 v154_fuzz_symb_154)))
    state 155 with condition (Not (Eq false
         (Eq (w32 154)
             (ReadLSB w32 0 v154_fuzz_symb_154))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-154-8048a0e
Size=2 Low=0 splitIndex=1 high=1
116 [State 0] Switching from state 0 to state 155
Copied 34928 (count=1)
Finalizing TB execution 155
s2e_dummyMainFunction
tcg-llvm-tb-154-8048a0e
116 [State 155] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 154 not yet applied), shell_len: 1024, eip: 0x00000000

116 [State 155] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 189 instructions, PCs: bfba341a bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
117 [State 155] Terminating state 155 with message 'eliminated this false positive, execution path subset of another success'
117 [State 155] Switching from state 155 to state 0
Copied 34928 (count=1)
Deleting state 155 0x0x23f42d40
117 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 154
>> fuzzInit: datum forking for value 155
>> fuzzInit: datum forking for value 155
117 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 155)
        (ReadLSB w32 0 v155_fuzz_symb_155)))
    state 156 with condition (Not (Eq false
         (Eq (w32 155)
             (ReadLSB w32 0 v155_fuzz_symb_155))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-155-8048a0e
Size=2 Low=0 splitIndex=1 high=1
117 [State 0] Switching from state 0 to state 156
Copied 34928 (count=1)
Finalizing TB execution 156
s2e_dummyMainFunction
tcg-llvm-tb-155-8048a0e
117 [State 156] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 155 not yet applied), shell_len: 1024, eip: 0x00000000

117 [State 156] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
117 [State 156] Leaving buffer range @0xc126f278, b6 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
Firing timer event
117 [State 156] Killing state 156
117 [State 156] Terminating state 156 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
117 [State 156] Switching from state 156 to state 0
Copied 34928 (count=1)
Deleting state 156 0x0x23f42d40
117 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 155
>> fuzzInit: datum forking for value 156
>> fuzzInit: datum forking for value 156
117 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 156)
        (ReadLSB w32 0 v156_fuzz_symb_156)))
    state 157 with condition (Not (Eq false
         (Eq (w32 156)
             (ReadLSB w32 0 v156_fuzz_symb_156))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-156-8048a0e
Size=2 Low=0 splitIndex=1 high=1
117 [State 0] Switching from state 0 to state 157
Copied 34928 (count=1)
Finalizing TB execution 157
s2e_dummyMainFunction
tcg-llvm-tb-156-8048a0e
117 [State 157] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 156 not yet applied), shell_len: 1024, eip: 0x00000000

117 [State 157] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 188 instructions, PCs: bfba341c bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
118 [State 157] Terminating state 157 with message 'eliminated this false positive, execution path subset of another success'
118 [State 157] Switching from state 157 to state 0
Copied 34928 (count=1)
Deleting state 157 0x0x240abf70
118 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 156
>> fuzzInit: datum forking for value 157
>> fuzzInit: datum forking for value 157
118 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 157)
        (ReadLSB w32 0 v157_fuzz_symb_157)))
    state 158 with condition (Not (Eq false
         (Eq (w32 157)
             (ReadLSB w32 0 v157_fuzz_symb_157))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-157-8048a0e
Size=2 Low=0 splitIndex=1 high=1
118 [State 0] Switching from state 0 to state 158
Copied 34928 (count=1)
Finalizing TB execution 158
s2e_dummyMainFunction
tcg-llvm-tb-157-8048a0e
118 [State 158] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 157 not yet applied), shell_len: 1024, eip: 0x00000000

118 [State 158] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
118 [State 158] Leaving buffer range @0xc126f278, b6 IoB insns; prev insn @0xbfba3591
  1   3B @0xbfba3591:  1 4b cd          add [ebx-0x33], ecx     
Firing timer event
118 [State 158] Killing state 158
118 [State 158] Terminating state 158 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
118 [State 158] Switching from state 158 to state 0
Copied 34928 (count=1)
Deleting state 158 0x0x242d83a0
118 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 157
>> fuzzInit: datum forking for value 158
>> fuzzInit: datum forking for value 158
118 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 158)
        (ReadLSB w32 0 v158_fuzz_symb_158)))
    state 159 with condition (Not (Eq false
         (Eq (w32 158)
             (ReadLSB w32 0 v158_fuzz_symb_158))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-158-8048a0e
Size=2 Low=0 splitIndex=1 high=1
118 [State 0] Switching from state 0 to state 159
Copied 34928 (count=1)
Finalizing TB execution 159
s2e_dummyMainFunction
tcg-llvm-tb-158-8048a0e
118 [State 159] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 158 not yet applied), shell_len: 1024, eip: 0x00000000

118 [State 159] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 187 instructions, PCs: bfba341e bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
119 [State 159] Terminating state 159 with message 'eliminated this false positive, execution path subset of another success'
119 [State 159] Switching from state 159 to state 0
Copied 34928 (count=1)
Deleting state 159 0x0x242d83a0
119 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 158
>> fuzzInit: datum forking for value 159
>> fuzzInit: datum forking for value 159
119 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 159)
        (ReadLSB w32 0 v159_fuzz_symb_159)))
    state 160 with condition (Not (Eq false
         (Eq (w32 159)
             (ReadLSB w32 0 v159_fuzz_symb_159))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-159-8048a0e
Size=2 Low=0 splitIndex=1 high=1
119 [State 0] Switching from state 0 to state 160
Copied 34928 (count=1)
Finalizing TB execution 160
s2e_dummyMainFunction
tcg-llvm-tb-159-8048a0e
119 [State 160] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 159 not yet applied), shell_len: 1024, eip: 0x00000000

119 [State 160] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
119 [State 160] Leaving buffer range @0xc126f278, b6 IoB insns; prev insn @0xbfba3594
  1   3B @0xbfba3594: 80 e8 e8          sub al, 0xe8            
119 [State 160] Killing state 160
119 [State 160] Terminating state 160 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
119 [State 160] Switching from state 160 to state 0
Copied 34928 (count=1)
Deleting state 160 0x0x23efa0b0
119 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 159
>> fuzzInit: datum forking for value 160
>> fuzzInit: datum forking for value 160
119 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 160)
        (ReadLSB w32 0 v160_fuzz_symb_160)))
    state 161 with condition (Not (Eq false
         (Eq (w32 160)
             (ReadLSB w32 0 v160_fuzz_symb_160))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-160-8048a0e
Size=2 Low=0 splitIndex=1 high=1
119 [State 0] Switching from state 0 to state 161
Copied 34928 (count=1)
Finalizing TB execution 161
s2e_dummyMainFunction
tcg-llvm-tb-160-8048a0e
120 [State 161] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 160 not yet applied), shell_len: 1024, eip: 0x00000000

120 [State 161] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 186 instructions, PCs: bfba3420 bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
120 [State 161] Terminating state 161 with message 'eliminated this false positive, execution path subset of another success'
120 [State 161] Switching from state 161 to state 0
Copied 34928 (count=1)
Deleting state 161 0x0x23efa0b0
120 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 160
>> fuzzInit: datum forking for value 161
>> fuzzInit: datum forking for value 161
120 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 161)
        (ReadLSB w32 0 v161_fuzz_symb_161)))
    state 162 with condition (Not (Eq false
         (Eq (w32 161)
             (ReadLSB w32 0 v161_fuzz_symb_161))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-161-8048a0e
Size=2 Low=0 splitIndex=1 high=1
120 [State 0] Switching from state 0 to state 162
Copied 34928 (count=1)
Finalizing TB execution 162
s2e_dummyMainFunction
tcg-llvm-tb-161-8048a0e
120 [State 162] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 161 not yet applied), shell_len: 1024, eip: 0x00000000

120 [State 162] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
120 [State 162] Leaving buffer range @0xc126f278, b6 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
120 [State 162] Killing state 162
120 [State 162] Terminating state 162 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
120 [State 162] Switching from state 162 to state 0
Copied 34928 (count=1)
Deleting state 162 0x0x240b5850
120 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 161
>> fuzzInit: datum forking for value 162
>> fuzzInit: datum forking for value 162
120 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 162)
        (ReadLSB w32 0 v162_fuzz_symb_162)))
    state 163 with condition (Not (Eq false
         (Eq (w32 162)
             (ReadLSB w32 0 v162_fuzz_symb_162))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-162-8048a0e
Size=2 Low=0 splitIndex=1 high=1
120 [State 0] Switching from state 0 to state 163
Copied 34928 (count=1)
Finalizing TB execution 163
s2e_dummyMainFunction
tcg-llvm-tb-162-8048a0e
121 [State 163] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 162 not yet applied), shell_len: 1024, eip: 0x00000000

121 [State 163] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 185 instructions, PCs: bfba3422 bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
121 [State 163] Terminating state 163 with message 'eliminated this false positive, execution path subset of another success'
121 [State 163] Switching from state 163 to state 0
Copied 34928 (count=1)
Deleting state 163 0x0x240b5850
121 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 162
>> fuzzInit: datum forking for value 163
>> fuzzInit: datum forking for value 163
121 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 163)
        (ReadLSB w32 0 v163_fuzz_symb_163)))
    state 164 with condition (Not (Eq false
         (Eq (w32 163)
             (ReadLSB w32 0 v163_fuzz_symb_163))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-163-8048a0e
Size=2 Low=0 splitIndex=1 high=1
121 [State 0] Switching from state 0 to state 164
Copied 34928 (count=1)
Finalizing TB execution 164
s2e_dummyMainFunction
tcg-llvm-tb-163-8048a0e
121 [State 164] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 163 not yet applied), shell_len: 1024, eip: 0x00000000

121 [State 164] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
121 [State 164] Leaving buffer range @0xc126f278, b5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
121 [State 164] Killing state 164
121 [State 164] Terminating state 164 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
121 [State 164] Switching from state 164 to state 0
Copied 34928 (count=1)
Deleting state 164 0x0x240b5850
121 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 163
>> fuzzInit: datum forking for value 164
>> fuzzInit: datum forking for value 164
121 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 164)
        (ReadLSB w32 0 v164_fuzz_symb_164)))
    state 165 with condition (Not (Eq false
         (Eq (w32 164)
             (ReadLSB w32 0 v164_fuzz_symb_164))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-164-8048a0e
Size=2 Low=0 splitIndex=1 high=1
121 [State 0] Switching from state 0 to state 165
Copied 34928 (count=1)
Finalizing TB execution 165
s2e_dummyMainFunction
tcg-llvm-tb-164-8048a0e
122 [State 165] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 164 not yet applied), shell_len: 1024, eip: 0x00000000

122 [State 165] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 184 instructions, PCs: bfba3424 bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
122 [State 165] Terminating state 165 with message 'eliminated this false positive, execution path subset of another success'
122 [State 165] Switching from state 165 to state 0
Copied 34928 (count=1)
Deleting state 165 0x0x240b5850
122 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 164
>> fuzzInit: datum forking for value 165
>> fuzzInit: datum forking for value 165
122 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 165)
        (ReadLSB w32 0 v165_fuzz_symb_165)))
    state 166 with condition (Not (Eq false
         (Eq (w32 165)
             (ReadLSB w32 0 v165_fuzz_symb_165))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-165-8048a0e
Size=2 Low=0 splitIndex=1 high=1
122 [State 0] Switching from state 0 to state 166
Copied 34928 (count=1)
Finalizing TB execution 166
s2e_dummyMainFunction
tcg-llvm-tb-165-8048a0e
122 [State 166] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 165 not yet applied), shell_len: 1024, eip: 0x00000000

122 [State 166] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
122 [State 166] Leaving buffer range @0xc126f278, b4 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
122 [State 166] Killing state 166
122 [State 166] Terminating state 166 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
122 [State 166] Switching from state 166 to state 0
Copied 34928 (count=1)
Deleting state 166 0x0x240b5850
122 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 165
>> fuzzInit: datum forking for value 166
>> fuzzInit: datum forking for value 166
123 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 166)
        (ReadLSB w32 0 v166_fuzz_symb_166)))
    state 167 with condition (Not (Eq false
         (Eq (w32 166)
             (ReadLSB w32 0 v166_fuzz_symb_166))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-166-8048a0e
Size=2 Low=0 splitIndex=1 high=1
123 [State 0] Switching from state 0 to state 167
Copied 34928 (count=1)
Finalizing TB execution 167
s2e_dummyMainFunction
tcg-llvm-tb-166-8048a0e
123 [State 167] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 166 not yet applied), shell_len: 1024, eip: 0x00000000

123 [State 167] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 183 instructions, PCs: bfba3426 bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
123 [State 167] Terminating state 167 with message 'eliminated this false positive, execution path subset of another success'
123 [State 167] Switching from state 167 to state 0
Copied 34928 (count=1)
Deleting state 167 0x0x240b5850
123 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 166
>> fuzzInit: datum forking for value 167
>> fuzzInit: datum forking for value 167
123 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 167)
        (ReadLSB w32 0 v167_fuzz_symb_167)))
    state 168 with condition (Not (Eq false
         (Eq (w32 167)
             (ReadLSB w32 0 v167_fuzz_symb_167))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-167-8048a0e
Size=2 Low=0 splitIndex=1 high=1
123 [State 0] Switching from state 0 to state 168
Copied 34928 (count=1)
Finalizing TB execution 168
s2e_dummyMainFunction
tcg-llvm-tb-167-8048a0e
123 [State 168] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 167 not yet applied), shell_len: 1024, eip: 0x00000000

123 [State 168] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
123 [State 168] Leaving buffer range @0xc126f278, b3 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
123 [State 168] Killing state 168
123 [State 168] Terminating state 168 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
123 [State 168] Switching from state 168 to state 0
Copied 34928 (count=1)
Deleting state 168 0x0x240b5850
123 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 167
>> fuzzInit: datum forking for value 168
>> fuzzInit: datum forking for value 168
124 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 168)
        (ReadLSB w32 0 v168_fuzz_symb_168)))
    state 169 with condition (Not (Eq false
         (Eq (w32 168)
             (ReadLSB w32 0 v168_fuzz_symb_168))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-168-8048a0e
Size=2 Low=0 splitIndex=1 high=1
124 [State 0] Switching from state 0 to state 169
Copied 34928 (count=1)
Finalizing TB execution 169
s2e_dummyMainFunction
tcg-llvm-tb-168-8048a0e
124 [State 169] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 168 not yet applied), shell_len: 1024, eip: 0x00000000

124 [State 169] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 182 instructions, PCs: bfba3428 bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
124 [State 169] Terminating state 169 with message 'eliminated this false positive, execution path subset of another success'
124 [State 169] Switching from state 169 to state 0
Copied 34928 (count=1)
Deleting state 169 0x0x240b5850
124 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 168
>> fuzzInit: datum forking for value 169
>> fuzzInit: datum forking for value 169
124 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 169)
        (ReadLSB w32 0 v169_fuzz_symb_169)))
    state 170 with condition (Not (Eq false
         (Eq (w32 169)
             (ReadLSB w32 0 v169_fuzz_symb_169))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-169-8048a0e
Size=2 Low=0 splitIndex=1 high=1
124 [State 0] Switching from state 0 to state 170
Copied 34928 (count=1)
Finalizing TB execution 170
s2e_dummyMainFunction
tcg-llvm-tb-169-8048a0e
124 [State 170] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 169 not yet applied), shell_len: 1024, eip: 0x00000000

124 [State 170] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
124 [State 170] Leaving buffer range @0xc104b28c, b2 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
125 [State 170] Killing state 170
125 [State 170] Terminating state 170 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
125 [State 170] Switching from state 170 to state 0
Copied 34928 (count=1)
Deleting state 170 0x0x240b5850
125 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 169
>> fuzzInit: datum forking for value 170
>> fuzzInit: datum forking for value 170
125 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 170)
        (ReadLSB w32 0 v170_fuzz_symb_170)))
    state 171 with condition (Not (Eq false
         (Eq (w32 170)
             (ReadLSB w32 0 v170_fuzz_symb_170))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-170-8048a0e
Size=2 Low=0 splitIndex=1 high=1
125 [State 0] Switching from state 0 to state 171
Copied 34928 (count=1)
Finalizing TB execution 171
s2e_dummyMainFunction
tcg-llvm-tb-170-8048a0e
125 [State 171] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 170 not yet applied), shell_len: 1024, eip: 0x00000000

125 [State 171] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 181 instructions, PCs: bfba342a bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
125 [State 171] Terminating state 171 with message 'eliminated this false positive, execution path subset of another success'
125 [State 171] Switching from state 171 to state 0
Copied 34928 (count=1)
Deleting state 171 0x0x240b5850
Firing timer event
125 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 170
>> fuzzInit: datum forking for value 171
>> fuzzInit: datum forking for value 171
125 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 171)
        (ReadLSB w32 0 v171_fuzz_symb_171)))
    state 172 with condition (Not (Eq false
         (Eq (w32 171)
             (ReadLSB w32 0 v171_fuzz_symb_171))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-171-8048a0e
Size=2 Low=0 splitIndex=1 high=1
125 [State 0] Switching from state 0 to state 172
Copied 34928 (count=1)
Finalizing TB execution 172
s2e_dummyMainFunction
tcg-llvm-tb-171-8048a0e
126 [State 172] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 171 not yet applied), shell_len: 1024, eip: 0x00000000

126 [State 172] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
126 [State 172] Leaving buffer range @0xc126f278, b1 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
126 [State 172] Killing state 172
126 [State 172] Terminating state 172 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
126 [State 172] Switching from state 172 to state 0
Copied 34928 (count=1)
Deleting state 172 0x0x240b5850
126 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 171
>> fuzzInit: datum forking for value 172
>> fuzzInit: datum forking for value 172
126 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 172)
        (ReadLSB w32 0 v172_fuzz_symb_172)))
    state 173 with condition (Not (Eq false
         (Eq (w32 172)
             (ReadLSB w32 0 v172_fuzz_symb_172))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-172-8048a0e
Size=2 Low=0 splitIndex=1 high=1
126 [State 0] Switching from state 0 to state 173
Copied 34928 (count=1)
Finalizing TB execution 173
s2e_dummyMainFunction
tcg-llvm-tb-172-8048a0e
Firing timer event
126 [State 173] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 172 not yet applied), shell_len: 1024, eip: 0x00000000

126 [State 173] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 180 instructions, PCs: bfba342c bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
127 [State 173] Terminating state 173 with message 'eliminated this false positive, execution path subset of another success'
127 [State 173] Switching from state 173 to state 0
Copied 34928 (count=1)
Deleting state 173 0x0x243d3020
127 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 172
>> fuzzInit: datum forking for value 173
>> fuzzInit: datum forking for value 173
127 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 173)
        (ReadLSB w32 0 v173_fuzz_symb_173)))
    state 174 with condition (Not (Eq false
         (Eq (w32 173)
             (ReadLSB w32 0 v173_fuzz_symb_173))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-173-8048a0e
Size=2 Low=0 splitIndex=1 high=1
127 [State 0] Switching from state 0 to state 174
Copied 34928 (count=1)
Finalizing TB execution 174
s2e_dummyMainFunction
tcg-llvm-tb-173-8048a0e
Firing timer event
127 [State 174] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 173 not yet applied), shell_len: 1024, eip: 0x00000000

127 [State 174] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
127 [State 174] Leaving buffer range @0xc126f278, b0 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
127 [State 174] Killing state 174
127 [State 174] Terminating state 174 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
127 [State 174] Switching from state 174 to state 0
Copied 34928 (count=1)
Deleting state 174 0x0x24846f80
128 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 173
>> fuzzInit: datum forking for value 174
>> fuzzInit: datum forking for value 174
128 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 174)
        (ReadLSB w32 0 v174_fuzz_symb_174)))
    state 175 with condition (Not (Eq false
         (Eq (w32 174)
             (ReadLSB w32 0 v174_fuzz_symb_174))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-174-8048a0e
Size=2 Low=0 splitIndex=1 high=1
128 [State 0] Switching from state 0 to state 175
Copied 34928 (count=1)
Finalizing TB execution 175
s2e_dummyMainFunction
tcg-llvm-tb-174-8048a0e
128 [State 175] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 174 not yet applied), shell_len: 1024, eip: 0x00000000

128 [State 175] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 179 instructions, PCs: bfba342e bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
128 [State 175] Terminating state 175 with message 'eliminated this false positive, execution path subset of another success'
128 [State 175] Switching from state 175 to state 0
Copied 34928 (count=1)
Deleting state 175 0x0x24846f80
Firing timer event
128 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 174
>> fuzzInit: datum forking for value 175
>> fuzzInit: datum forking for value 175
128 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 175)
        (ReadLSB w32 0 v175_fuzz_symb_175)))
    state 176 with condition (Not (Eq false
         (Eq (w32 175)
             (ReadLSB w32 0 v175_fuzz_symb_175))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-175-8048a0e
Size=2 Low=0 splitIndex=1 high=1
128 [State 0] Switching from state 0 to state 176
Copied 34928 (count=1)
Finalizing TB execution 176
s2e_dummyMainFunction
tcg-llvm-tb-175-8048a0e
129 [State 176] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 175 not yet applied), shell_len: 1024, eip: 0x00000000

129 [State 176] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
129 [State 176] Leaving buffer range @0xc126f278, af IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
129 [State 176] Killing state 176
129 [State 176] Terminating state 176 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
129 [State 176] Switching from state 176 to state 0
Copied 34928 (count=1)
Deleting state 176 0x0x24846f80
Firing timer event
129 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 175
>> fuzzInit: datum forking for value 176
>> fuzzInit: datum forking for value 176
129 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 176)
        (ReadLSB w32 0 v176_fuzz_symb_176)))
    state 177 with condition (Not (Eq false
         (Eq (w32 176)
             (ReadLSB w32 0 v176_fuzz_symb_176))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-176-8048a0e
Size=2 Low=0 splitIndex=1 high=1
129 [State 0] Switching from state 0 to state 177
Copied 34928 (count=1)
Finalizing TB execution 177
s2e_dummyMainFunction
tcg-llvm-tb-176-8048a0e
130 [State 177] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 176 not yet applied), shell_len: 1024, eip: 0x00000000

130 [State 177] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 178 instructions, PCs: bfba3430 bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
130 [State 177] Terminating state 177 with message 'eliminated this false positive, execution path subset of another success'
130 [State 177] Switching from state 177 to state 0
Copied 34928 (count=1)
Deleting state 177 0x0x24847290
130 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 176
>> fuzzInit: datum forking for value 177
>> fuzzInit: datum forking for value 177
130 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 177)
        (ReadLSB w32 0 v177_fuzz_symb_177)))
    state 178 with condition (Not (Eq false
         (Eq (w32 177)
             (ReadLSB w32 0 v177_fuzz_symb_177))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-177-8048a0e
Size=2 Low=0 splitIndex=1 high=1
130 [State 0] Switching from state 0 to state 178
Copied 34928 (count=1)
Finalizing TB execution 178
s2e_dummyMainFunction
tcg-llvm-tb-177-8048a0e
130 [State 178] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 177 not yet applied), shell_len: 1024, eip: 0x00000000

130 [State 178] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
130 [State 178] Leaving buffer range @0xc126f278, ae IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
130 [State 178] Killing state 178
130 [State 178] Terminating state 178 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
130 [State 178] Switching from state 178 to state 0
Copied 34928 (count=1)
Deleting state 178 0x0x24847290
130 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 177
>> fuzzInit: datum forking for value 178
>> fuzzInit: datum forking for value 178
131 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 178)
        (ReadLSB w32 0 v178_fuzz_symb_178)))
    state 179 with condition (Not (Eq false
         (Eq (w32 178)
             (ReadLSB w32 0 v178_fuzz_symb_178))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-178-8048a0e
Size=2 Low=0 splitIndex=1 high=1
131 [State 0] Switching from state 0 to state 179
Copied 34928 (count=1)
Finalizing TB execution 179
s2e_dummyMainFunction
tcg-llvm-tb-178-8048a0e
131 [State 179] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 178 not yet applied), shell_len: 1024, eip: 0x00000000

131 [State 179] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 177 instructions, PCs: bfba3432 bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
131 [State 179] Terminating state 179 with message 'eliminated this false positive, execution path subset of another success'
131 [State 179] Switching from state 179 to state 0
Copied 34928 (count=1)
Deleting state 179 0x0x24847290
131 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 178
>> fuzzInit: datum forking for value 179
>> fuzzInit: datum forking for value 179
131 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 179)
        (ReadLSB w32 0 v179_fuzz_symb_179)))
    state 180 with condition (Not (Eq false
         (Eq (w32 179)
             (ReadLSB w32 0 v179_fuzz_symb_179))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-179-8048a0e
Size=2 Low=0 splitIndex=1 high=1
131 [State 0] Switching from state 0 to state 180
Copied 34928 (count=1)
Finalizing TB execution 180
s2e_dummyMainFunction
tcg-llvm-tb-179-8048a0e
131 [State 180] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 179 not yet applied), shell_len: 1024, eip: 0x00000000

131 [State 180] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
131 [State 180] Leaving buffer range @0xc126f278, ad IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
131 [State 180] Killing state 180
131 [State 180] Terminating state 180 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
131 [State 180] Switching from state 180 to state 0
Copied 34928 (count=1)
Deleting state 180 0x0x2481a0c0
132 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 179
>> fuzzInit: datum forking for value 180
>> fuzzInit: datum forking for value 180
132 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 180)
        (ReadLSB w32 0 v180_fuzz_symb_180)))
    state 181 with condition (Not (Eq false
         (Eq (w32 180)
             (ReadLSB w32 0 v180_fuzz_symb_180))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-180-8048a0e
Size=2 Low=0 splitIndex=1 high=1
132 [State 0] Switching from state 0 to state 181
Copied 34928 (count=1)
Finalizing TB execution 181
s2e_dummyMainFunction
tcg-llvm-tb-180-8048a0e
132 [State 181] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 180 not yet applied), shell_len: 1024, eip: 0x00000000

132 [State 181] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 176 instructions, PCs: bfba3434 bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
132 [State 181] Terminating state 181 with message 'eliminated this false positive, execution path subset of another success'
132 [State 181] Switching from state 181 to state 0
Copied 34928 (count=1)
Deleting state 181 0x0x2481a0c0
132 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 180
>> fuzzInit: datum forking for value 181
>> fuzzInit: datum forking for value 181
132 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 181)
        (ReadLSB w32 0 v181_fuzz_symb_181)))
    state 182 with condition (Not (Eq false
         (Eq (w32 181)
             (ReadLSB w32 0 v181_fuzz_symb_181))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-181-8048a0e
Size=2 Low=0 splitIndex=1 high=1
132 [State 0] Switching from state 0 to state 182
Copied 34928 (count=1)
Finalizing TB execution 182
s2e_dummyMainFunction
tcg-llvm-tb-181-8048a0e
132 [State 182] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 181 not yet applied), shell_len: 1024, eip: 0x00000000

132 [State 182] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
132 [State 182] Leaving buffer range @0xc126f278, ac IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
132 [State 182] Killing state 182
132 [State 182] Terminating state 182 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
132 [State 182] Switching from state 182 to state 0
Copied 34928 (count=1)
Deleting state 182 0x0x2481a0c0
133 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 181
>> fuzzInit: datum forking for value 182
>> fuzzInit: datum forking for value 182
133 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 182)
        (ReadLSB w32 0 v182_fuzz_symb_182)))
    state 183 with condition (Not (Eq false
         (Eq (w32 182)
             (ReadLSB w32 0 v182_fuzz_symb_182))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-182-8048a0e
Size=2 Low=0 splitIndex=1 high=1
133 [State 0] Switching from state 0 to state 183
Copied 34928 (count=1)
Finalizing TB execution 183
s2e_dummyMainFunction
tcg-llvm-tb-182-8048a0e
133 [State 183] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 182 not yet applied), shell_len: 1024, eip: 0x00000000

133 [State 183] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 175 instructions, PCs: bfba3436 bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
133 [State 183] Terminating state 183 with message 'eliminated this false positive, execution path subset of another success'
133 [State 183] Switching from state 183 to state 0
Copied 34928 (count=1)
Deleting state 183 0x0x2481a0c0
133 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 182
>> fuzzInit: datum forking for value 183
>> fuzzInit: datum forking for value 183
133 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 183)
        (ReadLSB w32 0 v183_fuzz_symb_183)))
    state 184 with condition (Not (Eq false
         (Eq (w32 183)
             (ReadLSB w32 0 v183_fuzz_symb_183))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-183-8048a0e
Size=2 Low=0 splitIndex=1 high=1
133 [State 0] Switching from state 0 to state 184
Copied 34928 (count=1)
Finalizing TB execution 184
s2e_dummyMainFunction
tcg-llvm-tb-183-8048a0e
133 [State 184] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 183 not yet applied), shell_len: 1024, eip: 0x00000000

133 [State 184] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
133 [State 184] Leaving buffer range @0xc126f278, ab IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
133 [State 184] Killing state 184
133 [State 184] Terminating state 184 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
133 [State 184] Switching from state 184 to state 0
Copied 34928 (count=1)
Deleting state 184 0x0x2481a0c0
133 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 183
>> fuzzInit: datum forking for value 184
>> fuzzInit: datum forking for value 184
134 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 184)
        (ReadLSB w32 0 v184_fuzz_symb_184)))
    state 185 with condition (Not (Eq false
         (Eq (w32 184)
             (ReadLSB w32 0 v184_fuzz_symb_184))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-184-8048a0e
Size=2 Low=0 splitIndex=1 high=1
134 [State 0] Switching from state 0 to state 185
Copied 34928 (count=1)
Finalizing TB execution 185
s2e_dummyMainFunction
tcg-llvm-tb-184-8048a0e
134 [State 185] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 184 not yet applied), shell_len: 1024, eip: 0x00000000

134 [State 185] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 174 instructions, PCs: bfba3438 bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
134 [State 185] Terminating state 185 with message 'eliminated this false positive, execution path subset of another success'
134 [State 185] Switching from state 185 to state 0
Copied 34928 (count=1)
Deleting state 185 0x0x2481a0c0
134 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 184
>> fuzzInit: datum forking for value 185
>> fuzzInit: datum forking for value 185
134 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 185)
        (ReadLSB w32 0 v185_fuzz_symb_185)))
    state 186 with condition (Not (Eq false
         (Eq (w32 185)
             (ReadLSB w32 0 v185_fuzz_symb_185))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-185-8048a0e
Size=2 Low=0 splitIndex=1 high=1
134 [State 0] Switching from state 0 to state 186
Copied 34928 (count=1)
Finalizing TB execution 186
s2e_dummyMainFunction
tcg-llvm-tb-185-8048a0e
134 [State 186] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 185 not yet applied), shell_len: 1024, eip: 0x00000000

134 [State 186] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
134 [State 186] Leaving buffer range @0xc126f278, aa IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
134 [State 186] Killing state 186
134 [State 186] Terminating state 186 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
134 [State 186] Switching from state 186 to state 0
Copied 34928 (count=1)
Deleting state 186 0x0x2481a0c0
135 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 185
>> fuzzInit: datum forking for value 186
>> fuzzInit: datum forking for value 186
135 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 186)
        (ReadLSB w32 0 v186_fuzz_symb_186)))
    state 187 with condition (Not (Eq false
         (Eq (w32 186)
             (ReadLSB w32 0 v186_fuzz_symb_186))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-186-8048a0e
Size=2 Low=0 splitIndex=1 high=1
135 [State 0] Switching from state 0 to state 187
Copied 34928 (count=1)
Finalizing TB execution 187
s2e_dummyMainFunction
tcg-llvm-tb-186-8048a0e
135 [State 187] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 186 not yet applied), shell_len: 1024, eip: 0x00000000

135 [State 187] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 173 instructions, PCs: bfba343a bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
135 [State 187] Terminating state 187 with message 'eliminated this false positive, execution path subset of another success'
135 [State 187] Switching from state 187 to state 0
Copied 34928 (count=1)
Deleting state 187 0x0x248bd470
135 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 186
>> fuzzInit: datum forking for value 187
>> fuzzInit: datum forking for value 187
135 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 187)
        (ReadLSB w32 0 v187_fuzz_symb_187)))
    state 188 with condition (Not (Eq false
         (Eq (w32 187)
             (ReadLSB w32 0 v187_fuzz_symb_187))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-187-8048a0e
Size=2 Low=0 splitIndex=1 high=1
135 [State 0] Switching from state 0 to state 188
Copied 34928 (count=1)
Finalizing TB execution 188
s2e_dummyMainFunction
tcg-llvm-tb-187-8048a0e
Firing timer event
135 [State 188] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 187 not yet applied), shell_len: 1024, eip: 0x00000000

135 [State 188] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
135 [State 188] Leaving buffer range @0xc126f278, a9 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
135 [State 188] Killing state 188
135 [State 188] Terminating state 188 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
135 [State 188] Switching from state 188 to state 0
Copied 34928 (count=1)
Deleting state 188 0x0x248bd470
136 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 187
>> fuzzInit: datum forking for value 188
>> fuzzInit: datum forking for value 188
136 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 188)
        (ReadLSB w32 0 v188_fuzz_symb_188)))
    state 189 with condition (Not (Eq false
         (Eq (w32 188)
             (ReadLSB w32 0 v188_fuzz_symb_188))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-188-8048a0e
Size=2 Low=0 splitIndex=1 high=1
136 [State 0] Switching from state 0 to state 189
Copied 34928 (count=1)
Finalizing TB execution 189
s2e_dummyMainFunction
tcg-llvm-tb-188-8048a0e
136 [State 189] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 188 not yet applied), shell_len: 1024, eip: 0x00000000

136 [State 189] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 172 instructions, PCs: bfba343c bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
136 [State 189] Terminating state 189 with message 'eliminated this false positive, execution path subset of another success'
136 [State 189] Switching from state 189 to state 0
Copied 34928 (count=1)
Deleting state 189 0x0x248bd470
136 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 188
>> fuzzInit: datum forking for value 189
>> fuzzInit: datum forking for value 189
136 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 189)
        (ReadLSB w32 0 v189_fuzz_symb_189)))
    state 190 with condition (Not (Eq false
         (Eq (w32 189)
             (ReadLSB w32 0 v189_fuzz_symb_189))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-189-8048a0e
Size=2 Low=0 splitIndex=1 high=1
136 [State 0] Switching from state 0 to state 190
Copied 34928 (count=1)
Finalizing TB execution 190
s2e_dummyMainFunction
tcg-llvm-tb-189-8048a0e
Firing timer event
136 [State 190] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 189 not yet applied), shell_len: 1024, eip: 0x00000000

136 [State 190] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
136 [State 190] Leaving buffer range @0xc126f278, a8 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
136 [State 190] Killing state 190
136 [State 190] Terminating state 190 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
136 [State 190] Switching from state 190 to state 0
Copied 34928 (count=1)
Deleting state 190 0x0x248bd470
137 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 189
>> fuzzInit: datum forking for value 190
>> fuzzInit: datum forking for value 190
137 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 190)
        (ReadLSB w32 0 v190_fuzz_symb_190)))
    state 191 with condition (Not (Eq false
         (Eq (w32 190)
             (ReadLSB w32 0 v190_fuzz_symb_190))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-190-8048a0e
Size=2 Low=0 splitIndex=1 high=1
137 [State 0] Switching from state 0 to state 191
Copied 34928 (count=1)
Finalizing TB execution 191
s2e_dummyMainFunction
tcg-llvm-tb-190-8048a0e
137 [State 191] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 190 not yet applied), shell_len: 1024, eip: 0x00000000

137 [State 191] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 171 instructions, PCs: bfba343e bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
137 [State 191] Terminating state 191 with message 'eliminated this false positive, execution path subset of another success'
137 [State 191] Switching from state 191 to state 0
Copied 34928 (count=1)
Deleting state 191 0x0x248bd470
137 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 190
>> fuzzInit: datum forking for value 191
>> fuzzInit: datum forking for value 191
137 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 191)
        (ReadLSB w32 0 v191_fuzz_symb_191)))
    state 192 with condition (Not (Eq false
         (Eq (w32 191)
             (ReadLSB w32 0 v191_fuzz_symb_191))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-191-8048a0e
Size=2 Low=0 splitIndex=1 high=1
137 [State 0] Switching from state 0 to state 192
Copied 34928 (count=1)
Finalizing TB execution 192
s2e_dummyMainFunction
tcg-llvm-tb-191-8048a0e
Firing timer event
137 [State 192] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 191 not yet applied), shell_len: 1024, eip: 0x00000000

137 [State 192] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
138 [State 192] Leaving buffer range @0xc126f278, a7 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
138 [State 192] Killing state 192
138 [State 192] Terminating state 192 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
138 [State 192] Switching from state 192 to state 0
Copied 34928 (count=1)
Deleting state 192 0x0x24b237d0
138 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 191
>> fuzzInit: datum forking for value 192
>> fuzzInit: datum forking for value 192
138 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 192)
        (ReadLSB w32 0 v192_fuzz_symb_192)))
    state 193 with condition (Not (Eq false
         (Eq (w32 192)
             (ReadLSB w32 0 v192_fuzz_symb_192))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-192-8048a0e
Size=2 Low=0 splitIndex=1 high=1
138 [State 0] Switching from state 0 to state 193
Copied 34928 (count=1)
Finalizing TB execution 193
s2e_dummyMainFunction
tcg-llvm-tb-192-8048a0e
138 [State 193] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 192 not yet applied), shell_len: 1024, eip: 0x00000000

138 [State 193] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 170 instructions, PCs: bfba3440 bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
138 [State 193] Terminating state 193 with message 'eliminated this false positive, execution path subset of another success'
138 [State 193] Switching from state 193 to state 0
Copied 34928 (count=1)
Deleting state 193 0x0x24b237d0
138 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 192
>> fuzzInit: datum forking for value 193
>> fuzzInit: datum forking for value 193
138 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 193)
        (ReadLSB w32 0 v193_fuzz_symb_193)))
    state 194 with condition (Not (Eq false
         (Eq (w32 193)
             (ReadLSB w32 0 v193_fuzz_symb_193))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-193-8048a0e
Size=2 Low=0 splitIndex=1 high=1
138 [State 0] Switching from state 0 to state 194
Copied 34928 (count=1)
Finalizing TB execution 194
s2e_dummyMainFunction
tcg-llvm-tb-193-8048a0e
Firing timer event
138 [State 194] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 193 not yet applied), shell_len: 1024, eip: 0x00000000

138 [State 194] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
139 [State 194] Leaving buffer range @0xc126f278, a6 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
139 [State 194] Killing state 194
139 [State 194] Terminating state 194 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
139 [State 194] Switching from state 194 to state 0
Copied 34928 (count=1)
Deleting state 194 0x0x24b237d0
139 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 193
>> fuzzInit: datum forking for value 194
>> fuzzInit: datum forking for value 194
139 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 194)
        (ReadLSB w32 0 v194_fuzz_symb_194)))
    state 195 with condition (Not (Eq false
         (Eq (w32 194)
             (ReadLSB w32 0 v194_fuzz_symb_194))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-194-8048a0e
Size=2 Low=0 splitIndex=1 high=1
139 [State 0] Switching from state 0 to state 195
Copied 34928 (count=1)
Finalizing TB execution 195
s2e_dummyMainFunction
tcg-llvm-tb-194-8048a0e
139 [State 195] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 194 not yet applied), shell_len: 1024, eip: 0x00000000

139 [State 195] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 169 instructions, PCs: bfba3442 bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
139 [State 195] Terminating state 195 with message 'eliminated this false positive, execution path subset of another success'
139 [State 195] Switching from state 195 to state 0
Copied 34928 (count=1)
Deleting state 195 0x0x24b237d0
139 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 194
>> fuzzInit: datum forking for value 195
>> fuzzInit: datum forking for value 195
139 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 195)
        (ReadLSB w32 0 v195_fuzz_symb_195)))
    state 196 with condition (Not (Eq false
         (Eq (w32 195)
             (ReadLSB w32 0 v195_fuzz_symb_195))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-195-8048a0e
Size=2 Low=0 splitIndex=1 high=1
139 [State 0] Switching from state 0 to state 196
Copied 34928 (count=1)
Finalizing TB execution 196
s2e_dummyMainFunction
tcg-llvm-tb-195-8048a0e
Firing timer event
139 [State 196] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 195 not yet applied), shell_len: 1024, eip: 0x00000000

139 [State 196] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
140 [State 196] Leaving buffer range @0xc126f278, a5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
140 [State 196] Killing state 196
140 [State 196] Terminating state 196 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
140 [State 196] Switching from state 196 to state 0
Copied 34928 (count=1)
Deleting state 196 0x0x24b237d0
140 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 195
>> fuzzInit: datum forking for value 196
>> fuzzInit: datum forking for value 196
140 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 196)
        (ReadLSB w32 0 v196_fuzz_symb_196)))
    state 197 with condition (Not (Eq false
         (Eq (w32 196)
             (ReadLSB w32 0 v196_fuzz_symb_196))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-196-8048a0e
Size=2 Low=0 splitIndex=1 high=1
140 [State 0] Switching from state 0 to state 197
Copied 34928 (count=1)
Finalizing TB execution 197
s2e_dummyMainFunction
tcg-llvm-tb-196-8048a0e
140 [State 197] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 196 not yet applied), shell_len: 1024, eip: 0x00000000

140 [State 197] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 168 instructions, PCs: bfba3444 bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
140 [State 197] Terminating state 197 with message 'eliminated this false positive, execution path subset of another success'
140 [State 197] Switching from state 197 to state 0
Copied 34928 (count=1)
Deleting state 197 0x0x24b237d0
140 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 196
>> fuzzInit: datum forking for value 197
>> fuzzInit: datum forking for value 197
140 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 197)
        (ReadLSB w32 0 v197_fuzz_symb_197)))
    state 198 with condition (Not (Eq false
         (Eq (w32 197)
             (ReadLSB w32 0 v197_fuzz_symb_197))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-197-8048a0e
Size=2 Low=0 splitIndex=1 high=1
140 [State 0] Switching from state 0 to state 198
Copied 34928 (count=1)
Finalizing TB execution 198
s2e_dummyMainFunction
tcg-llvm-tb-197-8048a0e
Firing timer event
140 [State 198] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 197 not yet applied), shell_len: 1024, eip: 0x00000000

140 [State 198] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
141 [State 198] Leaving buffer range @0xc126f278, a4 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
141 [State 198] Killing state 198
141 [State 198] Terminating state 198 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
141 [State 198] Switching from state 198 to state 0
Copied 34928 (count=1)
Deleting state 198 0x0x24b237d0
141 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 197
>> fuzzInit: datum forking for value 198
>> fuzzInit: datum forking for value 198
141 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 198)
        (ReadLSB w32 0 v198_fuzz_symb_198)))
    state 199 with condition (Not (Eq false
         (Eq (w32 198)
             (ReadLSB w32 0 v198_fuzz_symb_198))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-198-8048a0e
Size=2 Low=0 splitIndex=1 high=1
141 [State 0] Switching from state 0 to state 199
Copied 34928 (count=1)
Finalizing TB execution 199
s2e_dummyMainFunction
tcg-llvm-tb-198-8048a0e
141 [State 199] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 198 not yet applied), shell_len: 1024, eip: 0x00000000

141 [State 199] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 167 instructions, PCs: bfba3446 bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
141 [State 199] Terminating state 199 with message 'eliminated this false positive, execution path subset of another success'
141 [State 199] Switching from state 199 to state 0
Copied 34928 (count=1)
Deleting state 199 0x0x24b237d0
141 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 198
>> fuzzInit: datum forking for value 199
>> fuzzInit: datum forking for value 199
141 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 199)
        (ReadLSB w32 0 v199_fuzz_symb_199)))
    state 200 with condition (Not (Eq false
         (Eq (w32 199)
             (ReadLSB w32 0 v199_fuzz_symb_199))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-199-8048a0e
Size=2 Low=0 splitIndex=1 high=1
141 [State 0] Switching from state 0 to state 200
Copied 34928 (count=1)
Finalizing TB execution 200
s2e_dummyMainFunction
tcg-llvm-tb-199-8048a0e
Firing timer event
141 [State 200] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 199 not yet applied), shell_len: 1024, eip: 0x00000000

141 [State 200] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
141 [State 200] Leaving buffer range @0xc126f278, a3 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
142 [State 200] Killing state 200
142 [State 200] Terminating state 200 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
142 [State 200] Switching from state 200 to state 0
Copied 34928 (count=1)
Deleting state 200 0x0x24b237d0
142 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 199
>> fuzzInit: datum forking for value 200
>> fuzzInit: datum forking for value 200
142 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 200)
        (ReadLSB w32 0 v200_fuzz_symb_200)))
    state 201 with condition (Not (Eq false
         (Eq (w32 200)
             (ReadLSB w32 0 v200_fuzz_symb_200))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-200-8048a0e
Size=2 Low=0 splitIndex=1 high=1
142 [State 0] Switching from state 0 to state 201
Copied 34928 (count=1)
Finalizing TB execution 201
s2e_dummyMainFunction
tcg-llvm-tb-200-8048a0e
142 [State 201] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 200 not yet applied), shell_len: 1024, eip: 0x00000000

142 [State 201] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 166 instructions, PCs: bfba3448 bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
142 [State 201] Terminating state 201 with message 'eliminated this false positive, execution path subset of another success'
142 [State 201] Switching from state 201 to state 0
Copied 34928 (count=1)
Deleting state 201 0x0x250afac0
142 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 200
>> fuzzInit: datum forking for value 201
>> fuzzInit: datum forking for value 201
142 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 201)
        (ReadLSB w32 0 v201_fuzz_symb_201)))
    state 202 with condition (Not (Eq false
         (Eq (w32 201)
             (ReadLSB w32 0 v201_fuzz_symb_201))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-201-8048a0e
Size=2 Low=0 splitIndex=1 high=1
142 [State 0] Switching from state 0 to state 202
Copied 34928 (count=1)
Finalizing TB execution 202
s2e_dummyMainFunction
tcg-llvm-tb-201-8048a0e
Firing timer event
142 [State 202] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 201 not yet applied), shell_len: 1024, eip: 0x00000000

142 [State 202] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
143 [State 202] Leaving buffer range @0xc126f278, a2 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
143 [State 202] Killing state 202
143 [State 202] Terminating state 202 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
143 [State 202] Switching from state 202 to state 0
Copied 34928 (count=1)
Deleting state 202 0x0x250afac0
143 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 201
>> fuzzInit: datum forking for value 202
>> fuzzInit: datum forking for value 202
143 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 202)
        (ReadLSB w32 0 v202_fuzz_symb_202)))
    state 203 with condition (Not (Eq false
         (Eq (w32 202)
             (ReadLSB w32 0 v202_fuzz_symb_202))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-202-8048a0e
Size=2 Low=0 splitIndex=1 high=1
143 [State 0] Switching from state 0 to state 203
Copied 34928 (count=1)
Finalizing TB execution 203
s2e_dummyMainFunction
tcg-llvm-tb-202-8048a0e
143 [State 203] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 202 not yet applied), shell_len: 1024, eip: 0x00000000

143 [State 203] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 165 instructions, PCs: bfba344a bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
143 [State 203] Terminating state 203 with message 'eliminated this false positive, execution path subset of another success'
143 [State 203] Switching from state 203 to state 0
Copied 34928 (count=1)
Deleting state 203 0x0x250afac0
143 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 202
>> fuzzInit: datum forking for value 203
>> fuzzInit: datum forking for value 203
143 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 203)
        (ReadLSB w32 0 v203_fuzz_symb_203)))
    state 204 with condition (Not (Eq false
         (Eq (w32 203)
             (ReadLSB w32 0 v203_fuzz_symb_203))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-203-8048a0e
Size=2 Low=0 splitIndex=1 high=1
143 [State 0] Switching from state 0 to state 204
Copied 34928 (count=1)
Finalizing TB execution 204
s2e_dummyMainFunction
tcg-llvm-tb-203-8048a0e
143 [State 204] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 203 not yet applied), shell_len: 1024, eip: 0x00000000

143 [State 204] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
143 [State 204] Leaving buffer range @0xc126f278, a1 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
144 [State 204] Killing state 204
144 [State 204] Terminating state 204 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
144 [State 204] Switching from state 204 to state 0
Copied 34928 (count=1)
Deleting state 204 0x0x250afac0
144 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 203
>> fuzzInit: datum forking for value 204
>> fuzzInit: datum forking for value 204
144 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 204)
        (ReadLSB w32 0 v204_fuzz_symb_204)))
    state 205 with condition (Not (Eq false
         (Eq (w32 204)
             (ReadLSB w32 0 v204_fuzz_symb_204))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-204-8048a0e
Size=2 Low=0 splitIndex=1 high=1
144 [State 0] Switching from state 0 to state 205
Copied 34928 (count=1)
Finalizing TB execution 205
s2e_dummyMainFunction
tcg-llvm-tb-204-8048a0e
144 [State 205] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 204 not yet applied), shell_len: 1024, eip: 0x00000000

144 [State 205] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 164 instructions, PCs: bfba344c bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
144 [State 205] Terminating state 205 with message 'eliminated this false positive, execution path subset of another success'
144 [State 205] Switching from state 205 to state 0
Copied 34928 (count=1)
Deleting state 205 0x0x250afac0
144 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 204
>> fuzzInit: datum forking for value 205
>> fuzzInit: datum forking for value 205
144 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 205)
        (ReadLSB w32 0 v205_fuzz_symb_205)))
    state 206 with condition (Not (Eq false
         (Eq (w32 205)
             (ReadLSB w32 0 v205_fuzz_symb_205))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-205-8048a0e
Size=2 Low=0 splitIndex=1 high=1
144 [State 0] Switching from state 0 to state 206
Copied 34928 (count=1)
Finalizing TB execution 206
s2e_dummyMainFunction
tcg-llvm-tb-205-8048a0e
144 [State 206] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 205 not yet applied), shell_len: 1024, eip: 0x00000000

144 [State 206] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
145 [State 206] Leaving buffer range @0xc126f278, a0 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
145 [State 206] Killing state 206
145 [State 206] Terminating state 206 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
145 [State 206] Switching from state 206 to state 0
Copied 34928 (count=1)
Deleting state 206 0x0x250afac0
145 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 205
>> fuzzInit: datum forking for value 206
>> fuzzInit: datum forking for value 206
145 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 206)
        (ReadLSB w32 0 v206_fuzz_symb_206)))
    state 207 with condition (Not (Eq false
         (Eq (w32 206)
             (ReadLSB w32 0 v206_fuzz_symb_206))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-206-8048a0e
Size=2 Low=0 splitIndex=1 high=1
145 [State 0] Switching from state 0 to state 207
Copied 34928 (count=1)
Finalizing TB execution 207
s2e_dummyMainFunction
tcg-llvm-tb-206-8048a0e
145 [State 207] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 206 not yet applied), shell_len: 1024, eip: 0x00000000

145 [State 207] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 163 instructions, PCs: bfba344e bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
145 [State 207] Terminating state 207 with message 'eliminated this false positive, execution path subset of another success'
145 [State 207] Switching from state 207 to state 0
Copied 34928 (count=1)
Deleting state 207 0x0x250afac0
145 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 206
>> fuzzInit: datum forking for value 207
>> fuzzInit: datum forking for value 207
145 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 207)
        (ReadLSB w32 0 v207_fuzz_symb_207)))
    state 208 with condition (Not (Eq false
         (Eq (w32 207)
             (ReadLSB w32 0 v207_fuzz_symb_207))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-207-8048a0e
Size=2 Low=0 splitIndex=1 high=1
145 [State 0] Switching from state 0 to state 208
Copied 34928 (count=1)
Finalizing TB execution 208
s2e_dummyMainFunction
tcg-llvm-tb-207-8048a0e
145 [State 208] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 207 not yet applied), shell_len: 1024, eip: 0x00000000

145 [State 208] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
145 [State 208] Leaving buffer range @0xc126f278, 9f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
146 [State 208] Killing state 208
146 [State 208] Terminating state 208 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
146 [State 208] Switching from state 208 to state 0
Copied 34928 (count=1)
Deleting state 208 0x0x250afac0
146 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 207
>> fuzzInit: datum forking for value 208
>> fuzzInit: datum forking for value 208
146 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 208)
        (ReadLSB w32 0 v208_fuzz_symb_208)))
    state 209 with condition (Not (Eq false
         (Eq (w32 208)
             (ReadLSB w32 0 v208_fuzz_symb_208))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-208-8048a0e
Size=2 Low=0 splitIndex=1 high=1
146 [State 0] Switching from state 0 to state 209
Copied 34928 (count=1)
Finalizing TB execution 209
s2e_dummyMainFunction
tcg-llvm-tb-208-8048a0e
146 [State 209] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 208 not yet applied), shell_len: 1024, eip: 0x00000000

146 [State 209] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 162 instructions, PCs: bfba3450 bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
146 [State 209] Terminating state 209 with message 'eliminated this false positive, execution path subset of another success'
146 [State 209] Switching from state 209 to state 0
Copied 34928 (count=1)
Deleting state 209 0x0x21c11ed0
146 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 208
>> fuzzInit: datum forking for value 209
>> fuzzInit: datum forking for value 209
146 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 209)
        (ReadLSB w32 0 v209_fuzz_symb_209)))
    state 210 with condition (Not (Eq false
         (Eq (w32 209)
             (ReadLSB w32 0 v209_fuzz_symb_209))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-209-8048a0e
Size=2 Low=0 splitIndex=1 high=1
146 [State 0] Switching from state 0 to state 210
Copied 34928 (count=1)
Finalizing TB execution 210
s2e_dummyMainFunction
tcg-llvm-tb-209-8048a0e
146 [State 210] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 209 not yet applied), shell_len: 1024, eip: 0x00000000

146 [State 210] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
147 [State 210] Leaving buffer range @0xc126f278, 9e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
147 [State 210] Killing state 210
147 [State 210] Terminating state 210 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
147 [State 210] Switching from state 210 to state 0
Copied 34928 (count=1)
Deleting state 210 0x0x21c11ed0
147 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 209
>> fuzzInit: datum forking for value 210
>> fuzzInit: datum forking for value 210
147 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 210)
        (ReadLSB w32 0 v210_fuzz_symb_210)))
    state 211 with condition (Not (Eq false
         (Eq (w32 210)
             (ReadLSB w32 0 v210_fuzz_symb_210))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-210-8048a0e
Size=2 Low=0 splitIndex=1 high=1
147 [State 0] Switching from state 0 to state 211
Copied 34928 (count=1)
Finalizing TB execution 211
s2e_dummyMainFunction
tcg-llvm-tb-210-8048a0e
147 [State 211] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 210 not yet applied), shell_len: 1024, eip: 0x00000000

147 [State 211] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 161 instructions, PCs: bfba3452 bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
147 [State 211] Terminating state 211 with message 'eliminated this false positive, execution path subset of another success'
147 [State 211] Switching from state 211 to state 0
Copied 34928 (count=1)
Deleting state 211 0x0x21c11ed0
147 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 210
>> fuzzInit: datum forking for value 211
>> fuzzInit: datum forking for value 211
147 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 211)
        (ReadLSB w32 0 v211_fuzz_symb_211)))
    state 212 with condition (Not (Eq false
         (Eq (w32 211)
             (ReadLSB w32 0 v211_fuzz_symb_211))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-211-8048a0e
Size=2 Low=0 splitIndex=1 high=1
147 [State 0] Switching from state 0 to state 212
Copied 34928 (count=1)
Finalizing TB execution 212
s2e_dummyMainFunction
tcg-llvm-tb-211-8048a0e
147 [State 212] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 211 not yet applied), shell_len: 1024, eip: 0x00000000

147 [State 212] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
148 [State 212] Leaving buffer range @0xc126f278, 9d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
148 [State 212] Killing state 212
148 [State 212] Terminating state 212 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
148 [State 212] Switching from state 212 to state 0
Copied 34928 (count=1)
Deleting state 212 0x0x21c11ed0
148 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 211
>> fuzzInit: datum forking for value 212
>> fuzzInit: datum forking for value 212
148 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 212)
        (ReadLSB w32 0 v212_fuzz_symb_212)))
    state 213 with condition (Not (Eq false
         (Eq (w32 212)
             (ReadLSB w32 0 v212_fuzz_symb_212))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-212-8048a0e
Size=2 Low=0 splitIndex=1 high=1
148 [State 0] Switching from state 0 to state 213
Copied 34928 (count=1)
Finalizing TB execution 213
s2e_dummyMainFunction
tcg-llvm-tb-212-8048a0e
148 [State 213] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 212 not yet applied), shell_len: 1024, eip: 0x00000000

148 [State 213] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 160 instructions, PCs: bfba3454 bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
148 [State 213] Terminating state 213 with message 'eliminated this false positive, execution path subset of another success'
148 [State 213] Switching from state 213 to state 0
Copied 34928 (count=1)
Deleting state 213 0x0x21c11ed0
148 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 212
>> fuzzInit: datum forking for value 213
>> fuzzInit: datum forking for value 213
148 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 213)
        (ReadLSB w32 0 v213_fuzz_symb_213)))
    state 214 with condition (Not (Eq false
         (Eq (w32 213)
             (ReadLSB w32 0 v213_fuzz_symb_213))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-213-8048a0e
Size=2 Low=0 splitIndex=1 high=1
148 [State 0] Switching from state 0 to state 214
Copied 34928 (count=1)
Finalizing TB execution 214
s2e_dummyMainFunction
tcg-llvm-tb-213-8048a0e
148 [State 214] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 213 not yet applied), shell_len: 1024, eip: 0x00000000

148 [State 214] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
149 [State 214] Leaving buffer range @0xc126f278, 9c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
149 [State 214] Killing state 214
149 [State 214] Terminating state 214 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
149 [State 214] Switching from state 214 to state 0
Copied 34928 (count=1)
Deleting state 214 0x0x21c11ed0
149 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 213
>> fuzzInit: datum forking for value 214
>> fuzzInit: datum forking for value 214
149 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 214)
        (ReadLSB w32 0 v214_fuzz_symb_214)))
    state 215 with condition (Not (Eq false
         (Eq (w32 214)
             (ReadLSB w32 0 v214_fuzz_symb_214))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-214-8048a0e
Size=2 Low=0 splitIndex=1 high=1
149 [State 0] Switching from state 0 to state 215
Copied 34928 (count=1)
Finalizing TB execution 215
s2e_dummyMainFunction
tcg-llvm-tb-214-8048a0e
149 [State 215] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 214 not yet applied), shell_len: 1024, eip: 0x00000000

149 [State 215] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 159 instructions, PCs: bfba3456 bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
149 [State 215] Terminating state 215 with message 'eliminated this false positive, execution path subset of another success'
149 [State 215] Switching from state 215 to state 0
Copied 34928 (count=1)
Deleting state 215 0x0x21c11ed0
149 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 214
>> fuzzInit: datum forking for value 215
>> fuzzInit: datum forking for value 215
149 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 215)
        (ReadLSB w32 0 v215_fuzz_symb_215)))
    state 216 with condition (Not (Eq false
         (Eq (w32 215)
             (ReadLSB w32 0 v215_fuzz_symb_215))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-215-8048a0e
Size=2 Low=0 splitIndex=1 high=1
149 [State 0] Switching from state 0 to state 216
Copied 34928 (count=1)
Finalizing TB execution 216
s2e_dummyMainFunction
tcg-llvm-tb-215-8048a0e
Firing timer event
149 [State 216] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 215 not yet applied), shell_len: 1024, eip: 0x00000000

149 [State 216] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
150 [State 216] Leaving buffer range @0xc126f278, 9b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
150 [State 216] Killing state 216
150 [State 216] Terminating state 216 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
150 [State 216] Switching from state 216 to state 0
Copied 34928 (count=1)
Deleting state 216 0x0x21c11ed0
150 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 215
>> fuzzInit: datum forking for value 216
>> fuzzInit: datum forking for value 216
150 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 216)
        (ReadLSB w32 0 v216_fuzz_symb_216)))
    state 217 with condition (Not (Eq false
         (Eq (w32 216)
             (ReadLSB w32 0 v216_fuzz_symb_216))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-216-8048a0e
Size=2 Low=0 splitIndex=1 high=1
150 [State 0] Switching from state 0 to state 217
Copied 34928 (count=1)
Finalizing TB execution 217
s2e_dummyMainFunction
tcg-llvm-tb-216-8048a0e
150 [State 217] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 216 not yet applied), shell_len: 1024, eip: 0x00000000

150 [State 217] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 158 instructions, PCs: bfba3458 bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
150 [State 217] Terminating state 217 with message 'eliminated this false positive, execution path subset of another success'
150 [State 217] Switching from state 217 to state 0
Copied 34928 (count=1)
Deleting state 217 0x0x21c11ed0
150 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 216
>> fuzzInit: datum forking for value 217
>> fuzzInit: datum forking for value 217
150 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 217)
        (ReadLSB w32 0 v217_fuzz_symb_217)))
    state 218 with condition (Not (Eq false
         (Eq (w32 217)
             (ReadLSB w32 0 v217_fuzz_symb_217))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-217-8048a0e
Size=2 Low=0 splitIndex=1 high=1
150 [State 0] Switching from state 0 to state 218
Copied 34928 (count=1)
Finalizing TB execution 218
s2e_dummyMainFunction
tcg-llvm-tb-217-8048a0e
150 [State 218] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 217 not yet applied), shell_len: 1024, eip: 0x00000000

150 [State 218] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
151 [State 218] Leaving buffer range @0xc126f278, 9a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
151 [State 218] Killing state 218
151 [State 218] Terminating state 218 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
151 [State 218] Switching from state 218 to state 0
Copied 34928 (count=1)
Deleting state 218 0x0x21c11ed0
151 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 217
>> fuzzInit: datum forking for value 218
>> fuzzInit: datum forking for value 218
151 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 218)
        (ReadLSB w32 0 v218_fuzz_symb_218)))
    state 219 with condition (Not (Eq false
         (Eq (w32 218)
             (ReadLSB w32 0 v218_fuzz_symb_218))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-218-8048a0e
Size=2 Low=0 splitIndex=1 high=1
151 [State 0] Switching from state 0 to state 219
Copied 34928 (count=1)
Finalizing TB execution 219
s2e_dummyMainFunction
tcg-llvm-tb-218-8048a0e
151 [State 219] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 218 not yet applied), shell_len: 1024, eip: 0x00000000

151 [State 219] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 157 instructions, PCs: bfba345a bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
151 [State 219] Terminating state 219 with message 'eliminated this false positive, execution path subset of another success'
151 [State 219] Switching from state 219 to state 0
Copied 34928 (count=1)
Deleting state 219 0x0x255100d0
151 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 218
>> fuzzInit: datum forking for value 219
>> fuzzInit: datum forking for value 219
151 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 219)
        (ReadLSB w32 0 v219_fuzz_symb_219)))
    state 220 with condition (Not (Eq false
         (Eq (w32 219)
             (ReadLSB w32 0 v219_fuzz_symb_219))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-219-8048a0e
Size=2 Low=0 splitIndex=1 high=1
151 [State 0] Switching from state 0 to state 220
Copied 34928 (count=1)
Finalizing TB execution 220
s2e_dummyMainFunction
tcg-llvm-tb-219-8048a0e
151 [State 220] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 219 not yet applied), shell_len: 1024, eip: 0x00000000

151 [State 220] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
152 [State 220] Leaving buffer range @0xc126f278, 99 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
152 [State 220] Killing state 220
152 [State 220] Terminating state 220 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
152 [State 220] Switching from state 220 to state 0
Copied 34928 (count=1)
Deleting state 220 0x0x255100d0
152 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 219
>> fuzzInit: datum forking for value 220
>> fuzzInit: datum forking for value 220
152 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 220)
        (ReadLSB w32 0 v220_fuzz_symb_220)))
    state 221 with condition (Not (Eq false
         (Eq (w32 220)
             (ReadLSB w32 0 v220_fuzz_symb_220))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-220-8048a0e
Size=2 Low=0 splitIndex=1 high=1
152 [State 0] Switching from state 0 to state 221
Copied 34928 (count=1)
Finalizing TB execution 221
s2e_dummyMainFunction
tcg-llvm-tb-220-8048a0e
152 [State 221] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 220 not yet applied), shell_len: 1024, eip: 0x00000000

152 [State 221] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 156 instructions, PCs: bfba345c bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
152 [State 221] Terminating state 221 with message 'eliminated this false positive, execution path subset of another success'
152 [State 221] Switching from state 221 to state 0
Copied 34928 (count=1)
Deleting state 221 0x0x255100d0
152 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 220
>> fuzzInit: datum forking for value 221
>> fuzzInit: datum forking for value 221
152 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 221)
        (ReadLSB w32 0 v221_fuzz_symb_221)))
    state 222 with condition (Not (Eq false
         (Eq (w32 221)
             (ReadLSB w32 0 v221_fuzz_symb_221))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-221-8048a0e
Size=2 Low=0 splitIndex=1 high=1
152 [State 0] Switching from state 0 to state 222
Copied 34928 (count=1)
Finalizing TB execution 222
s2e_dummyMainFunction
tcg-llvm-tb-221-8048a0e
152 [State 222] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 221 not yet applied), shell_len: 1024, eip: 0x00000000

152 [State 222] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
152 [State 222] Leaving buffer range @0xc126f278, 98 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
153 [State 222] Killing state 222
153 [State 222] Terminating state 222 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
153 [State 222] Switching from state 222 to state 0
Copied 34928 (count=1)
Deleting state 222 0x0x255100d0
153 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 221
>> fuzzInit: datum forking for value 222
>> fuzzInit: datum forking for value 222
153 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 222)
        (ReadLSB w32 0 v222_fuzz_symb_222)))
    state 223 with condition (Not (Eq false
         (Eq (w32 222)
             (ReadLSB w32 0 v222_fuzz_symb_222))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-222-8048a0e
Size=2 Low=0 splitIndex=1 high=1
153 [State 0] Switching from state 0 to state 223
Copied 34928 (count=1)
Finalizing TB execution 223
s2e_dummyMainFunction
tcg-llvm-tb-222-8048a0e
153 [State 223] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 222 not yet applied), shell_len: 1024, eip: 0x00000000

153 [State 223] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 155 instructions, PCs: bfba345e bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
153 [State 223] Terminating state 223 with message 'eliminated this false positive, execution path subset of another success'
153 [State 223] Switching from state 223 to state 0
Copied 34928 (count=1)
Deleting state 223 0x0x255100d0
153 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 222
>> fuzzInit: datum forking for value 223
>> fuzzInit: datum forking for value 223
153 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 223)
        (ReadLSB w32 0 v223_fuzz_symb_223)))
    state 224 with condition (Not (Eq false
         (Eq (w32 223)
             (ReadLSB w32 0 v223_fuzz_symb_223))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-223-8048a0e
Size=2 Low=0 splitIndex=1 high=1
153 [State 0] Switching from state 0 to state 224
Copied 34928 (count=1)
Finalizing TB execution 224
s2e_dummyMainFunction
tcg-llvm-tb-223-8048a0e
153 [State 224] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 223 not yet applied), shell_len: 1024, eip: 0x00000000

153 [State 224] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
154 [State 224] Leaving buffer range @0xc126f278, 93 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
154 [State 224] Killing state 224
154 [State 224] Terminating state 224 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
154 [State 224] Switching from state 224 to state 0
Copied 34928 (count=1)
Deleting state 224 0x0x255100d0
154 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 223
>> fuzzInit: datum forking for value 224
>> fuzzInit: datum forking for value 224
154 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 224)
        (ReadLSB w32 0 v224_fuzz_symb_224)))
    state 225 with condition (Not (Eq false
         (Eq (w32 224)
             (ReadLSB w32 0 v224_fuzz_symb_224))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-224-8048a0e
Size=2 Low=0 splitIndex=1 high=1
154 [State 0] Switching from state 0 to state 225
Copied 34928 (count=1)
Finalizing TB execution 225
s2e_dummyMainFunction
tcg-llvm-tb-224-8048a0e
154 [State 225] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 224 not yet applied), shell_len: 1024, eip: 0x00000000

154 [State 225] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 154 instructions, PCs: bfba3460 bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
154 [State 225] Terminating state 225 with message 'eliminated this false positive, execution path subset of another success'
154 [State 225] Switching from state 225 to state 0
Copied 34928 (count=1)
Deleting state 225 0x0x2566efe0
154 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 224
>> fuzzInit: datum forking for value 225
>> fuzzInit: datum forking for value 225
154 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 225)
        (ReadLSB w32 0 v225_fuzz_symb_225)))
    state 226 with condition (Not (Eq false
         (Eq (w32 225)
             (ReadLSB w32 0 v225_fuzz_symb_225))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-225-8048a0e
Size=2 Low=0 splitIndex=1 high=1
154 [State 0] Switching from state 0 to state 226
Copied 34928 (count=1)
Finalizing TB execution 226
s2e_dummyMainFunction
tcg-llvm-tb-225-8048a0e
Firing timer event
155 [State 226] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 225 not yet applied), shell_len: 1024, eip: 0x00000000

155 [State 226] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
155 [State 226] Leaving buffer range @0xc126f278, 92 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
155 [State 226] Killing state 226
155 [State 226] Terminating state 226 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
155 [State 226] Switching from state 226 to state 0
Copied 34928 (count=1)
Deleting state 226 0x0x2566efe0
155 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 225
>> fuzzInit: datum forking for value 226
>> fuzzInit: datum forking for value 226
155 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 226)
        (ReadLSB w32 0 v226_fuzz_symb_226)))
    state 227 with condition (Not (Eq false
         (Eq (w32 226)
             (ReadLSB w32 0 v226_fuzz_symb_226))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-226-8048a0e
Size=2 Low=0 splitIndex=1 high=1
155 [State 0] Switching from state 0 to state 227
Copied 34928 (count=1)
Finalizing TB execution 227
s2e_dummyMainFunction
tcg-llvm-tb-226-8048a0e
155 [State 227] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 226 not yet applied), shell_len: 1024, eip: 0x00000000

155 [State 227] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 153 instructions, PCs: bfba3462 bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
155 [State 227] Terminating state 227 with message 'eliminated this false positive, execution path subset of another success'
155 [State 227] Switching from state 227 to state 0
Copied 34928 (count=1)
Deleting state 227 0x0x2566efe0
155 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 226
>> fuzzInit: datum forking for value 227
>> fuzzInit: datum forking for value 227
155 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 227)
        (ReadLSB w32 0 v227_fuzz_symb_227)))
    state 228 with condition (Not (Eq false
         (Eq (w32 227)
             (ReadLSB w32 0 v227_fuzz_symb_227))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-227-8048a0e
Size=2 Low=0 splitIndex=1 high=1
155 [State 0] Switching from state 0 to state 228
Copied 34928 (count=1)
Finalizing TB execution 228
s2e_dummyMainFunction
tcg-llvm-tb-227-8048a0e
Firing timer event
156 [State 228] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 227 not yet applied), shell_len: 1024, eip: 0x00000000

156 [State 228] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
156 [State 228] Leaving buffer range @0xc126f278, 92 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
156 [State 228] Killing state 228
156 [State 228] Terminating state 228 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
156 [State 228] Switching from state 228 to state 0
Copied 34928 (count=1)
Deleting state 228 0x0x25842800
156 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 227
>> fuzzInit: datum forking for value 228
>> fuzzInit: datum forking for value 228
156 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 228)
        (ReadLSB w32 0 v228_fuzz_symb_228)))
    state 229 with condition (Not (Eq false
         (Eq (w32 228)
             (ReadLSB w32 0 v228_fuzz_symb_228))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-228-8048a0e
Size=2 Low=0 splitIndex=1 high=1
156 [State 0] Switching from state 0 to state 229
Copied 34928 (count=1)
Finalizing TB execution 229
s2e_dummyMainFunction
tcg-llvm-tb-228-8048a0e
156 [State 229] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 228 not yet applied), shell_len: 1024, eip: 0x00000000

156 [State 229] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 152 instructions, PCs: bfba3464 bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
156 [State 229] Terminating state 229 with message 'eliminated this false positive, execution path subset of another success'
156 [State 229] Switching from state 229 to state 0
Copied 34928 (count=1)
Deleting state 229 0x0x25842800
156 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 228
>> fuzzInit: datum forking for value 229
>> fuzzInit: datum forking for value 229
156 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 229)
        (ReadLSB w32 0 v229_fuzz_symb_229)))
    state 230 with condition (Not (Eq false
         (Eq (w32 229)
             (ReadLSB w32 0 v229_fuzz_symb_229))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-229-8048a0e
Size=2 Low=0 splitIndex=1 high=1
156 [State 0] Switching from state 0 to state 230
Copied 34928 (count=1)
Finalizing TB execution 230
s2e_dummyMainFunction
tcg-llvm-tb-229-8048a0e
Firing timer event
157 [State 230] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 229 not yet applied), shell_len: 1024, eip: 0x00000000

157 [State 230] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
157 [State 230] Leaving buffer range @0xc126f278, 91 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
157 [State 230] Killing state 230
157 [State 230] Terminating state 230 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
157 [State 230] Switching from state 230 to state 0
Copied 34928 (count=1)
Deleting state 230 0x0x25842800
157 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 229
>> fuzzInit: datum forking for value 230
>> fuzzInit: datum forking for value 230
157 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 230)
        (ReadLSB w32 0 v230_fuzz_symb_230)))
    state 231 with condition (Not (Eq false
         (Eq (w32 230)
             (ReadLSB w32 0 v230_fuzz_symb_230))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-230-8048a0e
Size=2 Low=0 splitIndex=1 high=1
157 [State 0] Switching from state 0 to state 231
Copied 34928 (count=1)
Finalizing TB execution 231
s2e_dummyMainFunction
tcg-llvm-tb-230-8048a0e
157 [State 231] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 230 not yet applied), shell_len: 1024, eip: 0x00000000

157 [State 231] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 151 instructions, PCs: bfba3466 bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
157 [State 231] Terminating state 231 with message 'eliminated this false positive, execution path subset of another success'
157 [State 231] Switching from state 231 to state 0
Copied 34928 (count=1)
Deleting state 231 0x0x25842800
157 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 230
>> fuzzInit: datum forking for value 231
>> fuzzInit: datum forking for value 231
158 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 231)
        (ReadLSB w32 0 v231_fuzz_symb_231)))
    state 232 with condition (Not (Eq false
         (Eq (w32 231)
             (ReadLSB w32 0 v231_fuzz_symb_231))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-231-8048a0e
Size=2 Low=0 splitIndex=1 high=1
158 [State 0] Switching from state 0 to state 232
Copied 34928 (count=1)
Finalizing TB execution 232
s2e_dummyMainFunction
tcg-llvm-tb-231-8048a0e
Firing timer event
158 [State 232] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 231 not yet applied), shell_len: 1024, eip: 0x00000000

158 [State 232] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
158 [State 232] Leaving buffer range @0xc126f278, 91 IoB insns; prev insn @0xbfba3591
  1   3B @0xbfba3591:  1 4b cd          add [ebx-0x33], ecx     
158 [State 232] Killing state 232
158 [State 232] Terminating state 232 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
158 [State 232] Switching from state 232 to state 0
Copied 34928 (count=1)
Deleting state 232 0x0x25842800
158 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 231
>> fuzzInit: datum forking for value 232
>> fuzzInit: datum forking for value 232
158 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 232)
        (ReadLSB w32 0 v232_fuzz_symb_232)))
    state 233 with condition (Not (Eq false
         (Eq (w32 232)
             (ReadLSB w32 0 v232_fuzz_symb_232))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-232-8048a0e
Size=2 Low=0 splitIndex=1 high=1
158 [State 0] Switching from state 0 to state 233
Copied 34928 (count=1)
Finalizing TB execution 233
s2e_dummyMainFunction
tcg-llvm-tb-232-8048a0e
158 [State 233] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 232 not yet applied), shell_len: 1024, eip: 0x00000000

158 [State 233] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 150 instructions, PCs: bfba3468 bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
158 [State 233] Terminating state 233 with message 'eliminated this false positive, execution path subset of another success'
158 [State 233] Switching from state 233 to state 0
Copied 34928 (count=1)
Deleting state 233 0x0x25842800
Firing timer event
159 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 232
>> fuzzInit: datum forking for value 233
>> fuzzInit: datum forking for value 233
159 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 233)
        (ReadLSB w32 0 v233_fuzz_symb_233)))
    state 234 with condition (Not (Eq false
         (Eq (w32 233)
             (ReadLSB w32 0 v233_fuzz_symb_233))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-233-8048a0e
Size=2 Low=0 splitIndex=1 high=1
159 [State 0] Switching from state 0 to state 234
Copied 34928 (count=1)
Finalizing TB execution 234
s2e_dummyMainFunction
tcg-llvm-tb-233-8048a0e
159 [State 234] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 233 not yet applied), shell_len: 1024, eip: 0x00000000

159 [State 234] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
159 [State 234] Leaving buffer range @0xc126f278, 91 IoB insns; prev insn @0xbfba3594
  1   3B @0xbfba3594: 80 e8 e8          sub al, 0xe8            
159 [State 234] Killing state 234
159 [State 234] Terminating state 234 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
159 [State 234] Switching from state 234 to state 0
Copied 34928 (count=1)
Deleting state 234 0x0x25842800
159 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 233
>> fuzzInit: datum forking for value 234
>> fuzzInit: datum forking for value 234
159 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 234)
        (ReadLSB w32 0 v234_fuzz_symb_234)))
    state 235 with condition (Not (Eq false
         (Eq (w32 234)
             (ReadLSB w32 0 v234_fuzz_symb_234))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-234-8048a0e
Size=2 Low=0 splitIndex=1 high=1
159 [State 0] Switching from state 0 to state 235
Copied 34928 (count=1)
Finalizing TB execution 235
s2e_dummyMainFunction
tcg-llvm-tb-234-8048a0e
159 [State 235] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 234 not yet applied), shell_len: 1024, eip: 0x00000000

159 [State 235] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 149 instructions, PCs: bfba346a bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
160 [State 235] Terminating state 235 with message 'eliminated this false positive, execution path subset of another success'
160 [State 235] Switching from state 235 to state 0
Copied 34928 (count=1)
Deleting state 235 0x0x2590ade0
160 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 234
>> fuzzInit: datum forking for value 235
>> fuzzInit: datum forking for value 235
160 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 235)
        (ReadLSB w32 0 v235_fuzz_symb_235)))
    state 236 with condition (Not (Eq false
         (Eq (w32 235)
             (ReadLSB w32 0 v235_fuzz_symb_235))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-235-8048a0e
Size=2 Low=0 splitIndex=1 high=1
160 [State 0] Switching from state 0 to state 236
Copied 34928 (count=1)
Finalizing TB execution 236
s2e_dummyMainFunction
tcg-llvm-tb-235-8048a0e
160 [State 236] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 235 not yet applied), shell_len: 1024, eip: 0x00000000

160 [State 236] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
160 [State 236] Leaving buffer range @0xc126f278, 91 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
160 [State 236] Killing state 236
160 [State 236] Terminating state 236 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
160 [State 236] Switching from state 236 to state 0
Copied 34928 (count=1)
Deleting state 236 0x0x2590ade0
160 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 235
>> fuzzInit: datum forking for value 236
>> fuzzInit: datum forking for value 236
161 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 236)
        (ReadLSB w32 0 v236_fuzz_symb_236)))
    state 237 with condition (Not (Eq false
         (Eq (w32 236)
             (ReadLSB w32 0 v236_fuzz_symb_236))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-236-8048a0e
Size=2 Low=0 splitIndex=1 high=1
161 [State 0] Switching from state 0 to state 237
Copied 34928 (count=1)
Finalizing TB execution 237
s2e_dummyMainFunction
tcg-llvm-tb-236-8048a0e
Firing timer event
161 [State 237] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 236 not yet applied), shell_len: 1024, eip: 0x00000000

161 [State 237] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 148 instructions, PCs: bfba346c bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
161 [State 237] Terminating state 237 with message 'eliminated this false positive, execution path subset of another success'
161 [State 237] Switching from state 237 to state 0
Copied 34928 (count=1)
Deleting state 237 0x0x2590ade0
161 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 236
>> fuzzInit: datum forking for value 237
>> fuzzInit: datum forking for value 237
161 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 237)
        (ReadLSB w32 0 v237_fuzz_symb_237)))
    state 238 with condition (Not (Eq false
         (Eq (w32 237)
             (ReadLSB w32 0 v237_fuzz_symb_237))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-237-8048a0e
Size=2 Low=0 splitIndex=1 high=1
161 [State 0] Switching from state 0 to state 238
Copied 34928 (count=1)
Finalizing TB execution 238
s2e_dummyMainFunction
tcg-llvm-tb-237-8048a0e
161 [State 238] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 237 not yet applied), shell_len: 1024, eip: 0x00000000

161 [State 238] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
161 [State 238] Leaving buffer range @0xc126f278, 90 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
161 [State 238] Killing state 238
161 [State 238] Terminating state 238 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
161 [State 238] Switching from state 238 to state 0
Copied 34928 (count=1)
Deleting state 238 0x0x25ac2df0
161 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 237
>> fuzzInit: datum forking for value 238
>> fuzzInit: datum forking for value 238
162 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 238)
        (ReadLSB w32 0 v238_fuzz_symb_238)))
    state 239 with condition (Not (Eq false
         (Eq (w32 238)
             (ReadLSB w32 0 v238_fuzz_symb_238))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-238-8048a0e
Size=2 Low=0 splitIndex=1 high=1
162 [State 0] Switching from state 0 to state 239
Copied 34928 (count=1)
Finalizing TB execution 239
s2e_dummyMainFunction
tcg-llvm-tb-238-8048a0e
Firing timer event
162 [State 239] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 238 not yet applied), shell_len: 1024, eip: 0x00000000

162 [State 239] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 147 instructions, PCs: bfba346e bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
162 [State 239] Terminating state 239 with message 'eliminated this false positive, execution path subset of another success'
162 [State 239] Switching from state 239 to state 0
Copied 34928 (count=1)
Deleting state 239 0x0x25ac2df0
162 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 238
>> fuzzInit: datum forking for value 239
>> fuzzInit: datum forking for value 239
162 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 239)
        (ReadLSB w32 0 v239_fuzz_symb_239)))
    state 240 with condition (Not (Eq false
         (Eq (w32 239)
             (ReadLSB w32 0 v239_fuzz_symb_239))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-239-8048a0e
Size=2 Low=0 splitIndex=1 high=1
162 [State 0] Switching from state 0 to state 240
Copied 34928 (count=1)
Finalizing TB execution 240
s2e_dummyMainFunction
tcg-llvm-tb-239-8048a0e
162 [State 240] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 239 not yet applied), shell_len: 1024, eip: 0x00000000

162 [State 240] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
162 [State 240] Leaving buffer range @0xc126f278, 8f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
162 [State 240] Killing state 240
162 [State 240] Terminating state 240 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
162 [State 240] Switching from state 240 to state 0
Copied 34928 (count=1)
Deleting state 240 0x0x25842800
162 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 239
>> fuzzInit: datum forking for value 240
>> fuzzInit: datum forking for value 240
163 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 240)
        (ReadLSB w32 0 v240_fuzz_symb_240)))
    state 241 with condition (Not (Eq false
         (Eq (w32 240)
             (ReadLSB w32 0 v240_fuzz_symb_240))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-240-8048a0e
Size=2 Low=0 splitIndex=1 high=1
163 [State 0] Switching from state 0 to state 241
Copied 34928 (count=1)
Finalizing TB execution 241
s2e_dummyMainFunction
tcg-llvm-tb-240-8048a0e
Firing timer event
163 [State 241] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 240 not yet applied), shell_len: 1024, eip: 0x00000000

163 [State 241] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 146 instructions, PCs: bfba3470 bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
163 [State 241] Terminating state 241 with message 'eliminated this false positive, execution path subset of another success'
163 [State 241] Switching from state 241 to state 0
Copied 34928 (count=1)
Deleting state 241 0x0x25842800
163 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 240
>> fuzzInit: datum forking for value 241
>> fuzzInit: datum forking for value 241
163 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 241)
        (ReadLSB w32 0 v241_fuzz_symb_241)))
    state 242 with condition (Not (Eq false
         (Eq (w32 241)
             (ReadLSB w32 0 v241_fuzz_symb_241))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-241-8048a0e
Size=2 Low=0 splitIndex=1 high=1
163 [State 0] Switching from state 0 to state 242
Copied 34928 (count=1)
Finalizing TB execution 242
s2e_dummyMainFunction
tcg-llvm-tb-241-8048a0e
163 [State 242] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 241 not yet applied), shell_len: 1024, eip: 0x00000000

163 [State 242] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
163 [State 242] Leaving buffer range @0xc126f278, 8e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
163 [State 242] Killing state 242
163 [State 242] Terminating state 242 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
163 [State 242] Switching from state 242 to state 0
Copied 34928 (count=1)
Deleting state 242 0x0x25ba07e0
163 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 241
>> fuzzInit: datum forking for value 242
>> fuzzInit: datum forking for value 242
164 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 242)
        (ReadLSB w32 0 v242_fuzz_symb_242)))
    state 243 with condition (Not (Eq false
         (Eq (w32 242)
             (ReadLSB w32 0 v242_fuzz_symb_242))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-242-8048a0e
Size=2 Low=0 splitIndex=1 high=1
164 [State 0] Switching from state 0 to state 243
Copied 34928 (count=1)
Finalizing TB execution 243
s2e_dummyMainFunction
tcg-llvm-tb-242-8048a0e
Firing timer event
164 [State 243] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 242 not yet applied), shell_len: 1024, eip: 0x00000000

164 [State 243] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 145 instructions, PCs: bfba3472 bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
164 [State 243] Terminating state 243 with message 'eliminated this false positive, execution path subset of another success'
164 [State 243] Switching from state 243 to state 0
Copied 34928 (count=1)
Deleting state 243 0x0x25d8f8b0
164 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 242
>> fuzzInit: datum forking for value 243
>> fuzzInit: datum forking for value 243
164 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 243)
        (ReadLSB w32 0 v243_fuzz_symb_243)))
    state 244 with condition (Not (Eq false
         (Eq (w32 243)
             (ReadLSB w32 0 v243_fuzz_symb_243))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-243-8048a0e
Size=2 Low=0 splitIndex=1 high=1
164 [State 0] Switching from state 0 to state 244
Copied 34928 (count=1)
Finalizing TB execution 244
s2e_dummyMainFunction
tcg-llvm-tb-243-8048a0e
164 [State 244] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 243 not yet applied), shell_len: 1024, eip: 0x00000000

164 [State 244] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
164 [State 244] Leaving buffer range @0xc126f278, 8d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
164 [State 244] Killing state 244
164 [State 244] Terminating state 244 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
164 [State 244] Switching from state 244 to state 0
Copied 34928 (count=1)
Deleting state 244 0x0x25d8f8b0
165 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 243
>> fuzzInit: datum forking for value 244
>> fuzzInit: datum forking for value 244
165 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 244)
        (ReadLSB w32 0 v244_fuzz_symb_244)))
    state 245 with condition (Not (Eq false
         (Eq (w32 244)
             (ReadLSB w32 0 v244_fuzz_symb_244))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-244-8048a0e
Size=2 Low=0 splitIndex=1 high=1
165 [State 0] Switching from state 0 to state 245
Copied 34928 (count=1)
Finalizing TB execution 245
s2e_dummyMainFunction
tcg-llvm-tb-244-8048a0e
Firing timer event
165 [State 245] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 244 not yet applied), shell_len: 1024, eip: 0x00000000

165 [State 245] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 144 instructions, PCs: bfba3474 bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
165 [State 245] Terminating state 245 with message 'eliminated this false positive, execution path subset of another success'
165 [State 245] Switching from state 245 to state 0
Copied 34928 (count=1)
Deleting state 245 0x0x25d8f8b0
165 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 244
>> fuzzInit: datum forking for value 245
>> fuzzInit: datum forking for value 245
165 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 245)
        (ReadLSB w32 0 v245_fuzz_symb_245)))
    state 246 with condition (Not (Eq false
         (Eq (w32 245)
             (ReadLSB w32 0 v245_fuzz_symb_245))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-245-8048a0e
Size=2 Low=0 splitIndex=1 high=1
165 [State 0] Switching from state 0 to state 246
Copied 34928 (count=1)
Finalizing TB execution 246
s2e_dummyMainFunction
tcg-llvm-tb-245-8048a0e
165 [State 246] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 245 not yet applied), shell_len: 1024, eip: 0x00000000

165 [State 246] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
165 [State 246] Leaving buffer range @0xc126f278, 8c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
165 [State 246] Killing state 246
165 [State 246] Terminating state 246 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
165 [State 246] Switching from state 246 to state 0
Copied 34928 (count=1)
Deleting state 246 0x0x25d8f8b0
166 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 245
>> fuzzInit: datum forking for value 246
>> fuzzInit: datum forking for value 246
166 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 246)
        (ReadLSB w32 0 v246_fuzz_symb_246)))
    state 247 with condition (Not (Eq false
         (Eq (w32 246)
             (ReadLSB w32 0 v246_fuzz_symb_246))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-246-8048a0e
Size=2 Low=0 splitIndex=1 high=1
166 [State 0] Switching from state 0 to state 247
Copied 34928 (count=1)
Finalizing TB execution 247
s2e_dummyMainFunction
tcg-llvm-tb-246-8048a0e
Firing timer event
166 [State 247] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 246 not yet applied), shell_len: 1024, eip: 0x00000000

166 [State 247] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 143 instructions, PCs: bfba3476 bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
166 [State 247] Terminating state 247 with message 'eliminated this false positive, execution path subset of another success'
166 [State 247] Switching from state 247 to state 0
Copied 34928 (count=1)
Deleting state 247 0x0x25d465d0
166 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 246
>> fuzzInit: datum forking for value 247
>> fuzzInit: datum forking for value 247
166 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 247)
        (ReadLSB w32 0 v247_fuzz_symb_247)))
    state 248 with condition (Not (Eq false
         (Eq (w32 247)
             (ReadLSB w32 0 v247_fuzz_symb_247))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-247-8048a0e
Size=2 Low=0 splitIndex=1 high=1
166 [State 0] Switching from state 0 to state 248
Copied 34928 (count=1)
Finalizing TB execution 248
s2e_dummyMainFunction
tcg-llvm-tb-247-8048a0e
166 [State 248] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 247 not yet applied), shell_len: 1024, eip: 0x00000000

166 [State 248] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
166 [State 248] Leaving buffer range @0xc126f278, 8b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
166 [State 248] Killing state 248
166 [State 248] Terminating state 248 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
166 [State 248] Switching from state 248 to state 0
Copied 34928 (count=1)
Deleting state 248 0x0x25d465d0
167 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 247
>> fuzzInit: datum forking for value 248
>> fuzzInit: datum forking for value 248
167 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 248)
        (ReadLSB w32 0 v248_fuzz_symb_248)))
    state 249 with condition (Not (Eq false
         (Eq (w32 248)
             (ReadLSB w32 0 v248_fuzz_symb_248))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-248-8048a0e
Size=2 Low=0 splitIndex=1 high=1
167 [State 0] Switching from state 0 to state 249
Copied 34928 (count=1)
Finalizing TB execution 249
s2e_dummyMainFunction
tcg-llvm-tb-248-8048a0e
Firing timer event
167 [State 249] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 248 not yet applied), shell_len: 1024, eip: 0x00000000

167 [State 249] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 142 instructions, PCs: bfba3478 bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
167 [State 249] Terminating state 249 with message 'eliminated this false positive, execution path subset of another success'
167 [State 249] Switching from state 249 to state 0
Copied 34928 (count=1)
Deleting state 249 0x0x25d465d0
167 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 248
>> fuzzInit: datum forking for value 249
>> fuzzInit: datum forking for value 249
167 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 249)
        (ReadLSB w32 0 v249_fuzz_symb_249)))
    state 250 with condition (Not (Eq false
         (Eq (w32 249)
             (ReadLSB w32 0 v249_fuzz_symb_249))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-249-8048a0e
Size=2 Low=0 splitIndex=1 high=1
167 [State 0] Switching from state 0 to state 250
Copied 34928 (count=1)
Finalizing TB execution 250
s2e_dummyMainFunction
tcg-llvm-tb-249-8048a0e
167 [State 250] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 249 not yet applied), shell_len: 1024, eip: 0x00000000

167 [State 250] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
168 [State 250] Leaving buffer range @0xc126f278, 8a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
168 [State 250] Killing state 250
168 [State 250] Terminating state 250 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
168 [State 250] Switching from state 250 to state 0
Copied 34928 (count=1)
Deleting state 250 0x0x25d465d0
168 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 249
>> fuzzInit: datum forking for value 250
>> fuzzInit: datum forking for value 250
168 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 250)
        (ReadLSB w32 0 v250_fuzz_symb_250)))
    state 251 with condition (Not (Eq false
         (Eq (w32 250)
             (ReadLSB w32 0 v250_fuzz_symb_250))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-250-8048a0e
Size=2 Low=0 splitIndex=1 high=1
168 [State 0] Switching from state 0 to state 251
Copied 34928 (count=1)
Finalizing TB execution 251
s2e_dummyMainFunction
tcg-llvm-tb-250-8048a0e
Firing timer event
168 [State 251] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 250 not yet applied), shell_len: 1024, eip: 0x00000000

168 [State 251] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 141 instructions, PCs: bfba347a bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
168 [State 251] Terminating state 251 with message 'eliminated this false positive, execution path subset of another success'
168 [State 251] Switching from state 251 to state 0
Copied 34928 (count=1)
Deleting state 251 0x0x25f6c8a0
168 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 250
>> fuzzInit: datum forking for value 251
>> fuzzInit: datum forking for value 251
168 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 251)
        (ReadLSB w32 0 v251_fuzz_symb_251)))
    state 252 with condition (Not (Eq false
         (Eq (w32 251)
             (ReadLSB w32 0 v251_fuzz_symb_251))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-251-8048a0e
Size=2 Low=0 splitIndex=1 high=1
168 [State 0] Switching from state 0 to state 252
Copied 34928 (count=1)
Finalizing TB execution 252
s2e_dummyMainFunction
tcg-llvm-tb-251-8048a0e
168 [State 252] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 251 not yet applied), shell_len: 1024, eip: 0x00000000

168 [State 252] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
168 [State 252] Leaving buffer range @0xc126f278, 89 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
169 [State 252] Killing state 252
169 [State 252] Terminating state 252 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
169 [State 252] Switching from state 252 to state 0
Copied 34928 (count=1)
Deleting state 252 0x0x25f6c8a0
169 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 251
>> fuzzInit: datum forking for value 252
>> fuzzInit: datum forking for value 252
169 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 252)
        (ReadLSB w32 0 v252_fuzz_symb_252)))
    state 253 with condition (Not (Eq false
         (Eq (w32 252)
             (ReadLSB w32 0 v252_fuzz_symb_252))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-252-8048a0e
Size=2 Low=0 splitIndex=1 high=1
169 [State 0] Switching from state 0 to state 253
Copied 34928 (count=1)
Finalizing TB execution 253
s2e_dummyMainFunction
tcg-llvm-tb-252-8048a0e
169 [State 253] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 252 not yet applied), shell_len: 1024, eip: 0x00000000

169 [State 253] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 140 instructions, PCs: bfba347c bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
169 [State 253] Terminating state 253 with message 'eliminated this false positive, execution path subset of another success'
169 [State 253] Switching from state 253 to state 0
Copied 34928 (count=1)
Deleting state 253 0x0x25f6c8a0
169 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 252
>> fuzzInit: datum forking for value 253
>> fuzzInit: datum forking for value 253
169 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 253)
        (ReadLSB w32 0 v253_fuzz_symb_253)))
    state 254 with condition (Not (Eq false
         (Eq (w32 253)
             (ReadLSB w32 0 v253_fuzz_symb_253))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-253-8048a0e
Size=2 Low=0 splitIndex=1 high=1
169 [State 0] Switching from state 0 to state 254
Copied 34928 (count=1)
Finalizing TB execution 254
s2e_dummyMainFunction
tcg-llvm-tb-253-8048a0e
169 [State 254] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 253 not yet applied), shell_len: 1024, eip: 0x00000000

169 [State 254] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
169 [State 254] Leaving buffer range @0xc126f278, 88 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
170 [State 254] Killing state 254
170 [State 254] Terminating state 254 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
170 [State 254] Switching from state 254 to state 0
Copied 34928 (count=1)
Deleting state 254 0x0x25f6c8a0
170 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 253
>> fuzzInit: datum forking for value 254
>> fuzzInit: datum forking for value 254
170 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 254)
        (ReadLSB w32 0 v254_fuzz_symb_254)))
    state 255 with condition (Not (Eq false
         (Eq (w32 254)
             (ReadLSB w32 0 v254_fuzz_symb_254))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-254-8048a0e
Size=2 Low=0 splitIndex=1 high=1
170 [State 0] Switching from state 0 to state 255
Copied 34928 (count=1)
Finalizing TB execution 255
s2e_dummyMainFunction
tcg-llvm-tb-254-8048a0e
170 [State 255] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 254 not yet applied), shell_len: 1024, eip: 0x00000000

170 [State 255] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 139 instructions, PCs: bfba347e bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
170 [State 255] Terminating state 255 with message 'eliminated this false positive, execution path subset of another success'
170 [State 255] Switching from state 255 to state 0
Copied 34928 (count=1)
Deleting state 255 0x0x25f6c8a0
170 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 254
>> fuzzInit: datum forking for value 255
>> fuzzInit: datum forking for value 255
170 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 255)
        (ReadLSB w32 0 v255_fuzz_symb_255)))
    state 256 with condition (Not (Eq false
         (Eq (w32 255)
             (ReadLSB w32 0 v255_fuzz_symb_255))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-255-8048a0e
Size=2 Low=0 splitIndex=1 high=1
170 [State 0] Switching from state 0 to state 256
Copied 34928 (count=1)
Finalizing TB execution 256
s2e_dummyMainFunction
tcg-llvm-tb-255-8048a0e
170 [State 256] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 255 not yet applied), shell_len: 1024, eip: 0x00000000

170 [State 256] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
170 [State 256] Leaving buffer range @0xc126f278, 87 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
170 [State 256] Killing state 256
170 [State 256] Terminating state 256 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
170 [State 256] Switching from state 256 to state 0
Copied 34928 (count=1)
Deleting state 256 0x0x26197a90
171 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 255
>> fuzzInit: datum forking for value 256
>> fuzzInit: datum forking for value 256
171 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 256)
        (ReadLSB w32 0 v256_fuzz_symb_256)))
    state 257 with condition (Not (Eq false
         (Eq (w32 256)
             (ReadLSB w32 0 v256_fuzz_symb_256))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-256-8048a0e
Size=2 Low=0 splitIndex=1 high=1
171 [State 0] Switching from state 0 to state 257
Copied 34928 (count=1)
Finalizing TB execution 257
s2e_dummyMainFunction
tcg-llvm-tb-256-8048a0e
171 [State 257] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 256 not yet applied), shell_len: 1024, eip: 0x00000000

171 [State 257] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 138 instructions, PCs: bfba3480 bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
171 [State 257] Terminating state 257 with message 'eliminated this false positive, execution path subset of another success'
171 [State 257] Switching from state 257 to state 0
Copied 34928 (count=1)
Deleting state 257 0x0x26197a90
171 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 256
>> fuzzInit: datum forking for value 257
>> fuzzInit: datum forking for value 257
171 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 257)
        (ReadLSB w32 0 v257_fuzz_symb_257)))
    state 258 with condition (Not (Eq false
         (Eq (w32 257)
             (ReadLSB w32 0 v257_fuzz_symb_257))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-257-8048a0e
Size=2 Low=0 splitIndex=1 high=1
171 [State 0] Switching from state 0 to state 258
Copied 34928 (count=1)
Finalizing TB execution 258
s2e_dummyMainFunction
tcg-llvm-tb-257-8048a0e
171 [State 258] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 257 not yet applied), shell_len: 1024, eip: 0x00000000

171 [State 258] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
171 [State 258] Leaving buffer range @0xc126f278, 86 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
172 [State 258] Killing state 258
172 [State 258] Terminating state 258 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
172 [State 258] Switching from state 258 to state 0
Copied 34928 (count=1)
Deleting state 258 0x0x26197a90
172 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 257
>> fuzzInit: datum forking for value 258
>> fuzzInit: datum forking for value 258
172 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 258)
        (ReadLSB w32 0 v258_fuzz_symb_258)))
    state 259 with condition (Not (Eq false
         (Eq (w32 258)
             (ReadLSB w32 0 v258_fuzz_symb_258))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-258-8048a0e
Size=2 Low=0 splitIndex=1 high=1
172 [State 0] Switching from state 0 to state 259
Copied 34928 (count=1)
Finalizing TB execution 259
s2e_dummyMainFunction
tcg-llvm-tb-258-8048a0e
172 [State 259] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 258 not yet applied), shell_len: 1024, eip: 0x00000000

172 [State 259] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 137 instructions, PCs: bfba3482 bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
172 [State 259] Terminating state 259 with message 'eliminated this false positive, execution path subset of another success'
172 [State 259] Switching from state 259 to state 0
Copied 34928 (count=1)
Deleting state 259 0x0x26197a90
172 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 258
>> fuzzInit: datum forking for value 259
>> fuzzInit: datum forking for value 259
172 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 259)
        (ReadLSB w32 0 v259_fuzz_symb_259)))
    state 260 with condition (Not (Eq false
         (Eq (w32 259)
             (ReadLSB w32 0 v259_fuzz_symb_259))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-259-8048a0e
Size=2 Low=0 splitIndex=1 high=1
172 [State 0] Switching from state 0 to state 260
Copied 34928 (count=1)
Finalizing TB execution 260
s2e_dummyMainFunction
tcg-llvm-tb-259-8048a0e
172 [State 260] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 259 not yet applied), shell_len: 1024, eip: 0x00000000

172 [State 260] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
172 [State 260] Leaving buffer range @0xc126f278, 85 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
173 [State 260] Killing state 260
173 [State 260] Terminating state 260 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
173 [State 260] Switching from state 260 to state 0
Copied 34928 (count=1)
Deleting state 260 0x0x26197a90
173 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 259
>> fuzzInit: datum forking for value 260
>> fuzzInit: datum forking for value 260
173 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 260)
        (ReadLSB w32 0 v260_fuzz_symb_260)))
    state 261 with condition (Not (Eq false
         (Eq (w32 260)
             (ReadLSB w32 0 v260_fuzz_symb_260))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-260-8048a0e
Size=2 Low=0 splitIndex=1 high=1
173 [State 0] Switching from state 0 to state 261
Copied 34928 (count=1)
Finalizing TB execution 261
s2e_dummyMainFunction
tcg-llvm-tb-260-8048a0e
Firing timer event
173 [State 261] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 260 not yet applied), shell_len: 1024, eip: 0x00000000

173 [State 261] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 136 instructions, PCs: bfba3484 bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
173 [State 261] Terminating state 261 with message 'eliminated this false positive, execution path subset of another success'
173 [State 261] Switching from state 261 to state 0
Copied 34928 (count=1)
Deleting state 261 0x0x2625d2b0
173 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 260
>> fuzzInit: datum forking for value 261
>> fuzzInit: datum forking for value 261
173 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 261)
        (ReadLSB w32 0 v261_fuzz_symb_261)))
    state 262 with condition (Not (Eq false
         (Eq (w32 261)
             (ReadLSB w32 0 v261_fuzz_symb_261))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-261-8048a0e
Size=2 Low=0 splitIndex=1 high=1
173 [State 0] Switching from state 0 to state 262
Copied 34928 (count=1)
Finalizing TB execution 262
s2e_dummyMainFunction
tcg-llvm-tb-261-8048a0e
173 [State 262] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 261 not yet applied), shell_len: 1024, eip: 0x00000000

173 [State 262] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
174 [State 262] Leaving buffer range @0xc126f278, 84 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
174 [State 262] Killing state 262
174 [State 262] Terminating state 262 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
174 [State 262] Switching from state 262 to state 0
Copied 34928 (count=1)
Deleting state 262 0x0x2625d2b0
174 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 261
>> fuzzInit: datum forking for value 262
>> fuzzInit: datum forking for value 262
174 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 262)
        (ReadLSB w32 0 v262_fuzz_symb_262)))
    state 263 with condition (Not (Eq false
         (Eq (w32 262)
             (ReadLSB w32 0 v262_fuzz_symb_262))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-262-8048a0e
Size=2 Low=0 splitIndex=1 high=1
174 [State 0] Switching from state 0 to state 263
Copied 34928 (count=1)
Finalizing TB execution 263
s2e_dummyMainFunction
tcg-llvm-tb-262-8048a0e
Firing timer event
174 [State 263] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 262 not yet applied), shell_len: 1024, eip: 0x00000000

174 [State 263] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 135 instructions, PCs: bfba3486 bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
174 [State 263] Terminating state 263 with message 'eliminated this false positive, execution path subset of another success'
174 [State 263] Switching from state 263 to state 0
Copied 34928 (count=1)
Deleting state 263 0x0x26250ad0
174 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 262
>> fuzzInit: datum forking for value 263
>> fuzzInit: datum forking for value 263
174 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 263)
        (ReadLSB w32 0 v263_fuzz_symb_263)))
    state 264 with condition (Not (Eq false
         (Eq (w32 263)
             (ReadLSB w32 0 v263_fuzz_symb_263))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-263-8048a0e
Size=2 Low=0 splitIndex=1 high=1
174 [State 0] Switching from state 0 to state 264
Copied 34928 (count=1)
Finalizing TB execution 264
s2e_dummyMainFunction
tcg-llvm-tb-263-8048a0e
174 [State 264] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 263 not yet applied), shell_len: 1024, eip: 0x00000000

174 [State 264] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
175 [State 264] Leaving buffer range @0xc126f278, 83 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
175 [State 264] Killing state 264
175 [State 264] Terminating state 264 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
175 [State 264] Switching from state 264 to state 0
Copied 34928 (count=1)
Deleting state 264 0x0x26250ad0
175 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 263
>> fuzzInit: datum forking for value 264
>> fuzzInit: datum forking for value 264
175 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 264)
        (ReadLSB w32 0 v264_fuzz_symb_264)))
    state 265 with condition (Not (Eq false
         (Eq (w32 264)
             (ReadLSB w32 0 v264_fuzz_symb_264))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-264-8048a0e
Size=2 Low=0 splitIndex=1 high=1
175 [State 0] Switching from state 0 to state 265
Copied 34928 (count=1)
Finalizing TB execution 265
s2e_dummyMainFunction
tcg-llvm-tb-264-8048a0e
Firing timer event
175 [State 265] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 264 not yet applied), shell_len: 1024, eip: 0x00000000

175 [State 265] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 134 instructions, PCs: bfba3488 bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
175 [State 265] Terminating state 265 with message 'eliminated this false positive, execution path subset of another success'
175 [State 265] Switching from state 265 to state 0
Copied 34928 (count=1)
Deleting state 265 0x0x262c4510
175 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 264
>> fuzzInit: datum forking for value 265
>> fuzzInit: datum forking for value 265
175 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 265)
        (ReadLSB w32 0 v265_fuzz_symb_265)))
    state 266 with condition (Not (Eq false
         (Eq (w32 265)
             (ReadLSB w32 0 v265_fuzz_symb_265))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-265-8048a0e
Size=2 Low=0 splitIndex=1 high=1
175 [State 0] Switching from state 0 to state 266
Copied 34928 (count=1)
Finalizing TB execution 266
s2e_dummyMainFunction
tcg-llvm-tb-265-8048a0e
175 [State 266] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 265 not yet applied), shell_len: 1024, eip: 0x00000000

175 [State 266] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
176 [State 266] Leaving buffer range @0xc126f278, 82 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
176 [State 266] Killing state 266
176 [State 266] Terminating state 266 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
176 [State 266] Switching from state 266 to state 0
Copied 34928 (count=1)
Deleting state 266 0x0x262c4510
176 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 265
>> fuzzInit: datum forking for value 266
>> fuzzInit: datum forking for value 266
176 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 266)
        (ReadLSB w32 0 v266_fuzz_symb_266)))
    state 267 with condition (Not (Eq false
         (Eq (w32 266)
             (ReadLSB w32 0 v266_fuzz_symb_266))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-266-8048a0e
Size=2 Low=0 splitIndex=1 high=1
176 [State 0] Switching from state 0 to state 267
Copied 34928 (count=1)
Finalizing TB execution 267
s2e_dummyMainFunction
tcg-llvm-tb-266-8048a0e
Firing timer event
176 [State 267] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 266 not yet applied), shell_len: 1024, eip: 0x00000000

176 [State 267] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 133 instructions, PCs: bfba348a bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
176 [State 267] Terminating state 267 with message 'eliminated this false positive, execution path subset of another success'
176 [State 267] Switching from state 267 to state 0
Copied 34928 (count=1)
Deleting state 267 0x0x262c4510
176 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 266
>> fuzzInit: datum forking for value 267
>> fuzzInit: datum forking for value 267
176 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 267)
        (ReadLSB w32 0 v267_fuzz_symb_267)))
    state 268 with condition (Not (Eq false
         (Eq (w32 267)
             (ReadLSB w32 0 v267_fuzz_symb_267))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-267-8048a0e
Size=2 Low=0 splitIndex=1 high=1
176 [State 0] Switching from state 0 to state 268
Copied 34928 (count=1)
Finalizing TB execution 268
s2e_dummyMainFunction
tcg-llvm-tb-267-8048a0e
177 [State 268] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 267 not yet applied), shell_len: 1024, eip: 0x00000000

177 [State 268] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
177 [State 268] Leaving buffer range @0xc126f278, 81 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
177 [State 268] Killing state 268
177 [State 268] Terminating state 268 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
177 [State 268] Switching from state 268 to state 0
Copied 34928 (count=1)
Deleting state 268 0x0x262c4510
177 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 267
>> fuzzInit: datum forking for value 268
>> fuzzInit: datum forking for value 268
177 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 268)
        (ReadLSB w32 0 v268_fuzz_symb_268)))
    state 269 with condition (Not (Eq false
         (Eq (w32 268)
             (ReadLSB w32 0 v268_fuzz_symb_268))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-268-8048a0e
Size=2 Low=0 splitIndex=1 high=1
177 [State 0] Switching from state 0 to state 269
Copied 34928 (count=1)
Finalizing TB execution 269
s2e_dummyMainFunction
tcg-llvm-tb-268-8048a0e
Firing timer event
177 [State 269] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 268 not yet applied), shell_len: 1024, eip: 0x00000000

177 [State 269] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 132 instructions, PCs: bfba348c bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
177 [State 269] Terminating state 269 with message 'eliminated this false positive, execution path subset of another success'
177 [State 269] Switching from state 269 to state 0
Copied 34928 (count=1)
Deleting state 269 0x0x26413f80
177 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 268
>> fuzzInit: datum forking for value 269
>> fuzzInit: datum forking for value 269
177 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 269)
        (ReadLSB w32 0 v269_fuzz_symb_269)))
    state 270 with condition (Not (Eq false
         (Eq (w32 269)
             (ReadLSB w32 0 v269_fuzz_symb_269))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-269-8048a0e
Size=2 Low=0 splitIndex=1 high=1
177 [State 0] Switching from state 0 to state 270
Copied 34928 (count=1)
Finalizing TB execution 270
s2e_dummyMainFunction
tcg-llvm-tb-269-8048a0e
178 [State 270] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 269 not yet applied), shell_len: 1024, eip: 0x00000000

178 [State 270] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
178 [State 270] Leaving buffer range @0xc126f278, 80 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
178 [State 270] Killing state 270
178 [State 270] Terminating state 270 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
178 [State 270] Switching from state 270 to state 0
Copied 34928 (count=1)
Deleting state 270 0x0x26413f80
178 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 269
>> fuzzInit: datum forking for value 270
>> fuzzInit: datum forking for value 270
178 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 270)
        (ReadLSB w32 0 v270_fuzz_symb_270)))
    state 271 with condition (Not (Eq false
         (Eq (w32 270)
             (ReadLSB w32 0 v270_fuzz_symb_270))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-270-8048a0e
Size=2 Low=0 splitIndex=1 high=1
178 [State 0] Switching from state 0 to state 271
Copied 34928 (count=1)
Finalizing TB execution 271
s2e_dummyMainFunction
tcg-llvm-tb-270-8048a0e
Firing timer event
178 [State 271] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 270 not yet applied), shell_len: 1024, eip: 0x00000000

178 [State 271] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 131 instructions, PCs: bfba348e bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
178 [State 271] Terminating state 271 with message 'eliminated this false positive, execution path subset of another success'
178 [State 271] Switching from state 271 to state 0
Copied 34928 (count=1)
Deleting state 271 0x0x26413f80
178 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 270
>> fuzzInit: datum forking for value 271
>> fuzzInit: datum forking for value 271
179 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 271)
        (ReadLSB w32 0 v271_fuzz_symb_271)))
    state 272 with condition (Not (Eq false
         (Eq (w32 271)
             (ReadLSB w32 0 v271_fuzz_symb_271))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-271-8048a0e
Size=2 Low=0 splitIndex=1 high=1
179 [State 0] Switching from state 0 to state 272
Copied 34928 (count=1)
Finalizing TB execution 272
s2e_dummyMainFunction
tcg-llvm-tb-271-8048a0e
179 [State 272] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 271 not yet applied), shell_len: 1024, eip: 0x00000000

179 [State 272] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
179 [State 272] Leaving buffer range @0xc126f278, 7f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
179 [State 272] Killing state 272
179 [State 272] Terminating state 272 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
179 [State 272] Switching from state 272 to state 0
Copied 34928 (count=1)
Deleting state 272 0x0x26413f80
179 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 271
>> fuzzInit: datum forking for value 272
>> fuzzInit: datum forking for value 272
179 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 272)
        (ReadLSB w32 0 v272_fuzz_symb_272)))
    state 273 with condition (Not (Eq false
         (Eq (w32 272)
             (ReadLSB w32 0 v272_fuzz_symb_272))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-272-8048a0e
Size=2 Low=0 splitIndex=1 high=1
179 [State 0] Switching from state 0 to state 273
Copied 34928 (count=1)
Finalizing TB execution 273
s2e_dummyMainFunction
tcg-llvm-tb-272-8048a0e
Firing timer event
179 [State 273] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 272 not yet applied), shell_len: 1024, eip: 0x00000000

179 [State 273] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 130 instructions, PCs: bfba3490 bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
179 [State 273] Terminating state 273 with message 'eliminated this false positive, execution path subset of another success'
179 [State 273] Switching from state 273 to state 0
Copied 34928 (count=1)
Deleting state 273 0x0x26722740
180 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 272
>> fuzzInit: datum forking for value 273
>> fuzzInit: datum forking for value 273
180 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 273)
        (ReadLSB w32 0 v273_fuzz_symb_273)))
    state 274 with condition (Not (Eq false
         (Eq (w32 273)
             (ReadLSB w32 0 v273_fuzz_symb_273))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-273-8048a0e
Size=2 Low=0 splitIndex=1 high=1
180 [State 0] Switching from state 0 to state 274
Copied 34928 (count=1)
Finalizing TB execution 274
s2e_dummyMainFunction
tcg-llvm-tb-273-8048a0e
180 [State 274] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 273 not yet applied), shell_len: 1024, eip: 0x00000000

180 [State 274] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
180 [State 274] Leaving buffer range @0xc126f278, 7e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
180 [State 274] Killing state 274
180 [State 274] Terminating state 274 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
180 [State 274] Switching from state 274 to state 0
Copied 34928 (count=1)
Deleting state 274 0x0x26722740
180 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 273
>> fuzzInit: datum forking for value 274
>> fuzzInit: datum forking for value 274
180 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 274)
        (ReadLSB w32 0 v274_fuzz_symb_274)))
    state 275 with condition (Not (Eq false
         (Eq (w32 274)
             (ReadLSB w32 0 v274_fuzz_symb_274))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-274-8048a0e
Size=2 Low=0 splitIndex=1 high=1
180 [State 0] Switching from state 0 to state 275
Copied 34928 (count=1)
Finalizing TB execution 275
s2e_dummyMainFunction
tcg-llvm-tb-274-8048a0e
Firing timer event
180 [State 275] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 274 not yet applied), shell_len: 1024, eip: 0x00000000

180 [State 275] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 129 instructions, PCs: bfba3492 bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
180 [State 275] Terminating state 275 with message 'eliminated this false positive, execution path subset of another success'
180 [State 275] Switching from state 275 to state 0
Copied 34928 (count=1)
Deleting state 275 0x0x26241ec0
181 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 274
>> fuzzInit: datum forking for value 275
>> fuzzInit: datum forking for value 275
181 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 275)
        (ReadLSB w32 0 v275_fuzz_symb_275)))
    state 276 with condition (Not (Eq false
         (Eq (w32 275)
             (ReadLSB w32 0 v275_fuzz_symb_275))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-275-8048a0e
Size=2 Low=0 splitIndex=1 high=1
181 [State 0] Switching from state 0 to state 276
Copied 34928 (count=1)
Finalizing TB execution 276
s2e_dummyMainFunction
tcg-llvm-tb-275-8048a0e
181 [State 276] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 275 not yet applied), shell_len: 1024, eip: 0x00000000

181 [State 276] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
181 [State 276] Leaving buffer range @0xc126f278, 7d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
181 [State 276] Killing state 276
181 [State 276] Terminating state 276 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
181 [State 276] Switching from state 276 to state 0
Copied 34928 (count=1)
Deleting state 276 0x0x26241ec0
181 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 275
>> fuzzInit: datum forking for value 276
>> fuzzInit: datum forking for value 276
181 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 276)
        (ReadLSB w32 0 v276_fuzz_symb_276)))
    state 277 with condition (Not (Eq false
         (Eq (w32 276)
             (ReadLSB w32 0 v276_fuzz_symb_276))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-276-8048a0e
Size=2 Low=0 splitIndex=1 high=1
181 [State 0] Switching from state 0 to state 277
Copied 34928 (count=1)
Finalizing TB execution 277
s2e_dummyMainFunction
tcg-llvm-tb-276-8048a0e
Firing timer event
181 [State 277] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 276 not yet applied), shell_len: 1024, eip: 0x00000000

181 [State 277] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 128 instructions, PCs: bfba3494 bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
182 [State 277] Terminating state 277 with message 'eliminated this false positive, execution path subset of another success'
182 [State 277] Switching from state 277 to state 0
Copied 34928 (count=1)
Deleting state 277 0x0x2660a6e0
182 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 276
>> fuzzInit: datum forking for value 277
>> fuzzInit: datum forking for value 277
182 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 277)
        (ReadLSB w32 0 v277_fuzz_symb_277)))
    state 278 with condition (Not (Eq false
         (Eq (w32 277)
             (ReadLSB w32 0 v277_fuzz_symb_277))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-277-8048a0e
Size=2 Low=0 splitIndex=1 high=1
182 [State 0] Switching from state 0 to state 278
Copied 34928 (count=1)
Finalizing TB execution 278
s2e_dummyMainFunction
tcg-llvm-tb-277-8048a0e
182 [State 278] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 277 not yet applied), shell_len: 1024, eip: 0x00000000

182 [State 278] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
182 [State 278] Leaving buffer range @0xc126f278, 7c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
182 [State 278] Killing state 278
182 [State 278] Terminating state 278 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
182 [State 278] Switching from state 278 to state 0
Copied 34928 (count=1)
Deleting state 278 0x0x2660a6e0
182 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 277
>> fuzzInit: datum forking for value 278
>> fuzzInit: datum forking for value 278
182 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 278)
        (ReadLSB w32 0 v278_fuzz_symb_278)))
    state 279 with condition (Not (Eq false
         (Eq (w32 278)
             (ReadLSB w32 0 v278_fuzz_symb_278))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-278-8048a0e
Size=2 Low=0 splitIndex=1 high=1
182 [State 0] Switching from state 0 to state 279
Copied 34928 (count=1)
Finalizing TB execution 279
s2e_dummyMainFunction
tcg-llvm-tb-278-8048a0e
Firing timer event
183 [State 279] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 278 not yet applied), shell_len: 1024, eip: 0x00000000

183 [State 279] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 127 instructions, PCs: bfba3496 bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
183 [State 279] Terminating state 279 with message 'eliminated this false positive, execution path subset of another success'
183 [State 279] Switching from state 279 to state 0
Copied 34928 (count=1)
Deleting state 279 0x0x2660a6e0
183 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 278
>> fuzzInit: datum forking for value 279
>> fuzzInit: datum forking for value 279
183 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 279)
        (ReadLSB w32 0 v279_fuzz_symb_279)))
    state 280 with condition (Not (Eq false
         (Eq (w32 279)
             (ReadLSB w32 0 v279_fuzz_symb_279))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-279-8048a0e
Size=2 Low=0 splitIndex=1 high=1
183 [State 0] Switching from state 0 to state 280
Copied 34928 (count=1)
Finalizing TB execution 280
s2e_dummyMainFunction
tcg-llvm-tb-279-8048a0e
183 [State 280] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 279 not yet applied), shell_len: 1024, eip: 0x00000000

183 [State 280] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
183 [State 280] Leaving buffer range @0xc126f278, 7b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
183 [State 280] Killing state 280
183 [State 280] Terminating state 280 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
183 [State 280] Switching from state 280 to state 0
Copied 34928 (count=1)
Deleting state 280 0x0x2672d0e0
183 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 279
>> fuzzInit: datum forking for value 280
>> fuzzInit: datum forking for value 280
183 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 280)
        (ReadLSB w32 0 v280_fuzz_symb_280)))
    state 281 with condition (Not (Eq false
         (Eq (w32 280)
             (ReadLSB w32 0 v280_fuzz_symb_280))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-280-8048a0e
Size=2 Low=0 splitIndex=1 high=1
183 [State 0] Switching from state 0 to state 281
Copied 34928 (count=1)
Finalizing TB execution 281
s2e_dummyMainFunction
tcg-llvm-tb-280-8048a0e
Firing timer event
184 [State 281] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 280 not yet applied), shell_len: 1024, eip: 0x00000000

184 [State 281] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 126 instructions, PCs: bfba3498 bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
184 [State 281] Terminating state 281 with message 'eliminated this false positive, execution path subset of another success'
184 [State 281] Switching from state 281 to state 0
Copied 34928 (count=1)
Deleting state 281 0x0x2685e1b0
184 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 280
>> fuzzInit: datum forking for value 281
>> fuzzInit: datum forking for value 281
184 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 281)
        (ReadLSB w32 0 v281_fuzz_symb_281)))
    state 282 with condition (Not (Eq false
         (Eq (w32 281)
             (ReadLSB w32 0 v281_fuzz_symb_281))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-281-8048a0e
Size=2 Low=0 splitIndex=1 high=1
184 [State 0] Switching from state 0 to state 282
Copied 34928 (count=1)
Finalizing TB execution 282
s2e_dummyMainFunction
tcg-llvm-tb-281-8048a0e
184 [State 282] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 281 not yet applied), shell_len: 1024, eip: 0x00000000

184 [State 282] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
184 [State 282] Leaving buffer range @0xc126f278, 7a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
184 [State 282] Killing state 282
184 [State 282] Terminating state 282 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
184 [State 282] Switching from state 282 to state 0
Copied 34928 (count=1)
Deleting state 282 0x0x2685e1b0
Firing timer event
185 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 281
>> fuzzInit: datum forking for value 282
>> fuzzInit: datum forking for value 282
185 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 282)
        (ReadLSB w32 0 v282_fuzz_symb_282)))
    state 283 with condition (Not (Eq false
         (Eq (w32 282)
             (ReadLSB w32 0 v282_fuzz_symb_282))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-282-8048a0e
Size=2 Low=0 splitIndex=1 high=1
185 [State 0] Switching from state 0 to state 283
Copied 34928 (count=1)
Finalizing TB execution 283
s2e_dummyMainFunction
tcg-llvm-tb-282-8048a0e
185 [State 283] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 282 not yet applied), shell_len: 1024, eip: 0x00000000

185 [State 283] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 125 instructions, PCs: bfba349a bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
185 [State 283] Terminating state 283 with message 'eliminated this false positive, execution path subset of another success'
185 [State 283] Switching from state 283 to state 0
Copied 34928 (count=1)
Deleting state 283 0x0x2685e1b0
185 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 282
>> fuzzInit: datum forking for value 283
>> fuzzInit: datum forking for value 283
185 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 283)
        (ReadLSB w32 0 v283_fuzz_symb_283)))
    state 284 with condition (Not (Eq false
         (Eq (w32 283)
             (ReadLSB w32 0 v283_fuzz_symb_283))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-283-8048a0e
Size=2 Low=0 splitIndex=1 high=1
185 [State 0] Switching from state 0 to state 284
Copied 34928 (count=1)
Finalizing TB execution 284
s2e_dummyMainFunction
tcg-llvm-tb-283-8048a0e
185 [State 284] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 283 not yet applied), shell_len: 1024, eip: 0x00000000

185 [State 284] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
185 [State 284] Leaving buffer range @0xc126f278, 79 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
186 [State 284] Killing state 284
186 [State 284] Terminating state 284 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
186 [State 284] Switching from state 284 to state 0
Copied 34928 (count=1)
Deleting state 284 0x0x2685e1b0
186 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 283
>> fuzzInit: datum forking for value 284
>> fuzzInit: datum forking for value 284
186 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 284)
        (ReadLSB w32 0 v284_fuzz_symb_284)))
    state 285 with condition (Not (Eq false
         (Eq (w32 284)
             (ReadLSB w32 0 v284_fuzz_symb_284))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-284-8048a0e
Size=2 Low=0 splitIndex=1 high=1
186 [State 0] Switching from state 0 to state 285
Copied 34928 (count=1)
Finalizing TB execution 285
s2e_dummyMainFunction
tcg-llvm-tb-284-8048a0e
186 [State 285] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 284 not yet applied), shell_len: 1024, eip: 0x00000000

186 [State 285] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 124 instructions, PCs: bfba349c bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
186 [State 285] Terminating state 285 with message 'eliminated this false positive, execution path subset of another success'
186 [State 285] Switching from state 285 to state 0
Copied 34928 (count=1)
Deleting state 285 0x0x25d77100
186 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 284
>> fuzzInit: datum forking for value 285
>> fuzzInit: datum forking for value 285
186 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 285)
        (ReadLSB w32 0 v285_fuzz_symb_285)))
    state 286 with condition (Not (Eq false
         (Eq (w32 285)
             (ReadLSB w32 0 v285_fuzz_symb_285))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-285-8048a0e
Size=2 Low=0 splitIndex=1 high=1
186 [State 0] Switching from state 0 to state 286
Copied 34928 (count=1)
Finalizing TB execution 286
s2e_dummyMainFunction
tcg-llvm-tb-285-8048a0e
186 [State 286] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 285 not yet applied), shell_len: 1024, eip: 0x00000000

186 [State 286] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
186 [State 286] Leaving buffer range @0xc126f278, 78 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
187 [State 286] Killing state 286
187 [State 286] Terminating state 286 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
187 [State 286] Switching from state 286 to state 0
Copied 34928 (count=1)
Deleting state 286 0x0x25d77100
187 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 285
>> fuzzInit: datum forking for value 286
>> fuzzInit: datum forking for value 286
187 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 286)
        (ReadLSB w32 0 v286_fuzz_symb_286)))
    state 287 with condition (Not (Eq false
         (Eq (w32 286)
             (ReadLSB w32 0 v286_fuzz_symb_286))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-286-8048a0e
Size=2 Low=0 splitIndex=1 high=1
187 [State 0] Switching from state 0 to state 287
Copied 34928 (count=1)
Finalizing TB execution 287
s2e_dummyMainFunction
tcg-llvm-tb-286-8048a0e
187 [State 287] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 286 not yet applied), shell_len: 1024, eip: 0x00000000

187 [State 287] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 123 instructions, PCs: bfba349e bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
187 [State 287] Terminating state 287 with message 'eliminated this false positive, execution path subset of another success'
187 [State 287] Switching from state 287 to state 0
Copied 34928 (count=1)
Deleting state 287 0x0x269162c0
187 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 286
>> fuzzInit: datum forking for value 287
>> fuzzInit: datum forking for value 287
187 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 287)
        (ReadLSB w32 0 v287_fuzz_symb_287)))
    state 288 with condition (Not (Eq false
         (Eq (w32 287)
             (ReadLSB w32 0 v287_fuzz_symb_287))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-287-8048a0e
Size=2 Low=0 splitIndex=1 high=1
187 [State 0] Switching from state 0 to state 288
Copied 34928 (count=1)
Finalizing TB execution 288
s2e_dummyMainFunction
tcg-llvm-tb-287-8048a0e
187 [State 288] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 287 not yet applied), shell_len: 1024, eip: 0x00000000

187 [State 288] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
188 [State 288] Leaving buffer range @0xc101fcc8, 77 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
188 [State 288] Killing state 288
188 [State 288] Terminating state 288 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
188 [State 288] Switching from state 288 to state 0
Copied 34928 (count=1)
Deleting state 288 0x0x26a4f520
188 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 287
>> fuzzInit: datum forking for value 288
>> fuzzInit: datum forking for value 288
188 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 288)
        (ReadLSB w32 0 v288_fuzz_symb_288)))
    state 289 with condition (Not (Eq false
         (Eq (w32 288)
             (ReadLSB w32 0 v288_fuzz_symb_288))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-288-8048a0e
Size=2 Low=0 splitIndex=1 high=1
188 [State 0] Switching from state 0 to state 289
Copied 34928 (count=1)
Finalizing TB execution 289
s2e_dummyMainFunction
tcg-llvm-tb-288-8048a0e
188 [State 289] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 288 not yet applied), shell_len: 1024, eip: 0x00000000

188 [State 289] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 122 instructions, PCs: bfba34a0 bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
188 [State 289] Terminating state 289 with message 'eliminated this false positive, execution path subset of another success'
188 [State 289] Switching from state 289 to state 0
Copied 34928 (count=1)
Deleting state 289 0x0x269e1f90
188 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 288
>> fuzzInit: datum forking for value 289
>> fuzzInit: datum forking for value 289
188 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 289)
        (ReadLSB w32 0 v289_fuzz_symb_289)))
    state 290 with condition (Not (Eq false
         (Eq (w32 289)
             (ReadLSB w32 0 v289_fuzz_symb_289))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-289-8048a0e
Size=2 Low=0 splitIndex=1 high=1
188 [State 0] Switching from state 0 to state 290
Copied 34928 (count=1)
Finalizing TB execution 290
s2e_dummyMainFunction
tcg-llvm-tb-289-8048a0e
188 [State 290] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 289 not yet applied), shell_len: 1024, eip: 0x00000000

188 [State 290] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
189 [State 290] Leaving buffer range @0xc126f278, 76 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
189 [State 290] Killing state 290
189 [State 290] Terminating state 290 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
189 [State 290] Switching from state 290 to state 0
Copied 34928 (count=1)
Deleting state 290 0x0x269e1f90
189 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 289
>> fuzzInit: datum forking for value 290
>> fuzzInit: datum forking for value 290
189 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 290)
        (ReadLSB w32 0 v290_fuzz_symb_290)))
    state 291 with condition (Not (Eq false
         (Eq (w32 290)
             (ReadLSB w32 0 v290_fuzz_symb_290))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-290-8048a0e
Size=2 Low=0 splitIndex=1 high=1
189 [State 0] Switching from state 0 to state 291
Copied 34928 (count=1)
Finalizing TB execution 291
s2e_dummyMainFunction
tcg-llvm-tb-290-8048a0e
189 [State 291] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 290 not yet applied), shell_len: 1024, eip: 0x00000000

189 [State 291] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 121 instructions, PCs: bfba34a2 bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
189 [State 291] Terminating state 291 with message 'eliminated this false positive, execution path subset of another success'
189 [State 291] Switching from state 291 to state 0
Copied 34928 (count=1)
Deleting state 291 0x0x269e1f90
189 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 290
>> fuzzInit: datum forking for value 291
>> fuzzInit: datum forking for value 291
189 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 291)
        (ReadLSB w32 0 v291_fuzz_symb_291)))
    state 292 with condition (Not (Eq false
         (Eq (w32 291)
             (ReadLSB w32 0 v291_fuzz_symb_291))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-291-8048a0e
Size=2 Low=0 splitIndex=1 high=1
189 [State 0] Switching from state 0 to state 292
Copied 34928 (count=1)
Finalizing TB execution 292
s2e_dummyMainFunction
tcg-llvm-tb-291-8048a0e
189 [State 292] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 291 not yet applied), shell_len: 1024, eip: 0x00000000

189 [State 292] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
190 [State 292] Leaving buffer range @0xc126f278, 75 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
190 [State 292] Killing state 292
190 [State 292] Terminating state 292 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
190 [State 292] Switching from state 292 to state 0
Copied 34928 (count=1)
Deleting state 292 0x0x269e1f90
190 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 291
>> fuzzInit: datum forking for value 292
>> fuzzInit: datum forking for value 292
190 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 292)
        (ReadLSB w32 0 v292_fuzz_symb_292)))
    state 293 with condition (Not (Eq false
         (Eq (w32 292)
             (ReadLSB w32 0 v292_fuzz_symb_292))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-292-8048a0e
Size=2 Low=0 splitIndex=1 high=1
190 [State 0] Switching from state 0 to state 293
Copied 34928 (count=1)
Finalizing TB execution 293
s2e_dummyMainFunction
tcg-llvm-tb-292-8048a0e
190 [State 293] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 292 not yet applied), shell_len: 1024, eip: 0x00000000

190 [State 293] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 120 instructions, PCs: bfba34a4 bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
190 [State 293] Terminating state 293 with message 'eliminated this false positive, execution path subset of another success'
190 [State 293] Switching from state 293 to state 0
Copied 34928 (count=1)
Deleting state 293 0x0x269e1f90
190 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 292
>> fuzzInit: datum forking for value 293
>> fuzzInit: datum forking for value 293
190 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 293)
        (ReadLSB w32 0 v293_fuzz_symb_293)))
    state 294 with condition (Not (Eq false
         (Eq (w32 293)
             (ReadLSB w32 0 v293_fuzz_symb_293))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-293-8048a0e
Size=2 Low=0 splitIndex=1 high=1
190 [State 0] Switching from state 0 to state 294
Copied 34928 (count=1)
Finalizing TB execution 294
s2e_dummyMainFunction
tcg-llvm-tb-293-8048a0e
190 [State 294] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 293 not yet applied), shell_len: 1024, eip: 0x00000000

190 [State 294] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
191 [State 294] Leaving buffer range @0xc126f278, 74 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
191 [State 294] Killing state 294
191 [State 294] Terminating state 294 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
191 [State 294] Switching from state 294 to state 0
Copied 34928 (count=1)
Deleting state 294 0x0x269e1f90
191 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 293
>> fuzzInit: datum forking for value 294
>> fuzzInit: datum forking for value 294
191 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 294)
        (ReadLSB w32 0 v294_fuzz_symb_294)))
    state 295 with condition (Not (Eq false
         (Eq (w32 294)
             (ReadLSB w32 0 v294_fuzz_symb_294))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-294-8048a0e
Size=2 Low=0 splitIndex=1 high=1
191 [State 0] Switching from state 0 to state 295
Copied 34928 (count=1)
Finalizing TB execution 295
s2e_dummyMainFunction
tcg-llvm-tb-294-8048a0e
191 [State 295] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 294 not yet applied), shell_len: 1024, eip: 0x00000000

191 [State 295] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 119 instructions, PCs: bfba34a6 bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
191 [State 295] Terminating state 295 with message 'eliminated this false positive, execution path subset of another success'
191 [State 295] Switching from state 295 to state 0
Copied 34928 (count=1)
Deleting state 295 0x0x269e1f90
191 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 294
>> fuzzInit: datum forking for value 295
>> fuzzInit: datum forking for value 295
191 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 295)
        (ReadLSB w32 0 v295_fuzz_symb_295)))
    state 296 with condition (Not (Eq false
         (Eq (w32 295)
             (ReadLSB w32 0 v295_fuzz_symb_295))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-295-8048a0e
Size=2 Low=0 splitIndex=1 high=1
191 [State 0] Switching from state 0 to state 296
Copied 34928 (count=1)
Finalizing TB execution 296
s2e_dummyMainFunction
tcg-llvm-tb-295-8048a0e
192 [State 296] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 295 not yet applied), shell_len: 1024, eip: 0x00000000

192 [State 296] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
192 [State 296] Leaving buffer range @0xc126f278, 73 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
192 [State 296] Killing state 296
192 [State 296] Terminating state 296 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
192 [State 296] Switching from state 296 to state 0
Copied 34928 (count=1)
Deleting state 296 0x0x269e1f90
192 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 295
>> fuzzInit: datum forking for value 296
>> fuzzInit: datum forking for value 296
192 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 296)
        (ReadLSB w32 0 v296_fuzz_symb_296)))
    state 297 with condition (Not (Eq false
         (Eq (w32 296)
             (ReadLSB w32 0 v296_fuzz_symb_296))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-296-8048a0e
Size=2 Low=0 splitIndex=1 high=1
192 [State 0] Switching from state 0 to state 297
Copied 34928 (count=1)
Finalizing TB execution 297
s2e_dummyMainFunction
tcg-llvm-tb-296-8048a0e
192 [State 297] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 296 not yet applied), shell_len: 1024, eip: 0x00000000

192 [State 297] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 118 instructions, PCs: bfba34a8 bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
192 [State 297] Terminating state 297 with message 'eliminated this false positive, execution path subset of another success'
192 [State 297] Switching from state 297 to state 0
Copied 34928 (count=1)
Deleting state 297 0x0x269e1f90
192 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 296
>> fuzzInit: datum forking for value 297
>> fuzzInit: datum forking for value 297
192 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 297)
        (ReadLSB w32 0 v297_fuzz_symb_297)))
    state 298 with condition (Not (Eq false
         (Eq (w32 297)
             (ReadLSB w32 0 v297_fuzz_symb_297))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-297-8048a0e
Size=2 Low=0 splitIndex=1 high=1
193 [State 0] Switching from state 0 to state 298
Copied 34928 (count=1)
Finalizing TB execution 298
s2e_dummyMainFunction
tcg-llvm-tb-297-8048a0e
Firing timer event
193 [State 298] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 297 not yet applied), shell_len: 1024, eip: 0x00000000

193 [State 298] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
193 [State 298] Leaving buffer range @0xc126f278, 6e IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
193 [State 298] Killing state 298
193 [State 298] Terminating state 298 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
193 [State 298] Switching from state 298 to state 0
Copied 34928 (count=1)
Deleting state 298 0x0x269e1f90
193 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 297
>> fuzzInit: datum forking for value 298
>> fuzzInit: datum forking for value 298
193 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 298)
        (ReadLSB w32 0 v298_fuzz_symb_298)))
    state 299 with condition (Not (Eq false
         (Eq (w32 298)
             (ReadLSB w32 0 v298_fuzz_symb_298))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-298-8048a0e
Size=2 Low=0 splitIndex=1 high=1
193 [State 0] Switching from state 0 to state 299
Copied 34928 (count=1)
Finalizing TB execution 299
s2e_dummyMainFunction
tcg-llvm-tb-298-8048a0e
193 [State 299] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 298 not yet applied), shell_len: 1024, eip: 0x00000000

193 [State 299] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 117 instructions, PCs: bfba34aa bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
193 [State 299] Terminating state 299 with message 'eliminated this false positive, execution path subset of another success'
193 [State 299] Switching from state 299 to state 0
Copied 34928 (count=1)
Deleting state 299 0x0x269e1f90
193 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 298
>> fuzzInit: datum forking for value 299
>> fuzzInit: datum forking for value 299
194 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 299)
        (ReadLSB w32 0 v299_fuzz_symb_299)))
    state 300 with condition (Not (Eq false
         (Eq (w32 299)
             (ReadLSB w32 0 v299_fuzz_symb_299))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-299-8048a0e
Size=2 Low=0 splitIndex=1 high=1
194 [State 0] Switching from state 0 to state 300
Copied 34928 (count=1)
Finalizing TB execution 300
s2e_dummyMainFunction
tcg-llvm-tb-299-8048a0e
Firing timer event
194 [State 300] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 299 not yet applied), shell_len: 1024, eip: 0x00000000

194 [State 300] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
194 [State 300] Leaving buffer range @0xc126f278, 6d IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
194 [State 300] Killing state 300
194 [State 300] Terminating state 300 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
194 [State 300] Switching from state 300 to state 0
Copied 34928 (count=1)
Deleting state 300 0x0x269e1f90
194 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 299
>> fuzzInit: datum forking for value 300
>> fuzzInit: datum forking for value 300
194 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 300)
        (ReadLSB w32 0 v300_fuzz_symb_300)))
    state 301 with condition (Not (Eq false
         (Eq (w32 300)
             (ReadLSB w32 0 v300_fuzz_symb_300))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-300-8048a0e
Size=2 Low=0 splitIndex=1 high=1
194 [State 0] Switching from state 0 to state 301
Copied 34928 (count=1)
Finalizing TB execution 301
s2e_dummyMainFunction
tcg-llvm-tb-300-8048a0e
194 [State 301] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 300 not yet applied), shell_len: 1024, eip: 0x00000000

194 [State 301] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 116 instructions, PCs: bfba34ac bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
194 [State 301] Terminating state 301 with message 'eliminated this false positive, execution path subset of another success'
194 [State 301] Switching from state 301 to state 0
Copied 34928 (count=1)
Deleting state 301 0x0x26fd8240
194 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 300
>> fuzzInit: datum forking for value 301
>> fuzzInit: datum forking for value 301
195 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 301)
        (ReadLSB w32 0 v301_fuzz_symb_301)))
    state 302 with condition (Not (Eq false
         (Eq (w32 301)
             (ReadLSB w32 0 v301_fuzz_symb_301))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-301-8048a0e
Size=2 Low=0 splitIndex=1 high=1
195 [State 0] Switching from state 0 to state 302
Copied 34928 (count=1)
Finalizing TB execution 302
s2e_dummyMainFunction
tcg-llvm-tb-301-8048a0e
Firing timer event
195 [State 302] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 301 not yet applied), shell_len: 1024, eip: 0x00000000

195 [State 302] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
195 [State 302] Leaving buffer range @0xc126f278, 6d IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
195 [State 302] Killing state 302
195 [State 302] Terminating state 302 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
195 [State 302] Switching from state 302 to state 0
Copied 34928 (count=1)
Deleting state 302 0x0x26fd8240
195 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 301
>> fuzzInit: datum forking for value 302
>> fuzzInit: datum forking for value 302
195 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 302)
        (ReadLSB w32 0 v302_fuzz_symb_302)))
    state 303 with condition (Not (Eq false
         (Eq (w32 302)
             (ReadLSB w32 0 v302_fuzz_symb_302))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-302-8048a0e
Size=2 Low=0 splitIndex=1 high=1
195 [State 0] Switching from state 0 to state 303
Copied 34928 (count=1)
Finalizing TB execution 303
s2e_dummyMainFunction
tcg-llvm-tb-302-8048a0e
195 [State 303] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 302 not yet applied), shell_len: 1024, eip: 0x00000000

195 [State 303] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 115 instructions, PCs: bfba34ae bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
195 [State 303] Terminating state 303 with message 'eliminated this false positive, execution path subset of another success'
195 [State 303] Switching from state 303 to state 0
Copied 34928 (count=1)
Deleting state 303 0x0x2701d2d0
195 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 302
>> fuzzInit: datum forking for value 303
>> fuzzInit: datum forking for value 303
196 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 303)
        (ReadLSB w32 0 v303_fuzz_symb_303)))
    state 304 with condition (Not (Eq false
         (Eq (w32 303)
             (ReadLSB w32 0 v303_fuzz_symb_303))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-303-8048a0e
Size=2 Low=0 splitIndex=1 high=1
196 [State 0] Switching from state 0 to state 304
Copied 34928 (count=1)
Finalizing TB execution 304
s2e_dummyMainFunction
tcg-llvm-tb-303-8048a0e
Firing timer event
196 [State 304] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 303 not yet applied), shell_len: 1024, eip: 0x00000000

196 [State 304] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
196 [State 304] Leaving buffer range @0xc126f278, 6c IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
196 [State 304] Killing state 304
196 [State 304] Terminating state 304 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
196 [State 304] Switching from state 304 to state 0
Copied 34928 (count=1)
Deleting state 304 0x0x2701d2d0
196 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 303
>> fuzzInit: datum forking for value 304
>> fuzzInit: datum forking for value 304
196 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 304)
        (ReadLSB w32 0 v304_fuzz_symb_304)))
    state 305 with condition (Not (Eq false
         (Eq (w32 304)
             (ReadLSB w32 0 v304_fuzz_symb_304))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-304-8048a0e
Size=2 Low=0 splitIndex=1 high=1
196 [State 0] Switching from state 0 to state 305
Copied 34928 (count=1)
Finalizing TB execution 305
s2e_dummyMainFunction
tcg-llvm-tb-304-8048a0e
196 [State 305] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 304 not yet applied), shell_len: 1024, eip: 0x00000000

196 [State 305] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 114 instructions, PCs: bfba34b0 bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
196 [State 305] Terminating state 305 with message 'eliminated this false positive, execution path subset of another success'
196 [State 305] Switching from state 305 to state 0
Copied 34928 (count=1)
Deleting state 305 0x0x2701d2d0
196 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 304
>> fuzzInit: datum forking for value 305
>> fuzzInit: datum forking for value 305
197 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 305)
        (ReadLSB w32 0 v305_fuzz_symb_305)))
    state 306 with condition (Not (Eq false
         (Eq (w32 305)
             (ReadLSB w32 0 v305_fuzz_symb_305))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-305-8048a0e
Size=2 Low=0 splitIndex=1 high=1
197 [State 0] Switching from state 0 to state 306
Copied 34928 (count=1)
Finalizing TB execution 306
s2e_dummyMainFunction
tcg-llvm-tb-305-8048a0e
Firing timer event
197 [State 306] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 305 not yet applied), shell_len: 1024, eip: 0x00000000

197 [State 306] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
197 [State 306] Leaving buffer range @0xc126f278, 6c IoB insns; prev insn @0xbfba3591
  1   3B @0xbfba3591:  1 4b cd          add [ebx-0x33], ecx     
197 [State 306] Killing state 306
197 [State 306] Terminating state 306 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
197 [State 306] Switching from state 306 to state 0
Copied 34928 (count=1)
Deleting state 306 0x0x2701d2d0
197 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 305
>> fuzzInit: datum forking for value 306
>> fuzzInit: datum forking for value 306
197 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 306)
        (ReadLSB w32 0 v306_fuzz_symb_306)))
    state 307 with condition (Not (Eq false
         (Eq (w32 306)
             (ReadLSB w32 0 v306_fuzz_symb_306))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-306-8048a0e
Size=2 Low=0 splitIndex=1 high=1
197 [State 0] Switching from state 0 to state 307
Copied 34928 (count=1)
Finalizing TB execution 307
s2e_dummyMainFunction
tcg-llvm-tb-306-8048a0e
197 [State 307] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 306 not yet applied), shell_len: 1024, eip: 0x00000000

197 [State 307] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 113 instructions, PCs: bfba34b2 bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
198 [State 307] Terminating state 307 with message 'eliminated this false positive, execution path subset of another success'
198 [State 307] Switching from state 307 to state 0
Copied 34928 (count=1)
Deleting state 307 0x0x2701d2d0
Firing timer event
198 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 306
>> fuzzInit: datum forking for value 307
>> fuzzInit: datum forking for value 307
198 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 307)
        (ReadLSB w32 0 v307_fuzz_symb_307)))
    state 308 with condition (Not (Eq false
         (Eq (w32 307)
             (ReadLSB w32 0 v307_fuzz_symb_307))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-307-8048a0e
Size=2 Low=0 splitIndex=1 high=1
198 [State 0] Switching from state 0 to state 308
Copied 34928 (count=1)
Finalizing TB execution 308
s2e_dummyMainFunction
tcg-llvm-tb-307-8048a0e
198 [State 308] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 307 not yet applied), shell_len: 1024, eip: 0x00000000

198 [State 308] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
198 [State 308] Leaving buffer range @0xc126f278, 6c IoB insns; prev insn @0xbfba3594
  1   3B @0xbfba3594: 80 e8 e8          sub al, 0xe8            
198 [State 308] Killing state 308
198 [State 308] Terminating state 308 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
198 [State 308] Switching from state 308 to state 0
Copied 34928 (count=1)
Deleting state 308 0x0x2701d2d0
198 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 307
>> fuzzInit: datum forking for value 308
>> fuzzInit: datum forking for value 308
198 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 308)
        (ReadLSB w32 0 v308_fuzz_symb_308)))
    state 309 with condition (Not (Eq false
         (Eq (w32 308)
             (ReadLSB w32 0 v308_fuzz_symb_308))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-308-8048a0e
Size=2 Low=0 splitIndex=1 high=1
198 [State 0] Switching from state 0 to state 309
Copied 34928 (count=1)
Finalizing TB execution 309
s2e_dummyMainFunction
tcg-llvm-tb-308-8048a0e
199 [State 309] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 308 not yet applied), shell_len: 1024, eip: 0x00000000

199 [State 309] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 112 instructions, PCs: bfba34b4 bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
199 [State 309] Terminating state 309 with message 'eliminated this false positive, execution path subset of another success'
199 [State 309] Switching from state 309 to state 0
Copied 34928 (count=1)
Deleting state 309 0x0x271523e0
Firing timer event
199 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 308
>> fuzzInit: datum forking for value 309
>> fuzzInit: datum forking for value 309
199 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 309)
        (ReadLSB w32 0 v309_fuzz_symb_309)))
    state 310 with condition (Not (Eq false
         (Eq (w32 309)
             (ReadLSB w32 0 v309_fuzz_symb_309))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-309-8048a0e
Size=2 Low=0 splitIndex=1 high=1
199 [State 0] Switching from state 0 to state 310
Copied 34928 (count=1)
Finalizing TB execution 310
s2e_dummyMainFunction
tcg-llvm-tb-309-8048a0e
199 [State 310] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 309 not yet applied), shell_len: 1024, eip: 0x00000000

199 [State 310] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
199 [State 310] Leaving buffer range @0xc126f278, 6c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
199 [State 310] Killing state 310
199 [State 310] Terminating state 310 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
199 [State 310] Switching from state 310 to state 0
Copied 34928 (count=1)
Deleting state 310 0x0x271523e0
199 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 309
>> fuzzInit: datum forking for value 310
>> fuzzInit: datum forking for value 310
199 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 310)
        (ReadLSB w32 0 v310_fuzz_symb_310)))
    state 311 with condition (Not (Eq false
         (Eq (w32 310)
             (ReadLSB w32 0 v310_fuzz_symb_310))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-310-8048a0e
Size=2 Low=0 splitIndex=1 high=1
199 [State 0] Switching from state 0 to state 311
Copied 34928 (count=1)
Finalizing TB execution 311
s2e_dummyMainFunction
tcg-llvm-tb-310-8048a0e
200 [State 311] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 310 not yet applied), shell_len: 1024, eip: 0x00000000

200 [State 311] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 111 instructions, PCs: bfba34b6 bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
200 [State 311] Terminating state 311 with message 'eliminated this false positive, execution path subset of another success'
200 [State 311] Switching from state 311 to state 0
Copied 34928 (count=1)
Deleting state 311 0x0x271523e0
Firing timer event
200 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 310
>> fuzzInit: datum forking for value 311
>> fuzzInit: datum forking for value 311
200 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 311)
        (ReadLSB w32 0 v311_fuzz_symb_311)))
    state 312 with condition (Not (Eq false
         (Eq (w32 311)
             (ReadLSB w32 0 v311_fuzz_symb_311))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-311-8048a0e
Size=2 Low=0 splitIndex=1 high=1
200 [State 0] Switching from state 0 to state 312
Copied 34928 (count=1)
Finalizing TB execution 312
s2e_dummyMainFunction
tcg-llvm-tb-311-8048a0e
200 [State 312] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 311 not yet applied), shell_len: 1024, eip: 0x00000000

200 [State 312] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
200 [State 312] Leaving buffer range @0xc126f278, 6b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
200 [State 312] Killing state 312
200 [State 312] Terminating state 312 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
200 [State 312] Switching from state 312 to state 0
Copied 34928 (count=1)
Deleting state 312 0x0x271523e0
200 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 311
>> fuzzInit: datum forking for value 312
>> fuzzInit: datum forking for value 312
200 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 312)
        (ReadLSB w32 0 v312_fuzz_symb_312)))
    state 313 with condition (Not (Eq false
         (Eq (w32 312)
             (ReadLSB w32 0 v312_fuzz_symb_312))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-312-8048a0e
Size=2 Low=0 splitIndex=1 high=1
200 [State 0] Switching from state 0 to state 313
Copied 34928 (count=1)
Finalizing TB execution 313
s2e_dummyMainFunction
tcg-llvm-tb-312-8048a0e
201 [State 313] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 312 not yet applied), shell_len: 1024, eip: 0x00000000

201 [State 313] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 110 instructions, PCs: bfba34b8 bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
201 [State 313] Terminating state 313 with message 'eliminated this false positive, execution path subset of another success'
201 [State 313] Switching from state 313 to state 0
Copied 34928 (count=1)
Deleting state 313 0x0x271523e0
Firing timer event
201 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 312
>> fuzzInit: datum forking for value 313
>> fuzzInit: datum forking for value 313
201 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 313)
        (ReadLSB w32 0 v313_fuzz_symb_313)))
    state 314 with condition (Not (Eq false
         (Eq (w32 313)
             (ReadLSB w32 0 v313_fuzz_symb_313))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-313-8048a0e
Size=2 Low=0 splitIndex=1 high=1
201 [State 0] Switching from state 0 to state 314
Copied 34928 (count=1)
Finalizing TB execution 314
s2e_dummyMainFunction
tcg-llvm-tb-313-8048a0e
201 [State 314] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 313 not yet applied), shell_len: 1024, eip: 0x00000000

201 [State 314] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
201 [State 314] Leaving buffer range @0xc126f278, 6a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
201 [State 314] Killing state 314
201 [State 314] Terminating state 314 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
201 [State 314] Switching from state 314 to state 0
Copied 34928 (count=1)
Deleting state 314 0x0x271523e0
201 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 313
>> fuzzInit: datum forking for value 314
>> fuzzInit: datum forking for value 314
202 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 314)
        (ReadLSB w32 0 v314_fuzz_symb_314)))
    state 315 with condition (Not (Eq false
         (Eq (w32 314)
             (ReadLSB w32 0 v314_fuzz_symb_314))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-314-8048a0e
Size=2 Low=0 splitIndex=1 high=1
202 [State 0] Switching from state 0 to state 315
Copied 34928 (count=1)
Finalizing TB execution 315
s2e_dummyMainFunction
tcg-llvm-tb-314-8048a0e
202 [State 315] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 314 not yet applied), shell_len: 1024, eip: 0x00000000

202 [State 315] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 109 instructions, PCs: bfba34ba bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
202 [State 315] Terminating state 315 with message 'eliminated this false positive, execution path subset of another success'
202 [State 315] Switching from state 315 to state 0
Copied 34928 (count=1)
Deleting state 315 0x0x271523e0
202 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 314
>> fuzzInit: datum forking for value 315
>> fuzzInit: datum forking for value 315
202 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 315)
        (ReadLSB w32 0 v315_fuzz_symb_315)))
    state 316 with condition (Not (Eq false
         (Eq (w32 315)
             (ReadLSB w32 0 v315_fuzz_symb_315))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-315-8048a0e
Size=2 Low=0 splitIndex=1 high=1
202 [State 0] Switching from state 0 to state 316
Copied 34928 (count=1)
Finalizing TB execution 316
s2e_dummyMainFunction
tcg-llvm-tb-315-8048a0e
202 [State 316] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 315 not yet applied), shell_len: 1024, eip: 0x00000000

202 [State 316] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
202 [State 316] Leaving buffer range @0xc126f278, 69 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
202 [State 316] Killing state 316
202 [State 316] Terminating state 316 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
202 [State 316] Switching from state 316 to state 0
Copied 34928 (count=1)
Deleting state 316 0x0x271523e0
203 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 315
>> fuzzInit: datum forking for value 316
>> fuzzInit: datum forking for value 316
203 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 316)
        (ReadLSB w32 0 v316_fuzz_symb_316)))
    state 317 with condition (Not (Eq false
         (Eq (w32 316)
             (ReadLSB w32 0 v316_fuzz_symb_316))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-316-8048a0e
Size=2 Low=0 splitIndex=1 high=1
203 [State 0] Switching from state 0 to state 317
Copied 34928 (count=1)
Finalizing TB execution 317
s2e_dummyMainFunction
tcg-llvm-tb-316-8048a0e
Firing timer event
203 [State 317] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 316 not yet applied), shell_len: 1024, eip: 0x00000000

203 [State 317] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 108 instructions, PCs: bfba34bc bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
203 [State 317] Terminating state 317 with message 'eliminated this false positive, execution path subset of another success'
203 [State 317] Switching from state 317 to state 0
Copied 34928 (count=1)
Deleting state 317 0x0x271523e0
203 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 316
>> fuzzInit: datum forking for value 317
>> fuzzInit: datum forking for value 317
203 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 317)
        (ReadLSB w32 0 v317_fuzz_symb_317)))
    state 318 with condition (Not (Eq false
         (Eq (w32 317)
             (ReadLSB w32 0 v317_fuzz_symb_317))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-317-8048a0e
Size=2 Low=0 splitIndex=1 high=1
203 [State 0] Switching from state 0 to state 318
Copied 34928 (count=1)
Finalizing TB execution 318
s2e_dummyMainFunction
tcg-llvm-tb-317-8048a0e
203 [State 318] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 317 not yet applied), shell_len: 1024, eip: 0x00000000

203 [State 318] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
203 [State 318] Leaving buffer range @0xc126f278, 68 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
203 [State 318] Killing state 318
203 [State 318] Terminating state 318 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
203 [State 318] Switching from state 318 to state 0
Copied 34928 (count=1)
Deleting state 318 0x0x272cc2a0
204 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 317
>> fuzzInit: datum forking for value 318
>> fuzzInit: datum forking for value 318
204 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 318)
        (ReadLSB w32 0 v318_fuzz_symb_318)))
    state 319 with condition (Not (Eq false
         (Eq (w32 318)
             (ReadLSB w32 0 v318_fuzz_symb_318))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-318-8048a0e
Size=2 Low=0 splitIndex=1 high=1
204 [State 0] Switching from state 0 to state 319
Copied 34928 (count=1)
Finalizing TB execution 319
s2e_dummyMainFunction
tcg-llvm-tb-318-8048a0e
Firing timer event
204 [State 319] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 318 not yet applied), shell_len: 1024, eip: 0x00000000

204 [State 319] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 107 instructions, PCs: bfba34be bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
204 [State 319] Terminating state 319 with message 'eliminated this false positive, execution path subset of another success'
204 [State 319] Switching from state 319 to state 0
Copied 34928 (count=1)
Deleting state 319 0x0x272cc2a0
204 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 318
>> fuzzInit: datum forking for value 319
>> fuzzInit: datum forking for value 319
204 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 319)
        (ReadLSB w32 0 v319_fuzz_symb_319)))
    state 320 with condition (Not (Eq false
         (Eq (w32 319)
             (ReadLSB w32 0 v319_fuzz_symb_319))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-319-8048a0e
Size=2 Low=0 splitIndex=1 high=1
204 [State 0] Switching from state 0 to state 320
Copied 34928 (count=1)
Finalizing TB execution 320
s2e_dummyMainFunction
tcg-llvm-tb-319-8048a0e
204 [State 320] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 319 not yet applied), shell_len: 1024, eip: 0x00000000

204 [State 320] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
204 [State 320] Leaving buffer range @0xc126f278, 67 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
205 [State 320] Killing state 320
205 [State 320] Terminating state 320 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
205 [State 320] Switching from state 320 to state 0
Copied 34928 (count=1)
Deleting state 320 0x0x272cc2a0
205 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 319
>> fuzzInit: datum forking for value 320
>> fuzzInit: datum forking for value 320
205 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 320)
        (ReadLSB w32 0 v320_fuzz_symb_320)))
    state 321 with condition (Not (Eq false
         (Eq (w32 320)
             (ReadLSB w32 0 v320_fuzz_symb_320))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-320-8048a0e
Size=2 Low=0 splitIndex=1 high=1
205 [State 0] Switching from state 0 to state 321
Copied 34928 (count=1)
Finalizing TB execution 321
s2e_dummyMainFunction
tcg-llvm-tb-320-8048a0e
Firing timer event
205 [State 321] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 320 not yet applied), shell_len: 1024, eip: 0x00000000

205 [State 321] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 106 instructions, PCs: bfba34c0 bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
205 [State 321] Terminating state 321 with message 'eliminated this false positive, execution path subset of another success'
205 [State 321] Switching from state 321 to state 0
Copied 34928 (count=1)
Deleting state 321 0x0x273c63f0
205 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 320
>> fuzzInit: datum forking for value 321
>> fuzzInit: datum forking for value 321
205 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 321)
        (ReadLSB w32 0 v321_fuzz_symb_321)))
    state 322 with condition (Not (Eq false
         (Eq (w32 321)
             (ReadLSB w32 0 v321_fuzz_symb_321))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-321-8048a0e
Size=2 Low=0 splitIndex=1 high=1
205 [State 0] Switching from state 0 to state 322
Copied 34928 (count=1)
Finalizing TB execution 322
s2e_dummyMainFunction
tcg-llvm-tb-321-8048a0e
205 [State 322] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 321 not yet applied), shell_len: 1024, eip: 0x00000000

205 [State 322] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
205 [State 322] Leaving buffer range @0xc126f278, 66 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
206 [State 322] Killing state 322
206 [State 322] Terminating state 322 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
206 [State 322] Switching from state 322 to state 0
Copied 34928 (count=1)
Deleting state 322 0x0x273c63f0
206 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 321
>> fuzzInit: datum forking for value 322
>> fuzzInit: datum forking for value 322
206 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 322)
        (ReadLSB w32 0 v322_fuzz_symb_322)))
    state 323 with condition (Not (Eq false
         (Eq (w32 322)
             (ReadLSB w32 0 v322_fuzz_symb_322))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-322-8048a0e
Size=2 Low=0 splitIndex=1 high=1
206 [State 0] Switching from state 0 to state 323
Copied 34928 (count=1)
Finalizing TB execution 323
s2e_dummyMainFunction
tcg-llvm-tb-322-8048a0e
Firing timer event
206 [State 323] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 322 not yet applied), shell_len: 1024, eip: 0x00000000

206 [State 323] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 105 instructions, PCs: bfba34c2 bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
206 [State 323] Terminating state 323 with message 'eliminated this false positive, execution path subset of another success'
206 [State 323] Switching from state 323 to state 0
Copied 34928 (count=1)
Deleting state 323 0x0x275244d0
206 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 322
>> fuzzInit: datum forking for value 323
>> fuzzInit: datum forking for value 323
206 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 323)
        (ReadLSB w32 0 v323_fuzz_symb_323)))
    state 324 with condition (Not (Eq false
         (Eq (w32 323)
             (ReadLSB w32 0 v323_fuzz_symb_323))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-323-8048a0e
Size=2 Low=0 splitIndex=1 high=1
206 [State 0] Switching from state 0 to state 324
Copied 34928 (count=1)
Finalizing TB execution 324
s2e_dummyMainFunction
tcg-llvm-tb-323-8048a0e
206 [State 324] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 323 not yet applied), shell_len: 1024, eip: 0x00000000

206 [State 324] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
207 [State 324] Leaving buffer range @0xc126f278, 65 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
207 [State 324] Killing state 324
207 [State 324] Terminating state 324 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
207 [State 324] Switching from state 324 to state 0
Copied 34928 (count=1)
Deleting state 324 0x0x275244d0
207 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 323
>> fuzzInit: datum forking for value 324
>> fuzzInit: datum forking for value 324
207 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 324)
        (ReadLSB w32 0 v324_fuzz_symb_324)))
    state 325 with condition (Not (Eq false
         (Eq (w32 324)
             (ReadLSB w32 0 v324_fuzz_symb_324))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-324-8048a0e
Size=2 Low=0 splitIndex=1 high=1
207 [State 0] Switching from state 0 to state 325
Copied 34928 (count=1)
Finalizing TB execution 325
s2e_dummyMainFunction
tcg-llvm-tb-324-8048a0e
Firing timer event
207 [State 325] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 324 not yet applied), shell_len: 1024, eip: 0x00000000

207 [State 325] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 104 instructions, PCs: bfba34c4 bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
207 [State 325] Terminating state 325 with message 'eliminated this false positive, execution path subset of another success'
207 [State 325] Switching from state 325 to state 0
Copied 34928 (count=1)
Deleting state 325 0x0x275244d0
207 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 324
>> fuzzInit: datum forking for value 325
>> fuzzInit: datum forking for value 325
208 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 325)
        (ReadLSB w32 0 v325_fuzz_symb_325)))
    state 326 with condition (Not (Eq false
         (Eq (w32 325)
             (ReadLSB w32 0 v325_fuzz_symb_325))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-325-8048a0e
Size=2 Low=0 splitIndex=1 high=1
208 [State 0] Switching from state 0 to state 326
Copied 34928 (count=1)
Finalizing TB execution 326
s2e_dummyMainFunction
tcg-llvm-tb-325-8048a0e
208 [State 326] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 325 not yet applied), shell_len: 1024, eip: 0x00000000

208 [State 326] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
208 [State 326] Leaving buffer range @0xc126f278, 64 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
208 [State 326] Killing state 326
208 [State 326] Terminating state 326 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
208 [State 326] Switching from state 326 to state 0
Copied 34928 (count=1)
Deleting state 326 0x0x275244d0
Firing timer event
208 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 325
>> fuzzInit: datum forking for value 326
>> fuzzInit: datum forking for value 326
208 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 326)
        (ReadLSB w32 0 v326_fuzz_symb_326)))
    state 327 with condition (Not (Eq false
         (Eq (w32 326)
             (ReadLSB w32 0 v326_fuzz_symb_326))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-326-8048a0e
Size=2 Low=0 splitIndex=1 high=1
208 [State 0] Switching from state 0 to state 327
Copied 34928 (count=1)
Finalizing TB execution 327
s2e_dummyMainFunction
tcg-llvm-tb-326-8048a0e
208 [State 327] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 326 not yet applied), shell_len: 1024, eip: 0x00000000

208 [State 327] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 103 instructions, PCs: bfba34c6 bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
208 [State 327] Terminating state 327 with message 'eliminated this false positive, execution path subset of another success'
208 [State 327] Switching from state 327 to state 0
Copied 34928 (count=1)
Deleting state 327 0x0x27626d00
209 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 326
>> fuzzInit: datum forking for value 327
>> fuzzInit: datum forking for value 327
209 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 327)
        (ReadLSB w32 0 v327_fuzz_symb_327)))
    state 328 with condition (Not (Eq false
         (Eq (w32 327)
             (ReadLSB w32 0 v327_fuzz_symb_327))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-327-8048a0e
Size=2 Low=0 splitIndex=1 high=1
209 [State 0] Switching from state 0 to state 328
Copied 34928 (count=1)
Finalizing TB execution 328
s2e_dummyMainFunction
tcg-llvm-tb-327-8048a0e
209 [State 328] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 327 not yet applied), shell_len: 1024, eip: 0x00000000

209 [State 328] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
209 [State 328] Leaving buffer range @0xc126f278, 63 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
209 [State 328] Killing state 328
209 [State 328] Terminating state 328 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
209 [State 328] Switching from state 328 to state 0
Copied 34928 (count=1)
Deleting state 328 0x0x27626d00
Firing timer event
209 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 327
>> fuzzInit: datum forking for value 328
>> fuzzInit: datum forking for value 328
209 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 328)
        (ReadLSB w32 0 v328_fuzz_symb_328)))
    state 329 with condition (Not (Eq false
         (Eq (w32 328)
             (ReadLSB w32 0 v328_fuzz_symb_328))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-328-8048a0e
Size=2 Low=0 splitIndex=1 high=1
209 [State 0] Switching from state 0 to state 329
Copied 34928 (count=1)
Finalizing TB execution 329
s2e_dummyMainFunction
tcg-llvm-tb-328-8048a0e
209 [State 329] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 328 not yet applied), shell_len: 1024, eip: 0x00000000

209 [State 329] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 102 instructions, PCs: bfba34c8 bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
210 [State 329] Terminating state 329 with message 'eliminated this false positive, execution path subset of another success'
210 [State 329] Switching from state 329 to state 0
Copied 34928 (count=1)
Deleting state 329 0x0x27626d00
210 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 328
>> fuzzInit: datum forking for value 329
>> fuzzInit: datum forking for value 329
210 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 329)
        (ReadLSB w32 0 v329_fuzz_symb_329)))
    state 330 with condition (Not (Eq false
         (Eq (w32 329)
             (ReadLSB w32 0 v329_fuzz_symb_329))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-329-8048a0e
Size=2 Low=0 splitIndex=1 high=1
210 [State 0] Switching from state 0 to state 330
Copied 34928 (count=1)
Finalizing TB execution 330
s2e_dummyMainFunction
tcg-llvm-tb-329-8048a0e
210 [State 330] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 329 not yet applied), shell_len: 1024, eip: 0x00000000

210 [State 330] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
210 [State 330] Leaving buffer range @0xc126f278, 62 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
210 [State 330] Killing state 330
210 [State 330] Terminating state 330 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
210 [State 330] Switching from state 330 to state 0
Copied 34928 (count=1)
Deleting state 330 0x0x27838080
Firing timer event
210 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 329
>> fuzzInit: datum forking for value 330
>> fuzzInit: datum forking for value 330
210 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 330)
        (ReadLSB w32 0 v330_fuzz_symb_330)))
    state 331 with condition (Not (Eq false
         (Eq (w32 330)
             (ReadLSB w32 0 v330_fuzz_symb_330))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-330-8048a0e
Size=2 Low=0 splitIndex=1 high=1
210 [State 0] Switching from state 0 to state 331
Copied 34928 (count=1)
Finalizing TB execution 331
s2e_dummyMainFunction
tcg-llvm-tb-330-8048a0e
210 [State 331] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 330 not yet applied), shell_len: 1024, eip: 0x00000000

210 [State 331] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 101 instructions, PCs: bfba34ca bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
211 [State 331] Terminating state 331 with message 'eliminated this false positive, execution path subset of another success'
211 [State 331] Switching from state 331 to state 0
Copied 34928 (count=1)
Deleting state 331 0x0x27775d10
211 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 330
>> fuzzInit: datum forking for value 331
>> fuzzInit: datum forking for value 331
211 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 331)
        (ReadLSB w32 0 v331_fuzz_symb_331)))
    state 332 with condition (Not (Eq false
         (Eq (w32 331)
             (ReadLSB w32 0 v331_fuzz_symb_331))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-331-8048a0e
Size=2 Low=0 splitIndex=1 high=1
211 [State 0] Switching from state 0 to state 332
Copied 34928 (count=1)
Finalizing TB execution 332
s2e_dummyMainFunction
tcg-llvm-tb-331-8048a0e
211 [State 332] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 331 not yet applied), shell_len: 1024, eip: 0x00000000

211 [State 332] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
211 [State 332] Leaving buffer range @0xc126f278, 61 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
211 [State 332] Killing state 332
211 [State 332] Terminating state 332 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
211 [State 332] Switching from state 332 to state 0
Copied 34928 (count=1)
Deleting state 332 0x0x27761960
Firing timer event
211 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 331
>> fuzzInit: datum forking for value 332
>> fuzzInit: datum forking for value 332
211 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 332)
        (ReadLSB w32 0 v332_fuzz_symb_332)))
    state 333 with condition (Not (Eq false
         (Eq (w32 332)
             (ReadLSB w32 0 v332_fuzz_symb_332))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-332-8048a0e
Size=2 Low=0 splitIndex=1 high=1
211 [State 0] Switching from state 0 to state 333
Copied 34928 (count=1)
Finalizing TB execution 333
s2e_dummyMainFunction
tcg-llvm-tb-332-8048a0e
211 [State 333] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 332 not yet applied), shell_len: 1024, eip: 0x00000000

211 [State 333] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 100 instructions, PCs: bfba34cc bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
212 [State 333] Terminating state 333 with message 'eliminated this false positive, execution path subset of another success'
212 [State 333] Switching from state 333 to state 0
Copied 34928 (count=1)
Deleting state 333 0x0x27761960
212 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 332
>> fuzzInit: datum forking for value 333
>> fuzzInit: datum forking for value 333
212 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 333)
        (ReadLSB w32 0 v333_fuzz_symb_333)))
    state 334 with condition (Not (Eq false
         (Eq (w32 333)
             (ReadLSB w32 0 v333_fuzz_symb_333))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-333-8048a0e
Size=2 Low=0 splitIndex=1 high=1
212 [State 0] Switching from state 0 to state 334
Copied 34928 (count=1)
Finalizing TB execution 334
s2e_dummyMainFunction
tcg-llvm-tb-333-8048a0e
212 [State 334] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 333 not yet applied), shell_len: 1024, eip: 0x00000000

212 [State 334] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
212 [State 334] Leaving buffer range @0xc126f278, 60 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
212 [State 334] Killing state 334
212 [State 334] Terminating state 334 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
212 [State 334] Switching from state 334 to state 0
Copied 34928 (count=1)
Deleting state 334 0x0x27761960
Firing timer event
212 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 333
>> fuzzInit: datum forking for value 334
>> fuzzInit: datum forking for value 334
212 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 334)
        (ReadLSB w32 0 v334_fuzz_symb_334)))
    state 335 with condition (Not (Eq false
         (Eq (w32 334)
             (ReadLSB w32 0 v334_fuzz_symb_334))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-334-8048a0e
Size=2 Low=0 splitIndex=1 high=1
212 [State 0] Switching from state 0 to state 335
Copied 34928 (count=1)
Finalizing TB execution 335
s2e_dummyMainFunction
tcg-llvm-tb-334-8048a0e
213 [State 335] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 334 not yet applied), shell_len: 1024, eip: 0x00000000

213 [State 335] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 99 instructions, PCs: bfba34ce bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
213 [State 335] Terminating state 335 with message 'eliminated this false positive, execution path subset of another success'
213 [State 335] Switching from state 335 to state 0
Copied 34928 (count=1)
Deleting state 335 0x0x27761960
213 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 334
>> fuzzInit: datum forking for value 335
>> fuzzInit: datum forking for value 335
213 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 335)
        (ReadLSB w32 0 v335_fuzz_symb_335)))
    state 336 with condition (Not (Eq false
         (Eq (w32 335)
             (ReadLSB w32 0 v335_fuzz_symb_335))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-335-8048a0e
Size=2 Low=0 splitIndex=1 high=1
213 [State 0] Switching from state 0 to state 336
Copied 34928 (count=1)
Finalizing TB execution 336
s2e_dummyMainFunction
tcg-llvm-tb-335-8048a0e
213 [State 336] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 335 not yet applied), shell_len: 1024, eip: 0x00000000

213 [State 336] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
213 [State 336] Leaving buffer range @0xc126f278, 5f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
213 [State 336] Killing state 336
213 [State 336] Terminating state 336 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
213 [State 336] Switching from state 336 to state 0
Copied 34928 (count=1)
Deleting state 336 0x0x27761960
213 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 335
>> fuzzInit: datum forking for value 336
>> fuzzInit: datum forking for value 336
213 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 336)
        (ReadLSB w32 0 v336_fuzz_symb_336)))
    state 337 with condition (Not (Eq false
         (Eq (w32 336)
             (ReadLSB w32 0 v336_fuzz_symb_336))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-336-8048a0e
Size=2 Low=0 splitIndex=1 high=1
213 [State 0] Switching from state 0 to state 337
Copied 34928 (count=1)
Finalizing TB execution 337
s2e_dummyMainFunction
tcg-llvm-tb-336-8048a0e
214 [State 337] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 336 not yet applied), shell_len: 1024, eip: 0x00000000

214 [State 337] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 98 instructions, PCs: bfba34d0 bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
214 [State 337] Terminating state 337 with message 'eliminated this false positive, execution path subset of another success'
214 [State 337] Switching from state 337 to state 0
Copied 34928 (count=1)
Deleting state 337 0x0x27765a90
214 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 336
>> fuzzInit: datum forking for value 337
>> fuzzInit: datum forking for value 337
214 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 337)
        (ReadLSB w32 0 v337_fuzz_symb_337)))
    state 338 with condition (Not (Eq false
         (Eq (w32 337)
             (ReadLSB w32 0 v337_fuzz_symb_337))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-337-8048a0e
Size=2 Low=0 splitIndex=1 high=1
214 [State 0] Switching from state 0 to state 338
Copied 34928 (count=1)
Finalizing TB execution 338
s2e_dummyMainFunction
tcg-llvm-tb-337-8048a0e
214 [State 338] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 337 not yet applied), shell_len: 1024, eip: 0x00000000

214 [State 338] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
214 [State 338] Leaving buffer range @0xc126f278, 5e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
214 [State 338] Killing state 338
214 [State 338] Terminating state 338 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
214 [State 338] Switching from state 338 to state 0
Copied 34928 (count=1)
Deleting state 338 0x0x27765a90
214 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 337
>> fuzzInit: datum forking for value 338
>> fuzzInit: datum forking for value 338
215 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 338)
        (ReadLSB w32 0 v338_fuzz_symb_338)))
    state 339 with condition (Not (Eq false
         (Eq (w32 338)
             (ReadLSB w32 0 v338_fuzz_symb_338))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-338-8048a0e
Size=2 Low=0 splitIndex=1 high=1
215 [State 0] Switching from state 0 to state 339
Copied 34928 (count=1)
Finalizing TB execution 339
s2e_dummyMainFunction
tcg-llvm-tb-338-8048a0e
215 [State 339] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 338 not yet applied), shell_len: 1024, eip: 0x00000000

215 [State 339] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 97 instructions, PCs: bfba34d2 bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
215 [State 339] Terminating state 339 with message 'eliminated this false positive, execution path subset of another success'
215 [State 339] Switching from state 339 to state 0
Copied 34928 (count=1)
Deleting state 339 0x0x27761960
215 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 338
>> fuzzInit: datum forking for value 339
>> fuzzInit: datum forking for value 339
215 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 339)
        (ReadLSB w32 0 v339_fuzz_symb_339)))
    state 340 with condition (Not (Eq false
         (Eq (w32 339)
             (ReadLSB w32 0 v339_fuzz_symb_339))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-339-8048a0e
Size=2 Low=0 splitIndex=1 high=1
215 [State 0] Switching from state 0 to state 340
Copied 34928 (count=1)
Finalizing TB execution 340
s2e_dummyMainFunction
tcg-llvm-tb-339-8048a0e
215 [State 340] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 339 not yet applied), shell_len: 1024, eip: 0x00000000

215 [State 340] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
215 [State 340] Leaving buffer range @0xc126f278, 5d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
215 [State 340] Killing state 340
215 [State 340] Terminating state 340 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
215 [State 340] Switching from state 340 to state 0
Copied 34928 (count=1)
Deleting state 340 0x0x27761960
215 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 339
>> fuzzInit: datum forking for value 340
>> fuzzInit: datum forking for value 340
216 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 340)
        (ReadLSB w32 0 v340_fuzz_symb_340)))
    state 341 with condition (Not (Eq false
         (Eq (w32 340)
             (ReadLSB w32 0 v340_fuzz_symb_340))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-340-8048a0e
Size=2 Low=0 splitIndex=1 high=1
216 [State 0] Switching from state 0 to state 341
Copied 34928 (count=1)
Finalizing TB execution 341
s2e_dummyMainFunction
tcg-llvm-tb-340-8048a0e
216 [State 341] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 340 not yet applied), shell_len: 1024, eip: 0x00000000

216 [State 341] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 96 instructions, PCs: bfba34d4 bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
216 [State 341] Terminating state 341 with message 'eliminated this false positive, execution path subset of another success'
216 [State 341] Switching from state 341 to state 0
Copied 34928 (count=1)
Deleting state 341 0x0x27a26dc0
216 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 340
>> fuzzInit: datum forking for value 341
>> fuzzInit: datum forking for value 341
216 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 341)
        (ReadLSB w32 0 v341_fuzz_symb_341)))
    state 342 with condition (Not (Eq false
         (Eq (w32 341)
             (ReadLSB w32 0 v341_fuzz_symb_341))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-341-8048a0e
Size=2 Low=0 splitIndex=1 high=1
216 [State 0] Switching from state 0 to state 342
Copied 34928 (count=1)
Finalizing TB execution 342
s2e_dummyMainFunction
tcg-llvm-tb-341-8048a0e
216 [State 342] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 341 not yet applied), shell_len: 1024, eip: 0x00000000

216 [State 342] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
216 [State 342] Leaving buffer range @0xc126f278, 5c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
216 [State 342] Killing state 342
216 [State 342] Terminating state 342 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
216 [State 342] Switching from state 342 to state 0
Copied 34928 (count=1)
Deleting state 342 0x0x27a26dc0
217 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 341
>> fuzzInit: datum forking for value 342
>> fuzzInit: datum forking for value 342
217 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 342)
        (ReadLSB w32 0 v342_fuzz_symb_342)))
    state 343 with condition (Not (Eq false
         (Eq (w32 342)
             (ReadLSB w32 0 v342_fuzz_symb_342))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-342-8048a0e
Size=2 Low=0 splitIndex=1 high=1
217 [State 0] Switching from state 0 to state 343
Copied 34928 (count=1)
Finalizing TB execution 343
s2e_dummyMainFunction
tcg-llvm-tb-342-8048a0e
217 [State 343] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 342 not yet applied), shell_len: 1024, eip: 0x00000000

217 [State 343] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 95 instructions, PCs: bfba34d6 bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
217 [State 343] Terminating state 343 with message 'eliminated this false positive, execution path subset of another success'
217 [State 343] Switching from state 343 to state 0
Copied 34928 (count=1)
Deleting state 343 0x0x27a26dc0
217 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 342
>> fuzzInit: datum forking for value 343
>> fuzzInit: datum forking for value 343
217 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 343)
        (ReadLSB w32 0 v343_fuzz_symb_343)))
    state 344 with condition (Not (Eq false
         (Eq (w32 343)
             (ReadLSB w32 0 v343_fuzz_symb_343))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-343-8048a0e
Size=2 Low=0 splitIndex=1 high=1
217 [State 0] Switching from state 0 to state 344
Copied 34928 (count=1)
Finalizing TB execution 344
s2e_dummyMainFunction
tcg-llvm-tb-343-8048a0e
Firing timer event
217 [State 344] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 343 not yet applied), shell_len: 1024, eip: 0x00000000

217 [State 344] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
217 [State 344] Leaving buffer range @0xc126f278, 5b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
217 [State 344] Killing state 344
217 [State 344] Terminating state 344 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
217 [State 344] Switching from state 344 to state 0
Copied 34928 (count=1)
Deleting state 344 0x0x27a26dc0
218 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 343
>> fuzzInit: datum forking for value 344
>> fuzzInit: datum forking for value 344
218 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 344)
        (ReadLSB w32 0 v344_fuzz_symb_344)))
    state 345 with condition (Not (Eq false
         (Eq (w32 344)
             (ReadLSB w32 0 v344_fuzz_symb_344))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-344-8048a0e
Size=2 Low=0 splitIndex=1 high=1
218 [State 0] Switching from state 0 to state 345
Copied 34928 (count=1)
Finalizing TB execution 345
s2e_dummyMainFunction
tcg-llvm-tb-344-8048a0e
218 [State 345] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 344 not yet applied), shell_len: 1024, eip: 0x00000000

218 [State 345] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 94 instructions, PCs: bfba34d8 bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
218 [State 345] Terminating state 345 with message 'eliminated this false positive, execution path subset of another success'
218 [State 345] Switching from state 345 to state 0
Copied 34928 (count=1)
Deleting state 345 0x0x27a26dc0
218 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 344
>> fuzzInit: datum forking for value 345
>> fuzzInit: datum forking for value 345
218 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 345)
        (ReadLSB w32 0 v345_fuzz_symb_345)))
    state 346 with condition (Not (Eq false
         (Eq (w32 345)
             (ReadLSB w32 0 v345_fuzz_symb_345))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-345-8048a0e
Size=2 Low=0 splitIndex=1 high=1
218 [State 0] Switching from state 0 to state 346
Copied 34928 (count=1)
Finalizing TB execution 346
s2e_dummyMainFunction
tcg-llvm-tb-345-8048a0e
Firing timer event
218 [State 346] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 345 not yet applied), shell_len: 1024, eip: 0x00000000

218 [State 346] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
218 [State 346] Leaving buffer range @0xc126f278, 5a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
219 [State 346] Killing state 346
219 [State 346] Terminating state 346 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
219 [State 346] Switching from state 346 to state 0
Copied 34928 (count=1)
Deleting state 346 0x0x27a26dc0
219 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 345
>> fuzzInit: datum forking for value 346
>> fuzzInit: datum forking for value 346
219 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 346)
        (ReadLSB w32 0 v346_fuzz_symb_346)))
    state 347 with condition (Not (Eq false
         (Eq (w32 346)
             (ReadLSB w32 0 v346_fuzz_symb_346))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-346-8048a0e
Size=2 Low=0 splitIndex=1 high=1
219 [State 0] Switching from state 0 to state 347
Copied 34928 (count=1)
Finalizing TB execution 347
s2e_dummyMainFunction
tcg-llvm-tb-346-8048a0e
219 [State 347] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 346 not yet applied), shell_len: 1024, eip: 0x00000000

219 [State 347] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 93 instructions, PCs: bfba34da bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
219 [State 347] Terminating state 347 with message 'eliminated this false positive, execution path subset of another success'
219 [State 347] Switching from state 347 to state 0
Copied 34928 (count=1)
Deleting state 347 0x0x27a26dc0
219 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 346
>> fuzzInit: datum forking for value 347
>> fuzzInit: datum forking for value 347
219 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 347)
        (ReadLSB w32 0 v347_fuzz_symb_347)))
    state 348 with condition (Not (Eq false
         (Eq (w32 347)
             (ReadLSB w32 0 v347_fuzz_symb_347))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-347-8048a0e
Size=2 Low=0 splitIndex=1 high=1
219 [State 0] Switching from state 0 to state 348
Copied 34928 (count=1)
Finalizing TB execution 348
s2e_dummyMainFunction
tcg-llvm-tb-347-8048a0e
Firing timer event
219 [State 348] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 347 not yet applied), shell_len: 1024, eip: 0x00000000

219 [State 348] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
220 [State 348] Leaving buffer range @0xc1141730, 25 IoB insns; prev insn @0xbfba3523
  1   2B @0xbfba3523:  0  0             add [eax], al           
220 [State 348] Entering buffer range @0xbfba3525, 14 OoB insns
220 [State 348] Leaving buffer range @0xc126f278, 34 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
220 [State 348] Killing state 348
220 [State 348] Terminating state 348 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
220 [State 348] Switching from state 348 to state 0
Copied 34928 (count=1)
Deleting state 348 0x0x27a26dc0
220 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 347
>> fuzzInit: datum forking for value 348
>> fuzzInit: datum forking for value 348
220 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 348)
        (ReadLSB w32 0 v348_fuzz_symb_348)))
    state 349 with condition (Not (Eq false
         (Eq (w32 348)
             (ReadLSB w32 0 v348_fuzz_symb_348))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-348-8048a0e
Size=2 Low=0 splitIndex=1 high=1
220 [State 0] Switching from state 0 to state 349
Copied 34928 (count=1)
Finalizing TB execution 349
s2e_dummyMainFunction
tcg-llvm-tb-348-8048a0e
220 [State 349] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 348 not yet applied), shell_len: 1024, eip: 0x00000000

220 [State 349] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 92 instructions, PCs: bfba34dc bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
220 [State 349] Terminating state 349 with message 'eliminated this false positive, execution path subset of another success'
220 [State 349] Switching from state 349 to state 0
Copied 34928 (count=1)
Deleting state 349 0x0x27d2cfe0
220 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 348
>> fuzzInit: datum forking for value 349
>> fuzzInit: datum forking for value 349
220 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 349)
        (ReadLSB w32 0 v349_fuzz_symb_349)))
    state 350 with condition (Not (Eq false
         (Eq (w32 349)
             (ReadLSB w32 0 v349_fuzz_symb_349))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-349-8048a0e
Size=2 Low=0 splitIndex=1 high=1
220 [State 0] Switching from state 0 to state 350
Copied 34928 (count=1)
Finalizing TB execution 350
s2e_dummyMainFunction
tcg-llvm-tb-349-8048a0e
Firing timer event
220 [State 350] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 349 not yet applied), shell_len: 1024, eip: 0x00000000

220 [State 350] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
221 [State 350] Leaving buffer range @0xc126f278, 58 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
221 [State 350] Killing state 350
221 [State 350] Terminating state 350 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
221 [State 350] Switching from state 350 to state 0
Copied 34928 (count=1)
Deleting state 350 0x0x27d2cfe0
221 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 349
>> fuzzInit: datum forking for value 350
>> fuzzInit: datum forking for value 350
221 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 350)
        (ReadLSB w32 0 v350_fuzz_symb_350)))
    state 351 with condition (Not (Eq false
         (Eq (w32 350)
             (ReadLSB w32 0 v350_fuzz_symb_350))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-350-8048a0e
Size=2 Low=0 splitIndex=1 high=1
221 [State 0] Switching from state 0 to state 351
Copied 34928 (count=1)
Finalizing TB execution 351
s2e_dummyMainFunction
tcg-llvm-tb-350-8048a0e
221 [State 351] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 350 not yet applied), shell_len: 1024, eip: 0x00000000

221 [State 351] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 91 instructions, PCs: bfba34de bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
221 [State 351] Terminating state 351 with message 'eliminated this false positive, execution path subset of another success'
221 [State 351] Switching from state 351 to state 0
Copied 34928 (count=1)
Deleting state 351 0x0x27d2cfe0
221 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 350
>> fuzzInit: datum forking for value 351
>> fuzzInit: datum forking for value 351
221 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 351)
        (ReadLSB w32 0 v351_fuzz_symb_351)))
    state 352 with condition (Not (Eq false
         (Eq (w32 351)
             (ReadLSB w32 0 v351_fuzz_symb_351))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-351-8048a0e
Size=2 Low=0 splitIndex=1 high=1
221 [State 0] Switching from state 0 to state 352
Copied 34928 (count=1)
Finalizing TB execution 352
s2e_dummyMainFunction
tcg-llvm-tb-351-8048a0e
Firing timer event
222 [State 352] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 351 not yet applied), shell_len: 1024, eip: 0x00000000

222 [State 352] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
222 [State 352] Leaving buffer range @0xc126f278, 57 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
222 [State 352] Killing state 352
222 [State 352] Terminating state 352 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
222 [State 352] Switching from state 352 to state 0
Copied 34928 (count=1)
Deleting state 352 0x0x27d2cfe0
222 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 351
>> fuzzInit: datum forking for value 352
>> fuzzInit: datum forking for value 352
222 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 352)
        (ReadLSB w32 0 v352_fuzz_symb_352)))
    state 353 with condition (Not (Eq false
         (Eq (w32 352)
             (ReadLSB w32 0 v352_fuzz_symb_352))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-352-8048a0e
Size=2 Low=0 splitIndex=1 high=1
222 [State 0] Switching from state 0 to state 353
Copied 34928 (count=1)
Finalizing TB execution 353
s2e_dummyMainFunction
tcg-llvm-tb-352-8048a0e
222 [State 353] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 352 not yet applied), shell_len: 1024, eip: 0x00000000

222 [State 353] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 90 instructions, PCs: bfba34e0 bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
222 [State 353] Terminating state 353 with message 'eliminated this false positive, execution path subset of another success'
222 [State 353] Switching from state 353 to state 0
Copied 34928 (count=1)
Deleting state 353 0x0x27d2cfe0
222 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 352
>> fuzzInit: datum forking for value 353
>> fuzzInit: datum forking for value 353
223 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 353)
        (ReadLSB w32 0 v353_fuzz_symb_353)))
    state 354 with condition (Not (Eq false
         (Eq (w32 353)
             (ReadLSB w32 0 v353_fuzz_symb_353))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-353-8048a0e
Size=2 Low=0 splitIndex=1 high=1
223 [State 0] Switching from state 0 to state 354
Copied 34928 (count=1)
Finalizing TB execution 354
s2e_dummyMainFunction
tcg-llvm-tb-353-8048a0e
Firing timer event
223 [State 354] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 353 not yet applied), shell_len: 1024, eip: 0x00000000

223 [State 354] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
223 [State 354] Leaving buffer range @0xc126f278, 56 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
223 [State 354] Killing state 354
223 [State 354] Terminating state 354 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
223 [State 354] Switching from state 354 to state 0
Copied 34928 (count=1)
Deleting state 354 0x0x27d2cfe0
223 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 353
>> fuzzInit: datum forking for value 354
>> fuzzInit: datum forking for value 354
223 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 354)
        (ReadLSB w32 0 v354_fuzz_symb_354)))
    state 355 with condition (Not (Eq false
         (Eq (w32 354)
             (ReadLSB w32 0 v354_fuzz_symb_354))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-354-8048a0e
Size=2 Low=0 splitIndex=1 high=1
223 [State 0] Switching from state 0 to state 355
Copied 34928 (count=1)
Finalizing TB execution 355
s2e_dummyMainFunction
tcg-llvm-tb-354-8048a0e
223 [State 355] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 354 not yet applied), shell_len: 1024, eip: 0x00000000

223 [State 355] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 89 instructions, PCs: bfba34e2 bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
223 [State 355] Terminating state 355 with message 'eliminated this false positive, execution path subset of another success'
223 [State 355] Switching from state 355 to state 0
Copied 34928 (count=1)
Deleting state 355 0x0x27d2cfe0
223 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 354
>> fuzzInit: datum forking for value 355
>> fuzzInit: datum forking for value 355
224 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 355)
        (ReadLSB w32 0 v355_fuzz_symb_355)))
    state 356 with condition (Not (Eq false
         (Eq (w32 355)
             (ReadLSB w32 0 v355_fuzz_symb_355))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-355-8048a0e
Size=2 Low=0 splitIndex=1 high=1
224 [State 0] Switching from state 0 to state 356
Copied 34928 (count=1)
Finalizing TB execution 356
s2e_dummyMainFunction
tcg-llvm-tb-355-8048a0e
Firing timer event
224 [State 356] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 355 not yet applied), shell_len: 1024, eip: 0x00000000

224 [State 356] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
224 [State 356] Leaving buffer range @0xc126f278, 55 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
224 [State 356] Killing state 356
224 [State 356] Terminating state 356 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
224 [State 356] Switching from state 356 to state 0
Copied 34928 (count=1)
Deleting state 356 0x0x27d2cfe0
224 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 355
>> fuzzInit: datum forking for value 356
>> fuzzInit: datum forking for value 356
224 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 356)
        (ReadLSB w32 0 v356_fuzz_symb_356)))
    state 357 with condition (Not (Eq false
         (Eq (w32 356)
             (ReadLSB w32 0 v356_fuzz_symb_356))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-356-8048a0e
Size=2 Low=0 splitIndex=1 high=1
224 [State 0] Switching from state 0 to state 357
Copied 34928 (count=1)
Finalizing TB execution 357
s2e_dummyMainFunction
tcg-llvm-tb-356-8048a0e
224 [State 357] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 356 not yet applied), shell_len: 1024, eip: 0x00000000

224 [State 357] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 88 instructions, PCs: bfba34e4 bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
224 [State 357] Terminating state 357 with message 'eliminated this false positive, execution path subset of another success'
224 [State 357] Switching from state 357 to state 0
Copied 34928 (count=1)
Deleting state 357 0x0x27d2cfe0
225 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 356
>> fuzzInit: datum forking for value 357
>> fuzzInit: datum forking for value 357
225 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 357)
        (ReadLSB w32 0 v357_fuzz_symb_357)))
    state 358 with condition (Not (Eq false
         (Eq (w32 357)
             (ReadLSB w32 0 v357_fuzz_symb_357))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-357-8048a0e
Size=2 Low=0 splitIndex=1 high=1
225 [State 0] Switching from state 0 to state 358
Copied 34928 (count=1)
Finalizing TB execution 358
s2e_dummyMainFunction
tcg-llvm-tb-357-8048a0e
Firing timer event
225 [State 358] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 357 not yet applied), shell_len: 1024, eip: 0x00000000

225 [State 358] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
225 [State 358] Leaving buffer range @0xc126f278, 54 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
225 [State 358] Killing state 358
225 [State 358] Terminating state 358 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
225 [State 358] Switching from state 358 to state 0
Copied 34928 (count=1)
Deleting state 358 0x0x27d2cfe0
225 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 357
>> fuzzInit: datum forking for value 358
>> fuzzInit: datum forking for value 358
225 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 358)
        (ReadLSB w32 0 v358_fuzz_symb_358)))
    state 359 with condition (Not (Eq false
         (Eq (w32 358)
             (ReadLSB w32 0 v358_fuzz_symb_358))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-358-8048a0e
Size=2 Low=0 splitIndex=1 high=1
225 [State 0] Switching from state 0 to state 359
Copied 34928 (count=1)
Finalizing TB execution 359
s2e_dummyMainFunction
tcg-llvm-tb-358-8048a0e
225 [State 359] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 358 not yet applied), shell_len: 1024, eip: 0x00000000

225 [State 359] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 87 instructions, PCs: bfba34e6 bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
225 [State 359] Terminating state 359 with message 'eliminated this false positive, execution path subset of another success'
225 [State 359] Switching from state 359 to state 0
Copied 34928 (count=1)
Deleting state 359 0x0x27d2cfe0
226 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 358
>> fuzzInit: datum forking for value 359
>> fuzzInit: datum forking for value 359
226 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 359)
        (ReadLSB w32 0 v359_fuzz_symb_359)))
    state 360 with condition (Not (Eq false
         (Eq (w32 359)
             (ReadLSB w32 0 v359_fuzz_symb_359))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-359-8048a0e
Size=2 Low=0 splitIndex=1 high=1
226 [State 0] Switching from state 0 to state 360
Copied 34928 (count=1)
Finalizing TB execution 360
s2e_dummyMainFunction
tcg-llvm-tb-359-8048a0e
Firing timer event
226 [State 360] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 359 not yet applied), shell_len: 1024, eip: 0x00000000

226 [State 360] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
226 [State 360] Leaving buffer range @0xc126f278, 53 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
226 [State 360] Killing state 360
226 [State 360] Terminating state 360 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
226 [State 360] Switching from state 360 to state 0
Copied 34928 (count=1)
Deleting state 360 0x0x27d2cfe0
226 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 359
>> fuzzInit: datum forking for value 360
>> fuzzInit: datum forking for value 360
226 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 360)
        (ReadLSB w32 0 v360_fuzz_symb_360)))
    state 361 with condition (Not (Eq false
         (Eq (w32 360)
             (ReadLSB w32 0 v360_fuzz_symb_360))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-360-8048a0e
Size=2 Low=0 splitIndex=1 high=1
226 [State 0] Switching from state 0 to state 361
Copied 34928 (count=1)
Finalizing TB execution 361
s2e_dummyMainFunction
tcg-llvm-tb-360-8048a0e
226 [State 361] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 360 not yet applied), shell_len: 1024, eip: 0x00000000

226 [State 361] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 86 instructions, PCs: bfba34e8 bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
227 [State 361] Terminating state 361 with message 'eliminated this false positive, execution path subset of another success'
227 [State 361] Switching from state 361 to state 0
Copied 34928 (count=1)
Deleting state 361 0x0x27d2cfe0
227 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 360
>> fuzzInit: datum forking for value 361
>> fuzzInit: datum forking for value 361
227 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 361)
        (ReadLSB w32 0 v361_fuzz_symb_361)))
    state 362 with condition (Not (Eq false
         (Eq (w32 361)
             (ReadLSB w32 0 v361_fuzz_symb_361))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-361-8048a0e
Size=2 Low=0 splitIndex=1 high=1
227 [State 0] Switching from state 0 to state 362
Copied 34928 (count=1)
Finalizing TB execution 362
s2e_dummyMainFunction
tcg-llvm-tb-361-8048a0e
Firing timer event
227 [State 362] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 361 not yet applied), shell_len: 1024, eip: 0x00000000

227 [State 362] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
227 [State 362] Leaving buffer range @0xc126f278, 52 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
227 [State 362] Killing state 362
227 [State 362] Terminating state 362 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
227 [State 362] Switching from state 362 to state 0
Copied 34928 (count=1)
Deleting state 362 0x0x27d2cfe0
227 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 361
>> fuzzInit: datum forking for value 362
>> fuzzInit: datum forking for value 362
227 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 362)
        (ReadLSB w32 0 v362_fuzz_symb_362)))
    state 363 with condition (Not (Eq false
         (Eq (w32 362)
             (ReadLSB w32 0 v362_fuzz_symb_362))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-362-8048a0e
Size=2 Low=0 splitIndex=1 high=1
227 [State 0] Switching from state 0 to state 363
Copied 34928 (count=1)
Finalizing TB execution 363
s2e_dummyMainFunction
tcg-llvm-tb-362-8048a0e
228 [State 363] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 362 not yet applied), shell_len: 1024, eip: 0x00000000

228 [State 363] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 85 instructions, PCs: bfba34ea bfba34ec bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
228 [State 363] Terminating state 363 with message 'eliminated this false positive, execution path subset of another success'
228 [State 363] Switching from state 363 to state 0
Copied 34928 (count=1)
Deleting state 363 0x0x27d2cfe0
228 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 362
>> fuzzInit: datum forking for value 363
>> fuzzInit: datum forking for value 363
228 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 363)
        (ReadLSB w32 0 v363_fuzz_symb_363)))
    state 364 with condition (Not (Eq false
         (Eq (w32 363)
             (ReadLSB w32 0 v363_fuzz_symb_363))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-363-8048a0e
Size=2 Low=0 splitIndex=1 high=1
228 [State 0] Switching from state 0 to state 364
Copied 34928 (count=1)
Finalizing TB execution 364
s2e_dummyMainFunction
tcg-llvm-tb-363-8048a0e
Firing timer event
228 [State 364] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 363 not yet applied), shell_len: 1024, eip: 0x00000000

228 [State 364] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
228 [State 364] Leaving buffer range @0xc126f278, 51 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
228 [State 364] Killing state 364
228 [State 364] Terminating state 364 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
228 [State 364] Switching from state 364 to state 0
Copied 34928 (count=1)
Deleting state 364 0x0x27d2cfe0
228 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 363
>> fuzzInit: datum forking for value 364
>> fuzzInit: datum forking for value 364
229 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 364)
        (ReadLSB w32 0 v364_fuzz_symb_364)))
    state 365 with condition (Not (Eq false
         (Eq (w32 364)
             (ReadLSB w32 0 v364_fuzz_symb_364))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-364-8048a0e
Size=2 Low=0 splitIndex=1 high=1
229 [State 0] Switching from state 0 to state 365
Copied 34928 (count=1)
Finalizing TB execution 365
s2e_dummyMainFunction
tcg-llvm-tb-364-8048a0e
229 [State 365] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 364 not yet applied), shell_len: 1024, eip: 0x00000000

229 [State 365] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
229 [State 365] Leaving buffer range @0xc103b111, 25 IoB insns; prev insn @0xbfba3534
  1   2B @0xbfba3534:  0  0             add [eax], al           
229 [State 365] Entering buffer range @0xbfba3536, 67 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 151. This is the 9th success
>> Success densities, overlay: 0.971264; avg: 0.971264
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba34ec:  0  0             add [eax], al           
>>      2   2B @0xbfba34ee:  0  0             add [eax], al           
>>      3   2B @0xbfba34f0:  0  0             add [eax], al           
>>      4   2B @0xbfba34f2:  0  0             add [eax], al           
>>      5   2B @0xbfba34f4:  0  0             add [eax], al           
>>      6   2B @0xbfba34f6:  0  0             add [eax], al           
>>      7   2B @0xbfba34f8:  0  0             add [eax], al           
>>      8   2B @0xbfba34fa:  0  0             add [eax], al           
>>      9   2B @0xbfba34fc:  0  0             add [eax], al           
>>     10   2B @0xbfba34fe:  0  0             add [eax], al           
>>     11   2B @0xbfba3500:  0  0             add [eax], al           
>>     12   2B @0xbfba3502:  0  0             add [eax], al           
>>     13   2B @0xbfba3504:  0  0             add [eax], al           
>>     14   2B @0xbfba3506:  0  0             add [eax], al           
>>     15   2B @0xbfba3508:  0  0             add [eax], al           
>>     16   2B @0xbfba350a:  0  0             add [eax], al           
>>     17   2B @0xbfba350c:  0  0             add [eax], al           
>>     18   2B @0xbfba350e:  0  0             add [eax], al           
>>     19   2B @0xbfba3510:  0  0             add [eax], al           
>>     20   2B @0xbfba3512:  0  0             add [eax], al           
>>     21   2B @0xbfba3514:  0  0             add [eax], al           
>>     22   2B @0xbfba3516:  0  0             add [eax], al           
>>     23   2B @0xbfba3518:  0  0             add [eax], al           
>>     24   2B @0xbfba351a:  0  0             add [eax], al           
>>     25   2B @0xbfba351c:  0  0             add [eax], al           
>>     26   2B @0xbfba351e:  0  0             add [eax], al           
>>     27   2B @0xbfba3520:  0  0             add [eax], al           
>>     28   2B @0xbfba3522:  0  0             add [eax], al           
>>     29   2B @0xbfba3524:  0  0             add [eax], al           
>>     30   2B @0xbfba3526:  0  0             add [eax], al           
>>     31   2B @0xbfba3528:  0  0             add [eax], al           
>>     32   2B @0xbfba352a:  0  0             add [eax], al           
>>     33   2B @0xbfba352c:  0  0             add [eax], al           
>>     34   2B @0xbfba352e:  0  0             add [eax], al           
>>     35   2B @0xbfba3530:  0  0             add [eax], al           
>>     36   2B @0xbfba3532:  0  0             add [eax], al           
>>     37   2B @0xbfba3534:  0  0             add [eax], al           
>>     38   4B @0xc103b111: OOB, bytes not captured
>>     39   3B @0xc103b115: OOB, bytes not captured
>>     40   2B @0xc103b118: OOB, bytes not captured
>>     41   3B @0xc103b11a: OOB, bytes not captured
>>     42   5B @0xc103b11d: OOB, bytes not captured
>>     43   1B @0xc1038d4a: OOB, bytes not captured
>>     44   1B @0xc1038d4b: OOB, bytes not captured
>>     45   2B @0xc1038d4c: OOB, bytes not captured
>>     46   1B @0xc1038d4e: OOB, bytes not captured
>>     47   2B @0xc1038d4f: OOB, bytes not captured
>>     48   1B @0xc1038d51: OOB, bytes not captured
>>     49   3B @0xc1038d52: OOB, bytes not captured
>>     50   3B @0xc1038d55: OOB, bytes not captured
>>     51   3B @0xc1038d58: OOB, bytes not captured
>>     52   2B @0xc1038d5b: OOB, bytes not captured
>>     53   3B @0xc1038d5d: OOB, bytes not captured
>>     54   3B @0xc1038d60: OOB, bytes not captured
>>     55   4B @0xc1038d63: OOB, bytes not captured
>>     56   4B @0xc1038d67: OOB, bytes not captured
>>     57   2B @0xc1038d6b: OOB, bytes not captured
>>     58   3B @0xc1038d6d: OOB, bytes not captured
>>     59   4B @0xc1038d70: OOB, bytes not captured
>>     60   3B @0xc1038d74: OOB, bytes not captured
>>     61   2B @0xc1038d77: OOB, bytes not captured
>>     62   2B @0xc1038d79: OOB, bytes not captured
>>     63   2B @0xc1038d94: OOB, bytes not captured
>>     64   2B @0xc1038d96: OOB, bytes not captured
>>     65   3B @0xc1038d7b: OOB, bytes not captured
>>     66   3B @0xc1038d7e: OOB, bytes not captured
>>     67   2B @0xc1038d81: OOB, bytes not captured
>>     68   2B @0xc1038d83: OOB, bytes not captured
>>     69   2B @0xc1038d89: OOB, bytes not captured
>>     70   5B @0xc1038d8b: OOB, bytes not captured
>>     71   1B @0xc1038bed: OOB, bytes not captured
>>     72   1B @0xc1038bee: OOB, bytes not captured
>>     73   2B @0xc1038bef: OOB, bytes not captured
>>     74   3B @0xc1038bf1: OOB, bytes not captured
>>     75   3B @0xc1038bf4: OOB, bytes not captured
>>     76   2B @0xc1038bf7: OOB, bytes not captured
>>     77   2B @0xc1038bf9: OOB, bytes not captured
>>     78   6B @0xc1038bfb: OOB, bytes not captured
>>     79   2B @0xc1038c01: OOB, bytes not captured
>>     80   5B @0xc1038c4e: OOB, bytes not captured
>>     81   4B @0xc1038c53: OOB, bytes not captured
>>     82   2B @0xc1038c57: OOB, bytes not captured
>>     83   3B @0xc1038c63: OOB, bytes not captured
>>     84   3B @0xc1038c66: OOB, bytes not captured
>>     85   2B @0xc1038c69: OOB, bytes not captured
>>     86   3B @0xc1038c6b: OOB, bytes not captured
>>     87   2B @0xc1038c6e: OOB, bytes not captured
>>     88   1B @0xc1038c70: OOB, bytes not captured
>>     89   1B @0xc1038c71: OOB, bytes not captured
>>     90   1B @0xc1038c72: OOB, bytes not captured
>>     91   2B @0xc1038d90: OOB, bytes not captured
>>     92   2B @0xc1038d92: OOB, bytes not captured
>>     93   2B @0xc1038d94: OOB, bytes not captured
>>     94   2B @0xc1038d96: OOB, bytes not captured
>>     95   1B @0xc1038d98: OOB, bytes not captured
>>     96   2B @0xc1038d99: OOB, bytes not captured
>>     97   1B @0xc1038d9b: OOB, bytes not captured
>>     98   1B @0xc1038d9c: OOB, bytes not captured
>>     99   1B @0xc1038d9d: OOB, bytes not captured
>>    100   1B @0xc1038d9e: OOB, bytes not captured
>>    101   1B @0xc1038d9f: OOB, bytes not captured
>>    102   1B @0xc1038da0: OOB, bytes not captured
>>    103   2B @0xc103b122: OOB, bytes not captured
>>    104   2B @0xc103b124: OOB, bytes not captured
>>    105   2B @0xbfba3536:  0  0             add [eax], al           
>>    106   2B @0xbfba3538:  0  0             add [eax], al           
>>    107   2B @0xbfba353a:  0  0             add [eax], al           
>>    108   2B @0xbfba353c:  0  0             add [eax], al           
>>    109   2B @0xbfba353e:  0  0             add [eax], al           
>>    110   2B @0xbfba3540:  0  0             add [eax], al           
>>    111   2B @0xbfba3542:  0  0             add [eax], al           
>>    112   2B @0xbfba3544:  0  0             add [eax], al           
>>    113   2B @0xbfba3546:  0  0             add [eax], al           
>>    114   2B @0xbfba3548:  0  0             add [eax], al           
>>    115   2B @0xbfba354a:  0  0             add [eax], al           
>>    116   2B @0xbfba354c:  0  0             add [eax], al           
>>    117   2B @0xbfba354e:  0  0             add [eax], al           
>>    118   2B @0xbfba3550:  0  0             add [eax], al           
>>    119   2B @0xbfba3552:  0  0             add [eax], al           
>>    120   2B @0xbfba3554:  0  0             add [eax], al           
>>    121   2B @0xbfba3556:  0  0             add [eax], al           
>>    122   2B @0xbfba3558:  0  0             add [eax], al           
>>    123   2B @0xbfba355a:  0  0             add [eax], al           
>>    124   2B @0xbfba355c:  0  0             add [eax], al           
>>    125   2B @0xbfba355e:  0  0             add [eax], al           
>>    126   2B @0xbfba3560:  0  0             add [eax], al           
>>    127   2B @0xbfba3562:  0  0             add [eax], al           
>>    128   2B @0xbfba3564:  0  0             add [eax], al           
>>    129   2B @0xbfba3566:  0  0             add [eax], al           
>>    130   2B @0xbfba3568:  0  0             add [eax], al           
>>    131   2B @0xbfba356a:  0  0             add [eax], al           
>>    132   2B @0xbfba356c:  0  0             add [eax], al           
>>    133   2B @0xbfba356e:  0  0             add [eax], al           
>>    134   2B @0xbfba3570:  0  0             add [eax], al           
>>    135   2B @0xbfba3572:  0  0             add [eax], al           
>>    136   2B @0xbfba3574:  0  0             add [eax], al           
>>    137   2B @0xbfba3576:  0  0             add [eax], al           
>>    138   2B @0xbfba3578:  0  0             add [eax], al           
>>    139   2B @0xbfba357a:  0  0             add [eax], al           
>>    140   2B @0xbfba357c:  0  0             add [eax], al           
>>    141   2B @0xbfba357e:  0  0             add [eax], al           
>>    142   2B @0xbfba3580: eb 13             jmp 0x15                
>>    143   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    144   1B @0xbfba3582: 59                pop ecx                 
>>    145   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    146   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    147   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    148   1B @0xbfba3589: 43                inc ebx                 
>>    149   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    150   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    151   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (169/174) = 0.971264
>>    Mem_map start_addr: 0xbfba34ec, length: 1024B, exec'ed bytes: 169, range: 174B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba34e0                            00000000              ....
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

229 [State 365] Terminating state 365 with message 'EIP reached, success'
229 [State 365] Switching from state 365 to state 0
Copied 34928 (count=1)
Deleting state 365 0x0x27d2cfe0
229 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 364
>> fuzzInit: datum forking for value 365
>> fuzzInit: datum forking for value 365
229 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 365)
        (ReadLSB w32 0 v365_fuzz_symb_365)))
    state 366 with condition (Not (Eq false
         (Eq (w32 365)
             (ReadLSB w32 0 v365_fuzz_symb_365))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-365-8048a0e
Size=2 Low=0 splitIndex=1 high=1
229 [State 0] Switching from state 0 to state 366
Copied 34928 (count=1)
Finalizing TB execution 366
s2e_dummyMainFunction
tcg-llvm-tb-365-8048a0e
Firing timer event
229 [State 366] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 365 not yet applied), shell_len: 1024, eip: 0x00000000

229 [State 366] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
229 [State 366] Leaving buffer range @0xc126f278, 50 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
229 [State 366] Killing state 366
229 [State 366] Terminating state 366 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
229 [State 366] Switching from state 366 to state 0
Copied 34928 (count=1)
Deleting state 366 0x0x27d2cfe0
230 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 365
>> fuzzInit: datum forking for value 366
>> fuzzInit: datum forking for value 366
230 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 366)
        (ReadLSB w32 0 v366_fuzz_symb_366)))
    state 367 with condition (Not (Eq false
         (Eq (w32 366)
             (ReadLSB w32 0 v366_fuzz_symb_366))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-366-8048a0e
Size=2 Low=0 splitIndex=1 high=1
230 [State 0] Switching from state 0 to state 367
Copied 34928 (count=1)
Finalizing TB execution 367
s2e_dummyMainFunction
tcg-llvm-tb-366-8048a0e
230 [State 367] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 366 not yet applied), shell_len: 1024, eip: 0x00000000

230 [State 367] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 83 instructions, PCs: bfba34ee bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
230 [State 367] Terminating state 367 with message 'eliminated this false positive, execution path subset of another success'
230 [State 367] Switching from state 367 to state 0
Copied 34928 (count=1)
Deleting state 367 0x0x28217160
230 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 366
>> fuzzInit: datum forking for value 367
>> fuzzInit: datum forking for value 367
230 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 367)
        (ReadLSB w32 0 v367_fuzz_symb_367)))
    state 368 with condition (Not (Eq false
         (Eq (w32 367)
             (ReadLSB w32 0 v367_fuzz_symb_367))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-367-8048a0e
Size=2 Low=0 splitIndex=1 high=1
230 [State 0] Switching from state 0 to state 368
Copied 34928 (count=1)
Finalizing TB execution 368
s2e_dummyMainFunction
tcg-llvm-tb-367-8048a0e
Firing timer event
230 [State 368] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 367 not yet applied), shell_len: 1024, eip: 0x00000000

230 [State 368] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
230 [State 368] Leaving buffer range @0xc104acec, 25 IoB insns; prev insn @0xbfba3537
  1   2B @0xbfba3537:  0  0             add [eax], al           
230 [State 368] Entering buffer range @0xbfba3539, 67 OoB insns
230 [State 368] Leaving buffer range @0xc126f278, 2a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
231 [State 368] Killing state 368
231 [State 368] Terminating state 368 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
231 [State 368] Switching from state 368 to state 0
Copied 34928 (count=1)
Deleting state 368 0x0x28217160
231 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 367
>> fuzzInit: datum forking for value 368
>> fuzzInit: datum forking for value 368
231 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 368)
        (ReadLSB w32 0 v368_fuzz_symb_368)))
    state 369 with condition (Not (Eq false
         (Eq (w32 368)
             (ReadLSB w32 0 v368_fuzz_symb_368))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-368-8048a0e
Size=2 Low=0 splitIndex=1 high=1
231 [State 0] Switching from state 0 to state 369
Copied 34928 (count=1)
Finalizing TB execution 369
s2e_dummyMainFunction
tcg-llvm-tb-368-8048a0e
231 [State 369] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 368 not yet applied), shell_len: 1024, eip: 0x00000000

231 [State 369] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 82 instructions, PCs: bfba34f0 bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
231 [State 369] Terminating state 369 with message 'eliminated this false positive, execution path subset of another success'
231 [State 369] Switching from state 369 to state 0
Copied 34928 (count=1)
Deleting state 369 0x0x28217160
Firing timer event
231 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 368
>> fuzzInit: datum forking for value 369
>> fuzzInit: datum forking for value 369
231 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 369)
        (ReadLSB w32 0 v369_fuzz_symb_369)))
    state 370 with condition (Not (Eq false
         (Eq (w32 369)
             (ReadLSB w32 0 v369_fuzz_symb_369))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-369-8048a0e
Size=2 Low=0 splitIndex=1 high=1
231 [State 0] Switching from state 0 to state 370
Copied 34928 (count=1)
Finalizing TB execution 370
s2e_dummyMainFunction
tcg-llvm-tb-369-8048a0e
232 [State 370] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 369 not yet applied), shell_len: 1024, eip: 0x00000000

232 [State 370] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
232 [State 370] Leaving buffer range @0xc126f278, 4e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
232 [State 370] Killing state 370
232 [State 370] Terminating state 370 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
232 [State 370] Switching from state 370 to state 0
Copied 34928 (count=1)
Deleting state 370 0x0x28217160
232 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 369
>> fuzzInit: datum forking for value 370
>> fuzzInit: datum forking for value 370
232 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 370)
        (ReadLSB w32 0 v370_fuzz_symb_370)))
    state 371 with condition (Not (Eq false
         (Eq (w32 370)
             (ReadLSB w32 0 v370_fuzz_symb_370))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-370-8048a0e
Size=2 Low=0 splitIndex=1 high=1
232 [State 0] Switching from state 0 to state 371
Copied 34928 (count=1)
Finalizing TB execution 371
s2e_dummyMainFunction
tcg-llvm-tb-370-8048a0e
232 [State 371] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 370 not yet applied), shell_len: 1024, eip: 0x00000000

Firing timer event
232 [State 371] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 81 instructions, PCs: bfba34f2 bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
232 [State 371] Terminating state 371 with message 'eliminated this false positive, execution path subset of another success'
232 [State 371] Switching from state 371 to state 0
Copied 34928 (count=1)
Deleting state 371 0x0x28217160
232 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 370
>> fuzzInit: datum forking for value 371
>> fuzzInit: datum forking for value 371
233 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 371)
        (ReadLSB w32 0 v371_fuzz_symb_371)))
    state 372 with condition (Not (Eq false
         (Eq (w32 371)
             (ReadLSB w32 0 v371_fuzz_symb_371))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-371-8048a0e
Size=2 Low=0 splitIndex=1 high=1
233 [State 0] Switching from state 0 to state 372
Copied 34928 (count=1)
Finalizing TB execution 372
s2e_dummyMainFunction
tcg-llvm-tb-371-8048a0e
233 [State 372] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 371 not yet applied), shell_len: 1024, eip: 0x00000000

233 [State 372] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
233 [State 372] Leaving buffer range @0xc126f278, 49 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
233 [State 372] Killing state 372
233 [State 372] Terminating state 372 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
233 [State 372] Switching from state 372 to state 0
Copied 34928 (count=1)
Deleting state 372 0x0x28217160
233 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 371
>> fuzzInit: datum forking for value 372
>> fuzzInit: datum forking for value 372
233 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 372)
        (ReadLSB w32 0 v372_fuzz_symb_372)))
    state 373 with condition (Not (Eq false
         (Eq (w32 372)
             (ReadLSB w32 0 v372_fuzz_symb_372))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-372-8048a0e
Size=2 Low=0 splitIndex=1 high=1
233 [State 0] Switching from state 0 to state 373
Copied 34928 (count=1)
Finalizing TB execution 373
s2e_dummyMainFunction
tcg-llvm-tb-372-8048a0e
Firing timer event
233 [State 373] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 372 not yet applied), shell_len: 1024, eip: 0x00000000

233 [State 373] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 80 instructions, PCs: bfba34f4 bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
233 [State 373] Terminating state 373 with message 'eliminated this false positive, execution path subset of another success'
233 [State 373] Switching from state 373 to state 0
Copied 34928 (count=1)
Deleting state 373 0x0x282a05a0
234 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 372
>> fuzzInit: datum forking for value 373
>> fuzzInit: datum forking for value 373
234 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 373)
        (ReadLSB w32 0 v373_fuzz_symb_373)))
    state 374 with condition (Not (Eq false
         (Eq (w32 373)
             (ReadLSB w32 0 v373_fuzz_symb_373))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-373-8048a0e
Size=2 Low=0 splitIndex=1 high=1
234 [State 0] Switching from state 0 to state 374
Copied 34928 (count=1)
Finalizing TB execution 374
s2e_dummyMainFunction
tcg-llvm-tb-373-8048a0e
234 [State 374] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 373 not yet applied), shell_len: 1024, eip: 0x00000000

234 [State 374] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
234 [State 374] Leaving buffer range @0xc126f278, 48 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
234 [State 374] Killing state 374
234 [State 374] Terminating state 374 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
234 [State 374] Switching from state 374 to state 0
Copied 34928 (count=1)
Deleting state 374 0x0x282a05a0
234 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 373
>> fuzzInit: datum forking for value 374
>> fuzzInit: datum forking for value 374
234 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 374)
        (ReadLSB w32 0 v374_fuzz_symb_374)))
    state 375 with condition (Not (Eq false
         (Eq (w32 374)
             (ReadLSB w32 0 v374_fuzz_symb_374))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-374-8048a0e
Size=2 Low=0 splitIndex=1 high=1
234 [State 0] Switching from state 0 to state 375
Copied 34928 (count=1)
Finalizing TB execution 375
s2e_dummyMainFunction
tcg-llvm-tb-374-8048a0e
Firing timer event
234 [State 375] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 374 not yet applied), shell_len: 1024, eip: 0x00000000

234 [State 375] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 79 instructions, PCs: bfba34f6 bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
234 [State 375] Terminating state 375 with message 'eliminated this false positive, execution path subset of another success'
234 [State 375] Switching from state 375 to state 0
Copied 34928 (count=1)
Deleting state 375 0x0x282a05a0
235 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 374
>> fuzzInit: datum forking for value 375
>> fuzzInit: datum forking for value 375
235 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 375)
        (ReadLSB w32 0 v375_fuzz_symb_375)))
    state 376 with condition (Not (Eq false
         (Eq (w32 375)
             (ReadLSB w32 0 v375_fuzz_symb_375))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-375-8048a0e
Size=2 Low=0 splitIndex=1 high=1
235 [State 0] Switching from state 0 to state 376
Copied 34928 (count=1)
Finalizing TB execution 376
s2e_dummyMainFunction
tcg-llvm-tb-375-8048a0e
235 [State 376] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 375 not yet applied), shell_len: 1024, eip: 0x00000000

235 [State 376] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
235 [State 376] Leaving buffer range @0xc126f278, 48 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
235 [State 376] Killing state 376
235 [State 376] Terminating state 376 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
235 [State 376] Switching from state 376 to state 0
Copied 34928 (count=1)
Deleting state 376 0x0x282a05a0
235 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 375
>> fuzzInit: datum forking for value 376
>> fuzzInit: datum forking for value 376
235 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 376)
        (ReadLSB w32 0 v376_fuzz_symb_376)))
    state 377 with condition (Not (Eq false
         (Eq (w32 376)
             (ReadLSB w32 0 v376_fuzz_symb_376))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-376-8048a0e
Size=2 Low=0 splitIndex=1 high=1
235 [State 0] Switching from state 0 to state 377
Copied 34928 (count=1)
Finalizing TB execution 377
s2e_dummyMainFunction
tcg-llvm-tb-376-8048a0e
Firing timer event
235 [State 377] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 376 not yet applied), shell_len: 1024, eip: 0x00000000

235 [State 377] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 78 instructions, PCs: bfba34f8 bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
235 [State 377] Terminating state 377 with message 'eliminated this false positive, execution path subset of another success'
235 [State 377] Switching from state 377 to state 0
Copied 34928 (count=1)
Deleting state 377 0x0x28520390
236 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 376
>> fuzzInit: datum forking for value 377
>> fuzzInit: datum forking for value 377
236 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 377)
        (ReadLSB w32 0 v377_fuzz_symb_377)))
    state 378 with condition (Not (Eq false
         (Eq (w32 377)
             (ReadLSB w32 0 v377_fuzz_symb_377))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-377-8048a0e
Size=2 Low=0 splitIndex=1 high=1
236 [State 0] Switching from state 0 to state 378
Copied 34928 (count=1)
Finalizing TB execution 378
s2e_dummyMainFunction
tcg-llvm-tb-377-8048a0e
236 [State 378] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 377 not yet applied), shell_len: 1024, eip: 0x00000000

236 [State 378] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
236 [State 378] Leaving buffer range @0xc126f278, 47 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
236 [State 378] Killing state 378
236 [State 378] Terminating state 378 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
236 [State 378] Switching from state 378 to state 0
Copied 34928 (count=1)
Deleting state 378 0x0x28520390
236 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 377
>> fuzzInit: datum forking for value 378
>> fuzzInit: datum forking for value 378
236 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 378)
        (ReadLSB w32 0 v378_fuzz_symb_378)))
    state 379 with condition (Not (Eq false
         (Eq (w32 378)
             (ReadLSB w32 0 v378_fuzz_symb_378))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-378-8048a0e
Size=2 Low=0 splitIndex=1 high=1
236 [State 0] Switching from state 0 to state 379
Copied 34928 (count=1)
Finalizing TB execution 379
s2e_dummyMainFunction
tcg-llvm-tb-378-8048a0e
Firing timer event
236 [State 379] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 378 not yet applied), shell_len: 1024, eip: 0x00000000

236 [State 379] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 77 instructions, PCs: bfba34fa bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
236 [State 379] Terminating state 379 with message 'eliminated this false positive, execution path subset of another success'
236 [State 379] Switching from state 379 to state 0
Copied 34928 (count=1)
Deleting state 379 0x0x28524eb0
237 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 378
>> fuzzInit: datum forking for value 379
>> fuzzInit: datum forking for value 379
237 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 379)
        (ReadLSB w32 0 v379_fuzz_symb_379)))
    state 380 with condition (Not (Eq false
         (Eq (w32 379)
             (ReadLSB w32 0 v379_fuzz_symb_379))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-379-8048a0e
Size=2 Low=0 splitIndex=1 high=1
237 [State 0] Switching from state 0 to state 380
Copied 34928 (count=1)
Finalizing TB execution 380
s2e_dummyMainFunction
tcg-llvm-tb-379-8048a0e
237 [State 380] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 379 not yet applied), shell_len: 1024, eip: 0x00000000

237 [State 380] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
237 [State 380] Leaving buffer range @0xc126f278, 47 IoB insns; prev insn @0xbfba3591
  1   3B @0xbfba3591:  1 4b cd          add [ebx-0x33], ecx     
237 [State 380] Killing state 380
237 [State 380] Terminating state 380 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
237 [State 380] Switching from state 380 to state 0
Copied 34928 (count=1)
Deleting state 380 0x0x28524eb0
237 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 379
>> fuzzInit: datum forking for value 380
>> fuzzInit: datum forking for value 380
237 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 380)
        (ReadLSB w32 0 v380_fuzz_symb_380)))
    state 381 with condition (Not (Eq false
         (Eq (w32 380)
             (ReadLSB w32 0 v380_fuzz_symb_380))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-380-8048a0e
Size=2 Low=0 splitIndex=1 high=1
237 [State 0] Switching from state 0 to state 381
Copied 34928 (count=1)
Finalizing TB execution 381
s2e_dummyMainFunction
tcg-llvm-tb-380-8048a0e
Firing timer event
237 [State 381] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 380 not yet applied), shell_len: 1024, eip: 0x00000000

237 [State 381] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 76 instructions, PCs: bfba34fc bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
238 [State 381] Terminating state 381 with message 'eliminated this false positive, execution path subset of another success'
238 [State 381] Switching from state 381 to state 0
Copied 34928 (count=1)
Deleting state 381 0x0x28524eb0
238 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 380
>> fuzzInit: datum forking for value 381
>> fuzzInit: datum forking for value 381
238 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 381)
        (ReadLSB w32 0 v381_fuzz_symb_381)))
    state 382 with condition (Not (Eq false
         (Eq (w32 381)
             (ReadLSB w32 0 v381_fuzz_symb_381))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-381-8048a0e
Size=2 Low=0 splitIndex=1 high=1
238 [State 0] Switching from state 0 to state 382
Copied 34928 (count=1)
Finalizing TB execution 382
s2e_dummyMainFunction
tcg-llvm-tb-381-8048a0e
238 [State 382] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 381 not yet applied), shell_len: 1024, eip: 0x00000000

238 [State 382] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
238 [State 382] Leaving buffer range @0xc126f278, 47 IoB insns; prev insn @0xbfba3594
  1   3B @0xbfba3594: 80 e8 e8          sub al, 0xe8            
238 [State 382] Killing state 382
238 [State 382] Terminating state 382 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
238 [State 382] Switching from state 382 to state 0
Copied 34928 (count=1)
Deleting state 382 0x0x28524eb0
238 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 381
>> fuzzInit: datum forking for value 382
>> fuzzInit: datum forking for value 382
239 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 382)
        (ReadLSB w32 0 v382_fuzz_symb_382)))
    state 383 with condition (Not (Eq false
         (Eq (w32 382)
             (ReadLSB w32 0 v382_fuzz_symb_382))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-382-8048a0e
Size=2 Low=0 splitIndex=1 high=1
239 [State 0] Switching from state 0 to state 383
Copied 34928 (count=1)
Finalizing TB execution 383
s2e_dummyMainFunction
tcg-llvm-tb-382-8048a0e
Firing timer event
239 [State 383] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 382 not yet applied), shell_len: 1024, eip: 0x00000000

239 [State 383] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 75 instructions, PCs: bfba34fe bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
239 [State 383] Terminating state 383 with message 'eliminated this false positive, execution path subset of another success'
239 [State 383] Switching from state 383 to state 0
Copied 34928 (count=1)
Deleting state 383 0x0x289096f0
239 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 382
>> fuzzInit: datum forking for value 383
>> fuzzInit: datum forking for value 383
239 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 383)
        (ReadLSB w32 0 v383_fuzz_symb_383)))
    state 384 with condition (Not (Eq false
         (Eq (w32 383)
             (ReadLSB w32 0 v383_fuzz_symb_383))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-383-8048a0e
Size=2 Low=0 splitIndex=1 high=1
239 [State 0] Switching from state 0 to state 384
Copied 34928 (count=1)
Finalizing TB execution 384
s2e_dummyMainFunction
tcg-llvm-tb-383-8048a0e
239 [State 384] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 383 not yet applied), shell_len: 1024, eip: 0x00000000

239 [State 384] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
239 [State 384] Leaving buffer range @0xc126f278, 47 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
239 [State 384] Killing state 384
239 [State 384] Terminating state 384 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
239 [State 384] Switching from state 384 to state 0
Copied 34928 (count=1)
Deleting state 384 0x0x289096f0
239 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 383
>> fuzzInit: datum forking for value 384
>> fuzzInit: datum forking for value 384
>> fuzzInit: datum forking for value 384
240 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 384)
        (ReadLSB w32 0 v384_fuzz_symb_384)))
    state 385 with condition (Not (Eq false
         (Eq (w32 384)
             (ReadLSB w32 0 v384_fuzz_symb_384))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-384-8048a0e
Size=2 Low=0 splitIndex=1 high=1
240 [State 0] Switching from state 0 to state 385
Copied 34928 (count=1)
Finalizing TB execution 385
s2e_dummyMainFunction
tcg-llvm-tb-384-8048a0e
Firing timer event
240 [State 385] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 384 not yet applied), shell_len: 1024, eip: 0x00000000

240 [State 385] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 74 instructions, PCs: bfba3500 bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
240 [State 385] Terminating state 385 with message 'eliminated this false positive, execution path subset of another success'
240 [State 385] Switching from state 385 to state 0
Copied 34928 (count=1)
Deleting state 385 0x0x287c43f0
240 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 384
>> fuzzInit: datum forking for value 385
>> fuzzInit: datum forking for value 385
240 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 385)
        (ReadLSB w32 0 v385_fuzz_symb_385)))
    state 386 with condition (Not (Eq false
         (Eq (w32 385)
             (ReadLSB w32 0 v385_fuzz_symb_385))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-385-8048a0e
Size=2 Low=0 splitIndex=1 high=1
240 [State 0] Switching from state 0 to state 386
Copied 34928 (count=1)
Finalizing TB execution 386
s2e_dummyMainFunction
tcg-llvm-tb-385-8048a0e
240 [State 386] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 385 not yet applied), shell_len: 1024, eip: 0x00000000

240 [State 386] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
240 [State 386] Leaving buffer range @0xc126f278, 46 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
240 [State 386] Killing state 386
240 [State 386] Terminating state 386 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
240 [State 386] Switching from state 386 to state 0
Copied 34928 (count=1)
Deleting state 386 0x0x287c43f0
240 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 385
>> fuzzInit: datum forking for value 386
>> fuzzInit: datum forking for value 386
241 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 386)
        (ReadLSB w32 0 v386_fuzz_symb_386)))
    state 387 with condition (Not (Eq false
         (Eq (w32 386)
             (ReadLSB w32 0 v386_fuzz_symb_386))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-386-8048a0e
Size=2 Low=0 splitIndex=1 high=1
241 [State 0] Switching from state 0 to state 387
Copied 34928 (count=1)
Finalizing TB execution 387
s2e_dummyMainFunction
tcg-llvm-tb-386-8048a0e
Firing timer event
241 [State 387] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 386 not yet applied), shell_len: 1024, eip: 0x00000000

241 [State 387] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 73 instructions, PCs: bfba3502 bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
241 [State 387] Terminating state 387 with message 'eliminated this false positive, execution path subset of another success'
241 [State 387] Switching from state 387 to state 0
Copied 34928 (count=1)
Deleting state 387 0x0x287c43f0
241 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 386
>> fuzzInit: datum forking for value 387
>> fuzzInit: datum forking for value 387
241 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 387)
        (ReadLSB w32 0 v387_fuzz_symb_387)))
    state 388 with condition (Not (Eq false
         (Eq (w32 387)
             (ReadLSB w32 0 v387_fuzz_symb_387))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-387-8048a0e
Size=2 Low=0 splitIndex=1 high=1
241 [State 0] Switching from state 0 to state 388
Copied 34928 (count=1)
Finalizing TB execution 388
s2e_dummyMainFunction
tcg-llvm-tb-387-8048a0e
241 [State 388] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 387 not yet applied), shell_len: 1024, eip: 0x00000000

241 [State 388] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
241 [State 388] Leaving buffer range @0xc126f278, 45 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
241 [State 388] Killing state 388
241 [State 388] Terminating state 388 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
241 [State 388] Switching from state 388 to state 0
Copied 34928 (count=1)
Deleting state 388 0x0x287c43f0
242 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 387
>> fuzzInit: datum forking for value 388
>> fuzzInit: datum forking for value 388
242 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 388)
        (ReadLSB w32 0 v388_fuzz_symb_388)))
    state 389 with condition (Not (Eq false
         (Eq (w32 388)
             (ReadLSB w32 0 v388_fuzz_symb_388))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-388-8048a0e
Size=2 Low=0 splitIndex=1 high=1
242 [State 0] Switching from state 0 to state 389
Copied 34928 (count=1)
Finalizing TB execution 389
s2e_dummyMainFunction
tcg-llvm-tb-388-8048a0e
Firing timer event
242 [State 389] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 388 not yet applied), shell_len: 1024, eip: 0x00000000

242 [State 389] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 72 instructions, PCs: bfba3504 bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
242 [State 389] Terminating state 389 with message 'eliminated this false positive, execution path subset of another success'
242 [State 389] Switching from state 389 to state 0
Copied 34928 (count=1)
Deleting state 389 0x0x287c43f0
242 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 388
>> fuzzInit: datum forking for value 389
>> fuzzInit: datum forking for value 389
242 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 389)
        (ReadLSB w32 0 v389_fuzz_symb_389)))
    state 390 with condition (Not (Eq false
         (Eq (w32 389)
             (ReadLSB w32 0 v389_fuzz_symb_389))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-389-8048a0e
Size=2 Low=0 splitIndex=1 high=1
242 [State 0] Switching from state 0 to state 390
Copied 34928 (count=1)
Finalizing TB execution 390
s2e_dummyMainFunction
tcg-llvm-tb-389-8048a0e
242 [State 390] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 389 not yet applied), shell_len: 1024, eip: 0x00000000

242 [State 390] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
242 [State 390] Leaving buffer range @0xc126f278, 44 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
242 [State 390] Killing state 390
242 [State 390] Terminating state 390 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
242 [State 390] Switching from state 390 to state 0
Copied 34928 (count=1)
Deleting state 390 0x0x287c43f0
243 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 389
>> fuzzInit: datum forking for value 390
>> fuzzInit: datum forking for value 390
243 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 390)
        (ReadLSB w32 0 v390_fuzz_symb_390)))
    state 391 with condition (Not (Eq false
         (Eq (w32 390)
             (ReadLSB w32 0 v390_fuzz_symb_390))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-390-8048a0e
Size=2 Low=0 splitIndex=1 high=1
243 [State 0] Switching from state 0 to state 391
Copied 34928 (count=1)
Finalizing TB execution 391
s2e_dummyMainFunction
tcg-llvm-tb-390-8048a0e
Firing timer event
243 [State 391] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 390 not yet applied), shell_len: 1024, eip: 0x00000000

243 [State 391] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 71 instructions, PCs: bfba3506 bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
243 [State 391] Terminating state 391 with message 'eliminated this false positive, execution path subset of another success'
243 [State 391] Switching from state 391 to state 0
Copied 34928 (count=1)
Deleting state 391 0x0x287c43f0
243 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 390
>> fuzzInit: datum forking for value 391
>> fuzzInit: datum forking for value 391
243 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 391)
        (ReadLSB w32 0 v391_fuzz_symb_391)))
    state 392 with condition (Not (Eq false
         (Eq (w32 391)
             (ReadLSB w32 0 v391_fuzz_symb_391))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-391-8048a0e
Size=2 Low=0 splitIndex=1 high=1
243 [State 0] Switching from state 0 to state 392
Copied 34928 (count=1)
Finalizing TB execution 392
s2e_dummyMainFunction
tcg-llvm-tb-391-8048a0e
243 [State 392] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 391 not yet applied), shell_len: 1024, eip: 0x00000000

243 [State 392] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
244 [State 392] Leaving buffer range @0xc126f278, 43 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
244 [State 392] Killing state 392
244 [State 392] Terminating state 392 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
244 [State 392] Switching from state 392 to state 0
Copied 34928 (count=1)
Deleting state 392 0x0x287c43f0
244 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 391
>> fuzzInit: datum forking for value 392
>> fuzzInit: datum forking for value 392
244 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 392)
        (ReadLSB w32 0 v392_fuzz_symb_392)))
    state 393 with condition (Not (Eq false
         (Eq (w32 392)
             (ReadLSB w32 0 v392_fuzz_symb_392))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-392-8048a0e
Size=2 Low=0 splitIndex=1 high=1
244 [State 0] Switching from state 0 to state 393
Copied 34928 (count=1)
Finalizing TB execution 393
s2e_dummyMainFunction
tcg-llvm-tb-392-8048a0e
Firing timer event
244 [State 393] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 392 not yet applied), shell_len: 1024, eip: 0x00000000

244 [State 393] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 70 instructions, PCs: bfba3508 bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
244 [State 393] Terminating state 393 with message 'eliminated this false positive, execution path subset of another success'
244 [State 393] Switching from state 393 to state 0
Copied 34928 (count=1)
Deleting state 393 0x0x287c43f0
244 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 392
>> fuzzInit: datum forking for value 393
>> fuzzInit: datum forking for value 393
244 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 393)
        (ReadLSB w32 0 v393_fuzz_symb_393)))
    state 394 with condition (Not (Eq false
         (Eq (w32 393)
             (ReadLSB w32 0 v393_fuzz_symb_393))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-393-8048a0e
Size=2 Low=0 splitIndex=1 high=1
244 [State 0] Switching from state 0 to state 394
Copied 34928 (count=1)
Finalizing TB execution 394
s2e_dummyMainFunction
tcg-llvm-tb-393-8048a0e
244 [State 394] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 393 not yet applied), shell_len: 1024, eip: 0x00000000

244 [State 394] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
245 [State 394] Leaving buffer range @0xc126f278, 42 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
245 [State 394] Killing state 394
245 [State 394] Terminating state 394 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
245 [State 394] Switching from state 394 to state 0
Copied 34928 (count=1)
Deleting state 394 0x0x28b95280
245 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 393
>> fuzzInit: datum forking for value 394
>> fuzzInit: datum forking for value 394
245 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 394)
        (ReadLSB w32 0 v394_fuzz_symb_394)))
    state 395 with condition (Not (Eq false
         (Eq (w32 394)
             (ReadLSB w32 0 v394_fuzz_symb_394))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-394-8048a0e
Size=2 Low=0 splitIndex=1 high=1
245 [State 0] Switching from state 0 to state 395
Copied 34928 (count=1)
Finalizing TB execution 395
s2e_dummyMainFunction
tcg-llvm-tb-394-8048a0e
Firing timer event
245 [State 395] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 394 not yet applied), shell_len: 1024, eip: 0x00000000

245 [State 395] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 69 instructions, PCs: bfba350a bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
245 [State 395] Terminating state 395 with message 'eliminated this false positive, execution path subset of another success'
245 [State 395] Switching from state 395 to state 0
Copied 34928 (count=1)
Deleting state 395 0x0x28b95280
245 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 394
>> fuzzInit: datum forking for value 395
>> fuzzInit: datum forking for value 395
245 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 395)
        (ReadLSB w32 0 v395_fuzz_symb_395)))
    state 396 with condition (Not (Eq false
         (Eq (w32 395)
             (ReadLSB w32 0 v395_fuzz_symb_395))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-395-8048a0e
Size=2 Low=0 splitIndex=1 high=1
245 [State 0] Switching from state 0 to state 396
Copied 34928 (count=1)
Finalizing TB execution 396
s2e_dummyMainFunction
tcg-llvm-tb-395-8048a0e
246 [State 396] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 395 not yet applied), shell_len: 1024, eip: 0x00000000

246 [State 396] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
246 [State 396] Leaving buffer range @0xc126f278, 41 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
246 [State 396] Killing state 396
246 [State 396] Terminating state 396 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
246 [State 396] Switching from state 396 to state 0
Copied 34928 (count=1)
Deleting state 396 0x0x28b95280
246 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 395
>> fuzzInit: datum forking for value 396
>> fuzzInit: datum forking for value 396
246 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 396)
        (ReadLSB w32 0 v396_fuzz_symb_396)))
    state 397 with condition (Not (Eq false
         (Eq (w32 396)
             (ReadLSB w32 0 v396_fuzz_symb_396))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-396-8048a0e
Size=2 Low=0 splitIndex=1 high=1
246 [State 0] Switching from state 0 to state 397
Copied 34928 (count=1)
Finalizing TB execution 397
s2e_dummyMainFunction
tcg-llvm-tb-396-8048a0e
Firing timer event
246 [State 397] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 396 not yet applied), shell_len: 1024, eip: 0x00000000

246 [State 397] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 68 instructions, PCs: bfba350c bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
246 [State 397] Terminating state 397 with message 'eliminated this false positive, execution path subset of another success'
246 [State 397] Switching from state 397 to state 0
Copied 34928 (count=1)
Deleting state 397 0x0x28b95280
246 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 396
>> fuzzInit: datum forking for value 397
>> fuzzInit: datum forking for value 397
246 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 397)
        (ReadLSB w32 0 v397_fuzz_symb_397)))
    state 398 with condition (Not (Eq false
         (Eq (w32 397)
             (ReadLSB w32 0 v397_fuzz_symb_397))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-397-8048a0e
Size=2 Low=0 splitIndex=1 high=1
246 [State 0] Switching from state 0 to state 398
Copied 34928 (count=1)
Finalizing TB execution 398
s2e_dummyMainFunction
tcg-llvm-tb-397-8048a0e
247 [State 398] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 397 not yet applied), shell_len: 1024, eip: 0x00000000

247 [State 398] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
247 [State 398] Leaving buffer range @0xc126f278, 40 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
247 [State 398] Killing state 398
247 [State 398] Terminating state 398 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
247 [State 398] Switching from state 398 to state 0
Copied 34928 (count=1)
Deleting state 398 0x0x28b95280
247 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 397
>> fuzzInit: datum forking for value 398
>> fuzzInit: datum forking for value 398
247 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 398)
        (ReadLSB w32 0 v398_fuzz_symb_398)))
    state 399 with condition (Not (Eq false
         (Eq (w32 398)
             (ReadLSB w32 0 v398_fuzz_symb_398))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-398-8048a0e
Size=2 Low=0 splitIndex=1 high=1
247 [State 0] Switching from state 0 to state 399
Copied 34928 (count=1)
Finalizing TB execution 399
s2e_dummyMainFunction
tcg-llvm-tb-398-8048a0e
Firing timer event
247 [State 399] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 398 not yet applied), shell_len: 1024, eip: 0x00000000

247 [State 399] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 67 instructions, PCs: bfba350e bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
247 [State 399] Terminating state 399 with message 'eliminated this false positive, execution path subset of another success'
247 [State 399] Switching from state 399 to state 0
Copied 34928 (count=1)
Deleting state 399 0x0x28c1fc50
247 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 398
>> fuzzInit: datum forking for value 399
>> fuzzInit: datum forking for value 399
248 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 399)
        (ReadLSB w32 0 v399_fuzz_symb_399)))
    state 400 with condition (Not (Eq false
         (Eq (w32 399)
             (ReadLSB w32 0 v399_fuzz_symb_399))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-399-8048a0e
Size=2 Low=0 splitIndex=1 high=1
248 [State 0] Switching from state 0 to state 400
Copied 34928 (count=1)
Finalizing TB execution 400
s2e_dummyMainFunction
tcg-llvm-tb-399-8048a0e
248 [State 400] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 399 not yet applied), shell_len: 1024, eip: 0x00000000

248 [State 400] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
248 [State 400] Leaving buffer range @0xc126f278, 3f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
248 [State 400] Killing state 400
248 [State 400] Terminating state 400 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
248 [State 400] Switching from state 400 to state 0
Copied 34928 (count=1)
Deleting state 400 0x0x28c1fc50
248 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 399
>> fuzzInit: datum forking for value 400
>> fuzzInit: datum forking for value 400
248 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 400)
        (ReadLSB w32 0 v400_fuzz_symb_400)))
    state 401 with condition (Not (Eq false
         (Eq (w32 400)
             (ReadLSB w32 0 v400_fuzz_symb_400))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-400-8048a0e
Size=2 Low=0 splitIndex=1 high=1
248 [State 0] Switching from state 0 to state 401
Copied 34928 (count=1)
Finalizing TB execution 401
s2e_dummyMainFunction
tcg-llvm-tb-400-8048a0e
Firing timer event
248 [State 401] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 400 not yet applied), shell_len: 1024, eip: 0x00000000

248 [State 401] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 66 instructions, PCs: bfba3510 bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
248 [State 401] Terminating state 401 with message 'eliminated this false positive, execution path subset of another success'
248 [State 401] Switching from state 401 to state 0
Copied 34928 (count=1)
Deleting state 401 0x0x28c1fc50
248 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 400
>> fuzzInit: datum forking for value 401
>> fuzzInit: datum forking for value 401
249 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 401)
        (ReadLSB w32 0 v401_fuzz_symb_401)))
    state 402 with condition (Not (Eq false
         (Eq (w32 401)
             (ReadLSB w32 0 v401_fuzz_symb_401))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-401-8048a0e
Size=2 Low=0 splitIndex=1 high=1
249 [State 0] Switching from state 0 to state 402
Copied 34928 (count=1)
Finalizing TB execution 402
s2e_dummyMainFunction
tcg-llvm-tb-401-8048a0e
249 [State 402] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 401 not yet applied), shell_len: 1024, eip: 0x00000000

249 [State 402] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
249 [State 402] Leaving buffer range @0xc126f278, 3e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
249 [State 402] Killing state 402
249 [State 402] Terminating state 402 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
249 [State 402] Switching from state 402 to state 0
Copied 34928 (count=1)
Deleting state 402 0x0x28c1fc50
249 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 401
>> fuzzInit: datum forking for value 402
>> fuzzInit: datum forking for value 402
249 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 402)
        (ReadLSB w32 0 v402_fuzz_symb_402)))
    state 403 with condition (Not (Eq false
         (Eq (w32 402)
             (ReadLSB w32 0 v402_fuzz_symb_402))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-402-8048a0e
Size=2 Low=0 splitIndex=1 high=1
249 [State 0] Switching from state 0 to state 403
Copied 34928 (count=1)
Finalizing TB execution 403
s2e_dummyMainFunction
tcg-llvm-tb-402-8048a0e
250 [State 403] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 402 not yet applied), shell_len: 1024, eip: 0x00000000

250 [State 403] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 65 instructions, PCs: bfba3512 bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
250 [State 403] Terminating state 403 with message 'eliminated this false positive, execution path subset of another success'
250 [State 403] Switching from state 403 to state 0
Copied 34928 (count=1)
Deleting state 403 0x0x290c8ca0
250 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 402
>> fuzzInit: datum forking for value 403
>> fuzzInit: datum forking for value 403
250 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 403)
        (ReadLSB w32 0 v403_fuzz_symb_403)))
    state 404 with condition (Not (Eq false
         (Eq (w32 403)
             (ReadLSB w32 0 v403_fuzz_symb_403))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-403-8048a0e
Size=2 Low=0 splitIndex=1 high=1
250 [State 0] Switching from state 0 to state 404
Copied 34928 (count=1)
Finalizing TB execution 404
s2e_dummyMainFunction
tcg-llvm-tb-403-8048a0e
Firing timer event
250 [State 404] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 403 not yet applied), shell_len: 1024, eip: 0x00000000

250 [State 404] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
250 [State 404] Leaving buffer range @0xc126f278, 3d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
251 [State 404] Killing state 404
251 [State 404] Terminating state 404 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
251 [State 404] Switching from state 404 to state 0
Copied 34928 (count=1)
Deleting state 404 0x0x290c8ca0
251 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 403
>> fuzzInit: datum forking for value 404
>> fuzzInit: datum forking for value 404
251 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 404)
        (ReadLSB w32 0 v404_fuzz_symb_404)))
    state 405 with condition (Not (Eq false
         (Eq (w32 404)
             (ReadLSB w32 0 v404_fuzz_symb_404))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-404-8048a0e
Size=2 Low=0 splitIndex=1 high=1
251 [State 0] Switching from state 0 to state 405
Copied 34928 (count=1)
Finalizing TB execution 405
s2e_dummyMainFunction
tcg-llvm-tb-404-8048a0e
251 [State 405] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 404 not yet applied), shell_len: 1024, eip: 0x00000000

251 [State 405] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 64 instructions, PCs: bfba3514 bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
251 [State 405] Terminating state 405 with message 'eliminated this false positive, execution path subset of another success'
251 [State 405] Switching from state 405 to state 0
Copied 34928 (count=1)
Deleting state 405 0x0x28e01370
251 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 404
>> fuzzInit: datum forking for value 405
>> fuzzInit: datum forking for value 405
252 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 405)
        (ReadLSB w32 0 v405_fuzz_symb_405)))
    state 406 with condition (Not (Eq false
         (Eq (w32 405)
             (ReadLSB w32 0 v405_fuzz_symb_405))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-405-8048a0e
Size=2 Low=0 splitIndex=1 high=1
252 [State 0] Switching from state 0 to state 406
Copied 34928 (count=1)
Finalizing TB execution 406
s2e_dummyMainFunction
tcg-llvm-tb-405-8048a0e
252 [State 406] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 405 not yet applied), shell_len: 1024, eip: 0x00000000

252 [State 406] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
252 [State 406] Leaving buffer range @0xc126f278, 3c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
252 [State 406] Killing state 406
252 [State 406] Terminating state 406 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
252 [State 406] Switching from state 406 to state 0
Copied 34928 (count=1)
Deleting state 406 0x0x290fca50
Firing timer event
252 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 405
>> fuzzInit: datum forking for value 406
>> fuzzInit: datum forking for value 406
253 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 406)
        (ReadLSB w32 0 v406_fuzz_symb_406)))
    state 407 with condition (Not (Eq false
         (Eq (w32 406)
             (ReadLSB w32 0 v406_fuzz_symb_406))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-406-8048a0e
Size=2 Low=0 splitIndex=1 high=1
253 [State 0] Switching from state 0 to state 407
Copied 34928 (count=1)
Finalizing TB execution 407
s2e_dummyMainFunction
tcg-llvm-tb-406-8048a0e
253 [State 407] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 406 not yet applied), shell_len: 1024, eip: 0x00000000

253 [State 407] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 63 instructions, PCs: bfba3516 bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
253 [State 407] Terminating state 407 with message 'eliminated this false positive, execution path subset of another success'
253 [State 407] Switching from state 407 to state 0
Copied 34928 (count=1)
Deleting state 407 0x0x28f0a1e0
Firing timer event
253 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 406
>> fuzzInit: datum forking for value 407
>> fuzzInit: datum forking for value 407
253 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 407)
        (ReadLSB w32 0 v407_fuzz_symb_407)))
    state 408 with condition (Not (Eq false
         (Eq (w32 407)
             (ReadLSB w32 0 v407_fuzz_symb_407))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-407-8048a0e
Size=2 Low=0 splitIndex=1 high=1
253 [State 0] Switching from state 0 to state 408
Copied 34928 (count=1)
Finalizing TB execution 408
s2e_dummyMainFunction
tcg-llvm-tb-407-8048a0e
254 [State 408] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 407 not yet applied), shell_len: 1024, eip: 0x00000000

254 [State 408] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
254 [State 408] Leaving buffer range @0xc1003072, 25 IoB insns; prev insn @0xbfba355f
  1   2B @0xbfba355f:  0  0             add [eax], al           
254 [State 408] Entering buffer range @0xbfba3561, 1 OoB insns
254 [State 408] Leaving buffer range @0xc126f278, 16 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
254 [State 408] Killing state 408
254 [State 408] Terminating state 408 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
254 [State 408] Switching from state 408 to state 0
Copied 34928 (count=1)
Deleting state 408 0x0x28f0a1e0
Firing timer event
254 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 407
>> fuzzInit: datum forking for value 408
>> fuzzInit: datum forking for value 408
254 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 408)
        (ReadLSB w32 0 v408_fuzz_symb_408)))
    state 409 with condition (Not (Eq false
         (Eq (w32 408)
             (ReadLSB w32 0 v408_fuzz_symb_408))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-408-8048a0e
Size=2 Low=0 splitIndex=1 high=1
254 [State 0] Switching from state 0 to state 409
Copied 34928 (count=1)
Finalizing TB execution 409
s2e_dummyMainFunction
tcg-llvm-tb-408-8048a0e
255 [State 409] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 408 not yet applied), shell_len: 1024, eip: 0x00000000

255 [State 409] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 62 instructions, PCs: bfba3518 bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
255 [State 409] Terminating state 409 with message 'eliminated this false positive, execution path subset of another success'
255 [State 409] Switching from state 409 to state 0
Copied 34928 (count=1)
Deleting state 409 0x0x28f0a1e0
255 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 408
>> fuzzInit: datum forking for value 409
>> fuzzInit: datum forking for value 409
255 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 409)
        (ReadLSB w32 0 v409_fuzz_symb_409)))
    state 410 with condition (Not (Eq false
         (Eq (w32 409)
             (ReadLSB w32 0 v409_fuzz_symb_409))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-409-8048a0e
Size=2 Low=0 splitIndex=1 high=1
255 [State 0] Switching from state 0 to state 410
Copied 34928 (count=1)
Finalizing TB execution 410
s2e_dummyMainFunction
tcg-llvm-tb-409-8048a0e
255 [State 410] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 409 not yet applied), shell_len: 1024, eip: 0x00000000

255 [State 410] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
255 [State 410] Leaving buffer range @0xc126f278, 3a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
255 [State 410] Killing state 410
255 [State 410] Terminating state 410 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
255 [State 410] Switching from state 410 to state 0
Copied 34928 (count=1)
Deleting state 410 0x0x290b9020
256 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 409
>> fuzzInit: datum forking for value 410
>> fuzzInit: datum forking for value 410
>> fuzzInit: datum forking for value 410
256 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 410)
        (ReadLSB w32 0 v410_fuzz_symb_410)))
    state 411 with condition (Not (Eq false
         (Eq (w32 410)
             (ReadLSB w32 0 v410_fuzz_symb_410))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-410-8048a0e
Size=2 Low=0 splitIndex=1 high=1
256 [State 0] Switching from state 0 to state 411
Copied 34928 (count=1)
Finalizing TB execution 411
s2e_dummyMainFunction
tcg-llvm-tb-410-8048a0e
256 [State 411] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 410 not yet applied), shell_len: 1024, eip: 0x00000000

256 [State 411] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 61 instructions, PCs: bfba351a bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
256 [State 411] Terminating state 411 with message 'eliminated this false positive, execution path subset of another success'
256 [State 411] Switching from state 411 to state 0
Copied 34928 (count=1)
Deleting state 411 0x0x291116a0
256 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 410
>> fuzzInit: datum forking for value 411
>> fuzzInit: datum forking for value 411
256 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 411)
        (ReadLSB w32 0 v411_fuzz_symb_411)))
    state 412 with condition (Not (Eq false
         (Eq (w32 411)
             (ReadLSB w32 0 v411_fuzz_symb_411))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-411-8048a0e
Size=2 Low=0 splitIndex=1 high=1
256 [State 0] Switching from state 0 to state 412
Copied 34928 (count=1)
Finalizing TB execution 412
s2e_dummyMainFunction
tcg-llvm-tb-411-8048a0e
Firing timer event
256 [State 412] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 411 not yet applied), shell_len: 1024, eip: 0x00000000

256 [State 412] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
256 [State 412] Leaving buffer range @0xc126f278, 39 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
256 [State 412] Killing state 412
256 [State 412] Terminating state 412 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
256 [State 412] Switching from state 412 to state 0
Copied 34928 (count=1)
Deleting state 412 0x0x290b9020
257 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 411
>> fuzzInit: datum forking for value 412
>> fuzzInit: datum forking for value 412
257 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 412)
        (ReadLSB w32 0 v412_fuzz_symb_412)))
    state 413 with condition (Not (Eq false
         (Eq (w32 412)
             (ReadLSB w32 0 v412_fuzz_symb_412))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-412-8048a0e
Size=2 Low=0 splitIndex=1 high=1
257 [State 0] Switching from state 0 to state 413
Copied 34928 (count=1)
Finalizing TB execution 413
s2e_dummyMainFunction
tcg-llvm-tb-412-8048a0e
257 [State 413] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 412 not yet applied), shell_len: 1024, eip: 0x00000000

257 [State 413] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 60 instructions, PCs: bfba351c bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
257 [State 413] Terminating state 413 with message 'eliminated this false positive, execution path subset of another success'
257 [State 413] Switching from state 413 to state 0
Copied 34928 (count=1)
Deleting state 413 0x0x290b9020
257 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 412
>> fuzzInit: datum forking for value 413
>> fuzzInit: datum forking for value 413
257 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 413)
        (ReadLSB w32 0 v413_fuzz_symb_413)))
    state 414 with condition (Not (Eq false
         (Eq (w32 413)
             (ReadLSB w32 0 v413_fuzz_symb_413))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-413-8048a0e
Size=2 Low=0 splitIndex=1 high=1
257 [State 0] Switching from state 0 to state 414
Copied 34928 (count=1)
Finalizing TB execution 414
s2e_dummyMainFunction
tcg-llvm-tb-413-8048a0e
Firing timer event
258 [State 414] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 413 not yet applied), shell_len: 1024, eip: 0x00000000

258 [State 414] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
258 [State 414] Leaving buffer range @0xc126f278, 38 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
258 [State 414] Killing state 414
258 [State 414] Terminating state 414 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
258 [State 414] Switching from state 414 to state 0
Copied 34928 (count=1)
Deleting state 414 0x0x291116a0
258 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 413
>> fuzzInit: datum forking for value 414
>> fuzzInit: datum forking for value 414
258 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 414)
        (ReadLSB w32 0 v414_fuzz_symb_414)))
    state 415 with condition (Not (Eq false
         (Eq (w32 414)
             (ReadLSB w32 0 v414_fuzz_symb_414))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-414-8048a0e
Size=2 Low=0 splitIndex=1 high=1
258 [State 0] Switching from state 0 to state 415
Copied 34928 (count=1)
Finalizing TB execution 415
s2e_dummyMainFunction
tcg-llvm-tb-414-8048a0e
258 [State 415] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 414 not yet applied), shell_len: 1024, eip: 0x00000000

258 [State 415] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 59 instructions, PCs: bfba351e bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
258 [State 415] Terminating state 415 with message 'eliminated this false positive, execution path subset of another success'
258 [State 415] Switching from state 415 to state 0
Copied 34928 (count=1)
Deleting state 415 0x0x291116a0
258 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 414
>> fuzzInit: datum forking for value 415
>> fuzzInit: datum forking for value 415
259 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 415)
        (ReadLSB w32 0 v415_fuzz_symb_415)))
    state 416 with condition (Not (Eq false
         (Eq (w32 415)
             (ReadLSB w32 0 v415_fuzz_symb_415))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-415-8048a0e
Size=2 Low=0 splitIndex=1 high=1
259 [State 0] Switching from state 0 to state 416
Copied 34928 (count=1)
Finalizing TB execution 416
s2e_dummyMainFunction
tcg-llvm-tb-415-8048a0e
Firing timer event
259 [State 416] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 415 not yet applied), shell_len: 1024, eip: 0x00000000

259 [State 416] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
259 [State 416] Leaving buffer range @0xc126f278, 37 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
259 [State 416] Killing state 416
259 [State 416] Terminating state 416 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
259 [State 416] Switching from state 416 to state 0
Copied 34928 (count=1)
Deleting state 416 0x0x291116a0
259 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 415
>> fuzzInit: datum forking for value 416
>> fuzzInit: datum forking for value 416
259 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 416)
        (ReadLSB w32 0 v416_fuzz_symb_416)))
    state 417 with condition (Not (Eq false
         (Eq (w32 416)
             (ReadLSB w32 0 v416_fuzz_symb_416))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-416-8048a0e
Size=2 Low=0 splitIndex=1 high=1
259 [State 0] Switching from state 0 to state 417
Copied 34928 (count=1)
Finalizing TB execution 417
s2e_dummyMainFunction
tcg-llvm-tb-416-8048a0e
259 [State 417] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 416 not yet applied), shell_len: 1024, eip: 0x00000000

259 [State 417] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 58 instructions, PCs: bfba3520 bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
259 [State 417] Terminating state 417 with message 'eliminated this false positive, execution path subset of another success'
259 [State 417] Switching from state 417 to state 0
Copied 34928 (count=1)
Deleting state 417 0x0x291116a0
260 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 416
>> fuzzInit: datum forking for value 417
>> fuzzInit: datum forking for value 417
260 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 417)
        (ReadLSB w32 0 v417_fuzz_symb_417)))
    state 418 with condition (Not (Eq false
         (Eq (w32 417)
             (ReadLSB w32 0 v417_fuzz_symb_417))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-417-8048a0e
Size=2 Low=0 splitIndex=1 high=1
260 [State 0] Switching from state 0 to state 418
Copied 34928 (count=1)
Finalizing TB execution 418
s2e_dummyMainFunction
tcg-llvm-tb-417-8048a0e
Firing timer event
260 [State 418] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 417 not yet applied), shell_len: 1024, eip: 0x00000000

260 [State 418] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
260 [State 418] Leaving buffer range @0xc126f278, 36 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
260 [State 418] Killing state 418
260 [State 418] Terminating state 418 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
260 [State 418] Switching from state 418 to state 0
Copied 34928 (count=1)
Deleting state 418 0x0x291116a0
260 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 417
>> fuzzInit: datum forking for value 418
>> fuzzInit: datum forking for value 418
260 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 418)
        (ReadLSB w32 0 v418_fuzz_symb_418)))
    state 419 with condition (Not (Eq false
         (Eq (w32 418)
             (ReadLSB w32 0 v418_fuzz_symb_418))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-418-8048a0e
Size=2 Low=0 splitIndex=1 high=1
260 [State 0] Switching from state 0 to state 419
Copied 34928 (count=1)
Finalizing TB execution 419
s2e_dummyMainFunction
tcg-llvm-tb-418-8048a0e
260 [State 419] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 418 not yet applied), shell_len: 1024, eip: 0x00000000

260 [State 419] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 57 instructions, PCs: bfba3522 bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
261 [State 419] Terminating state 419 with message 'eliminated this false positive, execution path subset of another success'
261 [State 419] Switching from state 419 to state 0
Copied 34928 (count=1)
Deleting state 419 0x0x291116a0
261 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 418
>> fuzzInit: datum forking for value 419
>> fuzzInit: datum forking for value 419
261 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 419)
        (ReadLSB w32 0 v419_fuzz_symb_419)))
    state 420 with condition (Not (Eq false
         (Eq (w32 419)
             (ReadLSB w32 0 v419_fuzz_symb_419))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-419-8048a0e
Size=2 Low=0 splitIndex=1 high=1
261 [State 0] Switching from state 0 to state 420
Copied 34928 (count=1)
Finalizing TB execution 420
s2e_dummyMainFunction
tcg-llvm-tb-419-8048a0e
Firing timer event
261 [State 420] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 419 not yet applied), shell_len: 1024, eip: 0x00000000

261 [State 420] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
261 [State 420] Leaving buffer range @0xc126f278, 35 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
261 [State 420] Killing state 420
261 [State 420] Terminating state 420 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
261 [State 420] Switching from state 420 to state 0
Copied 34928 (count=1)
Deleting state 420 0x0x291116a0
261 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 419
>> fuzzInit: datum forking for value 420
>> fuzzInit: datum forking for value 420
261 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 420)
        (ReadLSB w32 0 v420_fuzz_symb_420)))
    state 421 with condition (Not (Eq false
         (Eq (w32 420)
             (ReadLSB w32 0 v420_fuzz_symb_420))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-420-8048a0e
Size=2 Low=0 splitIndex=1 high=1
261 [State 0] Switching from state 0 to state 421
Copied 34928 (count=1)
Finalizing TB execution 421
s2e_dummyMainFunction
tcg-llvm-tb-420-8048a0e
262 [State 421] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 420 not yet applied), shell_len: 1024, eip: 0x00000000

262 [State 421] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 56 instructions, PCs: bfba3524 bfba3526 bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
262 [State 421] Terminating state 421 with message 'eliminated this false positive, execution path subset of another success'
262 [State 421] Switching from state 421 to state 0
Copied 34928 (count=1)
Deleting state 421 0x0x291116a0
262 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 420
>> fuzzInit: datum forking for value 421
>> fuzzInit: datum forking for value 421
262 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 421)
        (ReadLSB w32 0 v421_fuzz_symb_421)))
    state 422 with condition (Not (Eq false
         (Eq (w32 421)
             (ReadLSB w32 0 v421_fuzz_symb_421))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-421-8048a0e
Size=2 Low=0 splitIndex=1 high=1
262 [State 0] Switching from state 0 to state 422
Copied 34928 (count=1)
Finalizing TB execution 422
s2e_dummyMainFunction
tcg-llvm-tb-421-8048a0e
Firing timer event
262 [State 422] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 421 not yet applied), shell_len: 1024, eip: 0x00000000

262 [State 422] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
262 [State 422] Leaving buffer range @0xc126f278, 34 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
262 [State 422] Killing state 422
262 [State 422] Terminating state 422 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
262 [State 422] Switching from state 422 to state 0
Copied 34928 (count=1)
Deleting state 422 0x0x291116a0
262 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 421
>> fuzzInit: datum forking for value 422
>> fuzzInit: datum forking for value 422
263 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 422)
        (ReadLSB w32 0 v422_fuzz_symb_422)))
    state 423 with condition (Not (Eq false
         (Eq (w32 422)
             (ReadLSB w32 0 v422_fuzz_symb_422))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-422-8048a0e
Size=2 Low=0 splitIndex=1 high=1
263 [State 0] Switching from state 0 to state 423
Copied 34928 (count=1)
Finalizing TB execution 423
s2e_dummyMainFunction
tcg-llvm-tb-422-8048a0e
263 [State 423] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 422 not yet applied), shell_len: 1024, eip: 0x00000000

263 [State 423] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
263 [State 423] Leaving buffer range @0xc104b28c, 25 IoB insns; prev insn @0xbfba356e
  1   2B @0xbfba356e:  0  0             add [eax], al           
263 [State 423] Entering buffer range @0xbfba3570, 5 OoB insns
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbfba358e offset from base: 526 (should be EIP-2) within pid: 86716416 number of instructions: 60. This is the 10th success
>> Success densities, overlay: 0.956897; avg: 0.956897
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3526:  0  0             add [eax], al           
>>      2   2B @0xbfba3528:  0  0             add [eax], al           
>>      3   2B @0xbfba352a:  0  0             add [eax], al           
>>      4   2B @0xbfba352c:  0  0             add [eax], al           
>>      5   2B @0xbfba352e:  0  0             add [eax], al           
>>      6   2B @0xbfba3530:  0  0             add [eax], al           
>>      7   2B @0xbfba3532:  0  0             add [eax], al           
>>      8   2B @0xbfba3534:  0  0             add [eax], al           
>>      9   2B @0xbfba3536:  0  0             add [eax], al           
>>     10   2B @0xbfba3538:  0  0             add [eax], al           
>>     11   2B @0xbfba353a:  0  0             add [eax], al           
>>     12   2B @0xbfba353c:  0  0             add [eax], al           
>>     13   2B @0xbfba353e:  0  0             add [eax], al           
>>     14   2B @0xbfba3540:  0  0             add [eax], al           
>>     15   2B @0xbfba3542:  0  0             add [eax], al           
>>     16   2B @0xbfba3544:  0  0             add [eax], al           
>>     17   2B @0xbfba3546:  0  0             add [eax], al           
>>     18   2B @0xbfba3548:  0  0             add [eax], al           
>>     19   2B @0xbfba354a:  0  0             add [eax], al           
>>     20   2B @0xbfba354c:  0  0             add [eax], al           
>>     21   2B @0xbfba354e:  0  0             add [eax], al           
>>     22   2B @0xbfba3550:  0  0             add [eax], al           
>>     23   2B @0xbfba3552:  0  0             add [eax], al           
>>     24   2B @0xbfba3554:  0  0             add [eax], al           
>>     25   2B @0xbfba3556:  0  0             add [eax], al           
>>     26   2B @0xbfba3558:  0  0             add [eax], al           
>>     27   2B @0xbfba355a:  0  0             add [eax], al           
>>     28   2B @0xbfba355c:  0  0             add [eax], al           
>>     29   2B @0xbfba355e:  0  0             add [eax], al           
>>     30   2B @0xbfba3560:  0  0             add [eax], al           
>>     31   2B @0xbfba3562:  0  0             add [eax], al           
>>     32   2B @0xbfba3564:  0  0             add [eax], al           
>>     33   2B @0xbfba3566:  0  0             add [eax], al           
>>     34   2B @0xbfba3568:  0  0             add [eax], al           
>>     35   2B @0xbfba356a:  0  0             add [eax], al           
>>     36   2B @0xbfba356c:  0  0             add [eax], al           
>>     37   2B @0xbfba356e:  0  0             add [eax], al           
>>     38   8B @0xc104b28c: OOB, bytes not captured
>>     39   5B @0xc104b294: OOB, bytes not captured
>>     40   1B @0xc104b299: OOB, bytes not captured
>>     41   5B @0xc104b29a: OOB, bytes not captured
>>     42   2B @0xc104b29f: OOB, bytes not captured
>>     43   2B @0xbfba3570:  0  0             add [eax], al           
>>     44   2B @0xbfba3572:  0  0             add [eax], al           
>>     45   2B @0xbfba3574:  0  0             add [eax], al           
>>     46   2B @0xbfba3576:  0  0             add [eax], al           
>>     47   2B @0xbfba3578:  0  0             add [eax], al           
>>     48   2B @0xbfba357a:  0  0             add [eax], al           
>>     49   2B @0xbfba357c:  0  0             add [eax], al           
>>     50   2B @0xbfba357e:  0  0             add [eax], al           
>>     51   2B @0xbfba3580: eb 13             jmp 0x15                
>>     52   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>     53   1B @0xbfba3582: 59                pop ecx                 
>>     54   2B @0xbfba3583: 31 c0             xor eax, eax            
>>     55   2B @0xbfba3585: b0  4             mov al, 0x4             
>>     56   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>     57   1B @0xbfba3589: 43                inc ebx                 
>>     58   2B @0xbfba358a: 31 d2             xor edx, edx            
>>     59   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>     60   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (111/116) = 0.956897
>>    Mem_map start_addr: 0xbfba3526, length: 1024B, exec'ed bytes: 111, range: 116B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3520              0000 00000000 00000000        ..........
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

263 [State 423] Terminating state 423 with message 'EIP reached, success'
263 [State 423] Switching from state 423 to state 0
Copied 34928 (count=1)
Deleting state 423 0x0x291116a0
263 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 422
>> fuzzInit: datum forking for value 423
>> fuzzInit: datum forking for value 423
263 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 423)
        (ReadLSB w32 0 v423_fuzz_symb_423)))
    state 424 with condition (Not (Eq false
         (Eq (w32 423)
             (ReadLSB w32 0 v423_fuzz_symb_423))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-423-8048a0e
Size=2 Low=0 splitIndex=1 high=1
263 [State 0] Switching from state 0 to state 424
Copied 34928 (count=1)
Finalizing TB execution 424
s2e_dummyMainFunction
tcg-llvm-tb-423-8048a0e
Firing timer event
263 [State 424] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 423 not yet applied), shell_len: 1024, eip: 0x00000000

263 [State 424] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
263 [State 424] Leaving buffer range @0xc126f278, 33 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
263 [State 424] Killing state 424
263 [State 424] Terminating state 424 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
263 [State 424] Switching from state 424 to state 0
Copied 34928 (count=1)
Deleting state 424 0x0x291116a0
264 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 423
>> fuzzInit: datum forking for value 424
>> fuzzInit: datum forking for value 424
264 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 424)
        (ReadLSB w32 0 v424_fuzz_symb_424)))
    state 425 with condition (Not (Eq false
         (Eq (w32 424)
             (ReadLSB w32 0 v424_fuzz_symb_424))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-424-8048a0e
Size=2 Low=0 splitIndex=1 high=1
264 [State 0] Switching from state 0 to state 425
Copied 34928 (count=1)
Finalizing TB execution 425
s2e_dummyMainFunction
tcg-llvm-tb-424-8048a0e
264 [State 425] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 424 not yet applied), shell_len: 1024, eip: 0x00000000

264 [State 425] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 54 instructions, PCs: bfba3528 bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
264 [State 425] Terminating state 425 with message 'eliminated this false positive, execution path subset of another success'
264 [State 425] Switching from state 425 to state 0
Copied 34928 (count=1)
Deleting state 425 0x0x291116a0
264 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 424
>> fuzzInit: datum forking for value 425
>> fuzzInit: datum forking for value 425
264 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 425)
        (ReadLSB w32 0 v425_fuzz_symb_425)))
    state 426 with condition (Not (Eq false
         (Eq (w32 425)
             (ReadLSB w32 0 v425_fuzz_symb_425))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-425-8048a0e
Size=2 Low=0 splitIndex=1 high=1
264 [State 0] Switching from state 0 to state 426
Copied 34928 (count=1)
Finalizing TB execution 426
s2e_dummyMainFunction
tcg-llvm-tb-425-8048a0e
Firing timer event
264 [State 426] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 425 not yet applied), shell_len: 1024, eip: 0x00000000

264 [State 426] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
264 [State 426] Leaving buffer range @0xc126f278, 32 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
265 [State 426] Killing state 426
265 [State 426] Terminating state 426 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
265 [State 426] Switching from state 426 to state 0
Copied 34928 (count=1)
Deleting state 426 0x0x291116a0
265 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 425
>> fuzzInit: datum forking for value 426
>> fuzzInit: datum forking for value 426
265 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 426)
        (ReadLSB w32 0 v426_fuzz_symb_426)))
    state 427 with condition (Not (Eq false
         (Eq (w32 426)
             (ReadLSB w32 0 v426_fuzz_symb_426))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-426-8048a0e
Size=2 Low=0 splitIndex=1 high=1
265 [State 0] Switching from state 0 to state 427
Copied 34928 (count=1)
Finalizing TB execution 427
s2e_dummyMainFunction
tcg-llvm-tb-426-8048a0e
265 [State 427] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 426 not yet applied), shell_len: 1024, eip: 0x00000000

265 [State 427] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 53 instructions, PCs: bfba352a bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
265 [State 427] Terminating state 427 with message 'eliminated this false positive, execution path subset of another success'
265 [State 427] Switching from state 427 to state 0
Copied 34928 (count=1)
Deleting state 427 0x0x291116a0
Firing timer event
265 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 426
>> fuzzInit: datum forking for value 427
>> fuzzInit: datum forking for value 427
265 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 427)
        (ReadLSB w32 0 v427_fuzz_symb_427)))
    state 428 with condition (Not (Eq false
         (Eq (w32 427)
             (ReadLSB w32 0 v427_fuzz_symb_427))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-427-8048a0e
Size=2 Low=0 splitIndex=1 high=1
265 [State 0] Switching from state 0 to state 428
Copied 34928 (count=1)
Finalizing TB execution 428
s2e_dummyMainFunction
tcg-llvm-tb-427-8048a0e
266 [State 428] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 427 not yet applied), shell_len: 1024, eip: 0x00000000

266 [State 428] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
266 [State 428] Leaving buffer range @0xc126f278, 31 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
266 [State 428] Killing state 428
266 [State 428] Terminating state 428 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
266 [State 428] Switching from state 428 to state 0
Copied 34928 (count=1)
Deleting state 428 0x0x291116a0
266 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 427
>> fuzzInit: datum forking for value 428
>> fuzzInit: datum forking for value 428
266 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 428)
        (ReadLSB w32 0 v428_fuzz_symb_428)))
    state 429 with condition (Not (Eq false
         (Eq (w32 428)
             (ReadLSB w32 0 v428_fuzz_symb_428))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-428-8048a0e
Size=2 Low=0 splitIndex=1 high=1
266 [State 0] Switching from state 0 to state 429
Copied 34928 (count=1)
Finalizing TB execution 429
s2e_dummyMainFunction
tcg-llvm-tb-428-8048a0e
Firing timer event
266 [State 429] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 428 not yet applied), shell_len: 1024, eip: 0x00000000

266 [State 429] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 52 instructions, PCs: bfba352c bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
266 [State 429] Terminating state 429 with message 'eliminated this false positive, execution path subset of another success'
266 [State 429] Switching from state 429 to state 0
Copied 34928 (count=1)
Deleting state 429 0x0x291116a0
266 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 428
>> fuzzInit: datum forking for value 429
>> fuzzInit: datum forking for value 429
267 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 429)
        (ReadLSB w32 0 v429_fuzz_symb_429)))
    state 430 with condition (Not (Eq false
         (Eq (w32 429)
             (ReadLSB w32 0 v429_fuzz_symb_429))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-429-8048a0e
Size=2 Low=0 splitIndex=1 high=1
267 [State 0] Switching from state 0 to state 430
Copied 34928 (count=1)
Finalizing TB execution 430
s2e_dummyMainFunction
tcg-llvm-tb-429-8048a0e
267 [State 430] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 429 not yet applied), shell_len: 1024, eip: 0x00000000

267 [State 430] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
267 [State 430] Leaving buffer range @0xc126f278, 30 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
267 [State 430] Killing state 430
267 [State 430] Terminating state 430 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
267 [State 430] Switching from state 430 to state 0
Copied 34928 (count=1)
Deleting state 430 0x0x291116a0
267 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 429
>> fuzzInit: datum forking for value 430
>> fuzzInit: datum forking for value 430
267 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 430)
        (ReadLSB w32 0 v430_fuzz_symb_430)))
    state 431 with condition (Not (Eq false
         (Eq (w32 430)
             (ReadLSB w32 0 v430_fuzz_symb_430))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-430-8048a0e
Size=2 Low=0 splitIndex=1 high=1
267 [State 0] Switching from state 0 to state 431
Copied 34928 (count=1)
Finalizing TB execution 431
s2e_dummyMainFunction
tcg-llvm-tb-430-8048a0e
Firing timer event
267 [State 431] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 430 not yet applied), shell_len: 1024, eip: 0x00000000

267 [State 431] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 51 instructions, PCs: bfba352e bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
267 [State 431] Terminating state 431 with message 'eliminated this false positive, execution path subset of another success'
267 [State 431] Switching from state 431 to state 0
Copied 34928 (count=1)
Deleting state 431 0x0x291116a0
268 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 430
>> fuzzInit: datum forking for value 431
>> fuzzInit: datum forking for value 431
268 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 431)
        (ReadLSB w32 0 v431_fuzz_symb_431)))
    state 432 with condition (Not (Eq false
         (Eq (w32 431)
             (ReadLSB w32 0 v431_fuzz_symb_431))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-431-8048a0e
Size=2 Low=0 splitIndex=1 high=1
268 [State 0] Switching from state 0 to state 432
Copied 34928 (count=1)
Finalizing TB execution 432
s2e_dummyMainFunction
tcg-llvm-tb-431-8048a0e
268 [State 432] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 431 not yet applied), shell_len: 1024, eip: 0x00000000

268 [State 432] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
268 [State 432] Leaving buffer range @0xc126f278, 2f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
268 [State 432] Killing state 432
268 [State 432] Terminating state 432 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
268 [State 432] Switching from state 432 to state 0
Copied 34928 (count=1)
Deleting state 432 0x0x29674790
268 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 431
>> fuzzInit: datum forking for value 432
>> fuzzInit: datum forking for value 432
268 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 432)
        (ReadLSB w32 0 v432_fuzz_symb_432)))
    state 433 with condition (Not (Eq false
         (Eq (w32 432)
             (ReadLSB w32 0 v432_fuzz_symb_432))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-432-8048a0e
Size=2 Low=0 splitIndex=1 high=1
268 [State 0] Switching from state 0 to state 433
Copied 34928 (count=1)
Finalizing TB execution 433
s2e_dummyMainFunction
tcg-llvm-tb-432-8048a0e
Firing timer event
268 [State 433] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 432 not yet applied), shell_len: 1024, eip: 0x00000000

268 [State 433] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 50 instructions, PCs: bfba3530 bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
269 [State 433] Terminating state 433 with message 'eliminated this false positive, execution path subset of another success'
269 [State 433] Switching from state 433 to state 0
Copied 34928 (count=1)
Deleting state 433 0x0x297d7e30
269 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 432
>> fuzzInit: datum forking for value 433
>> fuzzInit: datum forking for value 433
269 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 433)
        (ReadLSB w32 0 v433_fuzz_symb_433)))
    state 434 with condition (Not (Eq false
         (Eq (w32 433)
             (ReadLSB w32 0 v433_fuzz_symb_433))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-433-8048a0e
Size=2 Low=0 splitIndex=1 high=1
269 [State 0] Switching from state 0 to state 434
Copied 34928 (count=1)
Finalizing TB execution 434
s2e_dummyMainFunction
tcg-llvm-tb-433-8048a0e
269 [State 434] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 433 not yet applied), shell_len: 1024, eip: 0x00000000

269 [State 434] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
269 [State 434] Leaving buffer range @0xc126f278, 2e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
269 [State 434] Killing state 434
269 [State 434] Terminating state 434 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
269 [State 434] Switching from state 434 to state 0
Copied 34928 (count=1)
Deleting state 434 0x0x297d7e30
269 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 433
>> fuzzInit: datum forking for value 434
>> fuzzInit: datum forking for value 434
269 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 434)
        (ReadLSB w32 0 v434_fuzz_symb_434)))
    state 435 with condition (Not (Eq false
         (Eq (w32 434)
             (ReadLSB w32 0 v434_fuzz_symb_434))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-434-8048a0e
Size=2 Low=0 splitIndex=1 high=1
269 [State 0] Switching from state 0 to state 435
Copied 34928 (count=1)
Finalizing TB execution 435
s2e_dummyMainFunction
tcg-llvm-tb-434-8048a0e
Firing timer event
269 [State 435] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 434 not yet applied), shell_len: 1024, eip: 0x00000000

269 [State 435] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 49 instructions, PCs: bfba3532 bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
270 [State 435] Terminating state 435 with message 'eliminated this false positive, execution path subset of another success'
270 [State 435] Switching from state 435 to state 0
Copied 34928 (count=1)
Deleting state 435 0x0x29738c50
270 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 434
>> fuzzInit: datum forking for value 435
>> fuzzInit: datum forking for value 435
270 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 435)
        (ReadLSB w32 0 v435_fuzz_symb_435)))
    state 436 with condition (Not (Eq false
         (Eq (w32 435)
             (ReadLSB w32 0 v435_fuzz_symb_435))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-435-8048a0e
Size=2 Low=0 splitIndex=1 high=1
270 [State 0] Switching from state 0 to state 436
Copied 34928 (count=1)
Finalizing TB execution 436
s2e_dummyMainFunction
tcg-llvm-tb-435-8048a0e
270 [State 436] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 435 not yet applied), shell_len: 1024, eip: 0x00000000

270 [State 436] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
270 [State 436] Leaving buffer range @0xc126f278, 2d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
270 [State 436] Killing state 436
270 [State 436] Terminating state 436 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
270 [State 436] Switching from state 436 to state 0
Copied 34928 (count=1)
Deleting state 436 0x0x29738c50
270 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 435
>> fuzzInit: datum forking for value 436
>> fuzzInit: datum forking for value 436
270 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 436)
        (ReadLSB w32 0 v436_fuzz_symb_436)))
    state 437 with condition (Not (Eq false
         (Eq (w32 436)
             (ReadLSB w32 0 v436_fuzz_symb_436))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-436-8048a0e
Size=2 Low=0 splitIndex=1 high=1
270 [State 0] Switching from state 0 to state 437
Copied 34928 (count=1)
Finalizing TB execution 437
s2e_dummyMainFunction
tcg-llvm-tb-436-8048a0e
Firing timer event
271 [State 437] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 436 not yet applied), shell_len: 1024, eip: 0x00000000

271 [State 437] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 48 instructions, PCs: bfba3534 bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
271 [State 437] Terminating state 437 with message 'eliminated this false positive, execution path subset of another success'
271 [State 437] Switching from state 437 to state 0
Copied 34928 (count=1)
Deleting state 437 0x0x29924230
271 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 436
>> fuzzInit: datum forking for value 437
>> fuzzInit: datum forking for value 437
271 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 437)
        (ReadLSB w32 0 v437_fuzz_symb_437)))
    state 438 with condition (Not (Eq false
         (Eq (w32 437)
             (ReadLSB w32 0 v437_fuzz_symb_437))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-437-8048a0e
Size=2 Low=0 splitIndex=1 high=1
271 [State 0] Switching from state 0 to state 438
Copied 34928 (count=1)
Finalizing TB execution 438
s2e_dummyMainFunction
tcg-llvm-tb-437-8048a0e
271 [State 438] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 437 not yet applied), shell_len: 1024, eip: 0x00000000

271 [State 438] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
271 [State 438] Leaving buffer range @0xc126f278, 2c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
271 [State 438] Killing state 438
271 [State 438] Terminating state 438 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
271 [State 438] Switching from state 438 to state 0
Copied 34928 (count=1)
Deleting state 438 0x0x29924230
271 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 437
>> fuzzInit: datum forking for value 438
>> fuzzInit: datum forking for value 438
>> fuzzInit: datum forking for value 438
272 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 438)
        (ReadLSB w32 0 v438_fuzz_symb_438)))
    state 439 with condition (Not (Eq false
         (Eq (w32 438)
             (ReadLSB w32 0 v438_fuzz_symb_438))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-438-8048a0e
Size=2 Low=0 splitIndex=1 high=1
272 [State 0] Switching from state 0 to state 439
Copied 34928 (count=1)
Finalizing TB execution 439
s2e_dummyMainFunction
tcg-llvm-tb-438-8048a0e
Firing timer event
272 [State 439] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 438 not yet applied), shell_len: 1024, eip: 0x00000000

272 [State 439] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 47 instructions, PCs: bfba3536 bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
272 [State 439] Terminating state 439 with message 'eliminated this false positive, execution path subset of another success'
272 [State 439] Switching from state 439 to state 0
Copied 34928 (count=1)
Deleting state 439 0x0x2980ef60
272 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 438
>> fuzzInit: datum forking for value 439
>> fuzzInit: datum forking for value 439
272 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 439)
        (ReadLSB w32 0 v439_fuzz_symb_439)))
    state 440 with condition (Not (Eq false
         (Eq (w32 439)
             (ReadLSB w32 0 v439_fuzz_symb_439))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-439-8048a0e
Size=2 Low=0 splitIndex=1 high=1
272 [State 0] Switching from state 0 to state 440
Copied 34928 (count=1)
Finalizing TB execution 440
s2e_dummyMainFunction
tcg-llvm-tb-439-8048a0e
272 [State 440] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 439 not yet applied), shell_len: 1024, eip: 0x00000000

272 [State 440] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
272 [State 440] Leaving buffer range @0xc126f278, 2b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
272 [State 440] Killing state 440
272 [State 440] Terminating state 440 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
272 [State 440] Switching from state 440 to state 0
Copied 34928 (count=1)
Deleting state 440 0x0x2980ef60
272 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 439
>> fuzzInit: datum forking for value 440
>> fuzzInit: datum forking for value 440
273 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 440)
        (ReadLSB w32 0 v440_fuzz_symb_440)))
    state 441 with condition (Not (Eq false
         (Eq (w32 440)
             (ReadLSB w32 0 v440_fuzz_symb_440))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-440-8048a0e
Size=2 Low=0 splitIndex=1 high=1
273 [State 0] Switching from state 0 to state 441
Copied 34928 (count=1)
Finalizing TB execution 441
s2e_dummyMainFunction
tcg-llvm-tb-440-8048a0e
Firing timer event
273 [State 441] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 440 not yet applied), shell_len: 1024, eip: 0x00000000

273 [State 441] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 46 instructions, PCs: bfba3538 bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
273 [State 441] Terminating state 441 with message 'eliminated this false positive, execution path subset of another success'
273 [State 441] Switching from state 441 to state 0
Copied 34928 (count=1)
Deleting state 441 0x0x2980ef60
273 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 440
>> fuzzInit: datum forking for value 441
>> fuzzInit: datum forking for value 441
273 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 441)
        (ReadLSB w32 0 v441_fuzz_symb_441)))
    state 442 with condition (Not (Eq false
         (Eq (w32 441)
             (ReadLSB w32 0 v441_fuzz_symb_441))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-441-8048a0e
Size=2 Low=0 splitIndex=1 high=1
273 [State 0] Switching from state 0 to state 442
Copied 34928 (count=1)
Finalizing TB execution 442
s2e_dummyMainFunction
tcg-llvm-tb-441-8048a0e
273 [State 442] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 441 not yet applied), shell_len: 1024, eip: 0x00000000

273 [State 442] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
273 [State 442] Leaving buffer range @0xc126f278, 2a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
273 [State 442] Killing state 442
273 [State 442] Terminating state 442 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
273 [State 442] Switching from state 442 to state 0
Copied 34928 (count=1)
Deleting state 442 0x0x29c3f620
274 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 441
>> fuzzInit: datum forking for value 442
>> fuzzInit: datum forking for value 442
274 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 442)
        (ReadLSB w32 0 v442_fuzz_symb_442)))
    state 443 with condition (Not (Eq false
         (Eq (w32 442)
             (ReadLSB w32 0 v442_fuzz_symb_442))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-442-8048a0e
Size=2 Low=0 splitIndex=1 high=1
274 [State 0] Switching from state 0 to state 443
Copied 34928 (count=1)
Finalizing TB execution 443
s2e_dummyMainFunction
tcg-llvm-tb-442-8048a0e
Firing timer event
274 [State 443] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 442 not yet applied), shell_len: 1024, eip: 0x00000000

274 [State 443] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 45 instructions, PCs: bfba353a bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
274 [State 443] Terminating state 443 with message 'eliminated this false positive, execution path subset of another success'
274 [State 443] Switching from state 443 to state 0
Copied 34928 (count=1)
Deleting state 443 0x0x29cb8bc0
274 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 442
>> fuzzInit: datum forking for value 443
>> fuzzInit: datum forking for value 443
274 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 443)
        (ReadLSB w32 0 v443_fuzz_symb_443)))
    state 444 with condition (Not (Eq false
         (Eq (w32 443)
             (ReadLSB w32 0 v443_fuzz_symb_443))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-443-8048a0e
Size=2 Low=0 splitIndex=1 high=1
274 [State 0] Switching from state 0 to state 444
Copied 34928 (count=1)
Finalizing TB execution 444
s2e_dummyMainFunction
tcg-llvm-tb-443-8048a0e
274 [State 444] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 443 not yet applied), shell_len: 1024, eip: 0x00000000

274 [State 444] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
274 [State 444] Leaving buffer range @0xc126f278, 29 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
275 [State 444] Killing state 444
275 [State 444] Terminating state 444 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
275 [State 444] Switching from state 444 to state 0
Copied 34928 (count=1)
Deleting state 444 0x0x29cb8bc0
275 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 443
>> fuzzInit: datum forking for value 444
>> fuzzInit: datum forking for value 444
275 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 444)
        (ReadLSB w32 0 v444_fuzz_symb_444)))
    state 445 with condition (Not (Eq false
         (Eq (w32 444)
             (ReadLSB w32 0 v444_fuzz_symb_444))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-444-8048a0e
Size=2 Low=0 splitIndex=1 high=1
275 [State 0] Switching from state 0 to state 445
Copied 34928 (count=1)
Finalizing TB execution 445
s2e_dummyMainFunction
tcg-llvm-tb-444-8048a0e
Firing timer event
275 [State 445] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 444 not yet applied), shell_len: 1024, eip: 0x00000000

275 [State 445] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 44 instructions, PCs: bfba353c bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
275 [State 445] Terminating state 445 with message 'eliminated this false positive, execution path subset of another success'
275 [State 445] Switching from state 445 to state 0
Copied 34928 (count=1)
Deleting state 445 0x0x29b07c60
275 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 444
>> fuzzInit: datum forking for value 445
>> fuzzInit: datum forking for value 445
275 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 445)
        (ReadLSB w32 0 v445_fuzz_symb_445)))
    state 446 with condition (Not (Eq false
         (Eq (w32 445)
             (ReadLSB w32 0 v445_fuzz_symb_445))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-445-8048a0e
Size=2 Low=0 splitIndex=1 high=1
275 [State 0] Switching from state 0 to state 446
Copied 34928 (count=1)
Finalizing TB execution 446
s2e_dummyMainFunction
tcg-llvm-tb-445-8048a0e
275 [State 446] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 445 not yet applied), shell_len: 1024, eip: 0x00000000

275 [State 446] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
276 [State 446] Leaving buffer range @0xc126f278, 24 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
276 [State 446] Killing state 446
276 [State 446] Terminating state 446 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
276 [State 446] Switching from state 446 to state 0
Copied 34928 (count=1)
Deleting state 446 0x0x29cb8bc0
276 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 445
>> fuzzInit: datum forking for value 446
>> fuzzInit: datum forking for value 446
276 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 446)
        (ReadLSB w32 0 v446_fuzz_symb_446)))
    state 447 with condition (Not (Eq false
         (Eq (w32 446)
             (ReadLSB w32 0 v446_fuzz_symb_446))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-446-8048a0e
Size=2 Low=0 splitIndex=1 high=1
276 [State 0] Switching from state 0 to state 447
Copied 34928 (count=1)
Finalizing TB execution 447
s2e_dummyMainFunction
tcg-llvm-tb-446-8048a0e
Firing timer event
276 [State 447] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 446 not yet applied), shell_len: 1024, eip: 0x00000000

276 [State 447] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 43 instructions, PCs: bfba353e bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
276 [State 447] Terminating state 447 with message 'eliminated this false positive, execution path subset of another success'
276 [State 447] Switching from state 447 to state 0
Copied 34928 (count=1)
Deleting state 447 0x0x29cb8bc0
276 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 446
>> fuzzInit: datum forking for value 447
>> fuzzInit: datum forking for value 447
276 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 447)
        (ReadLSB w32 0 v447_fuzz_symb_447)))
    state 448 with condition (Not (Eq false
         (Eq (w32 447)
             (ReadLSB w32 0 v447_fuzz_symb_447))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-447-8048a0e
Size=2 Low=0 splitIndex=1 high=1
276 [State 0] Switching from state 0 to state 448
Copied 34928 (count=1)
Finalizing TB execution 448
s2e_dummyMainFunction
tcg-llvm-tb-447-8048a0e
277 [State 448] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 447 not yet applied), shell_len: 1024, eip: 0x00000000

277 [State 448] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
277 [State 448] Leaving buffer range @0xc126f278, 23 IoB insns; prev insn @0xbfba3584
  1   7B @0xbfba3584: c0 b0  4 31 db 43 31 shl byte [eax+0x43db3104], 0x31
277 [State 448] Killing state 448
277 [State 448] Terminating state 448 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
277 [State 448] Switching from state 448 to state 0
Copied 34928 (count=1)
Deleting state 448 0x0x29cb8bc0
277 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 447
>> fuzzInit: datum forking for value 448
>> fuzzInit: datum forking for value 448
277 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 448)
        (ReadLSB w32 0 v448_fuzz_symb_448)))
    state 449 with condition (Not (Eq false
         (Eq (w32 448)
             (ReadLSB w32 0 v448_fuzz_symb_448))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-448-8048a0e
Size=2 Low=0 splitIndex=1 high=1
277 [State 0] Switching from state 0 to state 449
Copied 34928 (count=1)
Finalizing TB execution 449
s2e_dummyMainFunction
tcg-llvm-tb-448-8048a0e
Firing timer event
277 [State 449] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 448 not yet applied), shell_len: 1024, eip: 0x00000000

277 [State 449] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 42 instructions, PCs: bfba3540 bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
277 [State 449] Terminating state 449 with message 'eliminated this false positive, execution path subset of another success'
277 [State 449] Switching from state 449 to state 0
Copied 34928 (count=1)
Deleting state 449 0x0x29cb8bc0
277 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 448
>> fuzzInit: datum forking for value 449
>> fuzzInit: datum forking for value 449
278 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 449)
        (ReadLSB w32 0 v449_fuzz_symb_449)))
    state 450 with condition (Not (Eq false
         (Eq (w32 449)
             (ReadLSB w32 0 v449_fuzz_symb_449))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-449-8048a0e
Size=2 Low=0 splitIndex=1 high=1
278 [State 0] Switching from state 0 to state 450
Copied 34928 (count=1)
Finalizing TB execution 450
s2e_dummyMainFunction
tcg-llvm-tb-449-8048a0e
278 [State 450] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 449 not yet applied), shell_len: 1024, eip: 0x00000000

278 [State 450] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
278 [State 450] Leaving buffer range @0xc126f278, 23 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
278 [State 450] Killing state 450
278 [State 450] Terminating state 450 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
278 [State 450] Switching from state 450 to state 0
Copied 34928 (count=1)
Deleting state 450 0x0x29cb8bc0
278 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 449
>> fuzzInit: datum forking for value 450
>> fuzzInit: datum forking for value 450
278 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 450)
        (ReadLSB w32 0 v450_fuzz_symb_450)))
    state 451 with condition (Not (Eq false
         (Eq (w32 450)
             (ReadLSB w32 0 v450_fuzz_symb_450))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-450-8048a0e
Size=2 Low=0 splitIndex=1 high=1
278 [State 0] Switching from state 0 to state 451
Copied 34928 (count=1)
Finalizing TB execution 451
s2e_dummyMainFunction
tcg-llvm-tb-450-8048a0e
Firing timer event
278 [State 451] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 450 not yet applied), shell_len: 1024, eip: 0x00000000

278 [State 451] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 41 instructions, PCs: bfba3542 bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
278 [State 451] Terminating state 451 with message 'eliminated this false positive, execution path subset of another success'
278 [State 451] Switching from state 451 to state 0
Copied 34928 (count=1)
Deleting state 451 0x0x29cb8bc0
279 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 450
>> fuzzInit: datum forking for value 451
>> fuzzInit: datum forking for value 451
279 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 451)
        (ReadLSB w32 0 v451_fuzz_symb_451)))
    state 452 with condition (Not (Eq false
         (Eq (w32 451)
             (ReadLSB w32 0 v451_fuzz_symb_451))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-451-8048a0e
Size=2 Low=0 splitIndex=1 high=1
279 [State 0] Switching from state 0 to state 452
Copied 34928 (count=1)
Finalizing TB execution 452
s2e_dummyMainFunction
tcg-llvm-tb-451-8048a0e
279 [State 452] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 451 not yet applied), shell_len: 1024, eip: 0x00000000

279 [State 452] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
279 [State 452] Leaving buffer range @0xc126f278, 22 IoB insns; prev insn @0xbfba358b
  1   6B @0xbfba358b: d2 b2  f cd 80 b0 shl [edx+0xb080cd0f], cl
279 [State 452] Killing state 452
279 [State 452] Terminating state 452 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
279 [State 452] Switching from state 452 to state 0
Copied 34928 (count=1)
Deleting state 452 0x0x29f1c2a0
279 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 451
>> fuzzInit: datum forking for value 452
>> fuzzInit: datum forking for value 452
279 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 452)
        (ReadLSB w32 0 v452_fuzz_symb_452)))
    state 453 with condition (Not (Eq false
         (Eq (w32 452)
             (ReadLSB w32 0 v452_fuzz_symb_452))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-452-8048a0e
Size=2 Low=0 splitIndex=1 high=1
279 [State 0] Switching from state 0 to state 453
Copied 34928 (count=1)
Finalizing TB execution 453
s2e_dummyMainFunction
tcg-llvm-tb-452-8048a0e
Firing timer event
279 [State 453] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 452 not yet applied), shell_len: 1024, eip: 0x00000000

279 [State 453] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 40 instructions, PCs: bfba3544 bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
280 [State 453] Terminating state 453 with message 'eliminated this false positive, execution path subset of another success'
280 [State 453] Switching from state 453 to state 0
Copied 34928 (count=1)
Deleting state 453 0x0x29f1c2a0
280 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 452
>> fuzzInit: datum forking for value 453
>> fuzzInit: datum forking for value 453
280 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 453)
        (ReadLSB w32 0 v453_fuzz_symb_453)))
    state 454 with condition (Not (Eq false
         (Eq (w32 453)
             (ReadLSB w32 0 v453_fuzz_symb_453))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-453-8048a0e
Size=2 Low=0 splitIndex=1 high=1
280 [State 0] Switching from state 0 to state 454
Copied 34928 (count=1)
Finalizing TB execution 454
s2e_dummyMainFunction
tcg-llvm-tb-453-8048a0e
280 [State 454] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 453 not yet applied), shell_len: 1024, eip: 0x00000000

280 [State 454] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
280 [State 454] Leaving buffer range @0xc126f278, 22 IoB insns; prev insn @0xbfba3591
  1   3B @0xbfba3591:  1 4b cd          add [ebx-0x33], ecx     
280 [State 454] Killing state 454
280 [State 454] Terminating state 454 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
280 [State 454] Switching from state 454 to state 0
Copied 34928 (count=1)
Deleting state 454 0x0x29cd5ef0
280 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 453
>> fuzzInit: datum forking for value 454
>> fuzzInit: datum forking for value 454
280 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 454)
        (ReadLSB w32 0 v454_fuzz_symb_454)))
    state 455 with condition (Not (Eq false
         (Eq (w32 454)
             (ReadLSB w32 0 v454_fuzz_symb_454))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-454-8048a0e
Size=2 Low=0 splitIndex=1 high=1
280 [State 0] Switching from state 0 to state 455
Copied 34928 (count=1)
Finalizing TB execution 455
s2e_dummyMainFunction
tcg-llvm-tb-454-8048a0e
Firing timer event
281 [State 455] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 454 not yet applied), shell_len: 1024, eip: 0x00000000

281 [State 455] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 39 instructions, PCs: bfba3546 bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
281 [State 455] Terminating state 455 with message 'eliminated this false positive, execution path subset of another success'
281 [State 455] Switching from state 455 to state 0
Copied 34928 (count=1)
Deleting state 455 0x0x29cd5ef0
281 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 454
>> fuzzInit: datum forking for value 455
>> fuzzInit: datum forking for value 455
281 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 455)
        (ReadLSB w32 0 v455_fuzz_symb_455)))
    state 456 with condition (Not (Eq false
         (Eq (w32 455)
             (ReadLSB w32 0 v455_fuzz_symb_455))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-455-8048a0e
Size=2 Low=0 splitIndex=1 high=1
281 [State 0] Switching from state 0 to state 456
Copied 34928 (count=1)
Finalizing TB execution 456
s2e_dummyMainFunction
tcg-llvm-tb-455-8048a0e
281 [State 456] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 455 not yet applied), shell_len: 1024, eip: 0x00000000

281 [State 456] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
281 [State 456] Leaving buffer range @0xc126f278, 22 IoB insns; prev insn @0xbfba3594
  1   3B @0xbfba3594: 80 e8 e8          sub al, 0xe8            
281 [State 456] Killing state 456
281 [State 456] Terminating state 456 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
281 [State 456] Switching from state 456 to state 0
Copied 34928 (count=1)
Deleting state 456 0x0x29e36200
281 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 455
>> fuzzInit: datum forking for value 456
>> fuzzInit: datum forking for value 456
282 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 456)
        (ReadLSB w32 0 v456_fuzz_symb_456)))
    state 457 with condition (Not (Eq false
         (Eq (w32 456)
             (ReadLSB w32 0 v456_fuzz_symb_456))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-456-8048a0e
Size=2 Low=0 splitIndex=1 high=1
282 [State 0] Switching from state 0 to state 457
Copied 34928 (count=1)
Finalizing TB execution 457
s2e_dummyMainFunction
tcg-llvm-tb-456-8048a0e
Firing timer event
282 [State 457] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 456 not yet applied), shell_len: 1024, eip: 0x00000000

282 [State 457] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 38 instructions, PCs: bfba3548 bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
282 [State 457] Terminating state 457 with message 'eliminated this false positive, execution path subset of another success'
282 [State 457] Switching from state 457 to state 0
Copied 34928 (count=1)
Deleting state 457 0x0x2a0d06a0
282 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 456
>> fuzzInit: datum forking for value 457
>> fuzzInit: datum forking for value 457
282 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 457)
        (ReadLSB w32 0 v457_fuzz_symb_457)))
    state 458 with condition (Not (Eq false
         (Eq (w32 457)
             (ReadLSB w32 0 v457_fuzz_symb_457))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-457-8048a0e
Size=2 Low=0 splitIndex=1 high=1
282 [State 0] Switching from state 0 to state 458
Copied 34928 (count=1)
Finalizing TB execution 458
s2e_dummyMainFunction
tcg-llvm-tb-457-8048a0e
282 [State 458] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 457 not yet applied), shell_len: 1024, eip: 0x00000000

282 [State 458] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
282 [State 458] Leaving buffer range @0xc126f278, 22 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
282 [State 458] Killing state 458
282 [State 458] Terminating state 458 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
282 [State 458] Switching from state 458 to state 0
Copied 34928 (count=1)
Deleting state 458 0x0x2a0d06a0
282 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 457
>> fuzzInit: datum forking for value 458
>> fuzzInit: datum forking for value 458
283 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 458)
        (ReadLSB w32 0 v458_fuzz_symb_458)))
    state 459 with condition (Not (Eq false
         (Eq (w32 458)
             (ReadLSB w32 0 v458_fuzz_symb_458))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-458-8048a0e
Size=2 Low=0 splitIndex=1 high=1
283 [State 0] Switching from state 0 to state 459
Copied 34928 (count=1)
Finalizing TB execution 459
s2e_dummyMainFunction
tcg-llvm-tb-458-8048a0e
Firing timer event
283 [State 459] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 458 not yet applied), shell_len: 1024, eip: 0x00000000

283 [State 459] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 37 instructions, PCs: bfba354a bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
283 [State 459] Terminating state 459 with message 'eliminated this false positive, execution path subset of another success'
283 [State 459] Switching from state 459 to state 0
Copied 34928 (count=1)
Deleting state 459 0x0x2a0d06a0
283 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 458
>> fuzzInit: datum forking for value 459
>> fuzzInit: datum forking for value 459
283 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 459)
        (ReadLSB w32 0 v459_fuzz_symb_459)))
    state 460 with condition (Not (Eq false
         (Eq (w32 459)
             (ReadLSB w32 0 v459_fuzz_symb_459))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-459-8048a0e
Size=2 Low=0 splitIndex=1 high=1
283 [State 0] Switching from state 0 to state 460
Copied 34928 (count=1)
Finalizing TB execution 460
s2e_dummyMainFunction
tcg-llvm-tb-459-8048a0e
283 [State 460] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 459 not yet applied), shell_len: 1024, eip: 0x00000000

283 [State 460] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
283 [State 460] Leaving buffer range @0xc126f278, 21 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
283 [State 460] Killing state 460
283 [State 460] Terminating state 460 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
283 [State 460] Switching from state 460 to state 0
Copied 34928 (count=1)
Deleting state 460 0x0x2a0d06a0
284 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 459
>> fuzzInit: datum forking for value 460
>> fuzzInit: datum forking for value 460
284 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 460)
        (ReadLSB w32 0 v460_fuzz_symb_460)))
    state 461 with condition (Not (Eq false
         (Eq (w32 460)
             (ReadLSB w32 0 v460_fuzz_symb_460))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-460-8048a0e
Size=2 Low=0 splitIndex=1 high=1
284 [State 0] Switching from state 0 to state 461
Copied 34928 (count=1)
Finalizing TB execution 461
s2e_dummyMainFunction
tcg-llvm-tb-460-8048a0e
Firing timer event
284 [State 461] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 460 not yet applied), shell_len: 1024, eip: 0x00000000

284 [State 461] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 36 instructions, PCs: bfba354c bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
284 [State 461] Terminating state 461 with message 'eliminated this false positive, execution path subset of another success'
284 [State 461] Switching from state 461 to state 0
Copied 34928 (count=1)
Deleting state 461 0x0x2a0d06a0
284 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 460
>> fuzzInit: datum forking for value 461
>> fuzzInit: datum forking for value 461
284 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 461)
        (ReadLSB w32 0 v461_fuzz_symb_461)))
    state 462 with condition (Not (Eq false
         (Eq (w32 461)
             (ReadLSB w32 0 v461_fuzz_symb_461))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-461-8048a0e
Size=2 Low=0 splitIndex=1 high=1
284 [State 0] Switching from state 0 to state 462
Copied 34928 (count=1)
Finalizing TB execution 462
s2e_dummyMainFunction
tcg-llvm-tb-461-8048a0e
284 [State 462] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 461 not yet applied), shell_len: 1024, eip: 0x00000000

284 [State 462] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
284 [State 462] Leaving buffer range @0xc126f278, 20 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
285 [State 462] Killing state 462
285 [State 462] Terminating state 462 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
285 [State 462] Switching from state 462 to state 0
Copied 34928 (count=1)
Deleting state 462 0x0x2a0d06a0
285 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 461
>> fuzzInit: datum forking for value 462
>> fuzzInit: datum forking for value 462
285 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 462)
        (ReadLSB w32 0 v462_fuzz_symb_462)))
    state 463 with condition (Not (Eq false
         (Eq (w32 462)
             (ReadLSB w32 0 v462_fuzz_symb_462))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-462-8048a0e
Size=2 Low=0 splitIndex=1 high=1
285 [State 0] Switching from state 0 to state 463
Copied 34928 (count=1)
Finalizing TB execution 463
s2e_dummyMainFunction
tcg-llvm-tb-462-8048a0e
Firing timer event
285 [State 463] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 462 not yet applied), shell_len: 1024, eip: 0x00000000

285 [State 463] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 35 instructions, PCs: bfba354e bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
285 [State 463] Terminating state 463 with message 'eliminated this false positive, execution path subset of another success'
285 [State 463] Switching from state 463 to state 0
Copied 34928 (count=1)
Deleting state 463 0x0x2a0d06a0
285 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 462
>> fuzzInit: datum forking for value 463
>> fuzzInit: datum forking for value 463
285 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 463)
        (ReadLSB w32 0 v463_fuzz_symb_463)))
    state 464 with condition (Not (Eq false
         (Eq (w32 463)
             (ReadLSB w32 0 v463_fuzz_symb_463))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-463-8048a0e
Size=2 Low=0 splitIndex=1 high=1
285 [State 0] Switching from state 0 to state 464
Copied 34928 (count=1)
Finalizing TB execution 464
s2e_dummyMainFunction
tcg-llvm-tb-463-8048a0e
285 [State 464] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 463 not yet applied), shell_len: 1024, eip: 0x00000000

285 [State 464] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
286 [State 464] Leaving buffer range @0xc126f278, 1f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
286 [State 464] Killing state 464
286 [State 464] Terminating state 464 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
286 [State 464] Switching from state 464 to state 0
Copied 34928 (count=1)
Deleting state 464 0x0x2a0d06a0
286 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 463
>> fuzzInit: datum forking for value 464
>> fuzzInit: datum forking for value 464
286 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 464)
        (ReadLSB w32 0 v464_fuzz_symb_464)))
    state 465 with condition (Not (Eq false
         (Eq (w32 464)
             (ReadLSB w32 0 v464_fuzz_symb_464))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-464-8048a0e
Size=2 Low=0 splitIndex=1 high=1
286 [State 0] Switching from state 0 to state 465
Copied 34928 (count=1)
Finalizing TB execution 465
s2e_dummyMainFunction
tcg-llvm-tb-464-8048a0e
Firing timer event
286 [State 465] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 464 not yet applied), shell_len: 1024, eip: 0x00000000

286 [State 465] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 34 instructions, PCs: bfba3550 bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
286 [State 465] Terminating state 465 with message 'eliminated this false positive, execution path subset of another success'
286 [State 465] Switching from state 465 to state 0
Copied 34928 (count=1)
Deleting state 465 0x0x2a0d06a0
286 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 464
>> fuzzInit: datum forking for value 465
>> fuzzInit: datum forking for value 465
286 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 465)
        (ReadLSB w32 0 v465_fuzz_symb_465)))
    state 466 with condition (Not (Eq false
         (Eq (w32 465)
             (ReadLSB w32 0 v465_fuzz_symb_465))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-465-8048a0e
Size=2 Low=0 splitIndex=1 high=1
286 [State 0] Switching from state 0 to state 466
Copied 34928 (count=1)
Finalizing TB execution 466
s2e_dummyMainFunction
tcg-llvm-tb-465-8048a0e
286 [State 466] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 465 not yet applied), shell_len: 1024, eip: 0x00000000

286 [State 466] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
287 [State 466] Leaving buffer range @0xc126f278, 1e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
287 [State 466] Killing state 466
287 [State 466] Terminating state 466 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
287 [State 466] Switching from state 466 to state 0
Copied 34928 (count=1)
Deleting state 466 0x0x2a0d06a0
Firing timer event
287 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 465
>> fuzzInit: datum forking for value 466
>> fuzzInit: datum forking for value 466
287 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 466)
        (ReadLSB w32 0 v466_fuzz_symb_466)))
    state 467 with condition (Not (Eq false
         (Eq (w32 466)
             (ReadLSB w32 0 v466_fuzz_symb_466))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-466-8048a0e
Size=2 Low=0 splitIndex=1 high=1
287 [State 0] Switching from state 0 to state 467
Copied 34928 (count=1)
Finalizing TB execution 467
s2e_dummyMainFunction
tcg-llvm-tb-466-8048a0e
287 [State 467] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 466 not yet applied), shell_len: 1024, eip: 0x00000000

287 [State 467] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 33 instructions, PCs: bfba3552 bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
287 [State 467] Terminating state 467 with message 'eliminated this false positive, execution path subset of another success'
287 [State 467] Switching from state 467 to state 0
Copied 34928 (count=1)
Deleting state 467 0x0x2a34bc30
287 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 466
>> fuzzInit: datum forking for value 467
>> fuzzInit: datum forking for value 467
288 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 467)
        (ReadLSB w32 0 v467_fuzz_symb_467)))
    state 468 with condition (Not (Eq false
         (Eq (w32 467)
             (ReadLSB w32 0 v467_fuzz_symb_467))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-467-8048a0e
Size=2 Low=0 splitIndex=1 high=1
288 [State 0] Switching from state 0 to state 468
Copied 34928 (count=1)
Finalizing TB execution 468
s2e_dummyMainFunction
tcg-llvm-tb-467-8048a0e
288 [State 468] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 467 not yet applied), shell_len: 1024, eip: 0x00000000

288 [State 468] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
288 [State 468] Leaving buffer range @0xc126f278, 1d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
288 [State 468] Killing state 468
288 [State 468] Terminating state 468 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
288 [State 468] Switching from state 468 to state 0
Copied 34928 (count=1)
Deleting state 468 0x0x2a34bc30
288 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 467
>> fuzzInit: datum forking for value 468
>> fuzzInit: datum forking for value 468
288 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 468)
        (ReadLSB w32 0 v468_fuzz_symb_468)))
    state 469 with condition (Not (Eq false
         (Eq (w32 468)
             (ReadLSB w32 0 v468_fuzz_symb_468))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-468-8048a0e
Size=2 Low=0 splitIndex=1 high=1
288 [State 0] Switching from state 0 to state 469
Copied 34928 (count=1)
Finalizing TB execution 469
s2e_dummyMainFunction
tcg-llvm-tb-468-8048a0e
288 [State 469] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 468 not yet applied), shell_len: 1024, eip: 0x00000000

288 [State 469] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 32 instructions, PCs: bfba3554 bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
289 [State 469] Terminating state 469 with message 'eliminated this false positive, execution path subset of another success'
289 [State 469] Switching from state 469 to state 0
Copied 34928 (count=1)
Deleting state 469 0x0x2a1f0f00
289 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 468
>> fuzzInit: datum forking for value 469
>> fuzzInit: datum forking for value 469
289 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 469)
        (ReadLSB w32 0 v469_fuzz_symb_469)))
    state 470 with condition (Not (Eq false
         (Eq (w32 469)
             (ReadLSB w32 0 v469_fuzz_symb_469))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-469-8048a0e
Size=2 Low=0 splitIndex=1 high=1
289 [State 0] Switching from state 0 to state 470
Copied 34928 (count=1)
Finalizing TB execution 470
s2e_dummyMainFunction
tcg-llvm-tb-469-8048a0e
289 [State 470] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 469 not yet applied), shell_len: 1024, eip: 0x00000000

289 [State 470] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
289 [State 470] Leaving buffer range @0xc126f278, 1c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
289 [State 470] Killing state 470
289 [State 470] Terminating state 470 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
289 [State 470] Switching from state 470 to state 0
Copied 34928 (count=1)
Deleting state 470 0x0x2a1f0f00
289 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 469
>> fuzzInit: datum forking for value 470
>> fuzzInit: datum forking for value 470
289 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 470)
        (ReadLSB w32 0 v470_fuzz_symb_470)))
    state 471 with condition (Not (Eq false
         (Eq (w32 470)
             (ReadLSB w32 0 v470_fuzz_symb_470))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-470-8048a0e
Size=2 Low=0 splitIndex=1 high=1
289 [State 0] Switching from state 0 to state 471
Copied 34928 (count=1)
Finalizing TB execution 471
s2e_dummyMainFunction
tcg-llvm-tb-470-8048a0e
289 [State 471] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 470 not yet applied), shell_len: 1024, eip: 0x00000000

289 [State 471] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 31 instructions, PCs: bfba3556 bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
290 [State 471] Terminating state 471 with message 'eliminated this false positive, execution path subset of another success'
290 [State 471] Switching from state 471 to state 0
Copied 34928 (count=1)
Deleting state 471 0x0x2a333270
290 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 470
>> fuzzInit: datum forking for value 471
>> fuzzInit: datum forking for value 471
290 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 471)
        (ReadLSB w32 0 v471_fuzz_symb_471)))
    state 472 with condition (Not (Eq false
         (Eq (w32 471)
             (ReadLSB w32 0 v471_fuzz_symb_471))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-471-8048a0e
Size=2 Low=0 splitIndex=1 high=1
290 [State 0] Switching from state 0 to state 472
Copied 34928 (count=1)
Finalizing TB execution 472
s2e_dummyMainFunction
tcg-llvm-tb-471-8048a0e
Firing timer event
290 [State 472] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 471 not yet applied), shell_len: 1024, eip: 0x00000000

290 [State 472] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
290 [State 472] Leaving buffer range @0xc126f278, 1b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
290 [State 472] Killing state 472
290 [State 472] Terminating state 472 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
290 [State 472] Switching from state 472 to state 0
Copied 34928 (count=1)
Deleting state 472 0x0x2a333270
290 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 471
>> fuzzInit: datum forking for value 472
>> fuzzInit: datum forking for value 472
290 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 472)
        (ReadLSB w32 0 v472_fuzz_symb_472)))
    state 473 with condition (Not (Eq false
         (Eq (w32 472)
             (ReadLSB w32 0 v472_fuzz_symb_472))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-472-8048a0e
Size=2 Low=0 splitIndex=1 high=1
290 [State 0] Switching from state 0 to state 473
Copied 34928 (count=1)
Finalizing TB execution 473
s2e_dummyMainFunction
tcg-llvm-tb-472-8048a0e
291 [State 473] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 472 not yet applied), shell_len: 1024, eip: 0x00000000

291 [State 473] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 30 instructions, PCs: bfba3558 bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
291 [State 473] Terminating state 473 with message 'eliminated this false positive, execution path subset of another success'
291 [State 473] Switching from state 473 to state 0
Copied 34928 (count=1)
Deleting state 473 0x0x2a459aa0
291 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 472
>> fuzzInit: datum forking for value 473
>> fuzzInit: datum forking for value 473
291 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 473)
        (ReadLSB w32 0 v473_fuzz_symb_473)))
    state 474 with condition (Not (Eq false
         (Eq (w32 473)
             (ReadLSB w32 0 v473_fuzz_symb_473))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-473-8048a0e
Size=2 Low=0 splitIndex=1 high=1
291 [State 0] Switching from state 0 to state 474
Copied 34928 (count=1)
Finalizing TB execution 474
s2e_dummyMainFunction
tcg-llvm-tb-473-8048a0e
Firing timer event
291 [State 474] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 473 not yet applied), shell_len: 1024, eip: 0x00000000

291 [State 474] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
291 [State 474] Leaving buffer range @0xc126f278, 1a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
291 [State 474] Killing state 474
291 [State 474] Terminating state 474 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
291 [State 474] Switching from state 474 to state 0
Copied 34928 (count=1)
Deleting state 474 0x0x2a459aa0
291 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 473
>> fuzzInit: datum forking for value 474
>> fuzzInit: datum forking for value 474
292 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 474)
        (ReadLSB w32 0 v474_fuzz_symb_474)))
    state 475 with condition (Not (Eq false
         (Eq (w32 474)
             (ReadLSB w32 0 v474_fuzz_symb_474))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-474-8048a0e
Size=2 Low=0 splitIndex=1 high=1
292 [State 0] Switching from state 0 to state 475
Copied 34928 (count=1)
Finalizing TB execution 475
s2e_dummyMainFunction
tcg-llvm-tb-474-8048a0e
292 [State 475] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 474 not yet applied), shell_len: 1024, eip: 0x00000000

292 [State 475] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 29 instructions, PCs: bfba355a bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
292 [State 475] Terminating state 475 with message 'eliminated this false positive, execution path subset of another success'
292 [State 475] Switching from state 475 to state 0
Copied 34928 (count=1)
Deleting state 475 0x0x2a217b40
292 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 474
>> fuzzInit: datum forking for value 475
>> fuzzInit: datum forking for value 475
292 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 475)
        (ReadLSB w32 0 v475_fuzz_symb_475)))
    state 476 with condition (Not (Eq false
         (Eq (w32 475)
             (ReadLSB w32 0 v475_fuzz_symb_475))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-475-8048a0e
Size=2 Low=0 splitIndex=1 high=1
292 [State 0] Switching from state 0 to state 476
Copied 34928 (count=1)
Finalizing TB execution 476
s2e_dummyMainFunction
tcg-llvm-tb-475-8048a0e
Firing timer event
292 [State 476] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 475 not yet applied), shell_len: 1024, eip: 0x00000000

292 [State 476] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
292 [State 476] Leaving buffer range @0xc126f278, 19 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
292 [State 476] Killing state 476
292 [State 476] Terminating state 476 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
292 [State 476] Switching from state 476 to state 0
Copied 34928 (count=1)
Deleting state 476 0x0x2a217b40
292 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 475
>> fuzzInit: datum forking for value 476
>> fuzzInit: datum forking for value 476
293 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 476)
        (ReadLSB w32 0 v476_fuzz_symb_476)))
    state 477 with condition (Not (Eq false
         (Eq (w32 476)
             (ReadLSB w32 0 v476_fuzz_symb_476))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-476-8048a0e
Size=2 Low=0 splitIndex=1 high=1
293 [State 0] Switching from state 0 to state 477
Copied 34928 (count=1)
Finalizing TB execution 477
s2e_dummyMainFunction
tcg-llvm-tb-476-8048a0e
293 [State 477] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 476 not yet applied), shell_len: 1024, eip: 0x00000000

293 [State 477] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 28 instructions, PCs: bfba355c bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
293 [State 477] Terminating state 477 with message 'eliminated this false positive, execution path subset of another success'
293 [State 477] Switching from state 477 to state 0
Copied 34928 (count=1)
Deleting state 477 0x0x2a629c60
293 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 476
>> fuzzInit: datum forking for value 477
>> fuzzInit: datum forking for value 477
293 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 477)
        (ReadLSB w32 0 v477_fuzz_symb_477)))
    state 478 with condition (Not (Eq false
         (Eq (w32 477)
             (ReadLSB w32 0 v477_fuzz_symb_477))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-477-8048a0e
Size=2 Low=0 splitIndex=1 high=1
293 [State 0] Switching from state 0 to state 478
Copied 34928 (count=1)
Finalizing TB execution 478
s2e_dummyMainFunction
tcg-llvm-tb-477-8048a0e
Firing timer event
293 [State 478] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 477 not yet applied), shell_len: 1024, eip: 0x00000000

293 [State 478] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
293 [State 478] Leaving buffer range @0xc126f278, 18 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
293 [State 478] Killing state 478
293 [State 478] Terminating state 478 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
293 [State 478] Switching from state 478 to state 0
Copied 34928 (count=1)
Deleting state 478 0x0x2a629c60
294 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 477
>> fuzzInit: datum forking for value 478
>> fuzzInit: datum forking for value 478
294 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 478)
        (ReadLSB w32 0 v478_fuzz_symb_478)))
    state 479 with condition (Not (Eq false
         (Eq (w32 478)
             (ReadLSB w32 0 v478_fuzz_symb_478))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-478-8048a0e
Size=2 Low=0 splitIndex=1 high=1
294 [State 0] Switching from state 0 to state 479
Copied 34928 (count=1)
Finalizing TB execution 479
s2e_dummyMainFunction
tcg-llvm-tb-478-8048a0e
294 [State 479] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 478 not yet applied), shell_len: 1024, eip: 0x00000000

294 [State 479] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 27 instructions, PCs: bfba355e bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
294 [State 479] Terminating state 479 with message 'eliminated this false positive, execution path subset of another success'
294 [State 479] Switching from state 479 to state 0
Copied 34928 (count=1)
Deleting state 479 0x0x2a3e8bc0
294 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 478
>> fuzzInit: datum forking for value 479
>> fuzzInit: datum forking for value 479
294 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 479)
        (ReadLSB w32 0 v479_fuzz_symb_479)))
    state 480 with condition (Not (Eq false
         (Eq (w32 479)
             (ReadLSB w32 0 v479_fuzz_symb_479))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-479-8048a0e
Size=2 Low=0 splitIndex=1 high=1
294 [State 0] Switching from state 0 to state 480
Copied 34928 (count=1)
Finalizing TB execution 480
s2e_dummyMainFunction
tcg-llvm-tb-479-8048a0e
Firing timer event
294 [State 480] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 479 not yet applied), shell_len: 1024, eip: 0x00000000

294 [State 480] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
295 [State 480] Leaving buffer range @0xc126f278, 17 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
295 [State 480] Killing state 480
295 [State 480] Terminating state 480 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
295 [State 480] Switching from state 480 to state 0
Copied 34928 (count=1)
Deleting state 480 0x0x2a3e8bc0
295 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 479
>> fuzzInit: datum forking for value 480
>> fuzzInit: datum forking for value 480
295 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 480)
        (ReadLSB w32 0 v480_fuzz_symb_480)))
    state 481 with condition (Not (Eq false
         (Eq (w32 480)
             (ReadLSB w32 0 v480_fuzz_symb_480))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-480-8048a0e
Size=2 Low=0 splitIndex=1 high=1
295 [State 0] Switching from state 0 to state 481
Copied 34928 (count=1)
Finalizing TB execution 481
s2e_dummyMainFunction
tcg-llvm-tb-480-8048a0e
295 [State 481] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 480 not yet applied), shell_len: 1024, eip: 0x00000000

295 [State 481] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 26 instructions, PCs: bfba3560 bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
295 [State 481] Terminating state 481 with message 'eliminated this false positive, execution path subset of another success'
295 [State 481] Switching from state 481 to state 0
Copied 34928 (count=1)
Deleting state 481 0x0x2a6ae130
295 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 480
>> fuzzInit: datum forking for value 481
>> fuzzInit: datum forking for value 481
295 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 481)
        (ReadLSB w32 0 v481_fuzz_symb_481)))
    state 482 with condition (Not (Eq false
         (Eq (w32 481)
             (ReadLSB w32 0 v481_fuzz_symb_481))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-481-8048a0e
Size=2 Low=0 splitIndex=1 high=1
295 [State 0] Switching from state 0 to state 482
Copied 34928 (count=1)
Finalizing TB execution 482
s2e_dummyMainFunction
tcg-llvm-tb-481-8048a0e
Firing timer event
296 [State 482] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 481 not yet applied), shell_len: 1024, eip: 0x00000000

296 [State 482] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
296 [State 482] Leaving buffer range @0xc126f278, 16 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
296 [State 482] Killing state 482
296 [State 482] Terminating state 482 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
296 [State 482] Switching from state 482 to state 0
Copied 34928 (count=1)
Deleting state 482 0x0x2a6ae130
296 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 481
>> fuzzInit: datum forking for value 482
>> fuzzInit: datum forking for value 482
296 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 482)
        (ReadLSB w32 0 v482_fuzz_symb_482)))
    state 483 with condition (Not (Eq false
         (Eq (w32 482)
             (ReadLSB w32 0 v482_fuzz_symb_482))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-482-8048a0e
Size=2 Low=0 splitIndex=1 high=1
296 [State 0] Switching from state 0 to state 483
Copied 34928 (count=1)
Finalizing TB execution 483
s2e_dummyMainFunction
tcg-llvm-tb-482-8048a0e
296 [State 483] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 482 not yet applied), shell_len: 1024, eip: 0x00000000

296 [State 483] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 25 instructions, PCs: bfba3562 bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
296 [State 483] Terminating state 483 with message 'eliminated this false positive, execution path subset of another success'
296 [State 483] Switching from state 483 to state 0
Copied 34928 (count=1)
Deleting state 483 0x0x2a805000
296 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 482
>> fuzzInit: datum forking for value 483
>> fuzzInit: datum forking for value 483
297 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 483)
        (ReadLSB w32 0 v483_fuzz_symb_483)))
    state 484 with condition (Not (Eq false
         (Eq (w32 483)
             (ReadLSB w32 0 v483_fuzz_symb_483))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-483-8048a0e
Size=2 Low=0 splitIndex=1 high=1
297 [State 0] Switching from state 0 to state 484
Copied 34928 (count=1)
Finalizing TB execution 484
s2e_dummyMainFunction
tcg-llvm-tb-483-8048a0e
Firing timer event
297 [State 484] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 483 not yet applied), shell_len: 1024, eip: 0x00000000

297 [State 484] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
297 [State 484] Leaving buffer range @0xc126f278, 15 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
297 [State 484] Killing state 484
297 [State 484] Terminating state 484 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
297 [State 484] Switching from state 484 to state 0
Copied 34928 (count=1)
Deleting state 484 0x0x2a805000
297 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 483
>> fuzzInit: datum forking for value 484
>> fuzzInit: datum forking for value 484
297 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 484)
        (ReadLSB w32 0 v484_fuzz_symb_484)))
    state 485 with condition (Not (Eq false
         (Eq (w32 484)
             (ReadLSB w32 0 v484_fuzz_symb_484))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-484-8048a0e
Size=2 Low=0 splitIndex=1 high=1
297 [State 0] Switching from state 0 to state 485
Copied 34928 (count=1)
Finalizing TB execution 485
s2e_dummyMainFunction
tcg-llvm-tb-484-8048a0e
297 [State 485] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 484 not yet applied), shell_len: 1024, eip: 0x00000000

297 [State 485] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 24 instructions, PCs: bfba3564 bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
297 [State 485] Terminating state 485 with message 'eliminated this false positive, execution path subset of another success'
297 [State 485] Switching from state 485 to state 0
Copied 34928 (count=1)
Deleting state 485 0x0x2a80ba40
298 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 484
>> fuzzInit: datum forking for value 485
>> fuzzInit: datum forking for value 485
298 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 485)
        (ReadLSB w32 0 v485_fuzz_symb_485)))
    state 486 with condition (Not (Eq false
         (Eq (w32 485)
             (ReadLSB w32 0 v485_fuzz_symb_485))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-485-8048a0e
Size=2 Low=0 splitIndex=1 high=1
298 [State 0] Switching from state 0 to state 486
Copied 34928 (count=1)
Finalizing TB execution 486
s2e_dummyMainFunction
tcg-llvm-tb-485-8048a0e
Firing timer event
298 [State 486] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 485 not yet applied), shell_len: 1024, eip: 0x00000000

298 [State 486] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
298 [State 486] Leaving buffer range @0xc126f278, 14 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
298 [State 486] Killing state 486
298 [State 486] Terminating state 486 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
298 [State 486] Switching from state 486 to state 0
Copied 34928 (count=1)
Deleting state 486 0x0x2a80ba40
298 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 485
>> fuzzInit: datum forking for value 486
>> fuzzInit: datum forking for value 486
298 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 486)
        (ReadLSB w32 0 v486_fuzz_symb_486)))
    state 487 with condition (Not (Eq false
         (Eq (w32 486)
             (ReadLSB w32 0 v486_fuzz_symb_486))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-486-8048a0e
Size=2 Low=0 splitIndex=1 high=1
298 [State 0] Switching from state 0 to state 487
Copied 34928 (count=1)
Finalizing TB execution 487
s2e_dummyMainFunction
tcg-llvm-tb-486-8048a0e
298 [State 487] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 486 not yet applied), shell_len: 1024, eip: 0x00000000

298 [State 487] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 23 instructions, PCs: bfba3566 bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
299 [State 487] Terminating state 487 with message 'eliminated this false positive, execution path subset of another success'
299 [State 487] Switching from state 487 to state 0
Copied 34928 (count=1)
Deleting state 487 0x0x2a928c70
299 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 486
>> fuzzInit: datum forking for value 487
>> fuzzInit: datum forking for value 487
299 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 487)
        (ReadLSB w32 0 v487_fuzz_symb_487)))
    state 488 with condition (Not (Eq false
         (Eq (w32 487)
             (ReadLSB w32 0 v487_fuzz_symb_487))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-487-8048a0e
Size=2 Low=0 splitIndex=1 high=1
299 [State 0] Switching from state 0 to state 488
Copied 34928 (count=1)
Finalizing TB execution 488
s2e_dummyMainFunction
tcg-llvm-tb-487-8048a0e
Firing timer event
299 [State 488] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 487 not yet applied), shell_len: 1024, eip: 0x00000000

299 [State 488] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
299 [State 488] Leaving buffer range @0xc126f278, 13 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
299 [State 488] Killing state 488
299 [State 488] Terminating state 488 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
299 [State 488] Switching from state 488 to state 0
Copied 34928 (count=1)
Deleting state 488 0x0x2a928c70
299 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 487
>> fuzzInit: datum forking for value 488
>> fuzzInit: datum forking for value 488
299 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 488)
        (ReadLSB w32 0 v488_fuzz_symb_488)))
    state 489 with condition (Not (Eq false
         (Eq (w32 488)
             (ReadLSB w32 0 v488_fuzz_symb_488))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-488-8048a0e
Size=2 Low=0 splitIndex=1 high=1
299 [State 0] Switching from state 0 to state 489
Copied 34928 (count=1)
Finalizing TB execution 489
s2e_dummyMainFunction
tcg-llvm-tb-488-8048a0e
299 [State 489] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 488 not yet applied), shell_len: 1024, eip: 0x00000000

299 [State 489] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 22 instructions, PCs: bfba3568 bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
300 [State 489] Terminating state 489 with message 'eliminated this false positive, execution path subset of another success'
300 [State 489] Switching from state 489 to state 0
Copied 34928 (count=1)
Deleting state 489 0x0x2a8871f0
300 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 488
>> fuzzInit: datum forking for value 489
>> fuzzInit: datum forking for value 489
300 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 489)
        (ReadLSB w32 0 v489_fuzz_symb_489)))
    state 490 with condition (Not (Eq false
         (Eq (w32 489)
             (ReadLSB w32 0 v489_fuzz_symb_489))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-489-8048a0e
Size=2 Low=0 splitIndex=1 high=1
300 [State 0] Switching from state 0 to state 490
Copied 34928 (count=1)
Finalizing TB execution 490
s2e_dummyMainFunction
tcg-llvm-tb-489-8048a0e
Firing timer event
300 [State 490] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 489 not yet applied), shell_len: 1024, eip: 0x00000000

300 [State 490] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
300 [State 490] Leaving buffer range @0xc126f278, 12 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
300 [State 490] Killing state 490
300 [State 490] Terminating state 490 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
300 [State 490] Switching from state 490 to state 0
Copied 34928 (count=1)
Deleting state 490 0x0x2a8871f0
300 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 489
>> fuzzInit: datum forking for value 490
>> fuzzInit: datum forking for value 490
300 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 490)
        (ReadLSB w32 0 v490_fuzz_symb_490)))
    state 491 with condition (Not (Eq false
         (Eq (w32 490)
             (ReadLSB w32 0 v490_fuzz_symb_490))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-490-8048a0e
Size=2 Low=0 splitIndex=1 high=1
300 [State 0] Switching from state 0 to state 491
Copied 34928 (count=1)
Finalizing TB execution 491
s2e_dummyMainFunction
tcg-llvm-tb-490-8048a0e
301 [State 491] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 490 not yet applied), shell_len: 1024, eip: 0x00000000

301 [State 491] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 21 instructions, PCs: bfba356a bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
301 [State 491] Terminating state 491 with message 'eliminated this false positive, execution path subset of another success'
301 [State 491] Switching from state 491 to state 0
Copied 34928 (count=1)
Deleting state 491 0x0x2a8a9fa0
301 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 490
>> fuzzInit: datum forking for value 491
>> fuzzInit: datum forking for value 491
301 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 491)
        (ReadLSB w32 0 v491_fuzz_symb_491)))
    state 492 with condition (Not (Eq false
         (Eq (w32 491)
             (ReadLSB w32 0 v491_fuzz_symb_491))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-491-8048a0e
Size=2 Low=0 splitIndex=1 high=1
301 [State 0] Switching from state 0 to state 492
Copied 34928 (count=1)
Finalizing TB execution 492
s2e_dummyMainFunction
tcg-llvm-tb-491-8048a0e
Firing timer event
301 [State 492] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 491 not yet applied), shell_len: 1024, eip: 0x00000000

301 [State 492] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
301 [State 492] Leaving buffer range @0xc126f278, 11 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
301 [State 492] Killing state 492
301 [State 492] Terminating state 492 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
301 [State 492] Switching from state 492 to state 0
Copied 34928 (count=1)
Deleting state 492 0x0x2a8a9fa0
302 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 491
>> fuzzInit: datum forking for value 492
>> fuzzInit: datum forking for value 492
302 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 492)
        (ReadLSB w32 0 v492_fuzz_symb_492)))
    state 493 with condition (Not (Eq false
         (Eq (w32 492)
             (ReadLSB w32 0 v492_fuzz_symb_492))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-492-8048a0e
Size=2 Low=0 splitIndex=1 high=1
302 [State 0] Switching from state 0 to state 493
Copied 34928 (count=1)
Finalizing TB execution 493
s2e_dummyMainFunction
tcg-llvm-tb-492-8048a0e
302 [State 493] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 492 not yet applied), shell_len: 1024, eip: 0x00000000

302 [State 493] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 20 instructions, PCs: bfba356c bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
302 [State 493] Terminating state 493 with message 'eliminated this false positive, execution path subset of another success'
302 [State 493] Switching from state 493 to state 0
Copied 34928 (count=1)
Deleting state 493 0x0x2a95fbc0
Firing timer event
302 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 492
>> fuzzInit: datum forking for value 493
>> fuzzInit: datum forking for value 493
302 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 493)
        (ReadLSB w32 0 v493_fuzz_symb_493)))
    state 494 with condition (Not (Eq false
         (Eq (w32 493)
             (ReadLSB w32 0 v493_fuzz_symb_493))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-493-8048a0e
Size=2 Low=0 splitIndex=1 high=1
302 [State 0] Switching from state 0 to state 494
Copied 34928 (count=1)
Finalizing TB execution 494
s2e_dummyMainFunction
tcg-llvm-tb-493-8048a0e
302 [State 494] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 493 not yet applied), shell_len: 1024, eip: 0x00000000

302 [State 494] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
303 [State 494] Leaving buffer range @0xc126f278, 10 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
303 [State 494] Killing state 494
303 [State 494] Terminating state 494 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
303 [State 494] Switching from state 494 to state 0
Copied 34928 (count=1)
Deleting state 494 0x0x2a95fbc0
303 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 493
>> fuzzInit: datum forking for value 494
>> fuzzInit: datum forking for value 494
303 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 494)
        (ReadLSB w32 0 v494_fuzz_symb_494)))
    state 495 with condition (Not (Eq false
         (Eq (w32 494)
             (ReadLSB w32 0 v494_fuzz_symb_494))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-494-8048a0e
Size=2 Low=0 splitIndex=1 high=1
303 [State 0] Switching from state 0 to state 495
Copied 34928 (count=1)
Finalizing TB execution 495
s2e_dummyMainFunction
tcg-llvm-tb-494-8048a0e
Firing timer event
303 [State 495] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 494 not yet applied), shell_len: 1024, eip: 0x00000000

303 [State 495] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 19 instructions, PCs: bfba356e bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
303 [State 495] Terminating state 495 with message 'eliminated this false positive, execution path subset of another success'
303 [State 495] Switching from state 495 to state 0
Copied 34928 (count=1)
Deleting state 495 0x0x2a95fbc0
303 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 494
>> fuzzInit: datum forking for value 495
>> fuzzInit: datum forking for value 495
304 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 495)
        (ReadLSB w32 0 v495_fuzz_symb_495)))
    state 496 with condition (Not (Eq false
         (Eq (w32 495)
             (ReadLSB w32 0 v495_fuzz_symb_495))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-495-8048a0e
Size=2 Low=0 splitIndex=1 high=1
304 [State 0] Switching from state 0 to state 496
Copied 34928 (count=1)
Finalizing TB execution 496
s2e_dummyMainFunction
tcg-llvm-tb-495-8048a0e
304 [State 496] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 495 not yet applied), shell_len: 1024, eip: 0x00000000

304 [State 496] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
304 [State 496] Leaving buffer range @0xc126f278, f IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
304 [State 496] Killing state 496
304 [State 496] Terminating state 496 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
304 [State 496] Switching from state 496 to state 0
Copied 34928 (count=1)
Deleting state 496 0x0x2ad80900
Firing timer event
304 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 495
>> fuzzInit: datum forking for value 496
>> fuzzInit: datum forking for value 496
304 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 496)
        (ReadLSB w32 0 v496_fuzz_symb_496)))
    state 497 with condition (Not (Eq false
         (Eq (w32 496)
             (ReadLSB w32 0 v496_fuzz_symb_496))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-496-8048a0e
Size=2 Low=0 splitIndex=1 high=1
304 [State 0] Switching from state 0 to state 497
Copied 34928 (count=1)
Finalizing TB execution 497
s2e_dummyMainFunction
tcg-llvm-tb-496-8048a0e
304 [State 497] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 496 not yet applied), shell_len: 1024, eip: 0x00000000

304 [State 497] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 18 instructions, PCs: bfba3570 bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
304 [State 497] Terminating state 497 with message 'eliminated this false positive, execution path subset of another success'
304 [State 497] Switching from state 497 to state 0
Copied 34928 (count=1)
Deleting state 497 0x0x2ad80900
305 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 496
>> fuzzInit: datum forking for value 497
>> fuzzInit: datum forking for value 497
305 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 497)
        (ReadLSB w32 0 v497_fuzz_symb_497)))
    state 498 with condition (Not (Eq false
         (Eq (w32 497)
             (ReadLSB w32 0 v497_fuzz_symb_497))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-497-8048a0e
Size=2 Low=0 splitIndex=1 high=1
305 [State 0] Switching from state 0 to state 498
Copied 34928 (count=1)
Finalizing TB execution 498
s2e_dummyMainFunction
tcg-llvm-tb-497-8048a0e
305 [State 498] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 497 not yet applied), shell_len: 1024, eip: 0x00000000

305 [State 498] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
305 [State 498] Leaving buffer range @0xc126f278, e IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
305 [State 498] Killing state 498
305 [State 498] Terminating state 498 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
305 [State 498] Switching from state 498 to state 0
Copied 34928 (count=1)
Deleting state 498 0x0x2ad80900
Firing timer event
305 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 497
>> fuzzInit: datum forking for value 498
>> fuzzInit: datum forking for value 498
305 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 498)
        (ReadLSB w32 0 v498_fuzz_symb_498)))
    state 499 with condition (Not (Eq false
         (Eq (w32 498)
             (ReadLSB w32 0 v498_fuzz_symb_498))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-498-8048a0e
Size=2 Low=0 splitIndex=1 high=1
305 [State 0] Switching from state 0 to state 499
Copied 34928 (count=1)
Finalizing TB execution 499
s2e_dummyMainFunction
tcg-llvm-tb-498-8048a0e
305 [State 499] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 498 not yet applied), shell_len: 1024, eip: 0x00000000

305 [State 499] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 17 instructions, PCs: bfba3572 bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
306 [State 499] Terminating state 499 with message 'eliminated this false positive, execution path subset of another success'
306 [State 499] Switching from state 499 to state 0
Copied 34928 (count=1)
Deleting state 499 0x0x2ad80900
306 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 498
>> fuzzInit: datum forking for value 499
>> fuzzInit: datum forking for value 499
306 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 499)
        (ReadLSB w32 0 v499_fuzz_symb_499)))
    state 500 with condition (Not (Eq false
         (Eq (w32 499)
             (ReadLSB w32 0 v499_fuzz_symb_499))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-499-8048a0e
Size=2 Low=0 splitIndex=1 high=1
306 [State 0] Switching from state 0 to state 500
Copied 34928 (count=1)
Finalizing TB execution 500
s2e_dummyMainFunction
tcg-llvm-tb-499-8048a0e
306 [State 500] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 499 not yet applied), shell_len: 1024, eip: 0x00000000

306 [State 500] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
306 [State 500] Leaving buffer range @0xc126f278, d IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
306 [State 500] Killing state 500
306 [State 500] Terminating state 500 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
306 [State 500] Switching from state 500 to state 0
Copied 34928 (count=1)
Deleting state 500 0x0x2ad80900
306 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 499
>> fuzzInit: datum forking for value 500
>> fuzzInit: datum forking for value 500
306 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 500)
        (ReadLSB w32 0 v500_fuzz_symb_500)))
    state 501 with condition (Not (Eq false
         (Eq (w32 500)
             (ReadLSB w32 0 v500_fuzz_symb_500))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-500-8048a0e
Size=2 Low=0 splitIndex=1 high=1
306 [State 0] Switching from state 0 to state 501
Copied 34928 (count=1)
Finalizing TB execution 501
s2e_dummyMainFunction
tcg-llvm-tb-500-8048a0e
307 [State 501] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 500 not yet applied), shell_len: 1024, eip: 0x00000000

307 [State 501] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 16 instructions, PCs: bfba3574 bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
307 [State 501] Terminating state 501 with message 'eliminated this false positive, execution path subset of another success'
307 [State 501] Switching from state 501 to state 0
Copied 34928 (count=1)
Deleting state 501 0x0x2ad80900
307 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 500
>> fuzzInit: datum forking for value 501
>> fuzzInit: datum forking for value 501
307 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 501)
        (ReadLSB w32 0 v501_fuzz_symb_501)))
    state 502 with condition (Not (Eq false
         (Eq (w32 501)
             (ReadLSB w32 0 v501_fuzz_symb_501))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-501-8048a0e
Size=2 Low=0 splitIndex=1 high=1
307 [State 0] Switching from state 0 to state 502
Copied 34928 (count=1)
Finalizing TB execution 502
s2e_dummyMainFunction
tcg-llvm-tb-501-8048a0e
307 [State 502] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 501 not yet applied), shell_len: 1024, eip: 0x00000000

307 [State 502] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
307 [State 502] Leaving buffer range @0xc126f278, c IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
307 [State 502] Killing state 502
307 [State 502] Terminating state 502 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
307 [State 502] Switching from state 502 to state 0
Copied 34928 (count=1)
Deleting state 502 0x0x2ad80900
307 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 501
>> fuzzInit: datum forking for value 502
>> fuzzInit: datum forking for value 502
308 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 502)
        (ReadLSB w32 0 v502_fuzz_symb_502)))
    state 503 with condition (Not (Eq false
         (Eq (w32 502)
             (ReadLSB w32 0 v502_fuzz_symb_502))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-502-8048a0e
Size=2 Low=0 splitIndex=1 high=1
308 [State 0] Switching from state 0 to state 503
Copied 34928 (count=1)
Finalizing TB execution 503
s2e_dummyMainFunction
tcg-llvm-tb-502-8048a0e
308 [State 503] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 502 not yet applied), shell_len: 1024, eip: 0x00000000

308 [State 503] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 15 instructions, PCs: bfba3576 bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
308 [State 503] Terminating state 503 with message 'eliminated this false positive, execution path subset of another success'
308 [State 503] Switching from state 503 to state 0
Copied 34928 (count=1)
Deleting state 503 0x0x2ad80900
308 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 502
>> fuzzInit: datum forking for value 503
>> fuzzInit: datum forking for value 503
308 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 503)
        (ReadLSB w32 0 v503_fuzz_symb_503)))
    state 504 with condition (Not (Eq false
         (Eq (w32 503)
             (ReadLSB w32 0 v503_fuzz_symb_503))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-503-8048a0e
Size=2 Low=0 splitIndex=1 high=1
308 [State 0] Switching from state 0 to state 504
Copied 34928 (count=1)
Finalizing TB execution 504
s2e_dummyMainFunction
tcg-llvm-tb-503-8048a0e
Firing timer event
308 [State 504] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 503 not yet applied), shell_len: 1024, eip: 0x00000000

308 [State 504] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
308 [State 504] Leaving buffer range @0xc126f278, b IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
308 [State 504] Killing state 504
308 [State 504] Terminating state 504 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
308 [State 504] Switching from state 504 to state 0
Copied 34928 (count=1)
Deleting state 504 0x0x2ad80900
309 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 503
>> fuzzInit: datum forking for value 504
>> fuzzInit: datum forking for value 504
309 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 504)
        (ReadLSB w32 0 v504_fuzz_symb_504)))
    state 505 with condition (Not (Eq false
         (Eq (w32 504)
             (ReadLSB w32 0 v504_fuzz_symb_504))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-504-8048a0e
Size=2 Low=0 splitIndex=1 high=1
309 [State 0] Switching from state 0 to state 505
Copied 34928 (count=1)
Finalizing TB execution 505
s2e_dummyMainFunction
tcg-llvm-tb-504-8048a0e
309 [State 505] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 504 not yet applied), shell_len: 1024, eip: 0x00000000

309 [State 505] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 14 instructions, PCs: bfba3578 bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
309 [State 505] Terminating state 505 with message 'eliminated this false positive, execution path subset of another success'
309 [State 505] Switching from state 505 to state 0
Copied 34928 (count=1)
Deleting state 505 0x0x2ad80900
309 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 504
>> fuzzInit: datum forking for value 505
>> fuzzInit: datum forking for value 505
309 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 505)
        (ReadLSB w32 0 v505_fuzz_symb_505)))
    state 506 with condition (Not (Eq false
         (Eq (w32 505)
             (ReadLSB w32 0 v505_fuzz_symb_505))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-505-8048a0e
Size=2 Low=0 splitIndex=1 high=1
309 [State 0] Switching from state 0 to state 506
Copied 34928 (count=1)
Finalizing TB execution 506
s2e_dummyMainFunction
tcg-llvm-tb-505-8048a0e
Firing timer event
309 [State 506] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 505 not yet applied), shell_len: 1024, eip: 0x00000000

309 [State 506] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
309 [State 506] Leaving buffer range @0xc126f278, a IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
309 [State 506] Killing state 506
309 [State 506] Terminating state 506 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
309 [State 506] Switching from state 506 to state 0
Copied 34928 (count=1)
Deleting state 506 0x0x2ad80900
310 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 505
>> fuzzInit: datum forking for value 506
>> fuzzInit: datum forking for value 506
310 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 506)
        (ReadLSB w32 0 v506_fuzz_symb_506)))
    state 507 with condition (Not (Eq false
         (Eq (w32 506)
             (ReadLSB w32 0 v506_fuzz_symb_506))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-506-8048a0e
Size=2 Low=0 splitIndex=1 high=1
310 [State 0] Switching from state 0 to state 507
Copied 34928 (count=1)
Finalizing TB execution 507
s2e_dummyMainFunction
tcg-llvm-tb-506-8048a0e
310 [State 507] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 506 not yet applied), shell_len: 1024, eip: 0x00000000

310 [State 507] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 13 instructions, PCs: bfba357a bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
310 [State 507] Terminating state 507 with message 'eliminated this false positive, execution path subset of another success'
310 [State 507] Switching from state 507 to state 0
Copied 34928 (count=1)
Deleting state 507 0x0x2ad80900
310 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 506
>> fuzzInit: datum forking for value 507
>> fuzzInit: datum forking for value 507
310 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 507)
        (ReadLSB w32 0 v507_fuzz_symb_507)))
    state 508 with condition (Not (Eq false
         (Eq (w32 507)
             (ReadLSB w32 0 v507_fuzz_symb_507))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-507-8048a0e
Size=2 Low=0 splitIndex=1 high=1
310 [State 0] Switching from state 0 to state 508
Copied 34928 (count=1)
Finalizing TB execution 508
s2e_dummyMainFunction
tcg-llvm-tb-507-8048a0e
Firing timer event
310 [State 508] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 507 not yet applied), shell_len: 1024, eip: 0x00000000

310 [State 508] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
311 [State 508] Leaving buffer range @0xc126f278, 9 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
311 [State 508] Killing state 508
311 [State 508] Terminating state 508 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
311 [State 508] Switching from state 508 to state 0
Copied 34928 (count=1)
Deleting state 508 0x0x2ad80900
311 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 507
>> fuzzInit: datum forking for value 508
>> fuzzInit: datum forking for value 508
311 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 508)
        (ReadLSB w32 0 v508_fuzz_symb_508)))
    state 509 with condition (Not (Eq false
         (Eq (w32 508)
             (ReadLSB w32 0 v508_fuzz_symb_508))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-508-8048a0e
Size=2 Low=0 splitIndex=1 high=1
311 [State 0] Switching from state 0 to state 509
Copied 34928 (count=1)
Finalizing TB execution 509
s2e_dummyMainFunction
tcg-llvm-tb-508-8048a0e
311 [State 509] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 508 not yet applied), shell_len: 1024, eip: 0x00000000

311 [State 509] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 12 instructions, PCs: bfba357c bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
311 [State 509] Terminating state 509 with message 'eliminated this false positive, execution path subset of another success'
311 [State 509] Switching from state 509 to state 0
Copied 34928 (count=1)
Deleting state 509 0x0x2b052040
311 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 508
>> fuzzInit: datum forking for value 509
>> fuzzInit: datum forking for value 509
311 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 509)
        (ReadLSB w32 0 v509_fuzz_symb_509)))
    state 510 with condition (Not (Eq false
         (Eq (w32 509)
             (ReadLSB w32 0 v509_fuzz_symb_509))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-509-8048a0e
Size=2 Low=0 splitIndex=1 high=1
311 [State 0] Switching from state 0 to state 510
Copied 34928 (count=1)
Finalizing TB execution 510
s2e_dummyMainFunction
tcg-llvm-tb-509-8048a0e
Firing timer event
312 [State 510] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 509 not yet applied), shell_len: 1024, eip: 0x00000000

312 [State 510] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
312 [State 510] Leaving buffer range @0xc126f278, 8 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
312 [State 510] Killing state 510
312 [State 510] Terminating state 510 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
312 [State 510] Switching from state 510 to state 0
Copied 34928 (count=1)
Deleting state 510 0x0x2b052040
312 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 509
>> fuzzInit: datum forking for value 510
>> fuzzInit: datum forking for value 510
312 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 510)
        (ReadLSB w32 0 v510_fuzz_symb_510)))
    state 511 with condition (Not (Eq false
         (Eq (w32 510)
             (ReadLSB w32 0 v510_fuzz_symb_510))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-510-8048a0e
Size=2 Low=0 splitIndex=1 high=1
312 [State 0] Switching from state 0 to state 511
Copied 34928 (count=1)
Finalizing TB execution 511
s2e_dummyMainFunction
tcg-llvm-tb-510-8048a0e
312 [State 511] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 510 not yet applied), shell_len: 1024, eip: 0x00000000

312 [State 511] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 11 instructions, PCs: bfba357e bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
312 [State 511] Terminating state 511 with message 'eliminated this false positive, execution path subset of another success'
312 [State 511] Switching from state 511 to state 0
Copied 34928 (count=1)
Deleting state 511 0x0x2b052040
312 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 510
>> fuzzInit: datum forking for value 511
>> fuzzInit: datum forking for value 511
313 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 511)
        (ReadLSB w32 0 v511_fuzz_symb_511)))
    state 512 with condition (Not (Eq false
         (Eq (w32 511)
             (ReadLSB w32 0 v511_fuzz_symb_511))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-511-8048a0e
Size=2 Low=0 splitIndex=1 high=1
313 [State 0] Switching from state 0 to state 512
Copied 34928 (count=1)
Finalizing TB execution 512
s2e_dummyMainFunction
tcg-llvm-tb-511-8048a0e
Firing timer event
313 [State 512] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 511 not yet applied), shell_len: 1024, eip: 0x00000000

313 [State 512] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
313 [State 512] Leaving buffer range @0xc126f278, 7 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
313 [State 512] Killing state 512
313 [State 512] Terminating state 512 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
313 [State 512] Switching from state 512 to state 0
Copied 34928 (count=1)
Deleting state 512 0x0x2b052040
313 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 511
>> fuzzInit: datum forking for value 512
>> fuzzInit: datum forking for value 512
>> fuzzInit: datum forking for value 512
313 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 512)
        (ReadLSB w32 0 v512_fuzz_symb_512)))
    state 513 with condition (Not (Eq false
         (Eq (w32 512)
             (ReadLSB w32 0 v512_fuzz_symb_512))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-512-8048a0e
Size=2 Low=0 splitIndex=1 high=1
313 [State 0] Switching from state 0 to state 513
Copied 34928 (count=1)
Finalizing TB execution 513
s2e_dummyMainFunction
tcg-llvm-tb-512-8048a0e
313 [State 513] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 512 not yet applied), shell_len: 1024, eip: 0x00000000

313 [State 513] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 10 instructions, PCs: bfba3580 bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
313 [State 513] Terminating state 513 with message 'eliminated this false positive, execution path subset of another success'
313 [State 513] Switching from state 513 to state 0
Copied 34928 (count=1)
Deleting state 513 0x0x2b0dd5b0
314 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 512
>> fuzzInit: datum forking for value 513
>> fuzzInit: datum forking for value 513
314 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 513)
        (ReadLSB w32 0 v513_fuzz_symb_513)))
    state 514 with condition (Not (Eq false
         (Eq (w32 513)
             (ReadLSB w32 0 v513_fuzz_symb_513))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-513-8048a0e
Size=2 Low=0 splitIndex=1 high=1
314 [State 0] Switching from state 0 to state 514
Copied 34928 (count=1)
Finalizing TB execution 514
s2e_dummyMainFunction
tcg-llvm-tb-513-8048a0e
Firing timer event
314 [State 514] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 513 not yet applied), shell_len: 1024, eip: 0x00000000

314 [State 514] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
314 [State 514] Leaving buffer range @0xc1141730, 6 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
314 [State 514] Killing state 514
314 [State 514] Terminating state 514 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
314 [State 514] Switching from state 514 to state 0
Copied 34928 (count=1)
Deleting state 514 0x0x2b0dd5b0
314 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 513
>> fuzzInit: datum forking for value 514
>> fuzzInit: datum forking for value 514
314 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 514)
        (ReadLSB w32 0 v514_fuzz_symb_514)))
    state 515 with condition (Not (Eq false
         (Eq (w32 514)
             (ReadLSB w32 0 v514_fuzz_symb_514))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-514-8048a0e
Size=2 Low=0 splitIndex=1 high=1
315 [State 0] Switching from state 0 to state 515
Copied 34928 (count=1)
Finalizing TB execution 515
s2e_dummyMainFunction
tcg-llvm-tb-514-8048a0e
315 [State 515] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 514 not yet applied), shell_len: 1024, eip: 0x00000000

315 [State 515] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 8 instructions, PCs: bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
315 [State 515] Terminating state 515 with message 'eliminated this false positive, execution path subset of another success'
315 [State 515] Switching from state 515 to state 0
Copied 34928 (count=1)
Deleting state 515 0x0x2b0dd5b0
315 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 514
>> fuzzInit: datum forking for value 515
>> fuzzInit: datum forking for value 515
315 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 515)
        (ReadLSB w32 0 v515_fuzz_symb_515)))
    state 516 with condition (Not (Eq false
         (Eq (w32 515)
             (ReadLSB w32 0 v515_fuzz_symb_515))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-515-8048a0e
Size=2 Low=0 splitIndex=1 high=1
315 [State 0] Switching from state 0 to state 516
Copied 34928 (count=1)
Finalizing TB execution 516
s2e_dummyMainFunction
tcg-llvm-tb-515-8048a0e
Firing timer event
315 [State 516] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 515 not yet applied), shell_len: 1024, eip: 0x00000000

315 [State 516] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 7 instructions, PCs: bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
315 [State 516] Terminating state 516 with message 'eliminated this false positive, execution path subset of another success'
315 [State 516] Switching from state 516 to state 0
Copied 34928 (count=1)
Deleting state 516 0x0x2b0dd5b0
315 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 515
>> fuzzInit: datum forking for value 516
>> fuzzInit: datum forking for value 516
316 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 516)
        (ReadLSB w32 0 v516_fuzz_symb_516)))
    state 517 with condition (Not (Eq false
         (Eq (w32 516)
             (ReadLSB w32 0 v516_fuzz_symb_516))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-516-8048a0e
Size=2 Low=0 splitIndex=1 high=1
316 [State 0] Switching from state 0 to state 517
Copied 34928 (count=1)
Finalizing TB execution 517
s2e_dummyMainFunction
tcg-llvm-tb-516-8048a0e
316 [State 517] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 516 not yet applied), shell_len: 1024, eip: 0x00000000

316 [State 517] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
316 [State 517] Leaving buffer range @0xc126f278, 5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
316 [State 517] Killing state 517
316 [State 517] Terminating state 517 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
316 [State 517] Switching from state 517 to state 0
Copied 34928 (count=1)
Deleting state 517 0x0x2b0dd5b0
316 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 516
>> fuzzInit: datum forking for value 517
>> fuzzInit: datum forking for value 517
>> fuzzInit: datum forking for value 517
316 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 517)
        (ReadLSB w32 0 v517_fuzz_symb_517)))
    state 518 with condition (Not (Eq false
         (Eq (w32 517)
             (ReadLSB w32 0 v517_fuzz_symb_517))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-517-8048a0e
Size=2 Low=0 splitIndex=1 high=1
316 [State 0] Switching from state 0 to state 518
Copied 34928 (count=1)
Finalizing TB execution 518
s2e_dummyMainFunction
tcg-llvm-tb-517-8048a0e
Firing timer event
316 [State 518] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 517 not yet applied), shell_len: 1024, eip: 0x00000000

316 [State 518] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651524:0xbfba3504
316 [State 518] Terminating state 518 with message 'eliminated this false positive, out of range syscall number found at eip'
316 [State 518] Switching from state 518 to state 0
Copied 34928 (count=1)
Deleting state 518 0x0x2b0dd5b0
316 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 517
>> fuzzInit: datum forking for value 518
>> fuzzInit: datum forking for value 518
317 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 518)
        (ReadLSB w32 0 v518_fuzz_symb_518)))
    state 519 with condition (Not (Eq false
         (Eq (w32 518)
             (ReadLSB w32 0 v518_fuzz_symb_518))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-518-8048a0e
Size=2 Low=0 splitIndex=1 high=1
317 [State 0] Switching from state 0 to state 519
Copied 34928 (count=1)
Finalizing TB execution 519
s2e_dummyMainFunction
tcg-llvm-tb-518-8048a0e
317 [State 519] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 518 not yet applied), shell_len: 1024, eip: 0x00000000

317 [State 519] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
317 [State 519] Leaving buffer range @0xc1003ca4, 2 IoB insns; prev insn @0xbfba3588
  1   1B @0xbfba3588: db                invalid                 
317 [State 519] Entering buffer range @0xbfba3588, 222 OoB insns
317 [State 519] Leaving buffer range @0xc126f278, 5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
317 [State 519] Killing state 519
317 [State 519] Terminating state 519 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
317 [State 519] Switching from state 519 to state 0
Copied 34928 (count=1)
Deleting state 519 0x0x2b0dd5b0
Firing timer event
317 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 518
>> fuzzInit: datum forking for value 519
>> fuzzInit: datum forking for value 519
317 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 519)
        (ReadLSB w32 0 v519_fuzz_symb_519)))
    state 520 with condition (Not (Eq false
         (Eq (w32 519)
             (ReadLSB w32 0 v519_fuzz_symb_519))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-519-8048a0e
Size=2 Low=0 splitIndex=1 high=1
317 [State 0] Switching from state 0 to state 520
Copied 34928 (count=1)
Finalizing TB execution 520
s2e_dummyMainFunction
tcg-llvm-tb-519-8048a0e
318 [State 520] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 519 not yet applied), shell_len: 1024, eip: 0x00000000

318 [State 520] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651655:0xbfba3587
318 [State 520] Terminating state 520 with message 'eliminated this false positive, out of range syscall number found at eip'
318 [State 520] Switching from state 520 to state 0
Copied 34928 (count=1)
Deleting state 520 0x0x2b0dd5b0
318 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 519
>> fuzzInit: datum forking for value 520
>> fuzzInit: datum forking for value 520
318 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 520)
        (ReadLSB w32 0 v520_fuzz_symb_520)))
    state 521 with condition (Not (Eq false
         (Eq (w32 520)
             (ReadLSB w32 0 v520_fuzz_symb_520))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-520-8048a0e
Size=2 Low=0 splitIndex=1 high=1
318 [State 0] Switching from state 0 to state 521
Copied 34928 (count=1)
Finalizing TB execution 521
s2e_dummyMainFunction
tcg-llvm-tb-520-8048a0e
318 [State 521] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 520 not yet applied), shell_len: 1024, eip: 0x00000000

318 [State 521] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
318 [State 521] Leaving buffer range @0xc1003ca4, 1 IoB insns; prev insn @0xbfba3588
  1   1B @0xbfba3588: db                invalid                 
318 [State 521] Entering buffer range @0xbfba3588, 236 OoB insns
318 [State 521] Leaving buffer range @0xc126f278, 5 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
318 [State 521] Killing state 521
318 [State 521] Terminating state 521 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
318 [State 521] Switching from state 521 to state 0
Copied 34928 (count=1)
Deleting state 521 0x0x2b0dd5b0
318 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 520
>> fuzzInit: datum forking for value 521
>> fuzzInit: datum forking for value 521
319 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 521)
        (ReadLSB w32 0 v521_fuzz_symb_521)))
    state 522 with condition (Not (Eq false
         (Eq (w32 521)
             (ReadLSB w32 0 v521_fuzz_symb_521))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-521-8048a0e
Size=2 Low=0 splitIndex=1 high=1
319 [State 0] Switching from state 0 to state 522
Copied 34928 (count=1)
Finalizing TB execution 522
s2e_dummyMainFunction
tcg-llvm-tb-521-8048a0e
319 [State 522] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 521 not yet applied), shell_len: 1024, eip: 0x00000000

319 [State 522] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651657:0xbfba3589
319 [State 522] Terminating state 522 with message 'eliminated this false positive, out of range syscall number found at eip'
319 [State 522] Switching from state 522 to state 0
Copied 34928 (count=1)
Deleting state 522 0x0x2b4dfb50
319 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 521
>> fuzzInit: datum forking for value 522
>> fuzzInit: datum forking for value 522
319 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 522)
        (ReadLSB w32 0 v522_fuzz_symb_522)))
    state 523 with condition (Not (Eq false
         (Eq (w32 522)
             (ReadLSB w32 0 v522_fuzz_symb_522))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-522-8048a0e
Size=2 Low=0 splitIndex=1 high=1
319 [State 0] Switching from state 0 to state 523
Copied 34928 (count=1)
Finalizing TB execution 523
s2e_dummyMainFunction
tcg-llvm-tb-522-8048a0e
Firing timer event
319 [State 523] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 522 not yet applied), shell_len: 1024, eip: 0x00000000

319 [State 523] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651658:0xbfba358a
319 [State 523] Terminating state 523 with message 'eliminated this false positive, out of range syscall number found at eip'
319 [State 523] Switching from state 523 to state 0
Copied 34928 (count=1)
Deleting state 523 0x0x2b4dfb50
320 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 522
>> fuzzInit: datum forking for value 523
>> fuzzInit: datum forking for value 523
320 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 523)
        (ReadLSB w32 0 v523_fuzz_symb_523)))
    state 524 with condition (Not (Eq false
         (Eq (w32 523)
             (ReadLSB w32 0 v523_fuzz_symb_523))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-523-8048a0e
Size=2 Low=0 splitIndex=1 high=1
320 [State 0] Switching from state 0 to state 524
Copied 34928 (count=1)
Finalizing TB execution 524
s2e_dummyMainFunction
tcg-llvm-tb-523-8048a0e
320 [State 524] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 523 not yet applied), shell_len: 1024, eip: 0x00000000

320 [State 524] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
320 [State 524] Leaving buffer range @0xc126f278, 4 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
320 [State 524] Killing state 524
320 [State 524] Terminating state 524 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
320 [State 524] Switching from state 524 to state 0
Copied 34928 (count=1)
Deleting state 524 0x0x2b4dfb50
320 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 523
>> fuzzInit: datum forking for value 524
>> fuzzInit: datum forking for value 524
320 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 524)
        (ReadLSB w32 0 v524_fuzz_symb_524)))
    state 525 with condition (Not (Eq false
         (Eq (w32 524)
             (ReadLSB w32 0 v524_fuzz_symb_524))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-524-8048a0e
Size=2 Low=0 splitIndex=1 high=1
320 [State 0] Switching from state 0 to state 525
Copied 34928 (count=1)
Finalizing TB execution 525
s2e_dummyMainFunction
tcg-llvm-tb-524-8048a0e
Firing timer event
320 [State 525] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 524 not yet applied), shell_len: 1024, eip: 0x00000000

320 [State 525] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651660:0xbfba358c
321 [State 525] Terminating state 525 with message 'eliminated this false positive, out of range syscall number found at eip'
321 [State 525] Switching from state 525 to state 0
Copied 34928 (count=1)
Deleting state 525 0x0x2b4dfb50
321 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 524
>> fuzzInit: datum forking for value 525
>> fuzzInit: datum forking for value 525
321 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 525)
        (ReadLSB w32 0 v525_fuzz_symb_525)))
    state 526 with condition (Not (Eq false
         (Eq (w32 525)
             (ReadLSB w32 0 v525_fuzz_symb_525))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-525-8048a0e
Size=2 Low=0 splitIndex=1 high=1
321 [State 0] Switching from state 0 to state 526
Copied 34928 (count=1)
Finalizing TB execution 526
s2e_dummyMainFunction
tcg-llvm-tb-525-8048a0e
321 [State 526] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 525 not yet applied), shell_len: 1024, eip: 0x00000000

321 [State 526] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
321 [State 526] Leaving buffer range @0xc126f278, 3 IoB insns; prev insn @0xbfba3596
  1   5B @0xbfba3596: e8 ff ff ff 48    call 0x49000004         
321 [State 526] Killing state 526
321 [State 526] Terminating state 526 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
321 [State 526] Switching from state 526 to state 0
Copied 34928 (count=1)
Deleting state 526 0x0x2b4dfb50
321 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 525
>> fuzzInit: datum forking for value 526
>> fuzzInit: datum forking for value 526
322 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 526)
        (ReadLSB w32 0 v526_fuzz_symb_526)))
    state 527 with condition (Not (Eq false
         (Eq (w32 526)
             (ReadLSB w32 0 v526_fuzz_symb_526))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-526-8048a0e
Size=2 Low=0 splitIndex=1 high=1
322 [State 0] Switching from state 0 to state 527
Copied 34928 (count=1)
Finalizing TB execution 527
s2e_dummyMainFunction
tcg-llvm-tb-526-8048a0e
Firing timer event
322 [State 527] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 526 not yet applied), shell_len: 1024, eip: 0x00000000

322 [State 527] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651662:0xbfba358e
322 [State 527] Terminating state 527 with message 'eliminated this false positive, out of range syscall number found at eip'
322 [State 527] Switching from state 527 to state 0
Copied 34928 (count=1)
Deleting state 527 0x0x2b6c8e10
322 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 526
>> fuzzInit: datum forking for value 527
>> fuzzInit: datum forking for value 527
322 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 527)
        (ReadLSB w32 0 v527_fuzz_symb_527)))
    state 528 with condition (Not (Eq false
         (Eq (w32 527)
             (ReadLSB w32 0 v527_fuzz_symb_527))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-527-8048a0e
Size=2 Low=0 splitIndex=1 high=1
322 [State 0] Switching from state 0 to state 528
Copied 34928 (count=1)
Finalizing TB execution 528
s2e_dummyMainFunction
tcg-llvm-tb-527-8048a0e
322 [State 528] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 527 not yet applied), shell_len: 1024, eip: 0x00000000

322 [State 528] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
322 [State 528] Leaving buffer range @0xc126f278, 2 IoB insns; prev insn @0xbfba3596
  1   5B @0xbfba3596: e8 ff ff ff 48    call 0x49000004         
322 [State 528] Killing state 528
322 [State 528] Terminating state 528 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
322 [State 528] Switching from state 528 to state 0
Copied 34928 (count=1)
Deleting state 528 0x0x2b6c8e10
323 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 527
>> fuzzInit: datum forking for value 528
>> fuzzInit: datum forking for value 528
323 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 528)
        (ReadLSB w32 0 v528_fuzz_symb_528)))
    state 529 with condition (Not (Eq false
         (Eq (w32 528)
             (ReadLSB w32 0 v528_fuzz_symb_528))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-528-8048a0e
Size=2 Low=0 splitIndex=1 high=1
323 [State 0] Switching from state 0 to state 529
Copied 34928 (count=1)
Finalizing TB execution 529
s2e_dummyMainFunction
tcg-llvm-tb-528-8048a0e
Firing timer event
323 [State 529] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 528 not yet applied), shell_len: 1024, eip: 0x00000000

323 [State 529] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651521:0xbfba3501
323 [State 529] Terminating state 529 with message 'eliminated this false positive, out of range syscall number found at eip'
323 [State 529] Switching from state 529 to state 0
Copied 34928 (count=1)
Deleting state 529 0x0x2b5116a0
323 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 528
>> fuzzInit: datum forking for value 529
>> fuzzInit: datum forking for value 529
323 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 529)
        (ReadLSB w32 0 v529_fuzz_symb_529)))
    state 530 with condition (Not (Eq false
         (Eq (w32 529)
             (ReadLSB w32 0 v529_fuzz_symb_529))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-529-8048a0e
Size=2 Low=0 splitIndex=1 high=1
323 [State 0] Switching from state 0 to state 530
Copied 34928 (count=1)
Finalizing TB execution 530
s2e_dummyMainFunction
tcg-llvm-tb-529-8048a0e
324 [State 530] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 529 not yet applied), shell_len: 1024, eip: 0x00000000

324 [State 530] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
324 [State 530] Leaving buffer range @0xc126f278, 3 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
324 [State 530] Killing state 530
324 [State 530] Terminating state 530 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
324 [State 530] Switching from state 530 to state 0
Copied 34928 (count=1)
Deleting state 530 0x0x2b5116a0
324 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 529
>> fuzzInit: datum forking for value 530
>> fuzzInit: datum forking for value 530
324 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 530)
        (ReadLSB w32 0 v530_fuzz_symb_530)))
    state 531 with condition (Not (Eq false
         (Eq (w32 530)
             (ReadLSB w32 0 v530_fuzz_symb_530))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-530-8048a0e
Size=2 Low=0 splitIndex=1 high=1
324 [State 0] Switching from state 0 to state 531
Copied 34928 (count=1)
Finalizing TB execution 531
s2e_dummyMainFunction
tcg-llvm-tb-530-8048a0e
Firing timer event
324 [State 531] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 530 not yet applied), shell_len: 1024, eip: 0x00000000

324 [State 531] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651666:0xbfba3592
324 [State 531] Terminating state 531 with message 'eliminated this false positive, out of range syscall number found at eip'
324 [State 531] Switching from state 531 to state 0
Copied 34928 (count=1)
Deleting state 531 0x0x2b781490
324 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 530
>> fuzzInit: datum forking for value 531
>> fuzzInit: datum forking for value 531
325 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 531)
        (ReadLSB w32 0 v531_fuzz_symb_531)))
    state 532 with condition (Not (Eq false
         (Eq (w32 531)
             (ReadLSB w32 0 v531_fuzz_symb_531))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-531-8048a0e
Size=2 Low=0 splitIndex=1 high=1
325 [State 0] Switching from state 0 to state 532
Copied 34928 (count=1)
Finalizing TB execution 532
s2e_dummyMainFunction
tcg-llvm-tb-531-8048a0e
325 [State 532] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 531 not yet applied), shell_len: 1024, eip: 0x00000000

325 [State 532] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
!! Wrong syscall number makes no sense (>512) 3216651667:0xbfba3593
325 [State 532] Terminating state 532 with message 'eliminated this false positive, out of range syscall number found at eip'
325 [State 532] Switching from state 532 to state 0
Copied 34928 (count=1)
Deleting state 532 0x0x2b887b90
325 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 531
>> fuzzInit: datum forking for value 532
>> fuzzInit: datum forking for value 532
325 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 532)
        (ReadLSB w32 0 v532_fuzz_symb_532)))
    state 533 with condition (Not (Eq false
         (Eq (w32 532)
             (ReadLSB w32 0 v532_fuzz_symb_532))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-532-8048a0e
Size=2 Low=0 splitIndex=1 high=1
325 [State 0] Switching from state 0 to state 533
Copied 34928 (count=1)
Finalizing TB execution 533
s2e_dummyMainFunction
tcg-llvm-tb-532-8048a0e
Firing timer event
325 [State 533] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 532 not yet applied), shell_len: 1024, eip: 0x00000000

325 [State 533] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
325 [State 533] Leaving buffer range @0xc1003cd0, 2 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
325 [State 533] Killing state 533
325 [State 533] Terminating state 533 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
325 [State 533] Switching from state 533 to state 0
Copied 34928 (count=1)
Deleting state 533 0x0x2b887b90
326 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 532
>> fuzzInit: datum forking for value 533
>> fuzzInit: datum forking for value 533
326 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 533)
        (ReadLSB w32 0 v533_fuzz_symb_533)))
    state 534 with condition (Not (Eq false
         (Eq (w32 533)
             (ReadLSB w32 0 v533_fuzz_symb_533))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-533-8048a0e
Size=2 Low=0 splitIndex=1 high=1
326 [State 0] Switching from state 0 to state 534
Copied 34928 (count=1)
Finalizing TB execution 534
s2e_dummyMainFunction
tcg-llvm-tb-533-8048a0e
326 [State 534] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 533 not yet applied), shell_len: 1024, eip: 0x00000000

326 [State 534] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 9 instructions, PCs: bfba3595 bfba3582 bfba3583 bfba3585 bfba3587 bfba3589 bfba358a bfba358c bfba358e 
326 [State 534] Terminating state 534 with message 'eliminated this false positive, execution path subset of another success'
326 [State 534] Switching from state 534 to state 0
Copied 34928 (count=1)
Deleting state 534 0x0x2b4ad940
326 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 533
>> fuzzInit: datum forking for value 534
>> fuzzInit: datum forking for value 534
326 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 534)
        (ReadLSB w32 0 v534_fuzz_symb_534)))
    state 535 with condition (Not (Eq false
         (Eq (w32 534)
             (ReadLSB w32 0 v534_fuzz_symb_534))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-534-8048a0e
Size=2 Low=0 splitIndex=1 high=1
326 [State 0] Switching from state 0 to state 535
Copied 34928 (count=1)
Finalizing TB execution 535
s2e_dummyMainFunction
tcg-llvm-tb-534-8048a0e
Firing timer event
326 [State 535] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 534 not yet applied), shell_len: 1024, eip: 0x00000000

326 [State 535] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
327 [State 535] Leaving buffer range @0xc126f278, 1 IoB insns; prev insn @0xbfba3596
  1   5B @0xbfba3596: e8 ff ff ff 48    call 0x49000004         
327 [State 535] Killing state 535
327 [State 535] Terminating state 535 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
327 [State 535] Switching from state 535 to state 0
Copied 34928 (count=1)
Deleting state 535 0x0x2b7b58e0
327 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 534
>> fuzzInit: datum forking for value 535
>> fuzzInit: datum forking for value 535
327 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 535)
        (ReadLSB w32 0 v535_fuzz_symb_535)))
    state 536 with condition (Not (Eq false
         (Eq (w32 535)
             (ReadLSB w32 0 v535_fuzz_symb_535))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-535-8048a0e
Size=2 Low=0 splitIndex=1 high=1
327 [State 0] Switching from state 0 to state 536
Copied 34928 (count=1)
Finalizing TB execution 536
s2e_dummyMainFunction
tcg-llvm-tb-535-8048a0e
327 [State 536] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 535 not yet applied), shell_len: 1024, eip: 0x00000000

327 [State 536] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
327 [State 536] Leaving buffer range @0xc1003cd0, 1 IoB insns; prev insn @0xbfba3597
  1   2B @0xbfba3597: ff ff             invalid                 
Firing timer event
327 [State 536] Killing state 536
327 [State 536] Terminating state 536 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
327 [State 536] Switching from state 536 to state 0
Copied 34928 (count=1)
Deleting state 536 0x0x2b7b58e0
328 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 535
>> fuzzInit: datum forking for value 536
>> fuzzInit: datum forking for value 536
328 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 536)
        (ReadLSB w32 0 v536_fuzz_symb_536)))
    state 537 with condition (Not (Eq false
         (Eq (w32 536)
             (ReadLSB w32 0 v536_fuzz_symb_536))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-536-8048a0e
Size=2 Low=0 splitIndex=1 high=1
328 [State 0] Switching from state 0 to state 537
Copied 34928 (count=1)
Finalizing TB execution 537
s2e_dummyMainFunction
tcg-llvm-tb-536-8048a0e
328 [State 537] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 536 not yet applied), shell_len: 1024, eip: 0x00000000

328 [State 537] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
328 [State 537] Leaving buffer range @0xc1003cd0, 1 IoB insns; prev insn @0xbfba3598
  1   2B @0xbfba3598: ff ff             invalid                 
328 [State 537] Killing state 537
328 [State 537] Terminating state 537 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
328 [State 537] Switching from state 537 to state 0
Copied 34928 (count=1)
Deleting state 537 0x0x2b7f8d70
328 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 536
>> fuzzInit: datum forking for value 537
>> fuzzInit: datum forking for value 537
328 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 537)
        (ReadLSB w32 0 v537_fuzz_symb_537)))
    state 538 with condition (Not (Eq false
         (Eq (w32 537)
             (ReadLSB w32 0 v537_fuzz_symb_537))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-537-8048a0e
Size=2 Low=0 splitIndex=1 high=1
328 [State 0] Switching from state 0 to state 538
Copied 34928 (count=1)
Finalizing TB execution 538
s2e_dummyMainFunction
tcg-llvm-tb-537-8048a0e
Firing timer event
329 [State 538] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 537 not yet applied), shell_len: 1024, eip: 0x00000000

329 [State 538] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
329 [State 538] Leaving buffer range @0xc126f4b4, 6 IoB insns; prev insn @0xbfba35a1
  1   2B @0xbfba35a1: 77 6f             ja 0x71                 
329 [State 538] Killing state 538
329 [State 538] Terminating state 538 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
329 [State 538] Switching from state 538 to state 0
Copied 34928 (count=1)
Deleting state 538 0x0x2b7f8d70
329 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 537
>> fuzzInit: datum forking for value 538
>> fuzzInit: datum forking for value 538
329 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 538)
        (ReadLSB w32 0 v538_fuzz_symb_538)))
    state 539 with condition (Not (Eq false
         (Eq (w32 538)
             (ReadLSB w32 0 v538_fuzz_symb_538))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-538-8048a0e
Size=2 Low=0 splitIndex=1 high=1
329 [State 0] Switching from state 0 to state 539
Copied 34928 (count=1)
Finalizing TB execution 539
s2e_dummyMainFunction
tcg-llvm-tb-538-8048a0e
329 [State 539] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 538 not yet applied), shell_len: 1024, eip: 0x00000000

329 [State 539] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
329 [State 539] Leaving buffer range @0xc126f4b4, 6 IoB insns; prev insn @0xbfba35a1
  1   2B @0xbfba35a1: 77 6f             ja 0x71                 
Firing timer event
329 [State 539] Killing state 539
329 [State 539] Terminating state 539 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
329 [State 539] Switching from state 539 to state 0
Copied 34928 (count=1)
Deleting state 539 0x0x2b9b2500
330 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 538
>> fuzzInit: datum forking for value 539
>> fuzzInit: datum forking for value 539
330 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 539)
        (ReadLSB w32 0 v539_fuzz_symb_539)))
    state 540 with condition (Not (Eq false
         (Eq (w32 539)
             (ReadLSB w32 0 v539_fuzz_symb_539))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-539-8048a0e
Size=2 Low=0 splitIndex=1 high=1
330 [State 0] Switching from state 0 to state 540
Copied 34928 (count=1)
Finalizing TB execution 540
s2e_dummyMainFunction
tcg-llvm-tb-539-8048a0e
330 [State 540] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 539 not yet applied), shell_len: 1024, eip: 0x00000000

330 [State 540] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
330 [State 540] Leaving buffer range @0xc126f4b4, 5 IoB insns; prev insn @0xbfba35a1
  1   2B @0xbfba35a1: 77 6f             ja 0x71                 
330 [State 540] Killing state 540
330 [State 540] Terminating state 540 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
330 [State 540] Switching from state 540 to state 0
Copied 34928 (count=1)
Deleting state 540 0x0x2b9b2500
330 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 539
>> fuzzInit: datum forking for value 540
>> fuzzInit: datum forking for value 540
330 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 540)
        (ReadLSB w32 0 v540_fuzz_symb_540)))
    state 541 with condition (Not (Eq false
         (Eq (w32 540)
             (ReadLSB w32 0 v540_fuzz_symb_540))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-540-8048a0e
Size=2 Low=0 splitIndex=1 high=1
330 [State 0] Switching from state 0 to state 541
Copied 34928 (count=1)
Finalizing TB execution 541
s2e_dummyMainFunction
tcg-llvm-tb-540-8048a0e
Firing timer event
331 [State 541] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 540 not yet applied), shell_len: 1024, eip: 0x00000000

331 [State 541] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
331 [State 541] Leaving buffer range @0xc126f4b4, 5 IoB insns; prev insn @0xbfba35a1
  1   2B @0xbfba35a1: 77 6f             ja 0x71                 
331 [State 541] Killing state 541
331 [State 541] Terminating state 541 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
331 [State 541] Switching from state 541 to state 0
Copied 34928 (count=1)
Deleting state 541 0x0x2b9b2500
331 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 540
>> fuzzInit: datum forking for value 541
>> fuzzInit: datum forking for value 541
331 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 541)
        (ReadLSB w32 0 v541_fuzz_symb_541)))
    state 542 with condition (Not (Eq false
         (Eq (w32 541)
             (ReadLSB w32 0 v541_fuzz_symb_541))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-541-8048a0e
Size=2 Low=0 splitIndex=1 high=1
331 [State 0] Switching from state 0 to state 542
Copied 34928 (count=1)
Finalizing TB execution 542
s2e_dummyMainFunction
tcg-llvm-tb-541-8048a0e
331 [State 542] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 541 not yet applied), shell_len: 1024, eip: 0x00000000

331 [State 542] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
331 [State 542] Leaving buffer range @0xc126f4b4, 4 IoB insns; prev insn @0xbfba35a1
  1   2B @0xbfba35a1: 77 6f             ja 0x71                 
331 [State 542] Killing state 542
331 [State 542] Terminating state 542 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
331 [State 542] Switching from state 542 to state 0
Copied 34928 (count=1)
Deleting state 542 0x0x2bbb01c0
332 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 541
Firing timer event
>> fuzzInit: datum forking for value 542
>> fuzzInit: datum forking for value 542
332 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 542)
        (ReadLSB w32 0 v542_fuzz_symb_542)))
    state 543 with condition (Not (Eq false
         (Eq (w32 542)
             (ReadLSB w32 0 v542_fuzz_symb_542))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-542-8048a0e
Size=2 Low=0 splitIndex=1 high=1
332 [State 0] Switching from state 0 to state 543
Copied 34928 (count=1)
Finalizing TB execution 543
s2e_dummyMainFunction
tcg-llvm-tb-542-8048a0e
332 [State 543] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 542 not yet applied), shell_len: 1024, eip: 0x00000000

332 [State 543] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
332 [State 543] Leaving buffer range @0xc126f4b4, 3 IoB insns; prev insn @0xbfba35a1
  1   2B @0xbfba35a1: 77 6f             ja 0x71                 
332 [State 543] Killing state 543
332 [State 543] Terminating state 543 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
332 [State 543] Switching from state 543 to state 0
Copied 34928 (count=1)
Deleting state 543 0x0x2ba30b10
332 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 542
>> fuzzInit: datum forking for value 543
>> fuzzInit: datum forking for value 543
332 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 543)
        (ReadLSB w32 0 v543_fuzz_symb_543)))
    state 544 with condition (Not (Eq false
         (Eq (w32 543)
             (ReadLSB w32 0 v543_fuzz_symb_543))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-543-8048a0e
Size=2 Low=0 splitIndex=1 high=1
332 [State 0] Switching from state 0 to state 544
Copied 34928 (count=1)
Finalizing TB execution 544
s2e_dummyMainFunction
tcg-llvm-tb-543-8048a0e
332 [State 544] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 543 not yet applied), shell_len: 1024, eip: 0x00000000

332 [State 544] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
332 [State 544] Leaving buffer range @0xbfba3781, ba IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
Firing timer event
333 [State 544] Killing state 544
333 [State 544] Terminating state 544 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
333 [State 544] Switching from state 544 to state 0
Copied 34928 (count=1)
Deleting state 544 0x0x2ba30b10
333 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 543
>> fuzzInit: datum forking for value 544
>> fuzzInit: datum forking for value 544
333 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 544)
        (ReadLSB w32 0 v544_fuzz_symb_544)))
    state 545 with condition (Not (Eq false
         (Eq (w32 544)
             (ReadLSB w32 0 v544_fuzz_symb_544))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-544-8048a0e
Size=2 Low=0 splitIndex=1 high=1
333 [State 0] Switching from state 0 to state 545
Copied 34928 (count=1)
Finalizing TB execution 545
s2e_dummyMainFunction
tcg-llvm-tb-544-8048a0e
333 [State 545] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 544 not yet applied), shell_len: 1024, eip: 0x00000000

333 [State 545] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
333 [State 545] Leaving buffer range @0xc126f278, 2 IoB insns; prev insn @0xbfba35a3
  1   2B @0xbfba35a3: 72 6c             jb 0x6e                 
333 [State 545] Killing state 545
333 [State 545] Terminating state 545 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
333 [State 545] Switching from state 545 to state 0
Copied 34928 (count=1)
Deleting state 545 0x0x2bb4b310
333 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 544
>> fuzzInit: datum forking for value 545
>> fuzzInit: datum forking for value 545
334 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 545)
        (ReadLSB w32 0 v545_fuzz_symb_545)))
    state 546 with condition (Not (Eq false
         (Eq (w32 545)
             (ReadLSB w32 0 v545_fuzz_symb_545))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-545-8048a0e
Size=2 Low=0 splitIndex=1 high=1
334 [State 0] Switching from state 0 to state 546
Copied 34928 (count=1)
Finalizing TB execution 546
s2e_dummyMainFunction
tcg-llvm-tb-545-8048a0e
Firing timer event
334 [State 546] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 545 not yet applied), shell_len: 1024, eip: 0x00000000

334 [State 546] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
334 [State 546] Leaving buffer range @0xbfba3781, b9 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
334 [State 546] Killing state 546
334 [State 546] Terminating state 546 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
334 [State 546] Switching from state 546 to state 0
Copied 34928 (count=1)
Deleting state 546 0x0x2bb4b310
334 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 545
>> fuzzInit: datum forking for value 546
>> fuzzInit: datum forking for value 546
334 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 546)
        (ReadLSB w32 0 v546_fuzz_symb_546)))
    state 547 with condition (Not (Eq false
         (Eq (w32 546)
             (ReadLSB w32 0 v546_fuzz_symb_546))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-546-8048a0e
Size=2 Low=0 splitIndex=1 high=1
334 [State 0] Switching from state 0 to state 547
Copied 34928 (count=1)
Finalizing TB execution 547
s2e_dummyMainFunction
tcg-llvm-tb-546-8048a0e
334 [State 547] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 546 not yet applied), shell_len: 1024, eip: 0x00000000

334 [State 547] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
334 [State 547] Leaving buffer range @0xc126f4b4, 2 IoB insns; prev insn @0xbfba35a3
  1   2B @0xbfba35a3: 72 6c             jb 0x6e                 
334 [State 547] Killing state 547
334 [State 547] Terminating state 547 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
334 [State 547] Switching from state 547 to state 0
Copied 34928 (count=1)
Deleting state 547 0x0x2bb4b310
Firing timer event
335 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 546
>> fuzzInit: datum forking for value 547
>> fuzzInit: datum forking for value 547
335 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 547)
        (ReadLSB w32 0 v547_fuzz_symb_547)))
    state 548 with condition (Not (Eq false
         (Eq (w32 547)
             (ReadLSB w32 0 v547_fuzz_symb_547))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-547-8048a0e
Size=2 Low=0 splitIndex=1 high=1
335 [State 0] Switching from state 0 to state 548
Copied 34928 (count=1)
Finalizing TB execution 548
s2e_dummyMainFunction
tcg-llvm-tb-547-8048a0e
335 [State 548] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 547 not yet applied), shell_len: 1024, eip: 0x00000000

335 [State 548] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
335 [State 548] Leaving buffer range @0xbfba3783, ed IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
335 [State 548] Killing state 548
335 [State 548] Terminating state 548 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
335 [State 548] Switching from state 548 to state 0
Copied 34928 (count=1)
Deleting state 548 0x0x2bb4b310
335 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 547
>> fuzzInit: datum forking for value 548
>> fuzzInit: datum forking for value 548
335 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 548)
        (ReadLSB w32 0 v548_fuzz_symb_548)))
    state 549 with condition (Not (Eq false
         (Eq (w32 548)
             (ReadLSB w32 0 v548_fuzz_symb_548))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-548-8048a0e
Size=2 Low=0 splitIndex=1 high=1
335 [State 0] Switching from state 0 to state 549
Copied 34928 (count=1)
Finalizing TB execution 549
s2e_dummyMainFunction
tcg-llvm-tb-548-8048a0e
336 [State 549] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 548 not yet applied), shell_len: 1024, eip: 0x00000000

336 [State 549] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
336 [State 549] Leaving buffer range @0xc126f4b4, 24 IoB insns; prev insn @0xbfba35ed
  1   2B @0xbfba35ed:  0  0             add [eax], al           
336 [State 549] Killing state 549
336 [State 549] Terminating state 549 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
336 [State 549] Switching from state 549 to state 0
Copied 34928 (count=1)
Deleting state 549 0x0x2bb4b310
336 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 548
>> fuzzInit: datum forking for value 549
>> fuzzInit: datum forking for value 549
336 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 549)
        (ReadLSB w32 0 v549_fuzz_symb_549)))
    state 550 with condition (Not (Eq false
         (Eq (w32 549)
             (ReadLSB w32 0 v549_fuzz_symb_549))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-549-8048a0e
Size=2 Low=0 splitIndex=1 high=1
336 [State 0] Switching from state 0 to state 550
Copied 34928 (count=1)
Finalizing TB execution 550
s2e_dummyMainFunction
tcg-llvm-tb-549-8048a0e
336 [State 550] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 549 not yet applied), shell_len: 1024, eip: 0x00000000

336 [State 550] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
336 [State 550] Leaving buffer range @0xbfba3783, ec IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
336 [State 550] Killing state 550
336 [State 550] Terminating state 550 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
336 [State 550] Switching from state 550 to state 0
Copied 34928 (count=1)
Deleting state 550 0x0x2be47350
336 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 549
>> fuzzInit: datum forking for value 550
>> fuzzInit: datum forking for value 550
337 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 550)
        (ReadLSB w32 0 v550_fuzz_symb_550)))
    state 551 with condition (Not (Eq false
         (Eq (w32 550)
             (ReadLSB w32 0 v550_fuzz_symb_550))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-550-8048a0e
Size=2 Low=0 splitIndex=1 high=1
337 [State 0] Switching from state 0 to state 551
Copied 34928 (count=1)
Finalizing TB execution 551
s2e_dummyMainFunction
tcg-llvm-tb-550-8048a0e
Firing timer event
337 [State 551] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 550 not yet applied), shell_len: 1024, eip: 0x00000000

337 [State 551] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
337 [State 551] Leaving buffer range @0xbfba3783, ec IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
337 [State 551] Killing state 551
337 [State 551] Terminating state 551 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
337 [State 551] Switching from state 551 to state 0
Copied 34928 (count=1)
Deleting state 551 0x0x2bc6ef30
337 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 550
>> fuzzInit: datum forking for value 551
>> fuzzInit: datum forking for value 551
337 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 551)
        (ReadLSB w32 0 v551_fuzz_symb_551)))
    state 552 with condition (Not (Eq false
         (Eq (w32 551)
             (ReadLSB w32 0 v551_fuzz_symb_551))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-551-8048a0e
Size=2 Low=0 splitIndex=1 high=1
337 [State 0] Switching from state 0 to state 552
Copied 34928 (count=1)
Finalizing TB execution 552
s2e_dummyMainFunction
tcg-llvm-tb-551-8048a0e
337 [State 552] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 551 not yet applied), shell_len: 1024, eip: 0x00000000

337 [State 552] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
337 [State 552] Leaving buffer range @0xc126f278, 24 IoB insns; prev insn @0xbfba35f1
  1   2B @0xbfba35f1:  0  0             add [eax], al           
338 [State 552] Killing state 552
338 [State 552] Terminating state 552 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
338 [State 552] Switching from state 552 to state 0
Copied 34928 (count=1)
Deleting state 552 0x0x2be07230
338 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 551
>> fuzzInit: datum forking for value 552
>> fuzzInit: datum forking for value 552
338 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 552)
        (ReadLSB w32 0 v552_fuzz_symb_552)))
    state 553 with condition (Not (Eq false
         (Eq (w32 552)
             (ReadLSB w32 0 v552_fuzz_symb_552))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-552-8048a0e
Size=2 Low=0 splitIndex=1 high=1
338 [State 0] Switching from state 0 to state 553
Copied 34928 (count=1)
Finalizing TB execution 553
s2e_dummyMainFunction
tcg-llvm-tb-552-8048a0e
Firing timer event
338 [State 553] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 552 not yet applied), shell_len: 1024, eip: 0x00000000

338 [State 553] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
338 [State 553] Leaving buffer range @0xbfba3783, eb IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
338 [State 553] Killing state 553
338 [State 553] Terminating state 553 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
338 [State 553] Switching from state 553 to state 0
Copied 34928 (count=1)
Deleting state 553 0x0x2bb4b310
338 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 552
>> fuzzInit: datum forking for value 553
>> fuzzInit: datum forking for value 553
339 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 553)
        (ReadLSB w32 0 v553_fuzz_symb_553)))
    state 554 with condition (Not (Eq false
         (Eq (w32 553)
             (ReadLSB w32 0 v553_fuzz_symb_553))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-553-8048a0e
Size=2 Low=0 splitIndex=1 high=1
339 [State 0] Switching from state 0 to state 554
Copied 34928 (count=1)
Finalizing TB execution 554
s2e_dummyMainFunction
tcg-llvm-tb-553-8048a0e
339 [State 554] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 553 not yet applied), shell_len: 1024, eip: 0x00000000

339 [State 554] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
339 [State 554] Leaving buffer range @0xbfba3783, ec IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
339 [State 554] Killing state 554
339 [State 554] Terminating state 554 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
339 [State 554] Switching from state 554 to state 0
Copied 34928 (count=1)
Deleting state 554 0x0x2bdd6e00
Firing timer event
339 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 553
>> fuzzInit: datum forking for value 554
>> fuzzInit: datum forking for value 554
339 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 554)
        (ReadLSB w32 0 v554_fuzz_symb_554)))
    state 555 with condition (Not (Eq false
         (Eq (w32 554)
             (ReadLSB w32 0 v554_fuzz_symb_554))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-554-8048a0e
Size=2 Low=0 splitIndex=1 high=1
339 [State 0] Switching from state 0 to state 555
Copied 34928 (count=1)
Finalizing TB execution 555
s2e_dummyMainFunction
tcg-llvm-tb-554-8048a0e
339 [State 555] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 554 not yet applied), shell_len: 1024, eip: 0x00000000

339 [State 555] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
339 [State 555] Leaving buffer range @0xbfba3781, ec IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
339 [State 555] Killing state 555
339 [State 555] Terminating state 555 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
339 [State 555] Switching from state 555 to state 0
Copied 34928 (count=1)
Deleting state 555 0x0x2bf6ea60
340 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 554
>> fuzzInit: datum forking for value 555
>> fuzzInit: datum forking for value 555
340 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 555)
        (ReadLSB w32 0 v555_fuzz_symb_555)))
    state 556 with condition (Not (Eq false
         (Eq (w32 555)
             (ReadLSB w32 0 v555_fuzz_symb_555))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-555-8048a0e
Size=2 Low=0 splitIndex=1 high=1
340 [State 0] Switching from state 0 to state 556
Copied 34928 (count=1)
Finalizing TB execution 556
s2e_dummyMainFunction
tcg-llvm-tb-555-8048a0e
340 [State 556] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 555 not yet applied), shell_len: 1024, eip: 0x00000000

340 [State 556] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
340 [State 556] Leaving buffer range @0xbfba3783, eb IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
340 [State 556] Killing state 556
340 [State 556] Terminating state 556 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
340 [State 556] Switching from state 556 to state 0
Copied 34928 (count=1)
Deleting state 556 0x0x2bf6ea60
340 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 555
>> fuzzInit: datum forking for value 556
>> fuzzInit: datum forking for value 556
340 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 556)
        (ReadLSB w32 0 v556_fuzz_symb_556)))
    state 557 with condition (Not (Eq false
         (Eq (w32 556)
             (ReadLSB w32 0 v556_fuzz_symb_556))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-556-8048a0e
Size=2 Low=0 splitIndex=1 high=1
340 [State 0] Switching from state 0 to state 557
Copied 34928 (count=1)
Finalizing TB execution 557
s2e_dummyMainFunction
tcg-llvm-tb-556-8048a0e
341 [State 557] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 556 not yet applied), shell_len: 1024, eip: 0x00000000

341 [State 557] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
341 [State 557] Leaving buffer range @0xbfba3781, eb IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
341 [State 557] Killing state 557
341 [State 557] Terminating state 557 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
341 [State 557] Switching from state 557 to state 0
Copied 34928 (count=1)
Deleting state 557 0x0x2bf6ea60
341 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 556
>> fuzzInit: datum forking for value 557
>> fuzzInit: datum forking for value 557
341 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 557)
        (ReadLSB w32 0 v557_fuzz_symb_557)))
    state 558 with condition (Not (Eq false
         (Eq (w32 557)
             (ReadLSB w32 0 v557_fuzz_symb_557))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-557-8048a0e
Size=2 Low=0 splitIndex=1 high=1
341 [State 0] Switching from state 0 to state 558
Copied 34928 (count=1)
Finalizing TB execution 558
s2e_dummyMainFunction
tcg-llvm-tb-557-8048a0e
Firing timer event
341 [State 558] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 557 not yet applied), shell_len: 1024, eip: 0x00000000

341 [State 558] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
341 [State 558] Leaving buffer range @0xbfba3783, ea IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
341 [State 558] Killing state 558
341 [State 558] Terminating state 558 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
341 [State 558] Switching from state 558 to state 0
Copied 34928 (count=1)
Deleting state 558 0x0x2c0ebc90
341 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 557
>> fuzzInit: datum forking for value 558
>> fuzzInit: datum forking for value 558
342 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 558)
        (ReadLSB w32 0 v558_fuzz_symb_558)))
    state 559 with condition (Not (Eq false
         (Eq (w32 558)
             (ReadLSB w32 0 v558_fuzz_symb_558))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-558-8048a0e
Size=2 Low=0 splitIndex=1 high=1
342 [State 0] Switching from state 0 to state 559
Copied 34928 (count=1)
Finalizing TB execution 559
s2e_dummyMainFunction
tcg-llvm-tb-558-8048a0e
342 [State 559] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 558 not yet applied), shell_len: 1024, eip: 0x00000000

342 [State 559] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
342 [State 559] Leaving buffer range @0xbfba3781, ea IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
342 [State 559] Killing state 559
342 [State 559] Terminating state 559 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
342 [State 559] Switching from state 559 to state 0
Copied 34928 (count=1)
Deleting state 559 0x0x2be7f7d0
Firing timer event
342 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 558
>> fuzzInit: datum forking for value 559
>> fuzzInit: datum forking for value 559
342 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 559)
        (ReadLSB w32 0 v559_fuzz_symb_559)))
    state 560 with condition (Not (Eq false
         (Eq (w32 559)
             (ReadLSB w32 0 v559_fuzz_symb_559))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-559-8048a0e
Size=2 Low=0 splitIndex=1 high=1
342 [State 0] Switching from state 0 to state 560
Copied 34928 (count=1)
Finalizing TB execution 560
s2e_dummyMainFunction
tcg-llvm-tb-559-8048a0e
342 [State 560] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 559 not yet applied), shell_len: 1024, eip: 0x00000000

342 [State 560] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
342 [State 560] Leaving buffer range @0xbfba3783, e9 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
343 [State 560] Killing state 560
343 [State 560] Terminating state 560 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
343 [State 560] Switching from state 560 to state 0
Copied 34928 (count=1)
Deleting state 560 0x0x2be7f7d0
343 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 559
>> fuzzInit: datum forking for value 560
>> fuzzInit: datum forking for value 560
343 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 560)
        (ReadLSB w32 0 v560_fuzz_symb_560)))
    state 561 with condition (Not (Eq false
         (Eq (w32 560)
             (ReadLSB w32 0 v560_fuzz_symb_560))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-560-8048a0e
Size=2 Low=0 splitIndex=1 high=1
343 [State 0] Switching from state 0 to state 561
Copied 34928 (count=1)
Finalizing TB execution 561
s2e_dummyMainFunction
tcg-llvm-tb-560-8048a0e
343 [State 561] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 560 not yet applied), shell_len: 1024, eip: 0x00000000

343 [State 561] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
343 [State 561] Leaving buffer range @0xbfba3781, e9 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
343 [State 561] Killing state 561
343 [State 561] Terminating state 561 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
343 [State 561] Switching from state 561 to state 0
Copied 34928 (count=1)
Deleting state 561 0x0x2be7f7d0
343 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 560
>> fuzzInit: datum forking for value 561
>> fuzzInit: datum forking for value 561
344 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 561)
        (ReadLSB w32 0 v561_fuzz_symb_561)))
    state 562 with condition (Not (Eq false
         (Eq (w32 561)
             (ReadLSB w32 0 v561_fuzz_symb_561))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-561-8048a0e
Size=2 Low=0 splitIndex=1 high=1
344 [State 0] Switching from state 0 to state 562
Copied 34928 (count=1)
Finalizing TB execution 562
s2e_dummyMainFunction
tcg-llvm-tb-561-8048a0e
344 [State 562] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 561 not yet applied), shell_len: 1024, eip: 0x00000000

344 [State 562] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
344 [State 562] Leaving buffer range @0xbfba3783, e8 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
344 [State 562] Killing state 562
344 [State 562] Terminating state 562 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
344 [State 562] Switching from state 562 to state 0
Copied 34928 (count=1)
Deleting state 562 0x0x2c202d80
344 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 561
>> fuzzInit: datum forking for value 562
>> fuzzInit: datum forking for value 562
344 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 562)
        (ReadLSB w32 0 v562_fuzz_symb_562)))
    state 563 with condition (Not (Eq false
         (Eq (w32 562)
             (ReadLSB w32 0 v562_fuzz_symb_562))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-562-8048a0e
Size=2 Low=0 splitIndex=1 high=1
344 [State 0] Switching from state 0 to state 563
Copied 34928 (count=1)
Finalizing TB execution 563
s2e_dummyMainFunction
tcg-llvm-tb-562-8048a0e
Firing timer event
344 [State 563] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 562 not yet applied), shell_len: 1024, eip: 0x00000000

344 [State 563] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
344 [State 563] Leaving buffer range @0xbfba3781, e8 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
345 [State 563] Killing state 563
345 [State 563] Terminating state 563 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
345 [State 563] Switching from state 563 to state 0
Copied 34928 (count=1)
Deleting state 563 0x0x2bfb8ad0
345 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 562
>> fuzzInit: datum forking for value 563
>> fuzzInit: datum forking for value 563
345 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 563)
        (ReadLSB w32 0 v563_fuzz_symb_563)))
    state 564 with condition (Not (Eq false
         (Eq (w32 563)
             (ReadLSB w32 0 v563_fuzz_symb_563))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-563-8048a0e
Size=2 Low=0 splitIndex=1 high=1
345 [State 0] Switching from state 0 to state 564
Copied 34928 (count=1)
Finalizing TB execution 564
s2e_dummyMainFunction
tcg-llvm-tb-563-8048a0e
345 [State 564] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 563 not yet applied), shell_len: 1024, eip: 0x00000000

345 [State 564] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
345 [State 564] Leaving buffer range @0xbfba3783, e7 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
345 [State 564] Killing state 564
345 [State 564] Terminating state 564 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
345 [State 564] Switching from state 564 to state 0
Copied 34928 (count=1)
Deleting state 564 0x0x2bfb8ad0
Firing timer event
345 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 563
>> fuzzInit: datum forking for value 564
>> fuzzInit: datum forking for value 564
345 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 564)
        (ReadLSB w32 0 v564_fuzz_symb_564)))
    state 565 with condition (Not (Eq false
         (Eq (w32 564)
             (ReadLSB w32 0 v564_fuzz_symb_564))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-564-8048a0e
Size=2 Low=0 splitIndex=1 high=1
345 [State 0] Switching from state 0 to state 565
Copied 34928 (count=1)
Finalizing TB execution 565
s2e_dummyMainFunction
tcg-llvm-tb-564-8048a0e
346 [State 565] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 564 not yet applied), shell_len: 1024, eip: 0x00000000

346 [State 565] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
346 [State 565] Leaving buffer range @0xbfba3781, e7 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
346 [State 565] Killing state 565
346 [State 565] Terminating state 565 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
346 [State 565] Switching from state 565 to state 0
Copied 34928 (count=1)
Deleting state 565 0x0x2bfb8ad0
346 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 564
>> fuzzInit: datum forking for value 565
>> fuzzInit: datum forking for value 565
346 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 565)
        (ReadLSB w32 0 v565_fuzz_symb_565)))
    state 566 with condition (Not (Eq false
         (Eq (w32 565)
             (ReadLSB w32 0 v565_fuzz_symb_565))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-565-8048a0e
Size=2 Low=0 splitIndex=1 high=1
346 [State 0] Switching from state 0 to state 566
Copied 34928 (count=1)
Finalizing TB execution 566
s2e_dummyMainFunction
tcg-llvm-tb-565-8048a0e
346 [State 566] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 565 not yet applied), shell_len: 1024, eip: 0x00000000

346 [State 566] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
346 [State 566] Leaving buffer range @0xbfba3783, e6 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
346 [State 566] Killing state 566
346 [State 566] Terminating state 566 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
346 [State 566] Switching from state 566 to state 0
Copied 34928 (count=1)
Deleting state 566 0x0x2bdc1170
347 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 565
>> fuzzInit: datum forking for value 566
>> fuzzInit: datum forking for value 566
347 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 566)
        (ReadLSB w32 0 v566_fuzz_symb_566)))
    state 567 with condition (Not (Eq false
         (Eq (w32 566)
             (ReadLSB w32 0 v566_fuzz_symb_566))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-566-8048a0e
Size=2 Low=0 splitIndex=1 high=1
347 [State 0] Switching from state 0 to state 567
Copied 34928 (count=1)
Finalizing TB execution 567
s2e_dummyMainFunction
tcg-llvm-tb-566-8048a0e
347 [State 567] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 566 not yet applied), shell_len: 1024, eip: 0x00000000

347 [State 567] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
347 [State 567] Leaving buffer range @0xbfba3781, e6 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
347 [State 567] Killing state 567
347 [State 567] Terminating state 567 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
347 [State 567] Switching from state 567 to state 0
Copied 34928 (count=1)
Deleting state 567 0x0x2c2595b0
347 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 566
>> fuzzInit: datum forking for value 567
>> fuzzInit: datum forking for value 567
347 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 567)
        (ReadLSB w32 0 v567_fuzz_symb_567)))
    state 568 with condition (Not (Eq false
         (Eq (w32 567)
             (ReadLSB w32 0 v567_fuzz_symb_567))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-567-8048a0e
Size=2 Low=0 splitIndex=1 high=1
347 [State 0] Switching from state 0 to state 568
Copied 34928 (count=1)
Finalizing TB execution 568
s2e_dummyMainFunction
tcg-llvm-tb-567-8048a0e
Firing timer event
348 [State 568] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 567 not yet applied), shell_len: 1024, eip: 0x00000000

348 [State 568] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
348 [State 568] Leaving buffer range @0xbfba3783, e5 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
348 [State 568] Killing state 568
348 [State 568] Terminating state 568 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
348 [State 568] Switching from state 568 to state 0
Copied 34928 (count=1)
Deleting state 568 0x0x2c23dc00
348 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 567
>> fuzzInit: datum forking for value 568
>> fuzzInit: datum forking for value 568
348 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 568)
        (ReadLSB w32 0 v568_fuzz_symb_568)))
    state 569 with condition (Not (Eq false
         (Eq (w32 568)
             (ReadLSB w32 0 v568_fuzz_symb_568))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-568-8048a0e
Size=2 Low=0 splitIndex=1 high=1
348 [State 0] Switching from state 0 to state 569
Copied 34928 (count=1)
Finalizing TB execution 569
s2e_dummyMainFunction
tcg-llvm-tb-568-8048a0e
348 [State 569] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 568 not yet applied), shell_len: 1024, eip: 0x00000000

348 [State 569] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
348 [State 569] Leaving buffer range @0xbfba3781, e5 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
348 [State 569] Killing state 569
348 [State 569] Terminating state 569 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
348 [State 569] Switching from state 569 to state 0
Copied 34928 (count=1)
Deleting state 569 0x0x2c32dc10
Firing timer event
349 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 568
>> fuzzInit: datum forking for value 569
>> fuzzInit: datum forking for value 569
349 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 569)
        (ReadLSB w32 0 v569_fuzz_symb_569)))
    state 570 with condition (Not (Eq false
         (Eq (w32 569)
             (ReadLSB w32 0 v569_fuzz_symb_569))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-569-8048a0e
Size=2 Low=0 splitIndex=1 high=1
349 [State 0] Switching from state 0 to state 570
Copied 34928 (count=1)
Finalizing TB execution 570
s2e_dummyMainFunction
tcg-llvm-tb-569-8048a0e
349 [State 570] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 569 not yet applied), shell_len: 1024, eip: 0x00000000

349 [State 570] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
349 [State 570] Leaving buffer range @0xbfba3783, e4 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
349 [State 570] Killing state 570
349 [State 570] Terminating state 570 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
349 [State 570] Switching from state 570 to state 0
Copied 34928 (count=1)
Deleting state 570 0x0x2c473660
349 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 569
>> fuzzInit: datum forking for value 570
>> fuzzInit: datum forking for value 570
349 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 570)
        (ReadLSB w32 0 v570_fuzz_symb_570)))
    state 571 with condition (Not (Eq false
         (Eq (w32 570)
             (ReadLSB w32 0 v570_fuzz_symb_570))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-570-8048a0e
Size=2 Low=0 splitIndex=1 high=1
349 [State 0] Switching from state 0 to state 571
Copied 34928 (count=1)
Finalizing TB execution 571
s2e_dummyMainFunction
tcg-llvm-tb-570-8048a0e
Firing timer event
350 [State 571] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 570 not yet applied), shell_len: 1024, eip: 0x00000000

350 [State 571] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
350 [State 571] Leaving buffer range @0xbfba3781, e4 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
350 [State 571] Killing state 571
350 [State 571] Terminating state 571 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
350 [State 571] Switching from state 571 to state 0
Copied 34928 (count=1)
Deleting state 571 0x0x2c502dd0
350 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 570
>> fuzzInit: datum forking for value 571
>> fuzzInit: datum forking for value 571
350 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 571)
        (ReadLSB w32 0 v571_fuzz_symb_571)))
    state 572 with condition (Not (Eq false
         (Eq (w32 571)
             (ReadLSB w32 0 v571_fuzz_symb_571))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-571-8048a0e
Size=2 Low=0 splitIndex=1 high=1
350 [State 0] Switching from state 0 to state 572
Copied 34928 (count=1)
Finalizing TB execution 572
s2e_dummyMainFunction
tcg-llvm-tb-571-8048a0e
350 [State 572] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 571 not yet applied), shell_len: 1024, eip: 0x00000000

350 [State 572] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
350 [State 572] Leaving buffer range @0xbfba3783, e3 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
350 [State 572] Killing state 572
350 [State 572] Terminating state 572 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
350 [State 572] Switching from state 572 to state 0
Copied 34928 (count=1)
Deleting state 572 0x0x2c502dd0
350 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 571
>> fuzzInit: datum forking for value 572
>> fuzzInit: datum forking for value 572
351 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 572)
        (ReadLSB w32 0 v572_fuzz_symb_572)))
    state 573 with condition (Not (Eq false
         (Eq (w32 572)
             (ReadLSB w32 0 v572_fuzz_symb_572))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-572-8048a0e
Size=2 Low=0 splitIndex=1 high=1
351 [State 0] Switching from state 0 to state 573
Copied 34928 (count=1)
Finalizing TB execution 573
s2e_dummyMainFunction
tcg-llvm-tb-572-8048a0e
Firing timer event
351 [State 573] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 572 not yet applied), shell_len: 1024, eip: 0x00000000

351 [State 573] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
351 [State 573] Leaving buffer range @0xbfba3781, e3 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
351 [State 573] Killing state 573
351 [State 573] Terminating state 573 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
351 [State 573] Switching from state 573 to state 0
Copied 34928 (count=1)
Deleting state 573 0x0x2c4748a0
351 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 572
>> fuzzInit: datum forking for value 573
>> fuzzInit: datum forking for value 573
351 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 573)
        (ReadLSB w32 0 v573_fuzz_symb_573)))
    state 574 with condition (Not (Eq false
         (Eq (w32 573)
             (ReadLSB w32 0 v573_fuzz_symb_573))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-573-8048a0e
Size=2 Low=0 splitIndex=1 high=1
351 [State 0] Switching from state 0 to state 574
Copied 34928 (count=1)
Finalizing TB execution 574
s2e_dummyMainFunction
tcg-llvm-tb-573-8048a0e
351 [State 574] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 573 not yet applied), shell_len: 1024, eip: 0x00000000

351 [State 574] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
351 [State 574] Leaving buffer range @0xbfba3783, e2 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
352 [State 574] Killing state 574
352 [State 574] Terminating state 574 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
352 [State 574] Switching from state 574 to state 0
Copied 34928 (count=1)
Deleting state 574 0x0x2c4748a0
352 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 573
>> fuzzInit: datum forking for value 574
>> fuzzInit: datum forking for value 574
352 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 574)
        (ReadLSB w32 0 v574_fuzz_symb_574)))
    state 575 with condition (Not (Eq false
         (Eq (w32 574)
             (ReadLSB w32 0 v574_fuzz_symb_574))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-574-8048a0e
Size=2 Low=0 splitIndex=1 high=1
352 [State 0] Switching from state 0 to state 575
Copied 34928 (count=1)
Finalizing TB execution 575
s2e_dummyMainFunction
tcg-llvm-tb-574-8048a0e
Firing timer event
352 [State 575] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 574 not yet applied), shell_len: 1024, eip: 0x00000000

352 [State 575] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
352 [State 575] Leaving buffer range @0xbfba3781, e2 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
352 [State 575] Killing state 575
352 [State 575] Terminating state 575 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
352 [State 575] Switching from state 575 to state 0
Copied 34928 (count=1)
Deleting state 575 0x0x2c4d3300
352 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 574
>> fuzzInit: datum forking for value 575
>> fuzzInit: datum forking for value 575
352 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 575)
        (ReadLSB w32 0 v575_fuzz_symb_575)))
    state 576 with condition (Not (Eq false
         (Eq (w32 575)
             (ReadLSB w32 0 v575_fuzz_symb_575))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-575-8048a0e
Size=2 Low=0 splitIndex=1 high=1
352 [State 0] Switching from state 0 to state 576
Copied 34928 (count=1)
Finalizing TB execution 576
s2e_dummyMainFunction
tcg-llvm-tb-575-8048a0e
353 [State 576] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 575 not yet applied), shell_len: 1024, eip: 0x00000000

353 [State 576] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
353 [State 576] Leaving buffer range @0xbfba3783, e1 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
353 [State 576] Killing state 576
353 [State 576] Terminating state 576 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
353 [State 576] Switching from state 576 to state 0
Copied 34928 (count=1)
Deleting state 576 0x0x2c440370
353 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 575
>> fuzzInit: datum forking for value 576
>> fuzzInit: datum forking for value 576
353 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 576)
        (ReadLSB w32 0 v576_fuzz_symb_576)))
    state 577 with condition (Not (Eq false
         (Eq (w32 576)
             (ReadLSB w32 0 v576_fuzz_symb_576))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-576-8048a0e
Size=2 Low=0 splitIndex=1 high=1
353 [State 0] Switching from state 0 to state 577
Copied 34928 (count=1)
Finalizing TB execution 577
s2e_dummyMainFunction
tcg-llvm-tb-576-8048a0e
Firing timer event
353 [State 577] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 576 not yet applied), shell_len: 1024, eip: 0x00000000

353 [State 577] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
353 [State 577] Leaving buffer range @0xbfba3781, e1 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
353 [State 577] Killing state 577
353 [State 577] Terminating state 577 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
353 [State 577] Switching from state 577 to state 0
Copied 34928 (count=1)
Deleting state 577 0x0x2c4cb0f0
353 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 576
>> fuzzInit: datum forking for value 577
>> fuzzInit: datum forking for value 577
354 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 577)
        (ReadLSB w32 0 v577_fuzz_symb_577)))
    state 578 with condition (Not (Eq false
         (Eq (w32 577)
             (ReadLSB w32 0 v577_fuzz_symb_577))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-577-8048a0e
Size=2 Low=0 splitIndex=1 high=1
354 [State 0] Switching from state 0 to state 578
Copied 34928 (count=1)
Finalizing TB execution 578
s2e_dummyMainFunction
tcg-llvm-tb-577-8048a0e
354 [State 578] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 577 not yet applied), shell_len: 1024, eip: 0x00000000

354 [State 578] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
354 [State 578] Leaving buffer range @0xbfba3783, e0 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
354 [State 578] Killing state 578
354 [State 578] Terminating state 578 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
354 [State 578] Switching from state 578 to state 0
Copied 34928 (count=1)
Deleting state 578 0x0x2c4cb0f0
Firing timer event
354 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 577
>> fuzzInit: datum forking for value 578
>> fuzzInit: datum forking for value 578
354 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 578)
        (ReadLSB w32 0 v578_fuzz_symb_578)))
    state 579 with condition (Not (Eq false
         (Eq (w32 578)
             (ReadLSB w32 0 v578_fuzz_symb_578))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-578-8048a0e
Size=2 Low=0 splitIndex=1 high=1
354 [State 0] Switching from state 0 to state 579
Copied 34928 (count=1)
Finalizing TB execution 579
s2e_dummyMainFunction
tcg-llvm-tb-578-8048a0e
354 [State 579] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 578 not yet applied), shell_len: 1024, eip: 0x00000000

354 [State 579] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
355 [State 579] Leaving buffer range @0xbfba3781, e0 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
355 [State 579] Killing state 579
355 [State 579] Terminating state 579 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
355 [State 579] Switching from state 579 to state 0
Copied 34928 (count=1)
Deleting state 579 0x0x2c4cb0f0
355 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 578
>> fuzzInit: datum forking for value 579
>> fuzzInit: datum forking for value 579
355 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 579)
        (ReadLSB w32 0 v579_fuzz_symb_579)))
    state 580 with condition (Not (Eq false
         (Eq (w32 579)
             (ReadLSB w32 0 v579_fuzz_symb_579))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-579-8048a0e
Size=2 Low=0 splitIndex=1 high=1
355 [State 0] Switching from state 0 to state 580
Copied 34928 (count=1)
Finalizing TB execution 580
s2e_dummyMainFunction
tcg-llvm-tb-579-8048a0e
355 [State 580] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 579 not yet applied), shell_len: 1024, eip: 0x00000000

355 [State 580] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
355 [State 580] Leaving buffer range @0xbfba3783, df IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
355 [State 580] Killing state 580
355 [State 580] Terminating state 580 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
355 [State 580] Switching from state 580 to state 0
Copied 34928 (count=1)
Deleting state 580 0x0x2c5d08a0
355 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 579
>> fuzzInit: datum forking for value 580
>> fuzzInit: datum forking for value 580
356 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 580)
        (ReadLSB w32 0 v580_fuzz_symb_580)))
    state 581 with condition (Not (Eq false
         (Eq (w32 580)
             (ReadLSB w32 0 v580_fuzz_symb_580))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-580-8048a0e
Size=2 Low=0 splitIndex=1 high=1
356 [State 0] Switching from state 0 to state 581
Copied 34928 (count=1)
Finalizing TB execution 581
s2e_dummyMainFunction
tcg-llvm-tb-580-8048a0e
356 [State 581] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 580 not yet applied), shell_len: 1024, eip: 0x00000000

356 [State 581] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
356 [State 581] Leaving buffer range @0xbfba3781, df IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
356 [State 581] Killing state 581
356 [State 581] Terminating state 581 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
356 [State 581] Switching from state 581 to state 0
Copied 34928 (count=1)
Deleting state 581 0x0x2c579d00
356 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 580
>> fuzzInit: datum forking for value 581
>> fuzzInit: datum forking for value 581
356 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 581)
        (ReadLSB w32 0 v581_fuzz_symb_581)))
    state 582 with condition (Not (Eq false
         (Eq (w32 581)
             (ReadLSB w32 0 v581_fuzz_symb_581))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-581-8048a0e
Size=2 Low=0 splitIndex=1 high=1
356 [State 0] Switching from state 0 to state 582
Copied 34928 (count=1)
Finalizing TB execution 582
s2e_dummyMainFunction
tcg-llvm-tb-581-8048a0e
Firing timer event
356 [State 582] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 581 not yet applied), shell_len: 1024, eip: 0x00000000

356 [State 582] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
357 [State 582] Leaving buffer range @0xc126f278, de IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
357 [State 582] Killing state 582
357 [State 582] Terminating state 582 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
357 [State 582] Switching from state 582 to state 0
Copied 34928 (count=1)
Deleting state 582 0x0x2c577e70
357 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 581
>> fuzzInit: datum forking for value 582
>> fuzzInit: datum forking for value 582
>> fuzzInit: datum forking for value 582
357 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 582)
        (ReadLSB w32 0 v582_fuzz_symb_582)))
    state 583 with condition (Not (Eq false
         (Eq (w32 582)
             (ReadLSB w32 0 v582_fuzz_symb_582))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-582-8048a0e
Size=2 Low=0 splitIndex=1 high=1
357 [State 0] Switching from state 0 to state 583
Copied 34928 (count=1)
Finalizing TB execution 583
s2e_dummyMainFunction
tcg-llvm-tb-582-8048a0e
357 [State 583] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 582 not yet applied), shell_len: 1024, eip: 0x00000000

357 [State 583] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
357 [State 583] Leaving buffer range @0xbfba3781, de IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
357 [State 583] Killing state 583
357 [State 583] Terminating state 583 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
357 [State 583] Switching from state 583 to state 0
Copied 34928 (count=1)
Deleting state 583 0x0x2c577e70
Firing timer event
357 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 582
>> fuzzInit: datum forking for value 583
>> fuzzInit: datum forking for value 583
358 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 583)
        (ReadLSB w32 0 v583_fuzz_symb_583)))
    state 584 with condition (Not (Eq false
         (Eq (w32 583)
             (ReadLSB w32 0 v583_fuzz_symb_583))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-583-8048a0e
Size=2 Low=0 splitIndex=1 high=1
358 [State 0] Switching from state 0 to state 584
Copied 34928 (count=1)
Finalizing TB execution 584
s2e_dummyMainFunction
tcg-llvm-tb-583-8048a0e
358 [State 584] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 583 not yet applied), shell_len: 1024, eip: 0x00000000

358 [State 584] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
358 [State 584] Leaving buffer range @0xc126f278, dd IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
358 [State 584] Killing state 584
358 [State 584] Terminating state 584 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
358 [State 584] Switching from state 584 to state 0
Copied 34928 (count=1)
Deleting state 584 0x0x2c577e70
358 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 583
>> fuzzInit: datum forking for value 584
>> fuzzInit: datum forking for value 584
358 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 584)
        (ReadLSB w32 0 v584_fuzz_symb_584)))
    state 585 with condition (Not (Eq false
         (Eq (w32 584)
             (ReadLSB w32 0 v584_fuzz_symb_584))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-584-8048a0e
Size=2 Low=0 splitIndex=1 high=1
358 [State 0] Switching from state 0 to state 585
Copied 34928 (count=1)
Finalizing TB execution 585
s2e_dummyMainFunction
tcg-llvm-tb-584-8048a0e
358 [State 585] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 584 not yet applied), shell_len: 1024, eip: 0x00000000

358 [State 585] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
358 [State 585] Leaving buffer range @0xbfba3781, dd IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
358 [State 585] Killing state 585
358 [State 585] Terminating state 585 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
358 [State 585] Switching from state 585 to state 0
Copied 34928 (count=1)
Deleting state 585 0x0x2c577e70
359 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 584
>> fuzzInit: datum forking for value 585
>> fuzzInit: datum forking for value 585
359 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 585)
        (ReadLSB w32 0 v585_fuzz_symb_585)))
    state 586 with condition (Not (Eq false
         (Eq (w32 585)
             (ReadLSB w32 0 v585_fuzz_symb_585))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-585-8048a0e
Size=2 Low=0 splitIndex=1 high=1
359 [State 0] Switching from state 0 to state 586
Copied 34928 (count=1)
Finalizing TB execution 586
s2e_dummyMainFunction
tcg-llvm-tb-585-8048a0e
359 [State 586] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 585 not yet applied), shell_len: 1024, eip: 0x00000000

359 [State 586] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
359 [State 586] Leaving buffer range @0xbfba3783, dc IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
359 [State 586] Killing state 586
359 [State 586] Terminating state 586 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
359 [State 586] Switching from state 586 to state 0
Copied 34928 (count=1)
Deleting state 586 0x0x2c81b290
359 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 585
>> fuzzInit: datum forking for value 586
>> fuzzInit: datum forking for value 586
359 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 586)
        (ReadLSB w32 0 v586_fuzz_symb_586)))
    state 587 with condition (Not (Eq false
         (Eq (w32 586)
             (ReadLSB w32 0 v586_fuzz_symb_586))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-586-8048a0e
Size=2 Low=0 splitIndex=1 high=1
359 [State 0] Switching from state 0 to state 587
Copied 34928 (count=1)
Finalizing TB execution 587
s2e_dummyMainFunction
tcg-llvm-tb-586-8048a0e
Firing timer event
360 [State 587] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 586 not yet applied), shell_len: 1024, eip: 0x00000000

360 [State 587] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
360 [State 587] Leaving buffer range @0xbfba3781, dc IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
360 [State 587] Killing state 587
360 [State 587] Terminating state 587 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
360 [State 587] Switching from state 587 to state 0
Copied 34928 (count=1)
Deleting state 587 0x0x2c81b290
360 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 586
>> fuzzInit: datum forking for value 587
>> fuzzInit: datum forking for value 587
360 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 587)
        (ReadLSB w32 0 v587_fuzz_symb_587)))
    state 588 with condition (Not (Eq false
         (Eq (w32 587)
             (ReadLSB w32 0 v587_fuzz_symb_587))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-587-8048a0e
Size=2 Low=0 splitIndex=1 high=1
360 [State 0] Switching from state 0 to state 588
Copied 34928 (count=1)
Finalizing TB execution 588
s2e_dummyMainFunction
tcg-llvm-tb-587-8048a0e
360 [State 588] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 587 not yet applied), shell_len: 1024, eip: 0x00000000

360 [State 588] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
360 [State 588] Leaving buffer range @0xbfba3783, db IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
360 [State 588] Killing state 588
360 [State 588] Terminating state 588 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
360 [State 588] Switching from state 588 to state 0
Copied 34928 (count=1)
Deleting state 588 0x0x2c577e70
Firing timer event
361 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 587
>> fuzzInit: datum forking for value 588
>> fuzzInit: datum forking for value 588
361 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 588)
        (ReadLSB w32 0 v588_fuzz_symb_588)))
    state 589 with condition (Not (Eq false
         (Eq (w32 588)
             (ReadLSB w32 0 v588_fuzz_symb_588))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-588-8048a0e
Size=2 Low=0 splitIndex=1 high=1
361 [State 0] Switching from state 0 to state 589
Copied 34928 (count=1)
Finalizing TB execution 589
s2e_dummyMainFunction
tcg-llvm-tb-588-8048a0e
361 [State 589] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 588 not yet applied), shell_len: 1024, eip: 0x00000000

361 [State 589] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
361 [State 589] Leaving buffer range @0xbfba3781, db IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
361 [State 589] Killing state 589
361 [State 589] Terminating state 589 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
361 [State 589] Switching from state 589 to state 0
Copied 34928 (count=1)
Deleting state 589 0x0x2c577e70
361 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 588
>> fuzzInit: datum forking for value 589
>> fuzzInit: datum forking for value 589
361 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 589)
        (ReadLSB w32 0 v589_fuzz_symb_589)))
    state 590 with condition (Not (Eq false
         (Eq (w32 589)
             (ReadLSB w32 0 v589_fuzz_symb_589))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-589-8048a0e
Size=2 Low=0 splitIndex=1 high=1
361 [State 0] Switching from state 0 to state 590
Copied 34928 (count=1)
Finalizing TB execution 590
s2e_dummyMainFunction
tcg-llvm-tb-589-8048a0e
361 [State 590] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 589 not yet applied), shell_len: 1024, eip: 0x00000000

361 [State 590] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
362 [State 590] Leaving buffer range @0xbfba3783, da IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
362 [State 590] Killing state 590
362 [State 590] Terminating state 590 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
362 [State 590] Switching from state 590 to state 0
Copied 34928 (count=1)
Deleting state 590 0x0x2c577e70
362 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 589
>> fuzzInit: datum forking for value 590
>> fuzzInit: datum forking for value 590
362 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 590)
        (ReadLSB w32 0 v590_fuzz_symb_590)))
    state 591 with condition (Not (Eq false
         (Eq (w32 590)
             (ReadLSB w32 0 v590_fuzz_symb_590))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-590-8048a0e
Size=2 Low=0 splitIndex=1 high=1
362 [State 0] Switching from state 0 to state 591
Copied 34928 (count=1)
Finalizing TB execution 591
s2e_dummyMainFunction
tcg-llvm-tb-590-8048a0e
362 [State 591] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 590 not yet applied), shell_len: 1024, eip: 0x00000000

362 [State 591] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
362 [State 591] Leaving buffer range @0xbfba3781, da IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
362 [State 591] Killing state 591
362 [State 591] Terminating state 591 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
362 [State 591] Switching from state 591 to state 0
Copied 34928 (count=1)
Deleting state 591 0x0x2c9796f0
362 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 590
>> fuzzInit: datum forking for value 591
>> fuzzInit: datum forking for value 591
363 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 591)
        (ReadLSB w32 0 v591_fuzz_symb_591)))
    state 592 with condition (Not (Eq false
         (Eq (w32 591)
             (ReadLSB w32 0 v591_fuzz_symb_591))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-591-8048a0e
Size=2 Low=0 splitIndex=1 high=1
363 [State 0] Switching from state 0 to state 592
Copied 34928 (count=1)
Finalizing TB execution 592
s2e_dummyMainFunction
tcg-llvm-tb-591-8048a0e
Firing timer event
363 [State 592] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 591 not yet applied), shell_len: 1024, eip: 0x00000000

363 [State 592] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
363 [State 592] Leaving buffer range @0xbfba3783, d9 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
363 [State 592] Killing state 592
363 [State 592] Terminating state 592 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
363 [State 592] Switching from state 592 to state 0
Copied 34928 (count=1)
Deleting state 592 0x0x2c9796f0
363 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 591
>> fuzzInit: datum forking for value 592
>> fuzzInit: datum forking for value 592
363 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 592)
        (ReadLSB w32 0 v592_fuzz_symb_592)))
    state 593 with condition (Not (Eq false
         (Eq (w32 592)
             (ReadLSB w32 0 v592_fuzz_symb_592))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-592-8048a0e
Size=2 Low=0 splitIndex=1 high=1
363 [State 0] Switching from state 0 to state 593
Copied 34928 (count=1)
Finalizing TB execution 593
s2e_dummyMainFunction
tcg-llvm-tb-592-8048a0e
363 [State 593] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 592 not yet applied), shell_len: 1024, eip: 0x00000000

363 [State 593] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
363 [State 593] Leaving buffer range @0xbfba3781, d9 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
363 [State 593] Killing state 593
363 [State 593] Terminating state 593 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
363 [State 593] Switching from state 593 to state 0
Copied 34928 (count=1)
Deleting state 593 0x0x2c9796f0
364 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 592
>> fuzzInit: datum forking for value 593
>> fuzzInit: datum forking for value 593
364 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 593)
        (ReadLSB w32 0 v593_fuzz_symb_593)))
    state 594 with condition (Not (Eq false
         (Eq (w32 593)
             (ReadLSB w32 0 v593_fuzz_symb_593))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-593-8048a0e
Size=2 Low=0 splitIndex=1 high=1
364 [State 0] Switching from state 0 to state 594
Copied 34928 (count=1)
Finalizing TB execution 594
s2e_dummyMainFunction
tcg-llvm-tb-593-8048a0e
Firing timer event
364 [State 594] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 593 not yet applied), shell_len: 1024, eip: 0x00000000

364 [State 594] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
364 [State 594] Leaving buffer range @0xbfba3783, d8 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
364 [State 594] Killing state 594
364 [State 594] Terminating state 594 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
364 [State 594] Switching from state 594 to state 0
Copied 34928 (count=1)
Deleting state 594 0x0x2c9796f0
364 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 593
>> fuzzInit: datum forking for value 594
>> fuzzInit: datum forking for value 594
364 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 594)
        (ReadLSB w32 0 v594_fuzz_symb_594)))
    state 595 with condition (Not (Eq false
         (Eq (w32 594)
             (ReadLSB w32 0 v594_fuzz_symb_594))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-594-8048a0e
Size=2 Low=0 splitIndex=1 high=1
364 [State 0] Switching from state 0 to state 595
Copied 34928 (count=1)
Finalizing TB execution 595
s2e_dummyMainFunction
tcg-llvm-tb-594-8048a0e
364 [State 595] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 594 not yet applied), shell_len: 1024, eip: 0x00000000

364 [State 595] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
365 [State 595] Leaving buffer range @0xbfba3781, d8 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
365 [State 595] Killing state 595
365 [State 595] Terminating state 595 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
365 [State 595] Switching from state 595 to state 0
Copied 34928 (count=1)
Deleting state 595 0x0x2ccd8180
365 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 594
>> fuzzInit: datum forking for value 595
>> fuzzInit: datum forking for value 595
365 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 595)
        (ReadLSB w32 0 v595_fuzz_symb_595)))
    state 596 with condition (Not (Eq false
         (Eq (w32 595)
             (ReadLSB w32 0 v595_fuzz_symb_595))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-595-8048a0e
Size=2 Low=0 splitIndex=1 high=1
365 [State 0] Switching from state 0 to state 596
Copied 34928 (count=1)
Finalizing TB execution 596
s2e_dummyMainFunction
tcg-llvm-tb-595-8048a0e
Firing timer event
365 [State 596] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 595 not yet applied), shell_len: 1024, eip: 0x00000000

365 [State 596] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
365 [State 596] Leaving buffer range @0xbfba3783, d7 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
365 [State 596] Killing state 596
365 [State 596] Terminating state 596 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
365 [State 596] Switching from state 596 to state 0
Copied 34928 (count=1)
Deleting state 596 0x0x2ccd8180
365 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 595
>> fuzzInit: datum forking for value 596
>> fuzzInit: datum forking for value 596
366 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 596)
        (ReadLSB w32 0 v596_fuzz_symb_596)))
    state 597 with condition (Not (Eq false
         (Eq (w32 596)
             (ReadLSB w32 0 v596_fuzz_symb_596))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-596-8048a0e
Size=2 Low=0 splitIndex=1 high=1
366 [State 0] Switching from state 0 to state 597
Copied 34928 (count=1)
Finalizing TB execution 597
s2e_dummyMainFunction
tcg-llvm-tb-596-8048a0e
366 [State 597] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 596 not yet applied), shell_len: 1024, eip: 0x00000000

366 [State 597] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
366 [State 597] Leaving buffer range @0xbfba3781, d7 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
366 [State 597] Killing state 597
366 [State 597] Terminating state 597 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
366 [State 597] Switching from state 597 to state 0
Copied 34928 (count=1)
Deleting state 597 0x0x2ccefee0
Firing timer event
366 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 596
>> fuzzInit: datum forking for value 597
>> fuzzInit: datum forking for value 597
366 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 597)
        (ReadLSB w32 0 v597_fuzz_symb_597)))
    state 598 with condition (Not (Eq false
         (Eq (w32 597)
             (ReadLSB w32 0 v597_fuzz_symb_597))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-597-8048a0e
Size=2 Low=0 splitIndex=1 high=1
366 [State 0] Switching from state 0 to state 598
Copied 34928 (count=1)
Finalizing TB execution 598
s2e_dummyMainFunction
tcg-llvm-tb-597-8048a0e
366 [State 598] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 597 not yet applied), shell_len: 1024, eip: 0x00000000

366 [State 598] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
366 [State 598] Leaving buffer range @0xbfba3783, d6 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
366 [State 598] Killing state 598
366 [State 598] Terminating state 598 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
366 [State 598] Switching from state 598 to state 0
Copied 34928 (count=1)
Deleting state 598 0x0x2ccefee0
367 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 597
>> fuzzInit: datum forking for value 598
>> fuzzInit: datum forking for value 598
367 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 598)
        (ReadLSB w32 0 v598_fuzz_symb_598)))
    state 599 with condition (Not (Eq false
         (Eq (w32 598)
             (ReadLSB w32 0 v598_fuzz_symb_598))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-598-8048a0e
Size=2 Low=0 splitIndex=1 high=1
367 [State 0] Switching from state 0 to state 599
Copied 34928 (count=1)
Finalizing TB execution 599
s2e_dummyMainFunction
tcg-llvm-tb-598-8048a0e
367 [State 599] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 598 not yet applied), shell_len: 1024, eip: 0x00000000

367 [State 599] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
367 [State 599] Leaving buffer range @0xbfba3781, d6 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
367 [State 599] Killing state 599
367 [State 599] Terminating state 599 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
367 [State 599] Switching from state 599 to state 0
Copied 34928 (count=1)
Deleting state 599 0x0x2ccefee0
367 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 598
>> fuzzInit: datum forking for value 599
>> fuzzInit: datum forking for value 599
367 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 599)
        (ReadLSB w32 0 v599_fuzz_symb_599)))
    state 600 with condition (Not (Eq false
         (Eq (w32 599)
             (ReadLSB w32 0 v599_fuzz_symb_599))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-599-8048a0e
Size=2 Low=0 splitIndex=1 high=1
367 [State 0] Switching from state 0 to state 600
Copied 34928 (count=1)
Finalizing TB execution 600
s2e_dummyMainFunction
tcg-llvm-tb-599-8048a0e
368 [State 600] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 599 not yet applied), shell_len: 1024, eip: 0x00000000

368 [State 600] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
368 [State 600] Leaving buffer range @0xbfba3783, d5 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
368 [State 600] Killing state 600
368 [State 600] Terminating state 600 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
368 [State 600] Switching from state 600 to state 0
Copied 34928 (count=1)
Deleting state 600 0x0x2ccefee0
368 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 599
>> fuzzInit: datum forking for value 600
>> fuzzInit: datum forking for value 600
>> fuzzInit: datum forking for value 600
368 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 600)
        (ReadLSB w32 0 v600_fuzz_symb_600)))
    state 601 with condition (Not (Eq false
         (Eq (w32 600)
             (ReadLSB w32 0 v600_fuzz_symb_600))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-600-8048a0e
Size=2 Low=0 splitIndex=1 high=1
368 [State 0] Switching from state 0 to state 601
Copied 34928 (count=1)
Finalizing TB execution 601
s2e_dummyMainFunction
tcg-llvm-tb-600-8048a0e
Firing timer event
368 [State 601] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 600 not yet applied), shell_len: 1024, eip: 0x00000000

368 [State 601] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
368 [State 601] Leaving buffer range @0xbfba3781, d5 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
368 [State 601] Killing state 601
368 [State 601] Terminating state 601 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
368 [State 601] Switching from state 601 to state 0
Copied 34928 (count=1)
Deleting state 601 0x0x2cf4cb20
368 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 600
>> fuzzInit: datum forking for value 601
>> fuzzInit: datum forking for value 601
369 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 601)
        (ReadLSB w32 0 v601_fuzz_symb_601)))
    state 602 with condition (Not (Eq false
         (Eq (w32 601)
             (ReadLSB w32 0 v601_fuzz_symb_601))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-601-8048a0e
Size=2 Low=0 splitIndex=1 high=1
369 [State 0] Switching from state 0 to state 602
Copied 34928 (count=1)
Finalizing TB execution 602
s2e_dummyMainFunction
tcg-llvm-tb-601-8048a0e
369 [State 602] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 601 not yet applied), shell_len: 1024, eip: 0x00000000

369 [State 602] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
369 [State 602] Leaving buffer range @0xbfba3783, d4 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
369 [State 602] Killing state 602
369 [State 602] Terminating state 602 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
369 [State 602] Switching from state 602 to state 0
Copied 34928 (count=1)
Deleting state 602 0x0x2cf4cb20
Firing timer event
369 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 601
>> fuzzInit: datum forking for value 602
>> fuzzInit: datum forking for value 602
369 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 602)
        (ReadLSB w32 0 v602_fuzz_symb_602)))
    state 603 with condition (Not (Eq false
         (Eq (w32 602)
             (ReadLSB w32 0 v602_fuzz_symb_602))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-602-8048a0e
Size=2 Low=0 splitIndex=1 high=1
369 [State 0] Switching from state 0 to state 603
Copied 34928 (count=1)
Finalizing TB execution 603
s2e_dummyMainFunction
tcg-llvm-tb-602-8048a0e
370 [State 603] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 602 not yet applied), shell_len: 1024, eip: 0x00000000

370 [State 603] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
370 [State 603] Leaving buffer range @0xbfba3781, d4 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
370 [State 603] Killing state 603
370 [State 603] Terminating state 603 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
370 [State 603] Switching from state 603 to state 0
Copied 34928 (count=1)
Deleting state 603 0x0x2cf4cb20
370 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 602
>> fuzzInit: datum forking for value 603
>> fuzzInit: datum forking for value 603
370 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 603)
        (ReadLSB w32 0 v603_fuzz_symb_603)))
    state 604 with condition (Not (Eq false
         (Eq (w32 603)
             (ReadLSB w32 0 v603_fuzz_symb_603))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-603-8048a0e
Size=2 Low=0 splitIndex=1 high=1
370 [State 0] Switching from state 0 to state 604
Copied 34928 (count=1)
Finalizing TB execution 604
s2e_dummyMainFunction
tcg-llvm-tb-603-8048a0e
370 [State 604] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 603 not yet applied), shell_len: 1024, eip: 0x00000000

Firing timer event
370 [State 604] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
370 [State 604] Leaving buffer range @0xbfba3783, d3 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
370 [State 604] Killing state 604
370 [State 604] Terminating state 604 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
370 [State 604] Switching from state 604 to state 0
Copied 34928 (count=1)
Deleting state 604 0x0x2cda1b90
370 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 603
>> fuzzInit: datum forking for value 604
>> fuzzInit: datum forking for value 604
371 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 604)
        (ReadLSB w32 0 v604_fuzz_symb_604)))
    state 605 with condition (Not (Eq false
         (Eq (w32 604)
             (ReadLSB w32 0 v604_fuzz_symb_604))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-604-8048a0e
Size=2 Low=0 splitIndex=1 high=1
371 [State 0] Switching from state 0 to state 605
Copied 34928 (count=1)
Finalizing TB execution 605
s2e_dummyMainFunction
tcg-llvm-tb-604-8048a0e
371 [State 605] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 604 not yet applied), shell_len: 1024, eip: 0x00000000

371 [State 605] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
371 [State 605] Leaving buffer range @0xbfba3781, d3 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
371 [State 605] Killing state 605
371 [State 605] Terminating state 605 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
371 [State 605] Switching from state 605 to state 0
Copied 34928 (count=1)
Deleting state 605 0x0x2cfefa40
371 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 604
>> fuzzInit: datum forking for value 605
>> fuzzInit: datum forking for value 605
371 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 605)
        (ReadLSB w32 0 v605_fuzz_symb_605)))
    state 606 with condition (Not (Eq false
         (Eq (w32 605)
             (ReadLSB w32 0 v605_fuzz_symb_605))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-605-8048a0e
Size=2 Low=0 splitIndex=1 high=1
371 [State 0] Switching from state 0 to state 606
Copied 34928 (count=1)
Finalizing TB execution 606
s2e_dummyMainFunction
tcg-llvm-tb-605-8048a0e
Firing timer event
371 [State 606] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 605 not yet applied), shell_len: 1024, eip: 0x00000000

371 [State 606] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
371 [State 606] Leaving buffer range @0xbfba3783, d2 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
372 [State 606] Killing state 606
372 [State 606] Terminating state 606 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
372 [State 606] Switching from state 606 to state 0
Copied 34928 (count=1)
Deleting state 606 0x0x2cfefa40
372 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 605
>> fuzzInit: datum forking for value 606
>> fuzzInit: datum forking for value 606
372 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 606)
        (ReadLSB w32 0 v606_fuzz_symb_606)))
    state 607 with condition (Not (Eq false
         (Eq (w32 606)
             (ReadLSB w32 0 v606_fuzz_symb_606))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-606-8048a0e
Size=2 Low=0 splitIndex=1 high=1
372 [State 0] Switching from state 0 to state 607
Copied 34928 (count=1)
Finalizing TB execution 607
s2e_dummyMainFunction
tcg-llvm-tb-606-8048a0e
372 [State 607] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 606 not yet applied), shell_len: 1024, eip: 0x00000000

372 [State 607] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
372 [State 607] Leaving buffer range @0xbfba3781, d2 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
372 [State 607] Killing state 607
372 [State 607] Terminating state 607 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
372 [State 607] Switching from state 607 to state 0
Copied 34928 (count=1)
Deleting state 607 0x0x2cff2ae0
Firing timer event
372 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 606
>> fuzzInit: datum forking for value 607
>> fuzzInit: datum forking for value 607
373 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 607)
        (ReadLSB w32 0 v607_fuzz_symb_607)))
    state 608 with condition (Not (Eq false
         (Eq (w32 607)
             (ReadLSB w32 0 v607_fuzz_symb_607))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-607-8048a0e
Size=2 Low=0 splitIndex=1 high=1
373 [State 0] Switching from state 0 to state 608
Copied 34928 (count=1)
Finalizing TB execution 608
s2e_dummyMainFunction
tcg-llvm-tb-607-8048a0e
373 [State 608] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 607 not yet applied), shell_len: 1024, eip: 0x00000000

373 [State 608] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
373 [State 608] Leaving buffer range @0xbfba3783, d1 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
373 [State 608] Killing state 608
373 [State 608] Terminating state 608 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
373 [State 608] Switching from state 608 to state 0
Copied 34928 (count=1)
Deleting state 608 0x0x2cff2ae0
373 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 607
>> fuzzInit: datum forking for value 608
>> fuzzInit: datum forking for value 608
373 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 608)
        (ReadLSB w32 0 v608_fuzz_symb_608)))
    state 609 with condition (Not (Eq false
         (Eq (w32 608)
             (ReadLSB w32 0 v608_fuzz_symb_608))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-608-8048a0e
Size=2 Low=0 splitIndex=1 high=1
373 [State 0] Switching from state 0 to state 609
Copied 34928 (count=1)
Finalizing TB execution 609
s2e_dummyMainFunction
tcg-llvm-tb-608-8048a0e
373 [State 609] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 608 not yet applied), shell_len: 1024, eip: 0x00000000

373 [State 609] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
373 [State 609] Leaving buffer range @0xbfba3781, d1 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
373 [State 609] Killing state 609
373 [State 609] Terminating state 609 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
373 [State 609] Switching from state 609 to state 0
Copied 34928 (count=1)
Deleting state 609 0x0x2cff2ae0
374 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 608
>> fuzzInit: datum forking for value 609
>> fuzzInit: datum forking for value 609
374 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 609)
        (ReadLSB w32 0 v609_fuzz_symb_609)))
    state 610 with condition (Not (Eq false
         (Eq (w32 609)
             (ReadLSB w32 0 v609_fuzz_symb_609))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-609-8048a0e
Size=2 Low=0 splitIndex=1 high=1
374 [State 0] Switching from state 0 to state 610
Copied 34928 (count=1)
Finalizing TB execution 610
s2e_dummyMainFunction
tcg-llvm-tb-609-8048a0e
374 [State 610] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 609 not yet applied), shell_len: 1024, eip: 0x00000000

374 [State 610] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
374 [State 610] Leaving buffer range @0xbfba3783, d0 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
374 [State 610] Killing state 610
374 [State 610] Terminating state 610 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
374 [State 610] Switching from state 610 to state 0
Copied 34928 (count=1)
Deleting state 610 0x0x2cff2ae0
374 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 609
>> fuzzInit: datum forking for value 610
>> fuzzInit: datum forking for value 610
375 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 610)
        (ReadLSB w32 0 v610_fuzz_symb_610)))
    state 611 with condition (Not (Eq false
         (Eq (w32 610)
             (ReadLSB w32 0 v610_fuzz_symb_610))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-610-8048a0e
Size=2 Low=0 splitIndex=1 high=1
375 [State 0] Switching from state 0 to state 611
Copied 34928 (count=1)
Finalizing TB execution 611
s2e_dummyMainFunction
tcg-llvm-tb-610-8048a0e
Firing timer event
375 [State 611] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 610 not yet applied), shell_len: 1024, eip: 0x00000000

375 [State 611] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
375 [State 611] Leaving buffer range @0xbfba3781, d0 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
375 [State 611] Killing state 611
375 [State 611] Terminating state 611 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
375 [State 611] Switching from state 611 to state 0
Copied 34928 (count=1)
Deleting state 611 0x0x2cff2ae0
375 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 610
>> fuzzInit: datum forking for value 611
>> fuzzInit: datum forking for value 611
375 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 611)
        (ReadLSB w32 0 v611_fuzz_symb_611)))
    state 612 with condition (Not (Eq false
         (Eq (w32 611)
             (ReadLSB w32 0 v611_fuzz_symb_611))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-611-8048a0e
Size=2 Low=0 splitIndex=1 high=1
375 [State 0] Switching from state 0 to state 612
Copied 34928 (count=1)
Finalizing TB execution 612
s2e_dummyMainFunction
tcg-llvm-tb-611-8048a0e
375 [State 612] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 611 not yet applied), shell_len: 1024, eip: 0x00000000

375 [State 612] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
375 [State 612] Leaving buffer range @0xbfba3783, cf IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
375 [State 612] Killing state 612
375 [State 612] Terminating state 612 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
375 [State 612] Switching from state 612 to state 0
Copied 34928 (count=1)
Deleting state 612 0x0x2cff2ae0
Firing timer event
376 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 611
>> fuzzInit: datum forking for value 612
>> fuzzInit: datum forking for value 612
376 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 612)
        (ReadLSB w32 0 v612_fuzz_symb_612)))
    state 613 with condition (Not (Eq false
         (Eq (w32 612)
             (ReadLSB w32 0 v612_fuzz_symb_612))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-612-8048a0e
Size=2 Low=0 splitIndex=1 high=1
376 [State 0] Switching from state 0 to state 613
Copied 34928 (count=1)
Finalizing TB execution 613
s2e_dummyMainFunction
tcg-llvm-tb-612-8048a0e
376 [State 613] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 612 not yet applied), shell_len: 1024, eip: 0x00000000

376 [State 613] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
376 [State 613] Leaving buffer range @0xbfba3781, cf IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
376 [State 613] Killing state 613
376 [State 613] Terminating state 613 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
376 [State 613] Switching from state 613 to state 0
Copied 34928 (count=1)
Deleting state 613 0x0x2d139c90
376 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 612
>> fuzzInit: datum forking for value 613
>> fuzzInit: datum forking for value 613
376 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 613)
        (ReadLSB w32 0 v613_fuzz_symb_613)))
    state 614 with condition (Not (Eq false
         (Eq (w32 613)
             (ReadLSB w32 0 v613_fuzz_symb_613))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-613-8048a0e
Size=2 Low=0 splitIndex=1 high=1
376 [State 0] Switching from state 0 to state 614
Copied 34928 (count=1)
Finalizing TB execution 614
s2e_dummyMainFunction
tcg-llvm-tb-613-8048a0e
377 [State 614] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 613 not yet applied), shell_len: 1024, eip: 0x00000000

377 [State 614] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
377 [State 614] Leaving buffer range @0xbfba3783, ce IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
377 [State 614] Killing state 614
377 [State 614] Terminating state 614 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
377 [State 614] Switching from state 614 to state 0
Copied 34928 (count=1)
Deleting state 614 0x0x2d139c90
377 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 613
>> fuzzInit: datum forking for value 614
>> fuzzInit: datum forking for value 614
377 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 614)
        (ReadLSB w32 0 v614_fuzz_symb_614)))
    state 615 with condition (Not (Eq false
         (Eq (w32 614)
             (ReadLSB w32 0 v614_fuzz_symb_614))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-614-8048a0e
Size=2 Low=0 splitIndex=1 high=1
377 [State 0] Switching from state 0 to state 615
Copied 34928 (count=1)
Finalizing TB execution 615
s2e_dummyMainFunction
tcg-llvm-tb-614-8048a0e
377 [State 615] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 614 not yet applied), shell_len: 1024, eip: 0x00000000

377 [State 615] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
377 [State 615] Leaving buffer range @0xbfba3781, ce IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
377 [State 615] Killing state 615
377 [State 615] Terminating state 615 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
377 [State 615] Switching from state 615 to state 0
Copied 34928 (count=1)
Deleting state 615 0x0x2d139c90
378 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 614
>> fuzzInit: datum forking for value 615
>> fuzzInit: datum forking for value 615
378 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 615)
        (ReadLSB w32 0 v615_fuzz_symb_615)))
    state 616 with condition (Not (Eq false
         (Eq (w32 615)
             (ReadLSB w32 0 v615_fuzz_symb_615))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-615-8048a0e
Size=2 Low=0 splitIndex=1 high=1
378 [State 0] Switching from state 0 to state 616
Copied 34928 (count=1)
Finalizing TB execution 616
s2e_dummyMainFunction
tcg-llvm-tb-615-8048a0e
Firing timer event
378 [State 616] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 615 not yet applied), shell_len: 1024, eip: 0x00000000

378 [State 616] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
378 [State 616] Leaving buffer range @0xbfba3783, cd IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
378 [State 616] Killing state 616
378 [State 616] Terminating state 616 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
378 [State 616] Switching from state 616 to state 0
Copied 34928 (count=1)
Deleting state 616 0x0x2d3c2270
378 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 615
>> fuzzInit: datum forking for value 616
>> fuzzInit: datum forking for value 616
378 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 616)
        (ReadLSB w32 0 v616_fuzz_symb_616)))
    state 617 with condition (Not (Eq false
         (Eq (w32 616)
             (ReadLSB w32 0 v616_fuzz_symb_616))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-616-8048a0e
Size=2 Low=0 splitIndex=1 high=1
378 [State 0] Switching from state 0 to state 617
Copied 34928 (count=1)
Finalizing TB execution 617
s2e_dummyMainFunction
tcg-llvm-tb-616-8048a0e
379 [State 617] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 616 not yet applied), shell_len: 1024, eip: 0x00000000

379 [State 617] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
379 [State 617] Leaving buffer range @0xbfba3781, cd IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
379 [State 617] Killing state 617
379 [State 617] Terminating state 617 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
379 [State 617] Switching from state 617 to state 0
Copied 34928 (count=1)
Deleting state 617 0x0x2d27b5d0
Firing timer event
379 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 616
>> fuzzInit: datum forking for value 617
>> fuzzInit: datum forking for value 617
379 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 617)
        (ReadLSB w32 0 v617_fuzz_symb_617)))
    state 618 with condition (Not (Eq false
         (Eq (w32 617)
             (ReadLSB w32 0 v617_fuzz_symb_617))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-617-8048a0e
Size=2 Low=0 splitIndex=1 high=1
379 [State 0] Switching from state 0 to state 618
Copied 34928 (count=1)
Finalizing TB execution 618
s2e_dummyMainFunction
tcg-llvm-tb-617-8048a0e
379 [State 618] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 617 not yet applied), shell_len: 1024, eip: 0x00000000

379 [State 618] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
379 [State 618] Leaving buffer range @0xbfba3783, cc IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
379 [State 618] Killing state 618
379 [State 618] Terminating state 618 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
379 [State 618] Switching from state 618 to state 0
Copied 34928 (count=1)
Deleting state 618 0x0x2d27b5d0
379 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 617
>> fuzzInit: datum forking for value 618
>> fuzzInit: datum forking for value 618
380 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 618)
        (ReadLSB w32 0 v618_fuzz_symb_618)))
    state 619 with condition (Not (Eq false
         (Eq (w32 618)
             (ReadLSB w32 0 v618_fuzz_symb_618))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-618-8048a0e
Size=2 Low=0 splitIndex=1 high=1
380 [State 0] Switching from state 0 to state 619
Copied 34928 (count=1)
Finalizing TB execution 619
s2e_dummyMainFunction
tcg-llvm-tb-618-8048a0e
380 [State 619] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 618 not yet applied), shell_len: 1024, eip: 0x00000000

380 [State 619] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
380 [State 619] Leaving buffer range @0xbfba3781, cc IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
380 [State 619] Killing state 619
380 [State 619] Terminating state 619 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
380 [State 619] Switching from state 619 to state 0
Copied 34928 (count=1)
Deleting state 619 0x0x2d27b5d0
380 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 618
>> fuzzInit: datum forking for value 619
>> fuzzInit: datum forking for value 619
380 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 619)
        (ReadLSB w32 0 v619_fuzz_symb_619)))
    state 620 with condition (Not (Eq false
         (Eq (w32 619)
             (ReadLSB w32 0 v619_fuzz_symb_619))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-619-8048a0e
Size=2 Low=0 splitIndex=1 high=1
380 [State 0] Switching from state 0 to state 620
Copied 34928 (count=1)
Finalizing TB execution 620
s2e_dummyMainFunction
tcg-llvm-tb-619-8048a0e
380 [State 620] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 619 not yet applied), shell_len: 1024, eip: 0x00000000

380 [State 620] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
380 [State 620] Leaving buffer range @0xbfba3783, cb IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
381 [State 620] Killing state 620
381 [State 620] Terminating state 620 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
381 [State 620] Switching from state 620 to state 0
Copied 34928 (count=1)
Deleting state 620 0x0x2d27b5d0
381 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 619
>> fuzzInit: datum forking for value 620
>> fuzzInit: datum forking for value 620
381 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 620)
        (ReadLSB w32 0 v620_fuzz_symb_620)))
    state 621 with condition (Not (Eq false
         (Eq (w32 620)
             (ReadLSB w32 0 v620_fuzz_symb_620))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-620-8048a0e
Size=2 Low=0 splitIndex=1 high=1
381 [State 0] Switching from state 0 to state 621
Copied 34928 (count=1)
Finalizing TB execution 621
s2e_dummyMainFunction
tcg-llvm-tb-620-8048a0e
Firing timer event
381 [State 621] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 620 not yet applied), shell_len: 1024, eip: 0x00000000

381 [State 621] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
381 [State 621] Leaving buffer range @0xbfba3781, cb IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
381 [State 621] Killing state 621
381 [State 621] Terminating state 621 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
381 [State 621] Switching from state 621 to state 0
Copied 34928 (count=1)
Deleting state 621 0x0x2d27b5d0
381 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 620
>> fuzzInit: datum forking for value 621
>> fuzzInit: datum forking for value 621
382 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 621)
        (ReadLSB w32 0 v621_fuzz_symb_621)))
    state 622 with condition (Not (Eq false
         (Eq (w32 621)
             (ReadLSB w32 0 v621_fuzz_symb_621))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-621-8048a0e
Size=2 Low=0 splitIndex=1 high=1
382 [State 0] Switching from state 0 to state 622
Copied 34928 (count=1)
Finalizing TB execution 622
s2e_dummyMainFunction
tcg-llvm-tb-621-8048a0e
382 [State 622] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 621 not yet applied), shell_len: 1024, eip: 0x00000000

382 [State 622] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
382 [State 622] Leaving buffer range @0xbfba3783, ca IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
382 [State 622] Killing state 622
382 [State 622] Terminating state 622 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
382 [State 622] Switching from state 622 to state 0
Copied 34928 (count=1)
Deleting state 622 0x0x2d5b6860
Firing timer event
382 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 621
>> fuzzInit: datum forking for value 622
>> fuzzInit: datum forking for value 622
382 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 622)
        (ReadLSB w32 0 v622_fuzz_symb_622)))
    state 623 with condition (Not (Eq false
         (Eq (w32 622)
             (ReadLSB w32 0 v622_fuzz_symb_622))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-622-8048a0e
Size=2 Low=0 splitIndex=1 high=1
382 [State 0] Switching from state 0 to state 623
Copied 34928 (count=1)
Finalizing TB execution 623
s2e_dummyMainFunction
tcg-llvm-tb-622-8048a0e
382 [State 623] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 622 not yet applied), shell_len: 1024, eip: 0x00000000

382 [State 623] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
382 [State 623] Leaving buffer range @0xbfba3781, ca IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
382 [State 623] Killing state 623
382 [State 623] Terminating state 623 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
382 [State 623] Switching from state 623 to state 0
Copied 34928 (count=1)
Deleting state 623 0x0x2d5b6860
383 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 622
>> fuzzInit: datum forking for value 623
>> fuzzInit: datum forking for value 623
383 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 623)
        (ReadLSB w32 0 v623_fuzz_symb_623)))
    state 624 with condition (Not (Eq false
         (Eq (w32 623)
             (ReadLSB w32 0 v623_fuzz_symb_623))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-623-8048a0e
Size=2 Low=0 splitIndex=1 high=1
383 [State 0] Switching from state 0 to state 624
Copied 34928 (count=1)
Finalizing TB execution 624
s2e_dummyMainFunction
tcg-llvm-tb-623-8048a0e
383 [State 624] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 623 not yet applied), shell_len: 1024, eip: 0x00000000

383 [State 624] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
383 [State 624] Leaving buffer range @0xbfba3783, c9 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
383 [State 624] Killing state 624
383 [State 624] Terminating state 624 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
383 [State 624] Switching from state 624 to state 0
Copied 34928 (count=1)
Deleting state 624 0x0x2d3c1780
383 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 623
>> fuzzInit: datum forking for value 624
>> fuzzInit: datum forking for value 624
383 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 624)
        (ReadLSB w32 0 v624_fuzz_symb_624)))
    state 625 with condition (Not (Eq false
         (Eq (w32 624)
             (ReadLSB w32 0 v624_fuzz_symb_624))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-624-8048a0e
Size=2 Low=0 splitIndex=1 high=1
383 [State 0] Switching from state 0 to state 625
Copied 34928 (count=1)
Finalizing TB execution 625
s2e_dummyMainFunction
tcg-llvm-tb-624-8048a0e
384 [State 625] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 624 not yet applied), shell_len: 1024, eip: 0x00000000

384 [State 625] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
384 [State 625] Leaving buffer range @0xbfba3781, c9 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
384 [State 625] Killing state 625
384 [State 625] Terminating state 625 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
384 [State 625] Switching from state 625 to state 0
Copied 34928 (count=1)
Deleting state 625 0x0x2d5f9890
384 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 624
>> fuzzInit: datum forking for value 625
>> fuzzInit: datum forking for value 625
384 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 625)
        (ReadLSB w32 0 v625_fuzz_symb_625)))
    state 626 with condition (Not (Eq false
         (Eq (w32 625)
             (ReadLSB w32 0 v625_fuzz_symb_625))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-625-8048a0e
Size=2 Low=0 splitIndex=1 high=1
384 [State 0] Switching from state 0 to state 626
Copied 34928 (count=1)
Finalizing TB execution 626
s2e_dummyMainFunction
tcg-llvm-tb-625-8048a0e
Firing timer event
384 [State 626] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 625 not yet applied), shell_len: 1024, eip: 0x00000000

384 [State 626] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
384 [State 626] Leaving buffer range @0xbfba3783, c8 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
385 [State 626] Killing state 626
385 [State 626] Terminating state 626 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
385 [State 626] Switching from state 626 to state 0
Copied 34928 (count=1)
Deleting state 626 0x0x2d5f9890
385 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 625
>> fuzzInit: datum forking for value 626
>> fuzzInit: datum forking for value 626
385 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 626)
        (ReadLSB w32 0 v626_fuzz_symb_626)))
    state 627 with condition (Not (Eq false
         (Eq (w32 626)
             (ReadLSB w32 0 v626_fuzz_symb_626))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-626-8048a0e
Size=2 Low=0 splitIndex=1 high=1
385 [State 0] Switching from state 0 to state 627
Copied 34928 (count=1)
Finalizing TB execution 627
s2e_dummyMainFunction
tcg-llvm-tb-626-8048a0e
385 [State 627] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 626 not yet applied), shell_len: 1024, eip: 0x00000000

385 [State 627] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
385 [State 627] Leaving buffer range @0xbfba3781, c8 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
385 [State 627] Killing state 627
385 [State 627] Terminating state 627 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
385 [State 627] Switching from state 627 to state 0
Copied 34928 (count=1)
Deleting state 627 0x0x2d5a1d50
Firing timer event
385 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 626
>> fuzzInit: datum forking for value 627
>> fuzzInit: datum forking for value 627
386 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 627)
        (ReadLSB w32 0 v627_fuzz_symb_627)))
    state 628 with condition (Not (Eq false
         (Eq (w32 627)
             (ReadLSB w32 0 v627_fuzz_symb_627))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-627-8048a0e
Size=2 Low=0 splitIndex=1 high=1
386 [State 0] Switching from state 0 to state 628
Copied 34928 (count=1)
Finalizing TB execution 628
s2e_dummyMainFunction
tcg-llvm-tb-627-8048a0e
386 [State 628] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 627 not yet applied), shell_len: 1024, eip: 0x00000000

386 [State 628] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
386 [State 628] Leaving buffer range @0xbfba3783, c7 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
386 [State 628] Killing state 628
386 [State 628] Terminating state 628 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
386 [State 628] Switching from state 628 to state 0
Copied 34928 (count=1)
Deleting state 628 0x0x2d40e460
386 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 627
>> fuzzInit: datum forking for value 628
>> fuzzInit: datum forking for value 628
386 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 628)
        (ReadLSB w32 0 v628_fuzz_symb_628)))
    state 629 with condition (Not (Eq false
         (Eq (w32 628)
             (ReadLSB w32 0 v628_fuzz_symb_628))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-628-8048a0e
Size=2 Low=0 splitIndex=1 high=1
386 [State 0] Switching from state 0 to state 629
Copied 34928 (count=1)
Finalizing TB execution 629
s2e_dummyMainFunction
tcg-llvm-tb-628-8048a0e
Firing timer event
386 [State 629] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 628 not yet applied), shell_len: 1024, eip: 0x00000000

386 [State 629] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
387 [State 629] Leaving buffer range @0xbfba3781, c7 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
387 [State 629] Killing state 629
387 [State 629] Terminating state 629 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
387 [State 629] Switching from state 629 to state 0
Copied 34928 (count=1)
Deleting state 629 0x0x2d40e460
387 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 628
>> fuzzInit: datum forking for value 629
>> fuzzInit: datum forking for value 629
387 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 629)
        (ReadLSB w32 0 v629_fuzz_symb_629)))
    state 630 with condition (Not (Eq false
         (Eq (w32 629)
             (ReadLSB w32 0 v629_fuzz_symb_629))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-629-8048a0e
Size=2 Low=0 splitIndex=1 high=1
387 [State 0] Switching from state 0 to state 630
Copied 34928 (count=1)
Finalizing TB execution 630
s2e_dummyMainFunction
tcg-llvm-tb-629-8048a0e
387 [State 630] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 629 not yet applied), shell_len: 1024, eip: 0x00000000

387 [State 630] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
388 [State 630] Leaving buffer range @0xbfba3783, c6 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
388 [State 630] Killing state 630
388 [State 630] Terminating state 630 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
388 [State 630] Switching from state 630 to state 0
Copied 34928 (count=1)
Deleting state 630 0x0x2d68e5a0
388 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 629
>> fuzzInit: datum forking for value 630
>> fuzzInit: datum forking for value 630
388 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 630)
        (ReadLSB w32 0 v630_fuzz_symb_630)))
    state 631 with condition (Not (Eq false
         (Eq (w32 630)
             (ReadLSB w32 0 v630_fuzz_symb_630))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-630-8048a0e
Size=2 Low=0 splitIndex=1 high=1
388 [State 0] Switching from state 0 to state 631
Copied 34928 (count=1)
Finalizing TB execution 631
s2e_dummyMainFunction
tcg-llvm-tb-630-8048a0e
388 [State 631] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 630 not yet applied), shell_len: 1024, eip: 0x00000000

388 [State 631] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
388 [State 631] Leaving buffer range @0xbfba3781, c6 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
388 [State 631] Killing state 631
388 [State 631] Terminating state 631 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
388 [State 631] Switching from state 631 to state 0
Copied 34928 (count=1)
Deleting state 631 0x0x2d8feff0
Firing timer event
389 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 630
>> fuzzInit: datum forking for value 631
>> fuzzInit: datum forking for value 631
389 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 631)
        (ReadLSB w32 0 v631_fuzz_symb_631)))
    state 632 with condition (Not (Eq false
         (Eq (w32 631)
             (ReadLSB w32 0 v631_fuzz_symb_631))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-631-8048a0e
Size=2 Low=0 splitIndex=1 high=1
389 [State 0] Switching from state 0 to state 632
Copied 34928 (count=1)
Finalizing TB execution 632
s2e_dummyMainFunction
tcg-llvm-tb-631-8048a0e
389 [State 632] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 631 not yet applied), shell_len: 1024, eip: 0x00000000

389 [State 632] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
389 [State 632] Leaving buffer range @0xc1003072, 4a IoB insns; prev insn @0xbfba3689
  1   2B @0xbfba3689:  0  0             add [eax], al           
389 [State 632] Entering buffer range @0xbfba368b, 1 OoB insns
389 [State 632] Leaving buffer range @0xbfba3783, 7b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
389 [State 632] Killing state 632
389 [State 632] Terminating state 632 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
389 [State 632] Switching from state 632 to state 0
Copied 34928 (count=1)
Deleting state 632 0x0x2d5e5b30
Firing timer event
390 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 631
>> fuzzInit: datum forking for value 632
>> fuzzInit: datum forking for value 632
390 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 632)
        (ReadLSB w32 0 v632_fuzz_symb_632)))
    state 633 with condition (Not (Eq false
         (Eq (w32 632)
             (ReadLSB w32 0 v632_fuzz_symb_632))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-632-8048a0e
Size=2 Low=0 splitIndex=1 high=1
390 [State 0] Switching from state 0 to state 633
Copied 34928 (count=1)
Finalizing TB execution 633
s2e_dummyMainFunction
tcg-llvm-tb-632-8048a0e
390 [State 633] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 632 not yet applied), shell_len: 1024, eip: 0x00000000

390 [State 633] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
390 [State 633] Leaving buffer range @0xbfba3781, c5 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
390 [State 633] Killing state 633
390 [State 633] Terminating state 633 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
390 [State 633] Switching from state 633 to state 0
Copied 34928 (count=1)
Deleting state 633 0x0x2d6f2f80
390 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 632
>> fuzzInit: datum forking for value 633
>> fuzzInit: datum forking for value 633
391 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 633)
        (ReadLSB w32 0 v633_fuzz_symb_633)))
    state 634 with condition (Not (Eq false
         (Eq (w32 633)
             (ReadLSB w32 0 v633_fuzz_symb_633))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-633-8048a0e
Size=2 Low=0 splitIndex=1 high=1
391 [State 0] Switching from state 0 to state 634
Copied 34928 (count=1)
Finalizing TB execution 634
s2e_dummyMainFunction
tcg-llvm-tb-633-8048a0e
Firing timer event
391 [State 634] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 633 not yet applied), shell_len: 1024, eip: 0x00000000

391 [State 634] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
391 [State 634] Leaving buffer range @0xbfba3783, c4 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
391 [State 634] Killing state 634
391 [State 634] Terminating state 634 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
391 [State 634] Switching from state 634 to state 0
Copied 34928 (count=1)
Deleting state 634 0x0x2da217e0
391 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 633
>> fuzzInit: datum forking for value 634
>> fuzzInit: datum forking for value 634
391 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 634)
        (ReadLSB w32 0 v634_fuzz_symb_634)))
    state 635 with condition (Not (Eq false
         (Eq (w32 634)
             (ReadLSB w32 0 v634_fuzz_symb_634))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-634-8048a0e
Size=2 Low=0 splitIndex=1 high=1
391 [State 0] Switching from state 0 to state 635
Copied 34928 (count=1)
Finalizing TB execution 635
s2e_dummyMainFunction
tcg-llvm-tb-634-8048a0e
391 [State 635] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 634 not yet applied), shell_len: 1024, eip: 0x00000000

391 [State 635] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
391 [State 635] Leaving buffer range @0xbfba3781, c4 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
392 [State 635] Killing state 635
392 [State 635] Terminating state 635 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
392 [State 635] Switching from state 635 to state 0
Copied 34928 (count=1)
Deleting state 635 0x0x2dade580
Firing timer event
392 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 634
>> fuzzInit: datum forking for value 635
>> fuzzInit: datum forking for value 635
392 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 635)
        (ReadLSB w32 0 v635_fuzz_symb_635)))
    state 636 with condition (Not (Eq false
         (Eq (w32 635)
             (ReadLSB w32 0 v635_fuzz_symb_635))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-635-8048a0e
Size=2 Low=0 splitIndex=1 high=1
392 [State 0] Switching from state 0 to state 636
Copied 34928 (count=1)
Finalizing TB execution 636
s2e_dummyMainFunction
tcg-llvm-tb-635-8048a0e
392 [State 636] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 635 not yet applied), shell_len: 1024, eip: 0x00000000

392 [State 636] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
392 [State 636] Leaving buffer range @0xbfba3783, c3 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
392 [State 636] Killing state 636
392 [State 636] Terminating state 636 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
392 [State 636] Switching from state 636 to state 0
Copied 34928 (count=1)
Deleting state 636 0x0x2dade580
392 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 635
>> fuzzInit: datum forking for value 636
>> fuzzInit: datum forking for value 636
393 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 636)
        (ReadLSB w32 0 v636_fuzz_symb_636)))
    state 637 with condition (Not (Eq false
         (Eq (w32 636)
             (ReadLSB w32 0 v636_fuzz_symb_636))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-636-8048a0e
Size=2 Low=0 splitIndex=1 high=1
393 [State 0] Switching from state 0 to state 637
Copied 34928 (count=1)
Finalizing TB execution 637
s2e_dummyMainFunction
tcg-llvm-tb-636-8048a0e
Firing timer event
393 [State 637] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 636 not yet applied), shell_len: 1024, eip: 0x00000000

393 [State 637] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
393 [State 637] Leaving buffer range @0xbfba3781, c3 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
393 [State 637] Killing state 637
393 [State 637] Terminating state 637 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
393 [State 637] Switching from state 637 to state 0
Copied 34928 (count=1)
Deleting state 637 0x0x2dade580
393 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 636
>> fuzzInit: datum forking for value 637
>> fuzzInit: datum forking for value 637
393 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 637)
        (ReadLSB w32 0 v637_fuzz_symb_637)))
    state 638 with condition (Not (Eq false
         (Eq (w32 637)
             (ReadLSB w32 0 v637_fuzz_symb_637))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-637-8048a0e
Size=2 Low=0 splitIndex=1 high=1
393 [State 0] Switching from state 0 to state 638
Copied 34928 (count=1)
Finalizing TB execution 638
s2e_dummyMainFunction
tcg-llvm-tb-637-8048a0e
393 [State 638] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 637 not yet applied), shell_len: 1024, eip: 0x00000000

393 [State 638] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
393 [State 638] Leaving buffer range @0xbfba3783, c2 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
393 [State 638] Killing state 638
393 [State 638] Terminating state 638 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
393 [State 638] Switching from state 638 to state 0
Copied 34928 (count=1)
Deleting state 638 0x0x2dade580
394 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 637
>> fuzzInit: datum forking for value 638
>> fuzzInit: datum forking for value 638
>> fuzzInit: datum forking for value 638
394 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 638)
        (ReadLSB w32 0 v638_fuzz_symb_638)))
    state 639 with condition (Not (Eq false
         (Eq (w32 638)
             (ReadLSB w32 0 v638_fuzz_symb_638))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-638-8048a0e
Size=2 Low=0 splitIndex=1 high=1
394 [State 0] Switching from state 0 to state 639
Copied 34928 (count=1)
Finalizing TB execution 639
s2e_dummyMainFunction
tcg-llvm-tb-638-8048a0e
Firing timer event
394 [State 639] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 638 not yet applied), shell_len: 1024, eip: 0x00000000

394 [State 639] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
394 [State 639] Leaving buffer range @0xbfba3781, c2 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
394 [State 639] Killing state 639
394 [State 639] Terminating state 639 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
394 [State 639] Switching from state 639 to state 0
Copied 34928 (count=1)
Deleting state 639 0x0x2dade580
394 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 638
>> fuzzInit: datum forking for value 639
>> fuzzInit: datum forking for value 639
394 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 639)
        (ReadLSB w32 0 v639_fuzz_symb_639)))
    state 640 with condition (Not (Eq false
         (Eq (w32 639)
             (ReadLSB w32 0 v639_fuzz_symb_639))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-639-8048a0e
Size=2 Low=0 splitIndex=1 high=1
394 [State 0] Switching from state 0 to state 640
Copied 34928 (count=1)
Finalizing TB execution 640
s2e_dummyMainFunction
tcg-llvm-tb-639-8048a0e
395 [State 640] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 639 not yet applied), shell_len: 1024, eip: 0x00000000

395 [State 640] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
395 [State 640] Leaving buffer range @0xbfba3783, c1 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
395 [State 640] Killing state 640
395 [State 640] Terminating state 640 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
395 [State 640] Switching from state 640 to state 0
Copied 34928 (count=1)
Deleting state 640 0x0x2dcd7950
395 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 639
>> fuzzInit: datum forking for value 640
>> fuzzInit: datum forking for value 640
395 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 640)
        (ReadLSB w32 0 v640_fuzz_symb_640)))
    state 641 with condition (Not (Eq false
         (Eq (w32 640)
             (ReadLSB w32 0 v640_fuzz_symb_640))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-640-8048a0e
Size=2 Low=0 splitIndex=1 high=1
395 [State 0] Switching from state 0 to state 641
Copied 34928 (count=1)
Finalizing TB execution 641
s2e_dummyMainFunction
tcg-llvm-tb-640-8048a0e
Firing timer event
395 [State 641] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 640 not yet applied), shell_len: 1024, eip: 0x00000000

395 [State 641] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
395 [State 641] Leaving buffer range @0xbfba3781, c1 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
395 [State 641] Killing state 641
395 [State 641] Terminating state 641 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
395 [State 641] Switching from state 641 to state 0
Copied 34928 (count=1)
Deleting state 641 0x0x2d7d1b30
396 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 640
>> fuzzInit: datum forking for value 641
>> fuzzInit: datum forking for value 641
396 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 641)
        (ReadLSB w32 0 v641_fuzz_symb_641)))
    state 642 with condition (Not (Eq false
         (Eq (w32 641)
             (ReadLSB w32 0 v641_fuzz_symb_641))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-641-8048a0e
Size=2 Low=0 splitIndex=1 high=1
396 [State 0] Switching from state 0 to state 642
Copied 34928 (count=1)
Finalizing TB execution 642
s2e_dummyMainFunction
tcg-llvm-tb-641-8048a0e
396 [State 642] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 641 not yet applied), shell_len: 1024, eip: 0x00000000

396 [State 642] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
396 [State 642] Leaving buffer range @0xbfba3783, c0 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
396 [State 642] Killing state 642
396 [State 642] Terminating state 642 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
396 [State 642] Switching from state 642 to state 0
Copied 34928 (count=1)
Deleting state 642 0x0x2dd79e20
396 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 641
>> fuzzInit: datum forking for value 642
>> fuzzInit: datum forking for value 642
396 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 642)
        (ReadLSB w32 0 v642_fuzz_symb_642)))
    state 643 with condition (Not (Eq false
         (Eq (w32 642)
             (ReadLSB w32 0 v642_fuzz_symb_642))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-642-8048a0e
Size=2 Low=0 splitIndex=1 high=1
396 [State 0] Switching from state 0 to state 643
Copied 34928 (count=1)
Finalizing TB execution 643
s2e_dummyMainFunction
tcg-llvm-tb-642-8048a0e
Firing timer event
396 [State 643] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 642 not yet applied), shell_len: 1024, eip: 0x00000000

396 [State 643] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
396 [State 643] Leaving buffer range @0xbfba3781, c0 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
397 [State 643] Killing state 643
397 [State 643] Terminating state 643 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
397 [State 643] Switching from state 643 to state 0
Copied 34928 (count=1)
Deleting state 643 0x0x2dcc1970
397 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 642
>> fuzzInit: datum forking for value 643
>> fuzzInit: datum forking for value 643
397 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 643)
        (ReadLSB w32 0 v643_fuzz_symb_643)))
    state 644 with condition (Not (Eq false
         (Eq (w32 643)
             (ReadLSB w32 0 v643_fuzz_symb_643))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-643-8048a0e
Size=2 Low=0 splitIndex=1 high=1
397 [State 0] Switching from state 0 to state 644
Copied 34928 (count=1)
Finalizing TB execution 644
s2e_dummyMainFunction
tcg-llvm-tb-643-8048a0e
397 [State 644] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 643 not yet applied), shell_len: 1024, eip: 0x00000000

397 [State 644] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
397 [State 644] Leaving buffer range @0xbfba3783, bf IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
397 [State 644] Killing state 644
397 [State 644] Terminating state 644 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
397 [State 644] Switching from state 644 to state 0
Copied 34928 (count=1)
Deleting state 644 0x0x2db4c920
Firing timer event
397 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 643
>> fuzzInit: datum forking for value 644
>> fuzzInit: datum forking for value 644
398 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 644)
        (ReadLSB w32 0 v644_fuzz_symb_644)))
    state 645 with condition (Not (Eq false
         (Eq (w32 644)
             (ReadLSB w32 0 v644_fuzz_symb_644))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-644-8048a0e
Size=2 Low=0 splitIndex=1 high=1
398 [State 0] Switching from state 0 to state 645
Copied 34928 (count=1)
Finalizing TB execution 645
s2e_dummyMainFunction
tcg-llvm-tb-644-8048a0e
398 [State 645] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 644 not yet applied), shell_len: 1024, eip: 0x00000000

398 [State 645] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
398 [State 645] Leaving buffer range @0xbfba3781, bf IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
398 [State 645] Killing state 645
398 [State 645] Terminating state 645 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
398 [State 645] Switching from state 645 to state 0
Copied 34928 (count=1)
Deleting state 645 0x0x2db4c920
398 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 644
>> fuzzInit: datum forking for value 645
>> fuzzInit: datum forking for value 645
398 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 645)
        (ReadLSB w32 0 v645_fuzz_symb_645)))
    state 646 with condition (Not (Eq false
         (Eq (w32 645)
             (ReadLSB w32 0 v645_fuzz_symb_645))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-645-8048a0e
Size=2 Low=0 splitIndex=1 high=1
398 [State 0] Switching from state 0 to state 646
Copied 34928 (count=1)
Finalizing TB execution 646
s2e_dummyMainFunction
tcg-llvm-tb-645-8048a0e
398 [State 646] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 645 not yet applied), shell_len: 1024, eip: 0x00000000

398 [State 646] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
398 [State 646] Leaving buffer range @0xbfba3783, be IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
398 [State 646] Killing state 646
398 [State 646] Terminating state 646 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
398 [State 646] Switching from state 646 to state 0
Copied 34928 (count=1)
Deleting state 646 0x0x2db4c920
399 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 645
>> fuzzInit: datum forking for value 646
>> fuzzInit: datum forking for value 646
399 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 646)
        (ReadLSB w32 0 v646_fuzz_symb_646)))
    state 647 with condition (Not (Eq false
         (Eq (w32 646)
             (ReadLSB w32 0 v646_fuzz_symb_646))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-646-8048a0e
Size=2 Low=0 splitIndex=1 high=1
399 [State 0] Switching from state 0 to state 647
Copied 34928 (count=1)
Finalizing TB execution 647
s2e_dummyMainFunction
tcg-llvm-tb-646-8048a0e
399 [State 647] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 646 not yet applied), shell_len: 1024, eip: 0x00000000

399 [State 647] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
399 [State 647] Leaving buffer range @0xbfba3781, be IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
399 [State 647] Killing state 647
399 [State 647] Terminating state 647 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
399 [State 647] Switching from state 647 to state 0
Copied 34928 (count=1)
Deleting state 647 0x0x2dcf5a50
399 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 646
>> fuzzInit: datum forking for value 647
>> fuzzInit: datum forking for value 647
399 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 647)
        (ReadLSB w32 0 v647_fuzz_symb_647)))
    state 648 with condition (Not (Eq false
         (Eq (w32 647)
             (ReadLSB w32 0 v647_fuzz_symb_647))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-647-8048a0e
Size=2 Low=0 splitIndex=1 high=1
399 [State 0] Switching from state 0 to state 648
Copied 34928 (count=1)
Finalizing TB execution 648
s2e_dummyMainFunction
tcg-llvm-tb-647-8048a0e
Firing timer event
400 [State 648] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 647 not yet applied), shell_len: 1024, eip: 0x00000000

400 [State 648] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
400 [State 648] Leaving buffer range @0xbfba3783, bd IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
400 [State 648] Killing state 648
400 [State 648] Terminating state 648 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
400 [State 648] Switching from state 648 to state 0
Copied 34928 (count=1)
Deleting state 648 0x0x2dd2ada0
400 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 647
>> fuzzInit: datum forking for value 648
>> fuzzInit: datum forking for value 648
400 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 648)
        (ReadLSB w32 0 v648_fuzz_symb_648)))
    state 649 with condition (Not (Eq false
         (Eq (w32 648)
             (ReadLSB w32 0 v648_fuzz_symb_648))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-648-8048a0e
Size=2 Low=0 splitIndex=1 high=1
400 [State 0] Switching from state 0 to state 649
Copied 34928 (count=1)
Finalizing TB execution 649
s2e_dummyMainFunction
tcg-llvm-tb-648-8048a0e
400 [State 649] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 648 not yet applied), shell_len: 1024, eip: 0x00000000

400 [State 649] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
400 [State 649] Leaving buffer range @0xbfba3781, bd IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
400 [State 649] Killing state 649
400 [State 649] Terminating state 649 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
400 [State 649] Switching from state 649 to state 0
Copied 34928 (count=1)
Deleting state 649 0x0x2dd2ada0
400 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 648
>> fuzzInit: datum forking for value 649
>> fuzzInit: datum forking for value 649
401 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 649)
        (ReadLSB w32 0 v649_fuzz_symb_649)))
    state 650 with condition (Not (Eq false
         (Eq (w32 649)
             (ReadLSB w32 0 v649_fuzz_symb_649))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-649-8048a0e
Size=2 Low=0 splitIndex=1 high=1
401 [State 0] Switching from state 0 to state 650
Copied 34928 (count=1)
Finalizing TB execution 650
s2e_dummyMainFunction
tcg-llvm-tb-649-8048a0e
Firing timer event
401 [State 650] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 649 not yet applied), shell_len: 1024, eip: 0x00000000

401 [State 650] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
401 [State 650] Leaving buffer range @0xbfba3783, bc IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
401 [State 650] Killing state 650
401 [State 650] Terminating state 650 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
401 [State 650] Switching from state 650 to state 0
Copied 34928 (count=1)
Deleting state 650 0x0x2dec0190
401 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 649
>> fuzzInit: datum forking for value 650
>> fuzzInit: datum forking for value 650
401 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 650)
        (ReadLSB w32 0 v650_fuzz_symb_650)))
    state 651 with condition (Not (Eq false
         (Eq (w32 650)
             (ReadLSB w32 0 v650_fuzz_symb_650))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-650-8048a0e
Size=2 Low=0 splitIndex=1 high=1
401 [State 0] Switching from state 0 to state 651
Copied 34928 (count=1)
Finalizing TB execution 651
s2e_dummyMainFunction
tcg-llvm-tb-650-8048a0e
401 [State 651] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 650 not yet applied), shell_len: 1024, eip: 0x00000000

401 [State 651] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
402 [State 651] Leaving buffer range @0xbfba3781, bc IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
402 [State 651] Killing state 651
402 [State 651] Terminating state 651 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
402 [State 651] Switching from state 651 to state 0
Copied 34928 (count=1)
Deleting state 651 0x0x2dea63b0
Firing timer event
402 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 650
>> fuzzInit: datum forking for value 651
>> fuzzInit: datum forking for value 651
402 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 651)
        (ReadLSB w32 0 v651_fuzz_symb_651)))
    state 652 with condition (Not (Eq false
         (Eq (w32 651)
             (ReadLSB w32 0 v651_fuzz_symb_651))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-651-8048a0e
Size=2 Low=0 splitIndex=1 high=1
402 [State 0] Switching from state 0 to state 652
Copied 34928 (count=1)
Finalizing TB execution 652
s2e_dummyMainFunction
tcg-llvm-tb-651-8048a0e
402 [State 652] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 651 not yet applied), shell_len: 1024, eip: 0x00000000

402 [State 652] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
402 [State 652] Leaving buffer range @0xbfba3783, bb IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
402 [State 652] Killing state 652
402 [State 652] Terminating state 652 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
402 [State 652] Switching from state 652 to state 0
Copied 34928 (count=1)
Deleting state 652 0x0x2dea63b0
402 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 651
>> fuzzInit: datum forking for value 652
>> fuzzInit: datum forking for value 652
403 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 652)
        (ReadLSB w32 0 v652_fuzz_symb_652)))
    state 653 with condition (Not (Eq false
         (Eq (w32 652)
             (ReadLSB w32 0 v652_fuzz_symb_652))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-652-8048a0e
Size=2 Low=0 splitIndex=1 high=1
403 [State 0] Switching from state 0 to state 653
Copied 34928 (count=1)
Finalizing TB execution 653
s2e_dummyMainFunction
tcg-llvm-tb-652-8048a0e
403 [State 653] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 652 not yet applied), shell_len: 1024, eip: 0x00000000

403 [State 653] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
403 [State 653] Leaving buffer range @0xbfba3781, bb IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
403 [State 653] Killing state 653
403 [State 653] Terminating state 653 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
403 [State 653] Switching from state 653 to state 0
Copied 34928 (count=1)
Deleting state 653 0x0x2dea63b0
403 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 652
>> fuzzInit: datum forking for value 653
>> fuzzInit: datum forking for value 653
403 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 653)
        (ReadLSB w32 0 v653_fuzz_symb_653)))
    state 654 with condition (Not (Eq false
         (Eq (w32 653)
             (ReadLSB w32 0 v653_fuzz_symb_653))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-653-8048a0e
Size=2 Low=0 splitIndex=1 high=1
403 [State 0] Switching from state 0 to state 654
Copied 34928 (count=1)
Finalizing TB execution 654
s2e_dummyMainFunction
tcg-llvm-tb-653-8048a0e
403 [State 654] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 653 not yet applied), shell_len: 1024, eip: 0x00000000

403 [State 654] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
403 [State 654] Leaving buffer range @0xbfba3783, ba IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
403 [State 654] Killing state 654
403 [State 654] Terminating state 654 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
403 [State 654] Switching from state 654 to state 0
Copied 34928 (count=1)
Deleting state 654 0x0x2dec0190
404 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 653
>> fuzzInit: datum forking for value 654
>> fuzzInit: datum forking for value 654
404 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 654)
        (ReadLSB w32 0 v654_fuzz_symb_654)))
    state 655 with condition (Not (Eq false
         (Eq (w32 654)
             (ReadLSB w32 0 v654_fuzz_symb_654))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-654-8048a0e
Size=2 Low=0 splitIndex=1 high=1
404 [State 0] Switching from state 0 to state 655
Copied 34928 (count=1)
Finalizing TB execution 655
s2e_dummyMainFunction
tcg-llvm-tb-654-8048a0e
Firing timer event
404 [State 655] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 654 not yet applied), shell_len: 1024, eip: 0x00000000

404 [State 655] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
404 [State 655] Leaving buffer range @0xbfba3781, ba IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
404 [State 655] Killing state 655
404 [State 655] Terminating state 655 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
404 [State 655] Switching from state 655 to state 0
Copied 34928 (count=1)
Deleting state 655 0x0x2df16520
404 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 654
>> fuzzInit: datum forking for value 655
>> fuzzInit: datum forking for value 655
405 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 655)
        (ReadLSB w32 0 v655_fuzz_symb_655)))
    state 656 with condition (Not (Eq false
         (Eq (w32 655)
             (ReadLSB w32 0 v655_fuzz_symb_655))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-655-8048a0e
Size=2 Low=0 splitIndex=1 high=1
405 [State 0] Switching from state 0 to state 656
Copied 34928 (count=1)
Finalizing TB execution 656
s2e_dummyMainFunction
tcg-llvm-tb-655-8048a0e
405 [State 656] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 655 not yet applied), shell_len: 1024, eip: 0x00000000

405 [State 656] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
405 [State 656] Leaving buffer range @0xc126f278, b9 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
405 [State 656] Killing state 656
405 [State 656] Terminating state 656 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
405 [State 656] Switching from state 656 to state 0
Copied 34928 (count=1)
Deleting state 656 0x0x2df16520
Firing timer event
405 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 655
>> fuzzInit: datum forking for value 656
>> fuzzInit: datum forking for value 656
405 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 656)
        (ReadLSB w32 0 v656_fuzz_symb_656)))
    state 657 with condition (Not (Eq false
         (Eq (w32 656)
             (ReadLSB w32 0 v656_fuzz_symb_656))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-656-8048a0e
Size=2 Low=0 splitIndex=1 high=1
405 [State 0] Switching from state 0 to state 657
Copied 34928 (count=1)
Finalizing TB execution 657
s2e_dummyMainFunction
tcg-llvm-tb-656-8048a0e
405 [State 657] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 656 not yet applied), shell_len: 1024, eip: 0x00000000

405 [State 657] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
405 [State 657] Leaving buffer range @0xbfba3781, b9 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
405 [State 657] Killing state 657
405 [State 657] Terminating state 657 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
405 [State 657] Switching from state 657 to state 0
Copied 34928 (count=1)
Deleting state 657 0x0x2e011910
406 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 656
>> fuzzInit: datum forking for value 657
>> fuzzInit: datum forking for value 657
406 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 657)
        (ReadLSB w32 0 v657_fuzz_symb_657)))
    state 658 with condition (Not (Eq false
         (Eq (w32 657)
             (ReadLSB w32 0 v657_fuzz_symb_657))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-657-8048a0e
Size=2 Low=0 splitIndex=1 high=1
406 [State 0] Switching from state 0 to state 658
Copied 34928 (count=1)
Finalizing TB execution 658
s2e_dummyMainFunction
tcg-llvm-tb-657-8048a0e
406 [State 658] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 657 not yet applied), shell_len: 1024, eip: 0x00000000

406 [State 658] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
406 [State 658] Leaving buffer range @0xc126f278, b8 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
406 [State 658] Killing state 658
406 [State 658] Terminating state 658 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
406 [State 658] Switching from state 658 to state 0
Copied 34928 (count=1)
Deleting state 658 0x0x2e28bdf0
406 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 657
>> fuzzInit: datum forking for value 658
>> fuzzInit: datum forking for value 658
406 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 658)
        (ReadLSB w32 0 v658_fuzz_symb_658)))
    state 659 with condition (Not (Eq false
         (Eq (w32 658)
             (ReadLSB w32 0 v658_fuzz_symb_658))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-658-8048a0e
Size=2 Low=0 splitIndex=1 high=1
406 [State 0] Switching from state 0 to state 659
Copied 34928 (count=1)
Finalizing TB execution 659
s2e_dummyMainFunction
tcg-llvm-tb-658-8048a0e
406 [State 659] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 658 not yet applied), shell_len: 1024, eip: 0x00000000

406 [State 659] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
407 [State 659] Leaving buffer range @0xbfba3781, b8 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
407 [State 659] Killing state 659
407 [State 659] Terminating state 659 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
407 [State 659] Switching from state 659 to state 0
Copied 34928 (count=1)
Deleting state 659 0x0x2e1115e0
407 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 658
>> fuzzInit: datum forking for value 659
>> fuzzInit: datum forking for value 659
407 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 659)
        (ReadLSB w32 0 v659_fuzz_symb_659)))
    state 660 with condition (Not (Eq false
         (Eq (w32 659)
             (ReadLSB w32 0 v659_fuzz_symb_659))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-659-8048a0e
Size=2 Low=0 splitIndex=1 high=1
407 [State 0] Switching from state 0 to state 660
Copied 34928 (count=1)
Finalizing TB execution 660
s2e_dummyMainFunction
tcg-llvm-tb-659-8048a0e
Firing timer event
407 [State 660] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 659 not yet applied), shell_len: 1024, eip: 0x00000000

407 [State 660] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
407 [State 660] Leaving buffer range @0xbfba3783, b7 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
407 [State 660] Killing state 660
407 [State 660] Terminating state 660 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
407 [State 660] Switching from state 660 to state 0
Copied 34928 (count=1)
Deleting state 660 0x0x2e1115e0
407 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 659
>> fuzzInit: datum forking for value 660
>> fuzzInit: datum forking for value 660
408 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 660)
        (ReadLSB w32 0 v660_fuzz_symb_660)))
    state 661 with condition (Not (Eq false
         (Eq (w32 660)
             (ReadLSB w32 0 v660_fuzz_symb_660))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-660-8048a0e
Size=2 Low=0 splitIndex=1 high=1
408 [State 0] Switching from state 0 to state 661
Copied 34928 (count=1)
Finalizing TB execution 661
s2e_dummyMainFunction
tcg-llvm-tb-660-8048a0e
408 [State 661] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 660 not yet applied), shell_len: 1024, eip: 0x00000000

408 [State 661] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
408 [State 661] Leaving buffer range @0xbfba3781, b7 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
408 [State 661] Killing state 661
408 [State 661] Terminating state 661 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
408 [State 661] Switching from state 661 to state 0
Copied 34928 (count=1)
Deleting state 661 0x0x2e0fae90
Firing timer event
408 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 660
>> fuzzInit: datum forking for value 661
>> fuzzInit: datum forking for value 661
408 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 661)
        (ReadLSB w32 0 v661_fuzz_symb_661)))
    state 662 with condition (Not (Eq false
         (Eq (w32 661)
             (ReadLSB w32 0 v661_fuzz_symb_661))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-661-8048a0e
Size=2 Low=0 splitIndex=1 high=1
408 [State 0] Switching from state 0 to state 662
Copied 34928 (count=1)
Finalizing TB execution 662
s2e_dummyMainFunction
tcg-llvm-tb-661-8048a0e
408 [State 662] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 661 not yet applied), shell_len: 1024, eip: 0x00000000

408 [State 662] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
409 [State 662] Leaving buffer range @0xbfba3783, b6 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
409 [State 662] Killing state 662
409 [State 662] Terminating state 662 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
409 [State 662] Switching from state 662 to state 0
Copied 34928 (count=1)
Deleting state 662 0x0x2e074570
409 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 661
>> fuzzInit: datum forking for value 662
>> fuzzInit: datum forking for value 662
409 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 662)
        (ReadLSB w32 0 v662_fuzz_symb_662)))
    state 663 with condition (Not (Eq false
         (Eq (w32 662)
             (ReadLSB w32 0 v662_fuzz_symb_662))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-662-8048a0e
Size=2 Low=0 splitIndex=1 high=1
409 [State 0] Switching from state 0 to state 663
Copied 34928 (count=1)
Finalizing TB execution 663
s2e_dummyMainFunction
tcg-llvm-tb-662-8048a0e
Firing timer event
409 [State 663] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 662 not yet applied), shell_len: 1024, eip: 0x00000000

409 [State 663] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
409 [State 663] Leaving buffer range @0xbfba3781, b6 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
409 [State 663] Killing state 663
409 [State 663] Terminating state 663 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
409 [State 663] Switching from state 663 to state 0
Copied 34928 (count=1)
Deleting state 663 0x0x2e295cc0
410 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 662
>> fuzzInit: datum forking for value 663
>> fuzzInit: datum forking for value 663
410 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 663)
        (ReadLSB w32 0 v663_fuzz_symb_663)))
    state 664 with condition (Not (Eq false
         (Eq (w32 663)
             (ReadLSB w32 0 v663_fuzz_symb_663))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-663-8048a0e
Size=2 Low=0 splitIndex=1 high=1
410 [State 0] Switching from state 0 to state 664
Copied 34928 (count=1)
Finalizing TB execution 664
s2e_dummyMainFunction
tcg-llvm-tb-663-8048a0e
410 [State 664] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 663 not yet applied), shell_len: 1024, eip: 0x00000000

410 [State 664] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
410 [State 664] Leaving buffer range @0xbfba3783, b5 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
410 [State 664] Killing state 664
410 [State 664] Terminating state 664 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
410 [State 664] Switching from state 664 to state 0
Copied 34928 (count=1)
Deleting state 664 0x0x2e295cc0
410 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 663
>> fuzzInit: datum forking for value 664
>> fuzzInit: datum forking for value 664
411 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 664)
        (ReadLSB w32 0 v664_fuzz_symb_664)))
    state 665 with condition (Not (Eq false
         (Eq (w32 664)
             (ReadLSB w32 0 v664_fuzz_symb_664))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-664-8048a0e
Size=2 Low=0 splitIndex=1 high=1
411 [State 0] Switching from state 0 to state 665
Copied 34928 (count=1)
Finalizing TB execution 665
s2e_dummyMainFunction
tcg-llvm-tb-664-8048a0e
411 [State 665] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 664 not yet applied), shell_len: 1024, eip: 0x00000000

411 [State 665] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
411 [State 665] Leaving buffer range @0xbfba3781, b5 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
411 [State 665] Killing state 665
411 [State 665] Terminating state 665 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
411 [State 665] Switching from state 665 to state 0
Copied 34928 (count=1)
Deleting state 665 0x0x2e295cc0
411 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 664
>> fuzzInit: datum forking for value 665
>> fuzzInit: datum forking for value 665
411 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 665)
        (ReadLSB w32 0 v665_fuzz_symb_665)))
    state 666 with condition (Not (Eq false
         (Eq (w32 665)
             (ReadLSB w32 0 v665_fuzz_symb_665))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-665-8048a0e
Size=2 Low=0 splitIndex=1 high=1
411 [State 0] Switching from state 0 to state 666
Copied 34928 (count=1)
Finalizing TB execution 666
s2e_dummyMainFunction
tcg-llvm-tb-665-8048a0e
Firing timer event
411 [State 666] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 665 not yet applied), shell_len: 1024, eip: 0x00000000

411 [State 666] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
411 [State 666] Leaving buffer range @0xbfba3783, b4 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
411 [State 666] Killing state 666
411 [State 666] Terminating state 666 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
411 [State 666] Switching from state 666 to state 0
Copied 34928 (count=1)
Deleting state 666 0x0x2e295cc0
412 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 665
>> fuzzInit: datum forking for value 666
>> fuzzInit: datum forking for value 666
412 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 666)
        (ReadLSB w32 0 v666_fuzz_symb_666)))
    state 667 with condition (Not (Eq false
         (Eq (w32 666)
             (ReadLSB w32 0 v666_fuzz_symb_666))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-666-8048a0e
Size=2 Low=0 splitIndex=1 high=1
412 [State 0] Switching from state 0 to state 667
Copied 34928 (count=1)
Finalizing TB execution 667
s2e_dummyMainFunction
tcg-llvm-tb-666-8048a0e
412 [State 667] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 666 not yet applied), shell_len: 1024, eip: 0x00000000

412 [State 667] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
412 [State 667] Leaving buffer range @0xbfba3781, b4 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
412 [State 667] Killing state 667
412 [State 667] Terminating state 667 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
412 [State 667] Switching from state 667 to state 0
Copied 34928 (count=1)
Deleting state 667 0x0x2e295cc0
Firing timer event
412 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 666
>> fuzzInit: datum forking for value 667
>> fuzzInit: datum forking for value 667
412 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 667)
        (ReadLSB w32 0 v667_fuzz_symb_667)))
    state 668 with condition (Not (Eq false
         (Eq (w32 667)
             (ReadLSB w32 0 v667_fuzz_symb_667))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-667-8048a0e
Size=2 Low=0 splitIndex=1 high=1
412 [State 0] Switching from state 0 to state 668
Copied 34928 (count=1)
Finalizing TB execution 668
s2e_dummyMainFunction
tcg-llvm-tb-667-8048a0e
413 [State 668] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 667 not yet applied), shell_len: 1024, eip: 0x00000000

413 [State 668] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
413 [State 668] Leaving buffer range @0xbfba3783, b3 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
413 [State 668] Killing state 668
413 [State 668] Terminating state 668 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
413 [State 668] Switching from state 668 to state 0
Copied 34928 (count=1)
Deleting state 668 0x0x2e5da660
413 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 667
>> fuzzInit: datum forking for value 668
>> fuzzInit: datum forking for value 668
413 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 668)
        (ReadLSB w32 0 v668_fuzz_symb_668)))
    state 669 with condition (Not (Eq false
         (Eq (w32 668)
             (ReadLSB w32 0 v668_fuzz_symb_668))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-668-8048a0e
Size=2 Low=0 splitIndex=1 high=1
413 [State 0] Switching from state 0 to state 669
Copied 34928 (count=1)
Finalizing TB execution 669
s2e_dummyMainFunction
tcg-llvm-tb-668-8048a0e
Firing timer event
413 [State 669] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 668 not yet applied), shell_len: 1024, eip: 0x00000000

413 [State 669] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
413 [State 669] Leaving buffer range @0xbfba3781, b3 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
413 [State 669] Killing state 669
413 [State 669] Terminating state 669 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
413 [State 669] Switching from state 669 to state 0
Copied 34928 (count=1)
Deleting state 669 0x0x2e3e5f60
413 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 668
>> fuzzInit: datum forking for value 669
>> fuzzInit: datum forking for value 669
414 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 669)
        (ReadLSB w32 0 v669_fuzz_symb_669)))
    state 670 with condition (Not (Eq false
         (Eq (w32 669)
             (ReadLSB w32 0 v669_fuzz_symb_669))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-669-8048a0e
Size=2 Low=0 splitIndex=1 high=1
414 [State 0] Switching from state 0 to state 670
Copied 34928 (count=1)
Finalizing TB execution 670
s2e_dummyMainFunction
tcg-llvm-tb-669-8048a0e
414 [State 670] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 669 not yet applied), shell_len: 1024, eip: 0x00000000

414 [State 670] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
414 [State 670] Leaving buffer range @0xbfba3783, b2 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
414 [State 670] Killing state 670
414 [State 670] Terminating state 670 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
414 [State 670] Switching from state 670 to state 0
Copied 34928 (count=1)
Deleting state 670 0x0x2e103e80
414 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 669
>> fuzzInit: datum forking for value 670
>> fuzzInit: datum forking for value 670
414 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 670)
        (ReadLSB w32 0 v670_fuzz_symb_670)))
    state 671 with condition (Not (Eq false
         (Eq (w32 670)
             (ReadLSB w32 0 v670_fuzz_symb_670))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-670-8048a0e
Size=2 Low=0 splitIndex=1 high=1
414 [State 0] Switching from state 0 to state 671
Copied 34928 (count=1)
Finalizing TB execution 671
s2e_dummyMainFunction
tcg-llvm-tb-670-8048a0e
Firing timer event
414 [State 671] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 670 not yet applied), shell_len: 1024, eip: 0x00000000

414 [State 671] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
415 [State 671] Leaving buffer range @0xbfba3781, b2 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
415 [State 671] Killing state 671
415 [State 671] Terminating state 671 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
415 [State 671] Switching from state 671 to state 0
Copied 34928 (count=1)
Deleting state 671 0x0x2e4b61d0
415 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 670
>> fuzzInit: datum forking for value 671
>> fuzzInit: datum forking for value 671
415 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 671)
        (ReadLSB w32 0 v671_fuzz_symb_671)))
    state 672 with condition (Not (Eq false
         (Eq (w32 671)
             (ReadLSB w32 0 v671_fuzz_symb_671))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-671-8048a0e
Size=2 Low=0 splitIndex=1 high=1
415 [State 0] Switching from state 0 to state 672
Copied 34928 (count=1)
Finalizing TB execution 672
s2e_dummyMainFunction
tcg-llvm-tb-671-8048a0e
415 [State 672] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 671 not yet applied), shell_len: 1024, eip: 0x00000000

415 [State 672] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
415 [State 672] Leaving buffer range @0xbfba3783, b1 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
415 [State 672] Killing state 672
415 [State 672] Terminating state 672 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
415 [State 672] Switching from state 672 to state 0
Copied 34928 (count=1)
Deleting state 672 0x0x2e4b61d0
Firing timer event
415 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 671
>> fuzzInit: datum forking for value 672
>> fuzzInit: datum forking for value 672
416 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 672)
        (ReadLSB w32 0 v672_fuzz_symb_672)))
    state 673 with condition (Not (Eq false
         (Eq (w32 672)
             (ReadLSB w32 0 v672_fuzz_symb_672))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-672-8048a0e
Size=2 Low=0 splitIndex=1 high=1
416 [State 0] Switching from state 0 to state 673
Copied 34928 (count=1)
Finalizing TB execution 673
s2e_dummyMainFunction
tcg-llvm-tb-672-8048a0e
416 [State 673] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 672 not yet applied), shell_len: 1024, eip: 0x00000000

416 [State 673] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
416 [State 673] Leaving buffer range @0xbfba3781, b1 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
416 [State 673] Killing state 673
416 [State 673] Terminating state 673 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
416 [State 673] Switching from state 673 to state 0
Copied 34928 (count=1)
Deleting state 673 0x0x2e4b61d0
416 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 672
>> fuzzInit: datum forking for value 673
>> fuzzInit: datum forking for value 673
416 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 673)
        (ReadLSB w32 0 v673_fuzz_symb_673)))
    state 674 with condition (Not (Eq false
         (Eq (w32 673)
             (ReadLSB w32 0 v673_fuzz_symb_673))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-673-8048a0e
Size=2 Low=0 splitIndex=1 high=1
416 [State 0] Switching from state 0 to state 674
Copied 34928 (count=1)
Finalizing TB execution 674
s2e_dummyMainFunction
tcg-llvm-tb-673-8048a0e
Firing timer event
416 [State 674] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 673 not yet applied), shell_len: 1024, eip: 0x00000000

416 [State 674] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
417 [State 674] Leaving buffer range @0xbfba3783, b0 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
417 [State 674] Killing state 674
417 [State 674] Terminating state 674 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
417 [State 674] Switching from state 674 to state 0
Copied 34928 (count=1)
Deleting state 674 0x0x2e72cd10
417 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 673
>> fuzzInit: datum forking for value 674
>> fuzzInit: datum forking for value 674
417 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 674)
        (ReadLSB w32 0 v674_fuzz_symb_674)))
    state 675 with condition (Not (Eq false
         (Eq (w32 674)
             (ReadLSB w32 0 v674_fuzz_symb_674))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-674-8048a0e
Size=2 Low=0 splitIndex=1 high=1
417 [State 0] Switching from state 0 to state 675
Copied 34928 (count=1)
Finalizing TB execution 675
s2e_dummyMainFunction
tcg-llvm-tb-674-8048a0e
417 [State 675] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 674 not yet applied), shell_len: 1024, eip: 0x00000000

417 [State 675] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
417 [State 675] Leaving buffer range @0xbfba3781, b0 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
417 [State 675] Killing state 675
417 [State 675] Terminating state 675 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
417 [State 675] Switching from state 675 to state 0
Copied 34928 (count=1)
Deleting state 675 0x0x2e72cd10
417 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 674
>> fuzzInit: datum forking for value 675
>> fuzzInit: datum forking for value 675
418 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 675)
        (ReadLSB w32 0 v675_fuzz_symb_675)))
    state 676 with condition (Not (Eq false
         (Eq (w32 675)
             (ReadLSB w32 0 v675_fuzz_symb_675))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-675-8048a0e
Size=2 Low=0 splitIndex=1 high=1
418 [State 0] Switching from state 0 to state 676
Copied 34928 (count=1)
Finalizing TB execution 676
s2e_dummyMainFunction
tcg-llvm-tb-675-8048a0e
Firing timer event
418 [State 676] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 675 not yet applied), shell_len: 1024, eip: 0x00000000

418 [State 676] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
418 [State 676] Leaving buffer range @0xbfba3783, af IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
418 [State 676] Killing state 676
418 [State 676] Terminating state 676 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
418 [State 676] Switching from state 676 to state 0
Copied 34928 (count=1)
Deleting state 676 0x0x2e72cd10
418 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 675
>> fuzzInit: datum forking for value 676
>> fuzzInit: datum forking for value 676
418 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 676)
        (ReadLSB w32 0 v676_fuzz_symb_676)))
    state 677 with condition (Not (Eq false
         (Eq (w32 676)
             (ReadLSB w32 0 v676_fuzz_symb_676))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-676-8048a0e
Size=2 Low=0 splitIndex=1 high=1
418 [State 0] Switching from state 0 to state 677
Copied 34928 (count=1)
Finalizing TB execution 677
s2e_dummyMainFunction
tcg-llvm-tb-676-8048a0e
418 [State 677] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 676 not yet applied), shell_len: 1024, eip: 0x00000000

418 [State 677] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
418 [State 677] Leaving buffer range @0xbfba3781, af IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
419 [State 677] Killing state 677
419 [State 677] Terminating state 677 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
419 [State 677] Switching from state 677 to state 0
Copied 34928 (count=1)
Deleting state 677 0x0x2e74bf80
Firing timer event
419 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 676
>> fuzzInit: datum forking for value 677
>> fuzzInit: datum forking for value 677
419 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 677)
        (ReadLSB w32 0 v677_fuzz_symb_677)))
    state 678 with condition (Not (Eq false
         (Eq (w32 677)
             (ReadLSB w32 0 v677_fuzz_symb_677))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-677-8048a0e
Size=2 Low=0 splitIndex=1 high=1
419 [State 0] Switching from state 0 to state 678
Copied 34928 (count=1)
Finalizing TB execution 678
s2e_dummyMainFunction
tcg-llvm-tb-677-8048a0e
419 [State 678] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 677 not yet applied), shell_len: 1024, eip: 0x00000000

419 [State 678] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
419 [State 678] Leaving buffer range @0xbfba3783, ae IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
419 [State 678] Killing state 678
419 [State 678] Terminating state 678 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
419 [State 678] Switching from state 678 to state 0
Copied 34928 (count=1)
Deleting state 678 0x0x2e74bf80
419 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 677
>> fuzzInit: datum forking for value 678
>> fuzzInit: datum forking for value 678
420 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 678)
        (ReadLSB w32 0 v678_fuzz_symb_678)))
    state 679 with condition (Not (Eq false
         (Eq (w32 678)
             (ReadLSB w32 0 v678_fuzz_symb_678))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-678-8048a0e
Size=2 Low=0 splitIndex=1 high=1
420 [State 0] Switching from state 0 to state 679
Copied 34928 (count=1)
Finalizing TB execution 679
s2e_dummyMainFunction
tcg-llvm-tb-678-8048a0e
420 [State 679] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 678 not yet applied), shell_len: 1024, eip: 0x00000000

Firing timer event
420 [State 679] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
420 [State 679] Leaving buffer range @0xbfba3781, ae IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
420 [State 679] Killing state 679
420 [State 679] Terminating state 679 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
420 [State 679] Switching from state 679 to state 0
Copied 34928 (count=1)
Deleting state 679 0x0x2e74bf80
420 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 678
>> fuzzInit: datum forking for value 679
>> fuzzInit: datum forking for value 679
420 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 679)
        (ReadLSB w32 0 v679_fuzz_symb_679)))
    state 680 with condition (Not (Eq false
         (Eq (w32 679)
             (ReadLSB w32 0 v679_fuzz_symb_679))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-679-8048a0e
Size=2 Low=0 splitIndex=1 high=1
420 [State 0] Switching from state 0 to state 680
Copied 34928 (count=1)
Finalizing TB execution 680
s2e_dummyMainFunction
tcg-llvm-tb-679-8048a0e
420 [State 680] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 679 not yet applied), shell_len: 1024, eip: 0x00000000

420 [State 680] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
420 [State 680] Leaving buffer range @0xbfba3783, ad IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
421 [State 680] Killing state 680
421 [State 680] Terminating state 680 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
421 [State 680] Switching from state 680 to state 0
Copied 34928 (count=1)
Deleting state 680 0x0x2e74bf80
421 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 679
>> fuzzInit: datum forking for value 680
>> fuzzInit: datum forking for value 680
421 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 680)
        (ReadLSB w32 0 v680_fuzz_symb_680)))
    state 681 with condition (Not (Eq false
         (Eq (w32 680)
             (ReadLSB w32 0 v680_fuzz_symb_680))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-680-8048a0e
Size=2 Low=0 splitIndex=1 high=1
421 [State 0] Switching from state 0 to state 681
Copied 34928 (count=1)
Finalizing TB execution 681
s2e_dummyMainFunction
tcg-llvm-tb-680-8048a0e
Firing timer event
421 [State 681] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 680 not yet applied), shell_len: 1024, eip: 0x00000000

421 [State 681] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
421 [State 681] Leaving buffer range @0xbfba3781, ad IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
421 [State 681] Killing state 681
421 [State 681] Terminating state 681 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
421 [State 681] Switching from state 681 to state 0
Copied 34928 (count=1)
Deleting state 681 0x0x2e74bf80
421 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 680
>> fuzzInit: datum forking for value 681
>> fuzzInit: datum forking for value 681
422 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 681)
        (ReadLSB w32 0 v681_fuzz_symb_681)))
    state 682 with condition (Not (Eq false
         (Eq (w32 681)
             (ReadLSB w32 0 v681_fuzz_symb_681))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-681-8048a0e
Size=2 Low=0 splitIndex=1 high=1
422 [State 0] Switching from state 0 to state 682
Copied 34928 (count=1)
Finalizing TB execution 682
s2e_dummyMainFunction
tcg-llvm-tb-681-8048a0e
422 [State 682] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 681 not yet applied), shell_len: 1024, eip: 0x00000000

422 [State 682] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
422 [State 682] Leaving buffer range @0xbfba3783, ac IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
422 [State 682] Killing state 682
422 [State 682] Terminating state 682 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
422 [State 682] Switching from state 682 to state 0
Copied 34928 (count=1)
Deleting state 682 0x0x2eaab5a0
Firing timer event
422 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 681
>> fuzzInit: datum forking for value 682
>> fuzzInit: datum forking for value 682
422 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 682)
        (ReadLSB w32 0 v682_fuzz_symb_682)))
    state 683 with condition (Not (Eq false
         (Eq (w32 682)
             (ReadLSB w32 0 v682_fuzz_symb_682))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-682-8048a0e
Size=2 Low=0 splitIndex=1 high=1
422 [State 0] Switching from state 0 to state 683
Copied 34928 (count=1)
Finalizing TB execution 683
s2e_dummyMainFunction
tcg-llvm-tb-682-8048a0e
422 [State 683] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 682 not yet applied), shell_len: 1024, eip: 0x00000000

422 [State 683] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
422 [State 683] Leaving buffer range @0xbfba3781, ac IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
423 [State 683] Killing state 683
423 [State 683] Terminating state 683 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
423 [State 683] Switching from state 683 to state 0
Copied 34928 (count=1)
Deleting state 683 0x0x2e4db700
423 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 682
>> fuzzInit: datum forking for value 683
>> fuzzInit: datum forking for value 683
423 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 683)
        (ReadLSB w32 0 v683_fuzz_symb_683)))
    state 684 with condition (Not (Eq false
         (Eq (w32 683)
             (ReadLSB w32 0 v683_fuzz_symb_683))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-683-8048a0e
Size=2 Low=0 splitIndex=1 high=1
423 [State 0] Switching from state 0 to state 684
Copied 34928 (count=1)
Finalizing TB execution 684
s2e_dummyMainFunction
tcg-llvm-tb-683-8048a0e
Firing timer event
423 [State 684] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 683 not yet applied), shell_len: 1024, eip: 0x00000000

423 [State 684] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
423 [State 684] Leaving buffer range @0xbfba3783, ab IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
423 [State 684] Killing state 684
423 [State 684] Terminating state 684 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
423 [State 684] Switching from state 684 to state 0
Copied 34928 (count=1)
Deleting state 684 0x0x2eb508c0
423 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 683
>> fuzzInit: datum forking for value 684
>> fuzzInit: datum forking for value 684
424 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 684)
        (ReadLSB w32 0 v684_fuzz_symb_684)))
    state 685 with condition (Not (Eq false
         (Eq (w32 684)
             (ReadLSB w32 0 v684_fuzz_symb_684))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-684-8048a0e
Size=2 Low=0 splitIndex=1 high=1
424 [State 0] Switching from state 0 to state 685
Copied 34928 (count=1)
Finalizing TB execution 685
s2e_dummyMainFunction
tcg-llvm-tb-684-8048a0e
424 [State 685] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 684 not yet applied), shell_len: 1024, eip: 0x00000000

424 [State 685] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
424 [State 685] Leaving buffer range @0xbfba3781, ab IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
424 [State 685] Killing state 685
424 [State 685] Terminating state 685 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
424 [State 685] Switching from state 685 to state 0
Copied 34928 (count=1)
Deleting state 685 0x0x2e8d3b20
Firing timer event
424 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 684
>> fuzzInit: datum forking for value 685
>> fuzzInit: datum forking for value 685
424 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 685)
        (ReadLSB w32 0 v685_fuzz_symb_685)))
    state 686 with condition (Not (Eq false
         (Eq (w32 685)
             (ReadLSB w32 0 v685_fuzz_symb_685))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-685-8048a0e
Size=2 Low=0 splitIndex=1 high=1
424 [State 0] Switching from state 0 to state 686
Copied 34928 (count=1)
Finalizing TB execution 686
s2e_dummyMainFunction
tcg-llvm-tb-685-8048a0e
424 [State 686] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 685 not yet applied), shell_len: 1024, eip: 0x00000000

424 [State 686] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
424 [State 686] Leaving buffer range @0xbfba3783, aa IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
424 [State 686] Killing state 686
424 [State 686] Terminating state 686 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
424 [State 686] Switching from state 686 to state 0
Copied 34928 (count=1)
Deleting state 686 0x0x2e8d3b20
425 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 685
>> fuzzInit: datum forking for value 686
>> fuzzInit: datum forking for value 686
425 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 686)
        (ReadLSB w32 0 v686_fuzz_symb_686)))
    state 687 with condition (Not (Eq false
         (Eq (w32 686)
             (ReadLSB w32 0 v686_fuzz_symb_686))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-686-8048a0e
Size=2 Low=0 splitIndex=1 high=1
425 [State 0] Switching from state 0 to state 687
Copied 34928 (count=1)
Finalizing TB execution 687
s2e_dummyMainFunction
tcg-llvm-tb-686-8048a0e
425 [State 687] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 686 not yet applied), shell_len: 1024, eip: 0x00000000

425 [State 687] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
425 [State 687] Leaving buffer range @0xbfba3781, aa IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
Firing timer event
425 [State 687] Killing state 687
425 [State 687] Terminating state 687 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
425 [State 687] Switching from state 687 to state 0
Copied 34928 (count=1)
Deleting state 687 0x0x2ed456a0
425 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 686
>> fuzzInit: datum forking for value 687
>> fuzzInit: datum forking for value 687
425 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 687)
        (ReadLSB w32 0 v687_fuzz_symb_687)))
    state 688 with condition (Not (Eq false
         (Eq (w32 687)
             (ReadLSB w32 0 v687_fuzz_symb_687))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-687-8048a0e
Size=2 Low=0 splitIndex=1 high=1
425 [State 0] Switching from state 0 to state 688
Copied 34928 (count=1)
Finalizing TB execution 688
s2e_dummyMainFunction
tcg-llvm-tb-687-8048a0e
426 [State 688] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 687 not yet applied), shell_len: 1024, eip: 0x00000000

426 [State 688] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
426 [State 688] Leaving buffer range @0xbfba3783, a9 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
426 [State 688] Killing state 688
426 [State 688] Terminating state 688 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
426 [State 688] Switching from state 688 to state 0
Copied 34928 (count=1)
Deleting state 688 0x0x2ed866e0
426 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 687
>> fuzzInit: datum forking for value 688
>> fuzzInit: datum forking for value 688
426 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 688)
        (ReadLSB w32 0 v688_fuzz_symb_688)))
    state 689 with condition (Not (Eq false
         (Eq (w32 688)
             (ReadLSB w32 0 v688_fuzz_symb_688))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-688-8048a0e
Size=2 Low=0 splitIndex=1 high=1
426 [State 0] Switching from state 0 to state 689
Copied 34928 (count=1)
Finalizing TB execution 689
s2e_dummyMainFunction
tcg-llvm-tb-688-8048a0e
Firing timer event
426 [State 689] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 688 not yet applied), shell_len: 1024, eip: 0x00000000

426 [State 689] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
426 [State 689] Leaving buffer range @0xbfba3781, a9 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
426 [State 689] Killing state 689
426 [State 689] Terminating state 689 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
426 [State 689] Switching from state 689 to state 0
Copied 34928 (count=1)
Deleting state 689 0x0x2eb76850
426 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 688
>> fuzzInit: datum forking for value 689
>> fuzzInit: datum forking for value 689
427 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 689)
        (ReadLSB w32 0 v689_fuzz_symb_689)))
    state 690 with condition (Not (Eq false
         (Eq (w32 689)
             (ReadLSB w32 0 v689_fuzz_symb_689))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-689-8048a0e
Size=2 Low=0 splitIndex=1 high=1
427 [State 0] Switching from state 0 to state 690
Copied 34928 (count=1)
Finalizing TB execution 690
s2e_dummyMainFunction
tcg-llvm-tb-689-8048a0e
427 [State 690] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 689 not yet applied), shell_len: 1024, eip: 0x00000000

427 [State 690] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
427 [State 690] Leaving buffer range @0xbfba3783, a8 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
427 [State 690] Killing state 690
427 [State 690] Terminating state 690 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
427 [State 690] Switching from state 690 to state 0
Copied 34928 (count=1)
Deleting state 690 0x0x2ed5e0f0
Firing timer event
427 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 689
>> fuzzInit: datum forking for value 690
>> fuzzInit: datum forking for value 690
427 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 690)
        (ReadLSB w32 0 v690_fuzz_symb_690)))
    state 691 with condition (Not (Eq false
         (Eq (w32 690)
             (ReadLSB w32 0 v690_fuzz_symb_690))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-690-8048a0e
Size=2 Low=0 splitIndex=1 high=1
427 [State 0] Switching from state 0 to state 691
Copied 34928 (count=1)
Finalizing TB execution 691
s2e_dummyMainFunction
tcg-llvm-tb-690-8048a0e
427 [State 691] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 690 not yet applied), shell_len: 1024, eip: 0x00000000

427 [State 691] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
427 [State 691] Leaving buffer range @0xbfba3781, a8 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
427 [State 691] Killing state 691
427 [State 691] Terminating state 691 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
427 [State 691] Switching from state 691 to state 0
Copied 34928 (count=1)
Deleting state 691 0x0x2ee91ef0
428 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 690
>> fuzzInit: datum forking for value 691
>> fuzzInit: datum forking for value 691
428 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 691)
        (ReadLSB w32 0 v691_fuzz_symb_691)))
    state 692 with condition (Not (Eq false
         (Eq (w32 691)
             (ReadLSB w32 0 v691_fuzz_symb_691))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-691-8048a0e
Size=2 Low=0 splitIndex=1 high=1
428 [State 0] Switching from state 0 to state 692
Copied 34928 (count=1)
Finalizing TB execution 692
s2e_dummyMainFunction
tcg-llvm-tb-691-8048a0e
428 [State 692] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 691 not yet applied), shell_len: 1024, eip: 0x00000000

428 [State 692] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
428 [State 692] Leaving buffer range @0xbfba3783, a7 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
428 [State 692] Killing state 692
428 [State 692] Terminating state 692 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
428 [State 692] Switching from state 692 to state 0
Copied 34928 (count=1)
Deleting state 692 0x0x2ee91ef0
428 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 691
>> fuzzInit: datum forking for value 692
>> fuzzInit: datum forking for value 692
429 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 692)
        (ReadLSB w32 0 v692_fuzz_symb_692)))
    state 693 with condition (Not (Eq false
         (Eq (w32 692)
             (ReadLSB w32 0 v692_fuzz_symb_692))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-692-8048a0e
Size=2 Low=0 splitIndex=1 high=1
429 [State 0] Switching from state 0 to state 693
Copied 34928 (count=1)
Finalizing TB execution 693
s2e_dummyMainFunction
tcg-llvm-tb-692-8048a0e
429 [State 693] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 692 not yet applied), shell_len: 1024, eip: 0x00000000

429 [State 693] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
429 [State 693] Leaving buffer range @0xbfba3781, a7 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
429 [State 693] Killing state 693
429 [State 693] Terminating state 693 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
429 [State 693] Switching from state 693 to state 0
Copied 34928 (count=1)
Deleting state 693 0x0x2ee91ef0
429 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 692
>> fuzzInit: datum forking for value 693
>> fuzzInit: datum forking for value 693
429 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 693)
        (ReadLSB w32 0 v693_fuzz_symb_693)))
    state 694 with condition (Not (Eq false
         (Eq (w32 693)
             (ReadLSB w32 0 v693_fuzz_symb_693))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-693-8048a0e
Size=2 Low=0 splitIndex=1 high=1
429 [State 0] Switching from state 0 to state 694
Copied 34928 (count=1)
Finalizing TB execution 694
s2e_dummyMainFunction
tcg-llvm-tb-693-8048a0e
Firing timer event
429 [State 694] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 693 not yet applied), shell_len: 1024, eip: 0x00000000

429 [State 694] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
429 [State 694] Leaving buffer range @0xbfba3783, a6 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
429 [State 694] Killing state 694
429 [State 694] Terminating state 694 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
429 [State 694] Switching from state 694 to state 0
Copied 34928 (count=1)
Deleting state 694 0x0x2ef7ef60
430 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 693
>> fuzzInit: datum forking for value 694
>> fuzzInit: datum forking for value 694
430 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 694)
        (ReadLSB w32 0 v694_fuzz_symb_694)))
    state 695 with condition (Not (Eq false
         (Eq (w32 694)
             (ReadLSB w32 0 v694_fuzz_symb_694))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-694-8048a0e
Size=2 Low=0 splitIndex=1 high=1
430 [State 0] Switching from state 0 to state 695
Copied 34928 (count=1)
Finalizing TB execution 695
s2e_dummyMainFunction
tcg-llvm-tb-694-8048a0e
430 [State 695] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 694 not yet applied), shell_len: 1024, eip: 0x00000000

430 [State 695] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
430 [State 695] Leaving buffer range @0xbfba3781, a6 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
430 [State 695] Killing state 695
430 [State 695] Terminating state 695 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
430 [State 695] Switching from state 695 to state 0
Copied 34928 (count=1)
Deleting state 695 0x0x2efd94c0
Firing timer event
430 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 694
>> fuzzInit: datum forking for value 695
>> fuzzInit: datum forking for value 695
430 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 695)
        (ReadLSB w32 0 v695_fuzz_symb_695)))
    state 696 with condition (Not (Eq false
         (Eq (w32 695)
             (ReadLSB w32 0 v695_fuzz_symb_695))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-695-8048a0e
Size=2 Low=0 splitIndex=1 high=1
430 [State 0] Switching from state 0 to state 696
Copied 34928 (count=1)
Finalizing TB execution 696
s2e_dummyMainFunction
tcg-llvm-tb-695-8048a0e
430 [State 696] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 695 not yet applied), shell_len: 1024, eip: 0x00000000

430 [State 696] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
431 [State 696] Leaving buffer range @0xbfba3783, a5 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
431 [State 696] Killing state 696
431 [State 696] Terminating state 696 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
431 [State 696] Switching from state 696 to state 0
Copied 34928 (count=1)
Deleting state 696 0x0x2edc8090
431 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 695
>> fuzzInit: datum forking for value 696
>> fuzzInit: datum forking for value 696
431 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 696)
        (ReadLSB w32 0 v696_fuzz_symb_696)))
    state 697 with condition (Not (Eq false
         (Eq (w32 696)
             (ReadLSB w32 0 v696_fuzz_symb_696))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-696-8048a0e
Size=2 Low=0 splitIndex=1 high=1
431 [State 0] Switching from state 0 to state 697
Copied 34928 (count=1)
Finalizing TB execution 697
s2e_dummyMainFunction
tcg-llvm-tb-696-8048a0e
431 [State 697] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 696 not yet applied), shell_len: 1024, eip: 0x00000000

431 [State 697] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
431 [State 697] Leaving buffer range @0xbfba3781, a5 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
431 [State 697] Killing state 697
431 [State 697] Terminating state 697 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
431 [State 697] Switching from state 697 to state 0
Copied 34928 (count=1)
Deleting state 697 0x0x2f069db0
431 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 696
>> fuzzInit: datum forking for value 697
>> fuzzInit: datum forking for value 697
432 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 697)
        (ReadLSB w32 0 v697_fuzz_symb_697)))
    state 698 with condition (Not (Eq false
         (Eq (w32 697)
             (ReadLSB w32 0 v697_fuzz_symb_697))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-697-8048a0e
Size=2 Low=0 splitIndex=1 high=1
432 [State 0] Switching from state 0 to state 698
Copied 34928 (count=1)
Finalizing TB execution 698
s2e_dummyMainFunction
tcg-llvm-tb-697-8048a0e
432 [State 698] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 697 not yet applied), shell_len: 1024, eip: 0x00000000

432 [State 698] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
432 [State 698] Leaving buffer range @0xbfba3783, a4 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
432 [State 698] Killing state 698
432 [State 698] Terminating state 698 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
432 [State 698] Switching from state 698 to state 0
Copied 34928 (count=1)
Deleting state 698 0x0x2ee94080
432 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 697
>> fuzzInit: datum forking for value 698
>> fuzzInit: datum forking for value 698
432 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 698)
        (ReadLSB w32 0 v698_fuzz_symb_698)))
    state 699 with condition (Not (Eq false
         (Eq (w32 698)
             (ReadLSB w32 0 v698_fuzz_symb_698))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-698-8048a0e
Size=2 Low=0 splitIndex=1 high=1
432 [State 0] Switching from state 0 to state 699
Copied 34928 (count=1)
Finalizing TB execution 699
s2e_dummyMainFunction
tcg-llvm-tb-698-8048a0e
Firing timer event
432 [State 699] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 698 not yet applied), shell_len: 1024, eip: 0x00000000

432 [State 699] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
432 [State 699] Leaving buffer range @0xbfba3781, a4 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
432 [State 699] Killing state 699
432 [State 699] Terminating state 699 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
432 [State 699] Switching from state 699 to state 0
Copied 34928 (count=1)
Deleting state 699 0x0x2f035c40
433 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 698
>> fuzzInit: datum forking for value 699
>> fuzzInit: datum forking for value 699
433 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 699)
        (ReadLSB w32 0 v699_fuzz_symb_699)))
    state 700 with condition (Not (Eq false
         (Eq (w32 699)
             (ReadLSB w32 0 v699_fuzz_symb_699))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-699-8048a0e
Size=2 Low=0 splitIndex=1 high=1
433 [State 0] Switching from state 0 to state 700
Copied 34928 (count=1)
Finalizing TB execution 700
s2e_dummyMainFunction
tcg-llvm-tb-699-8048a0e
433 [State 700] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 699 not yet applied), shell_len: 1024, eip: 0x00000000

433 [State 700] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
433 [State 700] Leaving buffer range @0xbfba3783, a3 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
433 [State 700] Killing state 700
433 [State 700] Terminating state 700 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
433 [State 700] Switching from state 700 to state 0
Copied 34928 (count=1)
Deleting state 700 0x0x2ee94080
433 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 699
>> fuzzInit: datum forking for value 700
>> fuzzInit: datum forking for value 700
433 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 700)
        (ReadLSB w32 0 v700_fuzz_symb_700)))
    state 701 with condition (Not (Eq false
         (Eq (w32 700)
             (ReadLSB w32 0 v700_fuzz_symb_700))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-700-8048a0e
Size=2 Low=0 splitIndex=1 high=1
433 [State 0] Switching from state 0 to state 701
Copied 34928 (count=1)
Finalizing TB execution 701
s2e_dummyMainFunction
tcg-llvm-tb-700-8048a0e
Firing timer event
434 [State 701] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 700 not yet applied), shell_len: 1024, eip: 0x00000000

434 [State 701] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
434 [State 701] Leaving buffer range @0xbfba3781, a3 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
434 [State 701] Killing state 701
434 [State 701] Terminating state 701 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
434 [State 701] Switching from state 701 to state 0
Copied 34928 (count=1)
Deleting state 701 0x0x2f06df20
434 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 700
>> fuzzInit: datum forking for value 701
>> fuzzInit: datum forking for value 701
434 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 701)
        (ReadLSB w32 0 v701_fuzz_symb_701)))
    state 702 with condition (Not (Eq false
         (Eq (w32 701)
             (ReadLSB w32 0 v701_fuzz_symb_701))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-701-8048a0e
Size=2 Low=0 splitIndex=1 high=1
434 [State 0] Switching from state 0 to state 702
Copied 34928 (count=1)
Finalizing TB execution 702
s2e_dummyMainFunction
tcg-llvm-tb-701-8048a0e
434 [State 702] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 701 not yet applied), shell_len: 1024, eip: 0x00000000

434 [State 702] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
434 [State 702] Leaving buffer range @0xbfba3783, a2 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
435 [State 702] Killing state 702
435 [State 702] Terminating state 702 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
435 [State 702] Switching from state 702 to state 0
Copied 34928 (count=1)
Deleting state 702 0x0x2f176a80
435 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 701
>> fuzzInit: datum forking for value 702
>> fuzzInit: datum forking for value 702
435 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 702)
        (ReadLSB w32 0 v702_fuzz_symb_702)))
    state 703 with condition (Not (Eq false
         (Eq (w32 702)
             (ReadLSB w32 0 v702_fuzz_symb_702))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-702-8048a0e
Size=2 Low=0 splitIndex=1 high=1
435 [State 0] Switching from state 0 to state 703
Copied 34928 (count=1)
Finalizing TB execution 703
s2e_dummyMainFunction
tcg-llvm-tb-702-8048a0e
435 [State 703] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 702 not yet applied), shell_len: 1024, eip: 0x00000000

435 [State 703] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
435 [State 703] Leaving buffer range @0xbfba3781, a2 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
435 [State 703] Killing state 703
435 [State 703] Terminating state 703 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
435 [State 703] Switching from state 703 to state 0
Copied 34928 (count=1)
Deleting state 703 0x0x2f176a80
435 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 702
>> fuzzInit: datum forking for value 703
>> fuzzInit: datum forking for value 703
436 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 703)
        (ReadLSB w32 0 v703_fuzz_symb_703)))
    state 704 with condition (Not (Eq false
         (Eq (w32 703)
             (ReadLSB w32 0 v703_fuzz_symb_703))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-703-8048a0e
Size=2 Low=0 splitIndex=1 high=1
436 [State 0] Switching from state 0 to state 704
Copied 34928 (count=1)
Finalizing TB execution 704
s2e_dummyMainFunction
tcg-llvm-tb-703-8048a0e
Firing timer event
436 [State 704] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 703 not yet applied), shell_len: 1024, eip: 0x00000000

436 [State 704] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
436 [State 704] Leaving buffer range @0xbfba3783, a1 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
436 [State 704] Killing state 704
436 [State 704] Terminating state 704 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
436 [State 704] Switching from state 704 to state 0
Copied 34928 (count=1)
Deleting state 704 0x0x2f0d2e30
436 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 703
>> fuzzInit: datum forking for value 704
>> fuzzInit: datum forking for value 704
436 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 704)
        (ReadLSB w32 0 v704_fuzz_symb_704)))
    state 705 with condition (Not (Eq false
         (Eq (w32 704)
             (ReadLSB w32 0 v704_fuzz_symb_704))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-704-8048a0e
Size=2 Low=0 splitIndex=1 high=1
436 [State 0] Switching from state 0 to state 705
Copied 34928 (count=1)
Finalizing TB execution 705
s2e_dummyMainFunction
tcg-llvm-tb-704-8048a0e
436 [State 705] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 704 not yet applied), shell_len: 1024, eip: 0x00000000

436 [State 705] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
436 [State 705] Leaving buffer range @0xbfba3781, a1 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
437 [State 705] Killing state 705
437 [State 705] Terminating state 705 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
437 [State 705] Switching from state 705 to state 0
Copied 34928 (count=1)
Deleting state 705 0x0x2f1cf760
Firing timer event
437 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 704
>> fuzzInit: datum forking for value 705
>> fuzzInit: datum forking for value 705
437 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 705)
        (ReadLSB w32 0 v705_fuzz_symb_705)))
    state 706 with condition (Not (Eq false
         (Eq (w32 705)
             (ReadLSB w32 0 v705_fuzz_symb_705))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-705-8048a0e
Size=2 Low=0 splitIndex=1 high=1
437 [State 0] Switching from state 0 to state 706
Copied 34928 (count=1)
Finalizing TB execution 706
s2e_dummyMainFunction
tcg-llvm-tb-705-8048a0e
437 [State 706] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 705 not yet applied), shell_len: 1024, eip: 0x00000000

437 [State 706] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
437 [State 706] Leaving buffer range @0xbfba3783, a0 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
437 [State 706] Killing state 706
437 [State 706] Terminating state 706 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
437 [State 706] Switching from state 706 to state 0
Copied 34928 (count=1)
Deleting state 706 0x0x2f177180
437 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 705
>> fuzzInit: datum forking for value 706
>> fuzzInit: datum forking for value 706
438 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 706)
        (ReadLSB w32 0 v706_fuzz_symb_706)))
    state 707 with condition (Not (Eq false
         (Eq (w32 706)
             (ReadLSB w32 0 v706_fuzz_symb_706))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-706-8048a0e
Size=2 Low=0 splitIndex=1 high=1
438 [State 0] Switching from state 0 to state 707
Copied 34928 (count=1)
Finalizing TB execution 707
s2e_dummyMainFunction
tcg-llvm-tb-706-8048a0e
Firing timer event
438 [State 707] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 706 not yet applied), shell_len: 1024, eip: 0x00000000

438 [State 707] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
438 [State 707] Leaving buffer range @0xbfba3781, a0 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
438 [State 707] Killing state 707
438 [State 707] Terminating state 707 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
438 [State 707] Switching from state 707 to state 0
Copied 34928 (count=1)
Deleting state 707 0x0x2f1327e0
438 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 706
>> fuzzInit: datum forking for value 707
>> fuzzInit: datum forking for value 707
438 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 707)
        (ReadLSB w32 0 v707_fuzz_symb_707)))
    state 708 with condition (Not (Eq false
         (Eq (w32 707)
             (ReadLSB w32 0 v707_fuzz_symb_707))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-707-8048a0e
Size=2 Low=0 splitIndex=1 high=1
438 [State 0] Switching from state 0 to state 708
Copied 34928 (count=1)
Finalizing TB execution 708
s2e_dummyMainFunction
tcg-llvm-tb-707-8048a0e
438 [State 708] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 707 not yet applied), shell_len: 1024, eip: 0x00000000

438 [State 708] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
438 [State 708] Leaving buffer range @0xbfba3783, 9f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
439 [State 708] Killing state 708
439 [State 708] Terminating state 708 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
439 [State 708] Switching from state 708 to state 0
Copied 34928 (count=1)
Deleting state 708 0x0x2f2e5190
439 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 707
>> fuzzInit: datum forking for value 708
>> fuzzInit: datum forking for value 708
439 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 708)
        (ReadLSB w32 0 v708_fuzz_symb_708)))
    state 709 with condition (Not (Eq false
         (Eq (w32 708)
             (ReadLSB w32 0 v708_fuzz_symb_708))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-708-8048a0e
Size=2 Low=0 splitIndex=1 high=1
439 [State 0] Switching from state 0 to state 709
Copied 34928 (count=1)
Finalizing TB execution 709
s2e_dummyMainFunction
tcg-llvm-tb-708-8048a0e
Firing timer event
439 [State 709] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 708 not yet applied), shell_len: 1024, eip: 0x00000000

439 [State 709] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
439 [State 709] Leaving buffer range @0xbfba3781, 9f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
439 [State 709] Killing state 709
439 [State 709] Terminating state 709 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
439 [State 709] Switching from state 709 to state 0
Copied 34928 (count=1)
Deleting state 709 0x0x2f1b98c0
439 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 708
>> fuzzInit: datum forking for value 709
>> fuzzInit: datum forking for value 709
440 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 709)
        (ReadLSB w32 0 v709_fuzz_symb_709)))
    state 710 with condition (Not (Eq false
         (Eq (w32 709)
             (ReadLSB w32 0 v709_fuzz_symb_709))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-709-8048a0e
Size=2 Low=0 splitIndex=1 high=1
440 [State 0] Switching from state 0 to state 710
Copied 34928 (count=1)
Finalizing TB execution 710
s2e_dummyMainFunction
tcg-llvm-tb-709-8048a0e
440 [State 710] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 709 not yet applied), shell_len: 1024, eip: 0x00000000

440 [State 710] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
440 [State 710] Leaving buffer range @0xbfba3783, 9e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
440 [State 710] Killing state 710
440 [State 710] Terminating state 710 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
440 [State 710] Switching from state 710 to state 0
Copied 34928 (count=1)
Deleting state 710 0x0x2f1b98c0
Firing timer event
440 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 709
>> fuzzInit: datum forking for value 710
>> fuzzInit: datum forking for value 710
440 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 710)
        (ReadLSB w32 0 v710_fuzz_symb_710)))
    state 711 with condition (Not (Eq false
         (Eq (w32 710)
             (ReadLSB w32 0 v710_fuzz_symb_710))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-710-8048a0e
Size=2 Low=0 splitIndex=1 high=1
440 [State 0] Switching from state 0 to state 711
Copied 34928 (count=1)
Finalizing TB execution 711
s2e_dummyMainFunction
tcg-llvm-tb-710-8048a0e
440 [State 711] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 710 not yet applied), shell_len: 1024, eip: 0x00000000

440 [State 711] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
440 [State 711] Leaving buffer range @0xbfba3781, 9e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
440 [State 711] Killing state 711
440 [State 711] Terminating state 711 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
440 [State 711] Switching from state 711 to state 0
Copied 34928 (count=1)
Deleting state 711 0x0x2f54e520
441 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 710
>> fuzzInit: datum forking for value 711
>> fuzzInit: datum forking for value 711
441 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 711)
        (ReadLSB w32 0 v711_fuzz_symb_711)))
    state 712 with condition (Not (Eq false
         (Eq (w32 711)
             (ReadLSB w32 0 v711_fuzz_symb_711))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-711-8048a0e
Size=2 Low=0 splitIndex=1 high=1
441 [State 0] Switching from state 0 to state 712
Copied 34928 (count=1)
Finalizing TB execution 712
s2e_dummyMainFunction
tcg-llvm-tb-711-8048a0e
Firing timer event
441 [State 712] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 711 not yet applied), shell_len: 1024, eip: 0x00000000

441 [State 712] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
441 [State 712] Leaving buffer range @0xbfba3783, 9d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
441 [State 712] Killing state 712
441 [State 712] Terminating state 712 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
441 [State 712] Switching from state 712 to state 0
Copied 34928 (count=1)
Deleting state 712 0x0x2f1cd0b0
441 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 711
>> fuzzInit: datum forking for value 712
>> fuzzInit: datum forking for value 712
442 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 712)
        (ReadLSB w32 0 v712_fuzz_symb_712)))
    state 713 with condition (Not (Eq false
         (Eq (w32 712)
             (ReadLSB w32 0 v712_fuzz_symb_712))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-712-8048a0e
Size=2 Low=0 splitIndex=1 high=1
442 [State 0] Switching from state 0 to state 713
Copied 34928 (count=1)
Finalizing TB execution 713
s2e_dummyMainFunction
tcg-llvm-tb-712-8048a0e
442 [State 713] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 712 not yet applied), shell_len: 1024, eip: 0x00000000

442 [State 713] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
442 [State 713] Leaving buffer range @0xbfba3781, 9d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
442 [State 713] Killing state 713
442 [State 713] Terminating state 713 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
442 [State 713] Switching from state 713 to state 0
Copied 34928 (count=1)
Deleting state 713 0x0x2f4fcfd0
Firing timer event
442 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 712
>> fuzzInit: datum forking for value 713
>> fuzzInit: datum forking for value 713
442 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 713)
        (ReadLSB w32 0 v713_fuzz_symb_713)))
    state 714 with condition (Not (Eq false
         (Eq (w32 713)
             (ReadLSB w32 0 v713_fuzz_symb_713))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-713-8048a0e
Size=2 Low=0 splitIndex=1 high=1
442 [State 0] Switching from state 0 to state 714
Copied 34928 (count=1)
Finalizing TB execution 714
s2e_dummyMainFunction
tcg-llvm-tb-713-8048a0e
442 [State 714] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 713 not yet applied), shell_len: 1024, eip: 0x00000000

442 [State 714] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
442 [State 714] Leaving buffer range @0xbfba3783, 9c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
442 [State 714] Killing state 714
442 [State 714] Terminating state 714 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
442 [State 714] Switching from state 714 to state 0
Copied 34928 (count=1)
Deleting state 714 0x0x2f5e8a60
443 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 713
>> fuzzInit: datum forking for value 714
>> fuzzInit: datum forking for value 714
443 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 714)
        (ReadLSB w32 0 v714_fuzz_symb_714)))
    state 715 with condition (Not (Eq false
         (Eq (w32 714)
             (ReadLSB w32 0 v714_fuzz_symb_714))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-714-8048a0e
Size=2 Low=0 splitIndex=1 high=1
443 [State 0] Switching from state 0 to state 715
Copied 34928 (count=1)
Finalizing TB execution 715
s2e_dummyMainFunction
tcg-llvm-tb-714-8048a0e
443 [State 715] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 714 not yet applied), shell_len: 1024, eip: 0x00000000

443 [State 715] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
443 [State 715] Leaving buffer range @0xbfba3781, 9c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
443 [State 715] Killing state 715
443 [State 715] Terminating state 715 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
443 [State 715] Switching from state 715 to state 0
Copied 34928 (count=1)
Deleting state 715 0x0x2f522d80
443 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 714
>> fuzzInit: datum forking for value 715
>> fuzzInit: datum forking for value 715
>> fuzzInit: datum forking for value 715
443 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 715)
        (ReadLSB w32 0 v715_fuzz_symb_715)))
    state 716 with condition (Not (Eq false
         (Eq (w32 715)
             (ReadLSB w32 0 v715_fuzz_symb_715))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-715-8048a0e
Size=2 Low=0 splitIndex=1 high=1
443 [State 0] Switching from state 0 to state 716
Copied 34928 (count=1)
Finalizing TB execution 716
s2e_dummyMainFunction
tcg-llvm-tb-715-8048a0e
444 [State 716] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 715 not yet applied), shell_len: 1024, eip: 0x00000000

444 [State 716] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
444 [State 716] Leaving buffer range @0xbfba3783, 9b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
444 [State 716] Killing state 716
444 [State 716] Terminating state 716 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
444 [State 716] Switching from state 716 to state 0
Copied 34928 (count=1)
Deleting state 716 0x0x2f522d80
444 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 715
>> fuzzInit: datum forking for value 716
>> fuzzInit: datum forking for value 716
444 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 716)
        (ReadLSB w32 0 v716_fuzz_symb_716)))
    state 717 with condition (Not (Eq false
         (Eq (w32 716)
             (ReadLSB w32 0 v716_fuzz_symb_716))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-716-8048a0e
Size=2 Low=0 splitIndex=1 high=1
444 [State 0] Switching from state 0 to state 717
Copied 34928 (count=1)
Finalizing TB execution 717
s2e_dummyMainFunction
tcg-llvm-tb-716-8048a0e
Firing timer event
444 [State 717] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 716 not yet applied), shell_len: 1024, eip: 0x00000000

444 [State 717] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
444 [State 717] Leaving buffer range @0xbfba3781, 9b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
444 [State 717] Killing state 717
444 [State 717] Terminating state 717 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
444 [State 717] Switching from state 717 to state 0
Copied 34928 (count=1)
Deleting state 717 0x0x2f54aff0
445 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 716
>> fuzzInit: datum forking for value 717
>> fuzzInit: datum forking for value 717
445 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 717)
        (ReadLSB w32 0 v717_fuzz_symb_717)))
    state 718 with condition (Not (Eq false
         (Eq (w32 717)
             (ReadLSB w32 0 v717_fuzz_symb_717))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-717-8048a0e
Size=2 Low=0 splitIndex=1 high=1
445 [State 0] Switching from state 0 to state 718
Copied 34928 (count=1)
Finalizing TB execution 718
s2e_dummyMainFunction
tcg-llvm-tb-717-8048a0e
445 [State 718] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 717 not yet applied), shell_len: 1024, eip: 0x00000000

445 [State 718] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
445 [State 718] Leaving buffer range @0xbfba3783, 9a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
445 [State 718] Killing state 718
445 [State 718] Terminating state 718 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
445 [State 718] Switching from state 718 to state 0
Copied 34928 (count=1)
Deleting state 718 0x0x2f5643d0
445 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 717
>> fuzzInit: datum forking for value 718
>> fuzzInit: datum forking for value 718
445 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 718)
        (ReadLSB w32 0 v718_fuzz_symb_718)))
    state 719 with condition (Not (Eq false
         (Eq (w32 718)
             (ReadLSB w32 0 v718_fuzz_symb_718))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-718-8048a0e
Size=2 Low=0 splitIndex=1 high=1
445 [State 0] Switching from state 0 to state 719
Copied 34928 (count=1)
Finalizing TB execution 719
s2e_dummyMainFunction
tcg-llvm-tb-718-8048a0e
Firing timer event
445 [State 719] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 718 not yet applied), shell_len: 1024, eip: 0x00000000

445 [State 719] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
446 [State 719] Leaving buffer range @0xbfba3781, 9a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
446 [State 719] Killing state 719
446 [State 719] Terminating state 719 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
446 [State 719] Switching from state 719 to state 0
Copied 34928 (count=1)
Deleting state 719 0x0x2f7bc0a0
446 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 718
>> fuzzInit: datum forking for value 719
>> fuzzInit: datum forking for value 719
446 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 719)
        (ReadLSB w32 0 v719_fuzz_symb_719)))
    state 720 with condition (Not (Eq false
         (Eq (w32 719)
             (ReadLSB w32 0 v719_fuzz_symb_719))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-719-8048a0e
Size=2 Low=0 splitIndex=1 high=1
446 [State 0] Switching from state 0 to state 720
Copied 34928 (count=1)
Finalizing TB execution 720
s2e_dummyMainFunction
tcg-llvm-tb-719-8048a0e
446 [State 720] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 719 not yet applied), shell_len: 1024, eip: 0x00000000

446 [State 720] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
446 [State 720] Leaving buffer range @0xbfba3783, 99 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
446 [State 720] Killing state 720
446 [State 720] Terminating state 720 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
446 [State 720] Switching from state 720 to state 0
Copied 34928 (count=1)
Deleting state 720 0x0x2f3da960
Firing timer event
446 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 719
>> fuzzInit: datum forking for value 720
>> fuzzInit: datum forking for value 720
447 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 720)
        (ReadLSB w32 0 v720_fuzz_symb_720)))
    state 721 with condition (Not (Eq false
         (Eq (w32 720)
             (ReadLSB w32 0 v720_fuzz_symb_720))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-720-8048a0e
Size=2 Low=0 splitIndex=1 high=1
447 [State 0] Switching from state 0 to state 721
Copied 34928 (count=1)
Finalizing TB execution 721
s2e_dummyMainFunction
tcg-llvm-tb-720-8048a0e
447 [State 721] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 720 not yet applied), shell_len: 1024, eip: 0x00000000

447 [State 721] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
447 [State 721] Leaving buffer range @0xbfba3781, 99 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
447 [State 721] Killing state 721
447 [State 721] Terminating state 721 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
447 [State 721] Switching from state 721 to state 0
Copied 34928 (count=1)
Deleting state 721 0x0x2f6dd750
447 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 720
>> fuzzInit: datum forking for value 721
>> fuzzInit: datum forking for value 721
447 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 721)
        (ReadLSB w32 0 v721_fuzz_symb_721)))
    state 722 with condition (Not (Eq false
         (Eq (w32 721)
             (ReadLSB w32 0 v721_fuzz_symb_721))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-721-8048a0e
Size=2 Low=0 splitIndex=1 high=1
447 [State 0] Switching from state 0 to state 722
Copied 34928 (count=1)
Finalizing TB execution 722
s2e_dummyMainFunction
tcg-llvm-tb-721-8048a0e
447 [State 722] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 721 not yet applied), shell_len: 1024, eip: 0x00000000

447 [State 722] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
447 [State 722] Leaving buffer range @0xbfba3783, 98 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
448 [State 722] Killing state 722
448 [State 722] Terminating state 722 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
448 [State 722] Switching from state 722 to state 0
Copied 34928 (count=1)
Deleting state 722 0x0x2f6dd750
448 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 721
>> fuzzInit: datum forking for value 722
>> fuzzInit: datum forking for value 722
448 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 722)
        (ReadLSB w32 0 v722_fuzz_symb_722)))
    state 723 with condition (Not (Eq false
         (Eq (w32 722)
             (ReadLSB w32 0 v722_fuzz_symb_722))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-722-8048a0e
Size=2 Low=0 splitIndex=1 high=1
448 [State 0] Switching from state 0 to state 723
Copied 34928 (count=1)
Finalizing TB execution 723
s2e_dummyMainFunction
tcg-llvm-tb-722-8048a0e
448 [State 723] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 722 not yet applied), shell_len: 1024, eip: 0x00000000

448 [State 723] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
448 [State 723] Leaving buffer range @0xbfba3781, 98 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
448 [State 723] Killing state 723
448 [State 723] Terminating state 723 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
448 [State 723] Switching from state 723 to state 0
Copied 34928 (count=1)
Deleting state 723 0x0x2f903880
448 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 722
>> fuzzInit: datum forking for value 723
>> fuzzInit: datum forking for value 723
449 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 723)
        (ReadLSB w32 0 v723_fuzz_symb_723)))
    state 724 with condition (Not (Eq false
         (Eq (w32 723)
             (ReadLSB w32 0 v723_fuzz_symb_723))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-723-8048a0e
Size=2 Low=0 splitIndex=1 high=1
449 [State 0] Switching from state 0 to state 724
Copied 34928 (count=1)
Finalizing TB execution 724
s2e_dummyMainFunction
tcg-llvm-tb-723-8048a0e
Firing timer event
449 [State 724] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 723 not yet applied), shell_len: 1024, eip: 0x00000000

449 [State 724] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
449 [State 724] Leaving buffer range @0xbfba3783, 97 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
449 [State 724] Killing state 724
449 [State 724] Terminating state 724 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
449 [State 724] Switching from state 724 to state 0
Copied 34928 (count=1)
Deleting state 724 0x0x2f7d8700
449 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 723
>> fuzzInit: datum forking for value 724
>> fuzzInit: datum forking for value 724
449 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 724)
        (ReadLSB w32 0 v724_fuzz_symb_724)))
    state 725 with condition (Not (Eq false
         (Eq (w32 724)
             (ReadLSB w32 0 v724_fuzz_symb_724))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-724-8048a0e
Size=2 Low=0 splitIndex=1 high=1
449 [State 0] Switching from state 0 to state 725
Copied 34928 (count=1)
Finalizing TB execution 725
s2e_dummyMainFunction
tcg-llvm-tb-724-8048a0e
449 [State 725] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 724 not yet applied), shell_len: 1024, eip: 0x00000000

449 [State 725] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
449 [State 725] Leaving buffer range @0xbfba3781, 97 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
449 [State 725] Killing state 725
449 [State 725] Terminating state 725 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
449 [State 725] Switching from state 725 to state 0
Copied 34928 (count=1)
Deleting state 725 0x0x2f8d9aa0
Firing timer event
450 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 724
>> fuzzInit: datum forking for value 725
>> fuzzInit: datum forking for value 725
450 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 725)
        (ReadLSB w32 0 v725_fuzz_symb_725)))
    state 726 with condition (Not (Eq false
         (Eq (w32 725)
             (ReadLSB w32 0 v725_fuzz_symb_725))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-725-8048a0e
Size=2 Low=0 splitIndex=1 high=1
450 [State 0] Switching from state 0 to state 726
Copied 34928 (count=1)
Finalizing TB execution 726
s2e_dummyMainFunction
tcg-llvm-tb-725-8048a0e
450 [State 726] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 725 not yet applied), shell_len: 1024, eip: 0x00000000

450 [State 726] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
450 [State 726] Leaving buffer range @0xbfba3783, 96 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
450 [State 726] Killing state 726
450 [State 726] Terminating state 726 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
450 [State 726] Switching from state 726 to state 0
Copied 34928 (count=1)
Deleting state 726 0x0x2f9fa250
450 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 725
>> fuzzInit: datum forking for value 726
>> fuzzInit: datum forking for value 726
450 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 726)
        (ReadLSB w32 0 v726_fuzz_symb_726)))
    state 727 with condition (Not (Eq false
         (Eq (w32 726)
             (ReadLSB w32 0 v726_fuzz_symb_726))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-726-8048a0e
Size=2 Low=0 splitIndex=1 high=1
451 [State 0] Switching from state 0 to state 727
Copied 34928 (count=1)
Finalizing TB execution 727
s2e_dummyMainFunction
tcg-llvm-tb-726-8048a0e
Firing timer event
451 [State 727] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 726 not yet applied), shell_len: 1024, eip: 0x00000000

451 [State 727] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
451 [State 727] Leaving buffer range @0xbfba3781, 96 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
451 [State 727] Killing state 727
451 [State 727] Terminating state 727 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
451 [State 727] Switching from state 727 to state 0
Copied 34928 (count=1)
Deleting state 727 0x0x2f7becd0
451 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 726
>> fuzzInit: datum forking for value 727
>> fuzzInit: datum forking for value 727
451 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 727)
        (ReadLSB w32 0 v727_fuzz_symb_727)))
    state 728 with condition (Not (Eq false
         (Eq (w32 727)
             (ReadLSB w32 0 v727_fuzz_symb_727))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-727-8048a0e
Size=2 Low=0 splitIndex=1 high=1
451 [State 0] Switching from state 0 to state 728
Copied 34928 (count=1)
Finalizing TB execution 728
s2e_dummyMainFunction
tcg-llvm-tb-727-8048a0e
451 [State 728] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 727 not yet applied), shell_len: 1024, eip: 0x00000000

451 [State 728] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
451 [State 728] Leaving buffer range @0xbfba3783, 95 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
451 [State 728] Killing state 728
451 [State 728] Terminating state 728 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
451 [State 728] Switching from state 728 to state 0
Copied 34928 (count=1)
Deleting state 728 0x0x2f9ca8e0
452 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 727
Firing timer event
>> fuzzInit: datum forking for value 728
>> fuzzInit: datum forking for value 728
452 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 728)
        (ReadLSB w32 0 v728_fuzz_symb_728)))
    state 729 with condition (Not (Eq false
         (Eq (w32 728)
             (ReadLSB w32 0 v728_fuzz_symb_728))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-728-8048a0e
Size=2 Low=0 splitIndex=1 high=1
452 [State 0] Switching from state 0 to state 729
Copied 34928 (count=1)
Finalizing TB execution 729
s2e_dummyMainFunction
tcg-llvm-tb-728-8048a0e
452 [State 729] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 728 not yet applied), shell_len: 1024, eip: 0x00000000

452 [State 729] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
452 [State 729] Leaving buffer range @0xbfba3781, 95 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
452 [State 729] Killing state 729
452 [State 729] Terminating state 729 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
452 [State 729] Switching from state 729 to state 0
Copied 34928 (count=1)
Deleting state 729 0x0x2f8d4df0
452 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 728
>> fuzzInit: datum forking for value 729
>> fuzzInit: datum forking for value 729
452 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 729)
        (ReadLSB w32 0 v729_fuzz_symb_729)))
    state 730 with condition (Not (Eq false
         (Eq (w32 729)
             (ReadLSB w32 0 v729_fuzz_symb_729))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-729-8048a0e
Size=2 Low=0 splitIndex=1 high=1
452 [State 0] Switching from state 0 to state 730
Copied 34928 (count=1)
Finalizing TB execution 730
s2e_dummyMainFunction
tcg-llvm-tb-729-8048a0e
453 [State 730] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 729 not yet applied), shell_len: 1024, eip: 0x00000000

453 [State 730] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
453 [State 730] Leaving buffer range @0xc126f278, 94 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
453 [State 730] Killing state 730
453 [State 730] Terminating state 730 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
453 [State 730] Switching from state 730 to state 0
Copied 34928 (count=1)
Deleting state 730 0x0x2f8d4df0
453 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 729
>> fuzzInit: datum forking for value 730
>> fuzzInit: datum forking for value 730
453 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 730)
        (ReadLSB w32 0 v730_fuzz_symb_730)))
    state 731 with condition (Not (Eq false
         (Eq (w32 730)
             (ReadLSB w32 0 v730_fuzz_symb_730))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-730-8048a0e
Size=2 Low=0 splitIndex=1 high=1
453 [State 0] Switching from state 0 to state 731
Copied 34928 (count=1)
Finalizing TB execution 731
s2e_dummyMainFunction
tcg-llvm-tb-730-8048a0e
453 [State 731] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 730 not yet applied), shell_len: 1024, eip: 0x00000000

453 [State 731] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
453 [State 731] Leaving buffer range @0xbfba3781, 94 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
453 [State 731] Killing state 731
453 [State 731] Terminating state 731 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
453 [State 731] Switching from state 731 to state 0
Copied 34928 (count=1)
Deleting state 731 0x0x2f97dff0
453 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 730
>> fuzzInit: datum forking for value 731
>> fuzzInit: datum forking for value 731
454 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 731)
        (ReadLSB w32 0 v731_fuzz_symb_731)))
    state 732 with condition (Not (Eq false
         (Eq (w32 731)
             (ReadLSB w32 0 v731_fuzz_symb_731))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-731-8048a0e
Size=2 Low=0 splitIndex=1 high=1
454 [State 0] Switching from state 0 to state 732
Copied 34928 (count=1)
Finalizing TB execution 732
s2e_dummyMainFunction
tcg-llvm-tb-731-8048a0e
Firing timer event
454 [State 732] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 731 not yet applied), shell_len: 1024, eip: 0x00000000

454 [State 732] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
454 [State 732] Leaving buffer range @0xc126f278, 93 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
454 [State 732] Killing state 732
454 [State 732] Terminating state 732 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
454 [State 732] Switching from state 732 to state 0
Copied 34928 (count=1)
Deleting state 732 0x0x2f97dff0
454 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 731
>> fuzzInit: datum forking for value 732
>> fuzzInit: datum forking for value 732
454 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 732)
        (ReadLSB w32 0 v732_fuzz_symb_732)))
    state 733 with condition (Not (Eq false
         (Eq (w32 732)
             (ReadLSB w32 0 v732_fuzz_symb_732))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-732-8048a0e
Size=2 Low=0 splitIndex=1 high=1
454 [State 0] Switching from state 0 to state 733
Copied 34928 (count=1)
Finalizing TB execution 733
s2e_dummyMainFunction
tcg-llvm-tb-732-8048a0e
454 [State 733] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 732 not yet applied), shell_len: 1024, eip: 0x00000000

454 [State 733] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
455 [State 733] Leaving buffer range @0xbfba3781, 93 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
455 [State 733] Killing state 733
455 [State 733] Terminating state 733 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
455 [State 733] Switching from state 733 to state 0
Copied 34928 (count=1)
Deleting state 733 0x0x2f96a1d0
455 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 732
>> fuzzInit: datum forking for value 733
>> fuzzInit: datum forking for value 733
455 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 733)
        (ReadLSB w32 0 v733_fuzz_symb_733)))
    state 734 with condition (Not (Eq false
         (Eq (w32 733)
             (ReadLSB w32 0 v733_fuzz_symb_733))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-733-8048a0e
Size=2 Low=0 splitIndex=1 high=1
455 [State 0] Switching from state 0 to state 734
Copied 34928 (count=1)
Finalizing TB execution 734
s2e_dummyMainFunction
tcg-llvm-tb-733-8048a0e
Firing timer event
455 [State 734] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 733 not yet applied), shell_len: 1024, eip: 0x00000000

455 [State 734] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
455 [State 734] Leaving buffer range @0xbfba3783, 92 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
455 [State 734] Killing state 734
455 [State 734] Terminating state 734 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
455 [State 734] Switching from state 734 to state 0
Copied 34928 (count=1)
Deleting state 734 0x0x2f96a1d0
455 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 733
>> fuzzInit: datum forking for value 734
>> fuzzInit: datum forking for value 734
456 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 734)
        (ReadLSB w32 0 v734_fuzz_symb_734)))
    state 735 with condition (Not (Eq false
         (Eq (w32 734)
             (ReadLSB w32 0 v734_fuzz_symb_734))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-734-8048a0e
Size=2 Low=0 splitIndex=1 high=1
456 [State 0] Switching from state 0 to state 735
Copied 34928 (count=1)
Finalizing TB execution 735
s2e_dummyMainFunction
tcg-llvm-tb-734-8048a0e
456 [State 735] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 734 not yet applied), shell_len: 1024, eip: 0x00000000

456 [State 735] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
456 [State 735] Leaving buffer range @0xbfba3781, 92 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
456 [State 735] Killing state 735
456 [State 735] Terminating state 735 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
456 [State 735] Switching from state 735 to state 0
Copied 34928 (count=1)
Deleting state 735 0x0x2fce17e0
456 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 734
>> fuzzInit: datum forking for value 735
>> fuzzInit: datum forking for value 735
456 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 735)
        (ReadLSB w32 0 v735_fuzz_symb_735)))
    state 736 with condition (Not (Eq false
         (Eq (w32 735)
             (ReadLSB w32 0 v735_fuzz_symb_735))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-735-8048a0e
Size=2 Low=0 splitIndex=1 high=1
456 [State 0] Switching from state 0 to state 736
Copied 34928 (count=1)
Finalizing TB execution 736
s2e_dummyMainFunction
tcg-llvm-tb-735-8048a0e
Firing timer event
456 [State 736] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 735 not yet applied), shell_len: 1024, eip: 0x00000000

456 [State 736] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
456 [State 736] Leaving buffer range @0xc1141730, 25 IoB insns; prev insn @0xbfba36a7
  1   2B @0xbfba36a7:  0  0             add [eax], al           
456 [State 736] Entering buffer range @0xbfba36a9, 14 OoB insns
456 [State 736] Leaving buffer range @0xbfba3783, 6c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
457 [State 736] Killing state 736
457 [State 736] Terminating state 736 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
457 [State 736] Switching from state 736 to state 0
Copied 34928 (count=1)
Deleting state 736 0x0x2fce17e0
457 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 735
>> fuzzInit: datum forking for value 736
>> fuzzInit: datum forking for value 736
457 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 736)
        (ReadLSB w32 0 v736_fuzz_symb_736)))
    state 737 with condition (Not (Eq false
         (Eq (w32 736)
             (ReadLSB w32 0 v736_fuzz_symb_736))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-736-8048a0e
Size=2 Low=0 splitIndex=1 high=1
457 [State 0] Switching from state 0 to state 737
Copied 34928 (count=1)
Finalizing TB execution 737
s2e_dummyMainFunction
tcg-llvm-tb-736-8048a0e
457 [State 737] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 736 not yet applied), shell_len: 1024, eip: 0x00000000

457 [State 737] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
457 [State 737] Leaving buffer range @0xbfba3781, 91 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
457 [State 737] Killing state 737
457 [State 737] Terminating state 737 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
457 [State 737] Switching from state 737 to state 0
Copied 34928 (count=1)
Deleting state 737 0x0x2fcf0440
Firing timer event
457 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 736
>> fuzzInit: datum forking for value 737
>> fuzzInit: datum forking for value 737
458 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 737)
        (ReadLSB w32 0 v737_fuzz_symb_737)))
    state 738 with condition (Not (Eq false
         (Eq (w32 737)
             (ReadLSB w32 0 v737_fuzz_symb_737))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-737-8048a0e
Size=2 Low=0 splitIndex=1 high=1
458 [State 0] Switching from state 0 to state 738
Copied 34928 (count=1)
Finalizing TB execution 738
s2e_dummyMainFunction
tcg-llvm-tb-737-8048a0e
458 [State 738] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 737 not yet applied), shell_len: 1024, eip: 0x00000000

458 [State 738] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
458 [State 738] Leaving buffer range @0xbfba3783, 90 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
458 [State 738] Killing state 738
458 [State 738] Terminating state 738 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
458 [State 738] Switching from state 738 to state 0
Copied 34928 (count=1)
Deleting state 738 0x0x2fdd9250
458 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 737
>> fuzzInit: datum forking for value 738
>> fuzzInit: datum forking for value 738
458 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 738)
        (ReadLSB w32 0 v738_fuzz_symb_738)))
    state 739 with condition (Not (Eq false
         (Eq (w32 738)
             (ReadLSB w32 0 v738_fuzz_symb_738))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-738-8048a0e
Size=2 Low=0 splitIndex=1 high=1
458 [State 0] Switching from state 0 to state 739
Copied 34928 (count=1)
Finalizing TB execution 739
s2e_dummyMainFunction
tcg-llvm-tb-738-8048a0e
Firing timer event
458 [State 739] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 738 not yet applied), shell_len: 1024, eip: 0x00000000

458 [State 739] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
458 [State 739] Leaving buffer range @0xbfba3781, 90 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
458 [State 739] Killing state 739
458 [State 739] Terminating state 739 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
458 [State 739] Switching from state 739 to state 0
Copied 34928 (count=1)
Deleting state 739 0x0x2fd9dba0
459 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 738
>> fuzzInit: datum forking for value 739
>> fuzzInit: datum forking for value 739
459 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 739)
        (ReadLSB w32 0 v739_fuzz_symb_739)))
    state 740 with condition (Not (Eq false
         (Eq (w32 739)
             (ReadLSB w32 0 v739_fuzz_symb_739))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-739-8048a0e
Size=2 Low=0 splitIndex=1 high=1
459 [State 0] Switching from state 0 to state 740
Copied 34928 (count=1)
Finalizing TB execution 740
s2e_dummyMainFunction
tcg-llvm-tb-739-8048a0e
459 [State 740] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 739 not yet applied), shell_len: 1024, eip: 0x00000000

459 [State 740] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
459 [State 740] Leaving buffer range @0xbfba3783, 8f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
459 [State 740] Killing state 740
459 [State 740] Terminating state 740 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
459 [State 740] Switching from state 740 to state 0
Copied 34928 (count=1)
Deleting state 740 0x0x2fdeff00
Firing timer event
459 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 739
>> fuzzInit: datum forking for value 740
>> fuzzInit: datum forking for value 740
460 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 740)
        (ReadLSB w32 0 v740_fuzz_symb_740)))
    state 741 with condition (Not (Eq false
         (Eq (w32 740)
             (ReadLSB w32 0 v740_fuzz_symb_740))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-740-8048a0e
Size=2 Low=0 splitIndex=1 high=1
460 [State 0] Switching from state 0 to state 741
Copied 34928 (count=1)
Finalizing TB execution 741
s2e_dummyMainFunction
tcg-llvm-tb-740-8048a0e
460 [State 741] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 740 not yet applied), shell_len: 1024, eip: 0x00000000

460 [State 741] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
460 [State 741] Leaving buffer range @0xbfba3781, 8f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
460 [State 741] Killing state 741
460 [State 741] Terminating state 741 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
460 [State 741] Switching from state 741 to state 0
Copied 34928 (count=1)
Deleting state 741 0x0x2fec7770
460 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 740
>> fuzzInit: datum forking for value 741
>> fuzzInit: datum forking for value 741
460 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 741)
        (ReadLSB w32 0 v741_fuzz_symb_741)))
    state 742 with condition (Not (Eq false
         (Eq (w32 741)
             (ReadLSB w32 0 v741_fuzz_symb_741))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-741-8048a0e
Size=2 Low=0 splitIndex=1 high=1
460 [State 0] Switching from state 0 to state 742
Copied 34928 (count=1)
Finalizing TB execution 742
s2e_dummyMainFunction
tcg-llvm-tb-741-8048a0e
Firing timer event
460 [State 742] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 741 not yet applied), shell_len: 1024, eip: 0x00000000

460 [State 742] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
460 [State 742] Leaving buffer range @0xbfba3783, 8e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
460 [State 742] Killing state 742
460 [State 742] Terminating state 742 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
460 [State 742] Switching from state 742 to state 0
Copied 34928 (count=1)
Deleting state 742 0x0x2fec7770
461 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 741
>> fuzzInit: datum forking for value 742
>> fuzzInit: datum forking for value 742
461 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 742)
        (ReadLSB w32 0 v742_fuzz_symb_742)))
    state 743 with condition (Not (Eq false
         (Eq (w32 742)
             (ReadLSB w32 0 v742_fuzz_symb_742))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-742-8048a0e
Size=2 Low=0 splitIndex=1 high=1
461 [State 0] Switching from state 0 to state 743
Copied 34928 (count=1)
Finalizing TB execution 743
s2e_dummyMainFunction
tcg-llvm-tb-742-8048a0e
461 [State 743] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 742 not yet applied), shell_len: 1024, eip: 0x00000000

461 [State 743] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
461 [State 743] Leaving buffer range @0xbfba3781, 8e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
461 [State 743] Killing state 743
461 [State 743] Terminating state 743 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
461 [State 743] Switching from state 743 to state 0
Copied 34928 (count=1)
Deleting state 743 0x0x2fd07990
461 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 742
>> fuzzInit: datum forking for value 743
>> fuzzInit: datum forking for value 743
462 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 743)
        (ReadLSB w32 0 v743_fuzz_symb_743)))
    state 744 with condition (Not (Eq false
         (Eq (w32 743)
             (ReadLSB w32 0 v743_fuzz_symb_743))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-743-8048a0e
Size=2 Low=0 splitIndex=1 high=1
462 [State 0] Switching from state 0 to state 744
Copied 34928 (count=1)
Finalizing TB execution 744
s2e_dummyMainFunction
tcg-llvm-tb-743-8048a0e
Firing timer event
462 [State 744] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 743 not yet applied), shell_len: 1024, eip: 0x00000000

462 [State 744] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
462 [State 744] Leaving buffer range @0xbfba3783, 8d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
462 [State 744] Killing state 744
462 [State 744] Terminating state 744 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
462 [State 744] Switching from state 744 to state 0
Copied 34928 (count=1)
Deleting state 744 0x0x2fd07990
462 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 743
>> fuzzInit: datum forking for value 744
>> fuzzInit: datum forking for value 744
462 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 744)
        (ReadLSB w32 0 v744_fuzz_symb_744)))
    state 745 with condition (Not (Eq false
         (Eq (w32 744)
             (ReadLSB w32 0 v744_fuzz_symb_744))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-744-8048a0e
Size=2 Low=0 splitIndex=1 high=1
462 [State 0] Switching from state 0 to state 745
Copied 34928 (count=1)
Finalizing TB execution 745
s2e_dummyMainFunction
tcg-llvm-tb-744-8048a0e
462 [State 745] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 744 not yet applied), shell_len: 1024, eip: 0x00000000

462 [State 745] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
462 [State 745] Leaving buffer range @0xbfba3781, 8d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
463 [State 745] Killing state 745
463 [State 745] Terminating state 745 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
463 [State 745] Switching from state 745 to state 0
Copied 34928 (count=1)
Deleting state 745 0x0x2fe340b0
Firing timer event
463 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 744
>> fuzzInit: datum forking for value 745
>> fuzzInit: datum forking for value 745
463 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 745)
        (ReadLSB w32 0 v745_fuzz_symb_745)))
    state 746 with condition (Not (Eq false
         (Eq (w32 745)
             (ReadLSB w32 0 v745_fuzz_symb_745))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-745-8048a0e
Size=2 Low=0 splitIndex=1 high=1
463 [State 0] Switching from state 0 to state 746
Copied 34928 (count=1)
Finalizing TB execution 746
s2e_dummyMainFunction
tcg-llvm-tb-745-8048a0e
463 [State 746] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 745 not yet applied), shell_len: 1024, eip: 0x00000000

463 [State 746] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
463 [State 746] Leaving buffer range @0xbfba3783, 8c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
463 [State 746] Killing state 746
463 [State 746] Terminating state 746 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
463 [State 746] Switching from state 746 to state 0
Copied 34928 (count=1)
Deleting state 746 0x0x2fe340b0
463 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 745
>> fuzzInit: datum forking for value 746
>> fuzzInit: datum forking for value 746
464 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 746)
        (ReadLSB w32 0 v746_fuzz_symb_746)))
    state 747 with condition (Not (Eq false
         (Eq (w32 746)
             (ReadLSB w32 0 v746_fuzz_symb_746))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-746-8048a0e
Size=2 Low=0 splitIndex=1 high=1
464 [State 0] Switching from state 0 to state 747
Copied 34928 (count=1)
Finalizing TB execution 747
s2e_dummyMainFunction
tcg-llvm-tb-746-8048a0e
Firing timer event
464 [State 747] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 746 not yet applied), shell_len: 1024, eip: 0x00000000

464 [State 747] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
464 [State 747] Leaving buffer range @0xbfba3781, 8c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
464 [State 747] Killing state 747
464 [State 747] Terminating state 747 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
464 [State 747] Switching from state 747 to state 0
Copied 34928 (count=1)
Deleting state 747 0x0x2fe340b0
464 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 746
>> fuzzInit: datum forking for value 747
>> fuzzInit: datum forking for value 747
464 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 747)
        (ReadLSB w32 0 v747_fuzz_symb_747)))
    state 748 with condition (Not (Eq false
         (Eq (w32 747)
             (ReadLSB w32 0 v747_fuzz_symb_747))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-747-8048a0e
Size=2 Low=0 splitIndex=1 high=1
464 [State 0] Switching from state 0 to state 748
Copied 34928 (count=1)
Finalizing TB execution 748
s2e_dummyMainFunction
tcg-llvm-tb-747-8048a0e
464 [State 748] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 747 not yet applied), shell_len: 1024, eip: 0x00000000

464 [State 748] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
464 [State 748] Leaving buffer range @0xbfba3783, 8b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
464 [State 748] Killing state 748
464 [State 748] Terminating state 748 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
464 [State 748] Switching from state 748 to state 0
Copied 34928 (count=1)
Deleting state 748 0x0x2fba6500
Firing timer event
465 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 747
>> fuzzInit: datum forking for value 748
>> fuzzInit: datum forking for value 748
465 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 748)
        (ReadLSB w32 0 v748_fuzz_symb_748)))
    state 749 with condition (Not (Eq false
         (Eq (w32 748)
             (ReadLSB w32 0 v748_fuzz_symb_748))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-748-8048a0e
Size=2 Low=0 splitIndex=1 high=1
465 [State 0] Switching from state 0 to state 749
Copied 34928 (count=1)
Finalizing TB execution 749
s2e_dummyMainFunction
tcg-llvm-tb-748-8048a0e
465 [State 749] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 748 not yet applied), shell_len: 1024, eip: 0x00000000

465 [State 749] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
465 [State 749] Leaving buffer range @0xbfba3781, 8b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
465 [State 749] Killing state 749
465 [State 749] Terminating state 749 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
465 [State 749] Switching from state 749 to state 0
Copied 34928 (count=1)
Deleting state 749 0x0x2fba6500
465 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 748
>> fuzzInit: datum forking for value 749
>> fuzzInit: datum forking for value 749
466 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 749)
        (ReadLSB w32 0 v749_fuzz_symb_749)))
    state 750 with condition (Not (Eq false
         (Eq (w32 749)
             (ReadLSB w32 0 v749_fuzz_symb_749))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-749-8048a0e
Size=2 Low=0 splitIndex=1 high=1
466 [State 0] Switching from state 0 to state 750
Copied 34928 (count=1)
Finalizing TB execution 750
s2e_dummyMainFunction
tcg-llvm-tb-749-8048a0e
Firing timer event
466 [State 750] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 749 not yet applied), shell_len: 1024, eip: 0x00000000

466 [State 750] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
466 [State 750] Leaving buffer range @0xbfba3783, 8a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
466 [State 750] Killing state 750
466 [State 750] Terminating state 750 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
466 [State 750] Switching from state 750 to state 0
Copied 34928 (count=1)
Deleting state 750 0x0x2fd07990
466 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 749
>> fuzzInit: datum forking for value 750
>> fuzzInit: datum forking for value 750
466 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 750)
        (ReadLSB w32 0 v750_fuzz_symb_750)))
    state 751 with condition (Not (Eq false
         (Eq (w32 750)
             (ReadLSB w32 0 v750_fuzz_symb_750))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-750-8048a0e
Size=2 Low=0 splitIndex=1 high=1
466 [State 0] Switching from state 0 to state 751
Copied 34928 (count=1)
Finalizing TB execution 751
s2e_dummyMainFunction
tcg-llvm-tb-750-8048a0e
466 [State 751] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 750 not yet applied), shell_len: 1024, eip: 0x00000000

466 [State 751] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
466 [State 751] Leaving buffer range @0xbfba3781, 8a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
466 [State 751] Killing state 751
466 [State 751] Terminating state 751 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
466 [State 751] Switching from state 751 to state 0
Copied 34928 (count=1)
Deleting state 751 0x0x2fd07990
467 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 750
>> fuzzInit: datum forking for value 751
>> fuzzInit: datum forking for value 751
467 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 751)
        (ReadLSB w32 0 v751_fuzz_symb_751)))
    state 752 with condition (Not (Eq false
         (Eq (w32 751)
             (ReadLSB w32 0 v751_fuzz_symb_751))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-751-8048a0e
Size=2 Low=0 splitIndex=1 high=1
467 [State 0] Switching from state 0 to state 752
Copied 34928 (count=1)
Finalizing TB execution 752
s2e_dummyMainFunction
tcg-llvm-tb-751-8048a0e
Firing timer event
467 [State 752] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 751 not yet applied), shell_len: 1024, eip: 0x00000000

467 [State 752] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
467 [State 752] Leaving buffer range @0xbfba3783, 89 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
467 [State 752] Killing state 752
467 [State 752] Terminating state 752 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
467 [State 752] Switching from state 752 to state 0
Copied 34928 (count=1)
Deleting state 752 0x0x2fd07990
467 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 751
>> fuzzInit: datum forking for value 752
>> fuzzInit: datum forking for value 752
468 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 752)
        (ReadLSB w32 0 v752_fuzz_symb_752)))
    state 753 with condition (Not (Eq false
         (Eq (w32 752)
             (ReadLSB w32 0 v752_fuzz_symb_752))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-752-8048a0e
Size=2 Low=0 splitIndex=1 high=1
468 [State 0] Switching from state 0 to state 753
Copied 34928 (count=1)
Finalizing TB execution 753
s2e_dummyMainFunction
tcg-llvm-tb-752-8048a0e
468 [State 753] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 752 not yet applied), shell_len: 1024, eip: 0x00000000

468 [State 753] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
468 [State 753] Leaving buffer range @0xbfba3781, 89 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
468 [State 753] Killing state 753
468 [State 753] Terminating state 753 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
468 [State 753] Switching from state 753 to state 0
Copied 34928 (count=1)
Deleting state 753 0x0x2ff8a350
468 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 752
>> fuzzInit: datum forking for value 753
>> fuzzInit: datum forking for value 753
468 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 753)
        (ReadLSB w32 0 v753_fuzz_symb_753)))
    state 754 with condition (Not (Eq false
         (Eq (w32 753)
             (ReadLSB w32 0 v753_fuzz_symb_753))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-753-8048a0e
Size=2 Low=0 splitIndex=1 high=1
468 [State 0] Switching from state 0 to state 754
Copied 34928 (count=1)
Finalizing TB execution 754
s2e_dummyMainFunction
tcg-llvm-tb-753-8048a0e
Firing timer event
468 [State 754] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 753 not yet applied), shell_len: 1024, eip: 0x00000000

468 [State 754] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
468 [State 754] Leaving buffer range @0xbfba3783, 88 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
468 [State 754] Killing state 754
468 [State 754] Terminating state 754 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
468 [State 754] Switching from state 754 to state 0
Copied 34928 (count=1)
Deleting state 754 0x0x2ffee980
469 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 753
>> fuzzInit: datum forking for value 754
>> fuzzInit: datum forking for value 754
469 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 754)
        (ReadLSB w32 0 v754_fuzz_symb_754)))
    state 755 with condition (Not (Eq false
         (Eq (w32 754)
             (ReadLSB w32 0 v754_fuzz_symb_754))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-754-8048a0e
Size=2 Low=0 splitIndex=1 high=1
469 [State 0] Switching from state 0 to state 755
Copied 34928 (count=1)
Finalizing TB execution 755
s2e_dummyMainFunction
tcg-llvm-tb-754-8048a0e
469 [State 755] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 754 not yet applied), shell_len: 1024, eip: 0x00000000

469 [State 755] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
469 [State 755] Leaving buffer range @0xbfba3781, 88 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
469 [State 755] Killing state 755
469 [State 755] Terminating state 755 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
469 [State 755] Switching from state 755 to state 0
Copied 34928 (count=1)
Deleting state 755 0x0x2ffee980
Firing timer event
469 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 754
>> fuzzInit: datum forking for value 755
>> fuzzInit: datum forking for value 755
470 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 755)
        (ReadLSB w32 0 v755_fuzz_symb_755)))
    state 756 with condition (Not (Eq false
         (Eq (w32 755)
             (ReadLSB w32 0 v755_fuzz_symb_755))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-755-8048a0e
Size=2 Low=0 splitIndex=1 high=1
470 [State 0] Switching from state 0 to state 756
Copied 34928 (count=1)
Finalizing TB execution 756
s2e_dummyMainFunction
tcg-llvm-tb-755-8048a0e
470 [State 756] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 755 not yet applied), shell_len: 1024, eip: 0x00000000

470 [State 756] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
470 [State 756] Leaving buffer range @0xbfba3783, 87 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
470 [State 756] Killing state 756
470 [State 756] Terminating state 756 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
470 [State 756] Switching from state 756 to state 0
Copied 34928 (count=1)
Deleting state 756 0x0x2ffee980
470 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 755
>> fuzzInit: datum forking for value 756
>> fuzzInit: datum forking for value 756
470 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 756)
        (ReadLSB w32 0 v756_fuzz_symb_756)))
    state 757 with condition (Not (Eq false
         (Eq (w32 756)
             (ReadLSB w32 0 v756_fuzz_symb_756))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-756-8048a0e
Size=2 Low=0 splitIndex=1 high=1
470 [State 0] Switching from state 0 to state 757
Copied 34928 (count=1)
Finalizing TB execution 757
s2e_dummyMainFunction
tcg-llvm-tb-756-8048a0e
Firing timer event
470 [State 757] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 756 not yet applied), shell_len: 1024, eip: 0x00000000

470 [State 757] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
470 [State 757] Leaving buffer range @0xbfba3781, 87 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
471 [State 757] Killing state 757
471 [State 757] Terminating state 757 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
471 [State 757] Switching from state 757 to state 0
Copied 34928 (count=1)
Deleting state 757 0x0x2ffee980
471 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 756
>> fuzzInit: datum forking for value 757
>> fuzzInit: datum forking for value 757
471 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 757)
        (ReadLSB w32 0 v757_fuzz_symb_757)))
    state 758 with condition (Not (Eq false
         (Eq (w32 757)
             (ReadLSB w32 0 v757_fuzz_symb_757))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-757-8048a0e
Size=2 Low=0 splitIndex=1 high=1
471 [State 0] Switching from state 0 to state 758
Copied 34928 (count=1)
Finalizing TB execution 758
s2e_dummyMainFunction
tcg-llvm-tb-757-8048a0e
471 [State 758] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 757 not yet applied), shell_len: 1024, eip: 0x00000000

471 [State 758] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
471 [State 758] Leaving buffer range @0xbfba3783, 86 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
471 [State 758] Killing state 758
471 [State 758] Terminating state 758 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
471 [State 758] Switching from state 758 to state 0
Copied 34928 (count=1)
Deleting state 758 0x0x2ffee980
Firing timer event
471 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 757
>> fuzzInit: datum forking for value 758
>> fuzzInit: datum forking for value 758
472 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 758)
        (ReadLSB w32 0 v758_fuzz_symb_758)))
    state 759 with condition (Not (Eq false
         (Eq (w32 758)
             (ReadLSB w32 0 v758_fuzz_symb_758))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-758-8048a0e
Size=2 Low=0 splitIndex=1 high=1
472 [State 0] Switching from state 0 to state 759
Copied 34928 (count=1)
Finalizing TB execution 759
s2e_dummyMainFunction
tcg-llvm-tb-758-8048a0e
472 [State 759] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 758 not yet applied), shell_len: 1024, eip: 0x00000000

472 [State 759] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
472 [State 759] Leaving buffer range @0xbfba3781, 86 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
472 [State 759] Killing state 759
472 [State 759] Terminating state 759 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
472 [State 759] Switching from state 759 to state 0
Copied 34928 (count=1)
Deleting state 759 0x0x2ffee980
472 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 758
>> fuzzInit: datum forking for value 759
>> fuzzInit: datum forking for value 759
472 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 759)
        (ReadLSB w32 0 v759_fuzz_symb_759)))
    state 760 with condition (Not (Eq false
         (Eq (w32 759)
             (ReadLSB w32 0 v759_fuzz_symb_759))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-759-8048a0e
Size=2 Low=0 splitIndex=1 high=1
472 [State 0] Switching from state 0 to state 760
Copied 34928 (count=1)
Finalizing TB execution 760
s2e_dummyMainFunction
tcg-llvm-tb-759-8048a0e
Firing timer event
472 [State 760] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 759 not yet applied), shell_len: 1024, eip: 0x00000000

472 [State 760] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
472 [State 760] Leaving buffer range @0xbfba3783, 85 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
473 [State 760] Killing state 760
473 [State 760] Terminating state 760 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
473 [State 760] Switching from state 760 to state 0
Copied 34928 (count=1)
Deleting state 760 0x0x2ffee980
473 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 759
>> fuzzInit: datum forking for value 760
>> fuzzInit: datum forking for value 760
473 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 760)
        (ReadLSB w32 0 v760_fuzz_symb_760)))
    state 761 with condition (Not (Eq false
         (Eq (w32 760)
             (ReadLSB w32 0 v760_fuzz_symb_760))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-760-8048a0e
Size=2 Low=0 splitIndex=1 high=1
473 [State 0] Switching from state 0 to state 761
Copied 34928 (count=1)
Finalizing TB execution 761
s2e_dummyMainFunction
tcg-llvm-tb-760-8048a0e
473 [State 761] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 760 not yet applied), shell_len: 1024, eip: 0x00000000

473 [State 761] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
473 [State 761] Leaving buffer range @0xbfba3781, 85 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
473 [State 761] Killing state 761
473 [State 761] Terminating state 761 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
473 [State 761] Switching from state 761 to state 0
Copied 34928 (count=1)
Deleting state 761 0x0x2ffee980
Firing timer event
473 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 760
>> fuzzInit: datum forking for value 761
>> fuzzInit: datum forking for value 761
474 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 761)
        (ReadLSB w32 0 v761_fuzz_symb_761)))
    state 762 with condition (Not (Eq false
         (Eq (w32 761)
             (ReadLSB w32 0 v761_fuzz_symb_761))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-761-8048a0e
Size=2 Low=0 splitIndex=1 high=1
474 [State 0] Switching from state 0 to state 762
Copied 34928 (count=1)
Finalizing TB execution 762
s2e_dummyMainFunction
tcg-llvm-tb-761-8048a0e
474 [State 762] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 761 not yet applied), shell_len: 1024, eip: 0x00000000

474 [State 762] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
474 [State 762] Leaving buffer range @0xbfba3783, 84 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
474 [State 762] Killing state 762
474 [State 762] Terminating state 762 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
474 [State 762] Switching from state 762 to state 0
Copied 34928 (count=1)
Deleting state 762 0x0x30524fd0
474 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 761
>> fuzzInit: datum forking for value 762
>> fuzzInit: datum forking for value 762
475 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 762)
        (ReadLSB w32 0 v762_fuzz_symb_762)))
    state 763 with condition (Not (Eq false
         (Eq (w32 762)
             (ReadLSB w32 0 v762_fuzz_symb_762))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-762-8048a0e
Size=2 Low=0 splitIndex=1 high=1
475 [State 0] Switching from state 0 to state 763
Copied 34928 (count=1)
Finalizing TB execution 763
s2e_dummyMainFunction
tcg-llvm-tb-762-8048a0e
Firing timer event
475 [State 763] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 762 not yet applied), shell_len: 1024, eip: 0x00000000

475 [State 763] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
475 [State 763] Leaving buffer range @0xbfba3781, 84 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
475 [State 763] Killing state 763
475 [State 763] Terminating state 763 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
475 [State 763] Switching from state 763 to state 0
Copied 34928 (count=1)
Deleting state 763 0x0x30524fd0
475 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 762
>> fuzzInit: datum forking for value 763
>> fuzzInit: datum forking for value 763
475 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 763)
        (ReadLSB w32 0 v763_fuzz_symb_763)))
    state 764 with condition (Not (Eq false
         (Eq (w32 763)
             (ReadLSB w32 0 v763_fuzz_symb_763))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-763-8048a0e
Size=2 Low=0 splitIndex=1 high=1
475 [State 0] Switching from state 0 to state 764
Copied 34928 (count=1)
Finalizing TB execution 764
s2e_dummyMainFunction
tcg-llvm-tb-763-8048a0e
475 [State 764] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 763 not yet applied), shell_len: 1024, eip: 0x00000000

475 [State 764] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
475 [State 764] Leaving buffer range @0xbfba3783, 83 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
475 [State 764] Killing state 764
475 [State 764] Terminating state 764 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
475 [State 764] Switching from state 764 to state 0
Copied 34928 (count=1)
Deleting state 764 0x0x305294a0
476 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 763
>> fuzzInit: datum forking for value 764
>> fuzzInit: datum forking for value 764
476 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 764)
        (ReadLSB w32 0 v764_fuzz_symb_764)))
    state 765 with condition (Not (Eq false
         (Eq (w32 764)
             (ReadLSB w32 0 v764_fuzz_symb_764))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-764-8048a0e
Size=2 Low=0 splitIndex=1 high=1
476 [State 0] Switching from state 0 to state 765
Copied 34928 (count=1)
Finalizing TB execution 765
s2e_dummyMainFunction
tcg-llvm-tb-764-8048a0e
Firing timer event
476 [State 765] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 764 not yet applied), shell_len: 1024, eip: 0x00000000

476 [State 765] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
476 [State 765] Leaving buffer range @0xbfba3781, 83 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
476 [State 765] Killing state 765
476 [State 765] Terminating state 765 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
476 [State 765] Switching from state 765 to state 0
Copied 34928 (count=1)
Deleting state 765 0x0x3062c290
476 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 764
>> fuzzInit: datum forking for value 765
>> fuzzInit: datum forking for value 765
476 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 765)
        (ReadLSB w32 0 v765_fuzz_symb_765)))
    state 766 with condition (Not (Eq false
         (Eq (w32 765)
             (ReadLSB w32 0 v765_fuzz_symb_765))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-765-8048a0e
Size=2 Low=0 splitIndex=1 high=1
476 [State 0] Switching from state 0 to state 766
Copied 34928 (count=1)
Finalizing TB execution 766
s2e_dummyMainFunction
tcg-llvm-tb-765-8048a0e
477 [State 766] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 765 not yet applied), shell_len: 1024, eip: 0x00000000

477 [State 766] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
477 [State 766] Leaving buffer range @0xbfba3783, 82 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
477 [State 766] Killing state 766
477 [State 766] Terminating state 766 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
477 [State 766] Switching from state 766 to state 0
Copied 34928 (count=1)
Deleting state 766 0x0x30495600
477 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 765
>> fuzzInit: datum forking for value 766
>> fuzzInit: datum forking for value 766
477 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 766)
        (ReadLSB w32 0 v766_fuzz_symb_766)))
    state 767 with condition (Not (Eq false
         (Eq (w32 766)
             (ReadLSB w32 0 v766_fuzz_symb_766))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-766-8048a0e
Size=2 Low=0 splitIndex=1 high=1
477 [State 0] Switching from state 0 to state 767
Copied 34928 (count=1)
Finalizing TB execution 767
s2e_dummyMainFunction
tcg-llvm-tb-766-8048a0e
Firing timer event
477 [State 767] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 766 not yet applied), shell_len: 1024, eip: 0x00000000

477 [State 767] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
477 [State 767] Leaving buffer range @0xbfba3781, 82 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
477 [State 767] Killing state 767
477 [State 767] Terminating state 767 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
477 [State 767] Switching from state 767 to state 0
Copied 34928 (count=1)
Deleting state 767 0x0x30495600
478 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 766
>> fuzzInit: datum forking for value 767
>> fuzzInit: datum forking for value 767
478 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 767)
        (ReadLSB w32 0 v767_fuzz_symb_767)))
    state 768 with condition (Not (Eq false
         (Eq (w32 767)
             (ReadLSB w32 0 v767_fuzz_symb_767))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-767-8048a0e
Size=2 Low=0 splitIndex=1 high=1
478 [State 0] Switching from state 0 to state 768
Copied 34928 (count=1)
Finalizing TB execution 768
s2e_dummyMainFunction
tcg-llvm-tb-767-8048a0e
478 [State 768] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 767 not yet applied), shell_len: 1024, eip: 0x00000000

478 [State 768] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
478 [State 768] Leaving buffer range @0xbfba3783, 81 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
478 [State 768] Killing state 768
478 [State 768] Terminating state 768 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
478 [State 768] Switching from state 768 to state 0
Copied 34928 (count=1)
Deleting state 768 0x0x30685b50
478 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 767
>> fuzzInit: datum forking for value 768
>> fuzzInit: datum forking for value 768
479 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 768)
        (ReadLSB w32 0 v768_fuzz_symb_768)))
    state 769 with condition (Not (Eq false
         (Eq (w32 768)
             (ReadLSB w32 0 v768_fuzz_symb_768))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-768-8048a0e
Size=2 Low=0 splitIndex=1 high=1
479 [State 0] Switching from state 0 to state 769
Copied 34928 (count=1)
Finalizing TB execution 769
s2e_dummyMainFunction
tcg-llvm-tb-768-8048a0e
479 [State 769] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 768 not yet applied), shell_len: 1024, eip: 0x00000000

479 [State 769] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
479 [State 769] Leaving buffer range @0xbfba3781, 81 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
Firing timer event
479 [State 769] Killing state 769
479 [State 769] Terminating state 769 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
479 [State 769] Switching from state 769 to state 0
Copied 34928 (count=1)
Deleting state 769 0x0x30685b50
479 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 768
>> fuzzInit: datum forking for value 769
>> fuzzInit: datum forking for value 769
480 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 769)
        (ReadLSB w32 0 v769_fuzz_symb_769)))
    state 770 with condition (Not (Eq false
         (Eq (w32 769)
             (ReadLSB w32 0 v769_fuzz_symb_769))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-769-8048a0e
Size=2 Low=0 splitIndex=1 high=1
480 [State 0] Switching from state 0 to state 770
Copied 34928 (count=1)
Finalizing TB execution 770
s2e_dummyMainFunction
tcg-llvm-tb-769-8048a0e
480 [State 770] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 769 not yet applied), shell_len: 1024, eip: 0x00000000

480 [State 770] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
480 [State 770] Leaving buffer range @0xbfba3783, 80 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
480 [State 770] Killing state 770
480 [State 770] Terminating state 770 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
480 [State 770] Switching from state 770 to state 0
Copied 34928 (count=1)
Deleting state 770 0x0x30685b50
480 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 769
>> fuzzInit: datum forking for value 770
>> fuzzInit: datum forking for value 770
481 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 770)
        (ReadLSB w32 0 v770_fuzz_symb_770)))
    state 771 with condition (Not (Eq false
         (Eq (w32 770)
             (ReadLSB w32 0 v770_fuzz_symb_770))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-770-8048a0e
Size=2 Low=0 splitIndex=1 high=1
481 [State 0] Switching from state 0 to state 771
Copied 34928 (count=1)
Finalizing TB execution 771
s2e_dummyMainFunction
tcg-llvm-tb-770-8048a0e
481 [State 771] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 770 not yet applied), shell_len: 1024, eip: 0x00000000

481 [State 771] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
481 [State 771] Leaving buffer range @0xbfba3781, 80 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
481 [State 771] Killing state 771
481 [State 771] Terminating state 771 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
481 [State 771] Switching from state 771 to state 0
Copied 34928 (count=1)
Deleting state 771 0x0x30685b50
Firing timer event
481 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 770
>> fuzzInit: datum forking for value 771
>> fuzzInit: datum forking for value 771
481 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 771)
        (ReadLSB w32 0 v771_fuzz_symb_771)))
    state 772 with condition (Not (Eq false
         (Eq (w32 771)
             (ReadLSB w32 0 v771_fuzz_symb_771))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-771-8048a0e
Size=2 Low=0 splitIndex=1 high=1
481 [State 0] Switching from state 0 to state 772
Copied 34928 (count=1)
Finalizing TB execution 772
s2e_dummyMainFunction
tcg-llvm-tb-771-8048a0e
482 [State 772] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 771 not yet applied), shell_len: 1024, eip: 0x00000000

482 [State 772] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
482 [State 772] Leaving buffer range @0xbfba3783, 7f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
482 [State 772] Killing state 772
482 [State 772] Terminating state 772 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
482 [State 772] Switching from state 772 to state 0
Copied 34928 (count=1)
Deleting state 772 0x0x30685b50
Firing timer event
482 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 771
>> fuzzInit: datum forking for value 772
>> fuzzInit: datum forking for value 772
482 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 772)
        (ReadLSB w32 0 v772_fuzz_symb_772)))
    state 773 with condition (Not (Eq false
         (Eq (w32 772)
             (ReadLSB w32 0 v772_fuzz_symb_772))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-772-8048a0e
Size=2 Low=0 splitIndex=1 high=1
482 [State 0] Switching from state 0 to state 773
Copied 34928 (count=1)
Finalizing TB execution 773
s2e_dummyMainFunction
tcg-llvm-tb-772-8048a0e
483 [State 773] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 772 not yet applied), shell_len: 1024, eip: 0x00000000

483 [State 773] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
483 [State 773] Leaving buffer range @0xbfba3781, 7f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
483 [State 773] Killing state 773
483 [State 773] Terminating state 773 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
483 [State 773] Switching from state 773 to state 0
Copied 34928 (count=1)
Deleting state 773 0x0x30685b50
483 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 772
>> fuzzInit: datum forking for value 773
>> fuzzInit: datum forking for value 773
483 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 773)
        (ReadLSB w32 0 v773_fuzz_symb_773)))
    state 774 with condition (Not (Eq false
         (Eq (w32 773)
             (ReadLSB w32 0 v773_fuzz_symb_773))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-773-8048a0e
Size=2 Low=0 splitIndex=1 high=1
483 [State 0] Switching from state 0 to state 774
Copied 34928 (count=1)
Finalizing TB execution 774
s2e_dummyMainFunction
tcg-llvm-tb-773-8048a0e
Firing timer event
483 [State 774] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 773 not yet applied), shell_len: 1024, eip: 0x00000000

483 [State 774] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
484 [State 774] Leaving buffer range @0xc1003072, 25 IoB insns; prev insn @0xbfba36cd
  1   2B @0xbfba36cd:  0  0             add [eax], al           
484 [State 774] Entering buffer range @0xbfba36cf, 1 OoB insns
484 [State 774] Leaving buffer range @0xbfba3783, 59 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
484 [State 774] Killing state 774
484 [State 774] Terminating state 774 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
484 [State 774] Switching from state 774 to state 0
Copied 34928 (count=1)
Deleting state 774 0x0x308b2ed0
484 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 773
>> fuzzInit: datum forking for value 774
>> fuzzInit: datum forking for value 774
484 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 774)
        (ReadLSB w32 0 v774_fuzz_symb_774)))
    state 775 with condition (Not (Eq false
         (Eq (w32 774)
             (ReadLSB w32 0 v774_fuzz_symb_774))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-774-8048a0e
Size=2 Low=0 splitIndex=1 high=1
484 [State 0] Switching from state 0 to state 775
Copied 34928 (count=1)
Finalizing TB execution 775
s2e_dummyMainFunction
tcg-llvm-tb-774-8048a0e
Firing timer event
484 [State 775] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 774 not yet applied), shell_len: 1024, eip: 0x00000000

484 [State 775] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
485 [State 775] Leaving buffer range @0xbfba3781, 7e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
485 [State 775] Killing state 775
485 [State 775] Terminating state 775 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
485 [State 775] Switching from state 775 to state 0
Copied 34928 (count=1)
Deleting state 775 0x0x30a4aab0
485 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 774
>> fuzzInit: datum forking for value 775
>> fuzzInit: datum forking for value 775
>> fuzzInit: datum forking for value 775
485 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 775)
        (ReadLSB w32 0 v775_fuzz_symb_775)))
    state 776 with condition (Not (Eq false
         (Eq (w32 775)
             (ReadLSB w32 0 v775_fuzz_symb_775))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-775-8048a0e
Size=2 Low=0 splitIndex=1 high=1
485 [State 0] Switching from state 0 to state 776
Copied 34928 (count=1)
Finalizing TB execution 776
s2e_dummyMainFunction
tcg-llvm-tb-775-8048a0e
Firing timer event
485 [State 776] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 775 not yet applied), shell_len: 1024, eip: 0x00000000

485 [State 776] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
485 [State 776] Leaving buffer range @0xbfba3783, 7d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
486 [State 776] Killing state 776
486 [State 776] Terminating state 776 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
486 [State 776] Switching from state 776 to state 0
Copied 34928 (count=1)
Deleting state 776 0x0x30b56f30
486 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 775
>> fuzzInit: datum forking for value 776
>> fuzzInit: datum forking for value 776
486 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 776)
        (ReadLSB w32 0 v776_fuzz_symb_776)))
    state 777 with condition (Not (Eq false
         (Eq (w32 776)
             (ReadLSB w32 0 v776_fuzz_symb_776))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-776-8048a0e
Size=2 Low=0 splitIndex=1 high=1
486 [State 0] Switching from state 0 to state 777
Copied 34928 (count=1)
Finalizing TB execution 777
s2e_dummyMainFunction
tcg-llvm-tb-776-8048a0e
486 [State 777] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 776 not yet applied), shell_len: 1024, eip: 0x00000000

486 [State 777] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
486 [State 777] Leaving buffer range @0xbfba3781, 7d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
486 [State 777] Killing state 777
486 [State 777] Terminating state 777 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
486 [State 777] Switching from state 777 to state 0
Copied 34928 (count=1)
Deleting state 777 0x0x30ba3840
Firing timer event
486 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 776
>> fuzzInit: datum forking for value 777
>> fuzzInit: datum forking for value 777
487 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 777)
        (ReadLSB w32 0 v777_fuzz_symb_777)))
    state 778 with condition (Not (Eq false
         (Eq (w32 777)
             (ReadLSB w32 0 v777_fuzz_symb_777))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-777-8048a0e
Size=2 Low=0 splitIndex=1 high=1
487 [State 0] Switching from state 0 to state 778
Copied 34928 (count=1)
Finalizing TB execution 778
s2e_dummyMainFunction
tcg-llvm-tb-777-8048a0e
487 [State 778] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 777 not yet applied), shell_len: 1024, eip: 0x00000000

487 [State 778] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
487 [State 778] Leaving buffer range @0xbfba3783, 7c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
487 [State 778] Killing state 778
487 [State 778] Terminating state 778 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
487 [State 778] Switching from state 778 to state 0
Copied 34928 (count=1)
Deleting state 778 0x0x30ba3840
487 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 777
>> fuzzInit: datum forking for value 778
>> fuzzInit: datum forking for value 778
487 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 778)
        (ReadLSB w32 0 v778_fuzz_symb_778)))
    state 779 with condition (Not (Eq false
         (Eq (w32 778)
             (ReadLSB w32 0 v778_fuzz_symb_778))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-778-8048a0e
Size=2 Low=0 splitIndex=1 high=1
487 [State 0] Switching from state 0 to state 779
Copied 34928 (count=1)
Finalizing TB execution 779
s2e_dummyMainFunction
tcg-llvm-tb-778-8048a0e
Firing timer event
487 [State 779] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 778 not yet applied), shell_len: 1024, eip: 0x00000000

487 [State 779] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
488 [State 779] Leaving buffer range @0xbfba3781, 7c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
488 [State 779] Killing state 779
488 [State 779] Terminating state 779 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
488 [State 779] Switching from state 779 to state 0
Copied 34928 (count=1)
Deleting state 779 0x0x30ba3840
488 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 778
>> fuzzInit: datum forking for value 779
>> fuzzInit: datum forking for value 779
488 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 779)
        (ReadLSB w32 0 v779_fuzz_symb_779)))
    state 780 with condition (Not (Eq false
         (Eq (w32 779)
             (ReadLSB w32 0 v779_fuzz_symb_779))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-779-8048a0e
Size=2 Low=0 splitIndex=1 high=1
488 [State 0] Switching from state 0 to state 780
Copied 34928 (count=1)
Finalizing TB execution 780
s2e_dummyMainFunction
tcg-llvm-tb-779-8048a0e
488 [State 780] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 779 not yet applied), shell_len: 1024, eip: 0x00000000

488 [State 780] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
488 [State 780] Leaving buffer range @0xbfba3783, 7b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
488 [State 780] Killing state 780
488 [State 780] Terminating state 780 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
488 [State 780] Switching from state 780 to state 0
Copied 34928 (count=1)
Deleting state 780 0x0x30ba3840
Firing timer event
488 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 779
>> fuzzInit: datum forking for value 780
>> fuzzInit: datum forking for value 780
489 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 780)
        (ReadLSB w32 0 v780_fuzz_symb_780)))
    state 781 with condition (Not (Eq false
         (Eq (w32 780)
             (ReadLSB w32 0 v780_fuzz_symb_780))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-780-8048a0e
Size=2 Low=0 splitIndex=1 high=1
489 [State 0] Switching from state 0 to state 781
Copied 34928 (count=1)
Finalizing TB execution 781
s2e_dummyMainFunction
tcg-llvm-tb-780-8048a0e
489 [State 781] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 780 not yet applied), shell_len: 1024, eip: 0x00000000

489 [State 781] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
489 [State 781] Leaving buffer range @0xbfba3781, 7b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
489 [State 781] Killing state 781
489 [State 781] Terminating state 781 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
489 [State 781] Switching from state 781 to state 0
Copied 34928 (count=1)
Deleting state 781 0x0x30c34900
489 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 780
>> fuzzInit: datum forking for value 781
>> fuzzInit: datum forking for value 781
489 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 781)
        (ReadLSB w32 0 v781_fuzz_symb_781)))
    state 782 with condition (Not (Eq false
         (Eq (w32 781)
             (ReadLSB w32 0 v781_fuzz_symb_781))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-781-8048a0e
Size=2 Low=0 splitIndex=1 high=1
489 [State 0] Switching from state 0 to state 782
Copied 34928 (count=1)
Finalizing TB execution 782
s2e_dummyMainFunction
tcg-llvm-tb-781-8048a0e
Firing timer event
489 [State 782] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 781 not yet applied), shell_len: 1024, eip: 0x00000000

489 [State 782] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
490 [State 782] Leaving buffer range @0xbfba3783, 7a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
490 [State 782] Killing state 782
490 [State 782] Terminating state 782 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
490 [State 782] Switching from state 782 to state 0
Copied 34928 (count=1)
Deleting state 782 0x0x30c34900
490 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 781
>> fuzzInit: datum forking for value 782
>> fuzzInit: datum forking for value 782
490 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 782)
        (ReadLSB w32 0 v782_fuzz_symb_782)))
    state 783 with condition (Not (Eq false
         (Eq (w32 782)
             (ReadLSB w32 0 v782_fuzz_symb_782))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-782-8048a0e
Size=2 Low=0 splitIndex=1 high=1
490 [State 0] Switching from state 0 to state 783
Copied 34928 (count=1)
Finalizing TB execution 783
s2e_dummyMainFunction
tcg-llvm-tb-782-8048a0e
490 [State 783] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 782 not yet applied), shell_len: 1024, eip: 0x00000000

490 [State 783] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
490 [State 783] Leaving buffer range @0xbfba3781, 7a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
490 [State 783] Killing state 783
490 [State 783] Terminating state 783 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
490 [State 783] Switching from state 783 to state 0
Copied 34928 (count=1)
Deleting state 783 0x0x30c34900
490 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 782
>> fuzzInit: datum forking for value 783
>> fuzzInit: datum forking for value 783
491 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 783)
        (ReadLSB w32 0 v783_fuzz_symb_783)))
    state 784 with condition (Not (Eq false
         (Eq (w32 783)
             (ReadLSB w32 0 v783_fuzz_symb_783))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-783-8048a0e
Size=2 Low=0 splitIndex=1 high=1
491 [State 0] Switching from state 0 to state 784
Copied 34928 (count=1)
Finalizing TB execution 784
s2e_dummyMainFunction
tcg-llvm-tb-783-8048a0e
Firing timer event
491 [State 784] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 783 not yet applied), shell_len: 1024, eip: 0x00000000

491 [State 784] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
491 [State 784] Leaving buffer range @0xbfba3783, 79 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
491 [State 784] Killing state 784
491 [State 784] Terminating state 784 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
491 [State 784] Switching from state 784 to state 0
Copied 34928 (count=1)
Deleting state 784 0x0x30b99e20
491 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 783
>> fuzzInit: datum forking for value 784
>> fuzzInit: datum forking for value 784
491 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 784)
        (ReadLSB w32 0 v784_fuzz_symb_784)))
    state 785 with condition (Not (Eq false
         (Eq (w32 784)
             (ReadLSB w32 0 v784_fuzz_symb_784))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-784-8048a0e
Size=2 Low=0 splitIndex=1 high=1
491 [State 0] Switching from state 0 to state 785
Copied 34928 (count=1)
Finalizing TB execution 785
s2e_dummyMainFunction
tcg-llvm-tb-784-8048a0e
491 [State 785] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 784 not yet applied), shell_len: 1024, eip: 0x00000000

491 [State 785] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
491 [State 785] Leaving buffer range @0xbfba3781, 79 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
492 [State 785] Killing state 785
492 [State 785] Terminating state 785 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
492 [State 785] Switching from state 785 to state 0
Copied 34928 (count=1)
Deleting state 785 0x0x30e231b0
492 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 784
>> fuzzInit: datum forking for value 785
>> fuzzInit: datum forking for value 785
492 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 785)
        (ReadLSB w32 0 v785_fuzz_symb_785)))
    state 786 with condition (Not (Eq false
         (Eq (w32 785)
             (ReadLSB w32 0 v785_fuzz_symb_785))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-785-8048a0e
Size=2 Low=0 splitIndex=1 high=1
492 [State 0] Switching from state 0 to state 786
Copied 34928 (count=1)
Finalizing TB execution 786
s2e_dummyMainFunction
tcg-llvm-tb-785-8048a0e
Firing timer event
492 [State 786] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 785 not yet applied), shell_len: 1024, eip: 0x00000000

492 [State 786] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
492 [State 786] Leaving buffer range @0xbfba3783, 78 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
492 [State 786] Killing state 786
492 [State 786] Terminating state 786 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
492 [State 786] Switching from state 786 to state 0
Copied 34928 (count=1)
Deleting state 786 0x0x30e231b0
492 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 785
>> fuzzInit: datum forking for value 786
>> fuzzInit: datum forking for value 786
493 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 786)
        (ReadLSB w32 0 v786_fuzz_symb_786)))
    state 787 with condition (Not (Eq false
         (Eq (w32 786)
             (ReadLSB w32 0 v786_fuzz_symb_786))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-786-8048a0e
Size=2 Low=0 splitIndex=1 high=1
493 [State 0] Switching from state 0 to state 787
Copied 34928 (count=1)
Finalizing TB execution 787
s2e_dummyMainFunction
tcg-llvm-tb-786-8048a0e
493 [State 787] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 786 not yet applied), shell_len: 1024, eip: 0x00000000

493 [State 787] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
493 [State 787] Leaving buffer range @0xbfba3781, 78 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
493 [State 787] Killing state 787
493 [State 787] Terminating state 787 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
493 [State 787] Switching from state 787 to state 0
Copied 34928 (count=1)
Deleting state 787 0x0x30e231b0
Firing timer event
493 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 786
>> fuzzInit: datum forking for value 787
>> fuzzInit: datum forking for value 787
493 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 787)
        (ReadLSB w32 0 v787_fuzz_symb_787)))
    state 788 with condition (Not (Eq false
         (Eq (w32 787)
             (ReadLSB w32 0 v787_fuzz_symb_787))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-787-8048a0e
Size=2 Low=0 splitIndex=1 high=1
493 [State 0] Switching from state 0 to state 788
Copied 34928 (count=1)
Finalizing TB execution 788
s2e_dummyMainFunction
tcg-llvm-tb-787-8048a0e
493 [State 788] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 787 not yet applied), shell_len: 1024, eip: 0x00000000

493 [State 788] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
493 [State 788] Leaving buffer range @0xbfba3783, 77 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
493 [State 788] Killing state 788
493 [State 788] Terminating state 788 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
493 [State 788] Switching from state 788 to state 0
Copied 34928 (count=1)
Deleting state 788 0x0x30ef52a0
494 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 787
>> fuzzInit: datum forking for value 788
>> fuzzInit: datum forking for value 788
494 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 788)
        (ReadLSB w32 0 v788_fuzz_symb_788)))
    state 789 with condition (Not (Eq false
         (Eq (w32 788)
             (ReadLSB w32 0 v788_fuzz_symb_788))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-788-8048a0e
Size=2 Low=0 splitIndex=1 high=1
494 [State 0] Switching from state 0 to state 789
Copied 34928 (count=1)
Finalizing TB execution 789
s2e_dummyMainFunction
tcg-llvm-tb-788-8048a0e
Firing timer event
494 [State 789] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 788 not yet applied), shell_len: 1024, eip: 0x00000000

494 [State 789] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
494 [State 789] Leaving buffer range @0xbfba3781, 77 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
494 [State 789] Killing state 789
494 [State 789] Terminating state 789 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
494 [State 789] Switching from state 789 to state 0
Copied 34928 (count=1)
Deleting state 789 0x0x30ef52a0
494 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 788
>> fuzzInit: datum forking for value 789
>> fuzzInit: datum forking for value 789
495 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 789)
        (ReadLSB w32 0 v789_fuzz_symb_789)))
    state 790 with condition (Not (Eq false
         (Eq (w32 789)
             (ReadLSB w32 0 v789_fuzz_symb_789))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-789-8048a0e
Size=2 Low=0 splitIndex=1 high=1
495 [State 0] Switching from state 0 to state 790
Copied 34928 (count=1)
Finalizing TB execution 790
s2e_dummyMainFunction
tcg-llvm-tb-789-8048a0e
495 [State 790] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 789 not yet applied), shell_len: 1024, eip: 0x00000000

495 [State 790] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
495 [State 790] Leaving buffer range @0xbfba3783, 76 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
495 [State 790] Killing state 790
495 [State 790] Terminating state 790 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
495 [State 790] Switching from state 790 to state 0
Copied 34928 (count=1)
Deleting state 790 0x0x30ef52a0
495 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 789
>> fuzzInit: datum forking for value 790
>> fuzzInit: datum forking for value 790
495 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 790)
        (ReadLSB w32 0 v790_fuzz_symb_790)))
    state 791 with condition (Not (Eq false
         (Eq (w32 790)
             (ReadLSB w32 0 v790_fuzz_symb_790))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-790-8048a0e
Size=2 Low=0 splitIndex=1 high=1
495 [State 0] Switching from state 0 to state 791
Copied 34928 (count=1)
Finalizing TB execution 791
s2e_dummyMainFunction
tcg-llvm-tb-790-8048a0e
Firing timer event
495 [State 791] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 790 not yet applied), shell_len: 1024, eip: 0x00000000

495 [State 791] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
495 [State 791] Leaving buffer range @0xbfba3781, 76 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
495 [State 791] Killing state 791
495 [State 791] Terminating state 791 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
495 [State 791] Switching from state 791 to state 0
Copied 34928 (count=1)
Deleting state 791 0x0x30f9d070
496 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 790
>> fuzzInit: datum forking for value 791
>> fuzzInit: datum forking for value 791
496 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 791)
        (ReadLSB w32 0 v791_fuzz_symb_791)))
    state 792 with condition (Not (Eq false
         (Eq (w32 791)
             (ReadLSB w32 0 v791_fuzz_symb_791))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-791-8048a0e
Size=2 Low=0 splitIndex=1 high=1
496 [State 0] Switching from state 0 to state 792
Copied 34928 (count=1)
Finalizing TB execution 792
s2e_dummyMainFunction
tcg-llvm-tb-791-8048a0e
496 [State 792] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 791 not yet applied), shell_len: 1024, eip: 0x00000000

496 [State 792] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
496 [State 792] Leaving buffer range @0xbfba3783, 75 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
496 [State 792] Killing state 792
496 [State 792] Terminating state 792 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
496 [State 792] Switching from state 792 to state 0
Copied 34928 (count=1)
Deleting state 792 0x0x30f9d070
Firing timer event
496 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 791
>> fuzzInit: datum forking for value 792
>> fuzzInit: datum forking for value 792
496 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 792)
        (ReadLSB w32 0 v792_fuzz_symb_792)))
    state 793 with condition (Not (Eq false
         (Eq (w32 792)
             (ReadLSB w32 0 v792_fuzz_symb_792))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-792-8048a0e
Size=2 Low=0 splitIndex=1 high=1
496 [State 0] Switching from state 0 to state 793
Copied 34928 (count=1)
Finalizing TB execution 793
s2e_dummyMainFunction
tcg-llvm-tb-792-8048a0e
497 [State 793] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 792 not yet applied), shell_len: 1024, eip: 0x00000000

497 [State 793] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
497 [State 793] Leaving buffer range @0xbfba3781, 75 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
497 [State 793] Killing state 793
497 [State 793] Terminating state 793 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
497 [State 793] Switching from state 793 to state 0
Copied 34928 (count=1)
Deleting state 793 0x0x30f9d070
497 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 792
>> fuzzInit: datum forking for value 793
>> fuzzInit: datum forking for value 793
497 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 793)
        (ReadLSB w32 0 v793_fuzz_symb_793)))
    state 794 with condition (Not (Eq false
         (Eq (w32 793)
             (ReadLSB w32 0 v793_fuzz_symb_793))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-793-8048a0e
Size=2 Low=0 splitIndex=1 high=1
497 [State 0] Switching from state 0 to state 794
Copied 34928 (count=1)
Finalizing TB execution 794
s2e_dummyMainFunction
tcg-llvm-tb-793-8048a0e
Firing timer event
497 [State 794] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 793 not yet applied), shell_len: 1024, eip: 0x00000000

497 [State 794] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
497 [State 794] Leaving buffer range @0xbfba3783, 74 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
497 [State 794] Killing state 794
498 [State 794] Terminating state 794 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
498 [State 794] Switching from state 794 to state 0
Copied 34928 (count=1)
Deleting state 794 0x0x30f9d070
498 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 793
>> fuzzInit: datum forking for value 794
>> fuzzInit: datum forking for value 794
498 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 794)
        (ReadLSB w32 0 v794_fuzz_symb_794)))
    state 795 with condition (Not (Eq false
         (Eq (w32 794)
             (ReadLSB w32 0 v794_fuzz_symb_794))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-794-8048a0e
Size=2 Low=0 splitIndex=1 high=1
498 [State 0] Switching from state 0 to state 795
Copied 34928 (count=1)
Finalizing TB execution 795
s2e_dummyMainFunction
tcg-llvm-tb-794-8048a0e
498 [State 795] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 794 not yet applied), shell_len: 1024, eip: 0x00000000

498 [State 795] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
498 [State 795] Leaving buffer range @0xbfba3781, 74 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
498 [State 795] Killing state 795
498 [State 795] Terminating state 795 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
498 [State 795] Switching from state 795 to state 0
Copied 34928 (count=1)
Deleting state 795 0x0x310e91c0
Firing timer event
498 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 794
>> fuzzInit: datum forking for value 795
>> fuzzInit: datum forking for value 795
498 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 795)
        (ReadLSB w32 0 v795_fuzz_symb_795)))
    state 796 with condition (Not (Eq false
         (Eq (w32 795)
             (ReadLSB w32 0 v795_fuzz_symb_795))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-795-8048a0e
Size=2 Low=0 splitIndex=1 high=1
498 [State 0] Switching from state 0 to state 796
Copied 34928 (count=1)
Finalizing TB execution 796
s2e_dummyMainFunction
tcg-llvm-tb-795-8048a0e
499 [State 796] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 795 not yet applied), shell_len: 1024, eip: 0x00000000

499 [State 796] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
499 [State 796] Leaving buffer range @0xbfba3783, 73 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
499 [State 796] Killing state 796
499 [State 796] Terminating state 796 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
499 [State 796] Switching from state 796 to state 0
Copied 34928 (count=1)
Deleting state 796 0x0x311d50b0
499 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 795
>> fuzzInit: datum forking for value 796
>> fuzzInit: datum forking for value 796
499 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 796)
        (ReadLSB w32 0 v796_fuzz_symb_796)))
    state 797 with condition (Not (Eq false
         (Eq (w32 796)
             (ReadLSB w32 0 v796_fuzz_symb_796))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-796-8048a0e
Size=2 Low=0 splitIndex=1 high=1
499 [State 0] Switching from state 0 to state 797
Copied 34928 (count=1)
Finalizing TB execution 797
s2e_dummyMainFunction
tcg-llvm-tb-796-8048a0e
499 [State 797] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 796 not yet applied), shell_len: 1024, eip: 0x00000000

499 [State 797] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
499 [State 797] Leaving buffer range @0xbfba3781, 73 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
499 [State 797] Killing state 797
499 [State 797] Terminating state 797 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
499 [State 797] Switching from state 797 to state 0
Copied 34928 (count=1)
Deleting state 797 0x0x3113b420
500 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 796
>> fuzzInit: datum forking for value 797
>> fuzzInit: datum forking for value 797
500 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 797)
        (ReadLSB w32 0 v797_fuzz_symb_797)))
    state 798 with condition (Not (Eq false
         (Eq (w32 797)
             (ReadLSB w32 0 v797_fuzz_symb_797))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-797-8048a0e
Size=2 Low=0 splitIndex=1 high=1
500 [State 0] Switching from state 0 to state 798
Copied 34928 (count=1)
Finalizing TB execution 798
s2e_dummyMainFunction
tcg-llvm-tb-797-8048a0e
500 [State 798] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 797 not yet applied), shell_len: 1024, eip: 0x00000000

500 [State 798] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
500 [State 798] Leaving buffer range @0xbfba3783, 72 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
500 [State 798] Killing state 798
500 [State 798] Terminating state 798 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
500 [State 798] Switching from state 798 to state 0
Copied 34928 (count=1)
Deleting state 798 0x0x3112fb30
500 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 797
>> fuzzInit: datum forking for value 798
>> fuzzInit: datum forking for value 798
501 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 798)
        (ReadLSB w32 0 v798_fuzz_symb_798)))
    state 799 with condition (Not (Eq false
         (Eq (w32 798)
             (ReadLSB w32 0 v798_fuzz_symb_798))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-798-8048a0e
Size=2 Low=0 splitIndex=1 high=1
501 [State 0] Switching from state 0 to state 799
Copied 34928 (count=1)
Finalizing TB execution 799
s2e_dummyMainFunction
tcg-llvm-tb-798-8048a0e
Firing timer event
501 [State 799] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 798 not yet applied), shell_len: 1024, eip: 0x00000000

501 [State 799] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
501 [State 799] Leaving buffer range @0xbfba3781, 72 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
501 [State 799] Killing state 799
501 [State 799] Terminating state 799 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
501 [State 799] Switching from state 799 to state 0
Copied 34928 (count=1)
Deleting state 799 0x0x3131ef60
501 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 798
>> fuzzInit: datum forking for value 799
>> fuzzInit: datum forking for value 799
501 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 799)
        (ReadLSB w32 0 v799_fuzz_symb_799)))
    state 800 with condition (Not (Eq false
         (Eq (w32 799)
             (ReadLSB w32 0 v799_fuzz_symb_799))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-799-8048a0e
Size=2 Low=0 splitIndex=1 high=1
501 [State 0] Switching from state 0 to state 800
Copied 34928 (count=1)
Finalizing TB execution 800
s2e_dummyMainFunction
tcg-llvm-tb-799-8048a0e
501 [State 800] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 799 not yet applied), shell_len: 1024, eip: 0x00000000

501 [State 800] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
501 [State 800] Leaving buffer range @0xbfba3783, 71 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
501 [State 800] Killing state 800
501 [State 800] Terminating state 800 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
501 [State 800] Switching from state 800 to state 0
Copied 34928 (count=1)
Deleting state 800 0x0x3131ef60
Firing timer event
502 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 799
>> fuzzInit: datum forking for value 800
>> fuzzInit: datum forking for value 800
502 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 800)
        (ReadLSB w32 0 v800_fuzz_symb_800)))
    state 801 with condition (Not (Eq false
         (Eq (w32 800)
             (ReadLSB w32 0 v800_fuzz_symb_800))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-800-8048a0e
Size=2 Low=0 splitIndex=1 high=1
502 [State 0] Switching from state 0 to state 801
Copied 34928 (count=1)
Finalizing TB execution 801
s2e_dummyMainFunction
tcg-llvm-tb-800-8048a0e
502 [State 801] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 800 not yet applied), shell_len: 1024, eip: 0x00000000

502 [State 801] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
502 [State 801] Leaving buffer range @0xbfba3781, 71 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
502 [State 801] Killing state 801
502 [State 801] Terminating state 801 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
502 [State 801] Switching from state 801 to state 0
Copied 34928 (count=1)
Deleting state 801 0x0x3131ef60
502 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 800
>> fuzzInit: datum forking for value 801
>> fuzzInit: datum forking for value 801
502 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 801)
        (ReadLSB w32 0 v801_fuzz_symb_801)))
    state 802 with condition (Not (Eq false
         (Eq (w32 801)
             (ReadLSB w32 0 v801_fuzz_symb_801))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-801-8048a0e
Size=2 Low=0 splitIndex=1 high=1
502 [State 0] Switching from state 0 to state 802
Copied 34928 (count=1)
Finalizing TB execution 802
s2e_dummyMainFunction
tcg-llvm-tb-801-8048a0e
Firing timer event
503 [State 802] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 801 not yet applied), shell_len: 1024, eip: 0x00000000

503 [State 802] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
503 [State 802] Leaving buffer range @0xbfba3783, 70 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
503 [State 802] Killing state 802
503 [State 802] Terminating state 802 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
503 [State 802] Switching from state 802 to state 0
Copied 34928 (count=1)
Deleting state 802 0x0x31383840
503 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 801
>> fuzzInit: datum forking for value 802
>> fuzzInit: datum forking for value 802
503 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 802)
        (ReadLSB w32 0 v802_fuzz_symb_802)))
    state 803 with condition (Not (Eq false
         (Eq (w32 802)
             (ReadLSB w32 0 v802_fuzz_symb_802))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-802-8048a0e
Size=2 Low=0 splitIndex=1 high=1
503 [State 0] Switching from state 0 to state 803
Copied 34928 (count=1)
Finalizing TB execution 803
s2e_dummyMainFunction
tcg-llvm-tb-802-8048a0e
503 [State 803] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 802 not yet applied), shell_len: 1024, eip: 0x00000000

503 [State 803] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
503 [State 803] Leaving buffer range @0xbfba3781, 70 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
503 [State 803] Killing state 803
503 [State 803] Terminating state 803 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
503 [State 803] Switching from state 803 to state 0
Copied 34928 (count=1)
Deleting state 803 0x0x3123bb00
504 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 802
>> fuzzInit: datum forking for value 803
>> fuzzInit: datum forking for value 803
504 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 803)
        (ReadLSB w32 0 v803_fuzz_symb_803)))
    state 804 with condition (Not (Eq false
         (Eq (w32 803)
             (ReadLSB w32 0 v803_fuzz_symb_803))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-803-8048a0e
Size=2 Low=0 splitIndex=1 high=1
504 [State 0] Switching from state 0 to state 804
Copied 34928 (count=1)
Finalizing TB execution 804
s2e_dummyMainFunction
tcg-llvm-tb-803-8048a0e
Firing timer event
504 [State 804] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 803 not yet applied), shell_len: 1024, eip: 0x00000000

504 [State 804] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
504 [State 804] Leaving buffer range @0xc126f278, 6f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
504 [State 804] Killing state 804
504 [State 804] Terminating state 804 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
504 [State 804] Switching from state 804 to state 0
Copied 34928 (count=1)
Deleting state 804 0x0x3123bb00
504 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 803
>> fuzzInit: datum forking for value 804
>> fuzzInit: datum forking for value 804
504 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 804)
        (ReadLSB w32 0 v804_fuzz_symb_804)))
    state 805 with condition (Not (Eq false
         (Eq (w32 804)
             (ReadLSB w32 0 v804_fuzz_symb_804))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-804-8048a0e
Size=2 Low=0 splitIndex=1 high=1
504 [State 0] Switching from state 0 to state 805
Copied 34928 (count=1)
Finalizing TB execution 805
s2e_dummyMainFunction
tcg-llvm-tb-804-8048a0e
504 [State 805] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 804 not yet applied), shell_len: 1024, eip: 0x00000000

504 [State 805] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
505 [State 805] Leaving buffer range @0xbfba3781, 6f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
505 [State 805] Killing state 805
505 [State 805] Terminating state 805 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
505 [State 805] Switching from state 805 to state 0
Copied 34928 (count=1)
Deleting state 805 0x0x3123bb00
505 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 804
>> fuzzInit: datum forking for value 805
>> fuzzInit: datum forking for value 805
505 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 805)
        (ReadLSB w32 0 v805_fuzz_symb_805)))
    state 806 with condition (Not (Eq false
         (Eq (w32 805)
             (ReadLSB w32 0 v805_fuzz_symb_805))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-805-8048a0e
Size=2 Low=0 splitIndex=1 high=1
505 [State 0] Switching from state 0 to state 806
Copied 34928 (count=1)
Finalizing TB execution 806
s2e_dummyMainFunction
tcg-llvm-tb-805-8048a0e
Firing timer event
505 [State 806] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 805 not yet applied), shell_len: 1024, eip: 0x00000000

505 [State 806] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
505 [State 806] Leaving buffer range @0xc126f278, 6e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
505 [State 806] Killing state 806
505 [State 806] Terminating state 806 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
505 [State 806] Switching from state 806 to state 0
Copied 34928 (count=1)
Deleting state 806 0x0x3138b650
505 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 805
>> fuzzInit: datum forking for value 806
>> fuzzInit: datum forking for value 806
506 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 806)
        (ReadLSB w32 0 v806_fuzz_symb_806)))
    state 807 with condition (Not (Eq false
         (Eq (w32 806)
             (ReadLSB w32 0 v806_fuzz_symb_806))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-806-8048a0e
Size=2 Low=0 splitIndex=1 high=1
506 [State 0] Switching from state 0 to state 807
Copied 34928 (count=1)
Finalizing TB execution 807
s2e_dummyMainFunction
tcg-llvm-tb-806-8048a0e
506 [State 807] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 806 not yet applied), shell_len: 1024, eip: 0x00000000

506 [State 807] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
506 [State 807] Leaving buffer range @0xbfba3781, 6e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
506 [State 807] Killing state 807
506 [State 807] Terminating state 807 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
506 [State 807] Switching from state 807 to state 0
Copied 34928 (count=1)
Deleting state 807 0x0x3138b650
Firing timer event
506 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 806
>> fuzzInit: datum forking for value 807
>> fuzzInit: datum forking for value 807
506 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 807)
        (ReadLSB w32 0 v807_fuzz_symb_807)))
    state 808 with condition (Not (Eq false
         (Eq (w32 807)
             (ReadLSB w32 0 v807_fuzz_symb_807))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-807-8048a0e
Size=2 Low=0 splitIndex=1 high=1
506 [State 0] Switching from state 0 to state 808
Copied 34928 (count=1)
Finalizing TB execution 808
s2e_dummyMainFunction
tcg-llvm-tb-807-8048a0e
506 [State 808] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 807 not yet applied), shell_len: 1024, eip: 0x00000000

506 [State 808] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
507 [State 808] Leaving buffer range @0xbfba3783, 6d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
507 [State 808] Killing state 808
507 [State 808] Terminating state 808 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
507 [State 808] Switching from state 808 to state 0
Copied 34928 (count=1)
Deleting state 808 0x0x3138b650
507 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 807
>> fuzzInit: datum forking for value 808
>> fuzzInit: datum forking for value 808
507 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 808)
        (ReadLSB w32 0 v808_fuzz_symb_808)))
    state 809 with condition (Not (Eq false
         (Eq (w32 808)
             (ReadLSB w32 0 v808_fuzz_symb_808))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-808-8048a0e
Size=2 Low=0 splitIndex=1 high=1
507 [State 0] Switching from state 0 to state 809
Copied 34928 (count=1)
Finalizing TB execution 809
s2e_dummyMainFunction
tcg-llvm-tb-808-8048a0e
Firing timer event
507 [State 809] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 808 not yet applied), shell_len: 1024, eip: 0x00000000

507 [State 809] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
507 [State 809] Leaving buffer range @0xbfba3781, 6d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
507 [State 809] Killing state 809
507 [State 809] Terminating state 809 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
507 [State 809] Switching from state 809 to state 0
Copied 34928 (count=1)
Deleting state 809 0x0x3138b650
507 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 808
>> fuzzInit: datum forking for value 809
>> fuzzInit: datum forking for value 809
508 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 809)
        (ReadLSB w32 0 v809_fuzz_symb_809)))
    state 810 with condition (Not (Eq false
         (Eq (w32 809)
             (ReadLSB w32 0 v809_fuzz_symb_809))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-809-8048a0e
Size=2 Low=0 splitIndex=1 high=1
508 [State 0] Switching from state 0 to state 810
Copied 34928 (count=1)
Finalizing TB execution 810
s2e_dummyMainFunction
tcg-llvm-tb-809-8048a0e
508 [State 810] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 809 not yet applied), shell_len: 1024, eip: 0x00000000

508 [State 810] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
508 [State 810] Leaving buffer range @0xbfba3783, 6c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
508 [State 810] Killing state 810
508 [State 810] Terminating state 810 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
508 [State 810] Switching from state 810 to state 0
Copied 34928 (count=1)
Deleting state 810 0x0x31549e90
508 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 809
>> fuzzInit: datum forking for value 810
>> fuzzInit: datum forking for value 810
508 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 810)
        (ReadLSB w32 0 v810_fuzz_symb_810)))
    state 811 with condition (Not (Eq false
         (Eq (w32 810)
             (ReadLSB w32 0 v810_fuzz_symb_810))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-810-8048a0e
Size=2 Low=0 splitIndex=1 high=1
508 [State 0] Switching from state 0 to state 811
Copied 34928 (count=1)
Finalizing TB execution 811
s2e_dummyMainFunction
tcg-llvm-tb-810-8048a0e
Firing timer event
508 [State 811] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 810 not yet applied), shell_len: 1024, eip: 0x00000000

508 [State 811] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
508 [State 811] Leaving buffer range @0xbfba3781, 6c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
509 [State 811] Killing state 811
509 [State 811] Terminating state 811 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
509 [State 811] Switching from state 811 to state 0
Copied 34928 (count=1)
Deleting state 811 0x0x315172f0
509 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 810
>> fuzzInit: datum forking for value 811
>> fuzzInit: datum forking for value 811
509 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 811)
        (ReadLSB w32 0 v811_fuzz_symb_811)))
    state 812 with condition (Not (Eq false
         (Eq (w32 811)
             (ReadLSB w32 0 v811_fuzz_symb_811))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-811-8048a0e
Size=2 Low=0 splitIndex=1 high=1
509 [State 0] Switching from state 0 to state 812
Copied 34928 (count=1)
Finalizing TB execution 812
s2e_dummyMainFunction
tcg-llvm-tb-811-8048a0e
509 [State 812] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 811 not yet applied), shell_len: 1024, eip: 0x00000000

509 [State 812] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
509 [State 812] Leaving buffer range @0xbfba3783, 6b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
509 [State 812] Killing state 812
509 [State 812] Terminating state 812 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
509 [State 812] Switching from state 812 to state 0
Copied 34928 (count=1)
Deleting state 812 0x0x314d0210
509 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 811
>> fuzzInit: datum forking for value 812
>> fuzzInit: datum forking for value 812
510 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 812)
        (ReadLSB w32 0 v812_fuzz_symb_812)))
    state 813 with condition (Not (Eq false
         (Eq (w32 812)
             (ReadLSB w32 0 v812_fuzz_symb_812))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-812-8048a0e
Size=2 Low=0 splitIndex=1 high=1
510 [State 0] Switching from state 0 to state 813
Copied 34928 (count=1)
Finalizing TB execution 813
s2e_dummyMainFunction
tcg-llvm-tb-812-8048a0e
Firing timer event
510 [State 813] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 812 not yet applied), shell_len: 1024, eip: 0x00000000

510 [State 813] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
510 [State 813] Leaving buffer range @0xbfba3781, 6b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
510 [State 813] Killing state 813
510 [State 813] Terminating state 813 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
510 [State 813] Switching from state 813 to state 0
Copied 34928 (count=1)
Deleting state 813 0x0x315c2ff0
510 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 812
>> fuzzInit: datum forking for value 813
>> fuzzInit: datum forking for value 813
510 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 813)
        (ReadLSB w32 0 v813_fuzz_symb_813)))
    state 814 with condition (Not (Eq false
         (Eq (w32 813)
             (ReadLSB w32 0 v813_fuzz_symb_813))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-813-8048a0e
Size=2 Low=0 splitIndex=1 high=1
510 [State 0] Switching from state 0 to state 814
Copied 34928 (count=1)
Finalizing TB execution 814
s2e_dummyMainFunction
tcg-llvm-tb-813-8048a0e
510 [State 814] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 813 not yet applied), shell_len: 1024, eip: 0x00000000

510 [State 814] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
510 [State 814] Leaving buffer range @0xbfba3783, 6a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
511 [State 814] Killing state 814
511 [State 814] Terminating state 814 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
511 [State 814] Switching from state 814 to state 0
Copied 34928 (count=1)
Deleting state 814 0x0x3183a4a0
Firing timer event
511 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 813
>> fuzzInit: datum forking for value 814
>> fuzzInit: datum forking for value 814
511 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 814)
        (ReadLSB w32 0 v814_fuzz_symb_814)))
    state 815 with condition (Not (Eq false
         (Eq (w32 814)
             (ReadLSB w32 0 v814_fuzz_symb_814))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-814-8048a0e
Size=2 Low=0 splitIndex=1 high=1
511 [State 0] Switching from state 0 to state 815
Copied 34928 (count=1)
Finalizing TB execution 815
s2e_dummyMainFunction
tcg-llvm-tb-814-8048a0e
511 [State 815] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 814 not yet applied), shell_len: 1024, eip: 0x00000000

511 [State 815] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
511 [State 815] Leaving buffer range @0xbfba3781, 6a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
511 [State 815] Killing state 815
511 [State 815] Terminating state 815 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
511 [State 815] Switching from state 815 to state 0
Copied 34928 (count=1)
Deleting state 815 0x0x3183a4a0
511 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 814
>> fuzzInit: datum forking for value 815
>> fuzzInit: datum forking for value 815
512 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 815)
        (ReadLSB w32 0 v815_fuzz_symb_815)))
    state 816 with condition (Not (Eq false
         (Eq (w32 815)
             (ReadLSB w32 0 v815_fuzz_symb_815))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-815-8048a0e
Size=2 Low=0 splitIndex=1 high=1
512 [State 0] Switching from state 0 to state 816
Copied 34928 (count=1)
Finalizing TB execution 816
s2e_dummyMainFunction
tcg-llvm-tb-815-8048a0e
Firing timer event
512 [State 816] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 815 not yet applied), shell_len: 1024, eip: 0x00000000

512 [State 816] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
512 [State 816] Leaving buffer range @0xbfba3783, 69 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
512 [State 816] Killing state 816
512 [State 816] Terminating state 816 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
512 [State 816] Switching from state 816 to state 0
Copied 34928 (count=1)
Deleting state 816 0x0x3176e4d0
512 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 815
>> fuzzInit: datum forking for value 816
>> fuzzInit: datum forking for value 816
512 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 816)
        (ReadLSB w32 0 v816_fuzz_symb_816)))
    state 817 with condition (Not (Eq false
         (Eq (w32 816)
             (ReadLSB w32 0 v816_fuzz_symb_816))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-816-8048a0e
Size=2 Low=0 splitIndex=1 high=1
512 [State 0] Switching from state 0 to state 817
Copied 34928 (count=1)
Finalizing TB execution 817
s2e_dummyMainFunction
tcg-llvm-tb-816-8048a0e
512 [State 817] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 816 not yet applied), shell_len: 1024, eip: 0x00000000

512 [State 817] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
512 [State 817] Leaving buffer range @0xbfba3781, 69 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
513 [State 817] Killing state 817
513 [State 817] Terminating state 817 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
513 [State 817] Switching from state 817 to state 0
Copied 34928 (count=1)
Deleting state 817 0x0x3176e4d0
513 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 816
>> fuzzInit: datum forking for value 817
>> fuzzInit: datum forking for value 817
513 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 817)
        (ReadLSB w32 0 v817_fuzz_symb_817)))
    state 818 with condition (Not (Eq false
         (Eq (w32 817)
             (ReadLSB w32 0 v817_fuzz_symb_817))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-817-8048a0e
Size=2 Low=0 splitIndex=1 high=1
513 [State 0] Switching from state 0 to state 818
Copied 34928 (count=1)
Finalizing TB execution 818
s2e_dummyMainFunction
tcg-llvm-tb-817-8048a0e
Firing timer event
513 [State 818] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 817 not yet applied), shell_len: 1024, eip: 0x00000000

513 [State 818] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
513 [State 818] Leaving buffer range @0xbfba3783, 68 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
513 [State 818] Killing state 818
513 [State 818] Terminating state 818 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
513 [State 818] Switching from state 818 to state 0
Copied 34928 (count=1)
Deleting state 818 0x0x317e31d0
513 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 817
>> fuzzInit: datum forking for value 818
>> fuzzInit: datum forking for value 818
514 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 818)
        (ReadLSB w32 0 v818_fuzz_symb_818)))
    state 819 with condition (Not (Eq false
         (Eq (w32 818)
             (ReadLSB w32 0 v818_fuzz_symb_818))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-818-8048a0e
Size=2 Low=0 splitIndex=1 high=1
514 [State 0] Switching from state 0 to state 819
Copied 34928 (count=1)
Finalizing TB execution 819
s2e_dummyMainFunction
tcg-llvm-tb-818-8048a0e
514 [State 819] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 818 not yet applied), shell_len: 1024, eip: 0x00000000

514 [State 819] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
514 [State 819] Leaving buffer range @0xbfba3781, 68 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
514 [State 819] Killing state 819
514 [State 819] Terminating state 819 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
514 [State 819] Switching from state 819 to state 0
Copied 34928 (count=1)
Deleting state 819 0x0x317e31d0
514 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 818
>> fuzzInit: datum forking for value 819
>> fuzzInit: datum forking for value 819
514 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 819)
        (ReadLSB w32 0 v819_fuzz_symb_819)))
    state 820 with condition (Not (Eq false
         (Eq (w32 819)
             (ReadLSB w32 0 v819_fuzz_symb_819))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-819-8048a0e
Size=2 Low=0 splitIndex=1 high=1
514 [State 0] Switching from state 0 to state 820
Copied 34928 (count=1)
Finalizing TB execution 820
s2e_dummyMainFunction
tcg-llvm-tb-819-8048a0e
Firing timer event
514 [State 820] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 819 not yet applied), shell_len: 1024, eip: 0x00000000

514 [State 820] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
514 [State 820] Leaving buffer range @0xbfba3783, 67 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
514 [State 820] Killing state 820
514 [State 820] Terminating state 820 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
514 [State 820] Switching from state 820 to state 0
Copied 34928 (count=1)
Deleting state 820 0x0x319a5370
515 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 819
>> fuzzInit: datum forking for value 820
>> fuzzInit: datum forking for value 820
515 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 820)
        (ReadLSB w32 0 v820_fuzz_symb_820)))
    state 821 with condition (Not (Eq false
         (Eq (w32 820)
             (ReadLSB w32 0 v820_fuzz_symb_820))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-820-8048a0e
Size=2 Low=0 splitIndex=1 high=1
515 [State 0] Switching from state 0 to state 821
Copied 34928 (count=1)
Finalizing TB execution 821
s2e_dummyMainFunction
tcg-llvm-tb-820-8048a0e
515 [State 821] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 820 not yet applied), shell_len: 1024, eip: 0x00000000

515 [State 821] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
515 [State 821] Leaving buffer range @0xbfba3781, 67 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
515 [State 821] Killing state 821
515 [State 821] Terminating state 821 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
515 [State 821] Switching from state 821 to state 0
Copied 34928 (count=1)
Deleting state 821 0x0x3196bb40
Firing timer event
515 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 820
>> fuzzInit: datum forking for value 821
>> fuzzInit: datum forking for value 821
515 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 821)
        (ReadLSB w32 0 v821_fuzz_symb_821)))
    state 822 with condition (Not (Eq false
         (Eq (w32 821)
             (ReadLSB w32 0 v821_fuzz_symb_821))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-821-8048a0e
Size=2 Low=0 splitIndex=1 high=1
515 [State 0] Switching from state 0 to state 822
Copied 34928 (count=1)
Finalizing TB execution 822
s2e_dummyMainFunction
tcg-llvm-tb-821-8048a0e
516 [State 822] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 821 not yet applied), shell_len: 1024, eip: 0x00000000

516 [State 822] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
516 [State 822] Leaving buffer range @0xbfba3783, 66 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
516 [State 822] Killing state 822
516 [State 822] Terminating state 822 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
516 [State 822] Switching from state 822 to state 0
Copied 34928 (count=1)
Deleting state 822 0x0x3190cfc0
516 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 821
>> fuzzInit: datum forking for value 822
>> fuzzInit: datum forking for value 822
516 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 822)
        (ReadLSB w32 0 v822_fuzz_symb_822)))
    state 823 with condition (Not (Eq false
         (Eq (w32 822)
             (ReadLSB w32 0 v822_fuzz_symb_822))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-822-8048a0e
Size=2 Low=0 splitIndex=1 high=1
516 [State 0] Switching from state 0 to state 823
Copied 34928 (count=1)
Finalizing TB execution 823
s2e_dummyMainFunction
tcg-llvm-tb-822-8048a0e
Firing timer event
516 [State 823] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 822 not yet applied), shell_len: 1024, eip: 0x00000000

516 [State 823] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
516 [State 823] Leaving buffer range @0xbfba3781, 66 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
516 [State 823] Killing state 823
516 [State 823] Terminating state 823 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
516 [State 823] Switching from state 823 to state 0
Copied 34928 (count=1)
Deleting state 823 0x0x3184a130
517 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 822
>> fuzzInit: datum forking for value 823
>> fuzzInit: datum forking for value 823
517 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 823)
        (ReadLSB w32 0 v823_fuzz_symb_823)))
    state 824 with condition (Not (Eq false
         (Eq (w32 823)
             (ReadLSB w32 0 v823_fuzz_symb_823))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-823-8048a0e
Size=2 Low=0 splitIndex=1 high=1
517 [State 0] Switching from state 0 to state 824
Copied 34928 (count=1)
Finalizing TB execution 824
s2e_dummyMainFunction
tcg-llvm-tb-823-8048a0e
517 [State 824] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 823 not yet applied), shell_len: 1024, eip: 0x00000000

517 [State 824] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
517 [State 824] Leaving buffer range @0xbfba3783, 65 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
517 [State 824] Killing state 824
517 [State 824] Terminating state 824 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
517 [State 824] Switching from state 824 to state 0
Copied 34928 (count=1)
Deleting state 824 0x0x3184a130
517 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 823
>> fuzzInit: datum forking for value 824
>> fuzzInit: datum forking for value 824
518 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 824)
        (ReadLSB w32 0 v824_fuzz_symb_824)))
    state 825 with condition (Not (Eq false
         (Eq (w32 824)
             (ReadLSB w32 0 v824_fuzz_symb_824))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-824-8048a0e
Size=2 Low=0 splitIndex=1 high=1
518 [State 0] Switching from state 0 to state 825
Copied 34928 (count=1)
Finalizing TB execution 825
s2e_dummyMainFunction
tcg-llvm-tb-824-8048a0e
518 [State 825] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 824 not yet applied), shell_len: 1024, eip: 0x00000000

518 [State 825] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
518 [State 825] Leaving buffer range @0xbfba3781, 65 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
518 [State 825] Killing state 825
518 [State 825] Terminating state 825 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
518 [State 825] Switching from state 825 to state 0
Copied 34928 (count=1)
Deleting state 825 0x0x3184a130
518 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 824
>> fuzzInit: datum forking for value 825
>> fuzzInit: datum forking for value 825
518 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 825)
        (ReadLSB w32 0 v825_fuzz_symb_825)))
    state 826 with condition (Not (Eq false
         (Eq (w32 825)
             (ReadLSB w32 0 v825_fuzz_symb_825))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-825-8048a0e
Size=2 Low=0 splitIndex=1 high=1
518 [State 0] Switching from state 0 to state 826
Copied 34928 (count=1)
Finalizing TB execution 826
s2e_dummyMainFunction
tcg-llvm-tb-825-8048a0e
Firing timer event
518 [State 826] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 825 not yet applied), shell_len: 1024, eip: 0x00000000

518 [State 826] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
519 [State 826] Leaving buffer range @0xbfba3783, 64 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
519 [State 826] Killing state 826
519 [State 826] Terminating state 826 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
519 [State 826] Switching from state 826 to state 0
Copied 34928 (count=1)
Deleting state 826 0x0x3184a130
519 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 825
>> fuzzInit: datum forking for value 826
>> fuzzInit: datum forking for value 826
519 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 826)
        (ReadLSB w32 0 v826_fuzz_symb_826)))
    state 827 with condition (Not (Eq false
         (Eq (w32 826)
             (ReadLSB w32 0 v826_fuzz_symb_826))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-826-8048a0e
Size=2 Low=0 splitIndex=1 high=1
519 [State 0] Switching from state 0 to state 827
Copied 34928 (count=1)
Finalizing TB execution 827
s2e_dummyMainFunction
tcg-llvm-tb-826-8048a0e
519 [State 827] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 826 not yet applied), shell_len: 1024, eip: 0x00000000

519 [State 827] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
519 [State 827] Leaving buffer range @0xbfba3781, 64 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
519 [State 827] Killing state 827
519 [State 827] Terminating state 827 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
519 [State 827] Switching from state 827 to state 0
Copied 34928 (count=1)
Deleting state 827 0x0x3184a130
Firing timer event
519 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 826
>> fuzzInit: datum forking for value 827
>> fuzzInit: datum forking for value 827
520 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 827)
        (ReadLSB w32 0 v827_fuzz_symb_827)))
    state 828 with condition (Not (Eq false
         (Eq (w32 827)
             (ReadLSB w32 0 v827_fuzz_symb_827))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-827-8048a0e
Size=2 Low=0 splitIndex=1 high=1
520 [State 0] Switching from state 0 to state 828
Copied 34928 (count=1)
Finalizing TB execution 828
s2e_dummyMainFunction
tcg-llvm-tb-827-8048a0e
520 [State 828] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 827 not yet applied), shell_len: 1024, eip: 0x00000000

520 [State 828] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
520 [State 828] Leaving buffer range @0xbfba3783, 63 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
520 [State 828] Killing state 828
520 [State 828] Terminating state 828 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
520 [State 828] Switching from state 828 to state 0
Copied 34928 (count=1)
Deleting state 828 0x0x3184a130
520 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 827
>> fuzzInit: datum forking for value 828
>> fuzzInit: datum forking for value 828
520 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 828)
        (ReadLSB w32 0 v828_fuzz_symb_828)))
    state 829 with condition (Not (Eq false
         (Eq (w32 828)
             (ReadLSB w32 0 v828_fuzz_symb_828))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-828-8048a0e
Size=2 Low=0 splitIndex=1 high=1
520 [State 0] Switching from state 0 to state 829
Copied 34928 (count=1)
Finalizing TB execution 829
s2e_dummyMainFunction
tcg-llvm-tb-828-8048a0e
520 [State 829] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 828 not yet applied), shell_len: 1024, eip: 0x00000000

520 [State 829] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
520 [State 829] Leaving buffer range @0xbfba3781, 63 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
Firing timer event
520 [State 829] Killing state 829
520 [State 829] Terminating state 829 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
520 [State 829] Switching from state 829 to state 0
Copied 34928 (count=1)
Deleting state 829 0x0x3184a130
521 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 828
>> fuzzInit: datum forking for value 829
>> fuzzInit: datum forking for value 829
521 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 829)
        (ReadLSB w32 0 v829_fuzz_symb_829)))
    state 830 with condition (Not (Eq false
         (Eq (w32 829)
             (ReadLSB w32 0 v829_fuzz_symb_829))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-829-8048a0e
Size=2 Low=0 splitIndex=1 high=1
521 [State 0] Switching from state 0 to state 830
Copied 34928 (count=1)
Finalizing TB execution 830
s2e_dummyMainFunction
tcg-llvm-tb-829-8048a0e
521 [State 830] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 829 not yet applied), shell_len: 1024, eip: 0x00000000

521 [State 830] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
521 [State 830] Leaving buffer range @0xbfba3783, 62 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
521 [State 830] Killing state 830
521 [State 830] Terminating state 830 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
521 [State 830] Switching from state 830 to state 0
Copied 34928 (count=1)
Deleting state 830 0x0x3184a130
521 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 829
>> fuzzInit: datum forking for value 830
>> fuzzInit: datum forking for value 830
521 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 830)
        (ReadLSB w32 0 v830_fuzz_symb_830)))
    state 831 with condition (Not (Eq false
         (Eq (w32 830)
             (ReadLSB w32 0 v830_fuzz_symb_830))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-830-8048a0e
Size=2 Low=0 splitIndex=1 high=1
521 [State 0] Switching from state 0 to state 831
Copied 34928 (count=1)
Finalizing TB execution 831
s2e_dummyMainFunction
tcg-llvm-tb-830-8048a0e
Firing timer event
522 [State 831] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 830 not yet applied), shell_len: 1024, eip: 0x00000000

522 [State 831] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
522 [State 831] Leaving buffer range @0xbfba3781, 62 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
522 [State 831] Killing state 831
522 [State 831] Terminating state 831 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
522 [State 831] Switching from state 831 to state 0
Copied 34928 (count=1)
Deleting state 831 0x0x31d40c80
522 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 830
>> fuzzInit: datum forking for value 831
>> fuzzInit: datum forking for value 831
522 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 831)
        (ReadLSB w32 0 v831_fuzz_symb_831)))
    state 832 with condition (Not (Eq false
         (Eq (w32 831)
             (ReadLSB w32 0 v831_fuzz_symb_831))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-831-8048a0e
Size=2 Low=0 splitIndex=1 high=1
522 [State 0] Switching from state 0 to state 832
Copied 34928 (count=1)
Finalizing TB execution 832
s2e_dummyMainFunction
tcg-llvm-tb-831-8048a0e
522 [State 832] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 831 not yet applied), shell_len: 1024, eip: 0x00000000

522 [State 832] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
522 [State 832] Leaving buffer range @0xbfba3783, 61 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
522 [State 832] Killing state 832
522 [State 832] Terminating state 832 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
522 [State 832] Switching from state 832 to state 0
Copied 34928 (count=1)
Deleting state 832 0x0x31d40c80
Firing timer event
523 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 831
>> fuzzInit: datum forking for value 832
>> fuzzInit: datum forking for value 832
523 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 832)
        (ReadLSB w32 0 v832_fuzz_symb_832)))
    state 833 with condition (Not (Eq false
         (Eq (w32 832)
             (ReadLSB w32 0 v832_fuzz_symb_832))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-832-8048a0e
Size=2 Low=0 splitIndex=1 high=1
523 [State 0] Switching from state 0 to state 833
Copied 34928 (count=1)
Finalizing TB execution 833
s2e_dummyMainFunction
tcg-llvm-tb-832-8048a0e
523 [State 833] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 832 not yet applied), shell_len: 1024, eip: 0x00000000

523 [State 833] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
523 [State 833] Leaving buffer range @0xbfba3781, 61 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
523 [State 833] Killing state 833
523 [State 833] Terminating state 833 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
523 [State 833] Switching from state 833 to state 0
Copied 34928 (count=1)
Deleting state 833 0x0x31d74460
523 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 832
>> fuzzInit: datum forking for value 833
>> fuzzInit: datum forking for value 833
523 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 833)
        (ReadLSB w32 0 v833_fuzz_symb_833)))
    state 834 with condition (Not (Eq false
         (Eq (w32 833)
             (ReadLSB w32 0 v833_fuzz_symb_833))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-833-8048a0e
Size=2 Low=0 splitIndex=1 high=1
523 [State 0] Switching from state 0 to state 834
Copied 34928 (count=1)
Finalizing TB execution 834
s2e_dummyMainFunction
tcg-llvm-tb-833-8048a0e
523 [State 834] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 833 not yet applied), shell_len: 1024, eip: 0x00000000

523 [State 834] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
524 [State 834] Leaving buffer range @0xbfba3783, 60 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
524 [State 834] Killing state 834
524 [State 834] Terminating state 834 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
524 [State 834] Switching from state 834 to state 0
Copied 34928 (count=1)
Deleting state 834 0x0x31ab91b0
524 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 833
>> fuzzInit: datum forking for value 834
>> fuzzInit: datum forking for value 834
524 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 834)
        (ReadLSB w32 0 v834_fuzz_symb_834)))
    state 835 with condition (Not (Eq false
         (Eq (w32 834)
             (ReadLSB w32 0 v834_fuzz_symb_834))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-834-8048a0e
Size=2 Low=0 splitIndex=1 high=1
524 [State 0] Switching from state 0 to state 835
Copied 34928 (count=1)
Finalizing TB execution 835
s2e_dummyMainFunction
tcg-llvm-tb-834-8048a0e
524 [State 835] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 834 not yet applied), shell_len: 1024, eip: 0x00000000

524 [State 835] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
524 [State 835] Leaving buffer range @0xbfba3781, 60 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
524 [State 835] Killing state 835
524 [State 835] Terminating state 835 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
524 [State 835] Switching from state 835 to state 0
Copied 34928 (count=1)
Deleting state 835 0x0x31ab91b0
524 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 834
>> fuzzInit: datum forking for value 835
>> fuzzInit: datum forking for value 835
>> fuzzInit: datum forking for value 835
525 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 835)
        (ReadLSB w32 0 v835_fuzz_symb_835)))
    state 836 with condition (Not (Eq false
         (Eq (w32 835)
             (ReadLSB w32 0 v835_fuzz_symb_835))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-835-8048a0e
Size=2 Low=0 splitIndex=1 high=1
525 [State 0] Switching from state 0 to state 836
Copied 34928 (count=1)
Finalizing TB execution 836
s2e_dummyMainFunction
tcg-llvm-tb-835-8048a0e
Firing timer event
525 [State 836] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 835 not yet applied), shell_len: 1024, eip: 0x00000000

525 [State 836] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
525 [State 836] Leaving buffer range @0xbfba3783, 5f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
525 [State 836] Killing state 836
525 [State 836] Terminating state 836 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
525 [State 836] Switching from state 836 to state 0
Copied 34928 (count=1)
Deleting state 836 0x0x31ab91b0
525 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 835
>> fuzzInit: datum forking for value 836
>> fuzzInit: datum forking for value 836
525 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 836)
        (ReadLSB w32 0 v836_fuzz_symb_836)))
    state 837 with condition (Not (Eq false
         (Eq (w32 836)
             (ReadLSB w32 0 v836_fuzz_symb_836))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-836-8048a0e
Size=2 Low=0 splitIndex=1 high=1
525 [State 0] Switching from state 0 to state 837
Copied 34928 (count=1)
Finalizing TB execution 837
s2e_dummyMainFunction
tcg-llvm-tb-836-8048a0e
525 [State 837] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 836 not yet applied), shell_len: 1024, eip: 0x00000000

525 [State 837] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
525 [State 837] Leaving buffer range @0xbfba3781, 5f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
525 [State 837] Killing state 837
525 [State 837] Terminating state 837 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
525 [State 837] Switching from state 837 to state 0
Copied 34928 (count=1)
Deleting state 837 0x0x31f9f940
Firing timer event
526 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 836
>> fuzzInit: datum forking for value 837
>> fuzzInit: datum forking for value 837
526 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 837)
        (ReadLSB w32 0 v837_fuzz_symb_837)))
    state 838 with condition (Not (Eq false
         (Eq (w32 837)
             (ReadLSB w32 0 v837_fuzz_symb_837))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-837-8048a0e
Size=2 Low=0 splitIndex=1 high=1
526 [State 0] Switching from state 0 to state 838
Copied 34928 (count=1)
Finalizing TB execution 838
s2e_dummyMainFunction
tcg-llvm-tb-837-8048a0e
526 [State 838] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 837 not yet applied), shell_len: 1024, eip: 0x00000000

526 [State 838] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
526 [State 838] Leaving buffer range @0xbfba3783, 5e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
526 [State 838] Killing state 838
526 [State 838] Terminating state 838 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
526 [State 838] Switching from state 838 to state 0
Copied 34928 (count=1)
Deleting state 838 0x0x31f9f940
526 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 837
>> fuzzInit: datum forking for value 838
>> fuzzInit: datum forking for value 838
527 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 838)
        (ReadLSB w32 0 v838_fuzz_symb_838)))
    state 839 with condition (Not (Eq false
         (Eq (w32 838)
             (ReadLSB w32 0 v838_fuzz_symb_838))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-838-8048a0e
Size=2 Low=0 splitIndex=1 high=1
527 [State 0] Switching from state 0 to state 839
Copied 34928 (count=1)
Finalizing TB execution 839
s2e_dummyMainFunction
tcg-llvm-tb-838-8048a0e
Firing timer event
527 [State 839] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 838 not yet applied), shell_len: 1024, eip: 0x00000000

527 [State 839] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
527 [State 839] Leaving buffer range @0xbfba3781, 5e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
527 [State 839] Killing state 839
527 [State 839] Terminating state 839 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
527 [State 839] Switching from state 839 to state 0
Copied 34928 (count=1)
Deleting state 839 0x0x31ab8740
527 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 838
>> fuzzInit: datum forking for value 839
>> fuzzInit: datum forking for value 839
527 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 839)
        (ReadLSB w32 0 v839_fuzz_symb_839)))
    state 840 with condition (Not (Eq false
         (Eq (w32 839)
             (ReadLSB w32 0 v839_fuzz_symb_839))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-839-8048a0e
Size=2 Low=0 splitIndex=1 high=1
527 [State 0] Switching from state 0 to state 840
Copied 34928 (count=1)
Finalizing TB execution 840
s2e_dummyMainFunction
tcg-llvm-tb-839-8048a0e
528 [State 840] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 839 not yet applied), shell_len: 1024, eip: 0x00000000

528 [State 840] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
528 [State 840] Leaving buffer range @0xc126e107, 25 IoB insns; prev insn @0xbfba370f
  1   2B @0xbfba370f:  0  0             add [eax], al           
528 [State 840] Entering buffer range @0xbfba3711, 357 OoB insns
528 [State 840] Leaving buffer range @0xbfba3783, 38 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
528 [State 840] Killing state 840
528 [State 840] Terminating state 840 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
528 [State 840] Switching from state 840 to state 0
Copied 34928 (count=1)
Deleting state 840 0x0x31ab8740
528 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 839
>> fuzzInit: datum forking for value 840
>> fuzzInit: datum forking for value 840
528 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 840)
        (ReadLSB w32 0 v840_fuzz_symb_840)))
    state 841 with condition (Not (Eq false
         (Eq (w32 840)
             (ReadLSB w32 0 v840_fuzz_symb_840))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-840-8048a0e
Size=2 Low=0 splitIndex=1 high=1
528 [State 0] Switching from state 0 to state 841
Copied 34928 (count=1)
Finalizing TB execution 841
s2e_dummyMainFunction
tcg-llvm-tb-840-8048a0e
528 [State 841] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 840 not yet applied), shell_len: 1024, eip: 0x00000000

528 [State 841] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
529 [State 841] Leaving buffer range @0xbfba3781, 5d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
Firing timer event
529 [State 841] Killing state 841
529 [State 841] Terminating state 841 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
529 [State 841] Switching from state 841 to state 0
Copied 34928 (count=1)
Deleting state 841 0x0x31ab8740
529 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 840
>> fuzzInit: datum forking for value 841
>> fuzzInit: datum forking for value 841
529 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 841)
        (ReadLSB w32 0 v841_fuzz_symb_841)))
    state 842 with condition (Not (Eq false
         (Eq (w32 841)
             (ReadLSB w32 0 v841_fuzz_symb_841))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-841-8048a0e
Size=2 Low=0 splitIndex=1 high=1
529 [State 0] Switching from state 0 to state 842
Copied 34928 (count=1)
Finalizing TB execution 842
s2e_dummyMainFunction
tcg-llvm-tb-841-8048a0e
529 [State 842] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 841 not yet applied), shell_len: 1024, eip: 0x00000000

529 [State 842] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
530 [State 842] Leaving buffer range @0xbfba3783, 5c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
530 [State 842] Killing state 842
530 [State 842] Terminating state 842 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
530 [State 842] Switching from state 842 to state 0
Copied 34928 (count=1)
Deleting state 842 0x0x31ab8740
Firing timer event
530 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 841
>> fuzzInit: datum forking for value 842
>> fuzzInit: datum forking for value 842
530 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 842)
        (ReadLSB w32 0 v842_fuzz_symb_842)))
    state 843 with condition (Not (Eq false
         (Eq (w32 842)
             (ReadLSB w32 0 v842_fuzz_symb_842))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-842-8048a0e
Size=2 Low=0 splitIndex=1 high=1
530 [State 0] Switching from state 0 to state 843
Copied 34928 (count=1)
Finalizing TB execution 843
s2e_dummyMainFunction
tcg-llvm-tb-842-8048a0e
530 [State 843] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 842 not yet applied), shell_len: 1024, eip: 0x00000000

530 [State 843] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
530 [State 843] Leaving buffer range @0xc1003072, 25 IoB insns; prev insn @0xbfba3712
  1   2B @0xbfba3712:  0  0             add [eax], al           
530 [State 843] Entering buffer range @0xbfba3714, 1 OoB insns
530 [State 843] Leaving buffer range @0xbfba3781, 37 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
530 [State 843] Killing state 843
530 [State 843] Terminating state 843 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
530 [State 843] Switching from state 843 to state 0
Copied 34928 (count=1)
Deleting state 843 0x0x32264040
Firing timer event
531 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 842
>> fuzzInit: datum forking for value 843
>> fuzzInit: datum forking for value 843
531 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 843)
        (ReadLSB w32 0 v843_fuzz_symb_843)))
    state 844 with condition (Not (Eq false
         (Eq (w32 843)
             (ReadLSB w32 0 v843_fuzz_symb_843))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-843-8048a0e
Size=2 Low=0 splitIndex=1 high=1
531 [State 0] Switching from state 0 to state 844
Copied 34928 (count=1)
Finalizing TB execution 844
s2e_dummyMainFunction
tcg-llvm-tb-843-8048a0e
531 [State 844] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 843 not yet applied), shell_len: 1024, eip: 0x00000000

531 [State 844] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
531 [State 844] Leaving buffer range @0xbfba3783, 5b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
531 [State 844] Killing state 844
531 [State 844] Terminating state 844 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
531 [State 844] Switching from state 844 to state 0
Copied 34928 (count=1)
Deleting state 844 0x0x320fe4e0
531 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 843
>> fuzzInit: datum forking for value 844
>> fuzzInit: datum forking for value 844
532 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 844)
        (ReadLSB w32 0 v844_fuzz_symb_844)))
    state 845 with condition (Not (Eq false
         (Eq (w32 844)
             (ReadLSB w32 0 v844_fuzz_symb_844))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-844-8048a0e
Size=2 Low=0 splitIndex=1 high=1
532 [State 0] Switching from state 0 to state 845
Copied 34928 (count=1)
Finalizing TB execution 845
s2e_dummyMainFunction
tcg-llvm-tb-844-8048a0e
Firing timer event
532 [State 845] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 844 not yet applied), shell_len: 1024, eip: 0x00000000

532 [State 845] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
532 [State 845] Leaving buffer range @0xbfba3781, 5b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
532 [State 845] Killing state 845
532 [State 845] Terminating state 845 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
532 [State 845] Switching from state 845 to state 0
Copied 34928 (count=1)
Deleting state 845 0x0x320fe4e0
532 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 844
>> fuzzInit: datum forking for value 845
>> fuzzInit: datum forking for value 845
532 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 845)
        (ReadLSB w32 0 v845_fuzz_symb_845)))
    state 846 with condition (Not (Eq false
         (Eq (w32 845)
             (ReadLSB w32 0 v845_fuzz_symb_845))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-845-8048a0e
Size=2 Low=0 splitIndex=1 high=1
532 [State 0] Switching from state 0 to state 846
Copied 34928 (count=1)
Finalizing TB execution 846
s2e_dummyMainFunction
tcg-llvm-tb-845-8048a0e
533 [State 846] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 845 not yet applied), shell_len: 1024, eip: 0x00000000

533 [State 846] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
533 [State 846] Leaving buffer range @0xbfba3783, 5a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
533 [State 846] Killing state 846
533 [State 846] Terminating state 846 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
533 [State 846] Switching from state 846 to state 0
Copied 34928 (count=1)
Deleting state 846 0x0x32252730
Firing timer event
533 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 845
>> fuzzInit: datum forking for value 846
>> fuzzInit: datum forking for value 846
533 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 846)
        (ReadLSB w32 0 v846_fuzz_symb_846)))
    state 847 with condition (Not (Eq false
         (Eq (w32 846)
             (ReadLSB w32 0 v846_fuzz_symb_846))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-846-8048a0e
Size=2 Low=0 splitIndex=1 high=1
533 [State 0] Switching from state 0 to state 847
Copied 34928 (count=1)
Finalizing TB execution 847
s2e_dummyMainFunction
tcg-llvm-tb-846-8048a0e
533 [State 847] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 846 not yet applied), shell_len: 1024, eip: 0x00000000

533 [State 847] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
533 [State 847] Leaving buffer range @0xbfba3781, 5a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
533 [State 847] Killing state 847
533 [State 847] Terminating state 847 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
533 [State 847] Switching from state 847 to state 0
Copied 34928 (count=1)
Deleting state 847 0x0x32252730
534 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 846
>> fuzzInit: datum forking for value 847
>> fuzzInit: datum forking for value 847
534 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 847)
        (ReadLSB w32 0 v847_fuzz_symb_847)))
    state 848 with condition (Not (Eq false
         (Eq (w32 847)
             (ReadLSB w32 0 v847_fuzz_symb_847))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-847-8048a0e
Size=2 Low=0 splitIndex=1 high=1
534 [State 0] Switching from state 0 to state 848
Copied 34928 (count=1)
Finalizing TB execution 848
s2e_dummyMainFunction
tcg-llvm-tb-847-8048a0e
Firing timer event
534 [State 848] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 847 not yet applied), shell_len: 1024, eip: 0x00000000

534 [State 848] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
534 [State 848] Leaving buffer range @0xbfba3783, 59 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
534 [State 848] Killing state 848
534 [State 848] Terminating state 848 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
534 [State 848] Switching from state 848 to state 0
Copied 34928 (count=1)
Deleting state 848 0x0x32252730
534 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 847
>> fuzzInit: datum forking for value 848
>> fuzzInit: datum forking for value 848
534 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 848)
        (ReadLSB w32 0 v848_fuzz_symb_848)))
    state 849 with condition (Not (Eq false
         (Eq (w32 848)
             (ReadLSB w32 0 v848_fuzz_symb_848))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-848-8048a0e
Size=2 Low=0 splitIndex=1 high=1
534 [State 0] Switching from state 0 to state 849
Copied 34928 (count=1)
Finalizing TB execution 849
s2e_dummyMainFunction
tcg-llvm-tb-848-8048a0e
535 [State 849] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 848 not yet applied), shell_len: 1024, eip: 0x00000000

535 [State 849] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
535 [State 849] Leaving buffer range @0xbfba3781, 59 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
535 [State 849] Killing state 849
535 [State 849] Terminating state 849 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
535 [State 849] Switching from state 849 to state 0
Copied 34928 (count=1)
Deleting state 849 0x0x32252730
535 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 848
>> fuzzInit: datum forking for value 849
>> fuzzInit: datum forking for value 849
>> fuzzInit: datum forking for value 849
535 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 849)
        (ReadLSB w32 0 v849_fuzz_symb_849)))
    state 850 with condition (Not (Eq false
         (Eq (w32 849)
             (ReadLSB w32 0 v849_fuzz_symb_849))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-849-8048a0e
Size=2 Low=0 splitIndex=1 high=1
535 [State 0] Switching from state 0 to state 850
Copied 34928 (count=1)
Finalizing TB execution 850
s2e_dummyMainFunction
tcg-llvm-tb-849-8048a0e
Firing timer event
535 [State 850] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 849 not yet applied), shell_len: 1024, eip: 0x00000000

535 [State 850] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
535 [State 850] Leaving buffer range @0xbfba3783, 58 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
535 [State 850] Killing state 850
535 [State 850] Terminating state 850 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
535 [State 850] Switching from state 850 to state 0
Copied 34928 (count=1)
Deleting state 850 0x0x32252730
536 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 849
>> fuzzInit: datum forking for value 850
>> fuzzInit: datum forking for value 850
536 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 850)
        (ReadLSB w32 0 v850_fuzz_symb_850)))
    state 851 with condition (Not (Eq false
         (Eq (w32 850)
             (ReadLSB w32 0 v850_fuzz_symb_850))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-850-8048a0e
Size=2 Low=0 splitIndex=1 high=1
536 [State 0] Switching from state 0 to state 851
Copied 34928 (count=1)
Finalizing TB execution 851
s2e_dummyMainFunction
tcg-llvm-tb-850-8048a0e
536 [State 851] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 850 not yet applied), shell_len: 1024, eip: 0x00000000

536 [State 851] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
536 [State 851] Leaving buffer range @0xbfba3781, 58 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
536 [State 851] Killing state 851
536 [State 851] Terminating state 851 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
536 [State 851] Switching from state 851 to state 0
Copied 34928 (count=1)
Deleting state 851 0x0x3224ead0
Firing timer event
536 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 850
>> fuzzInit: datum forking for value 851
>> fuzzInit: datum forking for value 851
537 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 851)
        (ReadLSB w32 0 v851_fuzz_symb_851)))
    state 852 with condition (Not (Eq false
         (Eq (w32 851)
             (ReadLSB w32 0 v851_fuzz_symb_851))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-851-8048a0e
Size=2 Low=0 splitIndex=1 high=1
537 [State 0] Switching from state 0 to state 852
Copied 34928 (count=1)
Finalizing TB execution 852
s2e_dummyMainFunction
tcg-llvm-tb-851-8048a0e
537 [State 852] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 851 not yet applied), shell_len: 1024, eip: 0x00000000

537 [State 852] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
537 [State 852] Leaving buffer range @0xbfba3783, 57 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
537 [State 852] Killing state 852
537 [State 852] Terminating state 852 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
537 [State 852] Switching from state 852 to state 0
Copied 34928 (count=1)
Deleting state 852 0x0x3219e530
537 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 851
>> fuzzInit: datum forking for value 852
>> fuzzInit: datum forking for value 852
537 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 852)
        (ReadLSB w32 0 v852_fuzz_symb_852)))
    state 853 with condition (Not (Eq false
         (Eq (w32 852)
             (ReadLSB w32 0 v852_fuzz_symb_852))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-852-8048a0e
Size=2 Low=0 splitIndex=1 high=1
537 [State 0] Switching from state 0 to state 853
Copied 34928 (count=1)
Finalizing TB execution 853
s2e_dummyMainFunction
tcg-llvm-tb-852-8048a0e
Firing timer event
537 [State 853] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 852 not yet applied), shell_len: 1024, eip: 0x00000000

537 [State 853] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
537 [State 853] Leaving buffer range @0xbfba3781, 57 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
538 [State 853] Killing state 853
538 [State 853] Terminating state 853 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
538 [State 853] Switching from state 853 to state 0
Copied 34928 (count=1)
Deleting state 853 0x0x3219e530
538 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 852
>> fuzzInit: datum forking for value 853
>> fuzzInit: datum forking for value 853
538 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 853)
        (ReadLSB w32 0 v853_fuzz_symb_853)))
    state 854 with condition (Not (Eq false
         (Eq (w32 853)
             (ReadLSB w32 0 v853_fuzz_symb_853))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-853-8048a0e
Size=2 Low=0 splitIndex=1 high=1
538 [State 0] Switching from state 0 to state 854
Copied 34928 (count=1)
Finalizing TB execution 854
s2e_dummyMainFunction
tcg-llvm-tb-853-8048a0e
538 [State 854] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 853 not yet applied), shell_len: 1024, eip: 0x00000000

538 [State 854] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
538 [State 854] Leaving buffer range @0xbfba3783, 56 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
538 [State 854] Killing state 854
538 [State 854] Terminating state 854 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
538 [State 854] Switching from state 854 to state 0
Copied 34928 (count=1)
Deleting state 854 0x0x3219e530
Firing timer event
539 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 853
>> fuzzInit: datum forking for value 854
>> fuzzInit: datum forking for value 854
539 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 854)
        (ReadLSB w32 0 v854_fuzz_symb_854)))
    state 855 with condition (Not (Eq false
         (Eq (w32 854)
             (ReadLSB w32 0 v854_fuzz_symb_854))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-854-8048a0e
Size=2 Low=0 splitIndex=1 high=1
539 [State 0] Switching from state 0 to state 855
Copied 34928 (count=1)
Finalizing TB execution 855
s2e_dummyMainFunction
tcg-llvm-tb-854-8048a0e
539 [State 855] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 854 not yet applied), shell_len: 1024, eip: 0x00000000

539 [State 855] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
539 [State 855] Leaving buffer range @0xbfba3781, 56 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
539 [State 855] Killing state 855
539 [State 855] Terminating state 855 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
539 [State 855] Switching from state 855 to state 0
Copied 34928 (count=1)
Deleting state 855 0x0x3219e530
539 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 854
>> fuzzInit: datum forking for value 855
>> fuzzInit: datum forking for value 855
539 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 855)
        (ReadLSB w32 0 v855_fuzz_symb_855)))
    state 856 with condition (Not (Eq false
         (Eq (w32 855)
             (ReadLSB w32 0 v855_fuzz_symb_855))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-855-8048a0e
Size=2 Low=0 splitIndex=1 high=1
539 [State 0] Switching from state 0 to state 856
Copied 34928 (count=1)
Finalizing TB execution 856
s2e_dummyMainFunction
tcg-llvm-tb-855-8048a0e
Firing timer event
540 [State 856] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 855 not yet applied), shell_len: 1024, eip: 0x00000000

540 [State 856] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
540 [State 856] Leaving buffer range @0xbfba3783, 55 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
540 [State 856] Killing state 856
540 [State 856] Terminating state 856 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
540 [State 856] Switching from state 856 to state 0
Copied 34928 (count=1)
Deleting state 856 0x0x3219e530
540 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 855
>> fuzzInit: datum forking for value 856
>> fuzzInit: datum forking for value 856
540 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 856)
        (ReadLSB w32 0 v856_fuzz_symb_856)))
    state 857 with condition (Not (Eq false
         (Eq (w32 856)
             (ReadLSB w32 0 v856_fuzz_symb_856))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-856-8048a0e
Size=2 Low=0 splitIndex=1 high=1
540 [State 0] Switching from state 0 to state 857
Copied 34928 (count=1)
Finalizing TB execution 857
s2e_dummyMainFunction
tcg-llvm-tb-856-8048a0e
540 [State 857] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 856 not yet applied), shell_len: 1024, eip: 0x00000000

540 [State 857] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
540 [State 857] Leaving buffer range @0xbfba3781, 55 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
540 [State 857] Killing state 857
540 [State 857] Terminating state 857 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
540 [State 857] Switching from state 857 to state 0
Copied 34928 (count=1)
Deleting state 857 0x0x3269b920
541 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 856
>> fuzzInit: datum forking for value 857
>> fuzzInit: datum forking for value 857
541 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 857)
        (ReadLSB w32 0 v857_fuzz_symb_857)))
    state 858 with condition (Not (Eq false
         (Eq (w32 857)
             (ReadLSB w32 0 v857_fuzz_symb_857))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-857-8048a0e
Size=2 Low=0 splitIndex=1 high=1
541 [State 0] Switching from state 0 to state 858
Copied 34928 (count=1)
Finalizing TB execution 858
s2e_dummyMainFunction
tcg-llvm-tb-857-8048a0e
Firing timer event
541 [State 858] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 857 not yet applied), shell_len: 1024, eip: 0x00000000

541 [State 858] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
541 [State 858] Leaving buffer range @0xbfba3783, 54 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
541 [State 858] Killing state 858
541 [State 858] Terminating state 858 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
541 [State 858] Switching from state 858 to state 0
Copied 34928 (count=1)
Deleting state 858 0x0x3269b920
541 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 857
>> fuzzInit: datum forking for value 858
>> fuzzInit: datum forking for value 858
541 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 858)
        (ReadLSB w32 0 v858_fuzz_symb_858)))
    state 859 with condition (Not (Eq false
         (Eq (w32 858)
             (ReadLSB w32 0 v858_fuzz_symb_858))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-858-8048a0e
Size=2 Low=0 splitIndex=1 high=1
541 [State 0] Switching from state 0 to state 859
Copied 34928 (count=1)
Finalizing TB execution 859
s2e_dummyMainFunction
tcg-llvm-tb-858-8048a0e
542 [State 859] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 858 not yet applied), shell_len: 1024, eip: 0x00000000

542 [State 859] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
542 [State 859] Leaving buffer range @0xbfba3781, 54 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
542 [State 859] Killing state 859
542 [State 859] Terminating state 859 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
542 [State 859] Switching from state 859 to state 0
Copied 34928 (count=1)
Deleting state 859 0x0x32634df0
542 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 858
>> fuzzInit: datum forking for value 859
>> fuzzInit: datum forking for value 859
542 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 859)
        (ReadLSB w32 0 v859_fuzz_symb_859)))
    state 860 with condition (Not (Eq false
         (Eq (w32 859)
             (ReadLSB w32 0 v859_fuzz_symb_859))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-859-8048a0e
Size=2 Low=0 splitIndex=1 high=1
542 [State 0] Switching from state 0 to state 860
Copied 34928 (count=1)
Finalizing TB execution 860
s2e_dummyMainFunction
tcg-llvm-tb-859-8048a0e
Firing timer event
542 [State 860] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 859 not yet applied), shell_len: 1024, eip: 0x00000000

542 [State 860] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
542 [State 860] Leaving buffer range @0xbfba3783, 53 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
542 [State 860] Killing state 860
542 [State 860] Terminating state 860 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
542 [State 860] Switching from state 860 to state 0
Copied 34928 (count=1)
Deleting state 860 0x0x32634df0
543 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 859
>> fuzzInit: datum forking for value 860
>> fuzzInit: datum forking for value 860
543 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 860)
        (ReadLSB w32 0 v860_fuzz_symb_860)))
    state 861 with condition (Not (Eq false
         (Eq (w32 860)
             (ReadLSB w32 0 v860_fuzz_symb_860))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-860-8048a0e
Size=2 Low=0 splitIndex=1 high=1
543 [State 0] Switching from state 0 to state 861
Copied 34928 (count=1)
Finalizing TB execution 861
s2e_dummyMainFunction
tcg-llvm-tb-860-8048a0e
543 [State 861] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 860 not yet applied), shell_len: 1024, eip: 0x00000000

543 [State 861] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
543 [State 861] Leaving buffer range @0xbfba3781, 53 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
543 [State 861] Killing state 861
543 [State 861] Terminating state 861 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
543 [State 861] Switching from state 861 to state 0
Copied 34928 (count=1)
Deleting state 861 0x0x32634df0
Firing timer event
543 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 860
>> fuzzInit: datum forking for value 861
>> fuzzInit: datum forking for value 861
544 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 861)
        (ReadLSB w32 0 v861_fuzz_symb_861)))
    state 862 with condition (Not (Eq false
         (Eq (w32 861)
             (ReadLSB w32 0 v861_fuzz_symb_861))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-861-8048a0e
Size=2 Low=0 splitIndex=1 high=1
544 [State 0] Switching from state 0 to state 862
Copied 34928 (count=1)
Finalizing TB execution 862
s2e_dummyMainFunction
tcg-llvm-tb-861-8048a0e
544 [State 862] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 861 not yet applied), shell_len: 1024, eip: 0x00000000

544 [State 862] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
544 [State 862] Leaving buffer range @0xbfba3783, 52 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
544 [State 862] Killing state 862
544 [State 862] Terminating state 862 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
544 [State 862] Switching from state 862 to state 0
Copied 34928 (count=1)
Deleting state 862 0x0x32634df0
544 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 861
>> fuzzInit: datum forking for value 862
>> fuzzInit: datum forking for value 862
544 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 862)
        (ReadLSB w32 0 v862_fuzz_symb_862)))
    state 863 with condition (Not (Eq false
         (Eq (w32 862)
             (ReadLSB w32 0 v862_fuzz_symb_862))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-862-8048a0e
Size=2 Low=0 splitIndex=1 high=1
544 [State 0] Switching from state 0 to state 863
Copied 34928 (count=1)
Finalizing TB execution 863
s2e_dummyMainFunction
tcg-llvm-tb-862-8048a0e
Firing timer event
544 [State 863] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 862 not yet applied), shell_len: 1024, eip: 0x00000000

544 [State 863] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
544 [State 863] Leaving buffer range @0xbfba3781, 52 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
544 [State 863] Killing state 863
544 [State 863] Terminating state 863 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
544 [State 863] Switching from state 863 to state 0
Copied 34928 (count=1)
Deleting state 863 0x0x3233f4d0
545 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 862
>> fuzzInit: datum forking for value 863
>> fuzzInit: datum forking for value 863
545 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 863)
        (ReadLSB w32 0 v863_fuzz_symb_863)))
    state 864 with condition (Not (Eq false
         (Eq (w32 863)
             (ReadLSB w32 0 v863_fuzz_symb_863))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-863-8048a0e
Size=2 Low=0 splitIndex=1 high=1
545 [State 0] Switching from state 0 to state 864
Copied 34928 (count=1)
Finalizing TB execution 864
s2e_dummyMainFunction
tcg-llvm-tb-863-8048a0e
545 [State 864] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 863 not yet applied), shell_len: 1024, eip: 0x00000000

545 [State 864] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
545 [State 864] Leaving buffer range @0xbfba3783, 51 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
545 [State 864] Killing state 864
545 [State 864] Terminating state 864 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
545 [State 864] Switching from state 864 to state 0
Copied 34928 (count=1)
Deleting state 864 0x0x3269b920
Firing timer event
545 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 863
>> fuzzInit: datum forking for value 864
>> fuzzInit: datum forking for value 864
546 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 864)
        (ReadLSB w32 0 v864_fuzz_symb_864)))
    state 865 with condition (Not (Eq false
         (Eq (w32 864)
             (ReadLSB w32 0 v864_fuzz_symb_864))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-864-8048a0e
Size=2 Low=0 splitIndex=1 high=1
546 [State 0] Switching from state 0 to state 865
Copied 34928 (count=1)
Finalizing TB execution 865
s2e_dummyMainFunction
tcg-llvm-tb-864-8048a0e
546 [State 865] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 864 not yet applied), shell_len: 1024, eip: 0x00000000

546 [State 865] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
546 [State 865] Leaving buffer range @0xbfba3781, 51 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
546 [State 865] Killing state 865
546 [State 865] Terminating state 865 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
546 [State 865] Switching from state 865 to state 0
Copied 34928 (count=1)
Deleting state 865 0x0x328cd930
546 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 864
>> fuzzInit: datum forking for value 865
>> fuzzInit: datum forking for value 865
546 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 865)
        (ReadLSB w32 0 v865_fuzz_symb_865)))
    state 866 with condition (Not (Eq false
         (Eq (w32 865)
             (ReadLSB w32 0 v865_fuzz_symb_865))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-865-8048a0e
Size=2 Low=0 splitIndex=1 high=1
546 [State 0] Switching from state 0 to state 866
Copied 34928 (count=1)
Finalizing TB execution 866
s2e_dummyMainFunction
tcg-llvm-tb-865-8048a0e
Firing timer event
546 [State 866] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 865 not yet applied), shell_len: 1024, eip: 0x00000000

546 [State 866] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
546 [State 866] Leaving buffer range @0xbfba3783, 50 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
546 [State 866] Killing state 866
546 [State 866] Terminating state 866 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
546 [State 866] Switching from state 866 to state 0
Copied 34928 (count=1)
Deleting state 866 0x0x328cd930
547 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 865
>> fuzzInit: datum forking for value 866
>> fuzzInit: datum forking for value 866
547 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 866)
        (ReadLSB w32 0 v866_fuzz_symb_866)))
    state 867 with condition (Not (Eq false
         (Eq (w32 866)
             (ReadLSB w32 0 v866_fuzz_symb_866))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-866-8048a0e
Size=2 Low=0 splitIndex=1 high=1
547 [State 0] Switching from state 0 to state 867
Copied 34928 (count=1)
Finalizing TB execution 867
s2e_dummyMainFunction
tcg-llvm-tb-866-8048a0e
547 [State 867] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 866 not yet applied), shell_len: 1024, eip: 0x00000000

547 [State 867] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
547 [State 867] Leaving buffer range @0xbfba3781, 50 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
547 [State 867] Killing state 867
547 [State 867] Terminating state 867 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
547 [State 867] Switching from state 867 to state 0
Copied 34928 (count=1)
Deleting state 867 0x0x328cd930
547 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 866
>> fuzzInit: datum forking for value 867
>> fuzzInit: datum forking for value 867
548 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 867)
        (ReadLSB w32 0 v867_fuzz_symb_867)))
    state 868 with condition (Not (Eq false
         (Eq (w32 867)
             (ReadLSB w32 0 v867_fuzz_symb_867))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-867-8048a0e
Size=2 Low=0 splitIndex=1 high=1
548 [State 0] Switching from state 0 to state 868
Copied 34928 (count=1)
Finalizing TB execution 868
s2e_dummyMainFunction
tcg-llvm-tb-867-8048a0e
Firing timer event
548 [State 868] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 867 not yet applied), shell_len: 1024, eip: 0x00000000

548 [State 868] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
548 [State 868] Leaving buffer range @0xbfba3783, 4f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
548 [State 868] Killing state 868
548 [State 868] Terminating state 868 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
548 [State 868] Switching from state 868 to state 0
Copied 34928 (count=1)
Deleting state 868 0x0x328cd930
548 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 867
>> fuzzInit: datum forking for value 868
>> fuzzInit: datum forking for value 868
548 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 868)
        (ReadLSB w32 0 v868_fuzz_symb_868)))
    state 869 with condition (Not (Eq false
         (Eq (w32 868)
             (ReadLSB w32 0 v868_fuzz_symb_868))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-868-8048a0e
Size=2 Low=0 splitIndex=1 high=1
548 [State 0] Switching from state 0 to state 869
Copied 34928 (count=1)
Finalizing TB execution 869
s2e_dummyMainFunction
tcg-llvm-tb-868-8048a0e
548 [State 869] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 868 not yet applied), shell_len: 1024, eip: 0x00000000

548 [State 869] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
548 [State 869] Leaving buffer range @0xbfba3781, 4f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
548 [State 869] Killing state 869
548 [State 869] Terminating state 869 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
548 [State 869] Switching from state 869 to state 0
Copied 34928 (count=1)
Deleting state 869 0x0x329db400
Firing timer event
549 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 868
>> fuzzInit: datum forking for value 869
>> fuzzInit: datum forking for value 869
549 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 869)
        (ReadLSB w32 0 v869_fuzz_symb_869)))
    state 870 with condition (Not (Eq false
         (Eq (w32 869)
             (ReadLSB w32 0 v869_fuzz_symb_869))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-869-8048a0e
Size=2 Low=0 splitIndex=1 high=1
549 [State 0] Switching from state 0 to state 870
Copied 34928 (count=1)
Finalizing TB execution 870
s2e_dummyMainFunction
tcg-llvm-tb-869-8048a0e
549 [State 870] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 869 not yet applied), shell_len: 1024, eip: 0x00000000

549 [State 870] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
549 [State 870] Leaving buffer range @0xbfba3783, 4e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
549 [State 870] Killing state 870
549 [State 870] Terminating state 870 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
549 [State 870] Switching from state 870 to state 0
Copied 34928 (count=1)
Deleting state 870 0x0x32a1f280
549 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 869
>> fuzzInit: datum forking for value 870
>> fuzzInit: datum forking for value 870
>> fuzzInit: datum forking for value 870
>> fuzzInit: datum forking for value 870
550 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 870)
        (ReadLSB w32 0 v870_fuzz_symb_870)))
    state 871 with condition (Not (Eq false
         (Eq (w32 870)
             (ReadLSB w32 0 v870_fuzz_symb_870))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-870-8048a0e
Size=2 Low=0 splitIndex=1 high=1
550 [State 0] Switching from state 0 to state 871
Copied 34928 (count=1)
Finalizing TB execution 871
s2e_dummyMainFunction
tcg-llvm-tb-870-8048a0e
Firing timer event
550 [State 871] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 870 not yet applied), shell_len: 1024, eip: 0x00000000

550 [State 871] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
550 [State 871] Leaving buffer range @0xbfba3781, 4e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
550 [State 871] Killing state 871
550 [State 871] Terminating state 871 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
550 [State 871] Switching from state 871 to state 0
Copied 34928 (count=1)
Deleting state 871 0x0x32703d60
550 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 870
>> fuzzInit: datum forking for value 871
>> fuzzInit: datum forking for value 871
550 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 871)
        (ReadLSB w32 0 v871_fuzz_symb_871)))
    state 872 with condition (Not (Eq false
         (Eq (w32 871)
             (ReadLSB w32 0 v871_fuzz_symb_871))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-871-8048a0e
Size=2 Low=0 splitIndex=1 high=1
550 [State 0] Switching from state 0 to state 872
Copied 34928 (count=1)
Finalizing TB execution 872
s2e_dummyMainFunction
tcg-llvm-tb-871-8048a0e
550 [State 872] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 871 not yet applied), shell_len: 1024, eip: 0x00000000

550 [State 872] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
550 [State 872] Leaving buffer range @0xbfba3783, 4d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
551 [State 872] Killing state 872
551 [State 872] Terminating state 872 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
551 [State 872] Switching from state 872 to state 0
Copied 34928 (count=1)
Deleting state 872 0x0x32b78a50
Firing timer event
551 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 871
>> fuzzInit: datum forking for value 872
>> fuzzInit: datum forking for value 872
551 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 872)
        (ReadLSB w32 0 v872_fuzz_symb_872)))
    state 873 with condition (Not (Eq false
         (Eq (w32 872)
             (ReadLSB w32 0 v872_fuzz_symb_872))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-872-8048a0e
Size=2 Low=0 splitIndex=1 high=1
551 [State 0] Switching from state 0 to state 873
Copied 34928 (count=1)
Finalizing TB execution 873
s2e_dummyMainFunction
tcg-llvm-tb-872-8048a0e
551 [State 873] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 872 not yet applied), shell_len: 1024, eip: 0x00000000

551 [State 873] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
551 [State 873] Leaving buffer range @0xbfba3781, 4d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
551 [State 873] Killing state 873
551 [State 873] Terminating state 873 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
551 [State 873] Switching from state 873 to state 0
Copied 34928 (count=1)
Deleting state 873 0x0x32b78a50
551 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 872
>> fuzzInit: datum forking for value 873
>> fuzzInit: datum forking for value 873
552 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 873)
        (ReadLSB w32 0 v873_fuzz_symb_873)))
    state 874 with condition (Not (Eq false
         (Eq (w32 873)
             (ReadLSB w32 0 v873_fuzz_symb_873))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-873-8048a0e
Size=2 Low=0 splitIndex=1 high=1
552 [State 0] Switching from state 0 to state 874
Copied 34928 (count=1)
Finalizing TB execution 874
s2e_dummyMainFunction
tcg-llvm-tb-873-8048a0e
Firing timer event
552 [State 874] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 873 not yet applied), shell_len: 1024, eip: 0x00000000

552 [State 874] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
552 [State 874] Leaving buffer range @0xbfba3783, 4c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
552 [State 874] Killing state 874
552 [State 874] Terminating state 874 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
552 [State 874] Switching from state 874 to state 0
Copied 34928 (count=1)
Deleting state 874 0x0x32b78a50
552 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 873
>> fuzzInit: datum forking for value 874
>> fuzzInit: datum forking for value 874
552 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 874)
        (ReadLSB w32 0 v874_fuzz_symb_874)))
    state 875 with condition (Not (Eq false
         (Eq (w32 874)
             (ReadLSB w32 0 v874_fuzz_symb_874))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-874-8048a0e
Size=2 Low=0 splitIndex=1 high=1
552 [State 0] Switching from state 0 to state 875
Copied 34928 (count=1)
Finalizing TB execution 875
s2e_dummyMainFunction
tcg-llvm-tb-874-8048a0e
552 [State 875] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 874 not yet applied), shell_len: 1024, eip: 0x00000000

552 [State 875] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
552 [State 875] Leaving buffer range @0xbfba3781, 4c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
552 [State 875] Killing state 875
552 [State 875] Terminating state 875 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
552 [State 875] Switching from state 875 to state 0
Copied 34928 (count=1)
Deleting state 875 0x0x32c8a590
Firing timer event
553 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 874
>> fuzzInit: datum forking for value 875
>> fuzzInit: datum forking for value 875
553 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 875)
        (ReadLSB w32 0 v875_fuzz_symb_875)))
    state 876 with condition (Not (Eq false
         (Eq (w32 875)
             (ReadLSB w32 0 v875_fuzz_symb_875))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-875-8048a0e
Size=2 Low=0 splitIndex=1 high=1
553 [State 0] Switching from state 0 to state 876
Copied 34928 (count=1)
Finalizing TB execution 876
s2e_dummyMainFunction
tcg-llvm-tb-875-8048a0e
553 [State 876] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 875 not yet applied), shell_len: 1024, eip: 0x00000000

553 [State 876] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
553 [State 876] Leaving buffer range @0xbfba3783, 4b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
553 [State 876] Killing state 876
553 [State 876] Terminating state 876 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
553 [State 876] Switching from state 876 to state 0
Copied 34928 (count=1)
Deleting state 876 0x0x3293d370
553 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 875
>> fuzzInit: datum forking for value 876
>> fuzzInit: datum forking for value 876
554 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 876)
        (ReadLSB w32 0 v876_fuzz_symb_876)))
    state 877 with condition (Not (Eq false
         (Eq (w32 876)
             (ReadLSB w32 0 v876_fuzz_symb_876))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-876-8048a0e
Size=2 Low=0 splitIndex=1 high=1
554 [State 0] Switching from state 0 to state 877
Copied 34928 (count=1)
Finalizing TB execution 877
s2e_dummyMainFunction
tcg-llvm-tb-876-8048a0e
Firing timer event
554 [State 877] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 876 not yet applied), shell_len: 1024, eip: 0x00000000

554 [State 877] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
554 [State 877] Leaving buffer range @0xbfba3781, 4b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
554 [State 877] Killing state 877
554 [State 877] Terminating state 877 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
554 [State 877] Switching from state 877 to state 0
Copied 34928 (count=1)
Deleting state 877 0x0x3293d370
554 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 876
>> fuzzInit: datum forking for value 877
>> fuzzInit: datum forking for value 877
554 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 877)
        (ReadLSB w32 0 v877_fuzz_symb_877)))
    state 878 with condition (Not (Eq false
         (Eq (w32 877)
             (ReadLSB w32 0 v877_fuzz_symb_877))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-877-8048a0e
Size=2 Low=0 splitIndex=1 high=1
554 [State 0] Switching from state 0 to state 878
Copied 34928 (count=1)
Finalizing TB execution 878
s2e_dummyMainFunction
tcg-llvm-tb-877-8048a0e
554 [State 878] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 877 not yet applied), shell_len: 1024, eip: 0x00000000

554 [State 878] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
555 [State 878] Leaving buffer range @0xc126f278, 4a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
555 [State 878] Killing state 878
555 [State 878] Terminating state 878 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
555 [State 878] Switching from state 878 to state 0
Copied 34928 (count=1)
Deleting state 878 0x0x32be6990
555 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 877
>> fuzzInit: datum forking for value 878
>> fuzzInit: datum forking for value 878
555 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 878)
        (ReadLSB w32 0 v878_fuzz_symb_878)))
    state 879 with condition (Not (Eq false
         (Eq (w32 878)
             (ReadLSB w32 0 v878_fuzz_symb_878))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-878-8048a0e
Size=2 Low=0 splitIndex=1 high=1
555 [State 0] Switching from state 0 to state 879
Copied 34928 (count=1)
Finalizing TB execution 879
s2e_dummyMainFunction
tcg-llvm-tb-878-8048a0e
555 [State 879] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 878 not yet applied), shell_len: 1024, eip: 0x00000000

555 [State 879] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
555 [State 879] Leaving buffer range @0xbfba3781, 4a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
555 [State 879] Killing state 879
555 [State 879] Terminating state 879 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
555 [State 879] Switching from state 879 to state 0
Copied 34928 (count=1)
Deleting state 879 0x0x32d2a000
556 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 878
>> fuzzInit: datum forking for value 879
>> fuzzInit: datum forking for value 879
556 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 879)
        (ReadLSB w32 0 v879_fuzz_symb_879)))
    state 880 with condition (Not (Eq false
         (Eq (w32 879)
             (ReadLSB w32 0 v879_fuzz_symb_879))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-879-8048a0e
Size=2 Low=0 splitIndex=1 high=1
556 [State 0] Switching from state 0 to state 880
Copied 34928 (count=1)
Finalizing TB execution 880
s2e_dummyMainFunction
tcg-llvm-tb-879-8048a0e
Firing timer event
556 [State 880] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 879 not yet applied), shell_len: 1024, eip: 0x00000000

556 [State 880] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
556 [State 880] Leaving buffer range @0xc126f278, 49 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
556 [State 880] Killing state 880
556 [State 880] Terminating state 880 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
556 [State 880] Switching from state 880 to state 0
Copied 34928 (count=1)
Deleting state 880 0x0x32e18350
556 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 879
>> fuzzInit: datum forking for value 880
>> fuzzInit: datum forking for value 880
556 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 880)
        (ReadLSB w32 0 v880_fuzz_symb_880)))
    state 881 with condition (Not (Eq false
         (Eq (w32 880)
             (ReadLSB w32 0 v880_fuzz_symb_880))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-880-8048a0e
Size=2 Low=0 splitIndex=1 high=1
556 [State 0] Switching from state 0 to state 881
Copied 34928 (count=1)
Finalizing TB execution 881
s2e_dummyMainFunction
tcg-llvm-tb-880-8048a0e
557 [State 881] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 880 not yet applied), shell_len: 1024, eip: 0x00000000

557 [State 881] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
557 [State 881] Leaving buffer range @0xbfba3781, 49 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
557 [State 881] Killing state 881
557 [State 881] Terminating state 881 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
557 [State 881] Switching from state 881 to state 0
Copied 34928 (count=1)
Deleting state 881 0x0x32f43600
Firing timer event
557 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 880
>> fuzzInit: datum forking for value 881
>> fuzzInit: datum forking for value 881
557 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 881)
        (ReadLSB w32 0 v881_fuzz_symb_881)))
    state 882 with condition (Not (Eq false
         (Eq (w32 881)
             (ReadLSB w32 0 v881_fuzz_symb_881))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-881-8048a0e
Size=2 Low=0 splitIndex=1 high=1
557 [State 0] Switching from state 0 to state 882
Copied 34928 (count=1)
Finalizing TB execution 882
s2e_dummyMainFunction
tcg-llvm-tb-881-8048a0e
557 [State 882] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 881 not yet applied), shell_len: 1024, eip: 0x00000000

557 [State 882] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
557 [State 882] Leaving buffer range @0xbfba3783, 48 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
557 [State 882] Killing state 882
557 [State 882] Terminating state 882 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
557 [State 882] Switching from state 882 to state 0
Copied 34928 (count=1)
Deleting state 882 0x0x32e73ce0
558 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 881
>> fuzzInit: datum forking for value 882
>> fuzzInit: datum forking for value 882
558 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 882)
        (ReadLSB w32 0 v882_fuzz_symb_882)))
    state 883 with condition (Not (Eq false
         (Eq (w32 882)
             (ReadLSB w32 0 v882_fuzz_symb_882))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-882-8048a0e
Size=2 Low=0 splitIndex=1 high=1
558 [State 0] Switching from state 0 to state 883
Copied 34928 (count=1)
Finalizing TB execution 883
s2e_dummyMainFunction
tcg-llvm-tb-882-8048a0e
Firing timer event
558 [State 883] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 882 not yet applied), shell_len: 1024, eip: 0x00000000

558 [State 883] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
558 [State 883] Leaving buffer range @0xbfba3781, 48 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
558 [State 883] Killing state 883
558 [State 883] Terminating state 883 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
558 [State 883] Switching from state 883 to state 0
Copied 34928 (count=1)
Deleting state 883 0x0x32d76440
558 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 882
>> fuzzInit: datum forking for value 883
>> fuzzInit: datum forking for value 883
558 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 883)
        (ReadLSB w32 0 v883_fuzz_symb_883)))
    state 884 with condition (Not (Eq false
         (Eq (w32 883)
             (ReadLSB w32 0 v883_fuzz_symb_883))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-883-8048a0e
Size=2 Low=0 splitIndex=1 high=1
558 [State 0] Switching from state 0 to state 884
Copied 34928 (count=1)
Finalizing TB execution 884
s2e_dummyMainFunction
tcg-llvm-tb-883-8048a0e
559 [State 884] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 883 not yet applied), shell_len: 1024, eip: 0x00000000

559 [State 884] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
559 [State 884] Leaving buffer range @0xbfba3783, 47 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
559 [State 884] Killing state 884
559 [State 884] Terminating state 884 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
559 [State 884] Switching from state 884 to state 0
Copied 34928 (count=1)
Deleting state 884 0x0x32e0a0e0
559 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 883
>> fuzzInit: datum forking for value 884
>> fuzzInit: datum forking for value 884
559 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 884)
        (ReadLSB w32 0 v884_fuzz_symb_884)))
    state 885 with condition (Not (Eq false
         (Eq (w32 884)
             (ReadLSB w32 0 v884_fuzz_symb_884))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-884-8048a0e
Size=2 Low=0 splitIndex=1 high=1
559 [State 0] Switching from state 0 to state 885
Copied 34928 (count=1)
Finalizing TB execution 885
s2e_dummyMainFunction
tcg-llvm-tb-884-8048a0e
Firing timer event
559 [State 885] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 884 not yet applied), shell_len: 1024, eip: 0x00000000

559 [State 885] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
559 [State 885] Leaving buffer range @0xbfba3781, 47 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
559 [State 885] Killing state 885
559 [State 885] Terminating state 885 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
559 [State 885] Switching from state 885 to state 0
Copied 34928 (count=1)
Deleting state 885 0x0x32e0a0e0
560 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 884
>> fuzzInit: datum forking for value 885
>> fuzzInit: datum forking for value 885
>> fuzzInit: datum forking for value 885
560 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 885)
        (ReadLSB w32 0 v885_fuzz_symb_885)))
    state 886 with condition (Not (Eq false
         (Eq (w32 885)
             (ReadLSB w32 0 v885_fuzz_symb_885))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-885-8048a0e
Size=2 Low=0 splitIndex=1 high=1
560 [State 0] Switching from state 0 to state 886
Copied 34928 (count=1)
Finalizing TB execution 886
s2e_dummyMainFunction
tcg-llvm-tb-885-8048a0e
560 [State 886] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 885 not yet applied), shell_len: 1024, eip: 0x00000000

560 [State 886] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
560 [State 886] Leaving buffer range @0xbfba3783, 46 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
560 [State 886] Killing state 886
560 [State 886] Terminating state 886 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
560 [State 886] Switching from state 886 to state 0
Copied 34928 (count=1)
Deleting state 886 0x0x33035e50
Firing timer event
560 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 885
>> fuzzInit: datum forking for value 886
>> fuzzInit: datum forking for value 886
561 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 886)
        (ReadLSB w32 0 v886_fuzz_symb_886)))
    state 887 with condition (Not (Eq false
         (Eq (w32 886)
             (ReadLSB w32 0 v886_fuzz_symb_886))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-886-8048a0e
Size=2 Low=0 splitIndex=1 high=1
561 [State 0] Switching from state 0 to state 887
Copied 34928 (count=1)
Finalizing TB execution 887
s2e_dummyMainFunction
tcg-llvm-tb-886-8048a0e
561 [State 887] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 886 not yet applied), shell_len: 1024, eip: 0x00000000

561 [State 887] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
561 [State 887] Leaving buffer range @0xbfba3781, 46 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
561 [State 887] Killing state 887
561 [State 887] Terminating state 887 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
561 [State 887] Switching from state 887 to state 0
Copied 34928 (count=1)
Deleting state 887 0x0x33035e50
561 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 886
>> fuzzInit: datum forking for value 887
>> fuzzInit: datum forking for value 887
561 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 887)
        (ReadLSB w32 0 v887_fuzz_symb_887)))
    state 888 with condition (Not (Eq false
         (Eq (w32 887)
             (ReadLSB w32 0 v887_fuzz_symb_887))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-887-8048a0e
Size=2 Low=0 splitIndex=1 high=1
561 [State 0] Switching from state 0 to state 888
Copied 34928 (count=1)
Finalizing TB execution 888
s2e_dummyMainFunction
tcg-llvm-tb-887-8048a0e
Firing timer event
561 [State 888] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 887 not yet applied), shell_len: 1024, eip: 0x00000000

561 [State 888] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
561 [State 888] Leaving buffer range @0xbfba3783, 45 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
561 [State 888] Killing state 888
561 [State 888] Terminating state 888 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
561 [State 888] Switching from state 888 to state 0
Copied 34928 (count=1)
Deleting state 888 0x0x33035e50
562 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 887
>> fuzzInit: datum forking for value 888
>> fuzzInit: datum forking for value 888
562 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 888)
        (ReadLSB w32 0 v888_fuzz_symb_888)))
    state 889 with condition (Not (Eq false
         (Eq (w32 888)
             (ReadLSB w32 0 v888_fuzz_symb_888))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-888-8048a0e
Size=2 Low=0 splitIndex=1 high=1
562 [State 0] Switching from state 0 to state 889
Copied 34928 (count=1)
Finalizing TB execution 889
s2e_dummyMainFunction
tcg-llvm-tb-888-8048a0e
562 [State 889] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 888 not yet applied), shell_len: 1024, eip: 0x00000000

562 [State 889] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
562 [State 889] Leaving buffer range @0xbfba3781, 45 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
562 [State 889] Killing state 889
562 [State 889] Terminating state 889 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
562 [State 889] Switching from state 889 to state 0
Copied 34928 (count=1)
Deleting state 889 0x0x330b3670
Firing timer event
562 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 888
>> fuzzInit: datum forking for value 889
>> fuzzInit: datum forking for value 889
563 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 889)
        (ReadLSB w32 0 v889_fuzz_symb_889)))
    state 890 with condition (Not (Eq false
         (Eq (w32 889)
             (ReadLSB w32 0 v889_fuzz_symb_889))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-889-8048a0e
Size=2 Low=0 splitIndex=1 high=1
563 [State 0] Switching from state 0 to state 890
Copied 34928 (count=1)
Finalizing TB execution 890
s2e_dummyMainFunction
tcg-llvm-tb-889-8048a0e
563 [State 890] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 889 not yet applied), shell_len: 1024, eip: 0x00000000

563 [State 890] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
563 [State 890] Leaving buffer range @0xbfba3783, 44 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
563 [State 890] Killing state 890
563 [State 890] Terminating state 890 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
563 [State 890] Switching from state 890 to state 0
Copied 34928 (count=1)
Deleting state 890 0x0x32ff6610
563 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 889
>> fuzzInit: datum forking for value 890
>> fuzzInit: datum forking for value 890
563 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 890)
        (ReadLSB w32 0 v890_fuzz_symb_890)))
    state 891 with condition (Not (Eq false
         (Eq (w32 890)
             (ReadLSB w32 0 v890_fuzz_symb_890))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-890-8048a0e
Size=2 Low=0 splitIndex=1 high=1
563 [State 0] Switching from state 0 to state 891
Copied 34928 (count=1)
Finalizing TB execution 891
s2e_dummyMainFunction
tcg-llvm-tb-890-8048a0e
Firing timer event
563 [State 891] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 890 not yet applied), shell_len: 1024, eip: 0x00000000

563 [State 891] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
563 [State 891] Leaving buffer range @0xbfba3781, 44 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
563 [State 891] Killing state 891
563 [State 891] Terminating state 891 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
563 [State 891] Switching from state 891 to state 0
Copied 34928 (count=1)
Deleting state 891 0x0x32ff6610
564 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 890
>> fuzzInit: datum forking for value 891
>> fuzzInit: datum forking for value 891
564 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 891)
        (ReadLSB w32 0 v891_fuzz_symb_891)))
    state 892 with condition (Not (Eq false
         (Eq (w32 891)
             (ReadLSB w32 0 v891_fuzz_symb_891))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-891-8048a0e
Size=2 Low=0 splitIndex=1 high=1
564 [State 0] Switching from state 0 to state 892
Copied 34928 (count=1)
Finalizing TB execution 892
s2e_dummyMainFunction
tcg-llvm-tb-891-8048a0e
564 [State 892] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 891 not yet applied), shell_len: 1024, eip: 0x00000000

564 [State 892] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
564 [State 892] Leaving buffer range @0xbfba3783, 43 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
564 [State 892] Killing state 892
564 [State 892] Terminating state 892 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
564 [State 892] Switching from state 892 to state 0
Copied 34928 (count=1)
Deleting state 892 0x0x32ff6610
564 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 891
>> fuzzInit: datum forking for value 892
>> fuzzInit: datum forking for value 892
565 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 892)
        (ReadLSB w32 0 v892_fuzz_symb_892)))
    state 893 with condition (Not (Eq false
         (Eq (w32 892)
             (ReadLSB w32 0 v892_fuzz_symb_892))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-892-8048a0e
Size=2 Low=0 splitIndex=1 high=1
565 [State 0] Switching from state 0 to state 893
Copied 34928 (count=1)
Finalizing TB execution 893
s2e_dummyMainFunction
tcg-llvm-tb-892-8048a0e
Firing timer event
565 [State 893] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 892 not yet applied), shell_len: 1024, eip: 0x00000000

565 [State 893] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
565 [State 893] Leaving buffer range @0xbfba3781, 43 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
565 [State 893] Killing state 893
565 [State 893] Terminating state 893 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
565 [State 893] Switching from state 893 to state 0
Copied 34928 (count=1)
Deleting state 893 0x0x330b4d60
565 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 892
>> fuzzInit: datum forking for value 893
>> fuzzInit: datum forking for value 893
565 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 893)
        (ReadLSB w32 0 v893_fuzz_symb_893)))
    state 894 with condition (Not (Eq false
         (Eq (w32 893)
             (ReadLSB w32 0 v893_fuzz_symb_893))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-893-8048a0e
Size=2 Low=0 splitIndex=1 high=1
565 [State 0] Switching from state 0 to state 894
Copied 34928 (count=1)
Finalizing TB execution 894
s2e_dummyMainFunction
tcg-llvm-tb-893-8048a0e
565 [State 894] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 893 not yet applied), shell_len: 1024, eip: 0x00000000

565 [State 894] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
565 [State 894] Leaving buffer range @0xbfba3783, 42 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
565 [State 894] Killing state 894
565 [State 894] Terminating state 894 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
565 [State 894] Switching from state 894 to state 0
Copied 34928 (count=1)
Deleting state 894 0x0x330b4d60
Firing timer event
566 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 893
>> fuzzInit: datum forking for value 894
>> fuzzInit: datum forking for value 894
566 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 894)
        (ReadLSB w32 0 v894_fuzz_symb_894)))
    state 895 with condition (Not (Eq false
         (Eq (w32 894)
             (ReadLSB w32 0 v894_fuzz_symb_894))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-894-8048a0e
Size=2 Low=0 splitIndex=1 high=1
566 [State 0] Switching from state 0 to state 895
Copied 34928 (count=1)
Finalizing TB execution 895
s2e_dummyMainFunction
tcg-llvm-tb-894-8048a0e
566 [State 895] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 894 not yet applied), shell_len: 1024, eip: 0x00000000

566 [State 895] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
566 [State 895] Leaving buffer range @0xbfba3781, 42 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
566 [State 895] Killing state 895
566 [State 895] Terminating state 895 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
566 [State 895] Switching from state 895 to state 0
Copied 34928 (count=1)
Deleting state 895 0x0x3329db60
566 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 894
>> fuzzInit: datum forking for value 895
>> fuzzInit: datum forking for value 895
567 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 895)
        (ReadLSB w32 0 v895_fuzz_symb_895)))
    state 896 with condition (Not (Eq false
         (Eq (w32 895)
             (ReadLSB w32 0 v895_fuzz_symb_895))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-895-8048a0e
Size=2 Low=0 splitIndex=1 high=1
567 [State 0] Switching from state 0 to state 896
Copied 34928 (count=1)
Finalizing TB execution 896
s2e_dummyMainFunction
tcg-llvm-tb-895-8048a0e
Firing timer event
567 [State 896] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 895 not yet applied), shell_len: 1024, eip: 0x00000000

567 [State 896] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
567 [State 896] Leaving buffer range @0xbfba3783, 41 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
567 [State 896] Killing state 896
567 [State 896] Terminating state 896 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
567 [State 896] Switching from state 896 to state 0
Copied 34928 (count=1)
Deleting state 896 0x0x3329db60
567 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 895
>> fuzzInit: datum forking for value 896
>> fuzzInit: datum forking for value 896
567 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 896)
        (ReadLSB w32 0 v896_fuzz_symb_896)))
    state 897 with condition (Not (Eq false
         (Eq (w32 896)
             (ReadLSB w32 0 v896_fuzz_symb_896))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-896-8048a0e
Size=2 Low=0 splitIndex=1 high=1
567 [State 0] Switching from state 0 to state 897
Copied 34928 (count=1)
Finalizing TB execution 897
s2e_dummyMainFunction
tcg-llvm-tb-896-8048a0e
567 [State 897] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 896 not yet applied), shell_len: 1024, eip: 0x00000000

567 [State 897] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
567 [State 897] Leaving buffer range @0xbfba3781, 41 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
567 [State 897] Killing state 897
567 [State 897] Terminating state 897 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
567 [State 897] Switching from state 897 to state 0
Copied 34928 (count=1)
Deleting state 897 0x0x332f84a0
Firing timer event
568 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 896
>> fuzzInit: datum forking for value 897
>> fuzzInit: datum forking for value 897
568 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 897)
        (ReadLSB w32 0 v897_fuzz_symb_897)))
    state 898 with condition (Not (Eq false
         (Eq (w32 897)
             (ReadLSB w32 0 v897_fuzz_symb_897))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-897-8048a0e
Size=2 Low=0 splitIndex=1 high=1
568 [State 0] Switching from state 0 to state 898
Copied 34928 (count=1)
Finalizing TB execution 898
s2e_dummyMainFunction
tcg-llvm-tb-897-8048a0e
568 [State 898] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 897 not yet applied), shell_len: 1024, eip: 0x00000000

568 [State 898] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
568 [State 898] Leaving buffer range @0xbfba3783, 40 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
568 [State 898] Killing state 898
568 [State 898] Terminating state 898 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
568 [State 898] Switching from state 898 to state 0
Copied 34928 (count=1)
Deleting state 898 0x0x332f84a0
568 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 897
>> fuzzInit: datum forking for value 898
>> fuzzInit: datum forking for value 898
569 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 898)
        (ReadLSB w32 0 v898_fuzz_symb_898)))
    state 899 with condition (Not (Eq false
         (Eq (w32 898)
             (ReadLSB w32 0 v898_fuzz_symb_898))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-898-8048a0e
Size=2 Low=0 splitIndex=1 high=1
569 [State 0] Switching from state 0 to state 899
Copied 34928 (count=1)
Finalizing TB execution 899
s2e_dummyMainFunction
tcg-llvm-tb-898-8048a0e
Firing timer event
569 [State 899] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 898 not yet applied), shell_len: 1024, eip: 0x00000000

569 [State 899] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
569 [State 899] Leaving buffer range @0xbfba3781, 40 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
569 [State 899] Killing state 899
569 [State 899] Terminating state 899 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
569 [State 899] Switching from state 899 to state 0
Copied 34928 (count=1)
Deleting state 899 0x0x3337d9a0
569 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 898
>> fuzzInit: datum forking for value 899
>> fuzzInit: datum forking for value 899
>> fuzzInit: datum forking for value 899
569 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 899)
        (ReadLSB w32 0 v899_fuzz_symb_899)))
    state 900 with condition (Not (Eq false
         (Eq (w32 899)
             (ReadLSB w32 0 v899_fuzz_symb_899))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-899-8048a0e
Size=2 Low=0 splitIndex=1 high=1
569 [State 0] Switching from state 0 to state 900
Copied 34928 (count=1)
Finalizing TB execution 900
s2e_dummyMainFunction
tcg-llvm-tb-899-8048a0e
569 [State 900] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 899 not yet applied), shell_len: 1024, eip: 0x00000000

569 [State 900] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
569 [State 900] Leaving buffer range @0xbfba3783, 3f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
569 [State 900] Killing state 900
569 [State 900] Terminating state 900 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
569 [State 900] Switching from state 900 to state 0
Copied 34928 (count=1)
Deleting state 900 0x0x3337d9a0
570 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 899
>> fuzzInit: datum forking for value 900
>> fuzzInit: datum forking for value 900
570 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 900)
        (ReadLSB w32 0 v900_fuzz_symb_900)))
    state 901 with condition (Not (Eq false
         (Eq (w32 900)
             (ReadLSB w32 0 v900_fuzz_symb_900))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-900-8048a0e
Size=2 Low=0 splitIndex=1 high=1
570 [State 0] Switching from state 0 to state 901
Copied 34928 (count=1)
Finalizing TB execution 901
s2e_dummyMainFunction
tcg-llvm-tb-900-8048a0e
Firing timer event
570 [State 901] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 900 not yet applied), shell_len: 1024, eip: 0x00000000

570 [State 901] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
570 [State 901] Leaving buffer range @0xbfba3781, 3f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
570 [State 901] Killing state 901
570 [State 901] Terminating state 901 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
570 [State 901] Switching from state 901 to state 0
Copied 34928 (count=1)
Deleting state 901 0x0x332d5150
570 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 900
>> fuzzInit: datum forking for value 901
>> fuzzInit: datum forking for value 901
570 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 901)
        (ReadLSB w32 0 v901_fuzz_symb_901)))
    state 902 with condition (Not (Eq false
         (Eq (w32 901)
             (ReadLSB w32 0 v901_fuzz_symb_901))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-901-8048a0e
Size=2 Low=0 splitIndex=1 high=1
570 [State 0] Switching from state 0 to state 902
Copied 34928 (count=1)
Finalizing TB execution 902
s2e_dummyMainFunction
tcg-llvm-tb-901-8048a0e
571 [State 902] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 901 not yet applied), shell_len: 1024, eip: 0x00000000

571 [State 902] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
571 [State 902] Leaving buffer range @0xbfba3783, 3e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
571 [State 902] Killing state 902
571 [State 902] Terminating state 902 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
571 [State 902] Switching from state 902 to state 0
Copied 34928 (count=1)
Deleting state 902 0x0x3339b9f0
571 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 901
>> fuzzInit: datum forking for value 902
>> fuzzInit: datum forking for value 902
571 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 902)
        (ReadLSB w32 0 v902_fuzz_symb_902)))
    state 903 with condition (Not (Eq false
         (Eq (w32 902)
             (ReadLSB w32 0 v902_fuzz_symb_902))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-902-8048a0e
Size=2 Low=0 splitIndex=1 high=1
571 [State 0] Switching from state 0 to state 903
Copied 34928 (count=1)
Finalizing TB execution 903
s2e_dummyMainFunction
tcg-llvm-tb-902-8048a0e
Firing timer event
571 [State 903] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 902 not yet applied), shell_len: 1024, eip: 0x00000000

571 [State 903] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
571 [State 903] Leaving buffer range @0xbfba3781, 3e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
571 [State 903] Killing state 903
571 [State 903] Terminating state 903 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
571 [State 903] Switching from state 903 to state 0
Copied 34928 (count=1)
Deleting state 903 0x0x33370250
572 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 902
>> fuzzInit: datum forking for value 903
>> fuzzInit: datum forking for value 903
572 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 903)
        (ReadLSB w32 0 v903_fuzz_symb_903)))
    state 904 with condition (Not (Eq false
         (Eq (w32 903)
             (ReadLSB w32 0 v903_fuzz_symb_903))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-903-8048a0e
Size=2 Low=0 splitIndex=1 high=1
572 [State 0] Switching from state 0 to state 904
Copied 34928 (count=1)
Finalizing TB execution 904
s2e_dummyMainFunction
tcg-llvm-tb-903-8048a0e
572 [State 904] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 903 not yet applied), shell_len: 1024, eip: 0x00000000

572 [State 904] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
572 [State 904] Leaving buffer range @0xbfba3783, 3d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
Firing timer event
572 [State 904] Killing state 904
572 [State 904] Terminating state 904 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
572 [State 904] Switching from state 904 to state 0
Copied 34928 (count=1)
Deleting state 904 0x0x33370250
572 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 903
>> fuzzInit: datum forking for value 904
>> fuzzInit: datum forking for value 904
573 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 904)
        (ReadLSB w32 0 v904_fuzz_symb_904)))
    state 905 with condition (Not (Eq false
         (Eq (w32 904)
             (ReadLSB w32 0 v904_fuzz_symb_904))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-904-8048a0e
Size=2 Low=0 splitIndex=1 high=1
573 [State 0] Switching from state 0 to state 905
Copied 34928 (count=1)
Finalizing TB execution 905
s2e_dummyMainFunction
tcg-llvm-tb-904-8048a0e
573 [State 905] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 904 not yet applied), shell_len: 1024, eip: 0x00000000

573 [State 905] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
573 [State 905] Leaving buffer range @0xbfba3781, 3d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
573 [State 905] Killing state 905
573 [State 905] Terminating state 905 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
573 [State 905] Switching from state 905 to state 0
Copied 34928 (count=1)
Deleting state 905 0x0x3360b140
573 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 904
>> fuzzInit: datum forking for value 905
>> fuzzInit: datum forking for value 905
573 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 905)
        (ReadLSB w32 0 v905_fuzz_symb_905)))
    state 906 with condition (Not (Eq false
         (Eq (w32 905)
             (ReadLSB w32 0 v905_fuzz_symb_905))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-905-8048a0e
Size=2 Low=0 splitIndex=1 high=1
573 [State 0] Switching from state 0 to state 906
Copied 34928 (count=1)
Finalizing TB execution 906
s2e_dummyMainFunction
tcg-llvm-tb-905-8048a0e
Firing timer event
573 [State 906] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 905 not yet applied), shell_len: 1024, eip: 0x00000000

573 [State 906] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
574 [State 906] Leaving buffer range @0xbfba3783, 3c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
574 [State 906] Killing state 906
574 [State 906] Terminating state 906 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
574 [State 906] Switching from state 906 to state 0
Copied 34928 (count=1)
Deleting state 906 0x0x336143c0
574 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 905
>> fuzzInit: datum forking for value 906
>> fuzzInit: datum forking for value 906
574 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 906)
        (ReadLSB w32 0 v906_fuzz_symb_906)))
    state 907 with condition (Not (Eq false
         (Eq (w32 906)
             (ReadLSB w32 0 v906_fuzz_symb_906))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-906-8048a0e
Size=2 Low=0 splitIndex=1 high=1
574 [State 0] Switching from state 0 to state 907
Copied 34928 (count=1)
Finalizing TB execution 907
s2e_dummyMainFunction
tcg-llvm-tb-906-8048a0e
574 [State 907] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 906 not yet applied), shell_len: 1024, eip: 0x00000000

574 [State 907] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
574 [State 907] Leaving buffer range @0xbfba3781, 3c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
574 [State 907] Killing state 907
574 [State 907] Terminating state 907 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
574 [State 907] Switching from state 907 to state 0
Copied 34928 (count=1)
Deleting state 907 0x0x336143c0
Firing timer event
575 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 906
>> fuzzInit: datum forking for value 907
>> fuzzInit: datum forking for value 907
575 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 907)
        (ReadLSB w32 0 v907_fuzz_symb_907)))
    state 908 with condition (Not (Eq false
         (Eq (w32 907)
             (ReadLSB w32 0 v907_fuzz_symb_907))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-907-8048a0e
Size=2 Low=0 splitIndex=1 high=1
575 [State 0] Switching from state 0 to state 908
Copied 34928 (count=1)
Finalizing TB execution 908
s2e_dummyMainFunction
tcg-llvm-tb-907-8048a0e
575 [State 908] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 907 not yet applied), shell_len: 1024, eip: 0x00000000

575 [State 908] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
575 [State 908] Leaving buffer range @0xbfba3783, 3b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
575 [State 908] Killing state 908
575 [State 908] Terminating state 908 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
575 [State 908] Switching from state 908 to state 0
Copied 34928 (count=1)
Deleting state 908 0x0x336143c0
575 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 907
>> fuzzInit: datum forking for value 908
>> fuzzInit: datum forking for value 908
576 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 908)
        (ReadLSB w32 0 v908_fuzz_symb_908)))
    state 909 with condition (Not (Eq false
         (Eq (w32 908)
             (ReadLSB w32 0 v908_fuzz_symb_908))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-908-8048a0e
Size=2 Low=0 splitIndex=1 high=1
576 [State 0] Switching from state 0 to state 909
Copied 34928 (count=1)
Finalizing TB execution 909
s2e_dummyMainFunction
tcg-llvm-tb-908-8048a0e
Firing timer event
576 [State 909] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 908 not yet applied), shell_len: 1024, eip: 0x00000000

576 [State 909] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
576 [State 909] Leaving buffer range @0xbfba3781, 3b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
576 [State 909] Killing state 909
576 [State 909] Terminating state 909 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
576 [State 909] Switching from state 909 to state 0
Copied 34928 (count=1)
Deleting state 909 0x0x3338dfa0
576 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 908
>> fuzzInit: datum forking for value 909
>> fuzzInit: datum forking for value 909
576 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 909)
        (ReadLSB w32 0 v909_fuzz_symb_909)))
    state 910 with condition (Not (Eq false
         (Eq (w32 909)
             (ReadLSB w32 0 v909_fuzz_symb_909))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-909-8048a0e
Size=2 Low=0 splitIndex=1 high=1
576 [State 0] Switching from state 0 to state 910
Copied 34928 (count=1)
Finalizing TB execution 910
s2e_dummyMainFunction
tcg-llvm-tb-909-8048a0e
576 [State 910] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 909 not yet applied), shell_len: 1024, eip: 0x00000000

576 [State 910] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
576 [State 910] Leaving buffer range @0xbfba3783, 3a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
576 [State 910] Killing state 910
576 [State 910] Terminating state 910 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
576 [State 910] Switching from state 910 to state 0
Copied 34928 (count=1)
Deleting state 910 0x0x3338dfa0
577 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 909
>> fuzzInit: datum forking for value 910
>> fuzzInit: datum forking for value 910
577 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 910)
        (ReadLSB w32 0 v910_fuzz_symb_910)))
    state 911 with condition (Not (Eq false
         (Eq (w32 910)
             (ReadLSB w32 0 v910_fuzz_symb_910))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-910-8048a0e
Size=2 Low=0 splitIndex=1 high=1
577 [State 0] Switching from state 0 to state 911
Copied 34928 (count=1)
Finalizing TB execution 911
s2e_dummyMainFunction
tcg-llvm-tb-910-8048a0e
Firing timer event
577 [State 911] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 910 not yet applied), shell_len: 1024, eip: 0x00000000

577 [State 911] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
577 [State 911] Leaving buffer range @0xbfba3781, 3a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
577 [State 911] Killing state 911
577 [State 911] Terminating state 911 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
577 [State 911] Switching from state 911 to state 0
Copied 34928 (count=1)
Deleting state 911 0x0x3338dfa0
577 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 910
>> fuzzInit: datum forking for value 911
>> fuzzInit: datum forking for value 911
578 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 911)
        (ReadLSB w32 0 v911_fuzz_symb_911)))
    state 912 with condition (Not (Eq false
         (Eq (w32 911)
             (ReadLSB w32 0 v911_fuzz_symb_911))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-911-8048a0e
Size=2 Low=0 splitIndex=1 high=1
578 [State 0] Switching from state 0 to state 912
Copied 34928 (count=1)
Finalizing TB execution 912
s2e_dummyMainFunction
tcg-llvm-tb-911-8048a0e
578 [State 912] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 911 not yet applied), shell_len: 1024, eip: 0x00000000

578 [State 912] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
578 [State 912] Leaving buffer range @0xbfba3783, 39 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
578 [State 912] Killing state 912
578 [State 912] Terminating state 912 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
578 [State 912] Switching from state 912 to state 0
Copied 34928 (count=1)
Deleting state 912 0x0x3338dfa0
Firing timer event
578 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 911
>> fuzzInit: datum forking for value 912
>> fuzzInit: datum forking for value 912
578 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 912)
        (ReadLSB w32 0 v912_fuzz_symb_912)))
    state 913 with condition (Not (Eq false
         (Eq (w32 912)
             (ReadLSB w32 0 v912_fuzz_symb_912))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-912-8048a0e
Size=2 Low=0 splitIndex=1 high=1
578 [State 0] Switching from state 0 to state 913
Copied 34928 (count=1)
Finalizing TB execution 913
s2e_dummyMainFunction
tcg-llvm-tb-912-8048a0e
578 [State 913] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 912 not yet applied), shell_len: 1024, eip: 0x00000000

578 [State 913] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
578 [State 913] Leaving buffer range @0xbfba3781, 39 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
578 [State 913] Killing state 913
578 [State 913] Terminating state 913 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
578 [State 913] Switching from state 913 to state 0
Copied 34928 (count=1)
Deleting state 913 0x0x33898800
579 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 912
>> fuzzInit: datum forking for value 913
>> fuzzInit: datum forking for value 913
579 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 913)
        (ReadLSB w32 0 v913_fuzz_symb_913)))
    state 914 with condition (Not (Eq false
         (Eq (w32 913)
             (ReadLSB w32 0 v913_fuzz_symb_913))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-913-8048a0e
Size=2 Low=0 splitIndex=1 high=1
579 [State 0] Switching from state 0 to state 914
Copied 34928 (count=1)
Finalizing TB execution 914
s2e_dummyMainFunction
tcg-llvm-tb-913-8048a0e
Firing timer event
579 [State 914] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 913 not yet applied), shell_len: 1024, eip: 0x00000000

579 [State 914] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
579 [State 914] Leaving buffer range @0xbfba3783, 38 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
579 [State 914] Killing state 914
579 [State 914] Terminating state 914 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
579 [State 914] Switching from state 914 to state 0
Copied 34928 (count=1)
Deleting state 914 0x0x33898800
579 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 913
>> fuzzInit: datum forking for value 914
>> fuzzInit: datum forking for value 914
579 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 914)
        (ReadLSB w32 0 v914_fuzz_symb_914)))
    state 915 with condition (Not (Eq false
         (Eq (w32 914)
             (ReadLSB w32 0 v914_fuzz_symb_914))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-914-8048a0e
Size=2 Low=0 splitIndex=1 high=1
579 [State 0] Switching from state 0 to state 915
Copied 34928 (count=1)
Finalizing TB execution 915
s2e_dummyMainFunction
tcg-llvm-tb-914-8048a0e
580 [State 915] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 914 not yet applied), shell_len: 1024, eip: 0x00000000

580 [State 915] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
580 [State 915] Leaving buffer range @0xbfba3781, 38 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
580 [State 915] Killing state 915
580 [State 915] Terminating state 915 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
580 [State 915] Switching from state 915 to state 0
Copied 34928 (count=1)
Deleting state 915 0x0x3360d840
Firing timer event
580 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 914
>> fuzzInit: datum forking for value 915
>> fuzzInit: datum forking for value 915
580 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 915)
        (ReadLSB w32 0 v915_fuzz_symb_915)))
    state 916 with condition (Not (Eq false
         (Eq (w32 915)
             (ReadLSB w32 0 v915_fuzz_symb_915))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-915-8048a0e
Size=2 Low=0 splitIndex=1 high=1
580 [State 0] Switching from state 0 to state 916
Copied 34928 (count=1)
Finalizing TB execution 916
s2e_dummyMainFunction
tcg-llvm-tb-915-8048a0e
580 [State 916] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 915 not yet applied), shell_len: 1024, eip: 0x00000000

580 [State 916] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
580 [State 916] Leaving buffer range @0xbfba3783, 37 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
580 [State 916] Killing state 916
580 [State 916] Terminating state 916 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
580 [State 916] Switching from state 916 to state 0
Copied 34928 (count=1)
Deleting state 916 0x0x3360d840
581 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 915
>> fuzzInit: datum forking for value 916
>> fuzzInit: datum forking for value 916
581 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 916)
        (ReadLSB w32 0 v916_fuzz_symb_916)))
    state 917 with condition (Not (Eq false
         (Eq (w32 916)
             (ReadLSB w32 0 v916_fuzz_symb_916))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-916-8048a0e
Size=2 Low=0 splitIndex=1 high=1
581 [State 0] Switching from state 0 to state 917
Copied 34928 (count=1)
Finalizing TB execution 917
s2e_dummyMainFunction
tcg-llvm-tb-916-8048a0e
Firing timer event
581 [State 917] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 916 not yet applied), shell_len: 1024, eip: 0x00000000

581 [State 917] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
581 [State 917] Leaving buffer range @0xbfba3781, 37 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
581 [State 917] Killing state 917
581 [State 917] Terminating state 917 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
581 [State 917] Switching from state 917 to state 0
Copied 34928 (count=1)
Deleting state 917 0x0x33721990
581 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 916
>> fuzzInit: datum forking for value 917
>> fuzzInit: datum forking for value 917
582 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 917)
        (ReadLSB w32 0 v917_fuzz_symb_917)))
    state 918 with condition (Not (Eq false
         (Eq (w32 917)
             (ReadLSB w32 0 v917_fuzz_symb_917))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-917-8048a0e
Size=2 Low=0 splitIndex=1 high=1
582 [State 0] Switching from state 0 to state 918
Copied 34928 (count=1)
Finalizing TB execution 918
s2e_dummyMainFunction
tcg-llvm-tb-917-8048a0e
582 [State 918] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 917 not yet applied), shell_len: 1024, eip: 0x00000000

582 [State 918] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
582 [State 918] Leaving buffer range @0xbfba3783, 36 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
582 [State 918] Killing state 918
582 [State 918] Terminating state 918 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
582 [State 918] Switching from state 918 to state 0
Copied 34928 (count=1)
Deleting state 918 0x0x33a20480
Firing timer event
582 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 917
>> fuzzInit: datum forking for value 918
>> fuzzInit: datum forking for value 918
582 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 918)
        (ReadLSB w32 0 v918_fuzz_symb_918)))
    state 919 with condition (Not (Eq false
         (Eq (w32 918)
             (ReadLSB w32 0 v918_fuzz_symb_918))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-918-8048a0e
Size=2 Low=0 splitIndex=1 high=1
582 [State 0] Switching from state 0 to state 919
Copied 34928 (count=1)
Finalizing TB execution 919
s2e_dummyMainFunction
tcg-llvm-tb-918-8048a0e
582 [State 919] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 918 not yet applied), shell_len: 1024, eip: 0x00000000

582 [State 919] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
582 [State 919] Leaving buffer range @0xbfba3781, 36 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
583 [State 919] Killing state 919
583 [State 919] Terminating state 919 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
583 [State 919] Switching from state 919 to state 0
Copied 34928 (count=1)
Deleting state 919 0x0x33a20480
583 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 918
>> fuzzInit: datum forking for value 919
>> fuzzInit: datum forking for value 919
583 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 919)
        (ReadLSB w32 0 v919_fuzz_symb_919)))
    state 920 with condition (Not (Eq false
         (Eq (w32 919)
             (ReadLSB w32 0 v919_fuzz_symb_919))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-919-8048a0e
Size=2 Low=0 splitIndex=1 high=1
583 [State 0] Switching from state 0 to state 920
Copied 34928 (count=1)
Finalizing TB execution 920
s2e_dummyMainFunction
tcg-llvm-tb-919-8048a0e
Firing timer event
583 [State 920] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 919 not yet applied), shell_len: 1024, eip: 0x00000000

583 [State 920] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
583 [State 920] Leaving buffer range @0xbfba3783, 35 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
583 [State 920] Killing state 920
583 [State 920] Terminating state 920 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
583 [State 920] Switching from state 920 to state 0
Copied 34928 (count=1)
Deleting state 920 0x0x3387e430
583 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 919
>> fuzzInit: datum forking for value 920
>> fuzzInit: datum forking for value 920
584 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 920)
        (ReadLSB w32 0 v920_fuzz_symb_920)))
    state 921 with condition (Not (Eq false
         (Eq (w32 920)
             (ReadLSB w32 0 v920_fuzz_symb_920))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-920-8048a0e
Size=2 Low=0 splitIndex=1 high=1
584 [State 0] Switching from state 0 to state 921
Copied 34928 (count=1)
Finalizing TB execution 921
s2e_dummyMainFunction
tcg-llvm-tb-920-8048a0e
584 [State 921] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 920 not yet applied), shell_len: 1024, eip: 0x00000000

584 [State 921] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
584 [State 921] Leaving buffer range @0xbfba3781, 35 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
584 [State 921] Killing state 921
584 [State 921] Terminating state 921 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
584 [State 921] Switching from state 921 to state 0
Copied 34928 (count=1)
Deleting state 921 0x0x3387e430
Firing timer event
584 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 920
>> fuzzInit: datum forking for value 921
>> fuzzInit: datum forking for value 921
584 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 921)
        (ReadLSB w32 0 v921_fuzz_symb_921)))
    state 922 with condition (Not (Eq false
         (Eq (w32 921)
             (ReadLSB w32 0 v921_fuzz_symb_921))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-921-8048a0e
Size=2 Low=0 splitIndex=1 high=1
584 [State 0] Switching from state 0 to state 922
Copied 34928 (count=1)
Finalizing TB execution 922
s2e_dummyMainFunction
tcg-llvm-tb-921-8048a0e
584 [State 922] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 921 not yet applied), shell_len: 1024, eip: 0x00000000

584 [State 922] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
585 [State 922] Leaving buffer range @0xbfba3783, 34 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
585 [State 922] Killing state 922
585 [State 922] Terminating state 922 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
585 [State 922] Switching from state 922 to state 0
Copied 34928 (count=1)
Deleting state 922 0x0x33a93f40
585 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 921
>> fuzzInit: datum forking for value 922
>> fuzzInit: datum forking for value 922
585 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 922)
        (ReadLSB w32 0 v922_fuzz_symb_922)))
    state 923 with condition (Not (Eq false
         (Eq (w32 922)
             (ReadLSB w32 0 v922_fuzz_symb_922))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-922-8048a0e
Size=2 Low=0 splitIndex=1 high=1
585 [State 0] Switching from state 0 to state 923
Copied 34928 (count=1)
Finalizing TB execution 923
s2e_dummyMainFunction
tcg-llvm-tb-922-8048a0e
Firing timer event
585 [State 923] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 922 not yet applied), shell_len: 1024, eip: 0x00000000

585 [State 923] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
585 [State 923] Leaving buffer range @0xbfba3781, 34 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
585 [State 923] Killing state 923
585 [State 923] Terminating state 923 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
585 [State 923] Switching from state 923 to state 0
Copied 34928 (count=1)
Deleting state 923 0x0x33c4a9e0
585 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 922
>> fuzzInit: datum forking for value 923
>> fuzzInit: datum forking for value 923
586 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 923)
        (ReadLSB w32 0 v923_fuzz_symb_923)))
    state 924 with condition (Not (Eq false
         (Eq (w32 923)
             (ReadLSB w32 0 v923_fuzz_symb_923))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-923-8048a0e
Size=2 Low=0 splitIndex=1 high=1
586 [State 0] Switching from state 0 to state 924
Copied 34928 (count=1)
Finalizing TB execution 924
s2e_dummyMainFunction
tcg-llvm-tb-923-8048a0e
586 [State 924] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 923 not yet applied), shell_len: 1024, eip: 0x00000000

586 [State 924] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
586 [State 924] Leaving buffer range @0xbfba3783, 33 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
586 [State 924] Killing state 924
586 [State 924] Terminating state 924 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
586 [State 924] Switching from state 924 to state 0
Copied 34928 (count=1)
Deleting state 924 0x0x33c4a9e0
Firing timer event
586 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 923
>> fuzzInit: datum forking for value 924
>> fuzzInit: datum forking for value 924
586 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 924)
        (ReadLSB w32 0 v924_fuzz_symb_924)))
    state 925 with condition (Not (Eq false
         (Eq (w32 924)
             (ReadLSB w32 0 v924_fuzz_symb_924))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-924-8048a0e
Size=2 Low=0 splitIndex=1 high=1
586 [State 0] Switching from state 0 to state 925
Copied 34928 (count=1)
Finalizing TB execution 925
s2e_dummyMainFunction
tcg-llvm-tb-924-8048a0e
586 [State 925] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 924 not yet applied), shell_len: 1024, eip: 0x00000000

586 [State 925] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
586 [State 925] Leaving buffer range @0xbfba3781, 33 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
587 [State 925] Killing state 925
587 [State 925] Terminating state 925 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
587 [State 925] Switching from state 925 to state 0
Copied 34928 (count=1)
Deleting state 925 0x0x33c4a9e0
587 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 924
>> fuzzInit: datum forking for value 925
>> fuzzInit: datum forking for value 925
587 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 925)
        (ReadLSB w32 0 v925_fuzz_symb_925)))
    state 926 with condition (Not (Eq false
         (Eq (w32 925)
             (ReadLSB w32 0 v925_fuzz_symb_925))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-925-8048a0e
Size=2 Low=0 splitIndex=1 high=1
587 [State 0] Switching from state 0 to state 926
Copied 34928 (count=1)
Finalizing TB execution 926
s2e_dummyMainFunction
tcg-llvm-tb-925-8048a0e
Firing timer event
587 [State 926] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 925 not yet applied), shell_len: 1024, eip: 0x00000000

587 [State 926] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
587 [State 926] Leaving buffer range @0xbfba3783, 32 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
587 [State 926] Killing state 926
587 [State 926] Terminating state 926 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
587 [State 926] Switching from state 926 to state 0
Copied 34928 (count=1)
Deleting state 926 0x0x33c4a9e0
587 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 925
>> fuzzInit: datum forking for value 926
>> fuzzInit: datum forking for value 926
588 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 926)
        (ReadLSB w32 0 v926_fuzz_symb_926)))
    state 927 with condition (Not (Eq false
         (Eq (w32 926)
             (ReadLSB w32 0 v926_fuzz_symb_926))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-926-8048a0e
Size=2 Low=0 splitIndex=1 high=1
588 [State 0] Switching from state 0 to state 927
Copied 34928 (count=1)
Finalizing TB execution 927
s2e_dummyMainFunction
tcg-llvm-tb-926-8048a0e
588 [State 927] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 926 not yet applied), shell_len: 1024, eip: 0x00000000

588 [State 927] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
588 [State 927] Leaving buffer range @0xbfba3781, 32 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
588 [State 927] Killing state 927
588 [State 927] Terminating state 927 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
588 [State 927] Switching from state 927 to state 0
Copied 34928 (count=1)
Deleting state 927 0x0x33da9210
588 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 926
>> fuzzInit: datum forking for value 927
>> fuzzInit: datum forking for value 927
588 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 927)
        (ReadLSB w32 0 v927_fuzz_symb_927)))
    state 928 with condition (Not (Eq false
         (Eq (w32 927)
             (ReadLSB w32 0 v927_fuzz_symb_927))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-927-8048a0e
Size=2 Low=0 splitIndex=1 high=1
588 [State 0] Switching from state 0 to state 928
Copied 34928 (count=1)
Finalizing TB execution 928
s2e_dummyMainFunction
tcg-llvm-tb-927-8048a0e
Firing timer event
588 [State 928] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 927 not yet applied), shell_len: 1024, eip: 0x00000000

588 [State 928] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
588 [State 928] Leaving buffer range @0xbfba3783, 31 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
589 [State 928] Killing state 928
589 [State 928] Terminating state 928 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
589 [State 928] Switching from state 928 to state 0
Copied 34928 (count=1)
Deleting state 928 0x0x3306cf80
589 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 927
>> fuzzInit: datum forking for value 928
>> fuzzInit: datum forking for value 928
589 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 928)
        (ReadLSB w32 0 v928_fuzz_symb_928)))
    state 929 with condition (Not (Eq false
         (Eq (w32 928)
             (ReadLSB w32 0 v928_fuzz_symb_928))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-928-8048a0e
Size=2 Low=0 splitIndex=1 high=1
589 [State 0] Switching from state 0 to state 929
Copied 34928 (count=1)
Finalizing TB execution 929
s2e_dummyMainFunction
tcg-llvm-tb-928-8048a0e
589 [State 929] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 928 not yet applied), shell_len: 1024, eip: 0x00000000

589 [State 929] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
589 [State 929] Leaving buffer range @0xbfba3781, 31 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
589 [State 929] Killing state 929
589 [State 929] Terminating state 929 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
589 [State 929] Switching from state 929 to state 0
Copied 34928 (count=1)
Deleting state 929 0x0x3306cf80
589 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 928
>> fuzzInit: datum forking for value 929
>> fuzzInit: datum forking for value 929
590 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 929)
        (ReadLSB w32 0 v929_fuzz_symb_929)))
    state 930 with condition (Not (Eq false
         (Eq (w32 929)
             (ReadLSB w32 0 v929_fuzz_symb_929))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-929-8048a0e
Size=2 Low=0 splitIndex=1 high=1
590 [State 0] Switching from state 0 to state 930
Copied 34928 (count=1)
Finalizing TB execution 930
s2e_dummyMainFunction
tcg-llvm-tb-929-8048a0e
Firing timer event
590 [State 930] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 929 not yet applied), shell_len: 1024, eip: 0x00000000

590 [State 930] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
590 [State 930] Leaving buffer range @0xbfba3783, 30 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
590 [State 930] Killing state 930
590 [State 930] Terminating state 930 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
590 [State 930] Switching from state 930 to state 0
Copied 34928 (count=1)
Deleting state 930 0x0x33d413c0
590 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 929
>> fuzzInit: datum forking for value 930
>> fuzzInit: datum forking for value 930
590 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 930)
        (ReadLSB w32 0 v930_fuzz_symb_930)))
    state 931 with condition (Not (Eq false
         (Eq (w32 930)
             (ReadLSB w32 0 v930_fuzz_symb_930))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-930-8048a0e
Size=2 Low=0 splitIndex=1 high=1
590 [State 0] Switching from state 0 to state 931
Copied 34928 (count=1)
Finalizing TB execution 931
s2e_dummyMainFunction
tcg-llvm-tb-930-8048a0e
590 [State 931] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 930 not yet applied), shell_len: 1024, eip: 0x00000000

590 [State 931] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
590 [State 931] Leaving buffer range @0xbfba3781, 30 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
591 [State 931] Killing state 931
591 [State 931] Terminating state 931 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
591 [State 931] Switching from state 931 to state 0
Copied 34928 (count=1)
Deleting state 931 0x0x33d413c0
591 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 930
>> fuzzInit: datum forking for value 931
>> fuzzInit: datum forking for value 931
591 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 931)
        (ReadLSB w32 0 v931_fuzz_symb_931)))
    state 932 with condition (Not (Eq false
         (Eq (w32 931)
             (ReadLSB w32 0 v931_fuzz_symb_931))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-931-8048a0e
Size=2 Low=0 splitIndex=1 high=1
591 [State 0] Switching from state 0 to state 932
Copied 34928 (count=1)
Finalizing TB execution 932
s2e_dummyMainFunction
tcg-llvm-tb-931-8048a0e
Firing timer event
591 [State 932] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 931 not yet applied), shell_len: 1024, eip: 0x00000000

591 [State 932] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
591 [State 932] Leaving buffer range @0xbfba3783, 2f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
591 [State 932] Killing state 932
591 [State 932] Terminating state 932 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
591 [State 932] Switching from state 932 to state 0
Copied 34928 (count=1)
Deleting state 932 0x0x33efabd0
591 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 931
>> fuzzInit: datum forking for value 932
>> fuzzInit: datum forking for value 932
592 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 932)
        (ReadLSB w32 0 v932_fuzz_symb_932)))
    state 933 with condition (Not (Eq false
         (Eq (w32 932)
             (ReadLSB w32 0 v932_fuzz_symb_932))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-932-8048a0e
Size=2 Low=0 splitIndex=1 high=1
592 [State 0] Switching from state 0 to state 933
Copied 34928 (count=1)
Finalizing TB execution 933
s2e_dummyMainFunction
tcg-llvm-tb-932-8048a0e
592 [State 933] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 932 not yet applied), shell_len: 1024, eip: 0x00000000

592 [State 933] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
592 [State 933] Leaving buffer range @0xbfba3781, 2f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
592 [State 933] Killing state 933
592 [State 933] Terminating state 933 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
592 [State 933] Switching from state 933 to state 0
Copied 34928 (count=1)
Deleting state 933 0x0x33ec2d50
Firing timer event
592 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 932
>> fuzzInit: datum forking for value 933
>> fuzzInit: datum forking for value 933
592 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 933)
        (ReadLSB w32 0 v933_fuzz_symb_933)))
    state 934 with condition (Not (Eq false
         (Eq (w32 933)
             (ReadLSB w32 0 v933_fuzz_symb_933))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-933-8048a0e
Size=2 Low=0 splitIndex=1 high=1
592 [State 0] Switching from state 0 to state 934
Copied 34928 (count=1)
Finalizing TB execution 934
s2e_dummyMainFunction
tcg-llvm-tb-933-8048a0e
592 [State 934] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 933 not yet applied), shell_len: 1024, eip: 0x00000000

592 [State 934] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
593 [State 934] Leaving buffer range @0xbfba3783, 2e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
593 [State 934] Killing state 934
593 [State 934] Terminating state 934 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
593 [State 934] Switching from state 934 to state 0
Copied 34928 (count=1)
Deleting state 934 0x0x33ec2d50
593 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 933
>> fuzzInit: datum forking for value 934
>> fuzzInit: datum forking for value 934
593 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 934)
        (ReadLSB w32 0 v934_fuzz_symb_934)))
    state 935 with condition (Not (Eq false
         (Eq (w32 934)
             (ReadLSB w32 0 v934_fuzz_symb_934))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-934-8048a0e
Size=2 Low=0 splitIndex=1 high=1
593 [State 0] Switching from state 0 to state 935
Copied 34928 (count=1)
Finalizing TB execution 935
s2e_dummyMainFunction
tcg-llvm-tb-934-8048a0e
Firing timer event
593 [State 935] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 934 not yet applied), shell_len: 1024, eip: 0x00000000

593 [State 935] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
593 [State 935] Leaving buffer range @0xbfba3781, 2e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
593 [State 935] Killing state 935
593 [State 935] Terminating state 935 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
593 [State 935] Switching from state 935 to state 0
Copied 34928 (count=1)
Deleting state 935 0x0x33e1c9c0
593 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 934
>> fuzzInit: datum forking for value 935
>> fuzzInit: datum forking for value 935
594 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 935)
        (ReadLSB w32 0 v935_fuzz_symb_935)))
    state 936 with condition (Not (Eq false
         (Eq (w32 935)
             (ReadLSB w32 0 v935_fuzz_symb_935))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-935-8048a0e
Size=2 Low=0 splitIndex=1 high=1
594 [State 0] Switching from state 0 to state 936
Copied 34928 (count=1)
Finalizing TB execution 936
s2e_dummyMainFunction
tcg-llvm-tb-935-8048a0e
594 [State 936] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 935 not yet applied), shell_len: 1024, eip: 0x00000000

594 [State 936] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
594 [State 936] Leaving buffer range @0xbfba3783, 2d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
594 [State 936] Killing state 936
594 [State 936] Terminating state 936 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
594 [State 936] Switching from state 936 to state 0
Copied 34928 (count=1)
Deleting state 936 0x0x33e1c9c0
594 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 935
>> fuzzInit: datum forking for value 936
>> fuzzInit: datum forking for value 936
594 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 936)
        (ReadLSB w32 0 v936_fuzz_symb_936)))
    state 937 with condition (Not (Eq false
         (Eq (w32 936)
             (ReadLSB w32 0 v936_fuzz_symb_936))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-936-8048a0e
Size=2 Low=0 splitIndex=1 high=1
594 [State 0] Switching from state 0 to state 937
Copied 34928 (count=1)
Finalizing TB execution 937
s2e_dummyMainFunction
tcg-llvm-tb-936-8048a0e
Firing timer event
594 [State 937] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 936 not yet applied), shell_len: 1024, eip: 0x00000000

594 [State 937] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
595 [State 937] Leaving buffer range @0xbfba3781, 2d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
595 [State 937] Killing state 937
595 [State 937] Terminating state 937 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
595 [State 937] Switching from state 937 to state 0
Copied 34928 (count=1)
Deleting state 937 0x0x33e1c9c0
595 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 936
>> fuzzInit: datum forking for value 937
>> fuzzInit: datum forking for value 937
595 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 937)
        (ReadLSB w32 0 v937_fuzz_symb_937)))
    state 938 with condition (Not (Eq false
         (Eq (w32 937)
             (ReadLSB w32 0 v937_fuzz_symb_937))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-937-8048a0e
Size=2 Low=0 splitIndex=1 high=1
595 [State 0] Switching from state 0 to state 938
Copied 34928 (count=1)
Finalizing TB execution 938
s2e_dummyMainFunction
tcg-llvm-tb-937-8048a0e
595 [State 938] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 937 not yet applied), shell_len: 1024, eip: 0x00000000

595 [State 938] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
595 [State 938] Leaving buffer range @0xbfba3783, 2c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
595 [State 938] Killing state 938
595 [State 938] Terminating state 938 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
595 [State 938] Switching from state 938 to state 0
Copied 34928 (count=1)
Deleting state 938 0x0x340a6db0
595 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 937
>> fuzzInit: datum forking for value 938
>> fuzzInit: datum forking for value 938
596 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 938)
        (ReadLSB w32 0 v938_fuzz_symb_938)))
    state 939 with condition (Not (Eq false
         (Eq (w32 938)
             (ReadLSB w32 0 v938_fuzz_symb_938))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-938-8048a0e
Size=2 Low=0 splitIndex=1 high=1
596 [State 0] Switching from state 0 to state 939
Copied 34928 (count=1)
Finalizing TB execution 939
s2e_dummyMainFunction
tcg-llvm-tb-938-8048a0e
Firing timer event
596 [State 939] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 938 not yet applied), shell_len: 1024, eip: 0x00000000

596 [State 939] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
596 [State 939] Leaving buffer range @0xbfba3781, 2c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
596 [State 939] Killing state 939
596 [State 939] Terminating state 939 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
596 [State 939] Switching from state 939 to state 0
Copied 34928 (count=1)
Deleting state 939 0x0x340a6db0
596 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 938
>> fuzzInit: datum forking for value 939
>> fuzzInit: datum forking for value 939
596 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 939)
        (ReadLSB w32 0 v939_fuzz_symb_939)))
    state 940 with condition (Not (Eq false
         (Eq (w32 939)
             (ReadLSB w32 0 v939_fuzz_symb_939))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-939-8048a0e
Size=2 Low=0 splitIndex=1 high=1
596 [State 0] Switching from state 0 to state 940
Copied 34928 (count=1)
Finalizing TB execution 940
s2e_dummyMainFunction
tcg-llvm-tb-939-8048a0e
596 [State 940] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 939 not yet applied), shell_len: 1024, eip: 0x00000000

596 [State 940] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
596 [State 940] Leaving buffer range @0xbfba3783, 2b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
597 [State 940] Killing state 940
597 [State 940] Terminating state 940 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
597 [State 940] Switching from state 940 to state 0
Copied 34928 (count=1)
Deleting state 940 0x0x34040be0
597 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 939
>> fuzzInit: datum forking for value 940
>> fuzzInit: datum forking for value 940
597 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 940)
        (ReadLSB w32 0 v940_fuzz_symb_940)))
    state 941 with condition (Not (Eq false
         (Eq (w32 940)
             (ReadLSB w32 0 v940_fuzz_symb_940))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-940-8048a0e
Size=2 Low=0 splitIndex=1 high=1
597 [State 0] Switching from state 0 to state 941
Copied 34928 (count=1)
Finalizing TB execution 941
s2e_dummyMainFunction
tcg-llvm-tb-940-8048a0e
Firing timer event
597 [State 941] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 940 not yet applied), shell_len: 1024, eip: 0x00000000

597 [State 941] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
597 [State 941] Leaving buffer range @0xbfba3781, 2b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
597 [State 941] Killing state 941
597 [State 941] Terminating state 941 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
597 [State 941] Switching from state 941 to state 0
Copied 34928 (count=1)
Deleting state 941 0x0x34040be0
597 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 940
>> fuzzInit: datum forking for value 941
>> fuzzInit: datum forking for value 941
598 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 941)
        (ReadLSB w32 0 v941_fuzz_symb_941)))
    state 942 with condition (Not (Eq false
         (Eq (w32 941)
             (ReadLSB w32 0 v941_fuzz_symb_941))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-941-8048a0e
Size=2 Low=0 splitIndex=1 high=1
598 [State 0] Switching from state 0 to state 942
Copied 34928 (count=1)
Finalizing TB execution 942
s2e_dummyMainFunction
tcg-llvm-tb-941-8048a0e
598 [State 942] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 941 not yet applied), shell_len: 1024, eip: 0x00000000

598 [State 942] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
598 [State 942] Leaving buffer range @0xbfba3783, 2a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
598 [State 942] Killing state 942
598 [State 942] Terminating state 942 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
598 [State 942] Switching from state 942 to state 0
Copied 34928 (count=1)
Deleting state 942 0x0x34040be0
Firing timer event
598 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 941
>> fuzzInit: datum forking for value 942
>> fuzzInit: datum forking for value 942
598 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 942)
        (ReadLSB w32 0 v942_fuzz_symb_942)))
    state 943 with condition (Not (Eq false
         (Eq (w32 942)
             (ReadLSB w32 0 v942_fuzz_symb_942))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-942-8048a0e
Size=2 Low=0 splitIndex=1 high=1
598 [State 0] Switching from state 0 to state 943
Copied 34928 (count=1)
Finalizing TB execution 943
s2e_dummyMainFunction
tcg-llvm-tb-942-8048a0e
599 [State 943] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 942 not yet applied), shell_len: 1024, eip: 0x00000000

599 [State 943] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
599 [State 943] Leaving buffer range @0xbfba3781, 2a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
599 [State 943] Killing state 943
599 [State 943] Terminating state 943 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
599 [State 943] Switching from state 943 to state 0
Copied 34928 (count=1)
Deleting state 943 0x0x34040be0
599 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 942
>> fuzzInit: datum forking for value 943
>> fuzzInit: datum forking for value 943
599 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 943)
        (ReadLSB w32 0 v943_fuzz_symb_943)))
    state 944 with condition (Not (Eq false
         (Eq (w32 943)
             (ReadLSB w32 0 v943_fuzz_symb_943))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-943-8048a0e
Size=2 Low=0 splitIndex=1 high=1
599 [State 0] Switching from state 0 to state 944
Copied 34928 (count=1)
Finalizing TB execution 944
s2e_dummyMainFunction
tcg-llvm-tb-943-8048a0e
Firing timer event
599 [State 944] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 943 not yet applied), shell_len: 1024, eip: 0x00000000

599 [State 944] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
599 [State 944] Leaving buffer range @0xbfba3783, 29 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
599 [State 944] Killing state 944
599 [State 944] Terminating state 944 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
599 [State 944] Switching from state 944 to state 0
Copied 34928 (count=1)
Deleting state 944 0x0x33f6b050
600 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 943
>> fuzzInit: datum forking for value 944
>> fuzzInit: datum forking for value 944
600 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 944)
        (ReadLSB w32 0 v944_fuzz_symb_944)))
    state 945 with condition (Not (Eq false
         (Eq (w32 944)
             (ReadLSB w32 0 v944_fuzz_symb_944))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-944-8048a0e
Size=2 Low=0 splitIndex=1 high=1
600 [State 0] Switching from state 0 to state 945
Copied 34928 (count=1)
Finalizing TB execution 945
s2e_dummyMainFunction
tcg-llvm-tb-944-8048a0e
600 [State 945] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 944 not yet applied), shell_len: 1024, eip: 0x00000000

600 [State 945] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
600 [State 945] Leaving buffer range @0xbfba3781, 29 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
Firing timer event
600 [State 945] Killing state 945
600 [State 945] Terminating state 945 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
600 [State 945] Switching from state 945 to state 0
Copied 34928 (count=1)
Deleting state 945 0x0x33f6b050
600 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 944
>> fuzzInit: datum forking for value 945
>> fuzzInit: datum forking for value 945
601 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 945)
        (ReadLSB w32 0 v945_fuzz_symb_945)))
    state 946 with condition (Not (Eq false
         (Eq (w32 945)
             (ReadLSB w32 0 v945_fuzz_symb_945))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-945-8048a0e
Size=2 Low=0 splitIndex=1 high=1
601 [State 0] Switching from state 0 to state 946
Copied 34928 (count=1)
Finalizing TB execution 946
s2e_dummyMainFunction
tcg-llvm-tb-945-8048a0e
601 [State 946] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 945 not yet applied), shell_len: 1024, eip: 0x00000000

601 [State 946] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
601 [State 946] Leaving buffer range @0xbfba3783, 28 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
601 [State 946] Killing state 946
601 [State 946] Terminating state 946 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
601 [State 946] Switching from state 946 to state 0
Copied 34928 (count=1)
Deleting state 946 0x0x33f6b050
601 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 945
>> fuzzInit: datum forking for value 946
>> fuzzInit: datum forking for value 946
601 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 946)
        (ReadLSB w32 0 v946_fuzz_symb_946)))
    state 947 with condition (Not (Eq false
         (Eq (w32 946)
             (ReadLSB w32 0 v946_fuzz_symb_946))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-946-8048a0e
Size=2 Low=0 splitIndex=1 high=1
601 [State 0] Switching from state 0 to state 947
Copied 34928 (count=1)
Finalizing TB execution 947
s2e_dummyMainFunction
tcg-llvm-tb-946-8048a0e
Firing timer event
601 [State 947] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 946 not yet applied), shell_len: 1024, eip: 0x00000000

601 [State 947] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
602 [State 947] Leaving buffer range @0xbfba3781, 28 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
602 [State 947] Killing state 947
602 [State 947] Terminating state 947 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
602 [State 947] Switching from state 947 to state 0
Copied 34928 (count=1)
Deleting state 947 0x0x341565d0
602 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 946
>> fuzzInit: datum forking for value 947
>> fuzzInit: datum forking for value 947
602 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 947)
        (ReadLSB w32 0 v947_fuzz_symb_947)))
    state 948 with condition (Not (Eq false
         (Eq (w32 947)
             (ReadLSB w32 0 v947_fuzz_symb_947))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-947-8048a0e
Size=2 Low=0 splitIndex=1 high=1
602 [State 0] Switching from state 0 to state 948
Copied 34928 (count=1)
Finalizing TB execution 948
s2e_dummyMainFunction
tcg-llvm-tb-947-8048a0e
602 [State 948] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 947 not yet applied), shell_len: 1024, eip: 0x00000000

602 [State 948] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
602 [State 948] Leaving buffer range @0xbfba3783, 27 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
602 [State 948] Killing state 948
602 [State 948] Terminating state 948 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
602 [State 948] Switching from state 948 to state 0
Copied 34928 (count=1)
Deleting state 948 0x0x341565d0
Firing timer event
602 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 947
>> fuzzInit: datum forking for value 948
>> fuzzInit: datum forking for value 948
603 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 948)
        (ReadLSB w32 0 v948_fuzz_symb_948)))
    state 949 with condition (Not (Eq false
         (Eq (w32 948)
             (ReadLSB w32 0 v948_fuzz_symb_948))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-948-8048a0e
Size=2 Low=0 splitIndex=1 high=1
603 [State 0] Switching from state 0 to state 949
Copied 34928 (count=1)
Finalizing TB execution 949
s2e_dummyMainFunction
tcg-llvm-tb-948-8048a0e
603 [State 949] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 948 not yet applied), shell_len: 1024, eip: 0x00000000

603 [State 949] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
603 [State 949] Leaving buffer range @0xbfba3781, 27 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
603 [State 949] Killing state 949
603 [State 949] Terminating state 949 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
603 [State 949] Switching from state 949 to state 0
Copied 34928 (count=1)
Deleting state 949 0x0x34246a10
603 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 948
>> fuzzInit: datum forking for value 949
>> fuzzInit: datum forking for value 949
603 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 949)
        (ReadLSB w32 0 v949_fuzz_symb_949)))
    state 950 with condition (Not (Eq false
         (Eq (w32 949)
             (ReadLSB w32 0 v949_fuzz_symb_949))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-949-8048a0e
Size=2 Low=0 splitIndex=1 high=1
603 [State 0] Switching from state 0 to state 950
Copied 34928 (count=1)
Finalizing TB execution 950
s2e_dummyMainFunction
tcg-llvm-tb-949-8048a0e
603 [State 950] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 949 not yet applied), shell_len: 1024, eip: 0x00000000

Firing timer event
603 [State 950] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
603 [State 950] Leaving buffer range @0xbfba3783, 26 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
604 [State 950] Killing state 950
604 [State 950] Terminating state 950 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
604 [State 950] Switching from state 950 to state 0
Copied 34928 (count=1)
Deleting state 950 0x0x34347f40
604 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 949
>> fuzzInit: datum forking for value 950
>> fuzzInit: datum forking for value 950
604 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 950)
        (ReadLSB w32 0 v950_fuzz_symb_950)))
    state 951 with condition (Not (Eq false
         (Eq (w32 950)
             (ReadLSB w32 0 v950_fuzz_symb_950))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-950-8048a0e
Size=2 Low=0 splitIndex=1 high=1
604 [State 0] Switching from state 0 to state 951
Copied 34928 (count=1)
Finalizing TB execution 951
s2e_dummyMainFunction
tcg-llvm-tb-950-8048a0e
604 [State 951] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 950 not yet applied), shell_len: 1024, eip: 0x00000000

604 [State 951] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
604 [State 951] Leaving buffer range @0xbfba3781, 26 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
604 [State 951] Killing state 951
604 [State 951] Terminating state 951 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
604 [State 951] Switching from state 951 to state 0
Copied 34928 (count=1)
Deleting state 951 0x0x34251620
604 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 950
>> fuzzInit: datum forking for value 951
>> fuzzInit: datum forking for value 951
605 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 951)
        (ReadLSB w32 0 v951_fuzz_symb_951)))
    state 952 with condition (Not (Eq false
         (Eq (w32 951)
             (ReadLSB w32 0 v951_fuzz_symb_951))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-951-8048a0e
Size=2 Low=0 splitIndex=1 high=1
605 [State 0] Switching from state 0 to state 952
Copied 34928 (count=1)
Finalizing TB execution 952
s2e_dummyMainFunction
tcg-llvm-tb-951-8048a0e
Firing timer event
605 [State 952] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 951 not yet applied), shell_len: 1024, eip: 0x00000000

605 [State 952] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
605 [State 952] Leaving buffer range @0xc126f278, 25 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
605 [State 952] Killing state 952
605 [State 952] Terminating state 952 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
605 [State 952] Switching from state 952 to state 0
Copied 34928 (count=1)
Deleting state 952 0x0x34251620
605 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 951
>> fuzzInit: datum forking for value 952
>> fuzzInit: datum forking for value 952
605 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 952)
        (ReadLSB w32 0 v952_fuzz_symb_952)))
    state 953 with condition (Not (Eq false
         (Eq (w32 952)
             (ReadLSB w32 0 v952_fuzz_symb_952))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-952-8048a0e
Size=2 Low=0 splitIndex=1 high=1
605 [State 0] Switching from state 0 to state 953
Copied 34928 (count=1)
Finalizing TB execution 953
s2e_dummyMainFunction
tcg-llvm-tb-952-8048a0e
605 [State 953] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 952 not yet applied), shell_len: 1024, eip: 0x00000000

605 [State 953] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
606 [State 953] Leaving buffer range @0xbfba3781, 25 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
606 [State 953] Killing state 953
606 [State 953] Terminating state 953 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
606 [State 953] Switching from state 953 to state 0
Copied 34928 (count=1)
Deleting state 953 0x0x345bdf90
Firing timer event
606 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 952
>> fuzzInit: datum forking for value 953
>> fuzzInit: datum forking for value 953
606 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 953)
        (ReadLSB w32 0 v953_fuzz_symb_953)))
    state 954 with condition (Not (Eq false
         (Eq (w32 953)
             (ReadLSB w32 0 v953_fuzz_symb_953))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-953-8048a0e
Size=2 Low=0 splitIndex=1 high=1
606 [State 0] Switching from state 0 to state 954
Copied 34928 (count=1)
Finalizing TB execution 954
s2e_dummyMainFunction
tcg-llvm-tb-953-8048a0e
606 [State 954] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 953 not yet applied), shell_len: 1024, eip: 0x00000000

606 [State 954] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
606 [State 954] Leaving buffer range @0xc126f278, 24 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
606 [State 954] Killing state 954
606 [State 954] Terminating state 954 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
606 [State 954] Switching from state 954 to state 0
Copied 34928 (count=1)
Deleting state 954 0x0x345bdf90
606 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 953
>> fuzzInit: datum forking for value 954
>> fuzzInit: datum forking for value 954
607 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 954)
        (ReadLSB w32 0 v954_fuzz_symb_954)))
    state 955 with condition (Not (Eq false
         (Eq (w32 954)
             (ReadLSB w32 0 v954_fuzz_symb_954))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-954-8048a0e
Size=2 Low=0 splitIndex=1 high=1
607 [State 0] Switching from state 0 to state 955
Copied 34928 (count=1)
Finalizing TB execution 955
s2e_dummyMainFunction
tcg-llvm-tb-954-8048a0e
Firing timer event
607 [State 955] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 954 not yet applied), shell_len: 1024, eip: 0x00000000

607 [State 955] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
607 [State 955] Leaving buffer range @0xbfba3781, 24 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
607 [State 955] Killing state 955
607 [State 955] Terminating state 955 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
607 [State 955] Switching from state 955 to state 0
Copied 34928 (count=1)
Deleting state 955 0x0x345bdf90
607 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 954
>> fuzzInit: datum forking for value 955
>> fuzzInit: datum forking for value 955
607 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 955)
        (ReadLSB w32 0 v955_fuzz_symb_955)))
    state 956 with condition (Not (Eq false
         (Eq (w32 955)
             (ReadLSB w32 0 v955_fuzz_symb_955))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-955-8048a0e
Size=2 Low=0 splitIndex=1 high=1
607 [State 0] Switching from state 0 to state 956
Copied 34928 (count=1)
Finalizing TB execution 956
s2e_dummyMainFunction
tcg-llvm-tb-955-8048a0e
608 [State 956] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 955 not yet applied), shell_len: 1024, eip: 0x00000000

608 [State 956] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
608 [State 956] Leaving buffer range @0xbfba3783, 23 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
608 [State 956] Killing state 956
608 [State 956] Terminating state 956 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
608 [State 956] Switching from state 956 to state 0
Copied 34928 (count=1)
Deleting state 956 0x0x345bdf90
Firing timer event
608 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 955
>> fuzzInit: datum forking for value 956
>> fuzzInit: datum forking for value 956
608 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 956)
        (ReadLSB w32 0 v956_fuzz_symb_956)))
    state 957 with condition (Not (Eq false
         (Eq (w32 956)
             (ReadLSB w32 0 v956_fuzz_symb_956))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-956-8048a0e
Size=2 Low=0 splitIndex=1 high=1
608 [State 0] Switching from state 0 to state 957
Copied 34928 (count=1)
Finalizing TB execution 957
s2e_dummyMainFunction
tcg-llvm-tb-956-8048a0e
608 [State 957] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 956 not yet applied), shell_len: 1024, eip: 0x00000000

608 [State 957] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
608 [State 957] Leaving buffer range @0xbfba3781, 23 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
608 [State 957] Killing state 957
608 [State 957] Terminating state 957 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
608 [State 957] Switching from state 957 to state 0
Copied 34928 (count=1)
Deleting state 957 0x0x345bce60
609 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 956
>> fuzzInit: datum forking for value 957
>> fuzzInit: datum forking for value 957
609 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 957)
        (ReadLSB w32 0 v957_fuzz_symb_957)))
    state 958 with condition (Not (Eq false
         (Eq (w32 957)
             (ReadLSB w32 0 v957_fuzz_symb_957))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-957-8048a0e
Size=2 Low=0 splitIndex=1 high=1
609 [State 0] Switching from state 0 to state 958
Copied 34928 (count=1)
Finalizing TB execution 958
s2e_dummyMainFunction
tcg-llvm-tb-957-8048a0e
Firing timer event
609 [State 958] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 957 not yet applied), shell_len: 1024, eip: 0x00000000

609 [State 958] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
609 [State 958] Leaving buffer range @0xbfba3783, 22 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
609 [State 958] Killing state 958
609 [State 958] Terminating state 958 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
609 [State 958] Switching from state 958 to state 0
Copied 34928 (count=1)
Deleting state 958 0x0x345757f0
609 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 957
>> fuzzInit: datum forking for value 958
>> fuzzInit: datum forking for value 958
609 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 958)
        (ReadLSB w32 0 v958_fuzz_symb_958)))
    state 959 with condition (Not (Eq false
         (Eq (w32 958)
             (ReadLSB w32 0 v958_fuzz_symb_958))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-958-8048a0e
Size=2 Low=0 splitIndex=1 high=1
609 [State 0] Switching from state 0 to state 959
Copied 34928 (count=1)
Finalizing TB execution 959
s2e_dummyMainFunction
tcg-llvm-tb-958-8048a0e
610 [State 959] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 958 not yet applied), shell_len: 1024, eip: 0x00000000

610 [State 959] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
610 [State 959] Leaving buffer range @0xbfba3781, 22 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
610 [State 959] Killing state 959
610 [State 959] Terminating state 959 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
610 [State 959] Switching from state 959 to state 0
Copied 34928 (count=1)
Deleting state 959 0x0x345757f0
Firing timer event
610 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 958
>> fuzzInit: datum forking for value 959
>> fuzzInit: datum forking for value 959
610 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 959)
        (ReadLSB w32 0 v959_fuzz_symb_959)))
    state 960 with condition (Not (Eq false
         (Eq (w32 959)
             (ReadLSB w32 0 v959_fuzz_symb_959))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-959-8048a0e
Size=2 Low=0 splitIndex=1 high=1
610 [State 0] Switching from state 0 to state 960
Copied 34928 (count=1)
Finalizing TB execution 960
s2e_dummyMainFunction
tcg-llvm-tb-959-8048a0e
610 [State 960] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 959 not yet applied), shell_len: 1024, eip: 0x00000000

610 [State 960] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
610 [State 960] Leaving buffer range @0xbfba3783, 21 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
610 [State 960] Killing state 960
610 [State 960] Terminating state 960 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
610 [State 960] Switching from state 960 to state 0
Copied 34928 (count=1)
Deleting state 960 0x0x345757f0
611 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 959
>> fuzzInit: datum forking for value 960
>> fuzzInit: datum forking for value 960
611 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 960)
        (ReadLSB w32 0 v960_fuzz_symb_960)))
    state 961 with condition (Not (Eq false
         (Eq (w32 960)
             (ReadLSB w32 0 v960_fuzz_symb_960))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-960-8048a0e
Size=2 Low=0 splitIndex=1 high=1
611 [State 0] Switching from state 0 to state 961
Copied 34928 (count=1)
Finalizing TB execution 961
s2e_dummyMainFunction
tcg-llvm-tb-960-8048a0e
Firing timer event
611 [State 961] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 960 not yet applied), shell_len: 1024, eip: 0x00000000

611 [State 961] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
611 [State 961] Leaving buffer range @0xbfba3781, 21 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
611 [State 961] Killing state 961
611 [State 961] Terminating state 961 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
611 [State 961] Switching from state 961 to state 0
Copied 34928 (count=1)
Deleting state 961 0x0x345757f0
611 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 960
>> fuzzInit: datum forking for value 961
>> fuzzInit: datum forking for value 961
611 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 961)
        (ReadLSB w32 0 v961_fuzz_symb_961)))
    state 962 with condition (Not (Eq false
         (Eq (w32 961)
             (ReadLSB w32 0 v961_fuzz_symb_961))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-961-8048a0e
Size=2 Low=0 splitIndex=1 high=1
611 [State 0] Switching from state 0 to state 962
Copied 34928 (count=1)
Finalizing TB execution 962
s2e_dummyMainFunction
tcg-llvm-tb-961-8048a0e
612 [State 962] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 961 not yet applied), shell_len: 1024, eip: 0x00000000

612 [State 962] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
612 [State 962] Leaving buffer range @0xbfba3783, 20 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
612 [State 962] Killing state 962
612 [State 962] Terminating state 962 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
612 [State 962] Switching from state 962 to state 0
Copied 34928 (count=1)
Deleting state 962 0x0x345757f0
Firing timer event
612 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 961
>> fuzzInit: datum forking for value 962
>> fuzzInit: datum forking for value 962
612 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 962)
        (ReadLSB w32 0 v962_fuzz_symb_962)))
    state 963 with condition (Not (Eq false
         (Eq (w32 962)
             (ReadLSB w32 0 v962_fuzz_symb_962))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-962-8048a0e
Size=2 Low=0 splitIndex=1 high=1
612 [State 0] Switching from state 0 to state 963
Copied 34928 (count=1)
Finalizing TB execution 963
s2e_dummyMainFunction
tcg-llvm-tb-962-8048a0e
612 [State 963] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 962 not yet applied), shell_len: 1024, eip: 0x00000000

612 [State 963] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
612 [State 963] Leaving buffer range @0xbfba3781, 20 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
612 [State 963] Killing state 963
612 [State 963] Terminating state 963 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
612 [State 963] Switching from state 963 to state 0
Copied 34928 (count=1)
Deleting state 963 0x0x347f2390
613 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 962
>> fuzzInit: datum forking for value 963
>> fuzzInit: datum forking for value 963
613 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 963)
        (ReadLSB w32 0 v963_fuzz_symb_963)))
    state 964 with condition (Not (Eq false
         (Eq (w32 963)
             (ReadLSB w32 0 v963_fuzz_symb_963))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-963-8048a0e
Size=2 Low=0 splitIndex=1 high=1
613 [State 0] Switching from state 0 to state 964
Copied 34928 (count=1)
Finalizing TB execution 964
s2e_dummyMainFunction
tcg-llvm-tb-963-8048a0e
Firing timer event
613 [State 964] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 963 not yet applied), shell_len: 1024, eip: 0x00000000

613 [State 964] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
613 [State 964] Leaving buffer range @0xbfba3783, 1f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
613 [State 964] Killing state 964
613 [State 964] Terminating state 964 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
613 [State 964] Switching from state 964 to state 0
Copied 34928 (count=1)
Deleting state 964 0x0x347f2390
613 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 963
>> fuzzInit: datum forking for value 964
>> fuzzInit: datum forking for value 964
614 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 964)
        (ReadLSB w32 0 v964_fuzz_symb_964)))
    state 965 with condition (Not (Eq false
         (Eq (w32 964)
             (ReadLSB w32 0 v964_fuzz_symb_964))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-964-8048a0e
Size=2 Low=0 splitIndex=1 high=1
614 [State 0] Switching from state 0 to state 965
Copied 34928 (count=1)
Finalizing TB execution 965
s2e_dummyMainFunction
tcg-llvm-tb-964-8048a0e
614 [State 965] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 964 not yet applied), shell_len: 1024, eip: 0x00000000

614 [State 965] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
614 [State 965] Leaving buffer range @0xbfba3781, 1f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
614 [State 965] Killing state 965
614 [State 965] Terminating state 965 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
614 [State 965] Switching from state 965 to state 0
Copied 34928 (count=1)
Deleting state 965 0x0x347f2390
614 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 964
>> fuzzInit: datum forking for value 965
>> fuzzInit: datum forking for value 965
614 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 965)
        (ReadLSB w32 0 v965_fuzz_symb_965)))
    state 966 with condition (Not (Eq false
         (Eq (w32 965)
             (ReadLSB w32 0 v965_fuzz_symb_965))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-965-8048a0e
Size=2 Low=0 splitIndex=1 high=1
614 [State 0] Switching from state 0 to state 966
Copied 34928 (count=1)
Finalizing TB execution 966
s2e_dummyMainFunction
tcg-llvm-tb-965-8048a0e
Firing timer event
614 [State 966] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 965 not yet applied), shell_len: 1024, eip: 0x00000000

614 [State 966] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
614 [State 966] Leaving buffer range @0xbfba3783, 1e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
614 [State 966] Killing state 966
614 [State 966] Terminating state 966 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
614 [State 966] Switching from state 966 to state 0
Copied 34928 (count=1)
Deleting state 966 0x0x347f2390
615 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 965
>> fuzzInit: datum forking for value 966
>> fuzzInit: datum forking for value 966
615 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 966)
        (ReadLSB w32 0 v966_fuzz_symb_966)))
    state 967 with condition (Not (Eq false
         (Eq (w32 966)
             (ReadLSB w32 0 v966_fuzz_symb_966))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-966-8048a0e
Size=2 Low=0 splitIndex=1 high=1
615 [State 0] Switching from state 0 to state 967
Copied 34928 (count=1)
Finalizing TB execution 967
s2e_dummyMainFunction
tcg-llvm-tb-966-8048a0e
615 [State 967] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 966 not yet applied), shell_len: 1024, eip: 0x00000000

615 [State 967] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
615 [State 967] Leaving buffer range @0xbfba3781, 1e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
615 [State 967] Killing state 967
615 [State 967] Terminating state 967 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
615 [State 967] Switching from state 967 to state 0
Copied 34928 (count=1)
Deleting state 967 0x0x34a825d0
615 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 966
>> fuzzInit: datum forking for value 967
>> fuzzInit: datum forking for value 967
616 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 967)
        (ReadLSB w32 0 v967_fuzz_symb_967)))
    state 968 with condition (Not (Eq false
         (Eq (w32 967)
             (ReadLSB w32 0 v967_fuzz_symb_967))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-967-8048a0e
Size=2 Low=0 splitIndex=1 high=1
616 [State 0] Switching from state 0 to state 968
Copied 34928 (count=1)
Finalizing TB execution 968
s2e_dummyMainFunction
tcg-llvm-tb-967-8048a0e
Firing timer event
616 [State 968] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 967 not yet applied), shell_len: 1024, eip: 0x00000000

616 [State 968] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
616 [State 968] Leaving buffer range @0xbfba3783, 1d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
616 [State 968] Killing state 968
616 [State 968] Terminating state 968 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
616 [State 968] Switching from state 968 to state 0
Copied 34928 (count=1)
Deleting state 968 0x0x34a825d0
616 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 967
>> fuzzInit: datum forking for value 968
>> fuzzInit: datum forking for value 968
616 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 968)
        (ReadLSB w32 0 v968_fuzz_symb_968)))
    state 969 with condition (Not (Eq false
         (Eq (w32 968)
             (ReadLSB w32 0 v968_fuzz_symb_968))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-968-8048a0e
Size=2 Low=0 splitIndex=1 high=1
616 [State 0] Switching from state 0 to state 969
Copied 34928 (count=1)
Finalizing TB execution 969
s2e_dummyMainFunction
tcg-llvm-tb-968-8048a0e
616 [State 969] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 968 not yet applied), shell_len: 1024, eip: 0x00000000

616 [State 969] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
616 [State 969] Leaving buffer range @0xbfba3781, 1d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
616 [State 969] Killing state 969
616 [State 969] Terminating state 969 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
616 [State 969] Switching from state 969 to state 0
Copied 34928 (count=1)
Deleting state 969 0x0x34a825d0
Firing timer event
617 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 968
>> fuzzInit: datum forking for value 969
>> fuzzInit: datum forking for value 969
617 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 969)
        (ReadLSB w32 0 v969_fuzz_symb_969)))
    state 970 with condition (Not (Eq false
         (Eq (w32 969)
             (ReadLSB w32 0 v969_fuzz_symb_969))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-969-8048a0e
Size=2 Low=0 splitIndex=1 high=1
617 [State 0] Switching from state 0 to state 970
Copied 34928 (count=1)
Finalizing TB execution 970
s2e_dummyMainFunction
tcg-llvm-tb-969-8048a0e
617 [State 970] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 969 not yet applied), shell_len: 1024, eip: 0x00000000

617 [State 970] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
617 [State 970] Leaving buffer range @0xbfba3783, 1c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
617 [State 970] Killing state 970
617 [State 970] Terminating state 970 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
617 [State 970] Switching from state 970 to state 0
Copied 34928 (count=1)
Deleting state 970 0x0x3476d9c0
617 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 969
>> fuzzInit: datum forking for value 970
>> fuzzInit: datum forking for value 970
618 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 970)
        (ReadLSB w32 0 v970_fuzz_symb_970)))
    state 971 with condition (Not (Eq false
         (Eq (w32 970)
             (ReadLSB w32 0 v970_fuzz_symb_970))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-970-8048a0e
Size=2 Low=0 splitIndex=1 high=1
618 [State 0] Switching from state 0 to state 971
Copied 34928 (count=1)
Finalizing TB execution 971
s2e_dummyMainFunction
tcg-llvm-tb-970-8048a0e
Firing timer event
618 [State 971] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 970 not yet applied), shell_len: 1024, eip: 0x00000000

618 [State 971] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
618 [State 971] Leaving buffer range @0xbfba3781, 1c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
618 [State 971] Killing state 971
618 [State 971] Terminating state 971 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
618 [State 971] Switching from state 971 to state 0
Copied 34928 (count=1)
Deleting state 971 0x0x34b0b1f0
618 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 970
>> fuzzInit: datum forking for value 971
>> fuzzInit: datum forking for value 971
618 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 971)
        (ReadLSB w32 0 v971_fuzz_symb_971)))
    state 972 with condition (Not (Eq false
         (Eq (w32 971)
             (ReadLSB w32 0 v971_fuzz_symb_971))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-971-8048a0e
Size=2 Low=0 splitIndex=1 high=1
618 [State 0] Switching from state 0 to state 972
Copied 34928 (count=1)
Finalizing TB execution 972
s2e_dummyMainFunction
tcg-llvm-tb-971-8048a0e
618 [State 972] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 971 not yet applied), shell_len: 1024, eip: 0x00000000

618 [State 972] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
619 [State 972] Leaving buffer range @0xbfba3783, 1b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
619 [State 972] Killing state 972
619 [State 972] Terminating state 972 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
619 [State 972] Switching from state 972 to state 0
Copied 34928 (count=1)
Deleting state 972 0x0x34b0b1f0
619 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 971
>> fuzzInit: datum forking for value 972
>> fuzzInit: datum forking for value 972
619 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 972)
        (ReadLSB w32 0 v972_fuzz_symb_972)))
    state 973 with condition (Not (Eq false
         (Eq (w32 972)
             (ReadLSB w32 0 v972_fuzz_symb_972))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-972-8048a0e
Size=2 Low=0 splitIndex=1 high=1
619 [State 0] Switching from state 0 to state 973
Copied 34928 (count=1)
Finalizing TB execution 973
s2e_dummyMainFunction
tcg-llvm-tb-972-8048a0e
Firing timer event
619 [State 973] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 972 not yet applied), shell_len: 1024, eip: 0x00000000

619 [State 973] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
619 [State 973] Leaving buffer range @0xbfba3781, 1b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
619 [State 973] Killing state 973
619 [State 973] Terminating state 973 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
619 [State 973] Switching from state 973 to state 0
Copied 34928 (count=1)
Deleting state 973 0x0x34b2a750
619 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 972
>> fuzzInit: datum forking for value 973
>> fuzzInit: datum forking for value 973
620 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 973)
        (ReadLSB w32 0 v973_fuzz_symb_973)))
    state 974 with condition (Not (Eq false
         (Eq (w32 973)
             (ReadLSB w32 0 v973_fuzz_symb_973))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-973-8048a0e
Size=2 Low=0 splitIndex=1 high=1
620 [State 0] Switching from state 0 to state 974
Copied 34928 (count=1)
Finalizing TB execution 974
s2e_dummyMainFunction
tcg-llvm-tb-973-8048a0e
620 [State 974] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 973 not yet applied), shell_len: 1024, eip: 0x00000000

620 [State 974] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
620 [State 974] Leaving buffer range @0xbfba3783, 1a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
620 [State 974] Killing state 974
620 [State 974] Terminating state 974 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
620 [State 974] Switching from state 974 to state 0
Copied 34928 (count=1)
Deleting state 974 0x0x34b2a750
Firing timer event
620 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 973
>> fuzzInit: datum forking for value 974
>> fuzzInit: datum forking for value 974
621 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 974)
        (ReadLSB w32 0 v974_fuzz_symb_974)))
    state 975 with condition (Not (Eq false
         (Eq (w32 974)
             (ReadLSB w32 0 v974_fuzz_symb_974))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-974-8048a0e
Size=2 Low=0 splitIndex=1 high=1
621 [State 0] Switching from state 0 to state 975
Copied 34928 (count=1)
Finalizing TB execution 975
s2e_dummyMainFunction
tcg-llvm-tb-974-8048a0e
621 [State 975] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 974 not yet applied), shell_len: 1024, eip: 0x00000000

621 [State 975] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
621 [State 975] Leaving buffer range @0xbfba3781, 1a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
621 [State 975] Killing state 975
621 [State 975] Terminating state 975 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
621 [State 975] Switching from state 975 to state 0
Copied 34928 (count=1)
Deleting state 975 0x0x34ca7540
621 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 974
>> fuzzInit: datum forking for value 975
>> fuzzInit: datum forking for value 975
621 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 975)
        (ReadLSB w32 0 v975_fuzz_symb_975)))
    state 976 with condition (Not (Eq false
         (Eq (w32 975)
             (ReadLSB w32 0 v975_fuzz_symb_975))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-975-8048a0e
Size=2 Low=0 splitIndex=1 high=1
621 [State 0] Switching from state 0 to state 976
Copied 34928 (count=1)
Finalizing TB execution 976
s2e_dummyMainFunction
tcg-llvm-tb-975-8048a0e
Firing timer event
621 [State 976] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 975 not yet applied), shell_len: 1024, eip: 0x00000000

621 [State 976] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
621 [State 976] Leaving buffer range @0xbfba3783, 19 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
621 [State 976] Killing state 976
621 [State 976] Terminating state 976 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
621 [State 976] Switching from state 976 to state 0
Copied 34928 (count=1)
Deleting state 976 0x0x34ca7540
622 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 975
>> fuzzInit: datum forking for value 976
>> fuzzInit: datum forking for value 976
622 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 976)
        (ReadLSB w32 0 v976_fuzz_symb_976)))
    state 977 with condition (Not (Eq false
         (Eq (w32 976)
             (ReadLSB w32 0 v976_fuzz_symb_976))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-976-8048a0e
Size=2 Low=0 splitIndex=1 high=1
622 [State 0] Switching from state 0 to state 977
Copied 34928 (count=1)
Finalizing TB execution 977
s2e_dummyMainFunction
tcg-llvm-tb-976-8048a0e
622 [State 977] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 976 not yet applied), shell_len: 1024, eip: 0x00000000

622 [State 977] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
622 [State 977] Leaving buffer range @0xbfba3781, 19 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
622 [State 977] Killing state 977
622 [State 977] Terminating state 977 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
622 [State 977] Switching from state 977 to state 0
Copied 34928 (count=1)
Deleting state 977 0x0x34869290
Firing timer event
622 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 976
>> fuzzInit: datum forking for value 977
>> fuzzInit: datum forking for value 977
622 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 977)
        (ReadLSB w32 0 v977_fuzz_symb_977)))
    state 978 with condition (Not (Eq false
         (Eq (w32 977)
             (ReadLSB w32 0 v977_fuzz_symb_977))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-977-8048a0e
Size=2 Low=0 splitIndex=1 high=1
623 [State 0] Switching from state 0 to state 978
Copied 34928 (count=1)
Finalizing TB execution 978
s2e_dummyMainFunction
tcg-llvm-tb-977-8048a0e
623 [State 978] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 977 not yet applied), shell_len: 1024, eip: 0x00000000

623 [State 978] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
623 [State 978] Leaving buffer range @0xbfba3783, 18 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
623 [State 978] Killing state 978
623 [State 978] Terminating state 978 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
623 [State 978] Switching from state 978 to state 0
Copied 34928 (count=1)
Deleting state 978 0x0x34869290
623 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 977
>> fuzzInit: datum forking for value 978
>> fuzzInit: datum forking for value 978
623 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 978)
        (ReadLSB w32 0 v978_fuzz_symb_978)))
    state 979 with condition (Not (Eq false
         (Eq (w32 978)
             (ReadLSB w32 0 v978_fuzz_symb_978))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-978-8048a0e
Size=2 Low=0 splitIndex=1 high=1
623 [State 0] Switching from state 0 to state 979
Copied 34928 (count=1)
Finalizing TB execution 979
s2e_dummyMainFunction
tcg-llvm-tb-978-8048a0e
Firing timer event
623 [State 979] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 978 not yet applied), shell_len: 1024, eip: 0x00000000

623 [State 979] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
623 [State 979] Leaving buffer range @0xbfba3781, 18 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
623 [State 979] Killing state 979
623 [State 979] Terminating state 979 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
623 [State 979] Switching from state 979 to state 0
Copied 34928 (count=1)
Deleting state 979 0x0x34d42630
624 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 978
>> fuzzInit: datum forking for value 979
>> fuzzInit: datum forking for value 979
624 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 979)
        (ReadLSB w32 0 v979_fuzz_symb_979)))
    state 980 with condition (Not (Eq false
         (Eq (w32 979)
             (ReadLSB w32 0 v979_fuzz_symb_979))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-979-8048a0e
Size=2 Low=0 splitIndex=1 high=1
624 [State 0] Switching from state 0 to state 980
Copied 34928 (count=1)
Finalizing TB execution 980
s2e_dummyMainFunction
tcg-llvm-tb-979-8048a0e
624 [State 980] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 979 not yet applied), shell_len: 1024, eip: 0x00000000

624 [State 980] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
624 [State 980] Leaving buffer range @0xbfba3783, 17 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
624 [State 980] Killing state 980
624 [State 980] Terminating state 980 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
624 [State 980] Switching from state 980 to state 0
Copied 34928 (count=1)
Deleting state 980 0x0x34bba750
Firing timer event
624 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 979
>> fuzzInit: datum forking for value 980
>> fuzzInit: datum forking for value 980
624 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 980)
        (ReadLSB w32 0 v980_fuzz_symb_980)))
    state 981 with condition (Not (Eq false
         (Eq (w32 980)
             (ReadLSB w32 0 v980_fuzz_symb_980))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-980-8048a0e
Size=2 Low=0 splitIndex=1 high=1
624 [State 0] Switching from state 0 to state 981
Copied 34928 (count=1)
Finalizing TB execution 981
s2e_dummyMainFunction
tcg-llvm-tb-980-8048a0e
625 [State 981] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 980 not yet applied), shell_len: 1024, eip: 0x00000000

625 [State 981] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
625 [State 981] Leaving buffer range @0xbfba3781, 17 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
625 [State 981] Killing state 981
625 [State 981] Terminating state 981 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
625 [State 981] Switching from state 981 to state 0
Copied 34928 (count=1)
Deleting state 981 0x0x34cf4920
625 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 980
>> fuzzInit: datum forking for value 981
>> fuzzInit: datum forking for value 981
625 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 981)
        (ReadLSB w32 0 v981_fuzz_symb_981)))
    state 982 with condition (Not (Eq false
         (Eq (w32 981)
             (ReadLSB w32 0 v981_fuzz_symb_981))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-981-8048a0e
Size=2 Low=0 splitIndex=1 high=1
625 [State 0] Switching from state 0 to state 982
Copied 34928 (count=1)
Finalizing TB execution 982
s2e_dummyMainFunction
tcg-llvm-tb-981-8048a0e
625 [State 982] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 981 not yet applied), shell_len: 1024, eip: 0x00000000

625 [State 982] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
Firing timer event
625 [State 982] Leaving buffer range @0xbfba3783, 16 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
625 [State 982] Killing state 982
625 [State 982] Terminating state 982 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
625 [State 982] Switching from state 982 to state 0
Copied 34928 (count=1)
Deleting state 982 0x0x34ed36b0
625 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 981
>> fuzzInit: datum forking for value 982
>> fuzzInit: datum forking for value 982
626 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 982)
        (ReadLSB w32 0 v982_fuzz_symb_982)))
    state 983 with condition (Not (Eq false
         (Eq (w32 982)
             (ReadLSB w32 0 v982_fuzz_symb_982))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-982-8048a0e
Size=2 Low=0 splitIndex=1 high=1
626 [State 0] Switching from state 0 to state 983
Copied 34928 (count=1)
Finalizing TB execution 983
s2e_dummyMainFunction
tcg-llvm-tb-982-8048a0e
626 [State 983] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 982 not yet applied), shell_len: 1024, eip: 0x00000000

626 [State 983] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
626 [State 983] Leaving buffer range @0xbfba3781, 16 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
626 [State 983] Killing state 983
626 [State 983] Terminating state 983 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
626 [State 983] Switching from state 983 to state 0
Copied 34928 (count=1)
Deleting state 983 0x0x34ed36b0
626 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 982
>> fuzzInit: datum forking for value 983
>> fuzzInit: datum forking for value 983
627 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 983)
        (ReadLSB w32 0 v983_fuzz_symb_983)))
    state 984 with condition (Not (Eq false
         (Eq (w32 983)
             (ReadLSB w32 0 v983_fuzz_symb_983))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-983-8048a0e
Size=2 Low=0 splitIndex=1 high=1
627 [State 0] Switching from state 0 to state 984
Copied 34928 (count=1)
Finalizing TB execution 984
s2e_dummyMainFunction
tcg-llvm-tb-983-8048a0e
Firing timer event
627 [State 984] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 983 not yet applied), shell_len: 1024, eip: 0x00000000

627 [State 984] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
627 [State 984] Leaving buffer range @0xbfba3783, 15 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
627 [State 984] Killing state 984
627 [State 984] Terminating state 984 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
627 [State 984] Switching from state 984 to state 0
Copied 34928 (count=1)
Deleting state 984 0x0x34ed36b0
627 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 983
>> fuzzInit: datum forking for value 984
>> fuzzInit: datum forking for value 984
627 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 984)
        (ReadLSB w32 0 v984_fuzz_symb_984)))
    state 985 with condition (Not (Eq false
         (Eq (w32 984)
             (ReadLSB w32 0 v984_fuzz_symb_984))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-984-8048a0e
Size=2 Low=0 splitIndex=1 high=1
627 [State 0] Switching from state 0 to state 985
Copied 34928 (count=1)
Finalizing TB execution 985
s2e_dummyMainFunction
tcg-llvm-tb-984-8048a0e
627 [State 985] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 984 not yet applied), shell_len: 1024, eip: 0x00000000

627 [State 985] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
627 [State 985] Leaving buffer range @0xbfba3781, 15 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
627 [State 985] Killing state 985
627 [State 985] Terminating state 985 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
627 [State 985] Switching from state 985 to state 0
Copied 34928 (count=1)
Deleting state 985 0x0x34ed36b0
Firing timer event
628 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 984
>> fuzzInit: datum forking for value 985
>> fuzzInit: datum forking for value 985
628 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 985)
        (ReadLSB w32 0 v985_fuzz_symb_985)))
    state 986 with condition (Not (Eq false
         (Eq (w32 985)
             (ReadLSB w32 0 v985_fuzz_symb_985))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-985-8048a0e
Size=2 Low=0 splitIndex=1 high=1
628 [State 0] Switching from state 0 to state 986
Copied 34928 (count=1)
Finalizing TB execution 986
s2e_dummyMainFunction
tcg-llvm-tb-985-8048a0e
628 [State 986] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 985 not yet applied), shell_len: 1024, eip: 0x00000000

628 [State 986] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
628 [State 986] Leaving buffer range @0xbfba3783, 14 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
628 [State 986] Killing state 986
628 [State 986] Terminating state 986 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
628 [State 986] Switching from state 986 to state 0
Copied 34928 (count=1)
Deleting state 986 0x0x3517e740
628 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 985
>> fuzzInit: datum forking for value 986
>> fuzzInit: datum forking for value 986
629 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 986)
        (ReadLSB w32 0 v986_fuzz_symb_986)))
    state 987 with condition (Not (Eq false
         (Eq (w32 986)
             (ReadLSB w32 0 v986_fuzz_symb_986))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-986-8048a0e
Size=2 Low=0 splitIndex=1 high=1
629 [State 0] Switching from state 0 to state 987
Copied 34928 (count=1)
Finalizing TB execution 987
s2e_dummyMainFunction
tcg-llvm-tb-986-8048a0e
Firing timer event
629 [State 987] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 986 not yet applied), shell_len: 1024, eip: 0x00000000

629 [State 987] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
629 [State 987] Leaving buffer range @0xbfba3781, 14 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
629 [State 987] Killing state 987
629 [State 987] Terminating state 987 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
629 [State 987] Switching from state 987 to state 0
Copied 34928 (count=1)
Deleting state 987 0x0x34fee2e0
629 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 986
>> fuzzInit: datum forking for value 987
>> fuzzInit: datum forking for value 987
629 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 987)
        (ReadLSB w32 0 v987_fuzz_symb_987)))
    state 988 with condition (Not (Eq false
         (Eq (w32 987)
             (ReadLSB w32 0 v987_fuzz_symb_987))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-987-8048a0e
Size=2 Low=0 splitIndex=1 high=1
629 [State 0] Switching from state 0 to state 988
Copied 34928 (count=1)
Finalizing TB execution 988
s2e_dummyMainFunction
tcg-llvm-tb-987-8048a0e
629 [State 988] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 987 not yet applied), shell_len: 1024, eip: 0x00000000

629 [State 988] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
629 [State 988] Leaving buffer range @0xbfba3783, 13 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
630 [State 988] Killing state 988
630 [State 988] Terminating state 988 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
630 [State 988] Switching from state 988 to state 0
Copied 34928 (count=1)
Deleting state 988 0x0x34ff4a30
Firing timer event
630 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 987
>> fuzzInit: datum forking for value 988
>> fuzzInit: datum forking for value 988
630 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 988)
        (ReadLSB w32 0 v988_fuzz_symb_988)))
    state 989 with condition (Not (Eq false
         (Eq (w32 988)
             (ReadLSB w32 0 v988_fuzz_symb_988))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-988-8048a0e
Size=2 Low=0 splitIndex=1 high=1
630 [State 0] Switching from state 0 to state 989
Copied 34928 (count=1)
Finalizing TB execution 989
s2e_dummyMainFunction
tcg-llvm-tb-988-8048a0e
630 [State 989] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 988 not yet applied), shell_len: 1024, eip: 0x00000000

630 [State 989] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
630 [State 989] Leaving buffer range @0xbfba3781, 13 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
630 [State 989] Killing state 989
630 [State 989] Terminating state 989 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
630 [State 989] Switching from state 989 to state 0
Copied 34928 (count=1)
Deleting state 989 0x0x34ff4a30
630 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 988
>> fuzzInit: datum forking for value 989
>> fuzzInit: datum forking for value 989
631 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 989)
        (ReadLSB w32 0 v989_fuzz_symb_989)))
    state 990 with condition (Not (Eq false
         (Eq (w32 989)
             (ReadLSB w32 0 v989_fuzz_symb_989))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-989-8048a0e
Size=2 Low=0 splitIndex=1 high=1
631 [State 0] Switching from state 0 to state 990
Copied 34928 (count=1)
Finalizing TB execution 990
s2e_dummyMainFunction
tcg-llvm-tb-989-8048a0e
Firing timer event
631 [State 990] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 989 not yet applied), shell_len: 1024, eip: 0x00000000

631 [State 990] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
631 [State 990] Leaving buffer range @0xbfba3783, 12 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
631 [State 990] Killing state 990
631 [State 990] Terminating state 990 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
631 [State 990] Switching from state 990 to state 0
Copied 34928 (count=1)
Deleting state 990 0x0x34ff4a30
631 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 989
>> fuzzInit: datum forking for value 990
>> fuzzInit: datum forking for value 990
631 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 990)
        (ReadLSB w32 0 v990_fuzz_symb_990)))
    state 991 with condition (Not (Eq false
         (Eq (w32 990)
             (ReadLSB w32 0 v990_fuzz_symb_990))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-990-8048a0e
Size=2 Low=0 splitIndex=1 high=1
631 [State 0] Switching from state 0 to state 991
Copied 34928 (count=1)
Finalizing TB execution 991
s2e_dummyMainFunction
tcg-llvm-tb-990-8048a0e
631 [State 991] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 990 not yet applied), shell_len: 1024, eip: 0x00000000

631 [State 991] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
631 [State 991] Leaving buffer range @0xbfba3781, 12 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
632 [State 991] Killing state 991
632 [State 991] Terminating state 991 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
632 [State 991] Switching from state 991 to state 0
Copied 34928 (count=1)
Deleting state 991 0x0x34ff9430
632 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 990
>> fuzzInit: datum forking for value 991
>> fuzzInit: datum forking for value 991
632 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 991)
        (ReadLSB w32 0 v991_fuzz_symb_991)))
    state 992 with condition (Not (Eq false
         (Eq (w32 991)
             (ReadLSB w32 0 v991_fuzz_symb_991))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-991-8048a0e
Size=2 Low=0 splitIndex=1 high=1
632 [State 0] Switching from state 0 to state 992
Copied 34928 (count=1)
Finalizing TB execution 992
s2e_dummyMainFunction
tcg-llvm-tb-991-8048a0e
Firing timer event
632 [State 992] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 991 not yet applied), shell_len: 1024, eip: 0x00000000

632 [State 992] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
632 [State 992] Leaving buffer range @0xbfba3783, 11 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
632 [State 992] Killing state 992
632 [State 992] Terminating state 992 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
632 [State 992] Switching from state 992 to state 0
Copied 34928 (count=1)
Deleting state 992 0x0x34bbdb70
632 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 991
>> fuzzInit: datum forking for value 992
>> fuzzInit: datum forking for value 992
633 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 992)
        (ReadLSB w32 0 v992_fuzz_symb_992)))
    state 993 with condition (Not (Eq false
         (Eq (w32 992)
             (ReadLSB w32 0 v992_fuzz_symb_992))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-992-8048a0e
Size=2 Low=0 splitIndex=1 high=1
633 [State 0] Switching from state 0 to state 993
Copied 34928 (count=1)
Finalizing TB execution 993
s2e_dummyMainFunction
tcg-llvm-tb-992-8048a0e
633 [State 993] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 992 not yet applied), shell_len: 1024, eip: 0x00000000

633 [State 993] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
633 [State 993] Leaving buffer range @0xbfba3781, 11 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
633 [State 993] Killing state 993
633 [State 993] Terminating state 993 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
633 [State 993] Switching from state 993 to state 0
Copied 34928 (count=1)
Deleting state 993 0x0x34bbdb70
Firing timer event
633 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 992
>> fuzzInit: datum forking for value 993
>> fuzzInit: datum forking for value 993
633 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 993)
        (ReadLSB w32 0 v993_fuzz_symb_993)))
    state 994 with condition (Not (Eq false
         (Eq (w32 993)
             (ReadLSB w32 0 v993_fuzz_symb_993))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-993-8048a0e
Size=2 Low=0 splitIndex=1 high=1
633 [State 0] Switching from state 0 to state 994
Copied 34928 (count=1)
Finalizing TB execution 994
s2e_dummyMainFunction
tcg-llvm-tb-993-8048a0e
633 [State 994] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 993 not yet applied), shell_len: 1024, eip: 0x00000000

633 [State 994] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
633 [State 994] Leaving buffer range @0xbfba3783, 10 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
634 [State 994] Killing state 994
634 [State 994] Terminating state 994 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
634 [State 994] Switching from state 994 to state 0
Copied 34928 (count=1)
Deleting state 994 0x0x34bbdb70
634 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 993
>> fuzzInit: datum forking for value 994
>> fuzzInit: datum forking for value 994
634 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 994)
        (ReadLSB w32 0 v994_fuzz_symb_994)))
    state 995 with condition (Not (Eq false
         (Eq (w32 994)
             (ReadLSB w32 0 v994_fuzz_symb_994))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-994-8048a0e
Size=2 Low=0 splitIndex=1 high=1
634 [State 0] Switching from state 0 to state 995
Copied 34928 (count=1)
Finalizing TB execution 995
s2e_dummyMainFunction
tcg-llvm-tb-994-8048a0e
Firing timer event
634 [State 995] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 994 not yet applied), shell_len: 1024, eip: 0x00000000

634 [State 995] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
634 [State 995] Leaving buffer range @0xbfba3781, 10 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
634 [State 995] Killing state 995
634 [State 995] Terminating state 995 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
634 [State 995] Switching from state 995 to state 0
Copied 34928 (count=1)
Deleting state 995 0x0x34bbdb70
634 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 994
>> fuzzInit: datum forking for value 995
>> fuzzInit: datum forking for value 995
635 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 995)
        (ReadLSB w32 0 v995_fuzz_symb_995)))
    state 996 with condition (Not (Eq false
         (Eq (w32 995)
             (ReadLSB w32 0 v995_fuzz_symb_995))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-995-8048a0e
Size=2 Low=0 splitIndex=1 high=1
635 [State 0] Switching from state 0 to state 996
Copied 34928 (count=1)
Finalizing TB execution 996
s2e_dummyMainFunction
tcg-llvm-tb-995-8048a0e
635 [State 996] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 995 not yet applied), shell_len: 1024, eip: 0x00000000

635 [State 996] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
635 [State 996] Leaving buffer range @0xbfba3783, f IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
635 [State 996] Killing state 996
635 [State 996] Terminating state 996 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
635 [State 996] Switching from state 996 to state 0
Copied 34928 (count=1)
Deleting state 996 0x0x34bbdb70
Firing timer event
635 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 995
>> fuzzInit: datum forking for value 996
>> fuzzInit: datum forking for value 996
635 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 996)
        (ReadLSB w32 0 v996_fuzz_symb_996)))
    state 997 with condition (Not (Eq false
         (Eq (w32 996)
             (ReadLSB w32 0 v996_fuzz_symb_996))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-996-8048a0e
Size=2 Low=0 splitIndex=1 high=1
635 [State 0] Switching from state 0 to state 997
Copied 34928 (count=1)
Finalizing TB execution 997
s2e_dummyMainFunction
tcg-llvm-tb-996-8048a0e
636 [State 997] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 996 not yet applied), shell_len: 1024, eip: 0x00000000

636 [State 997] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
636 [State 997] Leaving buffer range @0xbfba3781, f IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
636 [State 997] Killing state 997
636 [State 997] Terminating state 997 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
636 [State 997] Switching from state 997 to state 0
Copied 34928 (count=1)
Deleting state 997 0x0x352c8760
636 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 996
>> fuzzInit: datum forking for value 997
>> fuzzInit: datum forking for value 997
636 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 997)
        (ReadLSB w32 0 v997_fuzz_symb_997)))
    state 998 with condition (Not (Eq false
         (Eq (w32 997)
             (ReadLSB w32 0 v997_fuzz_symb_997))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-997-8048a0e
Size=2 Low=0 splitIndex=1 high=1
636 [State 0] Switching from state 0 to state 998
Copied 34928 (count=1)
Finalizing TB execution 998
s2e_dummyMainFunction
tcg-llvm-tb-997-8048a0e
Firing timer event
636 [State 998] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 997 not yet applied), shell_len: 1024, eip: 0x00000000

636 [State 998] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
636 [State 998] Leaving buffer range @0xbfba3783, e IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
636 [State 998] Killing state 998
636 [State 998] Terminating state 998 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
636 [State 998] Switching from state 998 to state 0
Copied 34928 (count=1)
Deleting state 998 0x0x353d9f40
637 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 997
>> fuzzInit: datum forking for value 998
>> fuzzInit: datum forking for value 998
637 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 998)
        (ReadLSB w32 0 v998_fuzz_symb_998)))
    state 999 with condition (Not (Eq false
         (Eq (w32 998)
             (ReadLSB w32 0 v998_fuzz_symb_998))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-998-8048a0e
Size=2 Low=0 splitIndex=1 high=1
637 [State 0] Switching from state 0 to state 999
Copied 34928 (count=1)
Finalizing TB execution 999
s2e_dummyMainFunction
tcg-llvm-tb-998-8048a0e
637 [State 999] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 998 not yet applied), shell_len: 1024, eip: 0x00000000

637 [State 999] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
637 [State 999] Leaving buffer range @0xbfba3781, e IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
637 [State 999] Killing state 999
637 [State 999] Terminating state 999 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
637 [State 999] Switching from state 999 to state 0
Copied 34928 (count=1)
Deleting state 999 0x0x353d9f40
Firing timer event
637 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 998
>> fuzzInit: datum forking for value 999
>> fuzzInit: datum forking for value 999
638 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 999)
        (ReadLSB w32 0 v999_fuzz_symb_999)))
    state 1000 with condition (Not (Eq false
         (Eq (w32 999)
             (ReadLSB w32 0 v999_fuzz_symb_999))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-999-8048a0e
Size=2 Low=0 splitIndex=1 high=1
638 [State 0] Switching from state 0 to state 1000
Copied 34928 (count=1)
Finalizing TB execution 1000
s2e_dummyMainFunction
tcg-llvm-tb-999-8048a0e
638 [State 1000] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 999 not yet applied), shell_len: 1024, eip: 0x00000000

638 [State 1000] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
638 [State 1000] Leaving buffer range @0xbfba3783, d IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
638 [State 1000] Killing state 1000
638 [State 1000] Terminating state 1000 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
638 [State 1000] Switching from state 1000 to state 0
Copied 34928 (count=1)
Deleting state 1000 0x0x353d9f40
638 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 999
>> fuzzInit: datum forking for value 1000
>> fuzzInit: datum forking for value 1000
638 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1000)
        (ReadLSB w32 0 v1000_fuzz_symb_1000)))
    state 1001 with condition (Not (Eq false
         (Eq (w32 1000)
             (ReadLSB w32 0 v1000_fuzz_symb_1000))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1000-8048a0e
Size=2 Low=0 splitIndex=1 high=1
638 [State 0] Switching from state 0 to state 1001
Copied 34928 (count=1)
Finalizing TB execution 1001
s2e_dummyMainFunction
tcg-llvm-tb-1000-8048a0e
Firing timer event
638 [State 1001] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1000 not yet applied), shell_len: 1024, eip: 0x00000000

638 [State 1001] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
638 [State 1001] Leaving buffer range @0xbfba3781, d IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
639 [State 1001] Killing state 1001
639 [State 1001] Terminating state 1001 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
639 [State 1001] Switching from state 1001 to state 0
Copied 34928 (count=1)
Deleting state 1001 0x0x353d9f40
639 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1000
>> fuzzInit: datum forking for value 1001
>> fuzzInit: datum forking for value 1001
639 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1001)
        (ReadLSB w32 0 v1001_fuzz_symb_1001)))
    state 1002 with condition (Not (Eq false
         (Eq (w32 1001)
             (ReadLSB w32 0 v1001_fuzz_symb_1001))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1001-8048a0e
Size=2 Low=0 splitIndex=1 high=1
639 [State 0] Switching from state 0 to state 1002
Copied 34928 (count=1)
Finalizing TB execution 1002
s2e_dummyMainFunction
tcg-llvm-tb-1001-8048a0e
639 [State 1002] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1001 not yet applied), shell_len: 1024, eip: 0x00000000

639 [State 1002] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
639 [State 1002] Leaving buffer range @0xbfba3783, c IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
639 [State 1002] Killing state 1002
639 [State 1002] Terminating state 1002 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
639 [State 1002] Switching from state 1002 to state 0
Copied 34928 (count=1)
Deleting state 1002 0x0x353d9f40
Firing timer event
639 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1001
>> fuzzInit: datum forking for value 1002
>> fuzzInit: datum forking for value 1002
640 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1002)
        (ReadLSB w32 0 v1002_fuzz_symb_1002)))
    state 1003 with condition (Not (Eq false
         (Eq (w32 1002)
             (ReadLSB w32 0 v1002_fuzz_symb_1002))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1002-8048a0e
Size=2 Low=0 splitIndex=1 high=1
640 [State 0] Switching from state 0 to state 1003
Copied 34928 (count=1)
Finalizing TB execution 1003
s2e_dummyMainFunction
tcg-llvm-tb-1002-8048a0e
640 [State 1003] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1002 not yet applied), shell_len: 1024, eip: 0x00000000

640 [State 1003] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
640 [State 1003] Leaving buffer range @0xbfba3781, c IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
640 [State 1003] Killing state 1003
640 [State 1003] Terminating state 1003 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
640 [State 1003] Switching from state 1003 to state 0
Copied 34928 (count=1)
Deleting state 1003 0x0x354deb00
640 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1002
>> fuzzInit: datum forking for value 1003
>> fuzzInit: datum forking for value 1003
641 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1003)
        (ReadLSB w32 0 v1003_fuzz_symb_1003)))
    state 1004 with condition (Not (Eq false
         (Eq (w32 1003)
             (ReadLSB w32 0 v1003_fuzz_symb_1003))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1003-8048a0e
Size=2 Low=0 splitIndex=1 high=1
641 [State 0] Switching from state 0 to state 1004
Copied 34928 (count=1)
Finalizing TB execution 1004
s2e_dummyMainFunction
tcg-llvm-tb-1003-8048a0e
Firing timer event
641 [State 1004] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1003 not yet applied), shell_len: 1024, eip: 0x00000000

641 [State 1004] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
641 [State 1004] Leaving buffer range @0xbfba3783, b IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
641 [State 1004] Killing state 1004
641 [State 1004] Terminating state 1004 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
641 [State 1004] Switching from state 1004 to state 0
Copied 34928 (count=1)
Deleting state 1004 0x0x354deb00
641 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1003
>> fuzzInit: datum forking for value 1004
>> fuzzInit: datum forking for value 1004
641 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1004)
        (ReadLSB w32 0 v1004_fuzz_symb_1004)))
    state 1005 with condition (Not (Eq false
         (Eq (w32 1004)
             (ReadLSB w32 0 v1004_fuzz_symb_1004))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1004-8048a0e
Size=2 Low=0 splitIndex=1 high=1
641 [State 0] Switching from state 0 to state 1005
Copied 34928 (count=1)
Finalizing TB execution 1005
s2e_dummyMainFunction
tcg-llvm-tb-1004-8048a0e
641 [State 1005] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1004 not yet applied), shell_len: 1024, eip: 0x00000000

641 [State 1005] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
641 [State 1005] Leaving buffer range @0xbfba3781, b IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
641 [State 1005] Killing state 1005
641 [State 1005] Terminating state 1005 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
641 [State 1005] Switching from state 1005 to state 0
Copied 34928 (count=1)
Deleting state 1005 0x0x356b3e80
Firing timer event
642 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1004
>> fuzzInit: datum forking for value 1005
>> fuzzInit: datum forking for value 1005
642 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1005)
        (ReadLSB w32 0 v1005_fuzz_symb_1005)))
    state 1006 with condition (Not (Eq false
         (Eq (w32 1005)
             (ReadLSB w32 0 v1005_fuzz_symb_1005))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1005-8048a0e
Size=2 Low=0 splitIndex=1 high=1
642 [State 0] Switching from state 0 to state 1006
Copied 34928 (count=1)
Finalizing TB execution 1006
s2e_dummyMainFunction
tcg-llvm-tb-1005-8048a0e
642 [State 1006] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1005 not yet applied), shell_len: 1024, eip: 0x00000000

642 [State 1006] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
642 [State 1006] Leaving buffer range @0xbfba3783, a IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
642 [State 1006] Killing state 1006
642 [State 1006] Terminating state 1006 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
642 [State 1006] Switching from state 1006 to state 0
Copied 34928 (count=1)
Deleting state 1006 0x0x356b3e80
642 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1005
>> fuzzInit: datum forking for value 1006
>> fuzzInit: datum forking for value 1006
643 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1006)
        (ReadLSB w32 0 v1006_fuzz_symb_1006)))
    state 1007 with condition (Not (Eq false
         (Eq (w32 1006)
             (ReadLSB w32 0 v1006_fuzz_symb_1006))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1006-8048a0e
Size=2 Low=0 splitIndex=1 high=1
643 [State 0] Switching from state 0 to state 1007
Copied 34928 (count=1)
Finalizing TB execution 1007
s2e_dummyMainFunction
tcg-llvm-tb-1006-8048a0e
Firing timer event
643 [State 1007] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1006 not yet applied), shell_len: 1024, eip: 0x00000000

643 [State 1007] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
643 [State 1007] Leaving buffer range @0xbfba3781, a IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
643 [State 1007] Killing state 1007
643 [State 1007] Terminating state 1007 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
643 [State 1007] Switching from state 1007 to state 0
Copied 34928 (count=1)
Deleting state 1007 0x0x3507c6f0
643 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1006
>> fuzzInit: datum forking for value 1007
>> fuzzInit: datum forking for value 1007
643 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1007)
        (ReadLSB w32 0 v1007_fuzz_symb_1007)))
    state 1008 with condition (Not (Eq false
         (Eq (w32 1007)
             (ReadLSB w32 0 v1007_fuzz_symb_1007))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1007-8048a0e
Size=2 Low=0 splitIndex=1 high=1
643 [State 0] Switching from state 0 to state 1008
Copied 34928 (count=1)
Finalizing TB execution 1008
s2e_dummyMainFunction
tcg-llvm-tb-1007-8048a0e
643 [State 1008] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1007 not yet applied), shell_len: 1024, eip: 0x00000000

643 [State 1008] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
644 [State 1008] Leaving buffer range @0xbfba3783, 9 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
644 [State 1008] Killing state 1008
644 [State 1008] Terminating state 1008 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
644 [State 1008] Switching from state 1008 to state 0
Copied 34928 (count=1)
Deleting state 1008 0x0x35229b80
Firing timer event
644 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1007
>> fuzzInit: datum forking for value 1008
>> fuzzInit: datum forking for value 1008
644 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1008)
        (ReadLSB w32 0 v1008_fuzz_symb_1008)))
    state 1009 with condition (Not (Eq false
         (Eq (w32 1008)
             (ReadLSB w32 0 v1008_fuzz_symb_1008))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1008-8048a0e
Size=2 Low=0 splitIndex=1 high=1
644 [State 0] Switching from state 0 to state 1009
Copied 34928 (count=1)
Finalizing TB execution 1009
s2e_dummyMainFunction
tcg-llvm-tb-1008-8048a0e
644 [State 1009] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1008 not yet applied), shell_len: 1024, eip: 0x00000000

644 [State 1009] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
644 [State 1009] Leaving buffer range @0xbfba3781, 9 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
644 [State 1009] Killing state 1009
644 [State 1009] Terminating state 1009 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
644 [State 1009] Switching from state 1009 to state 0
Copied 34928 (count=1)
Deleting state 1009 0x0x35229b80
644 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1008
>> fuzzInit: datum forking for value 1009
>> fuzzInit: datum forking for value 1009
645 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1009)
        (ReadLSB w32 0 v1009_fuzz_symb_1009)))
    state 1010 with condition (Not (Eq false
         (Eq (w32 1009)
             (ReadLSB w32 0 v1009_fuzz_symb_1009))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1009-8048a0e
Size=2 Low=0 splitIndex=1 high=1
645 [State 0] Switching from state 0 to state 1010
Copied 34928 (count=1)
Finalizing TB execution 1010
s2e_dummyMainFunction
tcg-llvm-tb-1009-8048a0e
Firing timer event
645 [State 1010] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1009 not yet applied), shell_len: 1024, eip: 0x00000000

645 [State 1010] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
645 [State 1010] Leaving buffer range @0xbfba3783, 8 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
645 [State 1010] Killing state 1010
645 [State 1010] Terminating state 1010 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
645 [State 1010] Switching from state 1010 to state 0
Copied 34928 (count=1)
Deleting state 1010 0x0x35229b80
645 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1009
>> fuzzInit: datum forking for value 1010
>> fuzzInit: datum forking for value 1010
645 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1010)
        (ReadLSB w32 0 v1010_fuzz_symb_1010)))
    state 1011 with condition (Not (Eq false
         (Eq (w32 1010)
             (ReadLSB w32 0 v1010_fuzz_symb_1010))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1010-8048a0e
Size=2 Low=0 splitIndex=1 high=1
646 [State 0] Switching from state 0 to state 1011
Copied 34928 (count=1)
Finalizing TB execution 1011
s2e_dummyMainFunction
tcg-llvm-tb-1010-8048a0e
646 [State 1011] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1010 not yet applied), shell_len: 1024, eip: 0x00000000

646 [State 1011] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
646 [State 1011] Leaving buffer range @0xbfba3781, 8 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
646 [State 1011] Killing state 1011
646 [State 1011] Terminating state 1011 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
646 [State 1011] Switching from state 1011 to state 0
Copied 34928 (count=1)
Deleting state 1011 0x0x358c5930
Firing timer event
646 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1010
>> fuzzInit: datum forking for value 1011
>> fuzzInit: datum forking for value 1011
646 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1011)
        (ReadLSB w32 0 v1011_fuzz_symb_1011)))
    state 1012 with condition (Not (Eq false
         (Eq (w32 1011)
             (ReadLSB w32 0 v1011_fuzz_symb_1011))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1011-8048a0e
Size=2 Low=0 splitIndex=1 high=1
646 [State 0] Switching from state 0 to state 1012
Copied 34928 (count=1)
Finalizing TB execution 1012
s2e_dummyMainFunction
tcg-llvm-tb-1011-8048a0e
646 [State 1012] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1011 not yet applied), shell_len: 1024, eip: 0x00000000

646 [State 1012] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
646 [State 1012] Leaving buffer range @0xbfba3783, 7 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
646 [State 1012] Killing state 1012
646 [State 1012] Terminating state 1012 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
646 [State 1012] Switching from state 1012 to state 0
Copied 34928 (count=1)
Deleting state 1012 0x0x358c5930
647 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1011
>> fuzzInit: datum forking for value 1012
>> fuzzInit: datum forking for value 1012
647 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1012)
        (ReadLSB w32 0 v1012_fuzz_symb_1012)))
    state 1013 with condition (Not (Eq false
         (Eq (w32 1012)
             (ReadLSB w32 0 v1012_fuzz_symb_1012))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1012-8048a0e
Size=2 Low=0 splitIndex=1 high=1
647 [State 0] Switching from state 0 to state 1013
Copied 34928 (count=1)
Finalizing TB execution 1013
s2e_dummyMainFunction
tcg-llvm-tb-1012-8048a0e
Firing timer event
647 [State 1013] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1012 not yet applied), shell_len: 1024, eip: 0x00000000

647 [State 1013] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
647 [State 1013] Leaving buffer range @0xbfba3781, 7 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
647 [State 1013] Killing state 1013
647 [State 1013] Terminating state 1013 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
647 [State 1013] Switching from state 1013 to state 0
Copied 34928 (count=1)
Deleting state 1013 0x0x358c5930
647 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1012
>> fuzzInit: datum forking for value 1013
>> fuzzInit: datum forking for value 1013
648 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1013)
        (ReadLSB w32 0 v1013_fuzz_symb_1013)))
    state 1014 with condition (Not (Eq false
         (Eq (w32 1013)
             (ReadLSB w32 0 v1013_fuzz_symb_1013))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1013-8048a0e
Size=2 Low=0 splitIndex=1 high=1
648 [State 0] Switching from state 0 to state 1014
Copied 34928 (count=1)
Finalizing TB execution 1014
s2e_dummyMainFunction
tcg-llvm-tb-1013-8048a0e
648 [State 1014] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1013 not yet applied), shell_len: 1024, eip: 0x00000000

648 [State 1014] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
648 [State 1014] Leaving buffer range @0xbfba3783, 6 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
648 [State 1014] Killing state 1014
648 [State 1014] Terminating state 1014 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
648 [State 1014] Switching from state 1014 to state 0
Copied 34928 (count=1)
Deleting state 1014 0x0x358e4060
Firing timer event
648 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1013
>> fuzzInit: datum forking for value 1014
>> fuzzInit: datum forking for value 1014
648 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1014)
        (ReadLSB w32 0 v1014_fuzz_symb_1014)))
    state 1015 with condition (Not (Eq false
         (Eq (w32 1014)
             (ReadLSB w32 0 v1014_fuzz_symb_1014))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1014-8048a0e
Size=2 Low=0 splitIndex=1 high=1
648 [State 0] Switching from state 0 to state 1015
Copied 34928 (count=1)
Finalizing TB execution 1015
s2e_dummyMainFunction
tcg-llvm-tb-1014-8048a0e
648 [State 1015] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1014 not yet applied), shell_len: 1024, eip: 0x00000000

648 [State 1015] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
649 [State 1015] Leaving buffer range @0xbfba3781, 6 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
649 [State 1015] Killing state 1015
649 [State 1015] Terminating state 1015 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
649 [State 1015] Switching from state 1015 to state 0
Copied 34928 (count=1)
Deleting state 1015 0x0x359e7680
649 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1014
>> fuzzInit: datum forking for value 1015
>> fuzzInit: datum forking for value 1015
649 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1015)
        (ReadLSB w32 0 v1015_fuzz_symb_1015)))
    state 1016 with condition (Not (Eq false
         (Eq (w32 1015)
             (ReadLSB w32 0 v1015_fuzz_symb_1015))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1015-8048a0e
Size=2 Low=0 splitIndex=1 high=1
649 [State 0] Switching from state 0 to state 1016
Copied 34928 (count=1)
Finalizing TB execution 1016
s2e_dummyMainFunction
tcg-llvm-tb-1015-8048a0e
Firing timer event
649 [State 1016] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1015 not yet applied), shell_len: 1024, eip: 0x00000000

649 [State 1016] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
649 [State 1016] Leaving buffer range @0xbfba3783, 5 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
649 [State 1016] Killing state 1016
649 [State 1016] Terminating state 1016 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
649 [State 1016] Switching from state 1016 to state 0
Copied 34928 (count=1)
Deleting state 1016 0x0x359e7680
649 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1015
>> fuzzInit: datum forking for value 1016
>> fuzzInit: datum forking for value 1016
650 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1016)
        (ReadLSB w32 0 v1016_fuzz_symb_1016)))
    state 1017 with condition (Not (Eq false
         (Eq (w32 1016)
             (ReadLSB w32 0 v1016_fuzz_symb_1016))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1016-8048a0e
Size=2 Low=0 splitIndex=1 high=1
650 [State 0] Switching from state 0 to state 1017
Copied 34928 (count=1)
Finalizing TB execution 1017
s2e_dummyMainFunction
tcg-llvm-tb-1016-8048a0e
650 [State 1017] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1016 not yet applied), shell_len: 1024, eip: 0x00000000

650 [State 1017] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
650 [State 1017] Leaving buffer range @0xbfba3781, 5 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
650 [State 1017] Killing state 1017
650 [State 1017] Terminating state 1017 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
650 [State 1017] Switching from state 1017 to state 0
Copied 34928 (count=1)
Deleting state 1017 0x0x359e7680
Firing timer event
650 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1016
>> fuzzInit: datum forking for value 1017
>> fuzzInit: datum forking for value 1017
650 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1017)
        (ReadLSB w32 0 v1017_fuzz_symb_1017)))
    state 1018 with condition (Not (Eq false
         (Eq (w32 1017)
             (ReadLSB w32 0 v1017_fuzz_symb_1017))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1017-8048a0e
Size=2 Low=0 splitIndex=1 high=1
650 [State 0] Switching from state 0 to state 1018
Copied 34928 (count=1)
Finalizing TB execution 1018
s2e_dummyMainFunction
tcg-llvm-tb-1017-8048a0e
651 [State 1018] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1017 not yet applied), shell_len: 1024, eip: 0x00000000

651 [State 1018] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
651 [State 1018] Leaving buffer range @0xbfba3783, 4 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
651 [State 1018] Killing state 1018
651 [State 1018] Terminating state 1018 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
651 [State 1018] Switching from state 1018 to state 0
Copied 34928 (count=1)
Deleting state 1018 0x0x359e7680
651 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1017
>> fuzzInit: datum forking for value 1018
>> fuzzInit: datum forking for value 1018
651 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1018)
        (ReadLSB w32 0 v1018_fuzz_symb_1018)))
    state 1019 with condition (Not (Eq false
         (Eq (w32 1018)
             (ReadLSB w32 0 v1018_fuzz_symb_1018))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1018-8048a0e
Size=2 Low=0 splitIndex=1 high=1
651 [State 0] Switching from state 0 to state 1019
Copied 34928 (count=1)
Finalizing TB execution 1019
s2e_dummyMainFunction
tcg-llvm-tb-1018-8048a0e
Firing timer event
651 [State 1019] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1018 not yet applied), shell_len: 1024, eip: 0x00000000

651 [State 1019] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
651 [State 1019] Leaving buffer range @0xbfba3781, 4 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
651 [State 1019] Killing state 1019
651 [State 1019] Terminating state 1019 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
651 [State 1019] Switching from state 1019 to state 0
Copied 34928 (count=1)
Deleting state 1019 0x0x35ba42c0
651 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1018
>> fuzzInit: datum forking for value 1019
>> fuzzInit: datum forking for value 1019
652 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1019)
        (ReadLSB w32 0 v1019_fuzz_symb_1019)))
    state 1020 with condition (Not (Eq false
         (Eq (w32 1019)
             (ReadLSB w32 0 v1019_fuzz_symb_1019))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1019-8048a0e
Size=2 Low=0 splitIndex=1 high=1
652 [State 0] Switching from state 0 to state 1020
Copied 34928 (count=1)
Finalizing TB execution 1020
s2e_dummyMainFunction
tcg-llvm-tb-1019-8048a0e
652 [State 1020] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1019 not yet applied), shell_len: 1024, eip: 0x00000000

652 [State 1020] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
652 [State 1020] Leaving buffer range @0xbfba3783, 3 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
652 [State 1020] Killing state 1020
652 [State 1020] Terminating state 1020 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
652 [State 1020] Switching from state 1020 to state 0
Copied 34928 (count=1)
Deleting state 1020 0x0x35b6dd50
Firing timer event
652 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1019
>> fuzzInit: datum forking for value 1020
>> fuzzInit: datum forking for value 1020
653 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1020)
        (ReadLSB w32 0 v1020_fuzz_symb_1020)))
    state 1021 with condition (Not (Eq false
         (Eq (w32 1020)
             (ReadLSB w32 0 v1020_fuzz_symb_1020))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1020-8048a0e
Size=2 Low=0 splitIndex=1 high=1
653 [State 0] Switching from state 0 to state 1021
Copied 34928 (count=1)
Finalizing TB execution 1021
s2e_dummyMainFunction
tcg-llvm-tb-1020-8048a0e
653 [State 1021] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1020 not yet applied), shell_len: 1024, eip: 0x00000000

653 [State 1021] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
653 [State 1021] Leaving buffer range @0xbfba3781, 3 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
653 [State 1021] Killing state 1021
653 [State 1021] Terminating state 1021 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
653 [State 1021] Switching from state 1021 to state 0
Copied 34928 (count=1)
Deleting state 1021 0x0x35b6dd50
653 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1020
>> fuzzInit: datum forking for value 1021
>> fuzzInit: datum forking for value 1021
653 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1021)
        (ReadLSB w32 0 v1021_fuzz_symb_1021)))
    state 1022 with condition (Not (Eq false
         (Eq (w32 1021)
             (ReadLSB w32 0 v1021_fuzz_symb_1021))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1021-8048a0e
Size=2 Low=0 splitIndex=1 high=1
653 [State 0] Switching from state 0 to state 1022
Copied 34928 (count=1)
Finalizing TB execution 1022
s2e_dummyMainFunction
tcg-llvm-tb-1021-8048a0e
Firing timer event
653 [State 1022] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1021 not yet applied), shell_len: 1024, eip: 0x00000000

653 [State 1022] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
653 [State 1022] Leaving buffer range @0xbfba3783, 2 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
653 [State 1022] Killing state 1022
653 [State 1022] Terminating state 1022 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
653 [State 1022] Switching from state 1022 to state 0
Copied 34928 (count=1)
Deleting state 1022 0x0x35b145e0
654 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1021
>> fuzzInit: datum forking for value 1022
>> fuzzInit: datum forking for value 1022
654 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1022)
        (ReadLSB w32 0 v1022_fuzz_symb_1022)))
    state 1023 with condition (Not (Eq false
         (Eq (w32 1022)
             (ReadLSB w32 0 v1022_fuzz_symb_1022))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1022-8048a0e
Size=2 Low=0 splitIndex=1 high=1
654 [State 0] Switching from state 0 to state 1023
Copied 34928 (count=1)
Finalizing TB execution 1023
s2e_dummyMainFunction
tcg-llvm-tb-1022-8048a0e
654 [State 1023] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1022 not yet applied), shell_len: 1024, eip: 0x00000000

654 [State 1023] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
654 [State 1023] Leaving buffer range @0xbfba3781, 2 IoB insns; prev insn @0xbfba3780
  1   1B @0xbfba3780:  0                invalid                 
654 [State 1023] Killing state 1023
654 [State 1023] Terminating state 1023 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 4"
            status: 1'
654 [State 1023] Switching from state 1023 to state 0
Copied 34928 (count=1)
Deleting state 1023 0x0x35b1d140
654 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1022
>> fuzzInit: datum forking for value 1023
>> fuzzInit: datum forking for value 1023
655 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1023)
        (ReadLSB w32 0 v1023_fuzz_symb_1023)))
    state 1024 with condition (Not (Eq false
         (Eq (w32 1023)
             (ReadLSB w32 0 v1023_fuzz_symb_1023))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1023-8048a0e
Size=2 Low=0 splitIndex=1 high=1
655 [State 0] Switching from state 0 to state 1024
Copied 34928 (count=1)
Finalizing TB execution 1024
s2e_dummyMainFunction
tcg-llvm-tb-1023-8048a0e
Firing timer event
655 [State 1024] Message from guest (0xbfba29dc): << About to call dasospreproc_init with shell: 0xbfba3380 (offset of 1023 not yet applied), shell_len: 1024, eip: 0x00000000

655 [State 1024] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfba3380-0xbfba3780 with eip: 0x0 buffer length: 1024 and syscall number: 1024
655 [State 1024] Leaving buffer range @0xbfba3783, 1 IoB insns; prev insn @0xbfba377f
  1   4B @0xbfba377f:  0  0  0  0      disasm didn't do all insn bytes: 2/4
655 [State 1024] Killing state 1024
655 [State 1024] Terminating state 1024 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11"
            status: 1'
655 [State 1024] Switching from state 1024 to state 0
Copied 34928 (count=1)
Deleting state 1024 0x0x35b1d140
655 [State 0] Message from guest (0xbfba29dc): << Looping fork, currently at 1023
655 [State 0] >> Recv'ed onFini custom insn
>> Recv'ed onFini custom insn
>> There were a successes
>>    Printing success 0
>> Success densities, overlay: 0.990706; avg: 0.990706
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3380:  0  0             add [eax], al           
>>      2   2B @0xbfba3382:  0  0             add [eax], al           
>>      3   2B @0xbfba3384:  0  0             add [eax], al           
>>      4   2B @0xbfba3386:  0  0             add [eax], al           
>>      5   2B @0xbfba3388:  0  0             add [eax], al           
>>      6   2B @0xbfba338a:  0  0             add [eax], al           
>>      7   2B @0xbfba338c:  0  0             add [eax], al           
>>      8   2B @0xbfba338e:  0  0             add [eax], al           
>>      9   2B @0xbfba3390:  0  0             add [eax], al           
>>     10   2B @0xbfba3392:  0  0             add [eax], al           
>>     11   2B @0xbfba3394:  0  0             add [eax], al           
>>     12   2B @0xbfba3396:  0  0             add [eax], al           
>>     13   2B @0xbfba3398:  0  0             add [eax], al           
>>     14   2B @0xbfba339a:  0  0             add [eax], al           
>>     15   2B @0xbfba339c:  0  0             add [eax], al           
>>     16   2B @0xbfba339e:  0  0             add [eax], al           
>>     17   2B @0xbfba33a0:  0  0             add [eax], al           
>>     18   2B @0xbfba33a2:  0  0             add [eax], al           
>>     19   2B @0xbfba33a4:  0  0             add [eax], al           
>>     20   2B @0xbfba33a6:  0  0             add [eax], al           
>>     21   2B @0xbfba33a8:  0  0             add [eax], al           
>>     22   2B @0xbfba33aa:  0  0             add [eax], al           
>>     23   2B @0xbfba33ac:  0  0             add [eax], al           
>>     24   2B @0xbfba33ae:  0  0             add [eax], al           
>>     25   2B @0xbfba33b0:  0  0             add [eax], al           
>>     26   2B @0xbfba33b2:  0  0             add [eax], al           
>>     27   2B @0xbfba33b4:  0  0             add [eax], al           
>>     28   2B @0xbfba33b6:  0  0             add [eax], al           
>>     29   2B @0xbfba33b8:  0  0             add [eax], al           
>>     30   2B @0xbfba33ba:  0  0             add [eax], al           
>>     31   2B @0xbfba33bc:  0  0             add [eax], al           
>>     32   2B @0xbfba33be:  0  0             add [eax], al           
>>     33   2B @0xbfba33c0:  0  0             add [eax], al           
>>     34   2B @0xbfba33c2:  0  0             add [eax], al           
>>     35   2B @0xbfba33c4:  0  0             add [eax], al           
>>     36   2B @0xbfba33c6:  0  0             add [eax], al           
>>     37   2B @0xbfba33c8:  0  0             add [eax], al           
>>     38   2B @0xbfba33ca:  0  0             add [eax], al           
>>     39   2B @0xbfba33cc:  0  0             add [eax], al           
>>     40   2B @0xbfba33ce:  0  0             add [eax], al           
>>     41   2B @0xbfba33d0:  0  0             add [eax], al           
>>     42   2B @0xbfba33d2:  0  0             add [eax], al           
>>     43   2B @0xbfba33d4:  0  0             add [eax], al           
>>     44   2B @0xbfba33d6:  0  0             add [eax], al           
>>     45   2B @0xbfba33d8:  0  0             add [eax], al           
>>     46   2B @0xbfba33da:  0  0             add [eax], al           
>>     47   2B @0xbfba33dc:  0  0             add [eax], al           
>>     48   2B @0xbfba33de:  0  0             add [eax], al           
>>     49   2B @0xbfba33e0:  0  0             add [eax], al           
>>     50   2B @0xbfba33e2:  0  0             add [eax], al           
>>     51   2B @0xbfba33e4:  0  0             add [eax], al           
>>     52   2B @0xbfba33e6:  0  0             add [eax], al           
>>     53   2B @0xbfba33e8:  0  0             add [eax], al           
>>     54   2B @0xbfba33ea:  0  0             add [eax], al           
>>     55   2B @0xbfba33ec:  0  0             add [eax], al           
>>     56   2B @0xbfba33ee:  0  0             add [eax], al           
>>     57   2B @0xbfba33f0:  0  0             add [eax], al           
>>     58   2B @0xbfba33f2:  0  0             add [eax], al           
>>     59   2B @0xbfba33f4:  0  0             add [eax], al           
>>     60   2B @0xbfba33f6:  0  0             add [eax], al           
>>     61   2B @0xbfba33f8:  0  0             add [eax], al           
>>     62   2B @0xbfba33fa:  0  0             add [eax], al           
>>     63   2B @0xbfba33fc:  0  0             add [eax], al           
>>     64   2B @0xbfba33fe:  0  0             add [eax], al           
>>     65   2B @0xbfba3400:  0  0             add [eax], al           
>>     66   2B @0xbfba3402:  0  0             add [eax], al           
>>     67   2B @0xbfba3404:  0  0             add [eax], al           
>>     68   2B @0xbfba3406:  0  0             add [eax], al           
>>     69   2B @0xbfba3408:  0  0             add [eax], al           
>>     70   2B @0xbfba340a:  0  0             add [eax], al           
>>     71   2B @0xbfba340c:  0  0             add [eax], al           
>>     72   2B @0xbfba340e:  0  0             add [eax], al           
>>     73   2B @0xbfba3410:  0  0             add [eax], al           
>>     74   2B @0xbfba3412:  0  0             add [eax], al           
>>     75   2B @0xbfba3414:  0  0             add [eax], al           
>>     76   2B @0xbfba3416:  0  0             add [eax], al           
>>     77   2B @0xbfba3418:  0  0             add [eax], al           
>>     78   2B @0xbfba341a:  0  0             add [eax], al           
>>     79   2B @0xbfba341c:  0  0             add [eax], al           
>>     80   2B @0xbfba341e:  0  0             add [eax], al           
>>     81   2B @0xbfba3420:  0  0             add [eax], al           
>>     82   2B @0xbfba3422:  0  0             add [eax], al           
>>     83   2B @0xbfba3424:  0  0             add [eax], al           
>>     84   2B @0xbfba3426:  0  0             add [eax], al           
>>     85   2B @0xbfba3428:  0  0             add [eax], al           
>>     86   2B @0xbfba342a:  0  0             add [eax], al           
>>     87   2B @0xbfba342c:  0  0             add [eax], al           
>>     88   2B @0xbfba342e:  0  0             add [eax], al           
>>     89   2B @0xbfba3430:  0  0             add [eax], al           
>>     90   2B @0xbfba3432:  0  0             add [eax], al           
>>     91   2B @0xbfba3434:  0  0             add [eax], al           
>>     92   2B @0xbfba3436:  0  0             add [eax], al           
>>     93   2B @0xbfba3438:  0  0             add [eax], al           
>>     94   2B @0xbfba343a:  0  0             add [eax], al           
>>     95   2B @0xbfba343c:  0  0             add [eax], al           
>>     96   2B @0xbfba343e:  0  0             add [eax], al           
>>     97   2B @0xbfba3440:  0  0             add [eax], al           
>>     98   2B @0xbfba3442:  0  0             add [eax], al           
>>     99   2B @0xbfba3444:  0  0             add [eax], al           
>>    100   2B @0xbfba3446:  0  0             add [eax], al           
>>    101   2B @0xbfba3448:  0  0             add [eax], al           
>>    102   2B @0xbfba344a:  0  0             add [eax], al           
>>    103   2B @0xbfba344c:  0  0             add [eax], al           
>>    104   2B @0xbfba344e:  0  0             add [eax], al           
>>    105   2B @0xbfba3450:  0  0             add [eax], al           
>>    106   2B @0xbfba3452:  0  0             add [eax], al           
>>    107   2B @0xbfba3454:  0  0             add [eax], al           
>>    108   2B @0xbfba3456:  0  0             add [eax], al           
>>    109   2B @0xbfba3458:  0  0             add [eax], al           
>>    110   2B @0xbfba345a:  0  0             add [eax], al           
>>    111   2B @0xbfba345c:  0  0             add [eax], al           
>>    112   2B @0xbfba345e:  0  0             add [eax], al           
>>    113   2B @0xbfba3460:  0  0             add [eax], al           
>>    114   2B @0xbfba3462:  0  0             add [eax], al           
>>    115   2B @0xbfba3464:  0  0             add [eax], al           
>>    116   2B @0xbfba3466:  0  0             add [eax], al           
>>    117   2B @0xbfba3468:  0  0             add [eax], al           
>>    118   2B @0xbfba346a:  0  0             add [eax], al           
>>    119   2B @0xbfba346c:  0  0             add [eax], al           
>>    120   2B @0xbfba346e:  0  0             add [eax], al           
>>    121   2B @0xbfba3470:  0  0             add [eax], al           
>>    122   2B @0xbfba3472:  0  0             add [eax], al           
>>    123   2B @0xbfba3474:  0  0             add [eax], al           
>>    124   2B @0xbfba3476:  0  0             add [eax], al           
>>    125   2B @0xbfba3478:  0  0             add [eax], al           
>>    126   2B @0xbfba347a:  0  0             add [eax], al           
>>    127   2B @0xbfba347c:  0  0             add [eax], al           
>>    128   2B @0xbfba347e:  0  0             add [eax], al           
>>    129   2B @0xbfba3480:  0  0             add [eax], al           
>>    130   2B @0xbfba3482:  0  0             add [eax], al           
>>    131   2B @0xbfba3484:  0  0             add [eax], al           
>>    132   2B @0xbfba3486:  0  0             add [eax], al           
>>    133   2B @0xbfba3488:  0  0             add [eax], al           
>>    134   2B @0xbfba348a:  0  0             add [eax], al           
>>    135   2B @0xbfba348c:  0  0             add [eax], al           
>>    136   2B @0xbfba348e:  0  0             add [eax], al           
>>    137   2B @0xbfba3490:  0  0             add [eax], al           
>>    138   2B @0xbfba3492:  0  0             add [eax], al           
>>    139   2B @0xbfba3494:  0  0             add [eax], al           
>>    140   2B @0xbfba3496:  0  0             add [eax], al           
>>    141   2B @0xbfba3498:  0  0             add [eax], al           
>>    142   2B @0xbfba349a:  0  0             add [eax], al           
>>    143   2B @0xbfba349c:  0  0             add [eax], al           
>>    144   2B @0xbfba349e:  0  0             add [eax], al           
>>    145   2B @0xbfba34a0:  0  0             add [eax], al           
>>    146   2B @0xbfba34a2:  0  0             add [eax], al           
>>    147   2B @0xbfba34a4:  0  0             add [eax], al           
>>    148   2B @0xbfba34a6:  0  0             add [eax], al           
>>    149   2B @0xbfba34a8:  0  0             add [eax], al           
>>    150   2B @0xbfba34aa:  0  0             add [eax], al           
>>    151   2B @0xbfba34ac:  0  0             add [eax], al           
>>    152   2B @0xbfba34ae:  0  0             add [eax], al           
>>    153   2B @0xbfba34b0:  0  0             add [eax], al           
>>    154   2B @0xbfba34b2:  0  0             add [eax], al           
>>    155   2B @0xbfba34b4:  0  0             add [eax], al           
>>    156   2B @0xbfba34b6:  0  0             add [eax], al           
>>    157   2B @0xbfba34b8:  0  0             add [eax], al           
>>    158   2B @0xbfba34ba:  0  0             add [eax], al           
>>    159   2B @0xbfba34bc:  0  0             add [eax], al           
>>    160   2B @0xbfba34be:  0  0             add [eax], al           
>>    161   2B @0xbfba34c0:  0  0             add [eax], al           
>>    162   2B @0xbfba34c2:  0  0             add [eax], al           
>>    163   2B @0xbfba34c4:  0  0             add [eax], al           
>>    164   2B @0xbfba34c6:  0  0             add [eax], al           
>>    165   2B @0xbfba34c8:  0  0             add [eax], al           
>>    166   2B @0xbfba34ca:  0  0             add [eax], al           
>>    167   2B @0xbfba34cc:  0  0             add [eax], al           
>>    168   2B @0xbfba34ce:  0  0             add [eax], al           
>>    169   2B @0xbfba34d0:  0  0             add [eax], al           
>>    170   2B @0xbfba34d2:  0  0             add [eax], al           
>>    171   2B @0xbfba34d4:  0  0             add [eax], al           
>>    172   2B @0xbfba34d6:  0  0             add [eax], al           
>>    173   2B @0xbfba34d8:  0  0             add [eax], al           
>>    174   2B @0xbfba34da:  0  0             add [eax], al           
>>    175   2B @0xbfba34dc:  0  0             add [eax], al           
>>    176   2B @0xbfba34de:  0  0             add [eax], al           
>>    177   2B @0xbfba34e0:  0  0             add [eax], al           
>>    178   2B @0xbfba34e2:  0  0             add [eax], al           
>>    179   2B @0xbfba34e4:  0  0             add [eax], al           
>>    180   2B @0xbfba34e6:  0  0             add [eax], al           
>>    181   2B @0xbfba34e8:  0  0             add [eax], al           
>>    182   2B @0xbfba34ea:  0  0             add [eax], al           
>>    183   2B @0xbfba34ec:  0  0             add [eax], al           
>>    184   2B @0xbfba34ee:  0  0             add [eax], al           
>>    185   2B @0xbfba34f0:  0  0             add [eax], al           
>>    186   2B @0xbfba34f2:  0  0             add [eax], al           
>>    187   2B @0xbfba34f4:  0  0             add [eax], al           
>>    188   2B @0xbfba34f6:  0  0             add [eax], al           
>>    189   2B @0xbfba34f8:  0  0             add [eax], al           
>>    190   2B @0xbfba34fa:  0  0             add [eax], al           
>>    191   2B @0xbfba34fc:  0  0             add [eax], al           
>>    192   2B @0xbfba34fe:  0  0             add [eax], al           
>>    193   2B @0xbfba3500:  0  0             add [eax], al           
>>    194   2B @0xbfba3502:  0  0             add [eax], al           
>>    195   2B @0xbfba3504:  0  0             add [eax], al           
>>    196   2B @0xbfba3506:  0  0             add [eax], al           
>>    197   2B @0xbfba3508:  0  0             add [eax], al           
>>    198   2B @0xbfba350a:  0  0             add [eax], al           
>>    199   2B @0xbfba350c:  0  0             add [eax], al           
>>    200   2B @0xbfba350e:  0  0             add [eax], al           
>>    201   2B @0xbfba3510:  0  0             add [eax], al           
>>    202   2B @0xbfba3512:  0  0             add [eax], al           
>>    203   2B @0xbfba3514:  0  0             add [eax], al           
>>    204   2B @0xbfba3516:  0  0             add [eax], al           
>>    205   2B @0xbfba3518:  0  0             add [eax], al           
>>    206   2B @0xbfba351a:  0  0             add [eax], al           
>>    207   2B @0xbfba351c:  0  0             add [eax], al           
>>    208   2B @0xbfba351e:  0  0             add [eax], al           
>>    209   2B @0xbfba3520:  0  0             add [eax], al           
>>    210   2B @0xbfba3522:  0  0             add [eax], al           
>>    211   2B @0xbfba3524:  0  0             add [eax], al           
>>    212   2B @0xbfba3526:  0  0             add [eax], al           
>>    213   2B @0xbfba3528:  0  0             add [eax], al           
>>    214   2B @0xbfba352a:  0  0             add [eax], al           
>>    215   2B @0xbfba352c:  0  0             add [eax], al           
>>    216   2B @0xbfba352e:  0  0             add [eax], al           
>>    217   2B @0xbfba3530:  0  0             add [eax], al           
>>    218   2B @0xbfba3532:  0  0             add [eax], al           
>>    219   2B @0xbfba3534:  0  0             add [eax], al           
>>    220   2B @0xbfba3536:  0  0             add [eax], al           
>>    221   2B @0xbfba3538:  0  0             add [eax], al           
>>    222   2B @0xbfba353a:  0  0             add [eax], al           
>>    223   2B @0xbfba353c:  0  0             add [eax], al           
>>    224   2B @0xbfba353e:  0  0             add [eax], al           
>>    225   2B @0xbfba3540:  0  0             add [eax], al           
>>    226   2B @0xbfba3542:  0  0             add [eax], al           
>>    227   2B @0xbfba3544:  0  0             add [eax], al           
>>    228   2B @0xbfba3546:  0  0             add [eax], al           
>>    229   2B @0xbfba3548:  0  0             add [eax], al           
>>    230   2B @0xbfba354a:  0  0             add [eax], al           
>>    231   2B @0xbfba354c:  0  0             add [eax], al           
>>    232   2B @0xbfba354e:  0  0             add [eax], al           
>>    233   2B @0xbfba3550:  0  0             add [eax], al           
>>    234   2B @0xbfba3552:  0  0             add [eax], al           
>>    235   2B @0xbfba3554:  0  0             add [eax], al           
>>    236   2B @0xbfba3556:  0  0             add [eax], al           
>>    237   2B @0xbfba3558:  0  0             add [eax], al           
>>    238   2B @0xbfba355a:  0  0             add [eax], al           
>>    239   2B @0xbfba355c:  0  0             add [eax], al           
>>    240   2B @0xbfba355e:  0  0             add [eax], al           
>>    241   2B @0xbfba3560:  0  0             add [eax], al           
>>    242   2B @0xbfba3562:  0  0             add [eax], al           
>>    243   2B @0xbfba3564:  0  0             add [eax], al           
>>    244   2B @0xbfba3566:  0  0             add [eax], al           
>>    245   2B @0xbfba3568:  0  0             add [eax], al           
>>    246   2B @0xbfba356a:  0  0             add [eax], al           
>>    247   2B @0xbfba356c:  0  0             add [eax], al           
>>    248   2B @0xbfba356e:  0  0             add [eax], al           
>>    249   2B @0xbfba3570:  0  0             add [eax], al           
>>    250   2B @0xbfba3572:  0  0             add [eax], al           
>>    251   2B @0xbfba3574:  0  0             add [eax], al           
>>    252   2B @0xbfba3576:  0  0             add [eax], al           
>>    253   2B @0xbfba3578:  0  0             add [eax], al           
>>    254   2B @0xbfba357a:  0  0             add [eax], al           
>>    255   2B @0xbfba357c:  0  0             add [eax], al           
>>    256   2B @0xbfba357e:  0  0             add [eax], al           
>>    257   2B @0xbfba3580: eb 13             jmp 0x15                
>>    258   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    259   1B @0xbfba3582: 59                pop ecx                 
>>    260   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    261   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    262   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    263   1B @0xbfba3589: 43                inc ebx                 
>>    264   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    265   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    266   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (533/538) = 0.990706
>>    Mem_map start_addr: 0xbfba3380, length: 1024B, exec'ed bytes: 533, range: 538B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3380 00000000 00000000 00000000 00000000  ................
0xbfba3390 00000000 00000000 00000000 00000000  ................
0xbfba33a0 00000000 00000000 00000000 00000000  ................
0xbfba33b0 00000000 00000000 00000000 00000000  ................
0xbfba33c0 00000000 00000000 00000000 00000000  ................
0xbfba33d0 00000000 00000000 00000000 00000000  ................
0xbfba33e0 00000000 00000000 00000000 00000000  ................
0xbfba33f0 00000000 00000000 00000000 00000000  ................
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 0
>>    Printing success 1
>> Success densities, overlay: 0.990079; avg: 0.990079
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33a2:  0  0             add [eax], al           
>>      2   2B @0xbfba33a4:  0  0             add [eax], al           
>>      3   2B @0xbfba33a6:  0  0             add [eax], al           
>>      4   2B @0xbfba33a8:  0  0             add [eax], al           
>>      5   2B @0xbfba33aa:  0  0             add [eax], al           
>>      6   2B @0xbfba33ac:  0  0             add [eax], al           
>>      7   2B @0xbfba33ae:  0  0             add [eax], al           
>>      8   2B @0xbfba33b0:  0  0             add [eax], al           
>>      9   2B @0xbfba33b2:  0  0             add [eax], al           
>>     10   2B @0xbfba33b4:  0  0             add [eax], al           
>>     11   2B @0xbfba33b6:  0  0             add [eax], al           
>>     12   2B @0xbfba33b8:  0  0             add [eax], al           
>>     13   2B @0xbfba33ba:  0  0             add [eax], al           
>>     14   2B @0xbfba33bc:  0  0             add [eax], al           
>>     15   2B @0xbfba33be:  0  0             add [eax], al           
>>     16   2B @0xbfba33c0:  0  0             add [eax], al           
>>     17   2B @0xbfba33c2:  0  0             add [eax], al           
>>     18   2B @0xbfba33c4:  0  0             add [eax], al           
>>     19   2B @0xbfba33c6:  0  0             add [eax], al           
>>     20   2B @0xbfba33c8:  0  0             add [eax], al           
>>     21   2B @0xbfba33ca:  0  0             add [eax], al           
>>     22   2B @0xbfba33cc:  0  0             add [eax], al           
>>     23   2B @0xbfba33ce:  0  0             add [eax], al           
>>     24   2B @0xbfba33d0:  0  0             add [eax], al           
>>     25   2B @0xbfba33d2:  0  0             add [eax], al           
>>     26   2B @0xbfba33d4:  0  0             add [eax], al           
>>     27   2B @0xbfba33d6:  0  0             add [eax], al           
>>     28   2B @0xbfba33d8:  0  0             add [eax], al           
>>     29   2B @0xbfba33da:  0  0             add [eax], al           
>>     30   2B @0xbfba33dc:  0  0             add [eax], al           
>>     31   2B @0xbfba33de:  0  0             add [eax], al           
>>     32   2B @0xbfba33e0:  0  0             add [eax], al           
>>     33   2B @0xbfba33e2:  0  0             add [eax], al           
>>     34   2B @0xbfba33e4:  0  0             add [eax], al           
>>     35   2B @0xbfba33e6:  0  0             add [eax], al           
>>     36   2B @0xbfba33e8:  0  0             add [eax], al           
>>     37   2B @0xbfba33ea:  0  0             add [eax], al           
>>     38   2B @0xbfba33ec:  0  0             add [eax], al           
>>     39   2B @0xbfba33ee:  0  0             add [eax], al           
>>     40   2B @0xbfba33f0:  0  0             add [eax], al           
>>     41   2B @0xbfba33f2:  0  0             add [eax], al           
>>     42   2B @0xbfba33f4:  0  0             add [eax], al           
>>     43   2B @0xbfba33f6:  0  0             add [eax], al           
>>     44   2B @0xbfba33f8:  0  0             add [eax], al           
>>     45   2B @0xbfba33fa:  0  0             add [eax], al           
>>     46   2B @0xbfba33fc:  0  0             add [eax], al           
>>     47   2B @0xbfba33fe:  0  0             add [eax], al           
>>     48   2B @0xbfba3400:  0  0             add [eax], al           
>>     49   2B @0xbfba3402:  0  0             add [eax], al           
>>     50   2B @0xbfba3404:  0  0             add [eax], al           
>>     51   2B @0xbfba3406:  0  0             add [eax], al           
>>     52   2B @0xbfba3408:  0  0             add [eax], al           
>>     53   2B @0xbfba340a:  0  0             add [eax], al           
>>     54   2B @0xbfba340c:  0  0             add [eax], al           
>>     55   2B @0xbfba340e:  0  0             add [eax], al           
>>     56   2B @0xbfba3410:  0  0             add [eax], al           
>>     57   2B @0xbfba3412:  0  0             add [eax], al           
>>     58   2B @0xbfba3414:  0  0             add [eax], al           
>>     59   2B @0xbfba3416:  0  0             add [eax], al           
>>     60   2B @0xbfba3418:  0  0             add [eax], al           
>>     61   2B @0xbfba341a:  0  0             add [eax], al           
>>     62   2B @0xbfba341c:  0  0             add [eax], al           
>>     63   2B @0xbfba341e:  0  0             add [eax], al           
>>     64   2B @0xbfba3420:  0  0             add [eax], al           
>>     65   2B @0xbfba3422:  0  0             add [eax], al           
>>     66   2B @0xbfba3424:  0  0             add [eax], al           
>>     67   2B @0xbfba3426:  0  0             add [eax], al           
>>     68   2B @0xbfba3428:  0  0             add [eax], al           
>>     69   2B @0xbfba342a:  0  0             add [eax], al           
>>     70   2B @0xbfba342c:  0  0             add [eax], al           
>>     71   2B @0xbfba342e:  0  0             add [eax], al           
>>     72   2B @0xbfba3430:  0  0             add [eax], al           
>>     73   2B @0xbfba3432:  0  0             add [eax], al           
>>     74   2B @0xbfba3434:  0  0             add [eax], al           
>>     75   2B @0xbfba3436:  0  0             add [eax], al           
>>     76   2B @0xbfba3438:  0  0             add [eax], al           
>>     77   2B @0xbfba343a:  0  0             add [eax], al           
>>     78   2B @0xbfba343c:  0  0             add [eax], al           
>>     79   2B @0xbfba343e:  0  0             add [eax], al           
>>     80   2B @0xbfba3440:  0  0             add [eax], al           
>>     81   2B @0xbfba3442:  0  0             add [eax], al           
>>     82   2B @0xbfba3444:  0  0             add [eax], al           
>>     83   2B @0xbfba3446:  0  0             add [eax], al           
>>     84   2B @0xbfba3448:  0  0             add [eax], al           
>>     85   2B @0xbfba344a:  0  0             add [eax], al           
>>     86   2B @0xbfba344c:  0  0             add [eax], al           
>>     87   2B @0xbfba344e:  0  0             add [eax], al           
>>     88   2B @0xbfba3450:  0  0             add [eax], al           
>>     89   2B @0xbfba3452:  0  0             add [eax], al           
>>     90   2B @0xbfba3454:  0  0             add [eax], al           
>>     91   2B @0xbfba3456:  0  0             add [eax], al           
>>     92   2B @0xbfba3458:  0  0             add [eax], al           
>>     93   2B @0xbfba345a:  0  0             add [eax], al           
>>     94   2B @0xbfba345c:  0  0             add [eax], al           
>>     95   2B @0xbfba345e:  0  0             add [eax], al           
>>     96   2B @0xbfba3460:  0  0             add [eax], al           
>>     97   2B @0xbfba3462:  0  0             add [eax], al           
>>     98   2B @0xbfba3464:  0  0             add [eax], al           
>>     99   2B @0xbfba3466:  0  0             add [eax], al           
>>    100   2B @0xbfba3468:  0  0             add [eax], al           
>>    101   2B @0xbfba346a:  0  0             add [eax], al           
>>    102   2B @0xbfba346c:  0  0             add [eax], al           
>>    103   2B @0xbfba346e:  0  0             add [eax], al           
>>    104   2B @0xbfba3470:  0  0             add [eax], al           
>>    105   2B @0xbfba3472:  0  0             add [eax], al           
>>    106   2B @0xbfba3474:  0  0             add [eax], al           
>>    107   2B @0xbfba3476:  0  0             add [eax], al           
>>    108   2B @0xbfba3478:  0  0             add [eax], al           
>>    109   2B @0xbfba347a:  0  0             add [eax], al           
>>    110   2B @0xbfba347c:  0  0             add [eax], al           
>>    111   2B @0xbfba347e:  0  0             add [eax], al           
>>    112   2B @0xbfba3480:  0  0             add [eax], al           
>>    113   2B @0xbfba3482:  0  0             add [eax], al           
>>    114   2B @0xbfba3484:  0  0             add [eax], al           
>>    115   2B @0xbfba3486:  0  0             add [eax], al           
>>    116   2B @0xbfba3488:  0  0             add [eax], al           
>>    117   2B @0xbfba348a:  0  0             add [eax], al           
>>    118   2B @0xbfba348c:  0  0             add [eax], al           
>>    119   2B @0xbfba348e:  0  0             add [eax], al           
>>    120   2B @0xbfba3490:  0  0             add [eax], al           
>>    121   2B @0xbfba3492:  0  0             add [eax], al           
>>    122   2B @0xbfba3494:  0  0             add [eax], al           
>>    123   2B @0xbfba3496:  0  0             add [eax], al           
>>    124   2B @0xbfba3498:  0  0             add [eax], al           
>>    125   2B @0xbfba349a:  0  0             add [eax], al           
>>    126   2B @0xbfba349c:  0  0             add [eax], al           
>>    127   2B @0xbfba349e:  0  0             add [eax], al           
>>    128   2B @0xbfba34a0:  0  0             add [eax], al           
>>    129   2B @0xbfba34a2:  0  0             add [eax], al           
>>    130   2B @0xbfba34a4:  0  0             add [eax], al           
>>    131   2B @0xbfba34a6:  0  0             add [eax], al           
>>    132   2B @0xbfba34a8:  0  0             add [eax], al           
>>    133   2B @0xbfba34aa:  0  0             add [eax], al           
>>    134   2B @0xbfba34ac:  0  0             add [eax], al           
>>    135   2B @0xbfba34ae:  0  0             add [eax], al           
>>    136   2B @0xbfba34b0:  0  0             add [eax], al           
>>    137   2B @0xbfba34b2:  0  0             add [eax], al           
>>    138   2B @0xbfba34b4:  0  0             add [eax], al           
>>    139   2B @0xbfba34b6:  0  0             add [eax], al           
>>    140   2B @0xbfba34b8:  0  0             add [eax], al           
>>    141   2B @0xbfba34ba:  0  0             add [eax], al           
>>    142   2B @0xbfba34bc:  0  0             add [eax], al           
>>    143   2B @0xbfba34be:  0  0             add [eax], al           
>>    144   2B @0xbfba34c0:  0  0             add [eax], al           
>>    145   2B @0xbfba34c2:  0  0             add [eax], al           
>>    146   2B @0xbfba34c4:  0  0             add [eax], al           
>>    147   2B @0xbfba34c6:  0  0             add [eax], al           
>>    148   2B @0xbfba34c8:  0  0             add [eax], al           
>>    149   2B @0xc1046a95: OOB, bytes not captured
>>    150   2B @0xc1046a97: OOB, bytes not captured
>>    151   5B @0xc1046a99: OOB, bytes not captured
>>    152   1B @0xc10468ae: OOB, bytes not captured
>>    153   1B @0xc10468af: OOB, bytes not captured
>>    154   1B @0xc10468b0: OOB, bytes not captured
>>    155   2B @0xc10468b1: OOB, bytes not captured
>>    156   1B @0xc10468b3: OOB, bytes not captured
>>    157   3B @0xc10468b4: OOB, bytes not captured
>>    158   3B @0xc10468b7: OOB, bytes not captured
>>    159   3B @0xc10468ba: OOB, bytes not captured
>>    160   4B @0xc10468bd: OOB, bytes not captured
>>    161   2B @0xc10468c1: OOB, bytes not captured
>>    162   1B @0xc10468c3: OOB, bytes not captured
>>    163   1B @0xc10468c4: OOB, bytes not captured
>>    164   4B @0xc10468c5: OOB, bytes not captured
>>    165   3B @0xc10468c9: OOB, bytes not captured
>>    166   2B @0xc10468cc: OOB, bytes not captured
>>    167   2B @0xc10468dd: OOB, bytes not captured
>>    168   5B @0xc10468df: OOB, bytes not captured
>>    169   7B @0xc1046456: OOB, bytes not captured
>>    170   1B @0xc104645d: OOB, bytes not captured
>>    171   2B @0xc104645e: OOB, bytes not captured
>>    172   1B @0xc1046460: OOB, bytes not captured
>>    173   2B @0xc1046461: OOB, bytes not captured
>>    174   1B @0xc1046479: OOB, bytes not captured
>>    175   1B @0xc104647a: OOB, bytes not captured
>>    176   1B @0xc104647b: OOB, bytes not captured
>>    177   5B @0xc10468e4: OOB, bytes not captured
>>    178   2B @0xc10468e9: OOB, bytes not captured
>>    179   2B @0xc10468eb: OOB, bytes not captured
>>    180   4B @0xc10468ed: OOB, bytes not captured
>>    181   5B @0xc10468f1: OOB, bytes not captured
>>    182   1B @0xc10466dd: OOB, bytes not captured
>>    183   2B @0xc10466de: OOB, bytes not captured
>>    184   1B @0xc10466e0: OOB, bytes not captured
>>    185   2B @0xc10466e1: OOB, bytes not captured
>>    186   1B @0xc10466e3: OOB, bytes not captured
>>    187   2B @0xc10466e4: OOB, bytes not captured
>>    188   4B @0xc10466e6: OOB, bytes not captured
>>    189   2B @0xc10466ea: OOB, bytes not captured
>>    190   3B @0xc10466ec: OOB, bytes not captured
>>    191   2B @0xc10466ef: OOB, bytes not captured
>>    192   5B @0xc10466f1: OOB, bytes not captured
>>    193   2B @0xc11397c4: OOB, bytes not captured
>>    194   2B @0xc11397c6: OOB, bytes not captured
>>    195   2B @0xc11397c8: OOB, bytes not captured
>>    196   3B @0xc11397ca: OOB, bytes not captured
>>    197   2B @0xc11397cd: OOB, bytes not captured
>>    198   2B @0xc11397cf: OOB, bytes not captured
>>    199   3B @0xc11397d1: OOB, bytes not captured
>>    200   2B @0xc11397d4: OOB, bytes not captured
>>    201   2B @0xc11397d6: OOB, bytes not captured
>>    202   2B @0xc11397e9: OOB, bytes not captured
>>    203   2B @0xc11397eb: OOB, bytes not captured
>>    204   3B @0xc11397ed: OOB, bytes not captured
>>    205   2B @0xc11397f0: OOB, bytes not captured
>>    206   3B @0xc11397f2: OOB, bytes not captured
>>    207   2B @0xc11397f5: OOB, bytes not captured
>>    208   2B @0xc11397f7: OOB, bytes not captured
>>    209   1B @0xc11397f9: OOB, bytes not captured
>>    210   5B @0xc10466f6: OOB, bytes not captured
>>    211   3B @0xc10466fb: OOB, bytes not captured
>>    212   2B @0xc10466fe: OOB, bytes not captured
>>    213   3B @0xc1046735: OOB, bytes not captured
>>    214   2B @0xc1046738: OOB, bytes not captured
>>    215   5B @0xc104673a: OOB, bytes not captured
>>    216   1B @0xc113959b: OOB, bytes not captured
>>    217   2B @0xc113959c: OOB, bytes not captured
>>    218   1B @0xc113959e: OOB, bytes not captured
>>    219   1B @0xc113959f: OOB, bytes not captured
>>    220   2B @0xc11395a0: OOB, bytes not captured
>>    221   1B @0xc11395a2: OOB, bytes not captured
>>    222   3B @0xc11395a3: OOB, bytes not captured
>>    223   3B @0xc11395a6: OOB, bytes not captured
>>    224   3B @0xc11395a9: OOB, bytes not captured
>>    225   2B @0xc11395ac: OOB, bytes not captured
>>    226   2B @0xc11395ae: OOB, bytes not captured
>>    227   2B @0xc11395b0: OOB, bytes not captured
>>    228   5B @0xc11395b2: OOB, bytes not captured
>>    229   2B @0xc113963c: OOB, bytes not captured
>>    230   2B @0xc113963e: OOB, bytes not captured
>>    231   3B @0xc1139640: OOB, bytes not captured
>>    232   3B @0xc1139643: OOB, bytes not captured
>>    233   2B @0xc1139646: OOB, bytes not captured
>>    234   2B @0xc1139648: OOB, bytes not captured
>>    235   4B @0xc113964a: OOB, bytes not captured
>>    236   2B @0xc113964e: OOB, bytes not captured
>>    237   2B @0xc1139659: OOB, bytes not captured
>>    238   2B @0xc113965b: OOB, bytes not captured
>>    239   3B @0xc113965d: OOB, bytes not captured
>>    240   2B @0xc1139660: OOB, bytes not captured
>>    241   3B @0xc1139662: OOB, bytes not captured
>>    242   2B @0xc1139665: OOB, bytes not captured
>>    243   5B @0xc113966f: OOB, bytes not captured
>>    244   2B @0xc1139674: OOB, bytes not captured
>>    245   6B @0xc1139676: OOB, bytes not captured
>>    246   1B @0xc1139799: OOB, bytes not captured
>>    247   1B @0xc113979a: OOB, bytes not captured
>>    248   1B @0xc113979b: OOB, bytes not captured
>>    249   1B @0xc113979c: OOB, bytes not captured
>>    250   1B @0xc113979d: OOB, bytes not captured
>>    251   1B @0xc113979e: OOB, bytes not captured
>>    252   1B @0xc113979f: OOB, bytes not captured
>>    253   3B @0xc104673f: OOB, bytes not captured
>>    254   1B @0xc1046742: OOB, bytes not captured
>>    255   1B @0xc1046743: OOB, bytes not captured
>>    256   1B @0xc1046744: OOB, bytes not captured
>>    257   1B @0xc1046745: OOB, bytes not captured
>>    258   7B @0xc10468f6: OOB, bytes not captured
>>    259   1B @0xc10468fd: OOB, bytes not captured
>>    260   2B @0xc10468fe: OOB, bytes not captured
>>    261   3B @0xc1046919: OOB, bytes not captured
>>    262   2B @0xc104691c: OOB, bytes not captured
>>    263   7B @0xc104691e: OOB, bytes not captured
>>    264   2B @0xc1046925: OOB, bytes not captured
>>    265   2B @0xc1046940: OOB, bytes not captured
>>    266   2B @0xc1046942: OOB, bytes not captured
>>    267   3B @0xc1046896: OOB, bytes not captured
>>    268   7B @0xc1046899: OOB, bytes not captured
>>    269   2B @0xc10468a0: OOB, bytes not captured
>>    270   2B @0xc10468a2: OOB, bytes not captured
>>    271   2B @0xc10468a4: OOB, bytes not captured
>>    272   5B @0xc10468a6: OOB, bytes not captured
>>    273   2B @0xc102d73b: OOB, bytes not captured
>>    274   5B @0xc102d73d: OOB, bytes not captured
>>    275   5B @0xc102d742: OOB, bytes not captured
>>    276   1B @0xc102d479: OOB, bytes not captured
>>    277   1B @0xc102d47a: OOB, bytes not captured
>>    278   2B @0xc102d47b: OOB, bytes not captured
>>    279   1B @0xc102d47d: OOB, bytes not captured
>>    280   2B @0xc102d47e: OOB, bytes not captured
>>    281   1B @0xc102d480: OOB, bytes not captured
>>    282   3B @0xc102d481: OOB, bytes not captured
>>    283   3B @0xc102d484: OOB, bytes not captured
>>    284   2B @0xc102d487: OOB, bytes not captured
>>    285   7B @0xc102d489: OOB, bytes not captured
>>    286   3B @0xc102d490: OOB, bytes not captured
>>    287   4B @0xc102d493: OOB, bytes not captured
>>    288   4B @0xc102d497: OOB, bytes not captured
>>    289   2B @0xc102d49b: OOB, bytes not captured
>>    290   5B @0xc102d49d: OOB, bytes not captured
>>    291   1B @0xc102570d: OOB, bytes not captured
>>    292   2B @0xc102570e: OOB, bytes not captured
>>    293   1B @0xc1025710: OOB, bytes not captured
>>    294   2B @0xc1025711: OOB, bytes not captured
>>    295   1B @0xc1025713: OOB, bytes not captured
>>    296   5B @0xc1025714: OOB, bytes not captured
>>    297   1B @0xc1025719: OOB, bytes not captured
>>    298   3B @0xc102571a: OOB, bytes not captured
>>    299   1B @0xc102571d: OOB, bytes not captured
>>    300   1B @0xc102571e: OOB, bytes not captured
>>    301   4B @0xc102571f: OOB, bytes not captured
>>    302   2B @0xc1025723: OOB, bytes not captured
>>    303   1B @0xc1025725: OOB, bytes not captured
>>    304   1B @0xc1025726: OOB, bytes not captured
>>    305   4B @0xc1025727: OOB, bytes not captured
>>    306   2B @0xc102572b: OOB, bytes not captured
>>    307   3B @0xc102572d: OOB, bytes not captured
>>    308   2B @0xc1025730: OOB, bytes not captured
>>    309   3B @0xc1025732: OOB, bytes not captured
>>    310   7B @0xc1025735: OOB, bytes not captured
>>    311   2B @0xc102573c: OOB, bytes not captured
>>    312   5B @0xc102573e: OOB, bytes not captured
>>    313   3B @0xc1025743: OOB, bytes not captured
>>    314   3B @0xc1025746: OOB, bytes not captured
>>    315   7B @0xc1025749: OOB, bytes not captured
>>    316   3B @0xc1025750: OOB, bytes not captured
>>    317   2B @0xc1025753: OOB, bytes not captured
>>    318   2B @0xc1025755: OOB, bytes not captured
>>    319   1B @0xc1025757: OOB, bytes not captured
>>    320   2B @0xc1025758: OOB, bytes not captured
>>    321   1B @0xc102575a: OOB, bytes not captured
>>    322   1B @0xc102575b: OOB, bytes not captured
>>    323   1B @0xc102575c: OOB, bytes not captured
>>    324   1B @0xc102575d: OOB, bytes not captured
>>    325   1B @0xc102575e: OOB, bytes not captured
>>    326   2B @0xc102d4a2: OOB, bytes not captured
>>    327   5B @0xc102d4a4: OOB, bytes not captured
>>    328   2B @0xc102d4a9: OOB, bytes not captured
>>    329   2B @0xc102d4ab: OOB, bytes not captured
>>    330   2B @0xc102d4ad: OOB, bytes not captured
>>    331   4B @0xc102d4be: OOB, bytes not captured
>>    332   2B @0xc102d4c2: OOB, bytes not captured
>>    333   3B @0xc102d4d3: OOB, bytes not captured
>>    334   2B @0xc102d4d6: OOB, bytes not captured
>>    335   3B @0xc102d4d8: OOB, bytes not captured
>>    336   4B @0xc102d4db: OOB, bytes not captured
>>    337   6B @0xc102d4df: OOB, bytes not captured
>>    338   6B @0xc102d4e5: OOB, bytes not captured
>>    339   2B @0xc102d4eb: OOB, bytes not captured
>>    340   2B @0xc102d4ed: OOB, bytes not captured
>>    341   2B @0xc102d4ef: OOB, bytes not captured
>>    342   3B @0xc102d524: OOB, bytes not captured
>>    343   6B @0xc102d527: OOB, bytes not captured
>>    344   3B @0xc102d52d: OOB, bytes not captured
>>    345   2B @0xc102d530: OOB, bytes not captured
>>    346   2B @0xc102d532: OOB, bytes not captured
>>    347   2B @0xc102d534: OOB, bytes not captured
>>    348   2B @0xc102d536: OOB, bytes not captured
>>    349   2B @0xc102d538: OOB, bytes not captured
>>    350   6B @0xc101ff4d: OOB, bytes not captured
>>    351   1B @0xc101ff53: OOB, bytes not captured
>>    352   3B @0xc101ff54: OOB, bytes not captured
>>    353   3B @0xc101ff57: OOB, bytes not captured
>>    354   3B @0xc101ff5a: OOB, bytes not captured
>>    355   3B @0xc101ff5d: OOB, bytes not captured
>>    356   1B @0xc101ff60: OOB, bytes not captured
>>    357   1B @0xc101ff61: OOB, bytes not captured
>>    358   4B @0xc102d53a: OOB, bytes not captured
>>    359   5B @0xc102d53e: OOB, bytes not captured
>>    360   2B @0xc102d543: OOB, bytes not captured
>>    361   2B @0xc102d545: OOB, bytes not captured
>>    362   5B @0xc102d547: OOB, bytes not captured
>>    363   1B @0xc102afc2: OOB, bytes not captured
>>    364   2B @0xc102afc3: OOB, bytes not captured
>>    365   1B @0xc102afc5: OOB, bytes not captured
>>    366   3B @0xc102afc6: OOB, bytes not captured
>>    367   4B @0xc102afc9: OOB, bytes not captured
>>    368   3B @0xc102afcd: OOB, bytes not captured
>>    369   1B @0xc1028a3e: OOB, bytes not captured
>>    370   1B @0xc1028a3f: OOB, bytes not captured
>>    371   1B @0xc1028a40: OOB, bytes not captured
>>    372   1B @0xc1028a41: OOB, bytes not captured
>>    373   6B @0xc1028a42: OOB, bytes not captured
>>    374   4B @0xc1028a48: OOB, bytes not captured
>>    375   4B @0xc1028a4c: OOB, bytes not captured
>>    376   4B @0xc1028a50: OOB, bytes not captured
>>    377   4B @0xc1028a54: OOB, bytes not captured
>>    378   7B @0xc1028a58: OOB, bytes not captured
>>    379   7B @0xc1028a5f: OOB, bytes not captured
>>    380   4B @0xc1028a66: OOB, bytes not captured
>>    381   4B @0xc1028a6a: OOB, bytes not captured
>>    382   4B @0xc1028a6e: OOB, bytes not captured
>>    383   3B @0xc1028a72: OOB, bytes not captured
>>    384   3B @0xc1028a75: OOB, bytes not captured
>>    385   3B @0xc1028a78: OOB, bytes not captured
>>    386   4B @0xc1028a7b: OOB, bytes not captured
>>    387   4B @0xc1028a7f: OOB, bytes not captured
>>    388   2B @0xc1028a83: OOB, bytes not captured
>>    389   7B @0xc1028a8b: OOB, bytes not captured
>>    390   2B @0xc1028a92: OOB, bytes not captured
>>    391   4B @0xc1028a94: OOB, bytes not captured
>>    392   4B @0xc1028a98: OOB, bytes not captured
>>    393   7B @0xc1028a9c: OOB, bytes not captured
>>    394   2B @0xc1028aa3: OOB, bytes not captured
>>    395   2B @0xc1028aa5: OOB, bytes not captured
>>    396   2B @0xc1028aa7: OOB, bytes not captured
>>    397   4B @0xc1028aa9: OOB, bytes not captured
>>    398   8B @0xc1028aad: OOB, bytes not captured
>>    399   4B @0xc1028ab5: OOB, bytes not captured
>>    400   2B @0xc1028ab9: OOB, bytes not captured
>>    401   4B @0xc1028acb: OOB, bytes not captured
>>    402   5B @0xc1028acf: OOB, bytes not captured
>>    403   2B @0xc1028ad4: OOB, bytes not captured
>>    404   2B @0xc1028ad6: OOB, bytes not captured
>>    405   7B @0xc1028ad8: OOB, bytes not captured
>>    406   6B @0xc1028adf: OOB, bytes not captured
>>    407   8B @0xc1028ae5: OOB, bytes not captured
>>    408   8B @0xc1028aed: OOB, bytes not captured
>>    409   3B @0xc1028af5: OOB, bytes not captured
>>    410   5B @0xc1028af8: OOB, bytes not captured
>>    411   2B @0xc1028bc1: OOB, bytes not captured
>>    412   6B @0xc1028bc3: OOB, bytes not captured
>>    413   7B @0xc1028bc9: OOB, bytes not captured
>>    414   2B @0xc1028bd0: OOB, bytes not captured
>>    415   5B @0xc1028bd2: OOB, bytes not captured
>>    416   2B @0xc1028bd7: OOB, bytes not captured
>>    417   2B @0xc1028bff: OOB, bytes not captured
>>    418   2B @0xc1028c01: OOB, bytes not captured
>>    419   5B @0xc1028c17: OOB, bytes not captured
>>    420   2B @0xc1028c1c: OOB, bytes not captured
>>    421   4B @0xc1028c1e: OOB, bytes not captured
>>    422   5B @0xc1028c22: OOB, bytes not captured
>>    423   4B @0xc1028c27: OOB, bytes not captured
>>    424   4B @0xc1028c2b: OOB, bytes not captured
>>    425   6B @0xc1028c2f: OOB, bytes not captured
>>    426   4B @0xc1028c35: OOB, bytes not captured
>>    427   4B @0xc1028c39: OOB, bytes not captured
>>    428   5B @0xc1028c3d: OOB, bytes not captured
>>    429   2B @0xc102913a: OOB, bytes not captured
>>    430   6B @0xc102913c: OOB, bytes not captured
>>    431   4B @0xc1029142: OOB, bytes not captured
>>    432   6B @0xc1029146: OOB, bytes not captured
>>    433   1B @0xc102914c: OOB, bytes not captured
>>    434   1B @0xc102914d: OOB, bytes not captured
>>    435   1B @0xc102914e: OOB, bytes not captured
>>    436   1B @0xc102914f: OOB, bytes not captured
>>    437   1B @0xc1029150: OOB, bytes not captured
>>    438   2B @0xc102afd0: OOB, bytes not captured
>>    439   7B @0xc102afd2: OOB, bytes not captured
>>    440   2B @0xc102afd9: OOB, bytes not captured
>>    441   2B @0xc102afdb: OOB, bytes not captured
>>    442   1B @0xc102afdd: OOB, bytes not captured
>>    443   2B @0xc102afde: OOB, bytes not captured
>>    444   5B @0xc102afe0: OOB, bytes not captured
>>    445   3B @0xc102afe5: OOB, bytes not captured
>>    446   2B @0xc102afe8: OOB, bytes not captured
>>    447   2B @0xc102afea: OOB, bytes not captured
>>    448   2B @0xc102afec: OOB, bytes not captured
>>    449   2B @0xc102affd: OOB, bytes not captured
>>    450   1B @0xc102afff: OOB, bytes not captured
>>    451   1B @0xc102b000: OOB, bytes not captured
>>    452   1B @0xc102b001: OOB, bytes not captured
>>    453   2B @0xc102d54c: OOB, bytes not captured
>>    454   1B @0xc102d54e: OOB, bytes not captured
>>    455   4B @0xc102d54f: OOB, bytes not captured
>>    456   2B @0xc102d553: OOB, bytes not captured
>>    457   2B @0xc102d55e: OOB, bytes not captured
>>    458   5B @0xc102d560: OOB, bytes not captured
>>    459   7B @0xc102d565: OOB, bytes not captured
>>    460   2B @0xc102d56c: OOB, bytes not captured
>>    461   5B @0xc102d56e: OOB, bytes not captured
>>    462   2B @0xc102d573: OOB, bytes not captured
>>    463   5B @0xc102d575: OOB, bytes not captured
>>    464   1B @0xc102c88e: OOB, bytes not captured
>>    465   1B @0xc102c88f: OOB, bytes not captured
>>    466   3B @0xc102d57a: OOB, bytes not captured
>>    467   3B @0xc102d57d: OOB, bytes not captured
>>    468   2B @0xc102d580: OOB, bytes not captured
>>    469   2B @0xc102d591: OOB, bytes not captured
>>    470   5B @0xc102d593: OOB, bytes not captured
>>    471   2B @0xc102d598: OOB, bytes not captured
>>    472   2B @0xc102d5a9: OOB, bytes not captured
>>    473   5B @0xc102d5ab: OOB, bytes not captured
>>    474   2B @0xc102d5b0: OOB, bytes not captured
>>    475   5B @0xc102d5b2: OOB, bytes not captured
>>    476   1B @0xc1020476: OOB, bytes not captured
>>    477   2B @0xc1020477: OOB, bytes not captured
>>    478   2B @0xc1020479: OOB, bytes not captured
>>    479   2B @0xc102047b: OOB, bytes not captured
>>    480   2B @0xc102047d: OOB, bytes not captured
>>    481   2B @0xc102048b: OOB, bytes not captured
>>    482   2B @0xc102048d: OOB, bytes not captured
>>    483   5B @0xc102048f: OOB, bytes not captured
>>    484   1B @0xc10202e9: OOB, bytes not captured
>>    485   2B @0xc10202ea: OOB, bytes not captured
>>    486   1B @0xc10202ec: OOB, bytes not captured
>>    487   2B @0xc10202ed: OOB, bytes not captured
>>    488   1B @0xc10202ef: OOB, bytes not captured
>>    489   2B @0xc10202f0: OOB, bytes not captured
>>    490   1B @0xc10202f2: OOB, bytes not captured
>>    491   4B @0xc10202f3: OOB, bytes not captured
>>    492   2B @0xc10202f7: OOB, bytes not captured
>>    493   3B @0xc10202f9: OOB, bytes not captured
>>    494   3B @0xc10202fc: OOB, bytes not captured
>>    495   6B @0xc10202ff: OOB, bytes not captured
>>    496   6B @0xc1020305: OOB, bytes not captured
>>    497   7B @0xc102030b: OOB, bytes not captured
>>    498   2B @0xc1020312: OOB, bytes not captured
>>    499   6B @0xc1020314: OOB, bytes not captured
>>    500   6B @0xc102031a: OOB, bytes not captured
>>    501   2B @0xc1020320: OOB, bytes not captured
>>    502   3B @0xc1020322: OOB, bytes not captured
>>    503   5B @0xc1020325: OOB, bytes not captured
>>    504   3B @0xc102032a: OOB, bytes not captured
>>    505   7B @0xc102032d: OOB, bytes not captured
>>    506   7B @0xc1020334: OOB, bytes not captured
>>    507   2B @0xc102033b: OOB, bytes not captured
>>    508   3B @0xc102033d: OOB, bytes not captured
>>    509   6B @0xc1020340: OOB, bytes not captured
>>    510   6B @0xc1020346: OOB, bytes not captured
>>    511   3B @0xc102034c: OOB, bytes not captured
>>    512   2B @0xc102034f: OOB, bytes not captured
>>    513   3B @0xc1020351: OOB, bytes not captured
>>    514   2B @0xc1020354: OOB, bytes not captured
>>    515   1B @0xc1020356: OOB, bytes not captured
>>    516   2B @0xc1020357: OOB, bytes not captured
>>    517   3B @0xc1020359: OOB, bytes not captured
>>    518   1B @0xc102667d: OOB, bytes not captured
>>    519   2B @0xc102667e: OOB, bytes not captured
>>    520   1B @0xc1026680: OOB, bytes not captured
>>    521   2B @0xc1026681: OOB, bytes not captured
>>    522   3B @0xc1026683: OOB, bytes not captured
>>    523   3B @0xc1026686: OOB, bytes not captured
>>    524   1B @0xc1026689: OOB, bytes not captured
>>    525   2B @0xc102668a: OOB, bytes not captured
>>    526   2B @0xc102668c: OOB, bytes not captured
>>    527   3B @0xc102668e: OOB, bytes not captured
>>    528   3B @0xc1026691: OOB, bytes not captured
>>    529   5B @0xc1026694: OOB, bytes not captured
>>    530   3B @0xc1026699: OOB, bytes not captured
>>    531   2B @0xc102669c: OOB, bytes not captured
>>    532   2B @0xc10266b8: OOB, bytes not captured
>>    533   2B @0xc10266ba: OOB, bytes not captured
>>    534   4B @0xc102669e: OOB, bytes not captured
>>    535   2B @0xc10266a2: OOB, bytes not captured
>>    536   3B @0xc10266a4: OOB, bytes not captured
>>    537   2B @0xc10266a7: OOB, bytes not captured
>>    538   2B @0xc10266a9: OOB, bytes not captured
>>    539   5B @0xc10266ab: OOB, bytes not captured
>>    540   5B @0xc10266b0: OOB, bytes not captured
>>    541   1B @0xc1025efd: OOB, bytes not captured
>>    542   1B @0xc1025efe: OOB, bytes not captured
>>    543   2B @0xc1025eff: OOB, bytes not captured
>>    544   1B @0xc1025f01: OOB, bytes not captured
>>    545   2B @0xc1025f02: OOB, bytes not captured
>>    546   2B @0xc1025f04: OOB, bytes not captured
>>    547   1B @0xc1025f06: OOB, bytes not captured
>>    548   3B @0xc1025f07: OOB, bytes not captured
>>    549   3B @0xc1025f0a: OOB, bytes not captured
>>    550   1B @0xc1025f0d: OOB, bytes not captured
>>    551   2B @0xc1025f0e: OOB, bytes not captured
>>    552   2B @0xc1025f10: OOB, bytes not captured
>>    553   3B @0xc1025f12: OOB, bytes not captured
>>    554   3B @0xc1025f15: OOB, bytes not captured
>>    555   3B @0xc1025f18: OOB, bytes not captured
>>    556   3B @0xc1025f1b: OOB, bytes not captured
>>    557   2B @0xc1025f1e: OOB, bytes not captured
>>    558   5B @0xc1025f20: OOB, bytes not captured
>>    559   2B @0xc1025f25: OOB, bytes not captured
>>    560   2B @0xc1025f27: OOB, bytes not captured
>>    561   7B @0xc1025f29: OOB, bytes not captured
>>    562   4B @0xc1025f30: OOB, bytes not captured
>>    563   2B @0xc1025f34: OOB, bytes not captured
>>    564   3B @0xc1025f36: OOB, bytes not captured
>>    565   2B @0xc1025f39: OOB, bytes not captured
>>    566   3B @0xc1025f3b: OOB, bytes not captured
>>    567   7B @0xc1025f3e: OOB, bytes not captured
>>    568   4B @0xc1025f45: OOB, bytes not captured
>>    569   2B @0xc1025f49: OOB, bytes not captured
>>    570   2B @0xc1025f4b: OOB, bytes not captured
>>    571   3B @0xc1025f4d: OOB, bytes not captured
>>    572   3B @0xc1025f50: OOB, bytes not captured
>>    573   3B @0xc1025f53: OOB, bytes not captured
>>    574   3B @0xc1025f56: OOB, bytes not captured
>>    575   3B @0xc1025f59: OOB, bytes not captured
>>    576   3B @0xc1025f5c: OOB, bytes not captured
>>    577   3B @0xc1025f5f: OOB, bytes not captured
>>    578   3B @0xc1025f62: OOB, bytes not captured
>>    579   3B @0xc1025f65: OOB, bytes not captured
>>    580   3B @0xc1025f68: OOB, bytes not captured
>>    581   7B @0xc1025f6b: OOB, bytes not captured
>>    582   2B @0xc1025f72: OOB, bytes not captured
>>    583   2B @0xc1025f74: OOB, bytes not captured
>>    584   2B @0xc1025f76: OOB, bytes not captured
>>    585   2B @0xc1025f78: OOB, bytes not captured
>>    586   5B @0xc1025f7a: OOB, bytes not captured
>>    587   1B @0xc1020cf9: OOB, bytes not captured
>>    588   2B @0xc1020cfa: OOB, bytes not captured
>>    589   1B @0xc1020cfc: OOB, bytes not captured
>>    590   2B @0xc1020cfd: OOB, bytes not captured
>>    591   6B @0xc1020cff: OOB, bytes not captured
>>    592   1B @0xc1020d05: OOB, bytes not captured
>>    593   1B @0xc1020d06: OOB, bytes not captured
>>    594   3B @0xc1020d07: OOB, bytes not captured
>>    595   3B @0xc1020d0a: OOB, bytes not captured
>>    596   2B @0xc1020d0d: OOB, bytes not captured
>>    597   3B @0xc1020d2a: OOB, bytes not captured
>>    598   2B @0xc1020d2d: OOB, bytes not captured
>>    599   3B @0xc1020d2f: OOB, bytes not captured
>>    600   6B @0xc1020d32: OOB, bytes not captured
>>    601   2B @0xc1020d38: OOB, bytes not captured
>>    602   2B @0xc1020d5b: OOB, bytes not captured
>>    603   2B @0xc1020d5d: OOB, bytes not captured
>>    604   7B @0xc1020d5f: OOB, bytes not captured
>>    605   3B @0xc1020d66: OOB, bytes not captured
>>    606   2B @0xc1020d69: OOB, bytes not captured
>>    607   2B @0xc1020d6b: OOB, bytes not captured
>>    608   2B @0xc1020d6d: OOB, bytes not captured
>>    609   3B @0xc1020d6f: OOB, bytes not captured
>>    610   2B @0xc1020d72: OOB, bytes not captured
>>    611   2B @0xc1020d74: OOB, bytes not captured
>>    612   3B @0xc1020d76: OOB, bytes not captured
>>    613   2B @0xc1020d79: OOB, bytes not captured
>>    614   2B @0xc1020d7b: OOB, bytes not captured
>>    615   3B @0xc1020d7d: OOB, bytes not captured
>>    616   2B @0xc1020d80: OOB, bytes not captured
>>    617   2B @0xc1020d82: OOB, bytes not captured
>>    618   2B @0xc1020d89: OOB, bytes not captured
>>    619   2B @0xc1020d8b: OOB, bytes not captured
>>    620   3B @0xc1020d8d: OOB, bytes not captured
>>    621   3B @0xc1020d90: OOB, bytes not captured
>>    622   1B @0xc1020d93: OOB, bytes not captured
>>    623   1B @0xc1020d94: OOB, bytes not captured
>>    624   1B @0xc1020d95: OOB, bytes not captured
>>    625   1B @0xc1020d96: OOB, bytes not captured
>>    626   1B @0xc1020d97: OOB, bytes not captured
>>    627   3B @0xc1025f7f: OOB, bytes not captured
>>    628   6B @0xc1025f82: OOB, bytes not captured
>>    629   3B @0xc1025f88: OOB, bytes not captured
>>    630   3B @0xc1025f8b: OOB, bytes not captured
>>    631   3B @0xc1025f8e: OOB, bytes not captured
>>    632   3B @0xc1025f91: OOB, bytes not captured
>>    633   4B @0xc1025f94: OOB, bytes not captured
>>    634   3B @0xc1025f98: OOB, bytes not captured
>>    635   3B @0xc1025f9b: OOB, bytes not captured
>>    636   3B @0xc1025f9e: OOB, bytes not captured
>>    637   8B @0xc1025fa1: OOB, bytes not captured
>>    638   4B @0xc1025fa9: OOB, bytes not captured
>>    639   8B @0xc1025fad: OOB, bytes not captured
>>    640   2B @0xc1025fb5: OOB, bytes not captured
>>    641   2B @0xc1025fe2: OOB, bytes not captured
>>    642   2B @0xc1025fe4: OOB, bytes not captured
>>    643   2B @0xc1025fe6: OOB, bytes not captured
>>    644   5B @0xc1025fe8: OOB, bytes not captured
>>    645   2B @0xc1025fed: OOB, bytes not captured
>>    646   3B @0xc1025fef: OOB, bytes not captured
>>    647   3B @0xc1025ff2: OOB, bytes not captured
>>    648   4B @0xc1025ff5: OOB, bytes not captured
>>    649   3B @0xc1025ff9: OOB, bytes not captured
>>    650   7B @0xc1025ffc: OOB, bytes not captured
>>    651   7B @0xc1026003: OOB, bytes not captured
>>    652   3B @0xc102600a: OOB, bytes not captured
>>    653   2B @0xc102600d: OOB, bytes not captured
>>    654   3B @0xc102600f: OOB, bytes not captured
>>    655   3B @0xc1026012: OOB, bytes not captured
>>    656   1B @0xc1026015: OOB, bytes not captured
>>    657   1B @0xc1026016: OOB, bytes not captured
>>    658   1B @0xc1026017: OOB, bytes not captured
>>    659   1B @0xc1026018: OOB, bytes not captured
>>    660   5B @0xc1026019: OOB, bytes not captured
>>    661   1B @0xc11394e6: OOB, bytes not captured
>>    662   2B @0xc11394e7: OOB, bytes not captured
>>    663   1B @0xc11394e9: OOB, bytes not captured
>>    664   1B @0xc11394ea: OOB, bytes not captured
>>    665   1B @0xc11394eb: OOB, bytes not captured
>>    666   3B @0xc11394ec: OOB, bytes not captured
>>    667   3B @0xc11394ef: OOB, bytes not captured
>>    668   5B @0xc11394f2: OOB, bytes not captured
>>    669   3B @0xc1139579: OOB, bytes not captured
>>    670   2B @0xc113957c: OOB, bytes not captured
>>    671   3B @0xc113957e: OOB, bytes not captured
>>    672   2B @0xc1139581: OOB, bytes not captured
>>    673   3B @0xc113958d: OOB, bytes not captured
>>    674   2B @0xc1139590: OOB, bytes not captured
>>    675   3B @0xc1139592: OOB, bytes not captured
>>    676   1B @0xc1139595: OOB, bytes not captured
>>    677   1B @0xc1139596: OOB, bytes not captured
>>    678   1B @0xc1139597: OOB, bytes not captured
>>    679   1B @0xc1139598: OOB, bytes not captured
>>    680   1B @0xc1139599: OOB, bytes not captured
>>    681   1B @0xc113959a: OOB, bytes not captured
>>    682   3B @0xc10266b5: OOB, bytes not captured
>>    683   2B @0xc10266b8: OOB, bytes not captured
>>    684   2B @0xc10266ba: OOB, bytes not captured
>>    685   6B @0xc10266bc: OOB, bytes not captured
>>    686   7B @0xc10266c2: OOB, bytes not captured
>>    687   2B @0xc10266c9: OOB, bytes not captured
>>    688   6B @0xc10266cb: OOB, bytes not captured
>>    689   3B @0xc10266d1: OOB, bytes not captured
>>    690   6B @0xc10266d4: OOB, bytes not captured
>>    691   2B @0xc10266da: OOB, bytes not captured
>>    692   2B @0xc10266dc: OOB, bytes not captured
>>    693   1B @0xc10266de: OOB, bytes not captured
>>    694   1B @0xc10266df: OOB, bytes not captured
>>    695   1B @0xc10266e0: OOB, bytes not captured
>>    696   5B @0xc10266e1: OOB, bytes not captured
>>    697   1B @0xc102644d: OOB, bytes not captured
>>    698   2B @0xc102644e: OOB, bytes not captured
>>    699   1B @0xc1026450: OOB, bytes not captured
>>    700   2B @0xc1026451: OOB, bytes not captured
>>    701   1B @0xc1026453: OOB, bytes not captured
>>    702   5B @0xc1026454: OOB, bytes not captured
>>    703   1B @0xc1026459: OOB, bytes not captured
>>    704   6B @0xc102645a: OOB, bytes not captured
>>    705   3B @0xc1026460: OOB, bytes not captured
>>    706   3B @0xc1026463: OOB, bytes not captured
>>    707   7B @0xc1026466: OOB, bytes not captured
>>    708   2B @0xc102646d: OOB, bytes not captured
>>    709   2B @0xc102646f: OOB, bytes not captured
>>    710   7B @0xc1026480: OOB, bytes not captured
>>    711   6B @0xc1026487: OOB, bytes not captured
>>    712   1B @0xc1026581: OOB, bytes not captured
>>    713   1B @0xc1026582: OOB, bytes not captured
>>    714   1B @0xc1026583: OOB, bytes not captured
>>    715   1B @0xc1026584: OOB, bytes not captured
>>    716   1B @0xc1026585: OOB, bytes not captured
>>    717   7B @0xc102035c: OOB, bytes not captured
>>    718   1B @0xc1020363: OOB, bytes not captured
>>    719   1B @0xc1020364: OOB, bytes not captured
>>    720   1B @0xc1020365: OOB, bytes not captured
>>    721   1B @0xc1020366: OOB, bytes not captured
>>    722   1B @0xc1020367: OOB, bytes not captured
>>    723   1B @0xc1020368: OOB, bytes not captured
>>    724   3B @0xc1020494: OOB, bytes not captured
>>    725   1B @0xc1020497: OOB, bytes not captured
>>    726   1B @0xc1020498: OOB, bytes not captured
>>    727   1B @0xc1020499: OOB, bytes not captured
>>    728   2B @0xc102d5b7: OOB, bytes not captured
>>    729   5B @0xc102d5b9: OOB, bytes not captured
>>    730   8B @0xc102d5be: OOB, bytes not captured
>>    731   7B @0xc102d5c6: OOB, bytes not captured
>>    732   2B @0xc102d5cd: OOB, bytes not captured
>>    733   7B @0xc102d64a: OOB, bytes not captured
>>    734   2B @0xc102d651: OOB, bytes not captured
>>    735   4B @0xc102d66f: OOB, bytes not captured
>>    736   2B @0xc102d673: OOB, bytes not captured
>>    737   2B @0xc102d675: OOB, bytes not captured
>>    738   5B @0xc102d677: OOB, bytes not captured
>>    739   1B @0xc1020547: OOB, bytes not captured
>>    740   1B @0xc1020548: OOB, bytes not captured
>>    741   2B @0xc1020549: OOB, bytes not captured
>>    742   1B @0xc102054b: OOB, bytes not captured
>>    743   2B @0xc102054c: OOB, bytes not captured
>>    744   1B @0xc102054e: OOB, bytes not captured
>>    745   6B @0xc102054f: OOB, bytes not captured
>>    746   5B @0xc1020555: OOB, bytes not captured
>>    747   3B @0xc102055a: OOB, bytes not captured
>>    748   3B @0xc102055d: OOB, bytes not captured
>>    749   2B @0xc1020560: OOB, bytes not captured
>>    750   2B @0xc1020562: OOB, bytes not captured
>>    751   2B @0xc1020564: OOB, bytes not captured
>>    752   2B @0xc1020566: OOB, bytes not captured
>>    753   3B @0xc1020568: OOB, bytes not captured
>>    754   1B @0xc102525f: OOB, bytes not captured
>>    755   1B @0xc1025260: OOB, bytes not captured
>>    756   2B @0xc1025261: OOB, bytes not captured
>>    757   1B @0xc1025263: OOB, bytes not captured
>>    758   1B @0xc1025264: OOB, bytes not captured
>>    759   3B @0xc1025265: OOB, bytes not captured
>>    760   4B @0xc1025268: OOB, bytes not captured
>>    761   3B @0xc102526c: OOB, bytes not captured
>>    762   6B @0xc102526f: OOB, bytes not captured
>>    763   6B @0xc1025275: OOB, bytes not captured
>>    764   3B @0xc102527b: OOB, bytes not captured
>>    765   4B @0xc102527e: OOB, bytes not captured
>>    766   6B @0xc1025282: OOB, bytes not captured
>>    767   4B @0xc1025288: OOB, bytes not captured
>>    768   5B @0xc102528c: OOB, bytes not captured
>>    769   4B @0xc1025291: OOB, bytes not captured
>>    770   6B @0xc1025295: OOB, bytes not captured
>>    771   7B @0xc102543f: OOB, bytes not captured
>>    772   6B @0xc1025446: OOB, bytes not captured
>>    773   3B @0xc10252a0: OOB, bytes not captured
>>    774   3B @0xc10252a3: OOB, bytes not captured
>>    775   2B @0xc10252a6: OOB, bytes not captured
>>    776   6B @0xc10252a8: OOB, bytes not captured
>>    777   4B @0xc10252ae: OOB, bytes not captured
>>    778   4B @0xc10252b2: OOB, bytes not captured
>>    779   5B @0xc10252b6: OOB, bytes not captured
>>    780   7B @0xc10252bb: OOB, bytes not captured
>>    781   2B @0xc10252c2: OOB, bytes not captured
>>    782   3B @0xc10252f2: OOB, bytes not captured
>>    783   4B @0xc10252f5: OOB, bytes not captured
>>    784   6B @0xc10252f9: OOB, bytes not captured
>>    785   7B @0xc10252ff: OOB, bytes not captured
>>    786   6B @0xc1025306: OOB, bytes not captured
>>    787   7B @0xc102530c: OOB, bytes not captured
>>    788   2B @0xc1025313: OOB, bytes not captured
>>    789   6B @0xc1025315: OOB, bytes not captured
>>    790   2B @0xc102531b: OOB, bytes not captured
>>    791   2B @0xc102531d: OOB, bytes not captured
>>    792   3B @0xc1025325: OOB, bytes not captured
>>    793   2B @0xc1025328: OOB, bytes not captured
>>    794   3B @0xc1025349: OOB, bytes not captured
>>    795   2B @0xc102534c: OOB, bytes not captured
>>    796   3B @0xc1025399: OOB, bytes not captured
>>    797   6B @0xc102539c: OOB, bytes not captured
>>    798   2B @0xc10253a2: OOB, bytes not captured
>>    799   2B @0xc10253a4: OOB, bytes not captured
>>    800   2B @0xc10253a6: OOB, bytes not captured
>>    801   2B @0xc10253ac: OOB, bytes not captured
>>    802   2B @0xc10253ae: OOB, bytes not captured
>>    803   3B @0xc10253a8: OOB, bytes not captured
>>    804   1B @0xc10253ab: OOB, bytes not captured
>>    805   2B @0xc10253ac: OOB, bytes not captured
>>    806   2B @0xc10253ae: OOB, bytes not captured
>>    807   2B @0xc10253b0: OOB, bytes not captured
>>    808   2B @0xc10253b2: OOB, bytes not captured
>>    809   2B @0xc10253b4: OOB, bytes not captured
>>    810   2B @0xc10253ba: OOB, bytes not captured
>>    811   2B @0xc10253bc: OOB, bytes not captured
>>    812   3B @0xc10253b6: OOB, bytes not captured
>>    813   1B @0xc10253b9: OOB, bytes not captured
>>    814   2B @0xc10253ba: OOB, bytes not captured
>>    815   2B @0xc10253bc: OOB, bytes not captured
>>    816   2B @0xc10253be: OOB, bytes not captured
>>    817   2B @0xc10253c4: OOB, bytes not captured
>>    818   2B @0xc10253c6: OOB, bytes not captured
>>    819   2B @0xc10253c8: OOB, bytes not captured
>>    820   2B @0xc10253ce: OOB, bytes not captured
>>    821   2B @0xc10253d0: OOB, bytes not captured
>>    822   3B @0xc10253d2: OOB, bytes not captured
>>    823   3B @0xc10253d5: OOB, bytes not captured
>>    824   2B @0xc10253d8: OOB, bytes not captured
>>    825   2B @0xc10253da: OOB, bytes not captured
>>    826   2B @0xc10253dc: OOB, bytes not captured
>>    827   2B @0xc10253e2: OOB, bytes not captured
>>    828   2B @0xc10253e4: OOB, bytes not captured
>>    829   5B @0xc10253e6: OOB, bytes not captured
>>    830   1B @0xc101fff1: OOB, bytes not captured
>>    831   1B @0xc101fff2: OOB, bytes not captured
>>    832   1B @0xc101fff3: OOB, bytes not captured
>>    833   1B @0xc101fff4: OOB, bytes not captured
>>    834   3B @0xc101fff5: OOB, bytes not captured
>>    835   4B @0xc101fff8: OOB, bytes not captured
>>    836   2B @0xc101fffc: OOB, bytes not captured
>>    837   4B @0xc101fffe: OOB, bytes not captured
>>    838   4B @0xc1020002: OOB, bytes not captured
>>    839   3B @0xc1020006: OOB, bytes not captured
>>    840   3B @0xc1020009: OOB, bytes not captured
>>    841   4B @0xc102000c: OOB, bytes not captured
>>    842   4B @0xc1020010: OOB, bytes not captured
>>    843   3B @0xc1020014: OOB, bytes not captured
>>    844   3B @0xc1020017: OOB, bytes not captured
>>    845   4B @0xc102001a: OOB, bytes not captured
>>    846   4B @0xc102001e: OOB, bytes not captured
>>    847   5B @0xc1020022: OOB, bytes not captured
>>    848   2B @0xc1020027: OOB, bytes not captured
>>    849   2B @0xc1020029: OOB, bytes not captured
>>    850   5B @0xc102002b: OOB, bytes not captured
>>    851   2B @0xc1020030: OOB, bytes not captured
>>    852   4B @0xc102003a: OOB, bytes not captured
>>    853   6B @0xc102003e: OOB, bytes not captured
>>    854   3B @0xc1020044: OOB, bytes not captured
>>    855   4B @0xc1020047: OOB, bytes not captured
>>    856   2B @0xc102004b: OOB, bytes not captured
>>    857   7B @0xc102004d: OOB, bytes not captured
>>    858   2B @0xc1020054: OOB, bytes not captured
>>    859   4B @0xc1020056: OOB, bytes not captured
>>    860   3B @0xc102005a: OOB, bytes not captured
>>    861   3B @0xc102005d: OOB, bytes not captured
>>    862   3B @0xc1020060: OOB, bytes not captured
>>    863   3B @0xc1020063: OOB, bytes not captured
>>    864   3B @0xc1020066: OOB, bytes not captured
>>    865   3B @0xc1020069: OOB, bytes not captured
>>    866   3B @0xc102006c: OOB, bytes not captured
>>    867   3B @0xc102006f: OOB, bytes not captured
>>    868   2B @0xc1020072: OOB, bytes not captured
>>    869   2B @0xc1020074: OOB, bytes not captured
>>    870   2B @0xc1020076: OOB, bytes not captured
>>    871   4B @0xc1020078: OOB, bytes not captured
>>    872   3B @0xc102007c: OOB, bytes not captured
>>    873   4B @0xc102007f: OOB, bytes not captured
>>    874   4B @0xc1020083: OOB, bytes not captured
>>    875   2B @0xc1020087: OOB, bytes not captured
>>    876   2B @0xc1020089: OOB, bytes not captured
>>    877   2B @0xc102008b: OOB, bytes not captured
>>    878   2B @0xc102008d: OOB, bytes not captured
>>    879   2B @0xc102008f: OOB, bytes not captured
>>    880   2B @0xc1020091: OOB, bytes not captured
>>    881   2B @0xc1020093: OOB, bytes not captured
>>    882   2B @0xc1020095: OOB, bytes not captured
>>    883   2B @0xc1020097: OOB, bytes not captured
>>    884   3B @0xc102009d: OOB, bytes not captured
>>    885   2B @0xc10200a0: OOB, bytes not captured
>>    886   2B @0xc10200a2: OOB, bytes not captured
>>    887   2B @0xc10200a4: OOB, bytes not captured
>>    888   2B @0xc10200a6: OOB, bytes not captured
>>    889   2B @0xc10200a8: OOB, bytes not captured
>>    890   2B @0xc10200ac: OOB, bytes not captured
>>    891   7B @0xc10200ae: OOB, bytes not captured
>>    892   2B @0xc10200b5: OOB, bytes not captured
>>    893   4B @0xc10200b7: OOB, bytes not captured
>>    894   6B @0xc10200bb: OOB, bytes not captured
>>    895   2B @0xc10200c1: OOB, bytes not captured
>>    896   2B @0xc10200c3: OOB, bytes not captured
>>    897   2B @0xc10200c5: OOB, bytes not captured
>>    898   5B @0xc10200dc: OOB, bytes not captured
>>    899   5B @0xc10200e1: OOB, bytes not captured
>>    900   2B @0xc10200e6: OOB, bytes not captured
>>    901   2B @0xc10200e8: OOB, bytes not captured
>>    902   4B @0xc10200ea: OOB, bytes not captured
>>    903   2B @0xc10200ee: OOB, bytes not captured
>>    904   3B @0xc10200f2: OOB, bytes not captured
>>    905   1B @0xc10200f5: OOB, bytes not captured
>>    906   1B @0xc10200f6: OOB, bytes not captured
>>    907   1B @0xc10200f7: OOB, bytes not captured
>>    908   1B @0xc10200f8: OOB, bytes not captured
>>    909   1B @0xc10200f9: OOB, bytes not captured
>>    910   1B @0xc10253eb: OOB, bytes not captured
>>    911   2B @0xc10253ec: OOB, bytes not captured
>>    912   2B @0xc10253ee: OOB, bytes not captured
>>    913   5B @0xc10253f0: OOB, bytes not captured
>>    914   1B @0xc101fbe8: OOB, bytes not captured
>>    915   2B @0xc101fbe9: OOB, bytes not captured
>>    916   3B @0xc101fbeb: OOB, bytes not captured
>>    917   5B @0xc101fbee: OOB, bytes not captured
>>    918   3B @0xc101fbf3: OOB, bytes not captured
>>    919   7B @0xc101fbf6: OOB, bytes not captured
>>    920   2B @0xc101fbfd: OOB, bytes not captured
>>    921   2B @0xc101fbff: OOB, bytes not captured
>>    922   3B @0xc101fc01: OOB, bytes not captured
>>    923   2B @0xc101fc04: OOB, bytes not captured
>>    924   2B @0xc101fc06: OOB, bytes not captured
>>    925   4B @0xc101fc0c: OOB, bytes not captured
>>    926   2B @0xc101fc10: OOB, bytes not captured
>>    927   3B @0xc101fc12: OOB, bytes not captured
>>    928   5B @0xc101fc15: OOB, bytes not captured
>>    929   3B @0xc101fc1a: OOB, bytes not captured
>>    930   3B @0xc101fc1d: OOB, bytes not captured
>>    931   6B @0xc101fc20: OOB, bytes not captured
>>    932   2B @0xc101fc26: OOB, bytes not captured
>>    933   2B @0xc101fc28: OOB, bytes not captured
>>    934   1B @0xc101fc40: OOB, bytes not captured
>>    935   1B @0xc101fc41: OOB, bytes not captured
>>    936   4B @0xc10253f5: OOB, bytes not captured
>>    937   2B @0xc10253f9: OOB, bytes not captured
>>    938   4B @0xc10253fb: OOB, bytes not captured
>>    939   6B @0xc10253ff: OOB, bytes not captured
>>    940   2B @0xc1025405: OOB, bytes not captured
>>    941   8B @0xc1025407: OOB, bytes not captured
>>    942   2B @0xc102540f: OOB, bytes not captured
>>    943   5B @0xc1025411: OOB, bytes not captured
>>    944   2B @0xc1025416: OOB, bytes not captured
>>    945   3B @0xc1025459: OOB, bytes not captured
>>    946   1B @0xc102545c: OOB, bytes not captured
>>    947   1B @0xc102545d: OOB, bytes not captured
>>    948   1B @0xc102545e: OOB, bytes not captured
>>    949   1B @0xc102545f: OOB, bytes not captured
>>    950   1B @0xc1025460: OOB, bytes not captured
>>    951   2B @0xc102056b: OOB, bytes not captured
>>    952   1B @0xc1020586: OOB, bytes not captured
>>    953   1B @0xc1020587: OOB, bytes not captured
>>    954   1B @0xc1020588: OOB, bytes not captured
>>    955   1B @0xc1020589: OOB, bytes not captured
>>    956   1B @0xc102058a: OOB, bytes not captured
>>    957   3B @0xc102d67c: OOB, bytes not captured
>>    958   6B @0xc102d67f: OOB, bytes not captured
>>    959   3B @0xc102d685: OOB, bytes not captured
>>    960   2B @0xc102d688: OOB, bytes not captured
>>    961   2B @0xc102d68a: OOB, bytes not captured
>>    962   6B @0xc102d692: OOB, bytes not captured
>>    963   6B @0xc102d698: OOB, bytes not captured
>>    964   2B @0xc102d69e: OOB, bytes not captured
>>    965   2B @0xc102d6a0: OOB, bytes not captured
>>    966   2B @0xc102d6a2: OOB, bytes not captured
>>    967   4B @0xc102d715: OOB, bytes not captured
>>    968   2B @0xc102d719: OOB, bytes not captured
>>    969   5B @0xc102d71b: OOB, bytes not captured
>>    970   4B @0xc102d720: OOB, bytes not captured
>>    971   3B @0xc102d724: OOB, bytes not captured
>>    972   1B @0xc102d727: OOB, bytes not captured
>>    973   1B @0xc102d728: OOB, bytes not captured
>>    974   1B @0xc102d729: OOB, bytes not captured
>>    975   1B @0xc102d72a: OOB, bytes not captured
>>    976   1B @0xc102d72b: OOB, bytes not captured
>>    977   2B @0xc10468ab: OOB, bytes not captured
>>    978   1B @0xc10468ad: OOB, bytes not captured
>>    979   7B @0xc1046944: OOB, bytes not captured
>>    980   2B @0xc104694b: OOB, bytes not captured
>>    981   2B @0xc104694d: OOB, bytes not captured
>>    982   2B @0xc1046965: OOB, bytes not captured
>>    983   5B @0xc1046967: OOB, bytes not captured
>>    984   2B @0xc104696c: OOB, bytes not captured
>>    985   2B @0xc104696e: OOB, bytes not captured
>>    986   4B @0xc1046985: OOB, bytes not captured
>>    987   2B @0xc1046989: OOB, bytes not captured
>>    988   4B @0xc10469ad: OOB, bytes not captured
>>    989   1B @0xc10469b1: OOB, bytes not captured
>>    990   1B @0xc10469b2: OOB, bytes not captured
>>    991   1B @0xc10469b3: OOB, bytes not captured
>>    992   1B @0xc10469b4: OOB, bytes not captured
>>    993   1B @0xc10469b5: OOB, bytes not captured
>>    994   1B @0xc10469b6: OOB, bytes not captured
>>    995   1B @0xc10469b7: OOB, bytes not captured
>>    996   2B @0xc1025050: OOB, bytes not captured
>>    997   3B @0xc1025052: OOB, bytes not captured
>>    998   3B @0xc1025055: OOB, bytes not captured
>>    999   2B @0xc1025058: OOB, bytes not captured
>>    1000   2B @0xc1025060: OOB, bytes not captured
>>    1001   2B @0xc1025062: OOB, bytes not captured
>>    1002   2B @0xc1025064: OOB, bytes not captured
>>    1003   2B @0xc1025066: OOB, bytes not captured
>>    1004   2B @0xc1025068: OOB, bytes not captured
>>    1005   2B @0xc102506a: OOB, bytes not captured
>>    1006   2B @0xc1025070: OOB, bytes not captured
>>    1007   2B @0xc1025072: OOB, bytes not captured
>>    1008   4B @0xc1025074: OOB, bytes not captured
>>    1009   4B @0xc1025078: OOB, bytes not captured
>>    1010   3B @0xc102507c: OOB, bytes not captured
>>    1011   2B @0xc102507f: OOB, bytes not captured
>>    1012   4B @0xc1025090: OOB, bytes not captured
>>    1013   4B @0xc1025094: OOB, bytes not captured
>>    1014   4B @0xc1025098: OOB, bytes not captured
>>    1015   3B @0xc102509c: OOB, bytes not captured
>>    1016   3B @0xc102509f: OOB, bytes not captured
>>    1017   4B @0xc10250a2: OOB, bytes not captured
>>    1018   4B @0xc10250a6: OOB, bytes not captured
>>    1019   3B @0xc10250aa: OOB, bytes not captured
>>    1020   3B @0xc10250ad: OOB, bytes not captured
>>    1021   3B @0xc10250b0: OOB, bytes not captured
>>    1022   6B @0xc10250b3: OOB, bytes not captured
>>    1023   2B @0xc10251ba: OOB, bytes not captured
>>    1024   2B @0xc10251bc: OOB, bytes not captured
>>    1025   5B @0xc10251be: OOB, bytes not captured
>>    1026   1B @0xc101fece: OOB, bytes not captured
>>    1027   2B @0xc101fecf: OOB, bytes not captured
>>    1028   1B @0xc101fed1: OOB, bytes not captured
>>    1029   2B @0xc101fed2: OOB, bytes not captured
>>    1030   1B @0xc101fed4: OOB, bytes not captured
>>    1031   1B @0xc101fed5: OOB, bytes not captured
>>    1032   3B @0xc101fed6: OOB, bytes not captured
>>    1033   4B @0xc101fed9: OOB, bytes not captured
>>    1034   3B @0xc101fedd: OOB, bytes not captured
>>    1035   3B @0xc101fee0: OOB, bytes not captured
>>    1036   6B @0xc101fee3: OOB, bytes not captured
>>    1037   5B @0xc101fee9: OOB, bytes not captured
>>    1038   2B @0xc101feee: OOB, bytes not captured
>>    1039   2B @0xc101fef0: OOB, bytes not captured
>>    1040   2B @0xc101fef2: OOB, bytes not captured
>>    1041   2B @0xc101fef4: OOB, bytes not captured
>>    1042   2B @0xc101ff3c: OOB, bytes not captured
>>    1043   2B @0xc101ff3e: OOB, bytes not captured
>>    1044   2B @0xc101ff40: OOB, bytes not captured
>>    1045   3B @0xc101ff04: OOB, bytes not captured
>>    1046   4B @0xc101ff07: OOB, bytes not captured
>>    1047   2B @0xc101ff0b: OOB, bytes not captured
>>    1048   2B @0xc101ff0d: OOB, bytes not captured
>>    1049   2B @0xc101ff2a: OOB, bytes not captured
>>    1050   2B @0xc101ff2c: OOB, bytes not captured
>>    1051   2B @0xc101ff2e: OOB, bytes not captured
>>    1052   5B @0xc101ff30: OOB, bytes not captured
>>    1053   1B @0xc101fd3e: OOB, bytes not captured
>>    1054   1B @0xc101fd3f: OOB, bytes not captured
>>    1055   2B @0xc101fd40: OOB, bytes not captured
>>    1056   1B @0xc101fd42: OOB, bytes not captured
>>    1057   2B @0xc101fd43: OOB, bytes not captured
>>    1058   3B @0xc101fd45: OOB, bytes not captured
>>    1059   4B @0xc101fd48: OOB, bytes not captured
>>    1060   2B @0xc101fd4c: OOB, bytes not captured
>>    1061   2B @0xc101fd4e: OOB, bytes not captured
>>    1062   2B @0xc101fd50: OOB, bytes not captured
>>    1063   2B @0xc101fd52: OOB, bytes not captured
>>    1064   3B @0xc101fd54: OOB, bytes not captured
>>    1065   2B @0xc101fd57: OOB, bytes not captured
>>    1066   2B @0xc101fd59: OOB, bytes not captured
>>    1067   2B @0xc101fd5b: OOB, bytes not captured
>>    1068   1B @0xc101fd5d: OOB, bytes not captured
>>    1069   3B @0xc101fd5e: OOB, bytes not captured
>>    1070   2B @0xc101fd61: OOB, bytes not captured
>>    1071   2B @0xc101fd63: OOB, bytes not captured
>>    1072   3B @0xc101fd65: OOB, bytes not captured
>>    1073   2B @0xc101fd68: OOB, bytes not captured
>>    1074   2B @0xc101fd6a: OOB, bytes not captured
>>    1075   5B @0xc101fd6c: OOB, bytes not captured
>>    1076   3B @0xc101fd71: OOB, bytes not captured
>>    1077   3B @0xc101fd74: OOB, bytes not captured
>>    1078   4B @0xc101fd77: OOB, bytes not captured
>>    1079   3B @0xc101fd7b: OOB, bytes not captured
>>    1080   2B @0xc101fd7e: OOB, bytes not captured
>>    1081   3B @0xc101fd80: OOB, bytes not captured
>>    1082   2B @0xc101fd83: OOB, bytes not captured
>>    1083   5B @0xc101fd85: OOB, bytes not captured
>>    1084   3B @0xc101fd8a: OOB, bytes not captured
>>    1085   3B @0xc101fd8d: OOB, bytes not captured
>>    1086   4B @0xc101fd90: OOB, bytes not captured
>>    1087   3B @0xc101fd94: OOB, bytes not captured
>>    1088   2B @0xc101fd97: OOB, bytes not captured
>>    1089   3B @0xc101fdb2: OOB, bytes not captured
>>    1090   2B @0xc101fdb5: OOB, bytes not captured
>>    1091   5B @0xc101fdb7: OOB, bytes not captured
>>    1092   2B @0xc101fdbc: OOB, bytes not captured
>>    1093   1B @0xc101fdc3: OOB, bytes not captured
>>    1094   1B @0xc101fdc4: OOB, bytes not captured
>>    1095   1B @0xc101fdc5: OOB, bytes not captured
>>    1096   1B @0xc101fdc6: OOB, bytes not captured
>>    1097   1B @0xc101fdc7: OOB, bytes not captured
>>    1098   3B @0xc101ff35: OOB, bytes not captured
>>    1099   2B @0xc101ff38: OOB, bytes not captured
>>    1100   2B @0xc101ff3a: OOB, bytes not captured
>>    1101   2B @0xc101ff3e: OOB, bytes not captured
>>    1102   2B @0xc101ff40: OOB, bytes not captured
>>    1103   1B @0xc101ff42: OOB, bytes not captured
>>    1104   2B @0xc101ff43: OOB, bytes not captured
>>    1105   2B @0xc101ff45: OOB, bytes not captured
>>    1106   1B @0xc101ff47: OOB, bytes not captured
>>    1107   1B @0xc101ff48: OOB, bytes not captured
>>    1108   1B @0xc101ff49: OOB, bytes not captured
>>    1109   1B @0xc101ff4a: OOB, bytes not captured
>>    1110   1B @0xc101ff4b: OOB, bytes not captured
>>    1111   1B @0xc101ff4c: OOB, bytes not captured
>>    1112   2B @0xc10251c3: OOB, bytes not captured
>>    1113   3B @0xc10251c5: OOB, bytes not captured
>>    1114   3B @0xc10251c8: OOB, bytes not captured
>>    1115   2B @0xc10251cb: OOB, bytes not captured
>>    1116   2B @0xc10251cd: OOB, bytes not captured
>>    1117   3B @0xc10251cf: OOB, bytes not captured
>>    1118   6B @0xc10251d2: OOB, bytes not captured
>>    1119   5B @0xc10251d8: OOB, bytes not captured
>>    1120   2B @0xc10251dd: OOB, bytes not captured
>>    1121   3B @0xc10251df: OOB, bytes not captured
>>    1122   3B @0xc10251e2: OOB, bytes not captured
>>    1123   2B @0xc10251e5: OOB, bytes not captured
>>    1124   3B @0xc10251ee: OOB, bytes not captured
>>    1125   2B @0xc10251f1: OOB, bytes not captured
>>    1126   3B @0xc10251fa: OOB, bytes not captured
>>    1127   2B @0xc10251fd: OOB, bytes not captured
>>    1128   2B @0xc10251ff: OOB, bytes not captured
>>    1129   2B @0xc1025201: OOB, bytes not captured
>>    1130   2B @0xc101fd61: OOB, bytes not captured
>>    1131   2B @0xc101fd63: OOB, bytes not captured
>>    1132   3B @0xc101fd65: OOB, bytes not captured
>>    1133   2B @0xc101fd68: OOB, bytes not captured
>>    1134   2B @0xc101fd6a: OOB, bytes not captured
>>    1135   3B @0xc100327c: OOB, bytes not captured
>>    1136   2B @0xc100327f: OOB, bytes not captured
>>    1137   5B @0xc1003281: OOB, bytes not captured
>>    1138   1B @0xc126d817: OOB, bytes not captured
>>    1139   5B @0xc126d818: OOB, bytes not captured
>>    1140   1B @0xc126d81d: OOB, bytes not captured
>>    1141   1B @0xc126d81e: OOB, bytes not captured
>>    1142   1B @0xc126d81f: OOB, bytes not captured
>>    1143   3B @0xc126d820: OOB, bytes not captured
>>    1144   4B @0xc126d823: OOB, bytes not captured
>>    1145   4B @0xc126d827: OOB, bytes not captured
>>    1146   4B @0xc126d82b: OOB, bytes not captured
>>    1147   7B @0xc126d82f: OOB, bytes not captured
>>    1148   7B @0xc126d836: OOB, bytes not captured
>>    1149   2B @0xc126d83d: OOB, bytes not captured
>>    1150   4B @0xc126d83f: OOB, bytes not captured
>>    1151   5B @0xc126d843: OOB, bytes not captured
>>    1152   5B @0xc106ec90: OOB, bytes not captured
>>    1153   7B @0xc106ec95: OOB, bytes not captured
>>    1154   2B @0xc106ec9c: OOB, bytes not captured
>>    1155   3B @0xc106ec9e: OOB, bytes not captured
>>    1156   4B @0xc106eca1: OOB, bytes not captured
>>    1157   1B @0xc106eca5: OOB, bytes not captured
>>    1158   4B @0xc126d848: OOB, bytes not captured
>>    1159   6B @0xc126d84c: OOB, bytes not captured
>>    1160   4B @0xc126d852: OOB, bytes not captured
>>    1161   2B @0xc126d856: OOB, bytes not captured
>>    1162   6B @0xc126d85d: OOB, bytes not captured
>>    1163   6B @0xc126d863: OOB, bytes not captured
>>    1164   4B @0xc126d869: OOB, bytes not captured
>>    1165   4B @0xc126d86d: OOB, bytes not captured
>>    1166   4B @0xc126d871: OOB, bytes not captured
>>    1167   2B @0xc126d875: OOB, bytes not captured
>>    1168   5B @0xc126d877: OOB, bytes not captured
>>    1169   7B @0xc126d87c: OOB, bytes not captured
>>    1170   2B @0xc126d883: OOB, bytes not captured
>>    1171   7B @0xc126d895: OOB, bytes not captured
>>    1172   4B @0xc126d89c: OOB, bytes not captured
>>    1173   2B @0xc126d8a0: OOB, bytes not captured
>>    1174   7B @0xc126d8b1: OOB, bytes not captured
>>    1175   2B @0xc126d8b8: OOB, bytes not captured
>>    1176   4B @0xc126d8d1: OOB, bytes not captured
>>    1177   5B @0xc126d8d5: OOB, bytes not captured
>>    1178   4B @0xc126d8da: OOB, bytes not captured
>>    1179   5B @0xc126d8de: OOB, bytes not captured
>>    1180   3B @0xc126d8e3: OOB, bytes not captured
>>    1181   3B @0xc126d8e6: OOB, bytes not captured
>>    1182   5B @0xc126d8e9: OOB, bytes not captured
>>    1183   3B @0xc126d8ee: OOB, bytes not captured
>>    1184   2B @0xc126d8f1: OOB, bytes not captured
>>    1185   2B @0xc126d8f3: OOB, bytes not captured
>>    1186   3B @0xc126d941: OOB, bytes not captured
>>    1187   3B @0xc126d944: OOB, bytes not captured
>>    1188   2B @0xc126d947: OOB, bytes not captured
>>    1189   2B @0xc126d949: OOB, bytes not captured
>>    1190   4B @0xc126d953: OOB, bytes not captured
>>    1191   4B @0xc126d957: OOB, bytes not captured
>>    1192   6B @0xc126d95b: OOB, bytes not captured
>>    1193   3B @0xc126dcc4: OOB, bytes not captured
>>    1194   6B @0xc126dcc7: OOB, bytes not captured
>>    1195   3B @0xc126dccd: OOB, bytes not captured
>>    1196   3B @0xc126dcd0: OOB, bytes not captured
>>    1197   6B @0xc126dcd3: OOB, bytes not captured
>>    1198   3B @0xc126dcd9: OOB, bytes not captured
>>    1199   2B @0xc126dcdc: OOB, bytes not captured
>>    1200   2B @0xc126dcde: OOB, bytes not captured
>>    1201   2B @0xc126dce0: OOB, bytes not captured
>>    1202   2B @0xc126dce2: OOB, bytes not captured
>>    1203   4B @0xc126dce4: OOB, bytes not captured
>>    1204   3B @0xc126dce8: OOB, bytes not captured
>>    1205   2B @0xc126dceb: OOB, bytes not captured
>>    1206   3B @0xc126dced: OOB, bytes not captured
>>    1207   2B @0xc126dcf0: OOB, bytes not captured
>>    1208   6B @0xc126dcf2: OOB, bytes not captured
>>    1209   6B @0xc126dcf8: OOB, bytes not captured
>>    1210   2B @0xc126dcfe: OOB, bytes not captured
>>    1211   2B @0xc126dd00: OOB, bytes not captured
>>    1212   5B @0xc126dd02: OOB, bytes not captured
>>    1213   2B @0xc126dd07: OOB, bytes not captured
>>    1214   3B @0xc126dd09: OOB, bytes not captured
>>    1215   3B @0xc126dd0c: OOB, bytes not captured
>>    1216   2B @0xc126dd0f: OOB, bytes not captured
>>    1217   2B @0xc126dd11: OOB, bytes not captured
>>    1218   2B @0xc126dd13: OOB, bytes not captured
>>    1219   2B @0xc126dd15: OOB, bytes not captured
>>    1220   2B @0xc126dd17: OOB, bytes not captured
>>    1221   2B @0xc126dd19: OOB, bytes not captured
>>    1222   2B @0xc126dd1f: OOB, bytes not captured
>>    1223   2B @0xc126dd21: OOB, bytes not captured
>>    1224   4B @0xc126dd23: OOB, bytes not captured
>>    1225   3B @0xc126dd27: OOB, bytes not captured
>>    1226   2B @0xc126dd2a: OOB, bytes not captured
>>    1227   2B @0xc126dd2c: OOB, bytes not captured
>>    1228   3B @0xc126dd2e: OOB, bytes not captured
>>    1229   3B @0xc126dd31: OOB, bytes not captured
>>    1230   2B @0xc126dd34: OOB, bytes not captured
>>    1231   3B @0xc126dd58: OOB, bytes not captured
>>    1232   2B @0xc126dd5b: OOB, bytes not captured
>>    1233   4B @0xc126dd5d: OOB, bytes not captured
>>    1234   3B @0xc126dd61: OOB, bytes not captured
>>    1235   1B @0xc1026263: OOB, bytes not captured
>>    1236   1B @0xc1026264: OOB, bytes not captured
>>    1237   1B @0xc1026265: OOB, bytes not captured
>>    1238   1B @0xc1026266: OOB, bytes not captured
>>    1239   3B @0xc1026267: OOB, bytes not captured
>>    1240   3B @0xc102626a: OOB, bytes not captured
>>    1241   5B @0xc102626d: OOB, bytes not captured
>>    1242   2B @0xc1026325: OOB, bytes not captured
>>    1243   6B @0xc1026327: OOB, bytes not captured
>>    1244   4B @0xc1026272: OOB, bytes not captured
>>    1245   3B @0xc1026276: OOB, bytes not captured
>>    1246   2B @0xc1026279: OOB, bytes not captured
>>    1247   2B @0xc102627b: OOB, bytes not captured
>>    1248   5B @0xc102627d: OOB, bytes not captured
>>    1249   4B @0xc1026282: OOB, bytes not captured
>>    1250   6B @0xc1026286: OOB, bytes not captured
>>    1251   3B @0xc102628c: OOB, bytes not captured
>>    1252   3B @0xc102628f: OOB, bytes not captured
>>    1253   3B @0xc1026292: OOB, bytes not captured
>>    1254   4B @0xc1026295: OOB, bytes not captured
>>    1255   4B @0xc1026299: OOB, bytes not captured
>>    1256   3B @0xc102629d: OOB, bytes not captured
>>    1257   3B @0xc10262a0: OOB, bytes not captured
>>    1258   4B @0xc10262a3: OOB, bytes not captured
>>    1259   8B @0xc10262a7: OOB, bytes not captured
>>    1260   4B @0xc10262af: OOB, bytes not captured
>>    1261   7B @0xc10262b3: OOB, bytes not captured
>>    1262   2B @0xc10262ba: OOB, bytes not captured
>>    1263   2B @0xc10262e7: OOB, bytes not captured
>>    1264   2B @0xc10262e9: OOB, bytes not captured
>>    1265   2B @0xc10262eb: OOB, bytes not captured
>>    1266   3B @0xc10262bc: OOB, bytes not captured
>>    1267   3B @0xc10262bf: OOB, bytes not captured
>>    1268   4B @0xc10262c2: OOB, bytes not captured
>>    1269   4B @0xc10262c6: OOB, bytes not captured
>>    1270   2B @0xc10262ca: OOB, bytes not captured
>>    1271   2B @0xc10262cc: OOB, bytes not captured
>>    1272   3B @0xc10262d9: OOB, bytes not captured
>>    1273   7B @0xc10262dc: OOB, bytes not captured
>>    1274   4B @0xc10262e3: OOB, bytes not captured
>>    1275   2B @0xc10262e7: OOB, bytes not captured
>>    1276   2B @0xc10262e9: OOB, bytes not captured
>>    1277   2B @0xc10262eb: OOB, bytes not captured
>>    1278   4B @0xc10262ed: OOB, bytes not captured
>>    1279   2B @0xc10262f1: OOB, bytes not captured
>>    1280   4B @0xc10262f9: OOB, bytes not captured
>>    1281   3B @0xc10262fd: OOB, bytes not captured
>>    1282   7B @0xc1026300: OOB, bytes not captured
>>    1283   7B @0xc1026307: OOB, bytes not captured
>>    1284   3B @0xc102630e: OOB, bytes not captured
>>    1285   2B @0xc1026311: OOB, bytes not captured
>>    1286   3B @0xc1026313: OOB, bytes not captured
>>    1287   5B @0xc1026316: OOB, bytes not captured
>>    1288   2B @0xc1139583: OOB, bytes not captured
>>    1289   2B @0xc1139585: OOB, bytes not captured
>>    1290   6B @0xc1139587: OOB, bytes not captured
>>    1291   7B @0xc102631b: OOB, bytes not captured
>>    1292   3B @0xc1026322: OOB, bytes not captured
>>    1293   2B @0xc1026325: OOB, bytes not captured
>>    1294   6B @0xc1026327: OOB, bytes not captured
>>    1295   3B @0xc102632d: OOB, bytes not captured
>>    1296   1B @0xc1026330: OOB, bytes not captured
>>    1297   1B @0xc1026331: OOB, bytes not captured
>>    1298   1B @0xc1026332: OOB, bytes not captured
>>    1299   1B @0xc1026333: OOB, bytes not captured
>>    1300   1B @0xc1026334: OOB, bytes not captured
>>    1301   4B @0xc126dd64: OOB, bytes not captured
>>    1302   5B @0xc126dd68: OOB, bytes not captured
>>    1303   1B @0xc102092e: OOB, bytes not captured
>>    1304   2B @0xc102092f: OOB, bytes not captured
>>    1305   1B @0xc1020931: OOB, bytes not captured
>>    1306   3B @0xc1020932: OOB, bytes not captured
>>    1307   3B @0xc1020935: OOB, bytes not captured
>>    1308   2B @0xc1020938: OOB, bytes not captured
>>    1309   2B @0xc1020941: OOB, bytes not captured
>>    1310   5B @0xc1020943: OOB, bytes not captured
>>    1311   1B @0xc1026586: OOB, bytes not captured
>>    1312   2B @0xc1026587: OOB, bytes not captured
>>    1313   1B @0xc1026589: OOB, bytes not captured
>>    1314   1B @0xc102658a: OOB, bytes not captured
>>    1315   1B @0xc102658b: OOB, bytes not captured
>>    1316   2B @0xc102658c: OOB, bytes not captured
>>    1317   4B @0xc102658e: OOB, bytes not captured
>>    1318   6B @0xc1026592: OOB, bytes not captured
>>    1319   3B @0xc1026598: OOB, bytes not captured
>>    1320   3B @0xc102659b: OOB, bytes not captured
>>    1321   5B @0xc102659e: OOB, bytes not captured
>>    1322   2B @0xc10265a3: OOB, bytes not captured
>>    1323   3B @0xc10265a5: OOB, bytes not captured
>>    1324   3B @0xc10265a8: OOB, bytes not captured
>>    1325   3B @0xc10265ab: OOB, bytes not captured
>>    1326   2B @0xc10265ae: OOB, bytes not captured
>>    1327   2B @0xc10265b0: OOB, bytes not captured
>>    1328   2B @0xc10265c2: OOB, bytes not captured
>>    1329   3B @0xc10265c4: OOB, bytes not captured
>>    1330   2B @0xc10265c7: OOB, bytes not captured
>>    1331   2B @0xc10265c9: OOB, bytes not captured
>>    1332   2B @0xc10265d9: OOB, bytes not captured
>>    1333   2B @0xc10265db: OOB, bytes not captured
>>    1334   2B @0xc10265fb: OOB, bytes not captured
>>    1335   2B @0xc10265fd: OOB, bytes not captured
>>    1336   3B @0xc10265dd: OOB, bytes not captured
>>    1337   3B @0xc10265e0: OOB, bytes not captured
>>    1338   2B @0xc10265e3: OOB, bytes not captured
>>    1339   3B @0xc10265ec: OOB, bytes not captured
>>    1340   2B @0xc10265ef: OOB, bytes not captured
>>    1341   3B @0xc10265f8: OOB, bytes not captured
>>    1342   2B @0xc10265fb: OOB, bytes not captured
>>    1343   2B @0xc10265fd: OOB, bytes not captured
>>    1344   2B @0xc10265ff: OOB, bytes not captured
>>    1345   2B @0xc1026601: OOB, bytes not captured
>>    1346   5B @0xc1026603: OOB, bytes not captured
>>    1347   1B @0xc10257be: OOB, bytes not captured
>>    1348   2B @0xc10257bf: OOB, bytes not captured
>>    1349   1B @0xc10257c1: OOB, bytes not captured
>>    1350   2B @0xc10257c2: OOB, bytes not captured
>>    1351   1B @0xc10257c4: OOB, bytes not captured
>>    1352   4B @0xc10257c5: OOB, bytes not captured
>>    1353   2B @0xc10257c9: OOB, bytes not captured
>>    1354   3B @0xc10257cb: OOB, bytes not captured
>>    1355   3B @0xc10257ce: OOB, bytes not captured
>>    1356   2B @0xc10257d1: OOB, bytes not captured
>>    1357   2B @0xc10257d3: OOB, bytes not captured
>>    1358   5B @0xc10257d5: OOB, bytes not captured
>>    1359   3B @0xc11397d8: OOB, bytes not captured
>>    1360   2B @0xc11397db: OOB, bytes not captured
>>    1361   2B @0xc11397dd: OOB, bytes not captured
>>    1362   2B @0xc11397e3: OOB, bytes not captured
>>    1363   2B @0xc11397e5: OOB, bytes not captured
>>    1364   3B @0xc10257da: OOB, bytes not captured
>>    1365   3B @0xc10257dd: OOB, bytes not captured
>>    1366   2B @0xc10257e0: OOB, bytes not captured
>>    1367   5B @0xc10257e2: OOB, bytes not captured
>>    1368   2B @0xc1139650: OOB, bytes not captured
>>    1369   3B @0xc1139652: OOB, bytes not captured
>>    1370   2B @0xc1139655: OOB, bytes not captured
>>    1371   2B @0xc1139657: OOB, bytes not captured
>>    1372   2B @0xc1139659: OOB, bytes not captured
>>    1373   2B @0xc113965b: OOB, bytes not captured
>>    1374   3B @0xc113966c: OOB, bytes not captured
>>    1375   5B @0xc113966f: OOB, bytes not captured
>>    1376   2B @0xc1139674: OOB, bytes not captured
>>    1377   6B @0xc1139676: OOB, bytes not captured
>>    1378   5B @0xc113967c: OOB, bytes not captured
>>    1379   2B @0xc1139780: OOB, bytes not captured
>>    1380   2B @0xc1139782: OOB, bytes not captured
>>    1381   3B @0xc1139784: OOB, bytes not captured
>>    1382   2B @0xc1139787: OOB, bytes not captured
>>    1383   3B @0xc1139796: OOB, bytes not captured
>>    1384   1B @0xc1139799: OOB, bytes not captured
>>    1385   1B @0xc113979a: OOB, bytes not captured
>>    1386   1B @0xc113979b: OOB, bytes not captured
>>    1387   1B @0xc113979c: OOB, bytes not captured
>>    1388   1B @0xc113979d: OOB, bytes not captured
>>    1389   1B @0xc113979e: OOB, bytes not captured
>>    1390   1B @0xc113979f: OOB, bytes not captured
>>    1391   3B @0xc10257e7: OOB, bytes not captured
>>    1392   1B @0xc10257ea: OOB, bytes not captured
>>    1393   6B @0xc10257eb: OOB, bytes not captured
>>    1394   6B @0xc10257f1: OOB, bytes not captured
>>    1395   3B @0xc10257f7: OOB, bytes not captured
>>    1396   3B @0xc10257fa: OOB, bytes not captured
>>    1397   3B @0xc10257fd: OOB, bytes not captured
>>    1398   3B @0xc1025800: OOB, bytes not captured
>>    1399   3B @0xc1025803: OOB, bytes not captured
>>    1400   3B @0xc1025806: OOB, bytes not captured
>>    1401   3B @0xc1025809: OOB, bytes not captured
>>    1402   1B @0xc102580c: OOB, bytes not captured
>>    1403   1B @0xc102580d: OOB, bytes not captured
>>    1404   1B @0xc102580e: OOB, bytes not captured
>>    1405   3B @0xc1026608: OOB, bytes not captured
>>    1406   2B @0xc102660b: OOB, bytes not captured
>>    1407   2B @0xc102660d: OOB, bytes not captured
>>    1408   2B @0xc102660f: OOB, bytes not captured
>>    1409   5B @0xc1026611: OOB, bytes not captured
>>    1410   2B @0xc1026616: OOB, bytes not captured
>>    1411   2B @0xc1026618: OOB, bytes not captured
>>    1412   2B @0xc102661a: OOB, bytes not captured
>>    1413   5B @0xc102661c: OOB, bytes not captured
>>    1414   2B @0xc1026621: OOB, bytes not captured
>>    1415   1B @0xc1026623: OOB, bytes not captured
>>    1416   1B @0xc1026624: OOB, bytes not captured
>>    1417   1B @0xc1026625: OOB, bytes not captured
>>    1418   1B @0xc1026626: OOB, bytes not captured
>>    1419   1B @0xc1026627: OOB, bytes not captured
>>    1420   2B @0xc1020948: OOB, bytes not captured
>>    1421   2B @0xc102094a: OOB, bytes not captured
>>    1422   1B @0xc102095b: OOB, bytes not captured
>>    1423   1B @0xc102095c: OOB, bytes not captured
>>    1424   1B @0xc102095d: OOB, bytes not captured
>>    1425   2B @0xc126dd6d: OOB, bytes not captured
>>    1426   2B @0xc126dd6f: OOB, bytes not captured
>>    1427   6B @0xc126dd71: OOB, bytes not captured
>>    1428   7B @0xc126dd77: OOB, bytes not captured
>>    1429   6B @0xc126dd7e: OOB, bytes not captured
>>    1430   3B @0xc126dd84: OOB, bytes not captured
>>    1431   5B @0xc126dd87: OOB, bytes not captured
>>    1432   3B @0xc126dd8c: OOB, bytes not captured
>>    1433   7B @0xc126dd8f: OOB, bytes not captured
>>    1434   3B @0xc126dd96: OOB, bytes not captured
>>    1435   6B @0xc126dd99: OOB, bytes not captured
>>    1436   2B @0xc126dd9f: OOB, bytes not captured
>>    1437   3B @0xc126dda1: OOB, bytes not captured
>>    1438   2B @0xc126dda4: OOB, bytes not captured
>>    1439   2B @0xc126dda6: OOB, bytes not captured
>>    1440   6B @0xc126dda8: OOB, bytes not captured
>>    1441   6B @0xc126ddae: OOB, bytes not captured
>>    1442   2B @0xc126ddb4: OOB, bytes not captured
>>    1443   7B @0xc126ddb6: OOB, bytes not captured
>>    1444   7B @0xc126ddbd: OOB, bytes not captured
>>    1445   6B @0xc126ddc4: OOB, bytes not captured
>>    1446   6B @0xc126ddca: OOB, bytes not captured
>>    1447   6B @0xc126ddd0: OOB, bytes not captured
>>    1448   6B @0xc126ddd6: OOB, bytes not captured
>>    1449   3B @0xc126dddc: OOB, bytes not captured
>>    1450   5B @0xc126dddf: OOB, bytes not captured
>>    1451   3B @0xc126dde4: OOB, bytes not captured
>>    1452   7B @0xc126dde7: OOB, bytes not captured
>>    1453   7B @0xc126ddee: OOB, bytes not captured
>>    1454   7B @0xc126ddf5: OOB, bytes not captured
>>    1455   4B @0xc126ddfc: OOB, bytes not captured
>>    1456   2B @0xc126de00: OOB, bytes not captured
>>    1457   4B @0xc126de02: OOB, bytes not captured
>>    1458   6B @0xc126de06: OOB, bytes not captured
>>    1459   2B @0xc126de0c: OOB, bytes not captured
>>    1460   6B @0xc126de0e: OOB, bytes not captured
>>    1461   2B @0xc126de14: OOB, bytes not captured
>>    1462   2B @0xc126de16: OOB, bytes not captured
>>    1463   2B @0xc126de18: OOB, bytes not captured
>>    1464   4B @0xc126de1a: OOB, bytes not captured
>>    1465   4B @0xc126de1e: OOB, bytes not captured
>>    1466   2B @0xc126de22: OOB, bytes not captured
>>    1467   2B @0xc126de24: OOB, bytes not captured
>>    1468   6B @0xc126de26: OOB, bytes not captured
>>    1469   6B @0xc126de2c: OOB, bytes not captured
>>    1470  10B @0xc126de32: OOB, bytes not captured
>>    1471  10B @0xc126de3c: OOB, bytes not captured
>>    1472   4B @0xc126de46: OOB, bytes not captured
>>    1473   4B @0xc126de4a: OOB, bytes not captured
>>    1474   6B @0xc126de4e: OOB, bytes not captured
>>    1475   6B @0xc126de54: OOB, bytes not captured
>>    1476   6B @0xc126de5a: OOB, bytes not captured
>>    1477   4B @0xc126de60: OOB, bytes not captured
>>    1478   2B @0xc126de64: OOB, bytes not captured
>>    1479   2B @0xc126de66: OOB, bytes not captured
>>    1480   5B @0xc126de68: OOB, bytes not captured
>>    1481   1B @0xc10868d6: OOB, bytes not captured
>>    1482   2B @0xc10868d7: OOB, bytes not captured
>>    1483   1B @0xc10868d9: OOB, bytes not captured
>>    1484   1B @0xc10868da: OOB, bytes not captured
>>    1485   2B @0xc10868db: OOB, bytes not captured
>>    1486   1B @0xc10868dd: OOB, bytes not captured
>>    1487   5B @0xc10868de: OOB, bytes not captured
>>    1488   3B @0xc10868e3: OOB, bytes not captured
>>    1489   7B @0xc10868e6: OOB, bytes not captured
>>    1490   4B @0xc10868ed: OOB, bytes not captured
>>    1491   6B @0xc10868f1: OOB, bytes not captured
>>    1492   3B @0xc10868f7: OOB, bytes not captured
>>    1493   5B @0xc10868fa: OOB, bytes not captured
>>    1494   2B @0xc10868ff: OOB, bytes not captured
>>    1495   2B @0xc1086901: OOB, bytes not captured
>>    1496   2B @0xc1086924: OOB, bytes not captured
>>    1497   6B @0xc1086926: OOB, bytes not captured
>>    1498   3B @0xc1086b0c: OOB, bytes not captured
>>    1499   1B @0xc1086b0f: OOB, bytes not captured
>>    1500   1B @0xc1086b10: OOB, bytes not captured
>>    1501   1B @0xc1086b11: OOB, bytes not captured
>>    1502   1B @0xc1086b12: OOB, bytes not captured
>>    1503   1B @0xc1086b13: OOB, bytes not captured
>>    1504   4B @0xc126de6d: OOB, bytes not captured
>>    1505   4B @0xc126de71: OOB, bytes not captured
>>    1506   4B @0xc126de75: OOB, bytes not captured
>>    1507   6B @0xc126de79: OOB, bytes not captured
>>    1508   4B @0xc126de7f: OOB, bytes not captured
>>    1509   2B @0xc126de83: OOB, bytes not captured
>>    1510   6B @0xc126de85: OOB, bytes not captured
>>    1511   2B @0xc126de8b: OOB, bytes not captured
>>    1512   2B @0xc126de8d: OOB, bytes not captured
>>    1513   7B @0xc126dea3: OOB, bytes not captured
>>    1514   2B @0xc126deaa: OOB, bytes not captured
>>    1515   6B @0xc126dec8: OOB, bytes not captured
>>    1516   2B @0xc126dece: OOB, bytes not captured
>>    1517   6B @0xc126ded0: OOB, bytes not captured
>>    1518   6B @0xc126ded6: OOB, bytes not captured
>>    1519   2B @0xc126dedc: OOB, bytes not captured
>>    1520   2B @0xc126dede: OOB, bytes not captured
>>    1521   2B @0xc126df03: OOB, bytes not captured
>>    1522   2B @0xc126df05: OOB, bytes not captured
>>    1523   2B @0xc126df07: OOB, bytes not captured
>>    1524   5B @0xc126df09: OOB, bytes not captured
>>    1525   1B @0xc1024e18: OOB, bytes not captured
>>    1526   2B @0xc1024e19: OOB, bytes not captured
>>    1527   1B @0xc1024e1b: OOB, bytes not captured
>>    1528   1B @0xc1024e1c: OOB, bytes not captured
>>    1529   2B @0xc1024e1d: OOB, bytes not captured
>>    1530   3B @0xc1024e1f: OOB, bytes not captured
>>    1531   7B @0xc1024e22: OOB, bytes not captured
>>    1532   2B @0xc1024e29: OOB, bytes not captured
>>    1533   2B @0xc1024e2b: OOB, bytes not captured
>>    1534  11B @0xc1024e2d: OOB, bytes not captured
>>    1535   7B @0xc1024e38: OOB, bytes not captured
>>    1536   6B @0xc1024e3f: OOB, bytes not captured
>>    1537   8B @0xc1024e45: OOB, bytes not captured
>>    1538   3B @0xc1024e4d: OOB, bytes not captured
>>    1539   5B @0xc1024e50: OOB, bytes not captured
>>    1540   3B @0xc1024e55: OOB, bytes not captured
>>    1541   3B @0xc1024e58: OOB, bytes not captured
>>    1542   6B @0xc1024e5b: OOB, bytes not captured
>>    1543   8B @0xc1024e61: OOB, bytes not captured
>>    1544   6B @0xc1024e69: OOB, bytes not captured
>>    1545   6B @0xc1024e6f: OOB, bytes not captured
>>    1546   2B @0xc1024e75: OOB, bytes not captured
>>    1547   1B @0xc1024ec9: OOB, bytes not captured
>>    1548   1B @0xc1024eca: OOB, bytes not captured
>>    1549   1B @0xc1024ecb: OOB, bytes not captured
>>    1550   1B @0xc1024ecc: OOB, bytes not captured
>>    1551   1B @0xc1024ecd: OOB, bytes not captured
>>    1552   1B @0xc1024ece: OOB, bytes not captured
>>    1553   7B @0xc126df0e: OOB, bytes not captured
>>    1554   2B @0xc126df15: OOB, bytes not captured
>>    1555   2B @0xc126df2b: OOB, bytes not captured
>>    1556   2B @0xc126df2d: OOB, bytes not captured
>>    1557   1B @0xc126df2f: OOB, bytes not captured
>>    1558   1B @0xc126df30: OOB, bytes not captured
>>    1559   6B @0xc126df31: OOB, bytes not captured
>>    1560   6B @0xc126df37: OOB, bytes not captured
>>    1561  10B @0xc126df3d: OOB, bytes not captured
>>    1562   6B @0xc126df47: OOB, bytes not captured
>>    1563   6B @0xc126df4d: OOB, bytes not captured
>>    1564   7B @0xc126df53: OOB, bytes not captured
>>    1565   5B @0xc126df5a: OOB, bytes not captured
>>    1566   1B @0xc1001e41: OOB, bytes not captured
>>    1567   1B @0xc1001e42: OOB, bytes not captured
>>    1568   1B @0xc1001e43: OOB, bytes not captured
>>    1569   2B @0xc1001e44: OOB, bytes not captured
>>    1570   1B @0xc1001e46: OOB, bytes not captured
>>    1571   2B @0xc1001e47: OOB, bytes not captured
>>    1572   3B @0xc1001e49: OOB, bytes not captured
>>    1573   5B @0xc1001e4c: OOB, bytes not captured
>>    1574   6B @0xc1001e51: OOB, bytes not captured
>>    1575   7B @0xc1001e57: OOB, bytes not captured
>>    1576   4B @0xc1001e5e: OOB, bytes not captured
>>    1577   2B @0xc1001e62: OOB, bytes not captured
>>    1578   2B @0xc1001e64: OOB, bytes not captured
>>    1579   4B @0xc1001e66: OOB, bytes not captured
>>    1580   3B @0xc1001e6a: OOB, bytes not captured
>>    1581   2B @0xc1001e6d: OOB, bytes not captured
>>    1582   2B @0xc1001e6f: OOB, bytes not captured
>>    1583   7B @0xc1001e71: OOB, bytes not captured
>>    1584   3B @0xc1001e78: OOB, bytes not captured
>>    1585   2B @0xc1001e7b: OOB, bytes not captured
>>    1586   3B @0xc1001e7d: OOB, bytes not captured
>>    1587   3B @0xc1001e80: OOB, bytes not captured
>>    1588   2B @0xc1001e83: OOB, bytes not captured
>>    1589   2B @0xc1001e85: OOB, bytes not captured
>>    1590   7B @0xc1001edd: OOB, bytes not captured
>>    1591   2B @0xc1001ee4: OOB, bytes not captured
>>    1592   2B @0xc1001ee6: OOB, bytes not captured
>>    1593   2B @0xc1001ee8: OOB, bytes not captured
>>    1594   6B @0xc1001ef4: OOB, bytes not captured
>>    1595   3B @0xc1001efa: OOB, bytes not captured
>>    1596   2B @0xc1001efd: OOB, bytes not captured
>>    1597   5B @0xc1001eff: OOB, bytes not captured
>>    1598   1B @0xc101abc9: OOB, bytes not captured
>>    1599   2B @0xc101abca: OOB, bytes not captured
>>    1600   3B @0xc101abcc: OOB, bytes not captured
>>    1601   3B @0xc101abcf: OOB, bytes not captured
>>    1602   4B @0xc101abd2: OOB, bytes not captured
>>    1603   3B @0xc101abd6: OOB, bytes not captured
>>    1604   2B @0xc101abd9: OOB, bytes not captured
>>    1605   2B @0xc101abdb: OOB, bytes not captured
>>    1606   1B @0xc101abf1: OOB, bytes not captured
>>    1607   1B @0xc101abf2: OOB, bytes not captured
>>    1608   1B @0xc1001f04: OOB, bytes not captured
>>    1609   2B @0xc1001f05: OOB, bytes not captured
>>    1610   4B @0xc1001f07: OOB, bytes not captured
>>    1611   5B @0xc1001f0b: OOB, bytes not captured
>>    1612   1B @0xc101acbe: OOB, bytes not captured
>>    1613   2B @0xc101acbf: OOB, bytes not captured
>>    1614   1B @0xc101acc1: OOB, bytes not captured
>>    1615   5B @0xc101acc2: OOB, bytes not captured
>>    1616   7B @0xc101acc7: OOB, bytes not captured
>>    1617   2B @0xc101acce: OOB, bytes not captured
>>    1618   3B @0xc101acd0: OOB, bytes not captured
>>    1619   4B @0xc101acd3: OOB, bytes not captured
>>    1620   4B @0xc101acd7: OOB, bytes not captured
>>    1621   4B @0xc101acdb: OOB, bytes not captured
>>    1622   1B @0xc101acdf: OOB, bytes not captured
>>    1623   3B @0xc101ace0: OOB, bytes not captured
>>    1624   2B @0xc101ace3: OOB, bytes not captured
>>    1625   3B @0xc101acd0: OOB, bytes not captured
>>    1626   4B @0xc101acd3: OOB, bytes not captured
>>    1627   4B @0xc101acd7: OOB, bytes not captured
>>    1628   4B @0xc101acdb: OOB, bytes not captured
>>    1629   1B @0xc101acdf: OOB, bytes not captured
>>    1630   3B @0xc101ace0: OOB, bytes not captured
>>    1631   2B @0xc101ace3: OOB, bytes not captured
>>    1632   1B @0xc101ace5: OOB, bytes not captured
>>    1633   1B @0xc101ace6: OOB, bytes not captured
>>    1634   1B @0xc101ace7: OOB, bytes not captured
>>    1635   1B @0xc1001f10: OOB, bytes not captured
>>    1636   7B @0xc1001f11: OOB, bytes not captured
>>    1637   2B @0xc1001f18: OOB, bytes not captured
>>    1638   3B @0xc1001f2e: OOB, bytes not captured
>>    1639   7B @0xc1001f31: OOB, bytes not captured
>>    1640   2B @0xc1001f38: OOB, bytes not captured
>>    1641   3B @0xc1001f3a: OOB, bytes not captured
>>    1642   7B @0xc1001f3d: OOB, bytes not captured
>>    1643   2B @0xc1001f44: OOB, bytes not captured
>>    1644   2B @0xc1001f52: OOB, bytes not captured
>>    1645   2B @0xc1001f54: OOB, bytes not captured
>>    1646   2B @0xc1001f56: OOB, bytes not captured
>>    1647   2B @0xc1001f5e: OOB, bytes not captured
>>    1648   6B @0xc1001f60: OOB, bytes not captured
>>    1649   2B @0xc1001f66: OOB, bytes not captured
>>    1650   2B @0xc1001f68: OOB, bytes not captured
>>    1651   2B @0xc1001f6a: OOB, bytes not captured
>>    1652   7B @0xc1001f71: OOB, bytes not captured
>>    1653   2B @0xc1001f78: OOB, bytes not captured
>>    1654   3B @0xc1001f7a: OOB, bytes not captured
>>    1655   1B @0xc1001f7d: OOB, bytes not captured
>>    1656   1B @0xc1001f7e: OOB, bytes not captured
>>    1657   1B @0xc1001f7f: OOB, bytes not captured
>>    1658   1B @0xc1001f80: OOB, bytes not captured
>>    1659   1B @0xc1001f81: OOB, bytes not captured
>>    1660   1B @0xc126df5f: OOB, bytes not captured
>>    1661   1B @0xc126df60: OOB, bytes not captured
>>    1662   3B @0xc126df61: OOB, bytes not captured
>>    1663   3B @0xc126df64: OOB, bytes not captured
>>    1664   5B @0xc126df67: OOB, bytes not captured
>>    1665   6B @0xc126df6c: OOB, bytes not captured
>>    1666   2B @0xc126df72: OOB, bytes not captured
>>    1667   5B @0xc126df74: OOB, bytes not captured
>>    1668   1B @0xc102b82e: OOB, bytes not captured
>>    1669   2B @0xc102b82f: OOB, bytes not captured
>>    1670   1B @0xc102b831: OOB, bytes not captured
>>    1671   1B @0xc102b832: OOB, bytes not captured
>>    1672   1B @0xc102b833: OOB, bytes not captured
>>    1673   2B @0xc102b834: OOB, bytes not captured
>>    1674   3B @0xc102b836: OOB, bytes not captured
>>    1675   6B @0xc102b839: OOB, bytes not captured
>>    1676  10B @0xc102b83f: OOB, bytes not captured
>>    1677   2B @0xc102b849: OOB, bytes not captured
>>    1678   7B @0xc102b84b: OOB, bytes not captured
>>    1679   3B @0xc102b852: OOB, bytes not captured
>>    1680   6B @0xc102b855: OOB, bytes not captured
>>    1681   2B @0xc102b85b: OOB, bytes not captured
>>    1682   5B @0xc102b85d: OOB, bytes not captured
>>    1683   1B @0xc10837f4: OOB, bytes not captured
>>    1684   2B @0xc10837f5: OOB, bytes not captured
>>    1685   1B @0xc10837f7: OOB, bytes not captured
>>    1686   6B @0xc10837f8: OOB, bytes not captured
>>    1687   5B @0xc10837fe: OOB, bytes not captured
>>    1688   7B @0xc1083803: OOB, bytes not captured
>>    1689   2B @0xc108380a: OOB, bytes not captured
>>    1690   2B @0xc108380c: OOB, bytes not captured
>>    1691   1B @0xc1083822: OOB, bytes not captured
>>    1692   1B @0xc1083823: OOB, bytes not captured
>>    1693   1B @0xc1083824: OOB, bytes not captured
>>    1694   2B @0xc102b862: OOB, bytes not captured
>>    1695   1B @0xc102b864: OOB, bytes not captured
>>    1696   1B @0xc102b865: OOB, bytes not captured
>>    1697   4B @0xc102b866: OOB, bytes not captured
>>    1698   6B @0xc102b86a: OOB, bytes not captured
>>    1699   2B @0xc102b870: OOB, bytes not captured
>>    1700   2B @0xc102b872: OOB, bytes not captured
>>    1701   2B @0xc102b88c: OOB, bytes not captured
>>    1702   2B @0xc102b88e: OOB, bytes not captured
>>    1703   4B @0xc102b8a4: OOB, bytes not captured
>>    1704   2B @0xc102b8a8: OOB, bytes not captured
>>    1705   1B @0xc102b8bd: OOB, bytes not captured
>>    1706   1B @0xc102b8be: OOB, bytes not captured
>>    1707   1B @0xc102b8bf: OOB, bytes not captured
>>    1708   1B @0xc102b8c0: OOB, bytes not captured
>>    1709   1B @0xc102b8c1: OOB, bytes not captured
>>    1710   1B @0xc102b8c2: OOB, bytes not captured
>>    1711   7B @0xc126df79: OOB, bytes not captured
>>    1712   7B @0xc126df80: OOB, bytes not captured
>>    1713   4B @0xc126df87: OOB, bytes not captured
>>    1714   4B @0xc126df8b: OOB, bytes not captured
>>    1715   2B @0xc126df8f: OOB, bytes not captured
>>    1716   4B @0xc126df9d: OOB, bytes not captured
>>    1717   5B @0xc126dfa1: OOB, bytes not captured
>>    1718   1B @0xc1024b08: OOB, bytes not captured
>>    1719   1B @0xc1024b09: OOB, bytes not captured
>>    1720   2B @0xc1024b0a: OOB, bytes not captured
>>    1721   7B @0xc1024b0c: OOB, bytes not captured
>>    1722   2B @0xc1024b13: OOB, bytes not captured
>>    1723   1B @0xc1024b43: OOB, bytes not captured
>>    1724   1B @0xc1024b44: OOB, bytes not captured
>>    1725   1B @0xc1024b45: OOB, bytes not captured
>>    1726   6B @0xc126dfa6: OOB, bytes not captured
>>    1727   4B @0xc126dfac: OOB, bytes not captured
>>    1728   2B @0xc126dfb0: OOB, bytes not captured
>>    1729   2B @0xc126dfbf: OOB, bytes not captured
>>    1730   5B @0xc126dfc1: OOB, bytes not captured
>>    1731   4B @0xc126dfc6: OOB, bytes not captured
>>    1732   6B @0xc126dfca: OOB, bytes not captured
>>    1733   4B @0xc126d82b: OOB, bytes not captured
>>    1734   7B @0xc126d82f: OOB, bytes not captured
>>    1735   7B @0xc126d836: OOB, bytes not captured
>>    1736   2B @0xc126d83d: OOB, bytes not captured
>>    1737   4B @0xc126d83f: OOB, bytes not captured
>>    1738   5B @0xc126d843: OOB, bytes not captured
>>    1739   2B @0xc10262ce: OOB, bytes not captured
>>    1740   2B @0xc10262d0: OOB, bytes not captured
>>    1741   2B @0xc10262d2: OOB, bytes not captured
>>    1742   2B @0xc1001e7b: OOB, bytes not captured
>>    1743   3B @0xc1001e7d: OOB, bytes not captured
>>    1744   3B @0xc1001e80: OOB, bytes not captured
>>    1745   2B @0xc1001e83: OOB, bytes not captured
>>    1746   2B @0xc1001e85: OOB, bytes not captured
>>    1747   2B @0xc126dfd0: OOB, bytes not captured
>>    1748   3B @0xc126dfeb: OOB, bytes not captured
>>    1749   1B @0xc126dfee: OOB, bytes not captured
>>    1750   1B @0xc126dfef: OOB, bytes not captured
>>    1751   1B @0xc126dff0: OOB, bytes not captured
>>    1752   1B @0xc126dff1: OOB, bytes not captured
>>    1753   1B @0xc126dff2: OOB, bytes not captured
>>    1754   2B @0xc126e8a0: OOB, bytes not captured
>>    1755   5B @0xc126e8a2: OOB, bytes not captured
>>    1756   1B @0xc1046f65: OOB, bytes not captured
>>    1757   2B @0xc1046f66: OOB, bytes not captured
>>    1758   2B @0xc1046f68: OOB, bytes not captured
>>    1759   5B @0xc1046f6a: OOB, bytes not captured
>>    1760   1B @0xc1046f30: OOB, bytes not captured
>>    1761   3B @0xc1046f31: OOB, bytes not captured
>>    1762   1B @0xc1046f34: OOB, bytes not captured
>>    1763   2B @0xc1046f35: OOB, bytes not captured
>>    1764   3B @0xc1046f37: OOB, bytes not captured
>>    1765   2B @0xc1046f3a: OOB, bytes not captured
>>    1766   5B @0xc1046f3c: OOB, bytes not captured
>>    1767   1B @0xc1046ecc: OOB, bytes not captured
>>    1768   2B @0xc1046ecd: OOB, bytes not captured
>>    1769   1B @0xc1046ecf: OOB, bytes not captured
>>    1770   2B @0xc1046ed0: OOB, bytes not captured
>>    1771   1B @0xc1046ed2: OOB, bytes not captured
>>    1772   3B @0xc1046ed3: OOB, bytes not captured
>>    1773   2B @0xc1046ed6: OOB, bytes not captured
>>    1774   2B @0xc1046ed8: OOB, bytes not captured
>>    1775   2B @0xc1046eda: OOB, bytes not captured
>>    1776   5B @0xc1046edc: OOB, bytes not captured
>>    1777   2B @0xc1046ee1: OOB, bytes not captured
>>    1778   3B @0xc1046ee3: OOB, bytes not captured
>>    1779   2B @0xc1046ee6: OOB, bytes not captured
>>    1780   2B @0xc1046ee8: OOB, bytes not captured
>>    1781   1B @0xc1046eea: OOB, bytes not captured
>>    1782   1B @0xc1046eeb: OOB, bytes not captured
>>    1783   1B @0xc1046eec: OOB, bytes not captured
>>    1784   1B @0xc1046eed: OOB, bytes not captured
>>    1785   4B @0xc1046f41: OOB, bytes not captured
>>    1786   2B @0xc1046f45: OOB, bytes not captured
>>    1787   2B @0xc1046f47: OOB, bytes not captured
>>    1788   2B @0xc1046f49: OOB, bytes not captured
>>    1789   5B @0xc1046f4b: OOB, bytes not captured
>>    1790   1B @0xc1046746: OOB, bytes not captured
>>    1791   2B @0xc1046747: OOB, bytes not captured
>>    1792   1B @0xc1046749: OOB, bytes not captured
>>    1793   2B @0xc104674a: OOB, bytes not captured
>>    1794   2B @0xc104674c: OOB, bytes not captured
>>    1795   4B @0xc104674e: OOB, bytes not captured
>>    1796   2B @0xc1046752: OOB, bytes not captured
>>    1797   1B @0xc104678e: OOB, bytes not captured
>>    1798   1B @0xc104678f: OOB, bytes not captured
>>    1799   1B @0xc1046790: OOB, bytes not captured
>>    1800   2B @0xc1046f50: OOB, bytes not captured
>>    1801   3B @0xc1046f52: OOB, bytes not captured
>>    1802   3B @0xc1046f55: OOB, bytes not captured
>>    1803   2B @0xc1046f58: OOB, bytes not captured
>>    1804   5B @0xc1046f5a: OOB, bytes not captured
>>    1805   2B @0xc1046f5f: OOB, bytes not captured
>>    1806   1B @0xc1046f61: OOB, bytes not captured
>>    1807   1B @0xc1046f62: OOB, bytes not captured
>>    1808   1B @0xc1046f63: OOB, bytes not captured
>>    1809   1B @0xc1046f64: OOB, bytes not captured
>>    1810   2B @0xc1046f6f: OOB, bytes not captured
>>    1811   2B @0xc1046f71: OOB, bytes not captured
>>    1812   1B @0xc1046f73: OOB, bytes not captured
>>    1813   1B @0xc1046f74: OOB, bytes not captured
>>    1814   6B @0xc126e8a7: OOB, bytes not captured
>>    1815   6B @0xc126e8ad: OOB, bytes not captured
>>    1816   5B @0xc126e8b3: OOB, bytes not captured
>>    1817   2B @0xc126e8b8: OOB, bytes not captured
>>    1818   2B @0xc126e8ba: OOB, bytes not captured
>>    1819   3B @0xc126e8bc: OOB, bytes not captured
>>    1820   4B @0xc126e8bf: OOB, bytes not captured
>>    1821   7B @0xc126e8c3: OOB, bytes not captured
>>    1822   2B @0xc126e8ca: OOB, bytes not captured
>>    1823   3B @0xc126e8d1: OOB, bytes not captured
>>    1824   1B @0xc126e8d4: OOB, bytes not captured
>>    1825   1B @0xc126e8d5: OOB, bytes not captured
>>    1826   1B @0xc126e8d6: OOB, bytes not captured
>>    1827   1B @0xc126e8d7: OOB, bytes not captured
>>    1828   1B @0xc126e8d8: OOB, bytes not captured
>>    1829   2B @0xc10bef52: OOB, bytes not captured
>>    1830   6B @0xc10bef54: OOB, bytes not captured
>>    1831   6B @0xc10bef5a: OOB, bytes not captured
>>    1832   2B @0xc10bef60: OOB, bytes not captured
>>    1833   3B @0xc10bef62: OOB, bytes not captured
>>    1834   2B @0xc10bef65: OOB, bytes not captured
>>    1835   1B @0xc10bef67: OOB, bytes not captured
>>    1836   1B @0xc10bef68: OOB, bytes not captured
>>    1837   1B @0xc10bef69: OOB, bytes not captured
>>    1838   1B @0xc10bf8a6: OOB, bytes not captured
>>    1839   2B @0xc10bf8a7: OOB, bytes not captured
>>    1840   3B @0xc10bf8a9: OOB, bytes not captured
>>    1841   2B @0xc10bf8ac: OOB, bytes not captured
>>    1842   3B @0xc10bf8ae: OOB, bytes not captured
>>    1843   4B @0xc10bf8b1: OOB, bytes not captured
>>    1844   5B @0xc10bf8b5: OOB, bytes not captured
>>    1845   4B @0xc10bf62d: OOB, bytes not captured
>>    1846   4B @0xc10bf631: OOB, bytes not captured
>>    1847   4B @0xc10bf635: OOB, bytes not captured
>>    1848   4B @0xc10bf639: OOB, bytes not captured
>>    1849   2B @0xc10bf63d: OOB, bytes not captured
>>    1850   4B @0xc10bf63f: OOB, bytes not captured
>>    1851   3B @0xc10bf643: OOB, bytes not captured
>>    1852   4B @0xc10bf646: OOB, bytes not captured
>>    1853   4B @0xc10bf64a: OOB, bytes not captured
>>    1854   3B @0xc10bf64e: OOB, bytes not captured
>>    1855   4B @0xc10bf651: OOB, bytes not captured
>>    1856   4B @0xc10bf655: OOB, bytes not captured
>>    1857   3B @0xc10bf659: OOB, bytes not captured
>>    1858   4B @0xc10bf65c: OOB, bytes not captured
>>    1859   3B @0xc10bf660: OOB, bytes not captured
>>    1860   4B @0xc10bf663: OOB, bytes not captured
>>    1861   3B @0xc10bf667: OOB, bytes not captured
>>    1862   8B @0xc10bf66a: OOB, bytes not captured
>>    1863   8B @0xc10bf672: OOB, bytes not captured
>>    1864   4B @0xc10bf67a: OOB, bytes not captured
>>    1865   2B @0xc10bf67e: OOB, bytes not captured
>>    1866   5B @0xc10bf680: OOB, bytes not captured
>>    1867   4B @0xc10bf820: OOB, bytes not captured
>>    1868   6B @0xc10bf824: OOB, bytes not captured
>>    1869   4B @0xc10bf685: OOB, bytes not captured
>>    1870   4B @0xc10bf689: OOB, bytes not captured
>>    1871   4B @0xc10bf68d: OOB, bytes not captured
>>    1872   3B @0xc10bf691: OOB, bytes not captured
>>    1873   4B @0xc10bf694: OOB, bytes not captured
>>    1874   4B @0xc10bf698: OOB, bytes not captured
>>    1875   4B @0xc10bf69c: OOB, bytes not captured
>>    1876   3B @0xc10bf6a0: OOB, bytes not captured
>>    1877   4B @0xc10bf6a3: OOB, bytes not captured
>>    1878   4B @0xc10bf6a7: OOB, bytes not captured
>>    1879   3B @0xc10bf6ab: OOB, bytes not captured
>>    1880   4B @0xc10bf6ae: OOB, bytes not captured
>>    1881   2B @0xc10bf6b2: OOB, bytes not captured
>>    1882   4B @0xc10bf6b4: OOB, bytes not captured
>>    1883   4B @0xc10bf6b8: OOB, bytes not captured
>>    1884   4B @0xc10bf6bc: OOB, bytes not captured
>>    1885   2B @0xc10bf6c0: OOB, bytes not captured
>>    1886   4B @0xc10bf6c2: OOB, bytes not captured
>>    1887   3B @0xc10bf6c6: OOB, bytes not captured
>>    1888   5B @0xc10bf6c9: OOB, bytes not captured
>>    1889   8B @0xc10bf6ce: OOB, bytes not captured
>>    1890   8B @0xc10bf6d6: OOB, bytes not captured
>>    1891   8B @0xc10bf6de: OOB, bytes not captured
>>    1892   3B @0xc10bf6e6: OOB, bytes not captured
>>    1893   2B @0xc10bf6e9: OOB, bytes not captured
>>    1894   4B @0xc10bf703: OOB, bytes not captured
>>    1895   6B @0xc10bf707: OOB, bytes not captured
>>    1896   4B @0xc10bf7bf: OOB, bytes not captured
>>    1897   3B @0xc10bf7c3: OOB, bytes not captured
>>    1898   4B @0xc10bf7c6: OOB, bytes not captured
>>    1899   6B @0xc10bf7ca: OOB, bytes not captured
>>    1900   4B @0xc10bf6f3: OOB, bytes not captured
>>    1901   4B @0xc10bf6f7: OOB, bytes not captured
>>    1902   6B @0xc10bf6fb: OOB, bytes not captured
>>    1903   2B @0xc10bf701: OOB, bytes not captured
>>    1904   4B @0xc10bf703: OOB, bytes not captured
>>    1905   6B @0xc10bf707: OOB, bytes not captured
>>    1906   4B @0xc10bf70d: OOB, bytes not captured
>>    1907   7B @0xc10bf711: OOB, bytes not captured
>>    1908   5B @0xc10bf718: OOB, bytes not captured
>>    1909   2B @0xc10bf71d: OOB, bytes not captured
>>    1910   2B @0xc10bf71f: OOB, bytes not captured
>>    1911   6B @0xc10bf721: OOB, bytes not captured
>>    1912   3B @0xc10bf727: OOB, bytes not captured
>>    1913   2B @0xc10bf72a: OOB, bytes not captured
>>    1914   2B @0xc10bf72c: OOB, bytes not captured
>>    1915   3B @0xc10bf72e: OOB, bytes not captured
>>    1916   2B @0xc10bf731: OOB, bytes not captured
>>    1917   2B @0xc10bf733: OOB, bytes not captured
>>    1918   2B @0xc10bf735: OOB, bytes not captured
>>    1919   2B @0xc10bf737: OOB, bytes not captured
>>    1920   2B @0xc10bf75a: OOB, bytes not captured
>>    1921   2B @0xc10bf75c: OOB, bytes not captured
>>    1922   2B @0xc10bf75e: OOB, bytes not captured
>>    1923   1B @0xc10b8d2a: OOB, bytes not captured
>>    1924   2B @0xc10b8d2b: OOB, bytes not captured
>>    1925   1B @0xc10b8d2d: OOB, bytes not captured
>>    1926   1B @0xc10b8d2e: OOB, bytes not captured
>>    1927   2B @0xc10b8d2f: OOB, bytes not captured
>>    1928   1B @0xc10b8d31: OOB, bytes not captured
>>    1929   3B @0xc10b8d32: OOB, bytes not captured
>>    1930   2B @0xc10b8d35: OOB, bytes not captured
>>    1931   3B @0xc10b8d37: OOB, bytes not captured
>>    1932   6B @0xc10b8d3a: OOB, bytes not captured
>>    1933   2B @0xc10b8d40: OOB, bytes not captured
>>    1934   3B @0xc10b8d4e: OOB, bytes not captured
>>    1935   2B @0xc10b8d51: OOB, bytes not captured
>>    1936   3B @0xc10b8d53: OOB, bytes not captured
>>    1937   3B @0xc10b8d56: OOB, bytes not captured
>>    1938   2B @0xc10b8d59: OOB, bytes not captured
>>    1939   2B @0xc10b8d5b: OOB, bytes not captured
>>    1940   5B @0xc10b8d5d: OOB, bytes not captured
>>    1941   2B @0xc10b8d62: OOB, bytes not captured
>>    1942   3B @0xc10b8d64: OOB, bytes not captured
>>    1943   4B @0xc10b8d67: OOB, bytes not captured
>>    1944   2B @0xc10b8d6b: OOB, bytes not captured
>>    1945   3B @0xc10b8d7f: OOB, bytes not captured
>>    1946   2B @0xc10b8d82: OOB, bytes not captured
>>    1947   2B @0xc10b8d84: OOB, bytes not captured
>>    1948   5B @0xc10b8d86: OOB, bytes not captured
>>    1949   3B @0xc10b8d8b: OOB, bytes not captured
>>    1950   3B @0xc10b8d8e: OOB, bytes not captured
>>    1951   2B @0xc10b8d91: OOB, bytes not captured
>>    1952   2B @0xc10b8d93: OOB, bytes not captured
>>    1953   3B @0xc10b8d95: OOB, bytes not captured
>>    1954   4B @0xc10b8d98: OOB, bytes not captured
>>    1955   3B @0xc10b8d9c: OOB, bytes not captured
>>    1956   2B @0xc10b8d9f: OOB, bytes not captured
>>    1957   1B @0xc10b8da1: OOB, bytes not captured
>>    1958   1B @0xc10b8da2: OOB, bytes not captured
>>    1959   1B @0xc10b8da3: OOB, bytes not captured
>>    1960   1B @0xc10b8da4: OOB, bytes not captured
>>    1961   1B @0xc10b8da5: OOB, bytes not captured
>>    1962   2B @0xc10bf760: OOB, bytes not captured
>>    1963   2B @0xc10bf762: OOB, bytes not captured
>>    1964   8B @0xc10bf769: OOB, bytes not captured
>>    1965   2B @0xc10bf771: OOB, bytes not captured
>>    1966   6B @0xc10bf77a: OOB, bytes not captured
>>    1967   2B @0xc10bf780: OOB, bytes not captured
>>    1968   6B @0xc10bf792: OOB, bytes not captured
>>    1969   2B @0xc10bf798: OOB, bytes not captured
>>    1970   4B @0xc10bf79a: OOB, bytes not captured
>>    1971   2B @0xc10bf79e: OOB, bytes not captured
>>    1972   3B @0xc10bf7aa: OOB, bytes not captured
>>    1973   2B @0xc10bf7ad: OOB, bytes not captured
>>    1974   5B @0xc10bf7d0: OOB, bytes not captured
>>    1975   2B @0xc10bf7d5: OOB, bytes not captured
>>    1976   5B @0xc10bf7e6: OOB, bytes not captured
>>    1977   2B @0xc10bf7eb: OOB, bytes not captured
>>    1978   5B @0xc10bf7fc: OOB, bytes not captured
>>    1979   2B @0xc10bf801: OOB, bytes not captured
>>    1980   5B @0xc10bf812: OOB, bytes not captured
>>    1981   3B @0xc126e0f0: OOB, bytes not captured
>>    1982   5B @0xc126e0f3: OOB, bytes not captured
>>    1983   2B @0xc126e0f8: OOB, bytes not captured
>>    1984   5B @0xc126e0fa: OOB, bytes not captured
>>    1985   3B @0xc126e0ff: OOB, bytes not captured
>>    1986   5B @0xc126e102: OOB, bytes not captured
>>    1987   3B @0xc1141730: OOB, bytes not captured
>>    1988   5B @0xc1141733: OOB, bytes not captured
>>    1989   3B @0xc1141738: OOB, bytes not captured
>>    1990   3B @0xc114173b: OOB, bytes not captured
>>    1991   3B @0xc114173e: OOB, bytes not captured
>>    1992   6B @0xc1141741: OOB, bytes not captured
>>    1993   2B @0xc1141747: OOB, bytes not captured
>>    1994   2B @0xc1141749: OOB, bytes not captured
>>    1995   1B @0xc114174d: OOB, bytes not captured
>>    1996   1B @0xc114174e: OOB, bytes not captured
>>    1997   1B @0xc114174f: OOB, bytes not captured
>>    1998   1B @0xc1141750: OOB, bytes not captured
>>    1999   1B @0xc1141751: OOB, bytes not captured
>>    2000   1B @0xc1141752: OOB, bytes not captured
>>    2001   1B @0xc1003286: OOB, bytes not captured
>>    2002   6B @0xc1003287: OOB, bytes not captured
>>    2003   3B @0xc100328d: OOB, bytes not captured
>>    2004   6B @0xc1003290: OOB, bytes not captured
>>    2005   6B @0xc1003296: OOB, bytes not captured
>>    2006   2B @0xbfba34ca:  0  0             add [eax], al           
>>    2007   2B @0xbfba34cc:  0  0             add [eax], al           
>>    2008   2B @0xbfba34ce:  0  0             add [eax], al           
>>    2009   2B @0xbfba34d0:  0  0             add [eax], al           
>>    2010   2B @0xbfba34d2:  0  0             add [eax], al           
>>    2011   2B @0xbfba34d4:  0  0             add [eax], al           
>>    2012   2B @0xbfba34d6:  0  0             add [eax], al           
>>    2013   2B @0xbfba34d8:  0  0             add [eax], al           
>>    2014   2B @0xbfba34da:  0  0             add [eax], al           
>>    2015   2B @0xbfba34dc:  0  0             add [eax], al           
>>    2016   2B @0xbfba34de:  0  0             add [eax], al           
>>    2017   2B @0xbfba34e0:  0  0             add [eax], al           
>>    2018   2B @0xbfba34e2:  0  0             add [eax], al           
>>    2019   2B @0xbfba34e4:  0  0             add [eax], al           
>>    2020   2B @0xbfba34e6:  0  0             add [eax], al           
>>    2021   2B @0xbfba34e8:  0  0             add [eax], al           
>>    2022   2B @0xbfba34ea:  0  0             add [eax], al           
>>    2023   2B @0xbfba34ec:  0  0             add [eax], al           
>>    2024   2B @0xbfba34ee:  0  0             add [eax], al           
>>    2025   2B @0xbfba34f0:  0  0             add [eax], al           
>>    2026   2B @0xbfba34f2:  0  0             add [eax], al           
>>    2027   2B @0xbfba34f4:  0  0             add [eax], al           
>>    2028   2B @0xbfba34f6:  0  0             add [eax], al           
>>    2029   2B @0xbfba34f8:  0  0             add [eax], al           
>>    2030   2B @0xbfba34fa:  0  0             add [eax], al           
>>    2031   2B @0xbfba34fc:  0  0             add [eax], al           
>>    2032   2B @0xbfba34fe:  0  0             add [eax], al           
>>    2033   2B @0xbfba3500:  0  0             add [eax], al           
>>    2034   2B @0xbfba3502:  0  0             add [eax], al           
>>    2035   2B @0xbfba3504:  0  0             add [eax], al           
>>    2036   2B @0xbfba3506:  0  0             add [eax], al           
>>    2037   2B @0xbfba3508:  0  0             add [eax], al           
>>    2038   2B @0xbfba350a:  0  0             add [eax], al           
>>    2039   2B @0xbfba350c:  0  0             add [eax], al           
>>    2040   2B @0xbfba350e:  0  0             add [eax], al           
>>    2041   2B @0xbfba3510:  0  0             add [eax], al           
>>    2042   2B @0xbfba3512:  0  0             add [eax], al           
>>    2043   2B @0xbfba3514:  0  0             add [eax], al           
>>    2044   2B @0xbfba3516:  0  0             add [eax], al           
>>    2045   2B @0xbfba3518:  0  0             add [eax], al           
>>    2046   2B @0xbfba351a:  0  0             add [eax], al           
>>    2047   2B @0xbfba351c:  0  0             add [eax], al           
>>    2048   2B @0xbfba351e:  0  0             add [eax], al           
>>    2049   2B @0xbfba3520:  0  0             add [eax], al           
>>    2050   2B @0xbfba3522:  0  0             add [eax], al           
>>    2051   2B @0xbfba3524:  0  0             add [eax], al           
>>    2052   2B @0xbfba3526:  0  0             add [eax], al           
>>    2053   2B @0xbfba3528:  0  0             add [eax], al           
>>    2054   2B @0xbfba352a:  0  0             add [eax], al           
>>    2055   2B @0xbfba352c:  0  0             add [eax], al           
>>    2056   2B @0xbfba352e:  0  0             add [eax], al           
>>    2057   2B @0xbfba3530:  0  0             add [eax], al           
>>    2058   2B @0xbfba3532:  0  0             add [eax], al           
>>    2059   2B @0xbfba3534:  0  0             add [eax], al           
>>    2060   2B @0xbfba3536:  0  0             add [eax], al           
>>    2061   2B @0xbfba3538:  0  0             add [eax], al           
>>    2062   2B @0xbfba353a:  0  0             add [eax], al           
>>    2063   2B @0xbfba353c:  0  0             add [eax], al           
>>    2064   2B @0xbfba353e:  0  0             add [eax], al           
>>    2065   2B @0xbfba3540:  0  0             add [eax], al           
>>    2066   2B @0xbfba3542:  0  0             add [eax], al           
>>    2067   2B @0xbfba3544:  0  0             add [eax], al           
>>    2068   2B @0xbfba3546:  0  0             add [eax], al           
>>    2069   2B @0xbfba3548:  0  0             add [eax], al           
>>    2070   2B @0xbfba354a:  0  0             add [eax], al           
>>    2071   2B @0xbfba354c:  0  0             add [eax], al           
>>    2072   2B @0xbfba354e:  0  0             add [eax], al           
>>    2073   2B @0xbfba3550:  0  0             add [eax], al           
>>    2074   2B @0xbfba3552:  0  0             add [eax], al           
>>    2075   2B @0xbfba3554:  0  0             add [eax], al           
>>    2076   2B @0xbfba3556:  0  0             add [eax], al           
>>    2077   2B @0xbfba3558:  0  0             add [eax], al           
>>    2078   2B @0xbfba355a:  0  0             add [eax], al           
>>    2079   2B @0xbfba355c:  0  0             add [eax], al           
>>    2080   2B @0xbfba355e:  0  0             add [eax], al           
>>    2081   2B @0xbfba3560:  0  0             add [eax], al           
>>    2082   2B @0xbfba3562:  0  0             add [eax], al           
>>    2083   2B @0xbfba3564:  0  0             add [eax], al           
>>    2084   2B @0xbfba3566:  0  0             add [eax], al           
>>    2085   2B @0xbfba3568:  0  0             add [eax], al           
>>    2086   2B @0xbfba356a:  0  0             add [eax], al           
>>    2087   2B @0xbfba356c:  0  0             add [eax], al           
>>    2088   2B @0xbfba356e:  0  0             add [eax], al           
>>    2089   2B @0xbfba3570:  0  0             add [eax], al           
>>    2090   2B @0xbfba3572:  0  0             add [eax], al           
>>    2091   2B @0xbfba3574:  0  0             add [eax], al           
>>    2092   2B @0xbfba3576:  0  0             add [eax], al           
>>    2093   2B @0xbfba3578:  0  0             add [eax], al           
>>    2094   2B @0xbfba357a:  0  0             add [eax], al           
>>    2095   2B @0xbfba357c:  0  0             add [eax], al           
>>    2096   2B @0xbfba357e:  0  0             add [eax], al           
>>    2097   2B @0xbfba3580: eb 13             jmp 0x15                
>>    2098   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    2099   1B @0xbfba3582: 59                pop ecx                 
>>    2100   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    2101   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    2102   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    2103   1B @0xbfba3589: 43                inc ebx                 
>>    2104   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    2105   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    2106   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (499/504) = 0.990079
>>    Mem_map start_addr: 0xbfba33a2, length: 1024B, exec'ed bytes: 499, range: 504B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33a0     0000 00000000 00000000 00000000    ..............
0xbfba33b0 00000000 00000000 00000000 00000000  ................
0xbfba33c0 00000000 00000000 00000000 00000000  ................
0xbfba33d0 00000000 00000000 00000000 00000000  ................
0xbfba33e0 00000000 00000000 00000000 00000000  ................
0xbfba33f0 00000000 00000000 00000000 00000000  ................
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 1
>>    Printing success 2
>> Success densities, overlay: 0.99004; avg: 0.99004
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33a4:  0  0             add [eax], al           
>>      2   2B @0xbfba33a6:  0  0             add [eax], al           
>>      3   2B @0xbfba33a8:  0  0             add [eax], al           
>>      4   2B @0xbfba33aa:  0  0             add [eax], al           
>>      5   2B @0xbfba33ac:  0  0             add [eax], al           
>>      6   2B @0xbfba33ae:  0  0             add [eax], al           
>>      7   2B @0xbfba33b0:  0  0             add [eax], al           
>>      8   2B @0xbfba33b2:  0  0             add [eax], al           
>>      9   2B @0xbfba33b4:  0  0             add [eax], al           
>>     10   2B @0xbfba33b6:  0  0             add [eax], al           
>>     11   2B @0xbfba33b8:  0  0             add [eax], al           
>>     12   2B @0xbfba33ba:  0  0             add [eax], al           
>>     13   2B @0xbfba33bc:  0  0             add [eax], al           
>>     14   2B @0xbfba33be:  0  0             add [eax], al           
>>     15   2B @0xbfba33c0:  0  0             add [eax], al           
>>     16   2B @0xbfba33c2:  0  0             add [eax], al           
>>     17   2B @0xbfba33c4:  0  0             add [eax], al           
>>     18   2B @0xbfba33c6:  0  0             add [eax], al           
>>     19   2B @0xbfba33c8:  0  0             add [eax], al           
>>     20   2B @0xbfba33ca:  0  0             add [eax], al           
>>     21   2B @0xbfba33cc:  0  0             add [eax], al           
>>     22   2B @0xbfba33ce:  0  0             add [eax], al           
>>     23   2B @0xbfba33d0:  0  0             add [eax], al           
>>     24   2B @0xbfba33d2:  0  0             add [eax], al           
>>     25   2B @0xbfba33d4:  0  0             add [eax], al           
>>     26   2B @0xbfba33d6:  0  0             add [eax], al           
>>     27   2B @0xbfba33d8:  0  0             add [eax], al           
>>     28   2B @0xbfba33da:  0  0             add [eax], al           
>>     29   2B @0xbfba33dc:  0  0             add [eax], al           
>>     30   2B @0xbfba33de:  0  0             add [eax], al           
>>     31   2B @0xbfba33e0:  0  0             add [eax], al           
>>     32   2B @0xbfba33e2:  0  0             add [eax], al           
>>     33   2B @0xbfba33e4:  0  0             add [eax], al           
>>     34   2B @0xbfba33e6:  0  0             add [eax], al           
>>     35   2B @0xbfba33e8:  0  0             add [eax], al           
>>     36   2B @0xbfba33ea:  0  0             add [eax], al           
>>     37   2B @0xbfba33ec:  0  0             add [eax], al           
>>     38   2B @0xbfba33ee:  0  0             add [eax], al           
>>     39   2B @0xbfba33f0:  0  0             add [eax], al           
>>     40   2B @0xbfba33f2:  0  0             add [eax], al           
>>     41   2B @0xbfba33f4:  0  0             add [eax], al           
>>     42   2B @0xbfba33f6:  0  0             add [eax], al           
>>     43   2B @0xbfba33f8:  0  0             add [eax], al           
>>     44   2B @0xbfba33fa:  0  0             add [eax], al           
>>     45   2B @0xbfba33fc:  0  0             add [eax], al           
>>     46   2B @0xbfba33fe:  0  0             add [eax], al           
>>     47   2B @0xbfba3400:  0  0             add [eax], al           
>>     48   2B @0xbfba3402:  0  0             add [eax], al           
>>     49   2B @0xbfba3404:  0  0             add [eax], al           
>>     50   2B @0xbfba3406:  0  0             add [eax], al           
>>     51   2B @0xbfba3408:  0  0             add [eax], al           
>>     52   2B @0xbfba340a:  0  0             add [eax], al           
>>     53   2B @0xbfba340c:  0  0             add [eax], al           
>>     54   2B @0xbfba340e:  0  0             add [eax], al           
>>     55   2B @0xbfba3410:  0  0             add [eax], al           
>>     56   2B @0xbfba3412:  0  0             add [eax], al           
>>     57   2B @0xbfba3414:  0  0             add [eax], al           
>>     58   2B @0xbfba3416:  0  0             add [eax], al           
>>     59   2B @0xbfba3418:  0  0             add [eax], al           
>>     60   2B @0xbfba341a:  0  0             add [eax], al           
>>     61   2B @0xbfba341c:  0  0             add [eax], al           
>>     62   2B @0xbfba341e:  0  0             add [eax], al           
>>     63   2B @0xbfba3420:  0  0             add [eax], al           
>>     64   2B @0xbfba3422:  0  0             add [eax], al           
>>     65   2B @0xbfba3424:  0  0             add [eax], al           
>>     66   2B @0xbfba3426:  0  0             add [eax], al           
>>     67   2B @0xbfba3428:  0  0             add [eax], al           
>>     68   2B @0xbfba342a:  0  0             add [eax], al           
>>     69   2B @0xbfba342c:  0  0             add [eax], al           
>>     70   2B @0xbfba342e:  0  0             add [eax], al           
>>     71   2B @0xbfba3430:  0  0             add [eax], al           
>>     72   2B @0xbfba3432:  0  0             add [eax], al           
>>     73   2B @0xbfba3434:  0  0             add [eax], al           
>>     74   2B @0xbfba3436:  0  0             add [eax], al           
>>     75   2B @0xbfba3438:  0  0             add [eax], al           
>>     76   2B @0xbfba343a:  0  0             add [eax], al           
>>     77   2B @0xbfba343c:  0  0             add [eax], al           
>>     78   2B @0xbfba343e:  0  0             add [eax], al           
>>     79   2B @0xbfba3440:  0  0             add [eax], al           
>>     80   2B @0xbfba3442:  0  0             add [eax], al           
>>     81   2B @0xbfba3444:  0  0             add [eax], al           
>>     82   2B @0xbfba3446:  0  0             add [eax], al           
>>     83   2B @0xbfba3448:  0  0             add [eax], al           
>>     84   2B @0xbfba344a:  0  0             add [eax], al           
>>     85   2B @0xbfba344c:  0  0             add [eax], al           
>>     86   2B @0xbfba344e:  0  0             add [eax], al           
>>     87   2B @0xbfba3450:  0  0             add [eax], al           
>>     88   2B @0xbfba3452:  0  0             add [eax], al           
>>     89   2B @0xbfba3454:  0  0             add [eax], al           
>>     90   2B @0xbfba3456:  0  0             add [eax], al           
>>     91   2B @0xbfba3458:  0  0             add [eax], al           
>>     92   2B @0xbfba345a:  0  0             add [eax], al           
>>     93   2B @0xbfba345c:  0  0             add [eax], al           
>>     94   2B @0xbfba345e:  0  0             add [eax], al           
>>     95   2B @0xbfba3460:  0  0             add [eax], al           
>>     96   2B @0xbfba3462:  0  0             add [eax], al           
>>     97   2B @0xbfba3464:  0  0             add [eax], al           
>>     98   2B @0xbfba3466:  0  0             add [eax], al           
>>     99   2B @0xbfba3468:  0  0             add [eax], al           
>>    100   2B @0xbfba346a:  0  0             add [eax], al           
>>    101   2B @0xbfba346c:  0  0             add [eax], al           
>>    102   2B @0xbfba346e:  0  0             add [eax], al           
>>    103   2B @0xbfba3470:  0  0             add [eax], al           
>>    104   2B @0xbfba3472:  0  0             add [eax], al           
>>    105   2B @0xbfba3474:  0  0             add [eax], al           
>>    106   2B @0xbfba3476:  0  0             add [eax], al           
>>    107   2B @0xbfba3478:  0  0             add [eax], al           
>>    108   2B @0xbfba347a:  0  0             add [eax], al           
>>    109   2B @0xbfba347c:  0  0             add [eax], al           
>>    110   2B @0xbfba347e:  0  0             add [eax], al           
>>    111   2B @0xbfba3480:  0  0             add [eax], al           
>>    112   2B @0xbfba3482:  0  0             add [eax], al           
>>    113   2B @0xbfba3484:  0  0             add [eax], al           
>>    114   2B @0xbfba3486:  0  0             add [eax], al           
>>    115   2B @0xbfba3488:  0  0             add [eax], al           
>>    116   2B @0xbfba348a:  0  0             add [eax], al           
>>    117   2B @0xbfba348c:  0  0             add [eax], al           
>>    118   2B @0xbfba348e:  0  0             add [eax], al           
>>    119   2B @0xbfba3490:  0  0             add [eax], al           
>>    120   2B @0xbfba3492:  0  0             add [eax], al           
>>    121   2B @0xbfba3494:  0  0             add [eax], al           
>>    122   2B @0xbfba3496:  0  0             add [eax], al           
>>    123   2B @0xbfba3498:  0  0             add [eax], al           
>>    124   2B @0xbfba349a:  0  0             add [eax], al           
>>    125   2B @0xbfba349c:  0  0             add [eax], al           
>>    126   2B @0xbfba349e:  0  0             add [eax], al           
>>    127   2B @0xbfba34a0:  0  0             add [eax], al           
>>    128   2B @0xbfba34a2:  0  0             add [eax], al           
>>    129   2B @0xbfba34a4:  0  0             add [eax], al           
>>    130   2B @0xbfba34a6:  0  0             add [eax], al           
>>    131   2B @0xbfba34a8:  0  0             add [eax], al           
>>    132   2B @0xbfba34aa:  0  0             add [eax], al           
>>    133   2B @0xbfba34ac:  0  0             add [eax], al           
>>    134   2B @0xbfba34ae:  0  0             add [eax], al           
>>    135   2B @0xbfba34b0:  0  0             add [eax], al           
>>    136   2B @0xbfba34b2:  0  0             add [eax], al           
>>    137   2B @0xbfba34b4:  0  0             add [eax], al           
>>    138   2B @0xbfba34b6:  0  0             add [eax], al           
>>    139   2B @0xbfba34b8:  0  0             add [eax], al           
>>    140   2B @0xbfba34ba:  0  0             add [eax], al           
>>    141   2B @0xbfba34bc:  0  0             add [eax], al           
>>    142   2B @0xbfba34be:  0  0             add [eax], al           
>>    143   2B @0xbfba34c0:  0  0             add [eax], al           
>>    144   2B @0xbfba34c2:  0  0             add [eax], al           
>>    145   2B @0xbfba34c4:  0  0             add [eax], al           
>>    146   2B @0xbfba34c6:  0  0             add [eax], al           
>>    147   2B @0xbfba34c8:  0  0             add [eax], al           
>>    148   2B @0xbfba34ca:  0  0             add [eax], al           
>>    149   2B @0xbfba34cc:  0  0             add [eax], al           
>>    150   2B @0xbfba34ce:  0  0             add [eax], al           
>>    151   2B @0xbfba34d0:  0  0             add [eax], al           
>>    152   2B @0xbfba34d2:  0  0             add [eax], al           
>>    153   2B @0xbfba34d4:  0  0             add [eax], al           
>>    154   2B @0xbfba34d6:  0  0             add [eax], al           
>>    155   2B @0xbfba34d8:  0  0             add [eax], al           
>>    156   2B @0xbfba34da:  0  0             add [eax], al           
>>    157   2B @0xbfba34dc:  0  0             add [eax], al           
>>    158   2B @0xbfba34de:  0  0             add [eax], al           
>>    159   2B @0xbfba34e0:  0  0             add [eax], al           
>>    160   2B @0xbfba34e2:  0  0             add [eax], al           
>>    161   2B @0xbfba34e4:  0  0             add [eax], al           
>>    162   2B @0xbfba34e6:  0  0             add [eax], al           
>>    163   2B @0xbfba34e8:  0  0             add [eax], al           
>>    164   2B @0xbfba34ea:  0  0             add [eax], al           
>>    165   2B @0xbfba34ec:  0  0             add [eax], al           
>>    166   2B @0xbfba34ee:  0  0             add [eax], al           
>>    167   2B @0xbfba34f0:  0  0             add [eax], al           
>>    168   2B @0xbfba34f2:  0  0             add [eax], al           
>>    169   2B @0xbfba34f4:  0  0             add [eax], al           
>>    170   2B @0xbfba34f6:  0  0             add [eax], al           
>>    171   2B @0xbfba34f8:  0  0             add [eax], al           
>>    172   2B @0xbfba34fa:  0  0             add [eax], al           
>>    173   2B @0xbfba34fc:  0  0             add [eax], al           
>>    174   2B @0xbfba34fe:  0  0             add [eax], al           
>>    175   2B @0xbfba3500:  0  0             add [eax], al           
>>    176   2B @0xbfba3502:  0  0             add [eax], al           
>>    177   2B @0xbfba3504:  0  0             add [eax], al           
>>    178   2B @0xbfba3506:  0  0             add [eax], al           
>>    179   2B @0xbfba3508:  0  0             add [eax], al           
>>    180   2B @0xbfba350a:  0  0             add [eax], al           
>>    181   2B @0xbfba350c:  0  0             add [eax], al           
>>    182   2B @0xbfba350e:  0  0             add [eax], al           
>>    183   2B @0xbfba3510:  0  0             add [eax], al           
>>    184   2B @0xbfba3512:  0  0             add [eax], al           
>>    185   2B @0xbfba3514:  0  0             add [eax], al           
>>    186   2B @0xbfba3516:  0  0             add [eax], al           
>>    187   2B @0xbfba3518:  0  0             add [eax], al           
>>    188   2B @0xbfba351a:  0  0             add [eax], al           
>>    189   2B @0xbfba351c:  0  0             add [eax], al           
>>    190   2B @0xbfba351e:  0  0             add [eax], al           
>>    191   2B @0xbfba3520:  0  0             add [eax], al           
>>    192   2B @0xbfba3522:  0  0             add [eax], al           
>>    193   2B @0xbfba3524:  0  0             add [eax], al           
>>    194   2B @0xbfba3526:  0  0             add [eax], al           
>>    195   2B @0xbfba3528:  0  0             add [eax], al           
>>    196   2B @0xbfba352a:  0  0             add [eax], al           
>>    197   2B @0xbfba352c:  0  0             add [eax], al           
>>    198   2B @0xbfba352e:  0  0             add [eax], al           
>>    199   2B @0xbfba3530:  0  0             add [eax], al           
>>    200   2B @0xbfba3532:  0  0             add [eax], al           
>>    201   2B @0xbfba3534:  0  0             add [eax], al           
>>    202   2B @0xbfba3536:  0  0             add [eax], al           
>>    203   2B @0xbfba3538:  0  0             add [eax], al           
>>    204   2B @0xbfba353a:  0  0             add [eax], al           
>>    205   2B @0xbfba353c:  0  0             add [eax], al           
>>    206   2B @0xbfba353e:  0  0             add [eax], al           
>>    207   2B @0xbfba3540:  0  0             add [eax], al           
>>    208   2B @0xbfba3542:  0  0             add [eax], al           
>>    209   2B @0xbfba3544:  0  0             add [eax], al           
>>    210   2B @0xbfba3546:  0  0             add [eax], al           
>>    211   2B @0xbfba3548:  0  0             add [eax], al           
>>    212   2B @0xbfba354a:  0  0             add [eax], al           
>>    213   2B @0xbfba354c:  0  0             add [eax], al           
>>    214   2B @0xbfba354e:  0  0             add [eax], al           
>>    215   2B @0xbfba3550:  0  0             add [eax], al           
>>    216   2B @0xbfba3552:  0  0             add [eax], al           
>>    217   2B @0xbfba3554:  0  0             add [eax], al           
>>    218   2B @0xbfba3556:  0  0             add [eax], al           
>>    219   2B @0xbfba3558:  0  0             add [eax], al           
>>    220   2B @0xbfba355a:  0  0             add [eax], al           
>>    221   2B @0xbfba355c:  0  0             add [eax], al           
>>    222   2B @0xbfba355e:  0  0             add [eax], al           
>>    223   2B @0xbfba3560:  0  0             add [eax], al           
>>    224   2B @0xbfba3562:  0  0             add [eax], al           
>>    225   2B @0xbfba3564:  0  0             add [eax], al           
>>    226   2B @0xbfba3566:  0  0             add [eax], al           
>>    227   2B @0xbfba3568:  0  0             add [eax], al           
>>    228   2B @0xbfba356a:  0  0             add [eax], al           
>>    229   2B @0xbfba356c:  0  0             add [eax], al           
>>    230   2B @0xbfba356e:  0  0             add [eax], al           
>>    231   2B @0xbfba3570:  0  0             add [eax], al           
>>    232   2B @0xbfba3572:  0  0             add [eax], al           
>>    233   2B @0xbfba3574:  0  0             add [eax], al           
>>    234   2B @0xbfba3576:  0  0             add [eax], al           
>>    235   2B @0xbfba3578:  0  0             add [eax], al           
>>    236   2B @0xbfba357a:  0  0             add [eax], al           
>>    237   2B @0xbfba357c:  0  0             add [eax], al           
>>    238   2B @0xbfba357e:  0  0             add [eax], al           
>>    239   2B @0xbfba3580: eb 13             jmp 0x15                
>>    240   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    241   2B @0xc113c60c: OOB, bytes not captured
>>    242   2B @0xc113c60e: OOB, bytes not captured
>>    243   6B @0xc113c610: OOB, bytes not captured
>>    244   6B @0xc113c616: OOB, bytes not captured
>>    245   2B @0xc113c6bf: OOB, bytes not captured
>>    246   3B @0xc10b657b: OOB, bytes not captured
>>    247   2B @0xc10b657e: OOB, bytes not captured
>>    248   3B @0xc10b6580: OOB, bytes not captured
>>    249   2B @0xc10b6583: OOB, bytes not captured
>>    250   3B @0xc10b6585: OOB, bytes not captured
>>    251   1B @0xc10b6588: OOB, bytes not captured
>>    252   1B @0xc10b6589: OOB, bytes not captured
>>    253   1B @0xc10b658a: OOB, bytes not captured
>>    254   1B @0xc10b658b: OOB, bytes not captured
>>    255   1B @0xc10b658c: OOB, bytes not captured
>>    256   3B @0xc10b6a35: OOB, bytes not captured
>>    257   1B @0xc10b6a38: OOB, bytes not captured
>>    258   1B @0xc10b6a39: OOB, bytes not captured
>>    259   1B @0xbfba3582: 59                pop ecx                 
>>    260   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    261   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    262   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    263   1B @0xbfba3589: 43                inc ebx                 
>>    264   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    265   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    266   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (497/502) = 0.99004
>>    Mem_map start_addr: 0xbfba33a4, length: 1024B, exec'ed bytes: 497, range: 502B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33a0          00000000 00000000 00000000      ............
0xbfba33b0 00000000 00000000 00000000 00000000  ................
0xbfba33c0 00000000 00000000 00000000 00000000  ................
0xbfba33d0 00000000 00000000 00000000 00000000  ................
0xbfba33e0 00000000 00000000 00000000 00000000  ................
0xbfba33f0 00000000 00000000 00000000 00000000  ................
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 2
>>    Printing success 3
>> Success densities, overlay: 0.988038; avg: 0.988038
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33f8:  0  0             add [eax], al           
>>      2   2B @0xbfba33fa:  0  0             add [eax], al           
>>      3   2B @0xbfba33fc:  0  0             add [eax], al           
>>      4   2B @0xbfba33fe:  0  0             add [eax], al           
>>      5   2B @0xbfba3400:  0  0             add [eax], al           
>>      6   2B @0xbfba3402:  0  0             add [eax], al           
>>      7   2B @0xbfba3404:  0  0             add [eax], al           
>>      8   2B @0xbfba3406:  0  0             add [eax], al           
>>      9   2B @0xbfba3408:  0  0             add [eax], al           
>>     10   2B @0xbfba340a:  0  0             add [eax], al           
>>     11   2B @0xbfba340c:  0  0             add [eax], al           
>>     12   2B @0xbfba340e:  0  0             add [eax], al           
>>     13   2B @0xbfba3410:  0  0             add [eax], al           
>>     14   2B @0xbfba3412:  0  0             add [eax], al           
>>     15   2B @0xbfba3414:  0  0             add [eax], al           
>>     16   2B @0xbfba3416:  0  0             add [eax], al           
>>     17   2B @0xbfba3418:  0  0             add [eax], al           
>>     18   2B @0xbfba341a:  0  0             add [eax], al           
>>     19   2B @0xbfba341c:  0  0             add [eax], al           
>>     20   2B @0xbfba341e:  0  0             add [eax], al           
>>     21   2B @0xbfba3420:  0  0             add [eax], al           
>>     22   2B @0xbfba3422:  0  0             add [eax], al           
>>     23   2B @0xbfba3424:  0  0             add [eax], al           
>>     24   2B @0xbfba3426:  0  0             add [eax], al           
>>     25   2B @0xbfba3428:  0  0             add [eax], al           
>>     26   2B @0xbfba342a:  0  0             add [eax], al           
>>     27   2B @0xbfba342c:  0  0             add [eax], al           
>>     28   2B @0xbfba342e:  0  0             add [eax], al           
>>     29   2B @0xbfba3430:  0  0             add [eax], al           
>>     30   2B @0xbfba3432:  0  0             add [eax], al           
>>     31   2B @0xbfba3434:  0  0             add [eax], al           
>>     32   2B @0xbfba3436:  0  0             add [eax], al           
>>     33   2B @0xbfba3438:  0  0             add [eax], al           
>>     34   2B @0xbfba343a:  0  0             add [eax], al           
>>     35   2B @0xbfba343c:  0  0             add [eax], al           
>>     36   2B @0xbfba343e:  0  0             add [eax], al           
>>     37   2B @0xbfba3440:  0  0             add [eax], al           
>>     38   3B @0xc112cd1a: OOB, bytes not captured
>>     39   2B @0xc112cd1d: OOB, bytes not captured
>>     40   5B @0xc112cd1f: OOB, bytes not captured
>>     41   3B @0xc113e1bf: OOB, bytes not captured
>>     42   3B @0xc113e1c2: OOB, bytes not captured
>>     43   2B @0xc113e1c5: OOB, bytes not captured
>>     44   3B @0xc113e1c7: OOB, bytes not captured
>>     45   2B @0xc113e1ca: OOB, bytes not captured
>>     46   3B @0xc113e1cc: OOB, bytes not captured
>>     47   2B @0xc113e1cf: OOB, bytes not captured
>>     48   1B @0xc113e1d1: OOB, bytes not captured
>>     49   2B @0xc112cd24: OOB, bytes not captured
>>     50   2B @0xc112cd26: OOB, bytes not captured
>>     51   3B @0xc112cd28: OOB, bytes not captured
>>     52   2B @0xc112cd2b: OOB, bytes not captured
>>     53   2B @0xc112cd2d: OOB, bytes not captured
>>     54   2B @0xc112cd2f: OOB, bytes not captured
>>     55   2B @0xc1025930: OOB, bytes not captured
>>     56   2B @0xc1025932: OOB, bytes not captured
>>     57   2B @0xc1025934: OOB, bytes not captured
>>     58   2B @0xc1025936: OOB, bytes not captured
>>     59   4B @0xc1025938: OOB, bytes not captured
>>     60   4B @0xc102593c: OOB, bytes not captured
>>     61   3B @0xc1025940: OOB, bytes not captured
>>     62   2B @0xc1025943: OOB, bytes not captured
>>     63   2B @0xbfba3442:  0  0             add [eax], al           
>>     64   2B @0xbfba3444:  0  0             add [eax], al           
>>     65   2B @0xbfba3446:  0  0             add [eax], al           
>>     66   2B @0xbfba3448:  0  0             add [eax], al           
>>     67   2B @0xbfba344a:  0  0             add [eax], al           
>>     68   2B @0xbfba344c:  0  0             add [eax], al           
>>     69   2B @0xbfba344e:  0  0             add [eax], al           
>>     70   2B @0xbfba3450:  0  0             add [eax], al           
>>     71   2B @0xbfba3452:  0  0             add [eax], al           
>>     72   2B @0xbfba3454:  0  0             add [eax], al           
>>     73   2B @0xbfba3456:  0  0             add [eax], al           
>>     74   2B @0xbfba3458:  0  0             add [eax], al           
>>     75   2B @0xbfba345a:  0  0             add [eax], al           
>>     76   2B @0xbfba345c:  0  0             add [eax], al           
>>     77   2B @0xbfba345e:  0  0             add [eax], al           
>>     78   2B @0xbfba3460:  0  0             add [eax], al           
>>     79   2B @0xbfba3462:  0  0             add [eax], al           
>>     80   2B @0xbfba3464:  0  0             add [eax], al           
>>     81   2B @0xbfba3466:  0  0             add [eax], al           
>>     82   2B @0xbfba3468:  0  0             add [eax], al           
>>     83   2B @0xbfba346a:  0  0             add [eax], al           
>>     84   2B @0xbfba346c:  0  0             add [eax], al           
>>     85   2B @0xbfba346e:  0  0             add [eax], al           
>>     86   2B @0xbfba3470:  0  0             add [eax], al           
>>     87   2B @0xbfba3472:  0  0             add [eax], al           
>>     88   2B @0xbfba3474:  0  0             add [eax], al           
>>     89   2B @0xbfba3476:  0  0             add [eax], al           
>>     90   2B @0xbfba3478:  0  0             add [eax], al           
>>     91   2B @0xbfba347a:  0  0             add [eax], al           
>>     92   2B @0xbfba347c:  0  0             add [eax], al           
>>     93   2B @0xbfba347e:  0  0             add [eax], al           
>>     94   2B @0xbfba3480:  0  0             add [eax], al           
>>     95   2B @0xbfba3482:  0  0             add [eax], al           
>>     96   2B @0xbfba3484:  0  0             add [eax], al           
>>     97   2B @0xbfba3486:  0  0             add [eax], al           
>>     98   2B @0xbfba3488:  0  0             add [eax], al           
>>     99   2B @0xbfba348a:  0  0             add [eax], al           
>>    100   2B @0xbfba348c:  0  0             add [eax], al           
>>    101   2B @0xbfba348e:  0  0             add [eax], al           
>>    102   2B @0xbfba3490:  0  0             add [eax], al           
>>    103   2B @0xbfba3492:  0  0             add [eax], al           
>>    104   2B @0xbfba3494:  0  0             add [eax], al           
>>    105   2B @0xbfba3496:  0  0             add [eax], al           
>>    106   2B @0xbfba3498:  0  0             add [eax], al           
>>    107   2B @0xbfba349a:  0  0             add [eax], al           
>>    108   2B @0xbfba349c:  0  0             add [eax], al           
>>    109   2B @0xbfba349e:  0  0             add [eax], al           
>>    110   2B @0xbfba34a0:  0  0             add [eax], al           
>>    111   2B @0xbfba34a2:  0  0             add [eax], al           
>>    112   2B @0xbfba34a4:  0  0             add [eax], al           
>>    113   2B @0xbfba34a6:  0  0             add [eax], al           
>>    114   2B @0xbfba34a8:  0  0             add [eax], al           
>>    115   2B @0xbfba34aa:  0  0             add [eax], al           
>>    116   2B @0xbfba34ac:  0  0             add [eax], al           
>>    117   2B @0xbfba34ae:  0  0             add [eax], al           
>>    118   2B @0xbfba34b0:  0  0             add [eax], al           
>>    119   2B @0xbfba34b2:  0  0             add [eax], al           
>>    120   2B @0xbfba34b4:  0  0             add [eax], al           
>>    121   2B @0xbfba34b6:  0  0             add [eax], al           
>>    122   2B @0xbfba34b8:  0  0             add [eax], al           
>>    123   2B @0xbfba34ba:  0  0             add [eax], al           
>>    124   2B @0xbfba34bc:  0  0             add [eax], al           
>>    125   2B @0xbfba34be:  0  0             add [eax], al           
>>    126   2B @0xbfba34c0:  0  0             add [eax], al           
>>    127   2B @0xbfba34c2:  0  0             add [eax], al           
>>    128   2B @0xbfba34c4:  0  0             add [eax], al           
>>    129   2B @0xbfba34c6:  0  0             add [eax], al           
>>    130   2B @0xbfba34c8:  0  0             add [eax], al           
>>    131   2B @0xbfba34ca:  0  0             add [eax], al           
>>    132   2B @0xbfba34cc:  0  0             add [eax], al           
>>    133   2B @0xbfba34ce:  0  0             add [eax], al           
>>    134   2B @0xbfba34d0:  0  0             add [eax], al           
>>    135   2B @0xbfba34d2:  0  0             add [eax], al           
>>    136   2B @0xbfba34d4:  0  0             add [eax], al           
>>    137   2B @0xbfba34d6:  0  0             add [eax], al           
>>    138   2B @0xbfba34d8:  0  0             add [eax], al           
>>    139   2B @0xbfba34da:  0  0             add [eax], al           
>>    140   2B @0xbfba34dc:  0  0             add [eax], al           
>>    141   2B @0xbfba34de:  0  0             add [eax], al           
>>    142   2B @0xbfba34e0:  0  0             add [eax], al           
>>    143   2B @0xbfba34e2:  0  0             add [eax], al           
>>    144   2B @0xbfba34e4:  0  0             add [eax], al           
>>    145   2B @0xbfba34e6:  0  0             add [eax], al           
>>    146   2B @0xbfba34e8:  0  0             add [eax], al           
>>    147   2B @0xbfba34ea:  0  0             add [eax], al           
>>    148   2B @0xbfba34ec:  0  0             add [eax], al           
>>    149   2B @0xbfba34ee:  0  0             add [eax], al           
>>    150   2B @0xbfba34f0:  0  0             add [eax], al           
>>    151   2B @0xbfba34f2:  0  0             add [eax], al           
>>    152   2B @0xbfba34f4:  0  0             add [eax], al           
>>    153   2B @0xbfba34f6:  0  0             add [eax], al           
>>    154   2B @0xbfba34f8:  0  0             add [eax], al           
>>    155   2B @0xbfba34fa:  0  0             add [eax], al           
>>    156   2B @0xbfba34fc:  0  0             add [eax], al           
>>    157   2B @0xbfba34fe:  0  0             add [eax], al           
>>    158   2B @0xbfba3500:  0  0             add [eax], al           
>>    159   2B @0xbfba3502:  0  0             add [eax], al           
>>    160   2B @0xbfba3504:  0  0             add [eax], al           
>>    161   2B @0xbfba3506:  0  0             add [eax], al           
>>    162   2B @0xbfba3508:  0  0             add [eax], al           
>>    163   2B @0xbfba350a:  0  0             add [eax], al           
>>    164   2B @0xbfba350c:  0  0             add [eax], al           
>>    165   2B @0xbfba350e:  0  0             add [eax], al           
>>    166   2B @0xbfba3510:  0  0             add [eax], al           
>>    167   2B @0xbfba3512:  0  0             add [eax], al           
>>    168   2B @0xbfba3514:  0  0             add [eax], al           
>>    169   2B @0xbfba3516:  0  0             add [eax], al           
>>    170   2B @0xbfba3518:  0  0             add [eax], al           
>>    171   2B @0xbfba351a:  0  0             add [eax], al           
>>    172   2B @0xbfba351c:  0  0             add [eax], al           
>>    173   2B @0xbfba351e:  0  0             add [eax], al           
>>    174   2B @0xbfba3520:  0  0             add [eax], al           
>>    175   2B @0xbfba3522:  0  0             add [eax], al           
>>    176   2B @0xbfba3524:  0  0             add [eax], al           
>>    177   2B @0xbfba3526:  0  0             add [eax], al           
>>    178   2B @0xbfba3528:  0  0             add [eax], al           
>>    179   2B @0xbfba352a:  0  0             add [eax], al           
>>    180   2B @0xbfba352c:  0  0             add [eax], al           
>>    181   2B @0xbfba352e:  0  0             add [eax], al           
>>    182   2B @0xbfba3530:  0  0             add [eax], al           
>>    183   2B @0xbfba3532:  0  0             add [eax], al           
>>    184   2B @0xbfba3534:  0  0             add [eax], al           
>>    185   2B @0xbfba3536:  0  0             add [eax], al           
>>    186   2B @0xbfba3538:  0  0             add [eax], al           
>>    187   2B @0xbfba353a:  0  0             add [eax], al           
>>    188   2B @0xbfba353c:  0  0             add [eax], al           
>>    189   2B @0xbfba353e:  0  0             add [eax], al           
>>    190   2B @0xbfba3540:  0  0             add [eax], al           
>>    191   2B @0xbfba3542:  0  0             add [eax], al           
>>    192   2B @0xbfba3544:  0  0             add [eax], al           
>>    193   2B @0xbfba3546:  0  0             add [eax], al           
>>    194   2B @0xbfba3548:  0  0             add [eax], al           
>>    195   2B @0xbfba354a:  0  0             add [eax], al           
>>    196   2B @0xbfba354c:  0  0             add [eax], al           
>>    197   2B @0xbfba354e:  0  0             add [eax], al           
>>    198   2B @0xbfba3550:  0  0             add [eax], al           
>>    199   2B @0xbfba3552:  0  0             add [eax], al           
>>    200   2B @0xbfba3554:  0  0             add [eax], al           
>>    201   2B @0xbfba3556:  0  0             add [eax], al           
>>    202   2B @0xbfba3558:  0  0             add [eax], al           
>>    203   2B @0xbfba355a:  0  0             add [eax], al           
>>    204   2B @0xbfba355c:  0  0             add [eax], al           
>>    205   2B @0xbfba355e:  0  0             add [eax], al           
>>    206   2B @0xbfba3560:  0  0             add [eax], al           
>>    207   2B @0xbfba3562:  0  0             add [eax], al           
>>    208   2B @0xbfba3564:  0  0             add [eax], al           
>>    209   2B @0xbfba3566:  0  0             add [eax], al           
>>    210   2B @0xbfba3568:  0  0             add [eax], al           
>>    211   2B @0xbfba356a:  0  0             add [eax], al           
>>    212   2B @0xbfba356c:  0  0             add [eax], al           
>>    213   2B @0xbfba356e:  0  0             add [eax], al           
>>    214   2B @0xbfba3570:  0  0             add [eax], al           
>>    215   2B @0xbfba3572:  0  0             add [eax], al           
>>    216   2B @0xbfba3574:  0  0             add [eax], al           
>>    217   2B @0xbfba3576:  0  0             add [eax], al           
>>    218   2B @0xbfba3578:  0  0             add [eax], al           
>>    219   2B @0xbfba357a:  0  0             add [eax], al           
>>    220   2B @0xbfba357c:  0  0             add [eax], al           
>>    221   2B @0xbfba357e:  0  0             add [eax], al           
>>    222   2B @0xbfba3580: eb 13             jmp 0x15                
>>    223   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    224   1B @0xbfba3582: 59                pop ecx                 
>>    225   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    226   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    227   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    228   1B @0xbfba3589: 43                inc ebx                 
>>    229   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    230   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    231   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (413/418) = 0.988038
>>    Mem_map start_addr: 0xbfba33f8, length: 1024B, exec'ed bytes: 413, range: 418B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33f0                   00000000 00000000          ........
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 3
>>    Printing success 4
>> Success densities, overlay: 0.987981; avg: 0.987981
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba33fa:  0  0             add [eax], al           
>>      2   2B @0xbfba33fc:  0  0             add [eax], al           
>>      3   2B @0xbfba33fe:  0  0             add [eax], al           
>>      4   2B @0xbfba3400:  0  0             add [eax], al           
>>      5   2B @0xbfba3402:  0  0             add [eax], al           
>>      6   2B @0xbfba3404:  0  0             add [eax], al           
>>      7   2B @0xbfba3406:  0  0             add [eax], al           
>>      8   2B @0xbfba3408:  0  0             add [eax], al           
>>      9   2B @0xbfba340a:  0  0             add [eax], al           
>>     10   2B @0xbfba340c:  0  0             add [eax], al           
>>     11   2B @0xbfba340e:  0  0             add [eax], al           
>>     12   2B @0xbfba3410:  0  0             add [eax], al           
>>     13   2B @0xbfba3412:  0  0             add [eax], al           
>>     14   2B @0xbfba3414:  0  0             add [eax], al           
>>     15   2B @0xbfba3416:  0  0             add [eax], al           
>>     16   2B @0xbfba3418:  0  0             add [eax], al           
>>     17   2B @0xbfba341a:  0  0             add [eax], al           
>>     18   2B @0xbfba341c:  0  0             add [eax], al           
>>     19   2B @0xbfba341e:  0  0             add [eax], al           
>>     20   2B @0xbfba3420:  0  0             add [eax], al           
>>     21   2B @0xbfba3422:  0  0             add [eax], al           
>>     22   2B @0xbfba3424:  0  0             add [eax], al           
>>     23   2B @0xbfba3426:  0  0             add [eax], al           
>>     24   2B @0xbfba3428:  0  0             add [eax], al           
>>     25   2B @0xbfba342a:  0  0             add [eax], al           
>>     26   2B @0xbfba342c:  0  0             add [eax], al           
>>     27   2B @0xbfba342e:  0  0             add [eax], al           
>>     28   2B @0xbfba3430:  0  0             add [eax], al           
>>     29   2B @0xbfba3432:  0  0             add [eax], al           
>>     30   2B @0xbfba3434:  0  0             add [eax], al           
>>     31   2B @0xbfba3436:  0  0             add [eax], al           
>>     32   2B @0xbfba3438:  0  0             add [eax], al           
>>     33   2B @0xbfba343a:  0  0             add [eax], al           
>>     34   2B @0xbfba343c:  0  0             add [eax], al           
>>     35   2B @0xbfba343e:  0  0             add [eax], al           
>>     36   2B @0xbfba3440:  0  0             add [eax], al           
>>     37   2B @0xbfba3442:  0  0             add [eax], al           
>>     38   7B @0xc10252ff: OOB, bytes not captured
>>     39   6B @0xc1025306: OOB, bytes not captured
>>     40   7B @0xc102530c: OOB, bytes not captured
>>     41   2B @0xc1025313: OOB, bytes not captured
>>     42   6B @0xc1025315: OOB, bytes not captured
>>     43   2B @0xc102531b: OOB, bytes not captured
>>     44   2B @0xc102531d: OOB, bytes not captured
>>     45   3B @0xc1025325: OOB, bytes not captured
>>     46   2B @0xc1025328: OOB, bytes not captured
>>     47   3B @0xc1025349: OOB, bytes not captured
>>     48   2B @0xc102534c: OOB, bytes not captured
>>     49   3B @0xc1025399: OOB, bytes not captured
>>     50   6B @0xc102539c: OOB, bytes not captured
>>     51   2B @0xc10253a2: OOB, bytes not captured
>>     52   2B @0xc10253a4: OOB, bytes not captured
>>     53   2B @0xc10253a6: OOB, bytes not captured
>>     54   2B @0xc10253ac: OOB, bytes not captured
>>     55   2B @0xc10253ae: OOB, bytes not captured
>>     56   3B @0xc10253a8: OOB, bytes not captured
>>     57   1B @0xc10253ab: OOB, bytes not captured
>>     58   2B @0xc10253ac: OOB, bytes not captured
>>     59   2B @0xc10253ae: OOB, bytes not captured
>>     60   2B @0xc10253b0: OOB, bytes not captured
>>     61   2B @0xc10253b2: OOB, bytes not captured
>>     62   2B @0xc10253b4: OOB, bytes not captured
>>     63   2B @0xc10253ba: OOB, bytes not captured
>>     64   2B @0xc10253bc: OOB, bytes not captured
>>     65   3B @0xc10253b6: OOB, bytes not captured
>>     66   1B @0xc10253b9: OOB, bytes not captured
>>     67   2B @0xc10253ba: OOB, bytes not captured
>>     68   2B @0xc10253bc: OOB, bytes not captured
>>     69   2B @0xc10253be: OOB, bytes not captured
>>     70   2B @0xc10253c4: OOB, bytes not captured
>>     71   2B @0xc10253c6: OOB, bytes not captured
>>     72   2B @0xc10253c8: OOB, bytes not captured
>>     73   2B @0xc10253ce: OOB, bytes not captured
>>     74   2B @0xc10253d0: OOB, bytes not captured
>>     75   3B @0xc10253d2: OOB, bytes not captured
>>     76   3B @0xc10253d5: OOB, bytes not captured
>>     77   2B @0xc10253d8: OOB, bytes not captured
>>     78   2B @0xc10253da: OOB, bytes not captured
>>     79   2B @0xc10253dc: OOB, bytes not captured
>>     80   2B @0xc10253e2: OOB, bytes not captured
>>     81   2B @0xc10253e4: OOB, bytes not captured
>>     82   5B @0xc10253e6: OOB, bytes not captured
>>     83   1B @0xc101fff1: OOB, bytes not captured
>>     84   1B @0xc101fff2: OOB, bytes not captured
>>     85   1B @0xc101fff3: OOB, bytes not captured
>>     86   1B @0xc101fff4: OOB, bytes not captured
>>     87   3B @0xc101fff5: OOB, bytes not captured
>>     88   4B @0xc101fff8: OOB, bytes not captured
>>     89   2B @0xc101fffc: OOB, bytes not captured
>>     90   4B @0xc101fffe: OOB, bytes not captured
>>     91   4B @0xc1020002: OOB, bytes not captured
>>     92   3B @0xc1020006: OOB, bytes not captured
>>     93   3B @0xc1020009: OOB, bytes not captured
>>     94   4B @0xc102000c: OOB, bytes not captured
>>     95   4B @0xc1020010: OOB, bytes not captured
>>     96   3B @0xc1020014: OOB, bytes not captured
>>     97   3B @0xc1020017: OOB, bytes not captured
>>     98   4B @0xc102001a: OOB, bytes not captured
>>     99   4B @0xc102001e: OOB, bytes not captured
>>    100   5B @0xc1020022: OOB, bytes not captured
>>    101   2B @0xc1020027: OOB, bytes not captured
>>    102   2B @0xc1020029: OOB, bytes not captured
>>    103   5B @0xc102002b: OOB, bytes not captured
>>    104   2B @0xc1020030: OOB, bytes not captured
>>    105   4B @0xc102003a: OOB, bytes not captured
>>    106   6B @0xc102003e: OOB, bytes not captured
>>    107   3B @0xc1020044: OOB, bytes not captured
>>    108   4B @0xc1020047: OOB, bytes not captured
>>    109   2B @0xc102004b: OOB, bytes not captured
>>    110   7B @0xc102004d: OOB, bytes not captured
>>    111   2B @0xc1020054: OOB, bytes not captured
>>    112   4B @0xc1020056: OOB, bytes not captured
>>    113   3B @0xc102005a: OOB, bytes not captured
>>    114   3B @0xc102005d: OOB, bytes not captured
>>    115   3B @0xc1020060: OOB, bytes not captured
>>    116   3B @0xc1020063: OOB, bytes not captured
>>    117   3B @0xc1020066: OOB, bytes not captured
>>    118   3B @0xc1020069: OOB, bytes not captured
>>    119   3B @0xc102006c: OOB, bytes not captured
>>    120   3B @0xc102006f: OOB, bytes not captured
>>    121   2B @0xc1020072: OOB, bytes not captured
>>    122   2B @0xc1020074: OOB, bytes not captured
>>    123   2B @0xc1020076: OOB, bytes not captured
>>    124   4B @0xc1020078: OOB, bytes not captured
>>    125   3B @0xc102007c: OOB, bytes not captured
>>    126   4B @0xc102007f: OOB, bytes not captured
>>    127   4B @0xc1020083: OOB, bytes not captured
>>    128   2B @0xc1020087: OOB, bytes not captured
>>    129   2B @0xc1020089: OOB, bytes not captured
>>    130   2B @0xc102008b: OOB, bytes not captured
>>    131   2B @0xc102008d: OOB, bytes not captured
>>    132   2B @0xc102008f: OOB, bytes not captured
>>    133   2B @0xc1020091: OOB, bytes not captured
>>    134   2B @0xc1020099: OOB, bytes not captured
>>    135   2B @0xc102009b: OOB, bytes not captured
>>    136   3B @0xc102009d: OOB, bytes not captured
>>    137   2B @0xc10200a0: OOB, bytes not captured
>>    138   2B @0xc10200a2: OOB, bytes not captured
>>    139   2B @0xc10200a4: OOB, bytes not captured
>>    140   2B @0xc10200a6: OOB, bytes not captured
>>    141   2B @0xc10200a8: OOB, bytes not captured
>>    142   2B @0xc10200aa: OOB, bytes not captured
>>    143   2B @0xc10200ac: OOB, bytes not captured
>>    144   7B @0xc10200ae: OOB, bytes not captured
>>    145   2B @0xc10200b5: OOB, bytes not captured
>>    146   4B @0xc10200b7: OOB, bytes not captured
>>    147   6B @0xc10200bb: OOB, bytes not captured
>>    148   2B @0xc10200c1: OOB, bytes not captured
>>    149   2B @0xc10200c3: OOB, bytes not captured
>>    150   2B @0xc10200c5: OOB, bytes not captured
>>    151   5B @0xc10200dc: OOB, bytes not captured
>>    152   5B @0xc10200e1: OOB, bytes not captured
>>    153   2B @0xc10200e6: OOB, bytes not captured
>>    154   2B @0xc10200e8: OOB, bytes not captured
>>    155   4B @0xc10200ea: OOB, bytes not captured
>>    156   2B @0xc10200ee: OOB, bytes not captured
>>    157   3B @0xc10200f2: OOB, bytes not captured
>>    158   1B @0xc10200f5: OOB, bytes not captured
>>    159   1B @0xc10200f6: OOB, bytes not captured
>>    160   1B @0xc10200f7: OOB, bytes not captured
>>    161   1B @0xc10200f8: OOB, bytes not captured
>>    162   1B @0xc10200f9: OOB, bytes not captured
>>    163   1B @0xc10253eb: OOB, bytes not captured
>>    164   2B @0xc10253ec: OOB, bytes not captured
>>    165   2B @0xc10253ee: OOB, bytes not captured
>>    166   5B @0xc10253f0: OOB, bytes not captured
>>    167   4B @0xc10253f5: OOB, bytes not captured
>>    168   2B @0xc10253f9: OOB, bytes not captured
>>    169   4B @0xc10253fb: OOB, bytes not captured
>>    170   6B @0xc10253ff: OOB, bytes not captured
>>    171   2B @0xc1025405: OOB, bytes not captured
>>    172   8B @0xc1025407: OOB, bytes not captured
>>    173   2B @0xc102540f: OOB, bytes not captured
>>    174   5B @0xc1025411: OOB, bytes not captured
>>    175   2B @0xc1025416: OOB, bytes not captured
>>    176   5B @0xc1134182: OOB, bytes not captured
>>    177   2B @0xc1134187: OOB, bytes not captured
>>    178   5B @0xc1134189: OOB, bytes not captured
>>    179   2B @0xc1132f80: OOB, bytes not captured
>>    180   2B @0xc1132f82: OOB, bytes not captured
>>    181   5B @0xc1132f84: OOB, bytes not captured
>>    182   3B @0xc1132f89: OOB, bytes not captured
>>    183   2B @0xc1132f8c: OOB, bytes not captured
>>    184   3B @0xc1132f8e: OOB, bytes not captured
>>    185   2B @0xc1132f91: OOB, bytes not captured
>>    186   6B @0xc1132f93: OOB, bytes not captured
>>    187   2B @0xc1132f99: OOB, bytes not captured
>>    188   2B @0xc1132f9b: OOB, bytes not captured
>>    189   1B @0xc1132f33: OOB, bytes not captured
>>    190   1B @0xc1132f34: OOB, bytes not captured
>>    191   1B @0xc1132f35: OOB, bytes not captured
>>    192   5B @0xc113418e: OOB, bytes not captured
>>    193   5B @0xc8a3626a: OOB, bytes not captured
>>    194   4B @0xc8a3630d: OOB, bytes not captured
>>    195   3B @0xc8a36311: OOB, bytes not captured
>>    196   2B @0xc8a36314: OOB, bytes not captured
>>    197   6B @0xc8a36316: OOB, bytes not captured
>>    198   5B @0xc8a3626f: OOB, bytes not captured
>>    199   2B @0xc8a36274: OOB, bytes not captured
>>    200   6B @0xc8a36276: OOB, bytes not captured
>>    201   4B @0xc8a3627c: OOB, bytes not captured
>>    202   3B @0xc8a36280: OOB, bytes not captured
>>    203   3B @0xc8a36283: OOB, bytes not captured
>>    204   3B @0xc8a36286: OOB, bytes not captured
>>    205   4B @0xc8a36289: OOB, bytes not captured
>>    206   5B @0xc8a3628d: OOB, bytes not captured
>>    207   4B @0xc8a36292: OOB, bytes not captured
>>    208   2B @0xc8a36296: OOB, bytes not captured
>>    209   5B @0xc8a36298: OOB, bytes not captured
>>    210   1B @0xc8a340e1: OOB, bytes not captured
>>    211   2B @0xc8a340e2: OOB, bytes not captured
>>    212   1B @0xc8a340e4: OOB, bytes not captured
>>    213   2B @0xc8a340e5: OOB, bytes not captured
>>    214   1B @0xc8a340e7: OOB, bytes not captured
>>    215   2B @0xc8a340e8: OOB, bytes not captured
>>    216   2B @0xc8a340ea: OOB, bytes not captured
>>    217   5B @0xc8a340f7: OOB, bytes not captured
>>    218   2B @0xc8a340fc: OOB, bytes not captured
>>    219   2B @0xc8a340fe: OOB, bytes not captured
>>    220   2B @0xc8a34100: OOB, bytes not captured
>>    221   6B @0xc8a34102: OOB, bytes not captured
>>    222   2B @0xc8a34108: OOB, bytes not captured
>>    223   5B @0xc8a3410a: OOB, bytes not captured
>>    224   2B @0xc8a3410f: OOB, bytes not captured
>>    225   5B @0xc8a34111: OOB, bytes not captured
>>    226   3B @0xc8a34077: OOB, bytes not captured
>>    227   2B @0xc8a3407a: OOB, bytes not captured
>>    228   6B @0xc8a34116: OOB, bytes not captured
>>    229   2B @0xc8a3411c: OOB, bytes not captured
>>    230   3B @0xc8a3411e: OOB, bytes not captured
>>    231   5B @0xc8a34121: OOB, bytes not captured
>>    232   1B @0xc8a34126: OOB, bytes not captured
>>    233   1B @0xc8a34127: OOB, bytes not captured
>>    234   1B @0xc8a34128: OOB, bytes not captured
>>    235   1B @0xc8a34129: OOB, bytes not captured
>>    236   2B @0xc8a3629d: OOB, bytes not captured
>>    237   5B @0xc8a3629f: OOB, bytes not captured
>>    238   1B @0xc8a37f85: OOB, bytes not captured
>>    239   2B @0xc8a37f86: OOB, bytes not captured
>>    240   2B @0xc8a37f88: OOB, bytes not captured
>>    241   2B @0xc8a37f8a: OOB, bytes not captured
>>    242   5B @0xc8a37f97: OOB, bytes not captured
>>    243   2B @0xc8a37f9c: OOB, bytes not captured
>>    244   2B @0xc8a37f9e: OOB, bytes not captured
>>    245   2B @0xc8a37fa0: OOB, bytes not captured
>>    246   3B @0xc8a37fa2: OOB, bytes not captured
>>    247   2B @0xc8a37fa5: OOB, bytes not captured
>>    248   2B @0xc8a37fa7: OOB, bytes not captured
>>    249   1B @0xc8a37fad: OOB, bytes not captured
>>    250   2B @0xc8a37fae: OOB, bytes not captured
>>    251   3B @0xc8a37fb0: OOB, bytes not captured
>>    252   2B @0xc8a37fb3: OOB, bytes not captured
>>    253   4B @0xc8a37fb5: OOB, bytes not captured
>>    254   2B @0xc8a37fb9: OOB, bytes not captured
>>    255   2B @0xc8a37fbb: OOB, bytes not captured
>>    256   5B @0xc8a37fbd: OOB, bytes not captured
>>    257   2B @0xc8a37fc2: OOB, bytes not captured
>>    258   5B @0xc8a37fc4: OOB, bytes not captured
>>    259   3B @0xc8a37fc9: OOB, bytes not captured
>>    260   5B @0xc8a37fcc: OOB, bytes not captured
>>    261   1B @0xc8a37fd1: OOB, bytes not captured
>>    262   1B @0xc8a37fd2: OOB, bytes not captured
>>    263   2B @0xc8a362a4: OOB, bytes not captured
>>    264   5B @0xc8a362a6: OOB, bytes not captured
>>    265   3B @0xc8a362ab: OOB, bytes not captured
>>    266   2B @0xc8a362ae: OOB, bytes not captured
>>    267   2B @0xc8a362b0: OOB, bytes not captured
>>    268   2B @0xc8a362b6: OOB, bytes not captured
>>    269   5B @0xc8a362b8: OOB, bytes not captured
>>    270   2B @0xc10cd7d5: OOB, bytes not captured
>>    271   3B @0xc10cd7d7: OOB, bytes not captured
>>    272   3B @0xc10cd7da: OOB, bytes not captured
>>    273   2B @0xc10cd7dd: OOB, bytes not captured
>>    274   5B @0xc10cd7e3: OOB, bytes not captured
>>    275   5B @0xc10cd7e8: OOB, bytes not captured
>>    276   5B @0xc10cd7ed: OOB, bytes not captured
>>    277   7B @0xc10cd7f2: OOB, bytes not captured
>>    278   3B @0xc10cd7f9: OOB, bytes not captured
>>    279   5B @0xc10cd7fc: OOB, bytes not captured
>>    280   4B @0xc8a362bd: OOB, bytes not captured
>>    281   3B @0xc8a362c1: OOB, bytes not captured
>>    282   3B @0xc8a362c4: OOB, bytes not captured
>>    283   2B @0xc8a362c7: OOB, bytes not captured
>>    284   3B @0xc8a362c9: OOB, bytes not captured
>>    285   5B @0xc8a362cc: OOB, bytes not captured
>>    286   2B @0xc8a362d1: OOB, bytes not captured
>>    287   5B @0xc8a362d3: OOB, bytes not captured
>>    288   2B @0xc8a362d8: OOB, bytes not captured
>>    289   4B @0xc8a362de: OOB, bytes not captured
>>    290   5B @0xc8a362e2: OOB, bytes not captured
>>    291   2B @0xc8a362e7: OOB, bytes not captured
>>    292   5B @0xc8a362e9: OOB, bytes not captured
>>    293   3B @0xc8a3407c: OOB, bytes not captured
>>    294   2B @0xc8a3407f: OOB, bytes not captured
>>    295   3B @0xc8a3423c: OOB, bytes not captured
>>    296   2B @0xc8a3423f: OOB, bytes not captured
>>    297   3B @0xc8a362ee: OOB, bytes not captured
>>    298   2B @0xc8a362f1: OOB, bytes not captured
>>    299   5B @0xc8a362f3: OOB, bytes not captured
>>    300   2B @0xc8a362f8: OOB, bytes not captured
>>    301   5B @0xc8a362fa: OOB, bytes not captured
>>    302   2B @0xc8a362ff: OOB, bytes not captured
>>    303   5B @0xc8a36301: OOB, bytes not captured
>>    304   2B @0xc8a36306: OOB, bytes not captured
>>    305   2B @0xbfba3444:  0  0             add [eax], al           
>>    306   2B @0xbfba3446:  0  0             add [eax], al           
>>    307   2B @0xbfba3448:  0  0             add [eax], al           
>>    308   2B @0xbfba344a:  0  0             add [eax], al           
>>    309   2B @0xbfba344c:  0  0             add [eax], al           
>>    310   2B @0xbfba344e:  0  0             add [eax], al           
>>    311   2B @0xbfba3450:  0  0             add [eax], al           
>>    312   2B @0xbfba3452:  0  0             add [eax], al           
>>    313   2B @0xbfba3454:  0  0             add [eax], al           
>>    314   2B @0xbfba3456:  0  0             add [eax], al           
>>    315   2B @0xbfba3458:  0  0             add [eax], al           
>>    316   2B @0xbfba345a:  0  0             add [eax], al           
>>    317   2B @0xbfba345c:  0  0             add [eax], al           
>>    318   2B @0xbfba345e:  0  0             add [eax], al           
>>    319   2B @0xbfba3460:  0  0             add [eax], al           
>>    320   2B @0xbfba3462:  0  0             add [eax], al           
>>    321   2B @0xbfba3464:  0  0             add [eax], al           
>>    322   2B @0xbfba3466:  0  0             add [eax], al           
>>    323   2B @0xbfba3468:  0  0             add [eax], al           
>>    324   2B @0xbfba346a:  0  0             add [eax], al           
>>    325   2B @0xbfba346c:  0  0             add [eax], al           
>>    326   2B @0xbfba346e:  0  0             add [eax], al           
>>    327   2B @0xbfba3470:  0  0             add [eax], al           
>>    328   2B @0xbfba3472:  0  0             add [eax], al           
>>    329   2B @0xbfba3474:  0  0             add [eax], al           
>>    330   2B @0xbfba3476:  0  0             add [eax], al           
>>    331   2B @0xbfba3478:  0  0             add [eax], al           
>>    332   2B @0xbfba347a:  0  0             add [eax], al           
>>    333   2B @0xbfba347c:  0  0             add [eax], al           
>>    334   2B @0xbfba347e:  0  0             add [eax], al           
>>    335   2B @0xbfba3480:  0  0             add [eax], al           
>>    336   2B @0xbfba3482:  0  0             add [eax], al           
>>    337   2B @0xbfba3484:  0  0             add [eax], al           
>>    338   2B @0xbfba3486:  0  0             add [eax], al           
>>    339   2B @0xbfba3488:  0  0             add [eax], al           
>>    340   2B @0xbfba348a:  0  0             add [eax], al           
>>    341   2B @0xbfba348c:  0  0             add [eax], al           
>>    342   4B @0xc8a3631c: OOB, bytes not captured
>>    343   5B @0xc8a36320: OOB, bytes not captured
>>    344   2B @0xc8a36325: OOB, bytes not captured
>>    345   4B @0xc8a36376: OOB, bytes not captured
>>    346   3B @0xc8a3637a: OOB, bytes not captured
>>    347   2B @0xc8a3637d: OOB, bytes not captured
>>    348   2B @0xc8a3637f: OOB, bytes not captured
>>    349   3B @0xc8a3632b: OOB, bytes not captured
>>    350   2B @0xc8a3632e: OOB, bytes not captured
>>    351   3B @0xc8a36330: OOB, bytes not captured
>>    352   2B @0xc8a36333: OOB, bytes not captured
>>    353   5B @0xc8a3633e: OOB, bytes not captured
>>    354   2B @0xc8a36343: OOB, bytes not captured
>>    355   2B @0xc8a36345: OOB, bytes not captured
>>    356   4B @0xc8a36347: OOB, bytes not captured
>>    357   3B @0xc8a3634b: OOB, bytes not captured
>>    358   3B @0xc8a3634e: OOB, bytes not captured
>>    359   4B @0xc8a36351: OOB, bytes not captured
>>    360   3B @0xc8a36355: OOB, bytes not captured
>>    361   5B @0xc8a36358: OOB, bytes not captured
>>    362   4B @0xc8a3635d: OOB, bytes not captured
>>    363   2B @0xc8a36361: OOB, bytes not captured
>>    364   5B @0xc8a36363: OOB, bytes not captured
>>    365   3B @0xc8a34081: OOB, bytes not captured
>>    366   2B @0xc8a34084: OOB, bytes not captured
>>    367   2B @0xc8a36368: OOB, bytes not captured
>>    368   5B @0xc8a3636a: OOB, bytes not captured
>>    369   2B @0xc8a3636f: OOB, bytes not captured
>>    370   5B @0xc8a36371: OOB, bytes not captured
>>    371   5B @0xc8a36381: OOB, bytes not captured
>>    372   2B @0xc8a36386: OOB, bytes not captured
>>    373   4B @0xc8a36395: OOB, bytes not captured
>>    374   3B @0xc8a36399: OOB, bytes not captured
>>    375   6B @0xc8a3639c: OOB, bytes not captured
>>    376   2B @0xc8a363a2: OOB, bytes not captured
>>    377   5B @0xc8a363a4: OOB, bytes not captured
>>    378   2B @0xc113928a: OOB, bytes not captured
>>    379   5B @0xc113928c: OOB, bytes not captured
>>    380   1B @0xc113917d: OOB, bytes not captured
>>    381   3B @0xc113917e: OOB, bytes not captured
>>    382   2B @0xc1139181: OOB, bytes not captured
>>    383   6B @0xc1139183: OOB, bytes not captured
>>    384   2B @0xc1139189: OOB, bytes not captured
>>    385   2B @0xc113918b: OOB, bytes not captured
>>    386   7B @0xc113918d: OOB, bytes not captured
>>    387   5B @0xc1139194: OOB, bytes not captured
>>    388   3B @0xc1139199: OOB, bytes not captured
>>    389   2B @0xc113919c: OOB, bytes not captured
>>    390   2B @0xc113919e: OOB, bytes not captured
>>    391   2B @0xc11391a0: OOB, bytes not captured
>>    392   1B @0xc11391a2: OOB, bytes not captured
>>    393   4B @0xc11391a3: OOB, bytes not captured
>>    394   8B @0xc11391a7: OOB, bytes not captured
>>    395   2B @0xc11391af: OOB, bytes not captured
>>    396   2B @0xc11391b1: OOB, bytes not captured
>>    397   2B @0xc11391b3: OOB, bytes not captured
>>    398   3B @0xc11391c3: OOB, bytes not captured
>>    399   2B @0xc11391c6: OOB, bytes not captured
>>    400   2B @0xc11391cc: OOB, bytes not captured
>>    401   1B @0xc11391ce: OOB, bytes not captured
>>    402   1B @0xc11391cf: OOB, bytes not captured
>>    403   2B @0xc1139291: OOB, bytes not captured
>>    404   2B @0xc1139293: OOB, bytes not captured
>>    405   6B @0xc1139295: OOB, bytes not captured
>>    406   2B @0xc113929b: OOB, bytes not captured
>>    407   2B @0xc113929d: OOB, bytes not captured
>>    408   2B @0xc113929f: OOB, bytes not captured
>>    409   4B @0xc11392a1: OOB, bytes not captured
>>    410   3B @0xc11392a5: OOB, bytes not captured
>>    411   2B @0xc11392a8: OOB, bytes not captured
>>    412   2B @0xbfba348e:  0  0             add [eax], al           
>>    413   2B @0xbfba3490:  0  0             add [eax], al           
>>    414   2B @0xbfba3492:  0  0             add [eax], al           
>>    415   2B @0xbfba3494:  0  0             add [eax], al           
>>    416   2B @0xbfba3496:  0  0             add [eax], al           
>>    417   2B @0xbfba3498:  0  0             add [eax], al           
>>    418   2B @0xbfba349a:  0  0             add [eax], al           
>>    419   2B @0xbfba349c:  0  0             add [eax], al           
>>    420   2B @0xbfba349e:  0  0             add [eax], al           
>>    421   2B @0xbfba34a0:  0  0             add [eax], al           
>>    422   2B @0xbfba34a2:  0  0             add [eax], al           
>>    423   2B @0xbfba34a4:  0  0             add [eax], al           
>>    424   2B @0xbfba34a6:  0  0             add [eax], al           
>>    425   2B @0xbfba34a8:  0  0             add [eax], al           
>>    426   2B @0xbfba34aa:  0  0             add [eax], al           
>>    427   2B @0xbfba34ac:  0  0             add [eax], al           
>>    428   2B @0xbfba34ae:  0  0             add [eax], al           
>>    429   2B @0xbfba34b0:  0  0             add [eax], al           
>>    430   2B @0xbfba34b2:  0  0             add [eax], al           
>>    431   2B @0xbfba34b4:  0  0             add [eax], al           
>>    432   2B @0xbfba34b6:  0  0             add [eax], al           
>>    433   2B @0xbfba34b8:  0  0             add [eax], al           
>>    434   2B @0xbfba34ba:  0  0             add [eax], al           
>>    435   2B @0xbfba34bc:  0  0             add [eax], al           
>>    436   2B @0xbfba34be:  0  0             add [eax], al           
>>    437   2B @0xbfba34c0:  0  0             add [eax], al           
>>    438   2B @0xbfba34c2:  0  0             add [eax], al           
>>    439   2B @0xbfba34c4:  0  0             add [eax], al           
>>    440   2B @0xbfba34c6:  0  0             add [eax], al           
>>    441   2B @0xbfba34c8:  0  0             add [eax], al           
>>    442   2B @0xbfba34ca:  0  0             add [eax], al           
>>    443   2B @0xbfba34cc:  0  0             add [eax], al           
>>    444   2B @0xbfba34ce:  0  0             add [eax], al           
>>    445   2B @0xbfba34d0:  0  0             add [eax], al           
>>    446   2B @0xbfba34d2:  0  0             add [eax], al           
>>    447   2B @0xbfba34d4:  0  0             add [eax], al           
>>    448   2B @0xbfba34d6:  0  0             add [eax], al           
>>    449   2B @0xbfba34d8:  0  0             add [eax], al           
>>    450   2B @0xbfba34da:  0  0             add [eax], al           
>>    451   2B @0xbfba34dc:  0  0             add [eax], al           
>>    452   2B @0xbfba34de:  0  0             add [eax], al           
>>    453   2B @0xbfba34e0:  0  0             add [eax], al           
>>    454   2B @0xbfba34e2:  0  0             add [eax], al           
>>    455   2B @0xbfba34e4:  0  0             add [eax], al           
>>    456   2B @0xbfba34e6:  0  0             add [eax], al           
>>    457   2B @0xbfba34e8:  0  0             add [eax], al           
>>    458   2B @0xbfba34ea:  0  0             add [eax], al           
>>    459   2B @0xbfba34ec:  0  0             add [eax], al           
>>    460   2B @0xbfba34ee:  0  0             add [eax], al           
>>    461   2B @0xbfba34f0:  0  0             add [eax], al           
>>    462   2B @0xbfba34f2:  0  0             add [eax], al           
>>    463   2B @0xbfba34f4:  0  0             add [eax], al           
>>    464   2B @0xbfba34f6:  0  0             add [eax], al           
>>    465   2B @0xbfba34f8:  0  0             add [eax], al           
>>    466   2B @0xbfba34fa:  0  0             add [eax], al           
>>    467   2B @0xbfba34fc:  0  0             add [eax], al           
>>    468   2B @0xbfba34fe:  0  0             add [eax], al           
>>    469   2B @0xbfba3500:  0  0             add [eax], al           
>>    470   2B @0xbfba3502:  0  0             add [eax], al           
>>    471   2B @0xbfba3504:  0  0             add [eax], al           
>>    472   2B @0xbfba3506:  0  0             add [eax], al           
>>    473   2B @0xbfba3508:  0  0             add [eax], al           
>>    474   2B @0xbfba350a:  0  0             add [eax], al           
>>    475   2B @0xbfba350c:  0  0             add [eax], al           
>>    476   2B @0xbfba350e:  0  0             add [eax], al           
>>    477   2B @0xbfba3510:  0  0             add [eax], al           
>>    478   2B @0xbfba3512:  0  0             add [eax], al           
>>    479   2B @0xbfba3514:  0  0             add [eax], al           
>>    480   2B @0xbfba3516:  0  0             add [eax], al           
>>    481   2B @0xbfba3518:  0  0             add [eax], al           
>>    482   2B @0xbfba351a:  0  0             add [eax], al           
>>    483   2B @0xbfba351c:  0  0             add [eax], al           
>>    484   2B @0xbfba351e:  0  0             add [eax], al           
>>    485   2B @0xbfba3520:  0  0             add [eax], al           
>>    486   2B @0xbfba3522:  0  0             add [eax], al           
>>    487   2B @0xbfba3524:  0  0             add [eax], al           
>>    488   2B @0xbfba3526:  0  0             add [eax], al           
>>    489   2B @0xbfba3528:  0  0             add [eax], al           
>>    490   2B @0xbfba352a:  0  0             add [eax], al           
>>    491   2B @0xbfba352c:  0  0             add [eax], al           
>>    492   2B @0xbfba352e:  0  0             add [eax], al           
>>    493   2B @0xbfba3530:  0  0             add [eax], al           
>>    494   2B @0xbfba3532:  0  0             add [eax], al           
>>    495   2B @0xbfba3534:  0  0             add [eax], al           
>>    496   2B @0xbfba3536:  0  0             add [eax], al           
>>    497   2B @0xbfba3538:  0  0             add [eax], al           
>>    498   2B @0xbfba353a:  0  0             add [eax], al           
>>    499   2B @0xbfba353c:  0  0             add [eax], al           
>>    500   2B @0xbfba353e:  0  0             add [eax], al           
>>    501   2B @0xbfba3540:  0  0             add [eax], al           
>>    502   2B @0xbfba3542:  0  0             add [eax], al           
>>    503   2B @0xbfba3544:  0  0             add [eax], al           
>>    504   2B @0xbfba3546:  0  0             add [eax], al           
>>    505   2B @0xbfba3548:  0  0             add [eax], al           
>>    506   2B @0xbfba354a:  0  0             add [eax], al           
>>    507   2B @0xbfba354c:  0  0             add [eax], al           
>>    508   2B @0xbfba354e:  0  0             add [eax], al           
>>    509   2B @0xbfba3550:  0  0             add [eax], al           
>>    510   2B @0xbfba3552:  0  0             add [eax], al           
>>    511   2B @0xbfba3554:  0  0             add [eax], al           
>>    512   2B @0xbfba3556:  0  0             add [eax], al           
>>    513   2B @0xbfba3558:  0  0             add [eax], al           
>>    514   2B @0xbfba355a:  0  0             add [eax], al           
>>    515   2B @0xbfba355c:  0  0             add [eax], al           
>>    516   2B @0xbfba355e:  0  0             add [eax], al           
>>    517   2B @0xbfba3560:  0  0             add [eax], al           
>>    518   2B @0xbfba3562:  0  0             add [eax], al           
>>    519   2B @0xbfba3564:  0  0             add [eax], al           
>>    520   2B @0xbfba3566:  0  0             add [eax], al           
>>    521   2B @0xbfba3568:  0  0             add [eax], al           
>>    522   2B @0xbfba356a:  0  0             add [eax], al           
>>    523   2B @0xbfba356c:  0  0             add [eax], al           
>>    524   2B @0xbfba356e:  0  0             add [eax], al           
>>    525   2B @0xbfba3570:  0  0             add [eax], al           
>>    526   2B @0xbfba3572:  0  0             add [eax], al           
>>    527   2B @0xbfba3574:  0  0             add [eax], al           
>>    528   2B @0xbfba3576:  0  0             add [eax], al           
>>    529   2B @0xbfba3578:  0  0             add [eax], al           
>>    530   2B @0xbfba357a:  0  0             add [eax], al           
>>    531   2B @0xbfba357c:  0  0             add [eax], al           
>>    532   2B @0xbfba357e:  0  0             add [eax], al           
>>    533   2B @0xbfba3580: eb 13             jmp 0x15                
>>    534   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    535   1B @0xbfba3582: 59                pop ecx                 
>>    536   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    537   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    538   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    539   1B @0xbfba3589: 43                inc ebx                 
>>    540   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    541   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    542   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (411/416) = 0.987981
>>    Mem_map start_addr: 0xbfba33fa, length: 1024B, exec'ed bytes: 411, range: 416B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba33f0                       0000 00000000            ......
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 4
>>    Printing success 5
>> Success densities, overlay: 0.987805; avg: 0.987805
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3400:  0  0             add [eax], al           
>>      2   2B @0xbfba3402:  0  0             add [eax], al           
>>      3   2B @0xbfba3404:  0  0             add [eax], al           
>>      4   2B @0xbfba3406:  0  0             add [eax], al           
>>      5   2B @0xbfba3408:  0  0             add [eax], al           
>>      6   2B @0xbfba340a:  0  0             add [eax], al           
>>      7   2B @0xbfba340c:  0  0             add [eax], al           
>>      8   2B @0xbfba340e:  0  0             add [eax], al           
>>      9   2B @0xbfba3410:  0  0             add [eax], al           
>>     10   2B @0xbfba3412:  0  0             add [eax], al           
>>     11   2B @0xbfba3414:  0  0             add [eax], al           
>>     12   2B @0xbfba3416:  0  0             add [eax], al           
>>     13   2B @0xbfba3418:  0  0             add [eax], al           
>>     14   2B @0xbfba341a:  0  0             add [eax], al           
>>     15   2B @0xbfba341c:  0  0             add [eax], al           
>>     16   2B @0xbfba341e:  0  0             add [eax], al           
>>     17   2B @0xbfba3420:  0  0             add [eax], al           
>>     18   2B @0xbfba3422:  0  0             add [eax], al           
>>     19   2B @0xbfba3424:  0  0             add [eax], al           
>>     20   2B @0xbfba3426:  0  0             add [eax], al           
>>     21   2B @0xbfba3428:  0  0             add [eax], al           
>>     22   2B @0xbfba342a:  0  0             add [eax], al           
>>     23   2B @0xbfba342c:  0  0             add [eax], al           
>>     24   2B @0xbfba342e:  0  0             add [eax], al           
>>     25   2B @0xbfba3430:  0  0             add [eax], al           
>>     26   2B @0xbfba3432:  0  0             add [eax], al           
>>     27   2B @0xbfba3434:  0  0             add [eax], al           
>>     28   2B @0xbfba3436:  0  0             add [eax], al           
>>     29   2B @0xbfba3438:  0  0             add [eax], al           
>>     30   2B @0xbfba343a:  0  0             add [eax], al           
>>     31   2B @0xbfba343c:  0  0             add [eax], al           
>>     32   2B @0xbfba343e:  0  0             add [eax], al           
>>     33   2B @0xbfba3440:  0  0             add [eax], al           
>>     34   2B @0xbfba3442:  0  0             add [eax], al           
>>     35   2B @0xbfba3444:  0  0             add [eax], al           
>>     36   2B @0xbfba3446:  0  0             add [eax], al           
>>     37   2B @0xbfba3448:  0  0             add [eax], al           
>>     38   5B @0xc8a35e91: OOB, bytes not captured
>>     39   4B @0xc8a35f3d: OOB, bytes not captured
>>     40   5B @0xc8a35f41: OOB, bytes not captured
>>     41   2B @0xc8a35f46: OOB, bytes not captured
>>     42   4B @0xc8a35f9c: OOB, bytes not captured
>>     43   3B @0xc8a35fa0: OOB, bytes not captured
>>     44   2B @0xc8a35fa3: OOB, bytes not captured
>>     45   6B @0xc8a35fa5: OOB, bytes not captured
>>     46   3B @0xc8a35e96: OOB, bytes not captured
>>     47   2B @0xc8a35e99: OOB, bytes not captured
>>     48   3B @0xc8a35e9b: OOB, bytes not captured
>>     49   4B @0xc8a35e9e: OOB, bytes not captured
>>     50   3B @0xc8a35ea2: OOB, bytes not captured
>>     51   2B @0xc8a35ea5: OOB, bytes not captured
>>     52   4B @0xc8a35ea7: OOB, bytes not captured
>>     53   2B @0xc8a35eab: OOB, bytes not captured
>>     54   2B @0xc8a35ead: OOB, bytes not captured
>>     55   5B @0xc8a35eaf: OOB, bytes not captured
>>     56   1B @0xc8a35994: OOB, bytes not captured
>>     57   2B @0xc8a35995: OOB, bytes not captured
>>     58   5B @0xc8a35997: OOB, bytes not captured
>>     59   3B @0xc8a3599c: OOB, bytes not captured
>>     60   2B @0xc8a3599f: OOB, bytes not captured
>>     61   2B @0xc8a359a8: OOB, bytes not captured
>>     62   1B @0xc8a359aa: OOB, bytes not captured
>>     63   5B @0xc8a359ab: OOB, bytes not captured
>>     64   3B @0xc10ceb9e: OOB, bytes not captured
>>     65   2B @0xc10ceba1: OOB, bytes not captured
>>     66   5B @0xc10ceba3: OOB, bytes not captured
>>     67   5B @0xc10ceba8: OOB, bytes not captured
>>     68   2B @0xc10cebad: OOB, bytes not captured
>>     69   5B @0xc10cebaf: OOB, bytes not captured
>>     70   1B @0xc126e4fe: OOB, bytes not captured
>>     71   5B @0xc126e4ff: OOB, bytes not captured
>>     72   1B @0xc126e504: OOB, bytes not captured
>>     73   1B @0xc126e505: OOB, bytes not captured
>>     74   1B @0xc126e506: OOB, bytes not captured
>>     75   3B @0xc126e507: OOB, bytes not captured
>>     76   6B @0xc126e50a: OOB, bytes not captured
>>     77   4B @0xc126e510: OOB, bytes not captured
>>     78   5B @0xc126e514: OOB, bytes not captured
>>     79   3B @0xc126e519: OOB, bytes not captured
>>     80   3B @0xc126e51c: OOB, bytes not captured
>>     81   4B @0xc126e51f: OOB, bytes not captured
>>     82   3B @0xc126e523: OOB, bytes not captured
>>     83   5B @0xc126e526: OOB, bytes not captured
>>     84   4B @0xc126e52b: OOB, bytes not captured
>>     85   3B @0xc126e52f: OOB, bytes not captured
>>     86   6B @0xc126e532: OOB, bytes not captured
>>     87   3B @0xc126e538: OOB, bytes not captured
>>     88   2B @0xc126e53b: OOB, bytes not captured
>>     89   6B @0xc126e53d: OOB, bytes not captured
>>     90   6B @0xc126e543: OOB, bytes not captured
>>     91   6B @0xc126e549: OOB, bytes not captured
>>     92   6B @0xc126e54f: OOB, bytes not captured
>>     93   7B @0xc126e555: OOB, bytes not captured
>>     94   2B @0xc126e55c: OOB, bytes not captured
>>     95   2B @0xc126e55e: OOB, bytes not captured
>>     96   2B @0xc126e560: OOB, bytes not captured
>>     97   2B @0xc126e562: OOB, bytes not captured
>>     98   3B @0xc126e564: OOB, bytes not captured
>>     99   2B @0xc126e567: OOB, bytes not captured
>>    100   3B @0xc126e569: OOB, bytes not captured
>>    101   4B @0xc126e56c: OOB, bytes not captured
>>    102   4B @0xc126e570: OOB, bytes not captured
>>    103   2B @0xc126e574: OOB, bytes not captured
>>    104   2B @0xc126e576: OOB, bytes not captured
>>    105   2B @0xc126e578: OOB, bytes not captured
>>    106   2B @0xc126e578: OOB, bytes not captured
>>    107   4B @0xc126e57a: OOB, bytes not captured
>>    108   4B @0xc126e57e: OOB, bytes not captured
>>    109   4B @0xc126e582: OOB, bytes not captured
>>    110   4B @0xc126e586: OOB, bytes not captured
>>    111   4B @0xc126e58a: OOB, bytes not captured
>>    112   4B @0xc126e58e: OOB, bytes not captured
>>    113   4B @0xc126e592: OOB, bytes not captured
>>    114   8B @0xc126e596: OOB, bytes not captured
>>    115   4B @0xc126e59e: OOB, bytes not captured
>>    116   4B @0xc126e5a2: OOB, bytes not captured
>>    117   4B @0xc126e5a6: OOB, bytes not captured
>>    118   4B @0xc126e5aa: OOB, bytes not captured
>>    119   5B @0xc126e5ae: OOB, bytes not captured
>>    120   1B @0xc126e4a6: OOB, bytes not captured
>>    121   2B @0xc126e4a7: OOB, bytes not captured
>>    122   1B @0xc126e4a9: OOB, bytes not captured
>>    123   1B @0xc126e4aa: OOB, bytes not captured
>>    124   2B @0xc126e4ab: OOB, bytes not captured
>>    125   1B @0xc126e4ad: OOB, bytes not captured
>>    126   3B @0xc126e4ae: OOB, bytes not captured
>>    127   3B @0xc126e4b1: OOB, bytes not captured
>>    128   3B @0xc126e4b4: OOB, bytes not captured
>>    129   4B @0xc126e4b7: OOB, bytes not captured
>>    130   2B @0xc126e4bb: OOB, bytes not captured
>>    131   2B @0xc126e4bd: OOB, bytes not captured
>>    132   5B @0xc126e4bf: OOB, bytes not captured
>>    133   2B @0xc126e4c4: OOB, bytes not captured
>>    134   3B @0xc126e4c6: OOB, bytes not captured
>>    135   3B @0xc126e4c9: OOB, bytes not captured
>>    136   2B @0xc126e4cc: OOB, bytes not captured
>>    137   2B @0xc126e4ce: OOB, bytes not captured
>>    138   2B @0xc126e4d0: OOB, bytes not captured
>>    139   2B @0xc126e4d2: OOB, bytes not captured
>>    140   2B @0xc126e4d4: OOB, bytes not captured
>>    141   3B @0xc126e4d6: OOB, bytes not captured
>>    142   3B @0xc10cec0e: OOB, bytes not captured
>>    143   2B @0xc10cec11: OOB, bytes not captured
>>    144   3B @0xc10cec13: OOB, bytes not captured
>>    145   2B @0xc10cec16: OOB, bytes not captured
>>    146   2B @0xc10cec18: OOB, bytes not captured
>>    147   3B @0xc10cec1a: OOB, bytes not captured
>>    148   6B @0xc10cec1d: OOB, bytes not captured
>>    149   2B @0xc10cec23: OOB, bytes not captured
>>    150   2B @0xc10cec25: OOB, bytes not captured
>>    151   3B @0xc10cec27: OOB, bytes not captured
>>    152   2B @0xc10cec2a: OOB, bytes not captured
>>    153   2B @0xc10cec2c: OOB, bytes not captured
>>    154   3B @0xc10cec2e: OOB, bytes not captured
>>    155   2B @0xc10cec31: OOB, bytes not captured
>>    156   2B @0xc10cec33: OOB, bytes not captured
>>    157   2B @0xc10cec35: OOB, bytes not captured
>>    158   2B @0xc10cec37: OOB, bytes not captured
>>    159   3B @0xc112340f: OOB, bytes not captured
>>    160   5B @0xc1123412: OOB, bytes not captured
>>    161   1B @0xc11233de: OOB, bytes not captured
>>    162   2B @0xc11233df: OOB, bytes not captured
>>    163   1B @0xc11233e1: OOB, bytes not captured
>>    164   4B @0xc11233e2: OOB, bytes not captured
>>    165   2B @0xc11233e6: OOB, bytes not captured
>>    166   7B @0xc11233e8: OOB, bytes not captured
>>    167   2B @0xc11233ef: OOB, bytes not captured
>>    168   2B @0xc1123407: OOB, bytes not captured
>>    169   3B @0xc1123409: OOB, bytes not captured
>>    170   3B @0xc8885795: OOB, bytes not captured
>>    171   3B @0xc8885798: OOB, bytes not captured
>>    172   3B @0xc888579b: OOB, bytes not captured
>>    173   3B @0xc888579e: OOB, bytes not captured
>>    174   3B @0xc88857a1: OOB, bytes not captured
>>    175   2B @0xc88857a4: OOB, bytes not captured
>>    176   3B @0xc88857a6: OOB, bytes not captured
>>    177   3B @0xc88857a9: OOB, bytes not captured
>>    178   3B @0xc88857ac: OOB, bytes not captured
>>    179   3B @0xc88857af: OOB, bytes not captured
>>    180   2B @0xc88857b2: OOB, bytes not captured
>>    181   6B @0xc88857b4: OOB, bytes not captured
>>    182   1B @0xc88857ba: OOB, bytes not captured
>>    183   5B @0xc88857bb: OOB, bytes not captured
>>    184   3B @0xc112cd1a: OOB, bytes not captured
>>    185   2B @0xc112cd1d: OOB, bytes not captured
>>    186   5B @0xc112cd1f: OOB, bytes not captured
>>    187   3B @0xc113e1bf: OOB, bytes not captured
>>    188   3B @0xc113e1c2: OOB, bytes not captured
>>    189   2B @0xc113e1c5: OOB, bytes not captured
>>    190   3B @0xc113e1c7: OOB, bytes not captured
>>    191   2B @0xc113e1ca: OOB, bytes not captured
>>    192   3B @0xc113e1cc: OOB, bytes not captured
>>    193   2B @0xc113e1cf: OOB, bytes not captured
>>    194   1B @0xc113e1d1: OOB, bytes not captured
>>    195   2B @0xc112cd24: OOB, bytes not captured
>>    196   2B @0xc112cd26: OOB, bytes not captured
>>    197   3B @0xc112cd28: OOB, bytes not captured
>>    198   2B @0xc112cd2b: OOB, bytes not captured
>>    199   2B @0xc112cd2d: OOB, bytes not captured
>>    200   2B @0xc112cd2f: OOB, bytes not captured
>>    201   2B @0xc10442b6: OOB, bytes not captured
>>    202   5B @0xc10442b8: OOB, bytes not captured
>>    203   3B @0xc10442bd: OOB, bytes not captured
>>    204   5B @0xc10442c0: OOB, bytes not captured
>>    205   1B @0xc10442c5: OOB, bytes not captured
>>    206   2B @0xc10442c6: OOB, bytes not captured
>>    207   5B @0xc10442c8: OOB, bytes not captured
>>    208   1B @0xc104435b: OOB, bytes not captured
>>    209   2B @0xc104435c: OOB, bytes not captured
>>    210   1B @0xc104435e: OOB, bytes not captured
>>    211   2B @0xc104435f: OOB, bytes not captured
>>    212   1B @0xc1044361: OOB, bytes not captured
>>    213   4B @0xc1044362: OOB, bytes not captured
>>    214   2B @0xc1044366: OOB, bytes not captured
>>    215   3B @0xc1044368: OOB, bytes not captured
>>    216   3B @0xc104436b: OOB, bytes not captured
>>    217   2B @0xc104436e: OOB, bytes not captured
>>    218   2B @0xc1044370: OOB, bytes not captured
>>    219   3B @0xc1044372: OOB, bytes not captured
>>    220   3B @0xc1044375: OOB, bytes not captured
>>    221   2B @0xc1044378: OOB, bytes not captured
>>    222   3B @0xc104437a: OOB, bytes not captured
>>    223   2B @0xc104437d: OOB, bytes not captured
>>    224   2B @0xc104437f: OOB, bytes not captured
>>    225   2B @0xc1044381: OOB, bytes not captured
>>    226   2B @0xc1044383: OOB, bytes not captured
>>    227   2B @0xc1044385: OOB, bytes not captured
>>    228   2B @0xc1044387: OOB, bytes not captured
>>    229   1B @0xc1044389: OOB, bytes not captured
>>    230   1B @0xc104438a: OOB, bytes not captured
>>    231   1B @0xc104438b: OOB, bytes not captured
>>    232   5B @0xc104438c: OOB, bytes not captured
>>    233   2B @0xc102d4c4: OOB, bytes not captured
>>    234   8B @0xc102d4c6: OOB, bytes not captured
>>    235   5B @0xc102d4ce: OOB, bytes not captured
>>    236   2B @0xc1044356: OOB, bytes not captured
>>    237   1B @0xc1044358: OOB, bytes not captured
>>    238   1B @0xc1044359: OOB, bytes not captured
>>    239   1B @0xc104435a: OOB, bytes not captured
>>    240   1B @0xc10442cd: OOB, bytes not captured
>>    241   1B @0xc10442ce: OOB, bytes not captured
>>    242   1B @0xc10442cf: OOB, bytes not captured
>>    243   1B @0xc10442d0: OOB, bytes not captured
>>    244   1B @0xc10442d1: OOB, bytes not captured
>>    245   3B @0xc8885755: OOB, bytes not captured
>>    246   3B @0xc8885758: OOB, bytes not captured
>>    247   3B @0xc888575b: OOB, bytes not captured
>>    248   3B @0xc888575e: OOB, bytes not captured
>>    249   3B @0xc8885761: OOB, bytes not captured
>>    250   2B @0xc8885764: OOB, bytes not captured
>>    251   3B @0xc8885766: OOB, bytes not captured
>>    252   3B @0xc8885769: OOB, bytes not captured
>>    253   3B @0xc888576c: OOB, bytes not captured
>>    254   3B @0xc888576f: OOB, bytes not captured
>>    255   6B @0xc8885772: OOB, bytes not captured
>>    256   2B @0xc8885778: OOB, bytes not captured
>>    257   1B @0xc888577a: OOB, bytes not captured
>>    258   5B @0xc888577b: OOB, bytes not captured
>>    259   1B @0xc112340c: OOB, bytes not captured
>>    260   1B @0xc112340d: OOB, bytes not captured
>>    261   1B @0xc112340e: OOB, bytes not captured
>>    262   5B @0xc10cec39: OOB, bytes not captured
>>    263   1B @0xc126dff3: OOB, bytes not captured
>>    264   5B @0xc126dff4: OOB, bytes not captured
>>    265   1B @0xc126dff9: OOB, bytes not captured
>>    266   7B @0xc126dffa: OOB, bytes not captured
>>    267   1B @0xc126e001: OOB, bytes not captured
>>    268   3B @0xc126e002: OOB, bytes not captured
>>    269   6B @0xc126e005: OOB, bytes not captured
>>    270   7B @0xc126e00b: OOB, bytes not captured
>>    271   2B @0xc126e012: OOB, bytes not captured
>>    272   6B @0xc126e014: OOB, bytes not captured
>>    273   4B @0xc126e01a: OOB, bytes not captured
>>    274   6B @0xc126e01e: OOB, bytes not captured
>>    275   7B @0xc126e024: OOB, bytes not captured
>>    276   2B @0xc126e02b: OOB, bytes not captured
>>    277   5B @0xc126e02d: OOB, bytes not captured
>>    278   6B @0xc1070d98: OOB, bytes not captured
>>    279   6B @0xc1070d9e: OOB, bytes not captured
>>    280   3B @0xc1070da4: OOB, bytes not captured
>>    281   5B @0xc1070da7: OOB, bytes not captured
>>    282   1B @0xc104b3dc: OOB, bytes not captured
>>    283   1B @0xc104b3dd: OOB, bytes not captured
>>    284   1B @0xc104b3de: OOB, bytes not captured
>>    285   1B @0xc104b3df: OOB, bytes not captured
>>    286   3B @0xc104b3e0: OOB, bytes not captured
>>    287   7B @0xc104b3e3: OOB, bytes not captured
>>    288   4B @0xc104b3ea: OOB, bytes not captured
>>    289   2B @0xc104b3ee: OOB, bytes not captured
>>    290   5B @0xc104b3ff: OOB, bytes not captured
>>    291   2B @0xc104b404: OOB, bytes not captured
>>    292   4B @0xc104b406: OOB, bytes not captured
>>    293   2B @0xc104b40a: OOB, bytes not captured
>>    294   5B @0xc104b410: OOB, bytes not captured
>>    295   4B @0xc104b415: OOB, bytes not captured
>>    296   6B @0xc104b419: OOB, bytes not captured
>>    297   2B @0xc104b41f: OOB, bytes not captured
>>    298   3B @0xc104b421: OOB, bytes not captured
>>    299   6B @0xc104b424: OOB, bytes not captured
>>    300   6B @0xc104b42a: OOB, bytes not captured
>>    301   6B @0xc104b430: OOB, bytes not captured
>>    302   2B @0xc104b436: OOB, bytes not captured
>>    303   3B @0xc104b438: OOB, bytes not captured
>>    304   3B @0xc104b43b: OOB, bytes not captured
>>    305   3B @0xc104b43e: OOB, bytes not captured
>>    306   2B @0xc104b441: OOB, bytes not captured
>>    307   5B @0xc104b443: OOB, bytes not captured
>>    308   3B @0xc104b448: OOB, bytes not captured
>>    309   2B @0xc104b44b: OOB, bytes not captured
>>    310   3B @0xc104b44d: OOB, bytes not captured
>>    311   3B @0xc104b450: OOB, bytes not captured
>>    312   2B @0xc104b453: OOB, bytes not captured
>>    313   3B @0xc104b455: OOB, bytes not captured
>>    314   6B @0xc104b458: OOB, bytes not captured
>>    315   2B @0xc104b45e: OOB, bytes not captured
>>    316   2B @0xc104b460: OOB, bytes not captured
>>    317   2B @0xc104b462: OOB, bytes not captured
>>    318   2B @0xc104b464: OOB, bytes not captured
>>    319   3B @0xc104b466: OOB, bytes not captured
>>    320   3B @0xc104b469: OOB, bytes not captured
>>    321   3B @0xc104b46c: OOB, bytes not captured
>>    322   3B @0xc104b46f: OOB, bytes not captured
>>    323   3B @0xc104b472: OOB, bytes not captured
>>    324   4B @0xc104b475: OOB, bytes not captured
>>    325   4B @0xc104b479: OOB, bytes not captured
>>    326   6B @0xc104b47d: OOB, bytes not captured
>>    327   6B @0xc104b483: OOB, bytes not captured
>>    328   4B @0xc104b489: OOB, bytes not captured
>>    329   3B @0xc104b48d: OOB, bytes not captured
>>    330   2B @0xc104b490: OOB, bytes not captured
>>    331   2B @0xc104b492: OOB, bytes not captured
>>    332   1B @0xc104b494: OOB, bytes not captured
>>    333   3B @0xc104b495: OOB, bytes not captured
>>    334   4B @0xc104b498: OOB, bytes not captured
>>    335   1B @0xc104b49c: OOB, bytes not captured
>>    336   2B @0xc104b49d: OOB, bytes not captured
>>    337   1B @0xc104b49f: OOB, bytes not captured
>>    338   4B @0xc104b4a0: OOB, bytes not captured
>>    339   5B @0xc104b4a4: OOB, bytes not captured
>>    340   1B @0xc1034364: OOB, bytes not captured
>>    341   2B @0xc1034365: OOB, bytes not captured
>>    342   4B @0xc1034367: OOB, bytes not captured
>>    343   2B @0xc103436b: OOB, bytes not captured
>>    344   4B @0xc103436d: OOB, bytes not captured
>>    345   2B @0xc1034371: OOB, bytes not captured
>>    346   3B @0xc103437c: OOB, bytes not captured
>>    347   2B @0xc103437f: OOB, bytes not captured
>>    348   2B @0xc1034381: OOB, bytes not captured
>>    349   5B @0xc1034383: OOB, bytes not captured
>>    350   2B @0xc1034388: OOB, bytes not captured
>>    351   5B @0xc1034373: OOB, bytes not captured
>>    352   3B @0xc1034378: OOB, bytes not captured
>>    353   1B @0xc103437b: OOB, bytes not captured
>>    354   3B @0xc103437c: OOB, bytes not captured
>>    355   2B @0xc103437f: OOB, bytes not captured
>>    356   2B @0xc103438a: OOB, bytes not captured
>>    357   2B @0xc1034395: OOB, bytes not captured
>>    358   2B @0xc1034397: OOB, bytes not captured
>>    359   2B @0xc1034399: OOB, bytes not captured
>>    360   3B @0xc103439b: OOB, bytes not captured
>>    361   1B @0xc103439e: OOB, bytes not captured
>>    362   1B @0xc103439f: OOB, bytes not captured
>>    363   3B @0xc104b4a9: OOB, bytes not captured
>>    364   1B @0xc104b4ac: OOB, bytes not captured
>>    365   1B @0xc104b4ad: OOB, bytes not captured
>>    366   1B @0xc104b4ae: OOB, bytes not captured
>>    367   1B @0xc104b4af: OOB, bytes not captured
>>    368   1B @0xc104b4b0: OOB, bytes not captured
>>    369   6B @0xc126e032: OOB, bytes not captured
>>    370   7B @0xc126e038: OOB, bytes not captured
>>    371   7B @0xc126e03f: OOB, bytes not captured
>>    372   7B @0xc126e046: OOB, bytes not captured
>>    373   5B @0xc126e04d: OOB, bytes not captured
>>    374   2B @0xbfba344a:  0  0             add [eax], al           
>>    375   2B @0xbfba344c:  0  0             add [eax], al           
>>    376   2B @0xbfba344e:  0  0             add [eax], al           
>>    377   2B @0xbfba3450:  0  0             add [eax], al           
>>    378   2B @0xbfba3452:  0  0             add [eax], al           
>>    379   2B @0xbfba3454:  0  0             add [eax], al           
>>    380   2B @0xbfba3456:  0  0             add [eax], al           
>>    381   2B @0xbfba3458:  0  0             add [eax], al           
>>    382   2B @0xbfba345a:  0  0             add [eax], al           
>>    383   2B @0xbfba345c:  0  0             add [eax], al           
>>    384   2B @0xbfba345e:  0  0             add [eax], al           
>>    385   2B @0xbfba3460:  0  0             add [eax], al           
>>    386   2B @0xbfba3462:  0  0             add [eax], al           
>>    387   2B @0xbfba3464:  0  0             add [eax], al           
>>    388   2B @0xbfba3466:  0  0             add [eax], al           
>>    389   2B @0xbfba3468:  0  0             add [eax], al           
>>    390   2B @0xbfba346a:  0  0             add [eax], al           
>>    391   2B @0xbfba346c:  0  0             add [eax], al           
>>    392   2B @0xbfba346e:  0  0             add [eax], al           
>>    393   2B @0xbfba3470:  0  0             add [eax], al           
>>    394   2B @0xbfba3472:  0  0             add [eax], al           
>>    395   2B @0xbfba3474:  0  0             add [eax], al           
>>    396   2B @0xbfba3476:  0  0             add [eax], al           
>>    397   2B @0xbfba3478:  0  0             add [eax], al           
>>    398   2B @0xbfba347a:  0  0             add [eax], al           
>>    399   2B @0xbfba347c:  0  0             add [eax], al           
>>    400   2B @0xbfba347e:  0  0             add [eax], al           
>>    401   2B @0xbfba3480:  0  0             add [eax], al           
>>    402   2B @0xbfba3482:  0  0             add [eax], al           
>>    403   2B @0xbfba3484:  0  0             add [eax], al           
>>    404   2B @0xbfba3486:  0  0             add [eax], al           
>>    405   2B @0xbfba3488:  0  0             add [eax], al           
>>    406   2B @0xbfba348a:  0  0             add [eax], al           
>>    407   2B @0xbfba348c:  0  0             add [eax], al           
>>    408   2B @0xbfba348e:  0  0             add [eax], al           
>>    409   2B @0xbfba3490:  0  0             add [eax], al           
>>    410   2B @0xbfba3492:  0  0             add [eax], al           
>>    411   2B @0xbfba3494:  0  0             add [eax], al           
>>    412   2B @0xbfba3496:  0  0             add [eax], al           
>>    413   2B @0xbfba3498:  0  0             add [eax], al           
>>    414   2B @0xbfba349a:  0  0             add [eax], al           
>>    415   2B @0xbfba349c:  0  0             add [eax], al           
>>    416   2B @0xbfba349e:  0  0             add [eax], al           
>>    417   2B @0xbfba34a0:  0  0             add [eax], al           
>>    418   2B @0xbfba34a2:  0  0             add [eax], al           
>>    419   2B @0xbfba34a4:  0  0             add [eax], al           
>>    420   2B @0xbfba34a6:  0  0             add [eax], al           
>>    421   2B @0xbfba34a8:  0  0             add [eax], al           
>>    422   2B @0xbfba34aa:  0  0             add [eax], al           
>>    423   2B @0xbfba34ac:  0  0             add [eax], al           
>>    424   2B @0xbfba34ae:  0  0             add [eax], al           
>>    425   2B @0xbfba34b0:  0  0             add [eax], al           
>>    426   2B @0xbfba34b2:  0  0             add [eax], al           
>>    427   2B @0xbfba34b4:  0  0             add [eax], al           
>>    428   2B @0xbfba34b6:  0  0             add [eax], al           
>>    429   2B @0xbfba34b8:  0  0             add [eax], al           
>>    430   2B @0xbfba34ba:  0  0             add [eax], al           
>>    431   2B @0xbfba34bc:  0  0             add [eax], al           
>>    432   2B @0xbfba34be:  0  0             add [eax], al           
>>    433   2B @0xbfba34c0:  0  0             add [eax], al           
>>    434   2B @0xbfba34c2:  0  0             add [eax], al           
>>    435   2B @0xbfba34c4:  0  0             add [eax], al           
>>    436   2B @0xbfba34c6:  0  0             add [eax], al           
>>    437   2B @0xbfba34c8:  0  0             add [eax], al           
>>    438   2B @0xbfba34ca:  0  0             add [eax], al           
>>    439   2B @0xbfba34cc:  0  0             add [eax], al           
>>    440   2B @0xbfba34ce:  0  0             add [eax], al           
>>    441   2B @0xbfba34d0:  0  0             add [eax], al           
>>    442   2B @0xbfba34d2:  0  0             add [eax], al           
>>    443   2B @0xbfba34d4:  0  0             add [eax], al           
>>    444   2B @0xbfba34d6:  0  0             add [eax], al           
>>    445   2B @0xbfba34d8:  0  0             add [eax], al           
>>    446   2B @0xbfba34da:  0  0             add [eax], al           
>>    447   2B @0xbfba34dc:  0  0             add [eax], al           
>>    448   2B @0xbfba34de:  0  0             add [eax], al           
>>    449   2B @0xbfba34e0:  0  0             add [eax], al           
>>    450   2B @0xbfba34e2:  0  0             add [eax], al           
>>    451   2B @0xbfba34e4:  0  0             add [eax], al           
>>    452   2B @0xbfba34e6:  0  0             add [eax], al           
>>    453   2B @0xbfba34e8:  0  0             add [eax], al           
>>    454   2B @0xbfba34ea:  0  0             add [eax], al           
>>    455   2B @0xbfba34ec:  0  0             add [eax], al           
>>    456   2B @0xbfba34ee:  0  0             add [eax], al           
>>    457   2B @0xbfba34f0:  0  0             add [eax], al           
>>    458   2B @0xbfba34f2:  0  0             add [eax], al           
>>    459   2B @0xbfba34f4:  0  0             add [eax], al           
>>    460   2B @0xbfba34f6:  0  0             add [eax], al           
>>    461   2B @0xbfba34f8:  0  0             add [eax], al           
>>    462   2B @0xbfba34fa:  0  0             add [eax], al           
>>    463   2B @0xbfba34fc:  0  0             add [eax], al           
>>    464   2B @0xbfba34fe:  0  0             add [eax], al           
>>    465   2B @0xbfba3500:  0  0             add [eax], al           
>>    466   2B @0xbfba3502:  0  0             add [eax], al           
>>    467   2B @0xbfba3504:  0  0             add [eax], al           
>>    468   2B @0xbfba3506:  0  0             add [eax], al           
>>    469   2B @0xbfba3508:  0  0             add [eax], al           
>>    470   2B @0xbfba350a:  0  0             add [eax], al           
>>    471   2B @0xbfba350c:  0  0             add [eax], al           
>>    472   2B @0xbfba350e:  0  0             add [eax], al           
>>    473   2B @0xbfba3510:  0  0             add [eax], al           
>>    474   2B @0xbfba3512:  0  0             add [eax], al           
>>    475   2B @0xbfba3514:  0  0             add [eax], al           
>>    476   2B @0xbfba3516:  0  0             add [eax], al           
>>    477   2B @0xbfba3518:  0  0             add [eax], al           
>>    478   2B @0xbfba351a:  0  0             add [eax], al           
>>    479   2B @0xbfba351c:  0  0             add [eax], al           
>>    480   2B @0xbfba351e:  0  0             add [eax], al           
>>    481   2B @0xbfba3520:  0  0             add [eax], al           
>>    482   2B @0xbfba3522:  0  0             add [eax], al           
>>    483   2B @0xbfba3524:  0  0             add [eax], al           
>>    484   2B @0xbfba3526:  0  0             add [eax], al           
>>    485   2B @0xbfba3528:  0  0             add [eax], al           
>>    486   2B @0xbfba352a:  0  0             add [eax], al           
>>    487   2B @0xbfba352c:  0  0             add [eax], al           
>>    488   2B @0xbfba352e:  0  0             add [eax], al           
>>    489   2B @0xbfba3530:  0  0             add [eax], al           
>>    490   2B @0xbfba3532:  0  0             add [eax], al           
>>    491   2B @0xbfba3534:  0  0             add [eax], al           
>>    492   2B @0xbfba3536:  0  0             add [eax], al           
>>    493   2B @0xbfba3538:  0  0             add [eax], al           
>>    494   2B @0xbfba353a:  0  0             add [eax], al           
>>    495   2B @0xbfba353c:  0  0             add [eax], al           
>>    496   2B @0xbfba353e:  0  0             add [eax], al           
>>    497   2B @0xbfba3540:  0  0             add [eax], al           
>>    498   2B @0xbfba3542:  0  0             add [eax], al           
>>    499   2B @0xbfba3544:  0  0             add [eax], al           
>>    500   2B @0xbfba3546:  0  0             add [eax], al           
>>    501   2B @0xbfba3548:  0  0             add [eax], al           
>>    502   2B @0xbfba354a:  0  0             add [eax], al           
>>    503   2B @0xbfba354c:  0  0             add [eax], al           
>>    504   2B @0xbfba354e:  0  0             add [eax], al           
>>    505   2B @0xbfba3550:  0  0             add [eax], al           
>>    506   2B @0xbfba3552:  0  0             add [eax], al           
>>    507   2B @0xbfba3554:  0  0             add [eax], al           
>>    508   2B @0xbfba3556:  0  0             add [eax], al           
>>    509   2B @0xbfba3558:  0  0             add [eax], al           
>>    510   2B @0xbfba355a:  0  0             add [eax], al           
>>    511   2B @0xbfba355c:  0  0             add [eax], al           
>>    512   2B @0xbfba355e:  0  0             add [eax], al           
>>    513   2B @0xbfba3560:  0  0             add [eax], al           
>>    514   2B @0xbfba3562:  0  0             add [eax], al           
>>    515   2B @0xbfba3564:  0  0             add [eax], al           
>>    516   2B @0xbfba3566:  0  0             add [eax], al           
>>    517   2B @0xbfba3568:  0  0             add [eax], al           
>>    518   2B @0xbfba356a:  0  0             add [eax], al           
>>    519   2B @0xbfba356c:  0  0             add [eax], al           
>>    520   2B @0xbfba356e:  0  0             add [eax], al           
>>    521   2B @0xbfba3570:  0  0             add [eax], al           
>>    522   1B @0xc1129e92: OOB, bytes not captured
>>    523   1B @0xc1129e93: OOB, bytes not captured
>>    524   2B @0xc1025930: OOB, bytes not captured
>>    525   2B @0xc1025932: OOB, bytes not captured
>>    526   2B @0xc1025934: OOB, bytes not captured
>>    527   2B @0xc1025936: OOB, bytes not captured
>>    528   4B @0xc1025938: OOB, bytes not captured
>>    529   4B @0xc102593c: OOB, bytes not captured
>>    530   3B @0xc1025940: OOB, bytes not captured
>>    531   2B @0xc1025943: OOB, bytes not captured
>>    532   2B @0xbfba3572:  0  0             add [eax], al           
>>    533   2B @0xbfba3574:  0  0             add [eax], al           
>>    534   2B @0xbfba3576:  0  0             add [eax], al           
>>    535   2B @0xbfba3578:  0  0             add [eax], al           
>>    536   2B @0xbfba357a:  0  0             add [eax], al           
>>    537   2B @0xbfba357c:  0  0             add [eax], al           
>>    538   2B @0xbfba357e:  0  0             add [eax], al           
>>    539   2B @0xbfba3580: eb 13             jmp 0x15                
>>    540   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    541   1B @0xbfba3582: 59                pop ecx                 
>>    542   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    543   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    544   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    545   1B @0xbfba3589: 43                inc ebx                 
>>    546   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    547   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    548   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (405/410) = 0.987805
>>    Mem_map start_addr: 0xbfba3400, length: 1024B, exec'ed bytes: 405, range: 410B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3400 00000000 00000000 00000000 00000000  ................
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 5
>>    Printing success 6
>> Success densities, overlay: 0.987624; avg: 0.987624
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3406:  0  0             add [eax], al           
>>      2   2B @0xbfba3408:  0  0             add [eax], al           
>>      3   2B @0xbfba340a:  0  0             add [eax], al           
>>      4   2B @0xbfba340c:  0  0             add [eax], al           
>>      5   2B @0xbfba340e:  0  0             add [eax], al           
>>      6   2B @0xbfba3410:  0  0             add [eax], al           
>>      7   2B @0xbfba3412:  0  0             add [eax], al           
>>      8   2B @0xbfba3414:  0  0             add [eax], al           
>>      9   2B @0xbfba3416:  0  0             add [eax], al           
>>     10   2B @0xbfba3418:  0  0             add [eax], al           
>>     11   2B @0xbfba341a:  0  0             add [eax], al           
>>     12   2B @0xbfba341c:  0  0             add [eax], al           
>>     13   2B @0xbfba341e:  0  0             add [eax], al           
>>     14   2B @0xbfba3420:  0  0             add [eax], al           
>>     15   2B @0xbfba3422:  0  0             add [eax], al           
>>     16   2B @0xbfba3424:  0  0             add [eax], al           
>>     17   2B @0xbfba3426:  0  0             add [eax], al           
>>     18   2B @0xbfba3428:  0  0             add [eax], al           
>>     19   2B @0xbfba342a:  0  0             add [eax], al           
>>     20   2B @0xbfba342c:  0  0             add [eax], al           
>>     21   2B @0xbfba342e:  0  0             add [eax], al           
>>     22   2B @0xbfba3430:  0  0             add [eax], al           
>>     23   2B @0xbfba3432:  0  0             add [eax], al           
>>     24   2B @0xbfba3434:  0  0             add [eax], al           
>>     25   2B @0xbfba3436:  0  0             add [eax], al           
>>     26   2B @0xbfba3438:  0  0             add [eax], al           
>>     27   2B @0xbfba343a:  0  0             add [eax], al           
>>     28   2B @0xbfba343c:  0  0             add [eax], al           
>>     29   2B @0xbfba343e:  0  0             add [eax], al           
>>     30   2B @0xbfba3440:  0  0             add [eax], al           
>>     31   2B @0xbfba3442:  0  0             add [eax], al           
>>     32   2B @0xbfba3444:  0  0             add [eax], al           
>>     33   2B @0xbfba3446:  0  0             add [eax], al           
>>     34   2B @0xbfba3448:  0  0             add [eax], al           
>>     35   2B @0xbfba344a:  0  0             add [eax], al           
>>     36   2B @0xbfba344c:  0  0             add [eax], al           
>>     37   2B @0xbfba344e:  0  0             add [eax], al           
>>     38   3B @0xc10251b1: OOB, bytes not captured
>>     39   6B @0xc10251b4: OOB, bytes not captured
>>     40   5B @0xc1003072: OOB, bytes not captured
>>     41   3B @0xc10aec8f: OOB, bytes not captured
>>     42   2B @0xc10aec92: OOB, bytes not captured
>>     43   2B @0xc10aec94: OOB, bytes not captured
>>     44   1B @0xc10aec96: OOB, bytes not captured
>>     45   4B @0xc10aec97: OOB, bytes not captured
>>     46   5B @0xc10aec9b: OOB, bytes not captured
>>     47   1B @0xc10add05: OOB, bytes not captured
>>     48   2B @0xc10add06: OOB, bytes not captured
>>     49   1B @0xc10add08: OOB, bytes not captured
>>     50   1B @0xc10add09: OOB, bytes not captured
>>     51   2B @0xc10add0a: OOB, bytes not captured
>>     52   1B @0xc10add0c: OOB, bytes not captured
>>     53   2B @0xc10add0d: OOB, bytes not captured
>>     54   3B @0xc10add0f: OOB, bytes not captured
>>     55   4B @0xc10add12: OOB, bytes not captured
>>     56   4B @0xc10add16: OOB, bytes not captured
>>     57   4B @0xc10add1a: OOB, bytes not captured
>>     58   3B @0xc10add1e: OOB, bytes not captured
>>     59   2B @0xc10add21: OOB, bytes not captured
>>     60   5B @0xc10add2a: OOB, bytes not captured
>>     61   2B @0xc10add2f: OOB, bytes not captured
>>     62   2B @0xc10add31: OOB, bytes not captured
>>     63   2B @0xc10add33: OOB, bytes not captured
>>     64   3B @0xc10add35: OOB, bytes not captured
>>     65   2B @0xc10add38: OOB, bytes not captured
>>     66   3B @0xc10add3a: OOB, bytes not captured
>>     67   3B @0xc10add3d: OOB, bytes not captured
>>     68   3B @0xc10add40: OOB, bytes not captured
>>     69   3B @0xc10add43: OOB, bytes not captured
>>     70   3B @0xc10add46: OOB, bytes not captured
>>     71   1B @0xc10add49: OOB, bytes not captured
>>     72   3B @0xc10add4a: OOB, bytes not captured
>>     73   4B @0xc10add4d: OOB, bytes not captured
>>     74   2B @0xc10add51: OOB, bytes not captured
>>     75   3B @0xc10add53: OOB, bytes not captured
>>     76   2B @0xc10add56: OOB, bytes not captured
>>     77   2B @0xc10add58: OOB, bytes not captured
>>     78   2B @0xc10add5a: OOB, bytes not captured
>>     79   3B @0xc10add5c: OOB, bytes not captured
>>     80   5B @0xc10add5f: OOB, bytes not captured
>>     81   2B @0xc10add64: OOB, bytes not captured
>>     82   5B @0xc10add66: OOB, bytes not captured
>>     83   1B @0xc10ad1eb: OOB, bytes not captured
>>     84   2B @0xc10ad1ec: OOB, bytes not captured
>>     85   1B @0xc10ad1ee: OOB, bytes not captured
>>     86   2B @0xc10ad1ef: OOB, bytes not captured
>>     87   1B @0xc10ad1f1: OOB, bytes not captured
>>     88   2B @0xc10ad1f2: OOB, bytes not captured
>>     89   5B @0xc10ad1f4: OOB, bytes not captured
>>     90   3B @0xc10ad1f9: OOB, bytes not captured
>>     91   3B @0xc10ad1fc: OOB, bytes not captured
>>     92   2B @0xc10ad1ff: OOB, bytes not captured
>>     93   3B @0xc10ad201: OOB, bytes not captured
>>     94   2B @0xc10ad204: OOB, bytes not captured
>>     95   3B @0xc10ad206: OOB, bytes not captured
>>     96   3B @0xc10ad209: OOB, bytes not captured
>>     97   3B @0xc10ad20c: OOB, bytes not captured
>>     98   3B @0xc10ad20f: OOB, bytes not captured
>>     99   2B @0xc10ad212: OOB, bytes not captured
>>    100   2B @0xc10ad214: OOB, bytes not captured
>>    101   2B @0xc10ad225: OOB, bytes not captured
>>    102   1B @0xc10ad227: OOB, bytes not captured
>>    103   1B @0xc10ad228: OOB, bytes not captured
>>    104   1B @0xc10ad229: OOB, bytes not captured
>>    105   1B @0xc10ad22a: OOB, bytes not captured
>>    106   4B @0xc10add6b: OOB, bytes not captured
>>    107   1B @0xc10add6f: OOB, bytes not captured
>>    108   1B @0xc10add70: OOB, bytes not captured
>>    109   1B @0xc10add71: OOB, bytes not captured
>>    110   1B @0xc10add72: OOB, bytes not captured
>>    111   1B @0xc10add73: OOB, bytes not captured
>>    112   1B @0xc10add74: OOB, bytes not captured
>>    113   1B @0xc10add75: OOB, bytes not captured
>>    114   1B @0xc10aeca0: OOB, bytes not captured
>>    115   1B @0xc10aeca1: OOB, bytes not captured
>>    116   2B @0xc10aeca2: OOB, bytes not captured
>>    117   1B @0xc10aeca4: OOB, bytes not captured
>>    118   1B @0xc10aeca5: OOB, bytes not captured
>>    119   4B @0xc112888b: OOB, bytes not captured
>>    120   2B @0xc112888f: OOB, bytes not captured
>>    121   2B @0xc10442b6: OOB, bytes not captured
>>    122   5B @0xc10442b8: OOB, bytes not captured
>>    123   3B @0xc10442bd: OOB, bytes not captured
>>    124   5B @0xc10442c0: OOB, bytes not captured
>>    125   1B @0xc10442c5: OOB, bytes not captured
>>    126   2B @0xc10442c6: OOB, bytes not captured
>>    127   5B @0xc10442c8: OOB, bytes not captured
>>    128   1B @0xc104435b: OOB, bytes not captured
>>    129   2B @0xc104435c: OOB, bytes not captured
>>    130   1B @0xc104435e: OOB, bytes not captured
>>    131   2B @0xc104435f: OOB, bytes not captured
>>    132   1B @0xc1044361: OOB, bytes not captured
>>    133   4B @0xc1044362: OOB, bytes not captured
>>    134   2B @0xc1044366: OOB, bytes not captured
>>    135   3B @0xc1044368: OOB, bytes not captured
>>    136   3B @0xc104436b: OOB, bytes not captured
>>    137   2B @0xc104436e: OOB, bytes not captured
>>    138   2B @0xc1044370: OOB, bytes not captured
>>    139   3B @0xc1044372: OOB, bytes not captured
>>    140   3B @0xc1044375: OOB, bytes not captured
>>    141   2B @0xc1044378: OOB, bytes not captured
>>    142   3B @0xc104437a: OOB, bytes not captured
>>    143   2B @0xc104437d: OOB, bytes not captured
>>    144   2B @0xc104437f: OOB, bytes not captured
>>    145   2B @0xc1044381: OOB, bytes not captured
>>    146   2B @0xc1044383: OOB, bytes not captured
>>    147   2B @0xc1044385: OOB, bytes not captured
>>    148   2B @0xc1044387: OOB, bytes not captured
>>    149   1B @0xc1044389: OOB, bytes not captured
>>    150   1B @0xc104438a: OOB, bytes not captured
>>    151   1B @0xc104438b: OOB, bytes not captured
>>    152   5B @0xc104438c: OOB, bytes not captured
>>    153   4B @0xc102d4f1: OOB, bytes not captured
>>    154   2B @0xc102d4f5: OOB, bytes not captured
>>    155   5B @0xc102d4f7: OOB, bytes not captured
>>    156   4B @0xc102d4fc: OOB, bytes not captured
>>    157   3B @0xc102d500: OOB, bytes not captured
>>    158   2B @0xc102d503: OOB, bytes not captured
>>    159   2B @0xc102d505: OOB, bytes not captured
>>    160   2B @0xc102d507: OOB, bytes not captured
>>    161   6B @0xc102d509: OOB, bytes not captured
>>    162   2B @0xc102d50f: OOB, bytes not captured
>>    163   7B @0xc10252ff: OOB, bytes not captured
>>    164   6B @0xc1025306: OOB, bytes not captured
>>    165   7B @0xc102530c: OOB, bytes not captured
>>    166   2B @0xc1025313: OOB, bytes not captured
>>    167   6B @0xc1025315: OOB, bytes not captured
>>    168   2B @0xc102531b: OOB, bytes not captured
>>    169   2B @0xc102531d: OOB, bytes not captured
>>    170   3B @0xc1025325: OOB, bytes not captured
>>    171   2B @0xc1025328: OOB, bytes not captured
>>    172   3B @0xc1025349: OOB, bytes not captured
>>    173   2B @0xc102534c: OOB, bytes not captured
>>    174   3B @0xc1025399: OOB, bytes not captured
>>    175   6B @0xc102539c: OOB, bytes not captured
>>    176   2B @0xc10253a2: OOB, bytes not captured
>>    177   2B @0xc10253a4: OOB, bytes not captured
>>    178   2B @0xc10253a6: OOB, bytes not captured
>>    179   2B @0xc10253ac: OOB, bytes not captured
>>    180   2B @0xc10253ae: OOB, bytes not captured
>>    181   3B @0xc10253a8: OOB, bytes not captured
>>    182   1B @0xc10253ab: OOB, bytes not captured
>>    183   2B @0xc10253ac: OOB, bytes not captured
>>    184   2B @0xc10253ae: OOB, bytes not captured
>>    185   2B @0xc10253b0: OOB, bytes not captured
>>    186   2B @0xc10253b2: OOB, bytes not captured
>>    187   2B @0xc10253b4: OOB, bytes not captured
>>    188   2B @0xc10253ba: OOB, bytes not captured
>>    189   2B @0xc10253bc: OOB, bytes not captured
>>    190   3B @0xc10253b6: OOB, bytes not captured
>>    191   1B @0xc10253b9: OOB, bytes not captured
>>    192   2B @0xc10253ba: OOB, bytes not captured
>>    193   2B @0xc10253bc: OOB, bytes not captured
>>    194   2B @0xc10253be: OOB, bytes not captured
>>    195   2B @0xc10253c4: OOB, bytes not captured
>>    196   2B @0xc10253c6: OOB, bytes not captured
>>    197   2B @0xc10253c8: OOB, bytes not captured
>>    198   2B @0xc10253ce: OOB, bytes not captured
>>    199   2B @0xc10253d0: OOB, bytes not captured
>>    200   3B @0xc10253d2: OOB, bytes not captured
>>    201   3B @0xc10253d5: OOB, bytes not captured
>>    202   2B @0xc10253d8: OOB, bytes not captured
>>    203   2B @0xc10253da: OOB, bytes not captured
>>    204   2B @0xc10253dc: OOB, bytes not captured
>>    205   2B @0xc10253e2: OOB, bytes not captured
>>    206   2B @0xc10253e4: OOB, bytes not captured
>>    207   5B @0xc10253e6: OOB, bytes not captured
>>    208   1B @0xc101fff1: OOB, bytes not captured
>>    209   1B @0xc101fff2: OOB, bytes not captured
>>    210   1B @0xc101fff3: OOB, bytes not captured
>>    211   1B @0xc101fff4: OOB, bytes not captured
>>    212   3B @0xc101fff5: OOB, bytes not captured
>>    213   4B @0xc101fff8: OOB, bytes not captured
>>    214   2B @0xc101fffc: OOB, bytes not captured
>>    215   4B @0xc101fffe: OOB, bytes not captured
>>    216   4B @0xc1020002: OOB, bytes not captured
>>    217   3B @0xc1020006: OOB, bytes not captured
>>    218   3B @0xc1020009: OOB, bytes not captured
>>    219   4B @0xc102000c: OOB, bytes not captured
>>    220   4B @0xc1020010: OOB, bytes not captured
>>    221   3B @0xc1020014: OOB, bytes not captured
>>    222   3B @0xc1020017: OOB, bytes not captured
>>    223   4B @0xc102001a: OOB, bytes not captured
>>    224   4B @0xc102001e: OOB, bytes not captured
>>    225   5B @0xc1020022: OOB, bytes not captured
>>    226   2B @0xc1020027: OOB, bytes not captured
>>    227   2B @0xc1020029: OOB, bytes not captured
>>    228   5B @0xc102002b: OOB, bytes not captured
>>    229   2B @0xc1020030: OOB, bytes not captured
>>    230   4B @0xc102003a: OOB, bytes not captured
>>    231   6B @0xc102003e: OOB, bytes not captured
>>    232   3B @0xc1020044: OOB, bytes not captured
>>    233   4B @0xc1020047: OOB, bytes not captured
>>    234   2B @0xc102004b: OOB, bytes not captured
>>    235   7B @0xc102004d: OOB, bytes not captured
>>    236   2B @0xc1020054: OOB, bytes not captured
>>    237   4B @0xc1020056: OOB, bytes not captured
>>    238   3B @0xc102005a: OOB, bytes not captured
>>    239   3B @0xc102005d: OOB, bytes not captured
>>    240   3B @0xc1020060: OOB, bytes not captured
>>    241   3B @0xc1020063: OOB, bytes not captured
>>    242   3B @0xc1020066: OOB, bytes not captured
>>    243   3B @0xc1020069: OOB, bytes not captured
>>    244   3B @0xc102006c: OOB, bytes not captured
>>    245   3B @0xc102006f: OOB, bytes not captured
>>    246   2B @0xc1020072: OOB, bytes not captured
>>    247   2B @0xc1020074: OOB, bytes not captured
>>    248   2B @0xc1020076: OOB, bytes not captured
>>    249   4B @0xc1020078: OOB, bytes not captured
>>    250   3B @0xc102007c: OOB, bytes not captured
>>    251   4B @0xc102007f: OOB, bytes not captured
>>    252   4B @0xc1020083: OOB, bytes not captured
>>    253   2B @0xc1020087: OOB, bytes not captured
>>    254   2B @0xc1020089: OOB, bytes not captured
>>    255   2B @0xc102008b: OOB, bytes not captured
>>    256   2B @0xc102008d: OOB, bytes not captured
>>    257   2B @0xc102008f: OOB, bytes not captured
>>    258   2B @0xc1020091: OOB, bytes not captured
>>    259   2B @0xc1020099: OOB, bytes not captured
>>    260   2B @0xc102009b: OOB, bytes not captured
>>    261   3B @0xc102009d: OOB, bytes not captured
>>    262   2B @0xc10200a0: OOB, bytes not captured
>>    263   2B @0xc10200a2: OOB, bytes not captured
>>    264   2B @0xc10200a4: OOB, bytes not captured
>>    265   2B @0xc10200a6: OOB, bytes not captured
>>    266   2B @0xc10200a8: OOB, bytes not captured
>>    267   2B @0xc10200aa: OOB, bytes not captured
>>    268   2B @0xc10200ac: OOB, bytes not captured
>>    269   7B @0xc10200ae: OOB, bytes not captured
>>    270   2B @0xc10200b5: OOB, bytes not captured
>>    271   4B @0xc10200b7: OOB, bytes not captured
>>    272   6B @0xc10200bb: OOB, bytes not captured
>>    273   2B @0xc10200c1: OOB, bytes not captured
>>    274   2B @0xc10200c3: OOB, bytes not captured
>>    275   2B @0xc10200c5: OOB, bytes not captured
>>    276   5B @0xc10200dc: OOB, bytes not captured
>>    277   5B @0xc10200e1: OOB, bytes not captured
>>    278   2B @0xc10200e6: OOB, bytes not captured
>>    279   2B @0xc10200e8: OOB, bytes not captured
>>    280   4B @0xc10200ea: OOB, bytes not captured
>>    281   2B @0xc10200ee: OOB, bytes not captured
>>    282   3B @0xc10200f2: OOB, bytes not captured
>>    283   1B @0xc10200f5: OOB, bytes not captured
>>    284   1B @0xc10200f6: OOB, bytes not captured
>>    285   1B @0xc10200f7: OOB, bytes not captured
>>    286   1B @0xc10200f8: OOB, bytes not captured
>>    287   1B @0xc10200f9: OOB, bytes not captured
>>    288   1B @0xc10253eb: OOB, bytes not captured
>>    289   2B @0xc10253ec: OOB, bytes not captured
>>    290   2B @0xc10253ee: OOB, bytes not captured
>>    291   5B @0xc10253f0: OOB, bytes not captured
>>    292   4B @0xc10253f5: OOB, bytes not captured
>>    293   2B @0xc10253f9: OOB, bytes not captured
>>    294   4B @0xc10253fb: OOB, bytes not captured
>>    295   6B @0xc10253ff: OOB, bytes not captured
>>    296   2B @0xc1025405: OOB, bytes not captured
>>    297   8B @0xc1025407: OOB, bytes not captured
>>    298   2B @0xc102540f: OOB, bytes not captured
>>    299   5B @0xc1025411: OOB, bytes not captured
>>    300   2B @0xc1025416: OOB, bytes not captured
>>    301   1B @0xc10442cd: OOB, bytes not captured
>>    302   1B @0xc10442ce: OOB, bytes not captured
>>    303   1B @0xc10442cf: OOB, bytes not captured
>>    304   1B @0xc10442d0: OOB, bytes not captured
>>    305   1B @0xc10442d1: OOB, bytes not captured
>>    306   7B @0xc126e052: OOB, bytes not captured
>>    307   7B @0xc126e059: OOB, bytes not captured
>>    308   7B @0xc126e060: OOB, bytes not captured
>>    309   2B @0xc126e067: OOB, bytes not captured
>>    310   5B @0xc126e069: OOB, bytes not captured
>>    311   1B @0xc1070e4a: OOB, bytes not captured
>>    312   6B @0xc1070e4b: OOB, bytes not captured
>>    313   6B @0xc1070e51: OOB, bytes not captured
>>    314   4B @0xc1070e57: OOB, bytes not captured
>>    315   3B @0xc1070e5b: OOB, bytes not captured
>>    316   3B @0xc1070e5e: OOB, bytes not captured
>>    317   2B @0xc1070e61: OOB, bytes not captured
>>    318   3B @0xc1070e6b: OOB, bytes not captured
>>    319   3B @0xc1070e6e: OOB, bytes not captured
>>    320   1B @0xc1070e71: OOB, bytes not captured
>>    321   2B @0xc1070e72: OOB, bytes not captured
>>    322   5B @0xc1070e74: OOB, bytes not captured
>>    323   1B @0xc1070dac: OOB, bytes not captured
>>    324   2B @0xc1070dad: OOB, bytes not captured
>>    325   1B @0xc1070daf: OOB, bytes not captured
>>    326   1B @0xc1070db0: OOB, bytes not captured
>>    327   2B @0xc1070db1: OOB, bytes not captured
>>    328   1B @0xc1070db3: OOB, bytes not captured
>>    329   2B @0xc1070db4: OOB, bytes not captured
>>    330   2B @0xc1070db6: OOB, bytes not captured
>>    331   3B @0xc1070db8: OOB, bytes not captured
>>    332   5B @0xc1070dbb: OOB, bytes not captured
>>    333   3B @0xc1070dc0: OOB, bytes not captured
>>    334   3B @0xc1070dc3: OOB, bytes not captured
>>    335   2B @0xc1070dc6: OOB, bytes not captured
>>    336   2B @0xc1070dc8: OOB, bytes not captured
>>    337   2B @0xc1070dca: OOB, bytes not captured
>>    338   3B @0xc1070dcc: OOB, bytes not captured
>>    339   2B @0xc1070dcf: OOB, bytes not captured
>>    340   1B @0xc1070dd1: OOB, bytes not captured
>>    341   1B @0xc1070dd2: OOB, bytes not captured
>>    342   5B @0xc1070dd3: OOB, bytes not captured
>>    343   5B @0xc1070dd8: OOB, bytes not captured
>>    344   4B @0xc1070ddd: OOB, bytes not captured
>>    345   2B @0xc1070de1: OOB, bytes not captured
>>    346   2B @0xc1070de3: OOB, bytes not captured
>>    347   4B @0xc1070de5: OOB, bytes not captured
>>    348   2B @0xc1070de9: OOB, bytes not captured
>>    349   1B @0xc1070deb: OOB, bytes not captured
>>    350   1B @0xc1070dec: OOB, bytes not captured
>>    351   1B @0xc1070ded: OOB, bytes not captured
>>    352   2B @0xc1070dee: OOB, bytes not captured
>>    353   2B @0xc1070df0: OOB, bytes not captured
>>    354   2B @0xc1070df2: OOB, bytes not captured
>>    355   2B @0xc1070df4: OOB, bytes not captured
>>    356   7B @0xc1070df6: OOB, bytes not captured
>>    357   6B @0xc1070dfd: OOB, bytes not captured
>>    358   5B @0xc1070e03: OOB, bytes not captured
>>    359   3B @0xc1070e08: OOB, bytes not captured
>>    360   3B @0xc1070e0b: OOB, bytes not captured
>>    361   2B @0xc1070e0e: OOB, bytes not captured
>>    362   4B @0xc1070e10: OOB, bytes not captured
>>    363   2B @0xc1070e14: OOB, bytes not captured
>>    364   6B @0xc1070e16: OOB, bytes not captured
>>    365   5B @0xc1070e1c: OOB, bytes not captured
>>    366   1B @0xc1070e21: OOB, bytes not captured
>>    367   1B @0xc1070e22: OOB, bytes not captured
>>    368   1B @0xc1070e23: OOB, bytes not captured
>>    369   1B @0xc1070e24: OOB, bytes not captured
>>    370   1B @0xc1070e25: OOB, bytes not captured
>>    371   1B @0xc1070e26: OOB, bytes not captured
>>    372   1B @0xc1070e27: OOB, bytes not captured
>>    373   1B @0xc1070e79: OOB, bytes not captured
>>    374   1B @0xc1070e7a: OOB, bytes not captured
>>    375   1B @0xc1070e7b: OOB, bytes not captured
>>    376   6B @0xc126e06e: OOB, bytes not captured
>>    377   7B @0xc126e074: OOB, bytes not captured
>>    378   2B @0xc126e07b: OOB, bytes not captured
>>    379   6B @0xc126e07d: OOB, bytes not captured
>>    380   4B @0xc126e083: OOB, bytes not captured
>>    381   1B @0xc126e087: OOB, bytes not captured
>>    382   1B @0xc126e088: OOB, bytes not captured
>>    383   1B @0xc126e089: OOB, bytes not captured
>>    384   1B @0xc126e08a: OOB, bytes not captured
>>    385   2B @0xc10cec3e: OOB, bytes not captured
>>    386   1B @0xc10cec40: OOB, bytes not captured
>>    387   2B @0xc126e4d9: OOB, bytes not captured
>>    388   2B @0xc126e4db: OOB, bytes not captured
>>    389   3B @0xc126e4dd: OOB, bytes not captured
>>    390   3B @0xc126e4e0: OOB, bytes not captured
>>    391   2B @0xc126e4e3: OOB, bytes not captured
>>    392   2B @0xc126e4e5: OOB, bytes not captured
>>    393   2B @0xc126e4e7: OOB, bytes not captured
>>    394   2B @0xc126e4ed: OOB, bytes not captured
>>    395   2B @0xc126e4ef: OOB, bytes not captured
>>    396   5B @0xc126e4f1: OOB, bytes not captured
>>    397   2B @0xc126e4f6: OOB, bytes not captured
>>    398   1B @0xc126e4f8: OOB, bytes not captured
>>    399   1B @0xc126e4f9: OOB, bytes not captured
>>    400   1B @0xc126e4fa: OOB, bytes not captured
>>    401   1B @0xc126e4fb: OOB, bytes not captured
>>    402   1B @0xc126e4fc: OOB, bytes not captured
>>    403   1B @0xc126e4fd: OOB, bytes not captured
>>    404   3B @0xc126e5b3: OOB, bytes not captured
>>    405   1B @0xc126e5b6: OOB, bytes not captured
>>    406   1B @0xc126e5b7: OOB, bytes not captured
>>    407   1B @0xc126e5b8: OOB, bytes not captured
>>    408   1B @0xc126e5b9: OOB, bytes not captured
>>    409   1B @0xc126e5ba: OOB, bytes not captured
>>    410   1B @0xc10cebb4: OOB, bytes not captured
>>    411   1B @0xc10cebb5: OOB, bytes not captured
>>    412   5B @0xc8a3626a: OOB, bytes not captured
>>    413   4B @0xc8a3630d: OOB, bytes not captured
>>    414   3B @0xc8a36311: OOB, bytes not captured
>>    415   2B @0xc8a36314: OOB, bytes not captured
>>    416   6B @0xc8a36316: OOB, bytes not captured
>>    417   5B @0xc8a3626f: OOB, bytes not captured
>>    418   2B @0xc8a36274: OOB, bytes not captured
>>    419   6B @0xc8a36276: OOB, bytes not captured
>>    420   4B @0xc8a3627c: OOB, bytes not captured
>>    421   3B @0xc8a36280: OOB, bytes not captured
>>    422   3B @0xc8a36283: OOB, bytes not captured
>>    423   3B @0xc8a36286: OOB, bytes not captured
>>    424   4B @0xc8a36289: OOB, bytes not captured
>>    425   5B @0xc8a3628d: OOB, bytes not captured
>>    426   4B @0xc8a36292: OOB, bytes not captured
>>    427   2B @0xc8a36296: OOB, bytes not captured
>>    428   5B @0xc8a36298: OOB, bytes not captured
>>    429   1B @0xc8a340e1: OOB, bytes not captured
>>    430   2B @0xc8a340e2: OOB, bytes not captured
>>    431   1B @0xc8a340e4: OOB, bytes not captured
>>    432   2B @0xc8a340e5: OOB, bytes not captured
>>    433   1B @0xc8a340e7: OOB, bytes not captured
>>    434   2B @0xc8a340e8: OOB, bytes not captured
>>    435   2B @0xc8a340ea: OOB, bytes not captured
>>    436   5B @0xc8a340f7: OOB, bytes not captured
>>    437   2B @0xc8a340fc: OOB, bytes not captured
>>    438   2B @0xc8a340fe: OOB, bytes not captured
>>    439   2B @0xc8a34100: OOB, bytes not captured
>>    440   6B @0xc8a34102: OOB, bytes not captured
>>    441   2B @0xc8a34108: OOB, bytes not captured
>>    442   5B @0xc8a3410a: OOB, bytes not captured
>>    443   2B @0xc8a3410f: OOB, bytes not captured
>>    444   5B @0xc8a34111: OOB, bytes not captured
>>    445   1B @0xc8a340d0: OOB, bytes not captured
>>    446   2B @0xc8a340d1: OOB, bytes not captured
>>    447   5B @0xc8a340d3: OOB, bytes not captured
>>    448   1B @0xc8a34001: OOB, bytes not captured
>>    449   1B @0xc8a34002: OOB, bytes not captured
>>    450   2B @0xc8a34003: OOB, bytes not captured
>>    451   1B @0xc8a34005: OOB, bytes not captured
>>    452   2B @0xc8a34006: OOB, bytes not captured
>>    453   2B @0xc8a34008: OOB, bytes not captured
>>    454   5B @0xc8a3400a: OOB, bytes not captured
>>    455   2B @0xc8a3400f: OOB, bytes not captured
>>    456   3B @0xc8a34015: OOB, bytes not captured
>>    457   2B @0xc8a34018: OOB, bytes not captured
>>    458   2B @0xc8a3401a: OOB, bytes not captured
>>    459   2B @0xc8a3401c: OOB, bytes not captured
>>    460   6B @0xc8a3401e: OOB, bytes not captured
>>    461   2B @0xc8a34024: OOB, bytes not captured
>>    462   3B @0xc8a34026: OOB, bytes not captured
>>    463   2B @0xc8a34029: OOB, bytes not captured
>>    464   2B @0xc8a3402b: OOB, bytes not captured
>>    465   3B @0xc8a34031: OOB, bytes not captured
>>    466   3B @0xc8a34034: OOB, bytes not captured
>>    467   2B @0xc8a34037: OOB, bytes not captured
>>    468   2B @0xc8a3403d: OOB, bytes not captured
>>    469   6B @0xc8a3403f: OOB, bytes not captured
>>    470   2B @0xc8a34045: OOB, bytes not captured
>>    471   2B @0xc8a34047: OOB, bytes not captured
>>    472   2B @0xc8a3404d: OOB, bytes not captured
>>    473   3B @0xc8a3404f: OOB, bytes not captured
>>    474   2B @0xc8a34052: OOB, bytes not captured
>>    475   7B @0xc8a34054: OOB, bytes not captured
>>    476   3B @0xc8a34077: OOB, bytes not captured
>>    477   2B @0xc8a3407a: OOB, bytes not captured
>>    478   2B @0xc8a3408e: OOB, bytes not captured
>>    479   2B @0xc8a34090: OOB, bytes not captured
>>    480   3B @0xc8a3409e: OOB, bytes not captured
>>    481   3B @0xc8a340a1: OOB, bytes not captured
>>    482   3B @0xc8a340a4: OOB, bytes not captured
>>    483   3B @0xc8a340a7: OOB, bytes not captured
>>    484   3B @0xc8a340aa: OOB, bytes not captured
>>    485   3B @0xc8a340ad: OOB, bytes not captured
>>    486   7B @0xc8a340b0: OOB, bytes not captured
>>    487   5B @0xc8a340b7: OOB, bytes not captured
>>    488   2B @0xc8a340bc: OOB, bytes not captured
>>    489   2B @0xc8a340be: OOB, bytes not captured
>>    490   2B @0xc8a340c0: OOB, bytes not captured
>>    491   1B @0xc8a340cc: OOB, bytes not captured
>>    492   1B @0xc8a340cd: OOB, bytes not captured
>>    493   1B @0xc8a340ce: OOB, bytes not captured
>>    494   1B @0xc8a340cf: OOB, bytes not captured
>>    495   7B @0xc8a340d8: OOB, bytes not captured
>>    496   1B @0xc8a340df: OOB, bytes not captured
>>    497   1B @0xc8a340e0: OOB, bytes not captured
>>    498   6B @0xc8a34116: OOB, bytes not captured
>>    499   2B @0xc8a3411c: OOB, bytes not captured
>>    500   3B @0xc8a3411e: OOB, bytes not captured
>>    501   5B @0xc8a34121: OOB, bytes not captured
>>    502   1B @0xc8a34126: OOB, bytes not captured
>>    503   1B @0xc8a34127: OOB, bytes not captured
>>    504   1B @0xc8a34128: OOB, bytes not captured
>>    505   1B @0xc8a34129: OOB, bytes not captured
>>    506   2B @0xc8a3629d: OOB, bytes not captured
>>    507   5B @0xc8a3629f: OOB, bytes not captured
>>    508   1B @0xc8a37f85: OOB, bytes not captured
>>    509   2B @0xc8a37f86: OOB, bytes not captured
>>    510   2B @0xc8a37f88: OOB, bytes not captured
>>    511   2B @0xc8a37f8a: OOB, bytes not captured
>>    512   5B @0xc8a37f97: OOB, bytes not captured
>>    513   2B @0xc8a37f9c: OOB, bytes not captured
>>    514   2B @0xc8a37f9e: OOB, bytes not captured
>>    515   2B @0xc8a37fa0: OOB, bytes not captured
>>    516   3B @0xc8a37fa2: OOB, bytes not captured
>>    517   2B @0xc8a37fa5: OOB, bytes not captured
>>    518   2B @0xc8a37fa7: OOB, bytes not captured
>>    519   1B @0xc8a37fad: OOB, bytes not captured
>>    520   2B @0xc8a37fae: OOB, bytes not captured
>>    521   3B @0xc8a37fb0: OOB, bytes not captured
>>    522   2B @0xc8a37fb3: OOB, bytes not captured
>>    523   4B @0xc8a37fb5: OOB, bytes not captured
>>    524   2B @0xc8a37fb9: OOB, bytes not captured
>>    525   2B @0xc8a37fbb: OOB, bytes not captured
>>    526   5B @0xc8a37fbd: OOB, bytes not captured
>>    527   1B @0xc8a37e97: OOB, bytes not captured
>>    528   2B @0xc8a37e98: OOB, bytes not captured
>>    529   1B @0xc8a37e9a: OOB, bytes not captured
>>    530   3B @0xc8a37e9b: OOB, bytes not captured
>>    531   4B @0xc8a37e9e: OOB, bytes not captured
>>    532   2B @0xc8a37ea2: OOB, bytes not captured
>>    533   3B @0xc8a37ea8: OOB, bytes not captured
>>    534   4B @0xc8a37eab: OOB, bytes not captured
>>    535   4B @0xc8a37eaf: OOB, bytes not captured
>>    536   6B @0xc8a37eb3: OOB, bytes not captured
>>    537   4B @0xc8a37eb9: OOB, bytes not captured
>>    538   6B @0xc8a37ebd: OOB, bytes not captured
>>    539   4B @0xc8a37ec3: OOB, bytes not captured
>>    540   6B @0xc8a37ec7: OOB, bytes not captured
>>    541   4B @0xc8a37ecd: OOB, bytes not captured
>>    542   6B @0xc8a37ed1: OOB, bytes not captured
>>    543   4B @0xc8a37ed7: OOB, bytes not captured
>>    544   2B @0xc8a37edb: OOB, bytes not captured
>>    545   2B @0xc8a37ee1: OOB, bytes not captured
>>    546   5B @0xc8a37ee3: OOB, bytes not captured
>>    547   2B @0xc8a37ee8: OOB, bytes not captured
>>    548   2B @0xc8a37eee: OOB, bytes not captured
>>    549   2B @0xc8a37ef0: OOB, bytes not captured
>>    550   4B @0xc8a37ef6: OOB, bytes not captured
>>    551   2B @0xc8a37efa: OOB, bytes not captured
>>    552   4B @0xc8a37f27: OOB, bytes not captured
>>    553   2B @0xc8a37f2b: OOB, bytes not captured
>>    554   7B @0xc8a37f58: OOB, bytes not captured
>>    555   3B @0xc8a37f5f: OOB, bytes not captured
>>    556   6B @0xc8a37f62: OOB, bytes not captured
>>    557   5B @0xc8a37f68: OOB, bytes not captured
>>    558   2B @0xc8a37f6d: OOB, bytes not captured
>>    559   5B @0xc8a37f6f: OOB, bytes not captured
>>    560   2B @0xc10cdff9: OOB, bytes not captured
>>    561   3B @0xc10cdffb: OOB, bytes not captured
>>    562   2B @0xc10cdffe: OOB, bytes not captured
>>    563   2B @0xc10ce000: OOB, bytes not captured
>>    564   3B @0xc10ce002: OOB, bytes not captured
>>    565   4B @0xc10ce005: OOB, bytes not captured
>>    566   1B @0xc10ce009: OOB, bytes not captured
>>    567   5B @0xc8a37f74: OOB, bytes not captured
>>    568   2B @0xc8a37f79: OOB, bytes not captured
>>    569   1B @0xc8a37f7b: OOB, bytes not captured
>>    570   1B @0xc8a37f7c: OOB, bytes not captured
>>    571   5B @0xc8a37f7d: OOB, bytes not captured
>>    572   2B @0xc8a37fc2: OOB, bytes not captured
>>    573   5B @0xc8a37fc4: OOB, bytes not captured
>>    574   3B @0xc8a37fc9: OOB, bytes not captured
>>    575   5B @0xc8a37fcc: OOB, bytes not captured
>>    576   1B @0xc8a37fd1: OOB, bytes not captured
>>    577   1B @0xc8a37fd2: OOB, bytes not captured
>>    578   2B @0xc8a362a4: OOB, bytes not captured
>>    579   5B @0xc8a362a6: OOB, bytes not captured
>>    580   3B @0xc8a362ab: OOB, bytes not captured
>>    581   2B @0xc8a362ae: OOB, bytes not captured
>>    582   2B @0xc8a362b0: OOB, bytes not captured
>>    583   2B @0xc8a362b6: OOB, bytes not captured
>>    584   5B @0xc8a362b8: OOB, bytes not captured
>>    585   2B @0xc10cd7d5: OOB, bytes not captured
>>    586   3B @0xc10cd7d7: OOB, bytes not captured
>>    587   3B @0xc10cd7da: OOB, bytes not captured
>>    588   2B @0xc10cd7dd: OOB, bytes not captured
>>    589   5B @0xc10cd7e3: OOB, bytes not captured
>>    590   5B @0xc10cd7e8: OOB, bytes not captured
>>    591   5B @0xc10cd7ed: OOB, bytes not captured
>>    592   7B @0xc10cd7f2: OOB, bytes not captured
>>    593   3B @0xc10cd7f9: OOB, bytes not captured
>>    594   5B @0xc10cd7fc: OOB, bytes not captured
>>    595   1B @0xc10cd762: OOB, bytes not captured
>>    596   1B @0xc10cd763: OOB, bytes not captured
>>    597   1B @0xc10cd764: OOB, bytes not captured
>>    598   5B @0xc10cd765: OOB, bytes not captured
>>    599   6B @0xc10cd76a: OOB, bytes not captured
>>    600   2B @0xc10cd770: OOB, bytes not captured
>>    601   3B @0xc10cd772: OOB, bytes not captured
>>    602   3B @0xc10cd775: OOB, bytes not captured
>>    603   6B @0xc10cd778: OOB, bytes not captured
>>    604   3B @0xc10cd77e: OOB, bytes not captured
>>    605   2B @0xc10cd781: OOB, bytes not captured
>>    606   1B @0xc10cd7d1: OOB, bytes not captured
>>    607   1B @0xc10cd7d2: OOB, bytes not captured
>>    608   1B @0xc10cd7d3: OOB, bytes not captured
>>    609   1B @0xc10cd7d4: OOB, bytes not captured
>>    610   4B @0xc8a362bd: OOB, bytes not captured
>>    611   3B @0xc8a362c1: OOB, bytes not captured
>>    612   3B @0xc8a362c4: OOB, bytes not captured
>>    613   2B @0xc8a362c7: OOB, bytes not captured
>>    614   3B @0xc8a362c9: OOB, bytes not captured
>>    615   5B @0xc8a362cc: OOB, bytes not captured
>>    616   2B @0xc8a362d1: OOB, bytes not captured
>>    617   5B @0xc8a362d3: OOB, bytes not captured
>>    618   2B @0xc8a362d8: OOB, bytes not captured
>>    619   4B @0xc8a362de: OOB, bytes not captured
>>    620   5B @0xc8a362e2: OOB, bytes not captured
>>    621   2B @0xc8a362e7: OOB, bytes not captured
>>    622   5B @0xc8a362e9: OOB, bytes not captured
>>    623   1B @0xc8a34383: OOB, bytes not captured
>>    624   2B @0xc8a34384: OOB, bytes not captured
>>    625   1B @0xc8a34386: OOB, bytes not captured
>>    626   2B @0xc8a34387: OOB, bytes not captured
>>    627   1B @0xc8a34389: OOB, bytes not captured
>>    628   2B @0xc8a3438a: OOB, bytes not captured
>>    629   2B @0xc8a3438c: OOB, bytes not captured
>>    630   2B @0xc8a3438e: OOB, bytes not captured
>>    631   5B @0xc8a3439b: OOB, bytes not captured
>>    632   2B @0xc8a343a0: OOB, bytes not captured
>>    633   2B @0xc8a343a2: OOB, bytes not captured
>>    634   2B @0xc8a343a4: OOB, bytes not captured
>>    635   2B @0xc8a343a6: OOB, bytes not captured
>>    636   5B @0xc8a343a8: OOB, bytes not captured
>>    637   5B @0xc8a343ad: OOB, bytes not captured
>>    638   2B @0xc8a343b2: OOB, bytes not captured
>>    639   2B @0xc8a343b4: OOB, bytes not captured
>>    640   2B @0xc8a343b6: OOB, bytes not captured
>>    641   5B @0xc8a343b8: OOB, bytes not captured
>>    642   1B @0xc8a3412a: OOB, bytes not captured
>>    643   2B @0xc8a3412b: OOB, bytes not captured
>>    644   1B @0xc8a3412d: OOB, bytes not captured
>>    645   2B @0xc8a3412e: OOB, bytes not captured
>>    646   1B @0xc8a34130: OOB, bytes not captured
>>    647   1B @0xc8a34131: OOB, bytes not captured
>>    648   2B @0xc8a34132: OOB, bytes not captured
>>    649   3B @0xc8a34134: OOB, bytes not captured
>>    650   2B @0xc8a34137: OOB, bytes not captured
>>    651   6B @0xc8a34139: OOB, bytes not captured
>>    652   4B @0xc8a3413f: OOB, bytes not captured
>>    653   2B @0xc8a34143: OOB, bytes not captured
>>    654   2B @0xc8a34145: OOB, bytes not captured
>>    655   5B @0xc8a34147: OOB, bytes not captured
>>    656   2B @0xc8a3414c: OOB, bytes not captured
>>    657   2B @0xc8a34152: OOB, bytes not captured
>>    658   6B @0xc8a34154: OOB, bytes not captured
>>    659   2B @0xc8a3415a: OOB, bytes not captured
>>    660   3B @0xc8a3415c: OOB, bytes not captured
>>    661   2B @0xc8a3415f: OOB, bytes not captured
>>    662   2B @0xc8a34161: OOB, bytes not captured
>>    663   3B @0xc8a34167: OOB, bytes not captured
>>    664   3B @0xc8a3416a: OOB, bytes not captured
>>    665   2B @0xc8a3416d: OOB, bytes not captured
>>    666   3B @0xc8a34173: OOB, bytes not captured
>>    667   2B @0xc8a34176: OOB, bytes not captured
>>    668   2B @0xc8a34178: OOB, bytes not captured
>>    669   2B @0xc8a34182: OOB, bytes not captured
>>    670   2B @0xc8a34184: OOB, bytes not captured
>>    671   2B @0xc8a34186: OOB, bytes not captured
>>    672   6B @0xc8a34188: OOB, bytes not captured
>>    673   3B @0xc8a3418e: OOB, bytes not captured
>>    674   2B @0xc8a34191: OOB, bytes not captured
>>    675   3B @0xc8a34193: OOB, bytes not captured
>>    676   2B @0xc8a34196: OOB, bytes not captured
>>    677   3B @0xc8a34198: OOB, bytes not captured
>>    678   2B @0xc8a3419b: OOB, bytes not captured
>>    679   3B @0xc8a3419d: OOB, bytes not captured
>>    680   2B @0xc8a341a0: OOB, bytes not captured
>>    681   3B @0xc8a341a2: OOB, bytes not captured
>>    682   2B @0xc8a341a5: OOB, bytes not captured
>>    683   5B @0xc8a341d7: OOB, bytes not captured
>>    684   2B @0xc8a341dc: OOB, bytes not captured
>>    685   2B @0xc8a341de: OOB, bytes not captured
>>    686   2B @0xc8a341e0: OOB, bytes not captured
>>    687   5B @0xc8a341e2: OOB, bytes not captured
>>    688   2B @0xc8a341e7: OOB, bytes not captured
>>    689   2B @0xc8a341e9: OOB, bytes not captured
>>    690   2B @0xc8a341eb: OOB, bytes not captured
>>    691   7B @0xc8a341f6: OOB, bytes not captured
>>    692   4B @0xc8a341fd: OOB, bytes not captured
>>    693   2B @0xc8a34201: OOB, bytes not captured
>>    694   2B @0xc8a34203: OOB, bytes not captured
>>    695   5B @0xc8a34205: OOB, bytes not captured
>>    696   3B @0xc8a3407c: OOB, bytes not captured
>>    697   2B @0xc8a3407f: OOB, bytes not captured
>>    698   2B @0xc8a3420a: OOB, bytes not captured
>>    699   3B @0xc8a3420c: OOB, bytes not captured
>>    700   3B @0xc8a3420f: OOB, bytes not captured
>>    701   2B @0xc8a34212: OOB, bytes not captured
>>    702   7B @0xc8a34214: OOB, bytes not captured
>>    703   3B @0xc8a3423c: OOB, bytes not captured
>>    704   2B @0xc8a3423f: OOB, bytes not captured
>>    705   2B @0xc8a34258: OOB, bytes not captured
>>    706   2B @0xc8a3425a: OOB, bytes not captured
>>    707   2B @0xc8a3425c: OOB, bytes not captured
>>    708   3B @0xc8a3425e: OOB, bytes not captured
>>    709   3B @0xc8a34261: OOB, bytes not captured
>>    710   2B @0xc8a34264: OOB, bytes not captured
>>    711   2B @0xc8a34266: OOB, bytes not captured
>>    712   4B @0xc8a34277: OOB, bytes not captured
>>    713   3B @0xc8a3427b: OOB, bytes not captured
>>    714   2B @0xc8a3427e: OOB, bytes not captured
>>    715   3B @0xc8a34280: OOB, bytes not captured
>>    716   5B @0xc8a34283: OOB, bytes not captured
>>    717   4B @0xc8a34288: OOB, bytes not captured
>>    718   7B @0xc8a3428c: OOB, bytes not captured
>>    719   2B @0xc8a34293: OOB, bytes not captured
>>    720   3B @0xc8a3429a: OOB, bytes not captured
>>    721   1B @0xc8a3429d: OOB, bytes not captured
>>    722   1B @0xc8a3429e: OOB, bytes not captured
>>    723   1B @0xc8a3429f: OOB, bytes not captured
>>    724   1B @0xc8a342a0: OOB, bytes not captured
>>    725   1B @0xc8a342a1: OOB, bytes not captured
>>    726   2B @0xc8a343bd: OOB, bytes not captured
>>    727   6B @0xc8a343bf: OOB, bytes not captured
>>    728   2B @0xc8a343c5: OOB, bytes not captured
>>    729   3B @0xc8a343c7: OOB, bytes not captured
>>    730   5B @0xc8a343ca: OOB, bytes not captured
>>    731   1B @0xc8a343cf: OOB, bytes not captured
>>    732   1B @0xc8a343d0: OOB, bytes not captured
>>    733   1B @0xc8a343d1: OOB, bytes not captured
>>    734   1B @0xc8a343d2: OOB, bytes not captured
>>    735   3B @0xc8a362ee: OOB, bytes not captured
>>    736   2B @0xc8a362f1: OOB, bytes not captured
>>    737   5B @0xc8a362f3: OOB, bytes not captured
>>    738   2B @0xc8a362f8: OOB, bytes not captured
>>    739   5B @0xc8a362fa: OOB, bytes not captured
>>    740   2B @0xc8a362ff: OOB, bytes not captured
>>    741   5B @0xc8a36301: OOB, bytes not captured
>>    742   2B @0xc8a36306: OOB, bytes not captured
>>    743   3B @0xc8a34268: OOB, bytes not captured
>>    744   3B @0xc8a3426b: OOB, bytes not captured
>>    745   3B @0xc8a3426e: OOB, bytes not captured
>>    746   3B @0xc8a34271: OOB, bytes not captured
>>    747   3B @0xc8a34274: OOB, bytes not captured
>>    748   4B @0xc8a34277: OOB, bytes not captured
>>    749   3B @0xc8a3427b: OOB, bytes not captured
>>    750   2B @0xc8a3427e: OOB, bytes not captured
>>    751   2B @0xbfba3450:  0  0             add [eax], al           
>>    752   2B @0xbfba3452:  0  0             add [eax], al           
>>    753   2B @0xbfba3454:  0  0             add [eax], al           
>>    754   2B @0xbfba3456:  0  0             add [eax], al           
>>    755   2B @0xbfba3458:  0  0             add [eax], al           
>>    756   2B @0xbfba345a:  0  0             add [eax], al           
>>    757   2B @0xbfba345c:  0  0             add [eax], al           
>>    758   2B @0xbfba345e:  0  0             add [eax], al           
>>    759   2B @0xbfba3460:  0  0             add [eax], al           
>>    760   2B @0xbfba3462:  0  0             add [eax], al           
>>    761   2B @0xbfba3464:  0  0             add [eax], al           
>>    762   2B @0xbfba3466:  0  0             add [eax], al           
>>    763   2B @0xbfba3468:  0  0             add [eax], al           
>>    764   2B @0xbfba346a:  0  0             add [eax], al           
>>    765   2B @0xbfba346c:  0  0             add [eax], al           
>>    766   2B @0xbfba346e:  0  0             add [eax], al           
>>    767   2B @0xbfba3470:  0  0             add [eax], al           
>>    768   2B @0xbfba3472:  0  0             add [eax], al           
>>    769   2B @0xbfba3474:  0  0             add [eax], al           
>>    770   2B @0xbfba3476:  0  0             add [eax], al           
>>    771   2B @0xbfba3478:  0  0             add [eax], al           
>>    772   2B @0xbfba347a:  0  0             add [eax], al           
>>    773   2B @0xbfba347c:  0  0             add [eax], al           
>>    774   2B @0xbfba347e:  0  0             add [eax], al           
>>    775   2B @0xbfba3480:  0  0             add [eax], al           
>>    776   2B @0xbfba3482:  0  0             add [eax], al           
>>    777   2B @0xbfba3484:  0  0             add [eax], al           
>>    778   2B @0xbfba3486:  0  0             add [eax], al           
>>    779   2B @0xbfba3488:  0  0             add [eax], al           
>>    780   2B @0xbfba348a:  0  0             add [eax], al           
>>    781   2B @0xbfba348c:  0  0             add [eax], al           
>>    782   2B @0xbfba348e:  0  0             add [eax], al           
>>    783   2B @0xbfba3490:  0  0             add [eax], al           
>>    784   2B @0xbfba3492:  0  0             add [eax], al           
>>    785   2B @0xbfba3494:  0  0             add [eax], al           
>>    786   2B @0xbfba3496:  0  0             add [eax], al           
>>    787   2B @0xbfba3498:  0  0             add [eax], al           
>>    788   2B @0xbfba349a:  0  0             add [eax], al           
>>    789   2B @0xbfba349c:  0  0             add [eax], al           
>>    790   2B @0xbfba349e:  0  0             add [eax], al           
>>    791   2B @0xbfba34a0:  0  0             add [eax], al           
>>    792   2B @0xbfba34a2:  0  0             add [eax], al           
>>    793   2B @0xbfba34a4:  0  0             add [eax], al           
>>    794   2B @0xbfba34a6:  0  0             add [eax], al           
>>    795   2B @0xbfba34a8:  0  0             add [eax], al           
>>    796   2B @0xbfba34aa:  0  0             add [eax], al           
>>    797   2B @0xbfba34ac:  0  0             add [eax], al           
>>    798   2B @0xbfba34ae:  0  0             add [eax], al           
>>    799   2B @0xbfba34b0:  0  0             add [eax], al           
>>    800   2B @0xbfba34b2:  0  0             add [eax], al           
>>    801   2B @0xbfba34b4:  0  0             add [eax], al           
>>    802   2B @0xbfba34b6:  0  0             add [eax], al           
>>    803   2B @0xbfba34b8:  0  0             add [eax], al           
>>    804   2B @0xbfba34ba:  0  0             add [eax], al           
>>    805   2B @0xbfba34bc:  0  0             add [eax], al           
>>    806   2B @0xbfba34be:  0  0             add [eax], al           
>>    807   2B @0xbfba34c0:  0  0             add [eax], al           
>>    808   2B @0xbfba34c2:  0  0             add [eax], al           
>>    809   2B @0xbfba34c4:  0  0             add [eax], al           
>>    810   2B @0xbfba34c6:  0  0             add [eax], al           
>>    811   2B @0xbfba34c8:  0  0             add [eax], al           
>>    812   2B @0xbfba34ca:  0  0             add [eax], al           
>>    813   2B @0xbfba34cc:  0  0             add [eax], al           
>>    814   2B @0xbfba34ce:  0  0             add [eax], al           
>>    815   2B @0xbfba34d0:  0  0             add [eax], al           
>>    816   2B @0xbfba34d2:  0  0             add [eax], al           
>>    817   2B @0xbfba34d4:  0  0             add [eax], al           
>>    818   2B @0xbfba34d6:  0  0             add [eax], al           
>>    819   2B @0xbfba34d8:  0  0             add [eax], al           
>>    820   2B @0xbfba34da:  0  0             add [eax], al           
>>    821   2B @0xbfba34dc:  0  0             add [eax], al           
>>    822   2B @0xbfba34de:  0  0             add [eax], al           
>>    823   2B @0xbfba34e0:  0  0             add [eax], al           
>>    824   2B @0xbfba34e2:  0  0             add [eax], al           
>>    825   2B @0xbfba34e4:  0  0             add [eax], al           
>>    826   2B @0xbfba34e6:  0  0             add [eax], al           
>>    827   2B @0xbfba34e8:  0  0             add [eax], al           
>>    828   2B @0xbfba34ea:  0  0             add [eax], al           
>>    829   2B @0xbfba34ec:  0  0             add [eax], al           
>>    830   2B @0xbfba34ee:  0  0             add [eax], al           
>>    831   2B @0xbfba34f0:  0  0             add [eax], al           
>>    832   2B @0xbfba34f2:  0  0             add [eax], al           
>>    833   2B @0xbfba34f4:  0  0             add [eax], al           
>>    834   2B @0xbfba34f6:  0  0             add [eax], al           
>>    835   2B @0xbfba34f8:  0  0             add [eax], al           
>>    836   2B @0xbfba34fa:  0  0             add [eax], al           
>>    837   2B @0xbfba34fc:  0  0             add [eax], al           
>>    838   2B @0xbfba34fe:  0  0             add [eax], al           
>>    839   2B @0xbfba3500:  0  0             add [eax], al           
>>    840   2B @0xbfba3502:  0  0             add [eax], al           
>>    841   2B @0xbfba3504:  0  0             add [eax], al           
>>    842   2B @0xbfba3506:  0  0             add [eax], al           
>>    843   2B @0xbfba3508:  0  0             add [eax], al           
>>    844   2B @0xbfba350a:  0  0             add [eax], al           
>>    845   2B @0xbfba350c:  0  0             add [eax], al           
>>    846   2B @0xbfba350e:  0  0             add [eax], al           
>>    847   2B @0xbfba3510:  0  0             add [eax], al           
>>    848   2B @0xbfba3512:  0  0             add [eax], al           
>>    849   2B @0xbfba3514:  0  0             add [eax], al           
>>    850   2B @0xbfba3516:  0  0             add [eax], al           
>>    851   2B @0xbfba3518:  0  0             add [eax], al           
>>    852   2B @0xbfba351a:  0  0             add [eax], al           
>>    853   2B @0xbfba351c:  0  0             add [eax], al           
>>    854   2B @0xbfba351e:  0  0             add [eax], al           
>>    855   2B @0xbfba3520:  0  0             add [eax], al           
>>    856   2B @0xbfba3522:  0  0             add [eax], al           
>>    857   2B @0xbfba3524:  0  0             add [eax], al           
>>    858   2B @0xbfba3526:  0  0             add [eax], al           
>>    859   2B @0xbfba3528:  0  0             add [eax], al           
>>    860   2B @0xbfba352a:  0  0             add [eax], al           
>>    861   2B @0xbfba352c:  0  0             add [eax], al           
>>    862   2B @0xbfba352e:  0  0             add [eax], al           
>>    863   2B @0xbfba3530:  0  0             add [eax], al           
>>    864   2B @0xbfba3532:  0  0             add [eax], al           
>>    865   2B @0xbfba3534:  0  0             add [eax], al           
>>    866   2B @0xbfba3536:  0  0             add [eax], al           
>>    867   2B @0xbfba3538:  0  0             add [eax], al           
>>    868   2B @0xbfba353a:  0  0             add [eax], al           
>>    869   2B @0xbfba353c:  0  0             add [eax], al           
>>    870   2B @0xbfba353e:  0  0             add [eax], al           
>>    871   2B @0xbfba3540:  0  0             add [eax], al           
>>    872   2B @0xbfba3542:  0  0             add [eax], al           
>>    873   2B @0xbfba3544:  0  0             add [eax], al           
>>    874   2B @0xbfba3546:  0  0             add [eax], al           
>>    875   2B @0xbfba3548:  0  0             add [eax], al           
>>    876   2B @0xbfba354a:  0  0             add [eax], al           
>>    877   2B @0xbfba354c:  0  0             add [eax], al           
>>    878   2B @0xbfba354e:  0  0             add [eax], al           
>>    879   2B @0xbfba3550:  0  0             add [eax], al           
>>    880   2B @0xbfba3552:  0  0             add [eax], al           
>>    881   2B @0xbfba3554:  0  0             add [eax], al           
>>    882   2B @0xbfba3556:  0  0             add [eax], al           
>>    883   2B @0xbfba3558:  0  0             add [eax], al           
>>    884   2B @0xbfba355a:  0  0             add [eax], al           
>>    885   2B @0xbfba355c:  0  0             add [eax], al           
>>    886   2B @0xbfba355e:  0  0             add [eax], al           
>>    887   2B @0xbfba3560:  0  0             add [eax], al           
>>    888   2B @0xbfba3562:  0  0             add [eax], al           
>>    889   2B @0xbfba3564:  0  0             add [eax], al           
>>    890   2B @0xbfba3566:  0  0             add [eax], al           
>>    891   2B @0xbfba3568:  0  0             add [eax], al           
>>    892   2B @0xbfba356a:  0  0             add [eax], al           
>>    893   2B @0xbfba356c:  0  0             add [eax], al           
>>    894   2B @0xbfba356e:  0  0             add [eax], al           
>>    895   2B @0xbfba3570:  0  0             add [eax], al           
>>    896   2B @0xbfba3572:  0  0             add [eax], al           
>>    897   2B @0xbfba3574:  0  0             add [eax], al           
>>    898   2B @0xbfba3576:  0  0             add [eax], al           
>>    899   2B @0xbfba3578:  0  0             add [eax], al           
>>    900   2B @0xbfba357a:  0  0             add [eax], al           
>>    901   2B @0xbfba357c:  0  0             add [eax], al           
>>    902   2B @0xbfba357e:  0  0             add [eax], al           
>>    903   2B @0xbfba3580: eb 13             jmp 0x15                
>>    904   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    905   1B @0xbfba3582: 59                pop ecx                 
>>    906   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    907   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    908   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    909   1B @0xbfba3589: 43                inc ebx                 
>>    910   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    911   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    912   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (399/404) = 0.987624
>>    Mem_map start_addr: 0xbfba3406, length: 1024B, exec'ed bytes: 399, range: 404B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3400              0000 00000000 00000000        ..........
0xbfba3410 00000000 00000000 00000000 00000000  ................
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 6
>>    Printing success 7
>> Success densities, overlay: 0.987179; avg: 0.987179
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3414:  0  0             add [eax], al           
>>      2   2B @0xbfba3416:  0  0             add [eax], al           
>>      3   2B @0xbfba3418:  0  0             add [eax], al           
>>      4   2B @0xbfba341a:  0  0             add [eax], al           
>>      5   2B @0xbfba341c:  0  0             add [eax], al           
>>      6   2B @0xbfba341e:  0  0             add [eax], al           
>>      7   2B @0xbfba3420:  0  0             add [eax], al           
>>      8   2B @0xbfba3422:  0  0             add [eax], al           
>>      9   2B @0xbfba3424:  0  0             add [eax], al           
>>     10   2B @0xbfba3426:  0  0             add [eax], al           
>>     11   2B @0xbfba3428:  0  0             add [eax], al           
>>     12   2B @0xbfba342a:  0  0             add [eax], al           
>>     13   2B @0xbfba342c:  0  0             add [eax], al           
>>     14   2B @0xbfba342e:  0  0             add [eax], al           
>>     15   2B @0xbfba3430:  0  0             add [eax], al           
>>     16   2B @0xbfba3432:  0  0             add [eax], al           
>>     17   2B @0xbfba3434:  0  0             add [eax], al           
>>     18   2B @0xbfba3436:  0  0             add [eax], al           
>>     19   2B @0xbfba3438:  0  0             add [eax], al           
>>     20   2B @0xbfba343a:  0  0             add [eax], al           
>>     21   2B @0xbfba343c:  0  0             add [eax], al           
>>     22   2B @0xbfba343e:  0  0             add [eax], al           
>>     23   2B @0xbfba3440:  0  0             add [eax], al           
>>     24   2B @0xbfba3442:  0  0             add [eax], al           
>>     25   2B @0xbfba3444:  0  0             add [eax], al           
>>     26   2B @0xbfba3446:  0  0             add [eax], al           
>>     27   2B @0xbfba3448:  0  0             add [eax], al           
>>     28   2B @0xbfba344a:  0  0             add [eax], al           
>>     29   2B @0xbfba344c:  0  0             add [eax], al           
>>     30   2B @0xbfba344e:  0  0             add [eax], al           
>>     31   2B @0xbfba3450:  0  0             add [eax], al           
>>     32   2B @0xbfba3452:  0  0             add [eax], al           
>>     33   2B @0xbfba3454:  0  0             add [eax], al           
>>     34   2B @0xbfba3456:  0  0             add [eax], al           
>>     35   2B @0xbfba3458:  0  0             add [eax], al           
>>     36   2B @0xbfba345a:  0  0             add [eax], al           
>>     37   2B @0xbfba345c:  0  0             add [eax], al           
>>     38   5B @0xc1003072: OOB, bytes not captured
>>     39   2B @0xbfba345e:  0  0             add [eax], al           
>>     40   2B @0xbfba3460:  0  0             add [eax], al           
>>     41   2B @0xbfba3462:  0  0             add [eax], al           
>>     42   2B @0xbfba3464:  0  0             add [eax], al           
>>     43   2B @0xbfba3466:  0  0             add [eax], al           
>>     44   2B @0xbfba3468:  0  0             add [eax], al           
>>     45   2B @0xbfba346a:  0  0             add [eax], al           
>>     46   2B @0xbfba346c:  0  0             add [eax], al           
>>     47   2B @0xbfba346e:  0  0             add [eax], al           
>>     48   2B @0xbfba3470:  0  0             add [eax], al           
>>     49   2B @0xbfba3472:  0  0             add [eax], al           
>>     50   2B @0xbfba3474:  0  0             add [eax], al           
>>     51   2B @0xbfba3476:  0  0             add [eax], al           
>>     52   2B @0xbfba3478:  0  0             add [eax], al           
>>     53   2B @0xbfba347a:  0  0             add [eax], al           
>>     54   2B @0xbfba347c:  0  0             add [eax], al           
>>     55   2B @0xbfba347e:  0  0             add [eax], al           
>>     56   2B @0xbfba3480:  0  0             add [eax], al           
>>     57   2B @0xbfba3482:  0  0             add [eax], al           
>>     58   2B @0xbfba3484:  0  0             add [eax], al           
>>     59   2B @0xbfba3486:  0  0             add [eax], al           
>>     60   2B @0xbfba3488:  0  0             add [eax], al           
>>     61   2B @0xbfba348a:  0  0             add [eax], al           
>>     62   2B @0xbfba348c:  0  0             add [eax], al           
>>     63   2B @0xbfba348e:  0  0             add [eax], al           
>>     64   2B @0xbfba3490:  0  0             add [eax], al           
>>     65   2B @0xbfba3492:  0  0             add [eax], al           
>>     66   2B @0xbfba3494:  0  0             add [eax], al           
>>     67   2B @0xbfba3496:  0  0             add [eax], al           
>>     68   2B @0xbfba3498:  0  0             add [eax], al           
>>     69   2B @0xbfba349a:  0  0             add [eax], al           
>>     70   2B @0xbfba349c:  0  0             add [eax], al           
>>     71   2B @0xbfba349e:  0  0             add [eax], al           
>>     72   2B @0xbfba34a0:  0  0             add [eax], al           
>>     73   2B @0xbfba34a2:  0  0             add [eax], al           
>>     74   2B @0xbfba34a4:  0  0             add [eax], al           
>>     75   2B @0xbfba34a6:  0  0             add [eax], al           
>>     76   2B @0xbfba34a8:  0  0             add [eax], al           
>>     77   2B @0xbfba34aa:  0  0             add [eax], al           
>>     78   2B @0xbfba34ac:  0  0             add [eax], al           
>>     79   2B @0xbfba34ae:  0  0             add [eax], al           
>>     80   2B @0xbfba34b0:  0  0             add [eax], al           
>>     81   2B @0xbfba34b2:  0  0             add [eax], al           
>>     82   2B @0xbfba34b4:  0  0             add [eax], al           
>>     83   2B @0xbfba34b6:  0  0             add [eax], al           
>>     84   2B @0xbfba34b8:  0  0             add [eax], al           
>>     85   2B @0xbfba34ba:  0  0             add [eax], al           
>>     86   2B @0xbfba34bc:  0  0             add [eax], al           
>>     87   2B @0xbfba34be:  0  0             add [eax], al           
>>     88   2B @0xbfba34c0:  0  0             add [eax], al           
>>     89   2B @0xbfba34c2:  0  0             add [eax], al           
>>     90   2B @0xbfba34c4:  0  0             add [eax], al           
>>     91   2B @0xbfba34c6:  0  0             add [eax], al           
>>     92   2B @0xbfba34c8:  0  0             add [eax], al           
>>     93   2B @0xbfba34ca:  0  0             add [eax], al           
>>     94   2B @0xbfba34cc:  0  0             add [eax], al           
>>     95   2B @0xbfba34ce:  0  0             add [eax], al           
>>     96   2B @0xbfba34d0:  0  0             add [eax], al           
>>     97   2B @0xbfba34d2:  0  0             add [eax], al           
>>     98   2B @0xbfba34d4:  0  0             add [eax], al           
>>     99   2B @0xbfba34d6:  0  0             add [eax], al           
>>    100   2B @0xbfba34d8:  0  0             add [eax], al           
>>    101   2B @0xbfba34da:  0  0             add [eax], al           
>>    102   2B @0xbfba34dc:  0  0             add [eax], al           
>>    103   2B @0xbfba34de:  0  0             add [eax], al           
>>    104   2B @0xbfba34e0:  0  0             add [eax], al           
>>    105   2B @0xbfba34e2:  0  0             add [eax], al           
>>    106   2B @0xbfba34e4:  0  0             add [eax], al           
>>    107   2B @0xbfba34e6:  0  0             add [eax], al           
>>    108   2B @0xbfba34e8:  0  0             add [eax], al           
>>    109   2B @0xbfba34ea:  0  0             add [eax], al           
>>    110   2B @0xbfba34ec:  0  0             add [eax], al           
>>    111   2B @0xbfba34ee:  0  0             add [eax], al           
>>    112   2B @0xbfba34f0:  0  0             add [eax], al           
>>    113   2B @0xbfba34f2:  0  0             add [eax], al           
>>    114   2B @0xbfba34f4:  0  0             add [eax], al           
>>    115   2B @0xbfba34f6:  0  0             add [eax], al           
>>    116   2B @0xbfba34f8:  0  0             add [eax], al           
>>    117   2B @0xbfba34fa:  0  0             add [eax], al           
>>    118   2B @0xbfba34fc:  0  0             add [eax], al           
>>    119   2B @0xbfba34fe:  0  0             add [eax], al           
>>    120   2B @0xbfba3500:  0  0             add [eax], al           
>>    121   2B @0xbfba3502:  0  0             add [eax], al           
>>    122   2B @0xbfba3504:  0  0             add [eax], al           
>>    123   2B @0xbfba3506:  0  0             add [eax], al           
>>    124   2B @0xbfba3508:  0  0             add [eax], al           
>>    125   2B @0xbfba350a:  0  0             add [eax], al           
>>    126   2B @0xbfba350c:  0  0             add [eax], al           
>>    127   2B @0xbfba350e:  0  0             add [eax], al           
>>    128   2B @0xbfba3510:  0  0             add [eax], al           
>>    129   2B @0xbfba3512:  0  0             add [eax], al           
>>    130   2B @0xbfba3514:  0  0             add [eax], al           
>>    131   2B @0xbfba3516:  0  0             add [eax], al           
>>    132   2B @0xbfba3518:  0  0             add [eax], al           
>>    133   2B @0xbfba351a:  0  0             add [eax], al           
>>    134   2B @0xbfba351c:  0  0             add [eax], al           
>>    135   2B @0xbfba351e:  0  0             add [eax], al           
>>    136   2B @0xbfba3520:  0  0             add [eax], al           
>>    137   2B @0xbfba3522:  0  0             add [eax], al           
>>    138   2B @0xbfba3524:  0  0             add [eax], al           
>>    139   2B @0xbfba3526:  0  0             add [eax], al           
>>    140   2B @0xbfba3528:  0  0             add [eax], al           
>>    141   2B @0xbfba352a:  0  0             add [eax], al           
>>    142   2B @0xbfba352c:  0  0             add [eax], al           
>>    143   2B @0xbfba352e:  0  0             add [eax], al           
>>    144   2B @0xbfba3530:  0  0             add [eax], al           
>>    145   2B @0xbfba3532:  0  0             add [eax], al           
>>    146   2B @0xbfba3534:  0  0             add [eax], al           
>>    147   2B @0xbfba3536:  0  0             add [eax], al           
>>    148   2B @0xbfba3538:  0  0             add [eax], al           
>>    149   2B @0xbfba353a:  0  0             add [eax], al           
>>    150   2B @0xbfba353c:  0  0             add [eax], al           
>>    151   2B @0xbfba353e:  0  0             add [eax], al           
>>    152   2B @0xbfba3540:  0  0             add [eax], al           
>>    153   2B @0xbfba3542:  0  0             add [eax], al           
>>    154   2B @0xbfba3544:  0  0             add [eax], al           
>>    155   2B @0xbfba3546:  0  0             add [eax], al           
>>    156   2B @0xbfba3548:  0  0             add [eax], al           
>>    157   2B @0xbfba354a:  0  0             add [eax], al           
>>    158   2B @0xbfba354c:  0  0             add [eax], al           
>>    159   2B @0xbfba354e:  0  0             add [eax], al           
>>    160   2B @0xbfba3550:  0  0             add [eax], al           
>>    161   2B @0xbfba3552:  0  0             add [eax], al           
>>    162   2B @0xbfba3554:  0  0             add [eax], al           
>>    163   2B @0xbfba3556:  0  0             add [eax], al           
>>    164   2B @0xbfba3558:  0  0             add [eax], al           
>>    165   2B @0xbfba355a:  0  0             add [eax], al           
>>    166   2B @0xbfba355c:  0  0             add [eax], al           
>>    167   2B @0xbfba355e:  0  0             add [eax], al           
>>    168   2B @0xbfba3560:  0  0             add [eax], al           
>>    169   2B @0xbfba3562:  0  0             add [eax], al           
>>    170   2B @0xbfba3564:  0  0             add [eax], al           
>>    171   2B @0xbfba3566:  0  0             add [eax], al           
>>    172   2B @0xbfba3568:  0  0             add [eax], al           
>>    173   2B @0xbfba356a:  0  0             add [eax], al           
>>    174   2B @0xbfba356c:  0  0             add [eax], al           
>>    175   2B @0xbfba356e:  0  0             add [eax], al           
>>    176   2B @0xbfba3570:  0  0             add [eax], al           
>>    177   2B @0xbfba3572:  0  0             add [eax], al           
>>    178   2B @0xbfba3574:  0  0             add [eax], al           
>>    179   2B @0xbfba3576:  0  0             add [eax], al           
>>    180   2B @0xbfba3578:  0  0             add [eax], al           
>>    181   2B @0xbfba357a:  0  0             add [eax], al           
>>    182   2B @0xbfba357c:  0  0             add [eax], al           
>>    183   2B @0xbfba357e:  0  0             add [eax], al           
>>    184   2B @0xbfba3580: eb 13             jmp 0x15                
>>    185   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    186   1B @0xbfba3582: 59                pop ecx                 
>>    187   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    188   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    189   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    190   1B @0xbfba3589: 43                inc ebx                 
>>    191   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    192   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    193   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (385/390) = 0.987179
>>    Mem_map start_addr: 0xbfba3414, length: 1024B, exec'ed bytes: 385, range: 390B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3410          00000000 00000000 00000000      ............
0xbfba3420 00000000 00000000 00000000 00000000  ................
0xbfba3430 00000000 00000000 00000000 00000000  ................
0xbfba3440 00000000 00000000 00000000 00000000  ................
0xbfba3450 00000000 00000000 00000000 00000000  ................
0xbfba3460 00000000 00000000 00000000 00000000  ................
0xbfba3470 00000000 00000000 00000000 00000000  ................
0xbfba3480 00000000 00000000 00000000 00000000  ................
0xbfba3490 00000000 00000000 00000000 00000000  ................
0xbfba34a0 00000000 00000000 00000000 00000000  ................
0xbfba34b0 00000000 00000000 00000000 00000000  ................
0xbfba34c0 00000000 00000000 00000000 00000000  ................
0xbfba34d0 00000000 00000000 00000000 00000000  ................
0xbfba34e0 00000000 00000000 00000000 00000000  ................
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 7
>>    Printing success 8
>> Success densities, overlay: 0.971264; avg: 0.971264
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba34ec:  0  0             add [eax], al           
>>      2   2B @0xbfba34ee:  0  0             add [eax], al           
>>      3   2B @0xbfba34f0:  0  0             add [eax], al           
>>      4   2B @0xbfba34f2:  0  0             add [eax], al           
>>      5   2B @0xbfba34f4:  0  0             add [eax], al           
>>      6   2B @0xbfba34f6:  0  0             add [eax], al           
>>      7   2B @0xbfba34f8:  0  0             add [eax], al           
>>      8   2B @0xbfba34fa:  0  0             add [eax], al           
>>      9   2B @0xbfba34fc:  0  0             add [eax], al           
>>     10   2B @0xbfba34fe:  0  0             add [eax], al           
>>     11   2B @0xbfba3500:  0  0             add [eax], al           
>>     12   2B @0xbfba3502:  0  0             add [eax], al           
>>     13   2B @0xbfba3504:  0  0             add [eax], al           
>>     14   2B @0xbfba3506:  0  0             add [eax], al           
>>     15   2B @0xbfba3508:  0  0             add [eax], al           
>>     16   2B @0xbfba350a:  0  0             add [eax], al           
>>     17   2B @0xbfba350c:  0  0             add [eax], al           
>>     18   2B @0xbfba350e:  0  0             add [eax], al           
>>     19   2B @0xbfba3510:  0  0             add [eax], al           
>>     20   2B @0xbfba3512:  0  0             add [eax], al           
>>     21   2B @0xbfba3514:  0  0             add [eax], al           
>>     22   2B @0xbfba3516:  0  0             add [eax], al           
>>     23   2B @0xbfba3518:  0  0             add [eax], al           
>>     24   2B @0xbfba351a:  0  0             add [eax], al           
>>     25   2B @0xbfba351c:  0  0             add [eax], al           
>>     26   2B @0xbfba351e:  0  0             add [eax], al           
>>     27   2B @0xbfba3520:  0  0             add [eax], al           
>>     28   2B @0xbfba3522:  0  0             add [eax], al           
>>     29   2B @0xbfba3524:  0  0             add [eax], al           
>>     30   2B @0xbfba3526:  0  0             add [eax], al           
>>     31   2B @0xbfba3528:  0  0             add [eax], al           
>>     32   2B @0xbfba352a:  0  0             add [eax], al           
>>     33   2B @0xbfba352c:  0  0             add [eax], al           
>>     34   2B @0xbfba352e:  0  0             add [eax], al           
>>     35   2B @0xbfba3530:  0  0             add [eax], al           
>>     36   2B @0xbfba3532:  0  0             add [eax], al           
>>     37   2B @0xbfba3534:  0  0             add [eax], al           
>>     38   4B @0xc103b111: OOB, bytes not captured
>>     39   3B @0xc103b115: OOB, bytes not captured
>>     40   2B @0xc103b118: OOB, bytes not captured
>>     41   3B @0xc103b11a: OOB, bytes not captured
>>     42   5B @0xc103b11d: OOB, bytes not captured
>>     43   1B @0xc1038d4a: OOB, bytes not captured
>>     44   1B @0xc1038d4b: OOB, bytes not captured
>>     45   2B @0xc1038d4c: OOB, bytes not captured
>>     46   1B @0xc1038d4e: OOB, bytes not captured
>>     47   2B @0xc1038d4f: OOB, bytes not captured
>>     48   1B @0xc1038d51: OOB, bytes not captured
>>     49   3B @0xc1038d52: OOB, bytes not captured
>>     50   3B @0xc1038d55: OOB, bytes not captured
>>     51   3B @0xc1038d58: OOB, bytes not captured
>>     52   2B @0xc1038d5b: OOB, bytes not captured
>>     53   3B @0xc1038d5d: OOB, bytes not captured
>>     54   3B @0xc1038d60: OOB, bytes not captured
>>     55   4B @0xc1038d63: OOB, bytes not captured
>>     56   4B @0xc1038d67: OOB, bytes not captured
>>     57   2B @0xc1038d6b: OOB, bytes not captured
>>     58   3B @0xc1038d6d: OOB, bytes not captured
>>     59   4B @0xc1038d70: OOB, bytes not captured
>>     60   3B @0xc1038d74: OOB, bytes not captured
>>     61   2B @0xc1038d77: OOB, bytes not captured
>>     62   2B @0xc1038d79: OOB, bytes not captured
>>     63   2B @0xc1038d94: OOB, bytes not captured
>>     64   2B @0xc1038d96: OOB, bytes not captured
>>     65   3B @0xc1038d7b: OOB, bytes not captured
>>     66   3B @0xc1038d7e: OOB, bytes not captured
>>     67   2B @0xc1038d81: OOB, bytes not captured
>>     68   2B @0xc1038d83: OOB, bytes not captured
>>     69   2B @0xc1038d89: OOB, bytes not captured
>>     70   5B @0xc1038d8b: OOB, bytes not captured
>>     71   1B @0xc1038bed: OOB, bytes not captured
>>     72   1B @0xc1038bee: OOB, bytes not captured
>>     73   2B @0xc1038bef: OOB, bytes not captured
>>     74   3B @0xc1038bf1: OOB, bytes not captured
>>     75   3B @0xc1038bf4: OOB, bytes not captured
>>     76   2B @0xc1038bf7: OOB, bytes not captured
>>     77   2B @0xc1038bf9: OOB, bytes not captured
>>     78   6B @0xc1038bfb: OOB, bytes not captured
>>     79   2B @0xc1038c01: OOB, bytes not captured
>>     80   5B @0xc1038c4e: OOB, bytes not captured
>>     81   4B @0xc1038c53: OOB, bytes not captured
>>     82   2B @0xc1038c57: OOB, bytes not captured
>>     83   3B @0xc1038c63: OOB, bytes not captured
>>     84   3B @0xc1038c66: OOB, bytes not captured
>>     85   2B @0xc1038c69: OOB, bytes not captured
>>     86   3B @0xc1038c6b: OOB, bytes not captured
>>     87   2B @0xc1038c6e: OOB, bytes not captured
>>     88   1B @0xc1038c70: OOB, bytes not captured
>>     89   1B @0xc1038c71: OOB, bytes not captured
>>     90   1B @0xc1038c72: OOB, bytes not captured
>>     91   2B @0xc1038d90: OOB, bytes not captured
>>     92   2B @0xc1038d92: OOB, bytes not captured
>>     93   2B @0xc1038d94: OOB, bytes not captured
>>     94   2B @0xc1038d96: OOB, bytes not captured
>>     95   1B @0xc1038d98: OOB, bytes not captured
>>     96   2B @0xc1038d99: OOB, bytes not captured
>>     97   1B @0xc1038d9b: OOB, bytes not captured
>>     98   1B @0xc1038d9c: OOB, bytes not captured
>>     99   1B @0xc1038d9d: OOB, bytes not captured
>>    100   1B @0xc1038d9e: OOB, bytes not captured
>>    101   1B @0xc1038d9f: OOB, bytes not captured
>>    102   1B @0xc1038da0: OOB, bytes not captured
>>    103   2B @0xc103b122: OOB, bytes not captured
>>    104   2B @0xc103b124: OOB, bytes not captured
>>    105   2B @0xbfba3536:  0  0             add [eax], al           
>>    106   2B @0xbfba3538:  0  0             add [eax], al           
>>    107   2B @0xbfba353a:  0  0             add [eax], al           
>>    108   2B @0xbfba353c:  0  0             add [eax], al           
>>    109   2B @0xbfba353e:  0  0             add [eax], al           
>>    110   2B @0xbfba3540:  0  0             add [eax], al           
>>    111   2B @0xbfba3542:  0  0             add [eax], al           
>>    112   2B @0xbfba3544:  0  0             add [eax], al           
>>    113   2B @0xbfba3546:  0  0             add [eax], al           
>>    114   2B @0xbfba3548:  0  0             add [eax], al           
>>    115   2B @0xbfba354a:  0  0             add [eax], al           
>>    116   2B @0xbfba354c:  0  0             add [eax], al           
>>    117   2B @0xbfba354e:  0  0             add [eax], al           
>>    118   2B @0xbfba3550:  0  0             add [eax], al           
>>    119   2B @0xbfba3552:  0  0             add [eax], al           
>>    120   2B @0xbfba3554:  0  0             add [eax], al           
>>    121   2B @0xbfba3556:  0  0             add [eax], al           
>>    122   2B @0xbfba3558:  0  0             add [eax], al           
>>    123   2B @0xbfba355a:  0  0             add [eax], al           
>>    124   2B @0xbfba355c:  0  0             add [eax], al           
>>    125   2B @0xbfba355e:  0  0             add [eax], al           
>>    126   2B @0xbfba3560:  0  0             add [eax], al           
>>    127   2B @0xbfba3562:  0  0             add [eax], al           
>>    128   2B @0xbfba3564:  0  0             add [eax], al           
>>    129   2B @0xbfba3566:  0  0             add [eax], al           
>>    130   2B @0xbfba3568:  0  0             add [eax], al           
>>    131   2B @0xbfba356a:  0  0             add [eax], al           
>>    132   2B @0xbfba356c:  0  0             add [eax], al           
>>    133   2B @0xbfba356e:  0  0             add [eax], al           
>>    134   2B @0xbfba3570:  0  0             add [eax], al           
>>    135   2B @0xbfba3572:  0  0             add [eax], al           
>>    136   2B @0xbfba3574:  0  0             add [eax], al           
>>    137   2B @0xbfba3576:  0  0             add [eax], al           
>>    138   2B @0xbfba3578:  0  0             add [eax], al           
>>    139   2B @0xbfba357a:  0  0             add [eax], al           
>>    140   2B @0xbfba357c:  0  0             add [eax], al           
>>    141   2B @0xbfba357e:  0  0             add [eax], al           
>>    142   2B @0xbfba3580: eb 13             jmp 0x15                
>>    143   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>    144   1B @0xbfba3582: 59                pop ecx                 
>>    145   2B @0xbfba3583: 31 c0             xor eax, eax            
>>    146   2B @0xbfba3585: b0  4             mov al, 0x4             
>>    147   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>    148   1B @0xbfba3589: 43                inc ebx                 
>>    149   2B @0xbfba358a: 31 d2             xor edx, edx            
>>    150   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>    151   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (169/174) = 0.971264
>>    Mem_map start_addr: 0xbfba34ec, length: 1024B, exec'ed bytes: 169, range: 174B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba34e0                            00000000              ....
0xbfba34f0 00000000 00000000 00000000 00000000  ................
0xbfba3500 00000000 00000000 00000000 00000000  ................
0xbfba3510 00000000 00000000 00000000 00000000  ................
0xbfba3520 00000000 00000000 00000000 00000000  ................
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 8
>>    Printing success 9
>> Success densities, overlay: 0.956897; avg: 0.956897
>> Success eip: 0xbfba3590 offset from base: 528
>> Printing PC Trace (instructions in order of execution)
>>      1   2B @0xbfba3526:  0  0             add [eax], al           
>>      2   2B @0xbfba3528:  0  0             add [eax], al           
>>      3   2B @0xbfba352a:  0  0             add [eax], al           
>>      4   2B @0xbfba352c:  0  0             add [eax], al           
>>      5   2B @0xbfba352e:  0  0             add [eax], al           
>>      6   2B @0xbfba3530:  0  0             add [eax], al           
>>      7   2B @0xbfba3532:  0  0             add [eax], al           
>>      8   2B @0xbfba3534:  0  0             add [eax], al           
>>      9   2B @0xbfba3536:  0  0             add [eax], al           
>>     10   2B @0xbfba3538:  0  0             add [eax], al           
>>     11   2B @0xbfba353a:  0  0             add [eax], al           
>>     12   2B @0xbfba353c:  0  0             add [eax], al           
>>     13   2B @0xbfba353e:  0  0             add [eax], al           
>>     14   2B @0xbfba3540:  0  0             add [eax], al           
>>     15   2B @0xbfba3542:  0  0             add [eax], al           
>>     16   2B @0xbfba3544:  0  0             add [eax], al           
>>     17   2B @0xbfba3546:  0  0             add [eax], al           
>>     18   2B @0xbfba3548:  0  0             add [eax], al           
>>     19   2B @0xbfba354a:  0  0             add [eax], al           
>>     20   2B @0xbfba354c:  0  0             add [eax], al           
>>     21   2B @0xbfba354e:  0  0             add [eax], al           
>>     22   2B @0xbfba3550:  0  0             add [eax], al           
>>     23   2B @0xbfba3552:  0  0             add [eax], al           
>>     24   2B @0xbfba3554:  0  0             add [eax], al           
>>     25   2B @0xbfba3556:  0  0             add [eax], al           
>>     26   2B @0xbfba3558:  0  0             add [eax], al           
>>     27   2B @0xbfba355a:  0  0             add [eax], al           
>>     28   2B @0xbfba355c:  0  0             add [eax], al           
>>     29   2B @0xbfba355e:  0  0             add [eax], al           
>>     30   2B @0xbfba3560:  0  0             add [eax], al           
>>     31   2B @0xbfba3562:  0  0             add [eax], al           
>>     32   2B @0xbfba3564:  0  0             add [eax], al           
>>     33   2B @0xbfba3566:  0  0             add [eax], al           
>>     34   2B @0xbfba3568:  0  0             add [eax], al           
>>     35   2B @0xbfba356a:  0  0             add [eax], al           
>>     36   2B @0xbfba356c:  0  0             add [eax], al           
>>     37   2B @0xbfba356e:  0  0             add [eax], al           
>>     38   8B @0xc104b28c: OOB, bytes not captured
>>     39   5B @0xc104b294: OOB, bytes not captured
>>     40   1B @0xc104b299: OOB, bytes not captured
>>     41   5B @0xc104b29a: OOB, bytes not captured
>>     42   2B @0xc104b29f: OOB, bytes not captured
>>     43   2B @0xbfba3570:  0  0             add [eax], al           
>>     44   2B @0xbfba3572:  0  0             add [eax], al           
>>     45   2B @0xbfba3574:  0  0             add [eax], al           
>>     46   2B @0xbfba3576:  0  0             add [eax], al           
>>     47   2B @0xbfba3578:  0  0             add [eax], al           
>>     48   2B @0xbfba357a:  0  0             add [eax], al           
>>     49   2B @0xbfba357c:  0  0             add [eax], al           
>>     50   2B @0xbfba357e:  0  0             add [eax], al           
>>     51   2B @0xbfba3580: eb 13             jmp 0x15                
>>     52   5B @0xbfba3595: e8 e8 ff ff ff    call 0xffffffffffffffed 
>>     53   1B @0xbfba3582: 59                pop ecx                 
>>     54   2B @0xbfba3583: 31 c0             xor eax, eax            
>>     55   2B @0xbfba3585: b0  4             mov al, 0x4             
>>     56   2B @0xbfba3587: 31 db             xor ebx, ebx            
>>     57   1B @0xbfba3589: 43                inc ebx                 
>>     58   2B @0xbfba358a: 31 d2             xor edx, edx            
>>     59   2B @0xbfba358c: b2  f             mov dl, 0xf             
>>     60   2B @0xbfba358e: cd 80             int 0x80                
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (111/116) = 0.956897
>>    Mem_map start_addr: 0xbfba3526, length: 1024B, exec'ed bytes: 111, range: 116B, end_addr: 0xbfba3599
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfba3520              0000 00000000 00000000        ..........
0xbfba3530 00000000 00000000 00000000 00000000  ................
0xbfba3540 00000000 00000000 00000000 00000000  ................
0xbfba3550 00000000 00000000 00000000 00000000  ................
0xbfba3560 00000000 00000000 00000000 00000000  ................
0xbfba3570 00000000 00000000 00000000 00000000  ................
0xbfba3580 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfba3590 -------- --e8e8ff ffff               ..........      

>>    Done printing success 9
>> Done printing successes
>> The success/offset with the highest overlay density is 0, value of 0.990706
>> The success/offset with the highest average density is 0, value of 0.990706
>> There were 1 different eips: 0xbfba3590 
655 [State 0] Killing state 0
655 [State 0] Terminating state 0 with message 'State was terminated by opcode
            message: "<< Ending state 0"
            status: 0'
All states were terminated
Deleting state 0 0x0x34c9390
Stack trace
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x73f2d9]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44e645]
  /lib/libc.so.6 : exit()+0xe2
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x71ab31]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x51e71d]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x453071]
  /lib/libc.so.6 : __libc_start_main()+0xfe
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44be69]
