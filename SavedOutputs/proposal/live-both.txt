Current data layout: e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128
Current target triple: 
Creating plugin CorePlugin
Creating plugin BaseInstructions
Creating plugin ExecutionTracer
Creating plugin HostFiles
Creating plugin InterruptMonitor
Creating plugin LinuxSyscallMonitor
Creating plugin DasosPreproc
2 [State 0] Created initial state
Adding memory block (startAddr = 0x0, size = 0xa0000, hostAddr = 0x3f7f000, isSharedConcrete=0)
Adding memory block (startAddr = 0xa0000, size = 0x60000, hostAddr = 0x4226000, isSharedConcrete=1)
Adding memory block (startAddr = 0x100000, size = 0x7f00000, hostAddr = 0x2aaab8aad000, isSharedConcrete=0)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1d107000, isSharedConcrete=1)
Adding memory block (startAddr = 0xc0000, size = 0x20000, hostAddr = 0x1d150000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x800000, hostAddr = 0x2aaac09af000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x10000, hostAddr = 0x1ec77000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1eceb000, isSharedConcrete=1)
Initing initial device state.
Looking for relevant virtual devices...
   Registering device slirp
   Shared device block
   Registering device timer
   Shared device ram
   Registering device cpu_common
   Shared device cpu
   Registering device apic
   Registering device fw_cfg
   Registering device i8259
   Registering device i8259
   Registering device PCIBUS
   Registering device I440FX
   Registering device PIIX3
   Registering device cirrus_vga
   Registering device mc146818rtc
   Registering device ioapic
   Registering device i8254
   Registering device serial
   Registering device e1000
   Registering device ide
   Registering device ps2kbd
   Registering device ps2mouse
   Registering device vmmouse
   Registering device pckbd
   Registering device dma
   Registering device dma
   Registering device fdc
   Registering device piix4_pm
   Registering device i2c_bus
WARNING!!! All writes to disk will be lost after shutdown.
Initializing periodic timer
Firing timer event
Firing timer event
Firing timer event
Firing timer event
Firing timer event
Firing timer event
Firing timer event
Firing timer event
62 [State 0] Message from guest (0xbfb7646c): << Within execShellcode with params f: 0, c: 1024, eip_known: yes

>> fuzzInit: datum forking for value 0
>> fuzzInit: datum forking for value 0
62 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 0)
        (ReadLSB w32 0 v0_fuzz_symb_0)))
    state 1 with condition (Not (Eq false
         (Eq (w32 0)
             (ReadLSB w32 0 v0_fuzz_symb_0))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
Size=2 Low=0 splitIndex=1 high=1
62 [State 0] Switching from state 0 to state 1
Copied 34928 (count=1)
Finalizing TB execution 1
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
62 [State 1] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 0 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
62 [State 1] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e10: 00 00             add [eax], al           
62 [State 1] Terminating state 1 with message 'eliminated a state with an impossible first instruction'
62 [State 1] Switching from state 1 to state 0
Copied 34928 (count=1)
Deleting state 1 0x0x205017b0
62 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 0
>> fuzzInit: datum forking for value 1
>> fuzzInit: datum forking for value 1
62 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1)
        (ReadLSB w32 0 v1_fuzz_symb_1)))
    state 2 with condition (Not (Eq false
         (Eq (w32 1)
             (ReadLSB w32 0 v1_fuzz_symb_1))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1-8048a0e
Size=2 Low=0 splitIndex=1 high=1
62 [State 0] Switching from state 0 to state 2
Copied 34928 (count=1)
Finalizing TB execution 2
s2e_dummyMainFunction
tcg-llvm-tb-1-8048a0e
Firing timer event
62 [State 2] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
63 [State 2] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e11: 00 00             add [eax], al           
63 [State 2] Terminating state 2 with message 'eliminated a state with an impossible first instruction'
63 [State 2] Switching from state 2 to state 0
Copied 34928 (count=1)
Deleting state 2 0x0x204c1cf0
63 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1
>> fuzzInit: datum forking for value 2
>> fuzzInit: datum forking for value 2
63 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 2)
        (ReadLSB w32 0 v2_fuzz_symb_2)))
    state 3 with condition (Not (Eq false
         (Eq (w32 2)
             (ReadLSB w32 0 v2_fuzz_symb_2))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-2-8048a0e
Size=2 Low=0 splitIndex=1 high=1
63 [State 0] Switching from state 0 to state 3
Copied 34928 (count=1)
Finalizing TB execution 3
s2e_dummyMainFunction
tcg-llvm-tb-2-8048a0e
63 [State 3] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 2 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
63 [State 3] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e12: 00 00             add [eax], al           
63 [State 3] Terminating state 3 with message 'eliminated a state with an impossible first instruction'
63 [State 3] Switching from state 3 to state 0
Copied 34928 (count=1)
Deleting state 3 0x0x204c1cf0
Firing timer event
63 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 2
>> fuzzInit: datum forking for value 3
>> fuzzInit: datum forking for value 3
63 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 3)
        (ReadLSB w32 0 v3_fuzz_symb_3)))
    state 4 with condition (Not (Eq false
         (Eq (w32 3)
             (ReadLSB w32 0 v3_fuzz_symb_3))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-3-8048a0e
Size=2 Low=0 splitIndex=1 high=1
63 [State 0] Switching from state 0 to state 4
Copied 34928 (count=1)
Finalizing TB execution 4
s2e_dummyMainFunction
tcg-llvm-tb-3-8048a0e
64 [State 4] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 3 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
64 [State 4] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e13: 00 00             add [eax], al           
64 [State 4] Terminating state 4 with message 'eliminated a state with an impossible first instruction'
64 [State 4] Switching from state 4 to state 0
Copied 34928 (count=1)
Deleting state 4 0x0x204c1cf0
64 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 3
>> fuzzInit: datum forking for value 4
>> fuzzInit: datum forking for value 4
64 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 4)
        (ReadLSB w32 0 v4_fuzz_symb_4)))
    state 5 with condition (Not (Eq false
         (Eq (w32 4)
             (ReadLSB w32 0 v4_fuzz_symb_4))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-4-8048a0e
Size=2 Low=0 splitIndex=1 high=1
64 [State 0] Switching from state 0 to state 5
Copied 34928 (count=1)
Finalizing TB execution 5
s2e_dummyMainFunction
tcg-llvm-tb-4-8048a0e
64 [State 5] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 4 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
64 [State 5] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e14: 00 00             add [eax], al           
64 [State 5] Terminating state 5 with message 'eliminated a state with an impossible first instruction'
64 [State 5] Switching from state 5 to state 0
Copied 34928 (count=1)
Deleting state 5 0x0x204c1cf0
Firing timer event
65 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 4
>> fuzzInit: datum forking for value 5
>> fuzzInit: datum forking for value 5
65 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 5)
        (ReadLSB w32 0 v5_fuzz_symb_5)))
    state 6 with condition (Not (Eq false
         (Eq (w32 5)
             (ReadLSB w32 0 v5_fuzz_symb_5))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-5-8048a0e
Size=2 Low=0 splitIndex=1 high=1
65 [State 0] Switching from state 0 to state 6
Copied 34928 (count=1)
Finalizing TB execution 6
s2e_dummyMainFunction
tcg-llvm-tb-5-8048a0e
65 [State 6] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 5 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
65 [State 6] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e15: 00 00             add [eax], al           
65 [State 6] Terminating state 6 with message 'eliminated a state with an impossible first instruction'
65 [State 6] Switching from state 6 to state 0
Copied 34928 (count=1)
Deleting state 6 0x0x20483200
65 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 5
>> fuzzInit: datum forking for value 6
>> fuzzInit: datum forking for value 6
65 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 6)
        (ReadLSB w32 0 v6_fuzz_symb_6)))
    state 7 with condition (Not (Eq false
         (Eq (w32 6)
             (ReadLSB w32 0 v6_fuzz_symb_6))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-6-8048a0e
Size=2 Low=0 splitIndex=1 high=1
65 [State 0] Switching from state 0 to state 7
Copied 34928 (count=1)
Finalizing TB execution 7
s2e_dummyMainFunction
tcg-llvm-tb-6-8048a0e
65 [State 7] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 6 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
66 [State 7] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e16: 00 00             add [eax], al           
66 [State 7] Terminating state 7 with message 'eliminated a state with an impossible first instruction'
66 [State 7] Switching from state 7 to state 0
Copied 34928 (count=1)
Deleting state 7 0x0x3f45e00
66 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 6
>> fuzzInit: datum forking for value 7
>> fuzzInit: datum forking for value 7
66 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 7)
        (ReadLSB w32 0 v7_fuzz_symb_7)))
    state 8 with condition (Not (Eq false
         (Eq (w32 7)
             (ReadLSB w32 0 v7_fuzz_symb_7))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-7-8048a0e
Size=2 Low=0 splitIndex=1 high=1
66 [State 0] Switching from state 0 to state 8
Copied 34928 (count=1)
Finalizing TB execution 8
s2e_dummyMainFunction
tcg-llvm-tb-7-8048a0e
66 [State 8] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 7 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
67 [State 8] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e17: 00 00             add [eax], al           
67 [State 8] Terminating state 8 with message 'eliminated a state with an impossible first instruction'
67 [State 8] Switching from state 8 to state 0
Copied 34928 (count=1)
Deleting state 8 0x0x20562250
67 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 7
>> fuzzInit: datum forking for value 8
>> fuzzInit: datum forking for value 8
67 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 8)
        (ReadLSB w32 0 v8_fuzz_symb_8)))
    state 9 with condition (Not (Eq false
         (Eq (w32 8)
             (ReadLSB w32 0 v8_fuzz_symb_8))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-8-8048a0e
Size=2 Low=0 splitIndex=1 high=1
67 [State 0] Switching from state 0 to state 9
Copied 34928 (count=1)
Finalizing TB execution 9
s2e_dummyMainFunction
tcg-llvm-tb-8-8048a0e
67 [State 9] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 8 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
68 [State 9] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e18: 00 00             add [eax], al           
68 [State 9] Terminating state 9 with message 'eliminated a state with an impossible first instruction'
68 [State 9] Switching from state 9 to state 0
Copied 34928 (count=1)
Deleting state 9 0x0x208b8cf0
68 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 8
>> fuzzInit: datum forking for value 9
>> fuzzInit: datum forking for value 9
68 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 9)
        (ReadLSB w32 0 v9_fuzz_symb_9)))
    state 10 with condition (Not (Eq false
         (Eq (w32 9)
             (ReadLSB w32 0 v9_fuzz_symb_9))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-9-8048a0e
Size=2 Low=0 splitIndex=1 high=1
68 [State 0] Switching from state 0 to state 10
Copied 34928 (count=1)
Finalizing TB execution 10
s2e_dummyMainFunction
tcg-llvm-tb-9-8048a0e
68 [State 10] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 9 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
69 [State 10] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e19: 00 00             add [eax], al           
69 [State 10] Terminating state 10 with message 'eliminated a state with an impossible first instruction'
69 [State 10] Switching from state 10 to state 0
Copied 34928 (count=1)
Deleting state 10 0x0x20571ff0
69 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 9
>> fuzzInit: datum forking for value 10
>> fuzzInit: datum forking for value 10
69 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 10)
        (ReadLSB w32 0 v10_fuzz_symb_10)))
    state 11 with condition (Not (Eq false
         (Eq (w32 10)
             (ReadLSB w32 0 v10_fuzz_symb_10))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-10-8048a0e
Size=2 Low=0 splitIndex=1 high=1
69 [State 0] Switching from state 0 to state 11
Copied 34928 (count=1)
Finalizing TB execution 11
s2e_dummyMainFunction
tcg-llvm-tb-10-8048a0e
Firing timer event
70 [State 11] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 10 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
70 [State 11] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e1a: 00 00             add [eax], al           
70 [State 11] Terminating state 11 with message 'eliminated a state with an impossible first instruction'
70 [State 11] Switching from state 11 to state 0
Copied 34928 (count=1)
Deleting state 11 0x0x20571ff0
70 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 10
>> fuzzInit: datum forking for value 11
>> fuzzInit: datum forking for value 11
70 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 11)
        (ReadLSB w32 0 v11_fuzz_symb_11)))
    state 12 with condition (Not (Eq false
         (Eq (w32 11)
             (ReadLSB w32 0 v11_fuzz_symb_11))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-11-8048a0e
Size=2 Low=0 splitIndex=1 high=1
70 [State 0] Switching from state 0 to state 12
Copied 34928 (count=1)
Finalizing TB execution 12
s2e_dummyMainFunction
tcg-llvm-tb-11-8048a0e
Firing timer event
71 [State 12] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 11 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
71 [State 12] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e1b: 00 00             add [eax], al           
71 [State 12] Terminating state 12 with message 'eliminated a state with an impossible first instruction'
71 [State 12] Switching from state 12 to state 0
Copied 34928 (count=1)
Deleting state 12 0x0x3f48120
71 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 11
>> fuzzInit: datum forking for value 12
>> fuzzInit: datum forking for value 12
>> fuzzInit: datum forking for value 12
71 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 12)
        (ReadLSB w32 0 v12_fuzz_symb_12)))
    state 13 with condition (Not (Eq false
         (Eq (w32 12)
             (ReadLSB w32 0 v12_fuzz_symb_12))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-12-8048a0e
Size=2 Low=0 splitIndex=1 high=1
72 [State 0] Switching from state 0 to state 13
Copied 34928 (count=1)
Finalizing TB execution 13
s2e_dummyMainFunction
tcg-llvm-tb-12-8048a0e
Firing timer event
72 [State 13] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 12 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
72 [State 13] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e1c: 00 00             add [eax], al           
72 [State 13] Terminating state 13 with message 'eliminated a state with an impossible first instruction'
72 [State 13] Switching from state 13 to state 0
Copied 34928 (count=1)
Deleting state 13 0x0x3f48120
72 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 12
>> fuzzInit: datum forking for value 13
>> fuzzInit: datum forking for value 13
72 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 13)
        (ReadLSB w32 0 v13_fuzz_symb_13)))
    state 14 with condition (Not (Eq false
         (Eq (w32 13)
             (ReadLSB w32 0 v13_fuzz_symb_13))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-13-8048a0e
Size=2 Low=0 splitIndex=1 high=1
72 [State 0] Switching from state 0 to state 14
Copied 34928 (count=1)
Finalizing TB execution 14
s2e_dummyMainFunction
tcg-llvm-tb-13-8048a0e
72 [State 14] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 13 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
73 [State 14] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e1d: 00 00             add [eax], al           
73 [State 14] Terminating state 14 with message 'eliminated a state with an impossible first instruction'
73 [State 14] Switching from state 14 to state 0
Copied 34928 (count=1)
Deleting state 14 0x0x3f48120
73 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 13
>> fuzzInit: datum forking for value 14
>> fuzzInit: datum forking for value 14
73 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 14)
        (ReadLSB w32 0 v14_fuzz_symb_14)))
    state 15 with condition (Not (Eq false
         (Eq (w32 14)
             (ReadLSB w32 0 v14_fuzz_symb_14))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-14-8048a0e
Size=2 Low=0 splitIndex=1 high=1
73 [State 0] Switching from state 0 to state 15
Copied 34928 (count=1)
Finalizing TB execution 15
s2e_dummyMainFunction
tcg-llvm-tb-14-8048a0e
73 [State 15] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 14 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
73 [State 15] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e1e: 00 00             add [eax], al           
73 [State 15] Terminating state 15 with message 'eliminated a state with an impossible first instruction'
73 [State 15] Switching from state 15 to state 0
Copied 34928 (count=1)
Deleting state 15 0x0x209a4660
73 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 14
>> fuzzInit: datum forking for value 15
>> fuzzInit: datum forking for value 15
73 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 15)
        (ReadLSB w32 0 v15_fuzz_symb_15)))
    state 16 with condition (Not (Eq false
         (Eq (w32 15)
             (ReadLSB w32 0 v15_fuzz_symb_15))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-15-8048a0e
Size=2 Low=0 splitIndex=1 high=1
73 [State 0] Switching from state 0 to state 16
Copied 34928 (count=1)
Finalizing TB execution 16
s2e_dummyMainFunction
tcg-llvm-tb-15-8048a0e
Firing timer event
74 [State 16] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 15 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
74 [State 16] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e1f: 00 00             add [eax], al           
74 [State 16] Terminating state 16 with message 'eliminated a state with an impossible first instruction'
74 [State 16] Switching from state 16 to state 0
Copied 34928 (count=1)
Deleting state 16 0x0x209a4660
74 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 15
>> fuzzInit: datum forking for value 16
>> fuzzInit: datum forking for value 16
74 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 16)
        (ReadLSB w32 0 v16_fuzz_symb_16)))
    state 17 with condition (Not (Eq false
         (Eq (w32 16)
             (ReadLSB w32 0 v16_fuzz_symb_16))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-16-8048a0e
Size=2 Low=0 splitIndex=1 high=1
74 [State 0] Switching from state 0 to state 17
Copied 34928 (count=1)
Finalizing TB execution 17
s2e_dummyMainFunction
tcg-llvm-tb-16-8048a0e
74 [State 17] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 16 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
74 [State 17] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e20: 00 00             add [eax], al           
74 [State 17] Terminating state 17 with message 'eliminated a state with an impossible first instruction'
74 [State 17] Switching from state 17 to state 0
Copied 34928 (count=1)
Deleting state 17 0x0x209a4660
Firing timer event
75 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 16
>> fuzzInit: datum forking for value 17
>> fuzzInit: datum forking for value 17
75 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 17)
        (ReadLSB w32 0 v17_fuzz_symb_17)))
    state 18 with condition (Not (Eq false
         (Eq (w32 17)
             (ReadLSB w32 0 v17_fuzz_symb_17))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-17-8048a0e
Size=2 Low=0 splitIndex=1 high=1
75 [State 0] Switching from state 0 to state 18
Copied 34928 (count=1)
Finalizing TB execution 18
s2e_dummyMainFunction
tcg-llvm-tb-17-8048a0e
75 [State 18] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 17 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
75 [State 18] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e21: 00 00             add [eax], al           
75 [State 18] Terminating state 18 with message 'eliminated a state with an impossible first instruction'
75 [State 18] Switching from state 18 to state 0
Copied 34928 (count=1)
Deleting state 18 0x0x209a4660
75 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 17
>> fuzzInit: datum forking for value 18
>> fuzzInit: datum forking for value 18
>> fuzzInit: datum forking for value 18
75 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 18)
        (ReadLSB w32 0 v18_fuzz_symb_18)))
    state 19 with condition (Not (Eq false
         (Eq (w32 18)
             (ReadLSB w32 0 v18_fuzz_symb_18))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-18-8048a0e
Size=2 Low=0 splitIndex=1 high=1
75 [State 0] Switching from state 0 to state 19
Copied 34928 (count=1)
Finalizing TB execution 19
s2e_dummyMainFunction
tcg-llvm-tb-18-8048a0e
75 [State 19] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 18 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
76 [State 19] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e22: 00 00             add [eax], al           
76 [State 19] Terminating state 19 with message 'eliminated a state with an impossible first instruction'
76 [State 19] Switching from state 19 to state 0
Copied 34928 (count=1)
Deleting state 19 0x0x209a4660
Firing timer event
76 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 18
>> fuzzInit: datum forking for value 19
>> fuzzInit: datum forking for value 19
>> fuzzInit: datum forking for value 19
76 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 19)
        (ReadLSB w32 0 v19_fuzz_symb_19)))
    state 20 with condition (Not (Eq false
         (Eq (w32 19)
             (ReadLSB w32 0 v19_fuzz_symb_19))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-19-8048a0e
Size=2 Low=0 splitIndex=1 high=1
76 [State 0] Switching from state 0 to state 20
Copied 34928 (count=1)
Finalizing TB execution 20
s2e_dummyMainFunction
tcg-llvm-tb-19-8048a0e
76 [State 20] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 19 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
76 [State 20] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e23: 00 00             add [eax], al           
76 [State 20] Terminating state 20 with message 'eliminated a state with an impossible first instruction'
76 [State 20] Switching from state 20 to state 0
Copied 34928 (count=1)
Deleting state 20 0x0x209a4660
76 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 19
>> fuzzInit: datum forking for value 20
>> fuzzInit: datum forking for value 20
76 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 20)
        (ReadLSB w32 0 v20_fuzz_symb_20)))
    state 21 with condition (Not (Eq false
         (Eq (w32 20)
             (ReadLSB w32 0 v20_fuzz_symb_20))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-20-8048a0e
Size=2 Low=0 splitIndex=1 high=1
76 [State 0] Switching from state 0 to state 21
Copied 34928 (count=1)
Finalizing TB execution 21
s2e_dummyMainFunction
tcg-llvm-tb-20-8048a0e
77 [State 21] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 20 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
77 [State 21] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e24: 00 00             add [eax], al           
77 [State 21] Terminating state 21 with message 'eliminated a state with an impossible first instruction'
77 [State 21] Switching from state 21 to state 0
Copied 34928 (count=1)
Deleting state 21 0x0x209a4660
77 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 20
>> fuzzInit: datum forking for value 21
>> fuzzInit: datum forking for value 21
77 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 21)
        (ReadLSB w32 0 v21_fuzz_symb_21)))
    state 22 with condition (Not (Eq false
         (Eq (w32 21)
             (ReadLSB w32 0 v21_fuzz_symb_21))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-21-8048a0e
Size=2 Low=0 splitIndex=1 high=1
77 [State 0] Switching from state 0 to state 22
Copied 34928 (count=1)
Finalizing TB execution 22
s2e_dummyMainFunction
tcg-llvm-tb-21-8048a0e
77 [State 22] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 21 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
77 [State 22] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e25: 00 00             add [eax], al           
77 [State 22] Terminating state 22 with message 'eliminated a state with an impossible first instruction'
77 [State 22] Switching from state 22 to state 0
Copied 34928 (count=1)
Deleting state 22 0x0x209a4660
78 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 21
>> fuzzInit: datum forking for value 22
>> fuzzInit: datum forking for value 22
78 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 22)
        (ReadLSB w32 0 v22_fuzz_symb_22)))
    state 23 with condition (Not (Eq false
         (Eq (w32 22)
             (ReadLSB w32 0 v22_fuzz_symb_22))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-22-8048a0e
Size=2 Low=0 splitIndex=1 high=1
78 [State 0] Switching from state 0 to state 23
Copied 34928 (count=1)
Finalizing TB execution 23
s2e_dummyMainFunction
tcg-llvm-tb-22-8048a0e
Firing timer event
78 [State 23] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 22 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
78 [State 23] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e26: 00 00             add [eax], al           
78 [State 23] Terminating state 23 with message 'eliminated a state with an impossible first instruction'
78 [State 23] Switching from state 23 to state 0
Copied 34928 (count=1)
Deleting state 23 0x0x209a4660
78 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 22
>> fuzzInit: datum forking for value 23
>> fuzzInit: datum forking for value 23
78 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 23)
        (ReadLSB w32 0 v23_fuzz_symb_23)))
    state 24 with condition (Not (Eq false
         (Eq (w32 23)
             (ReadLSB w32 0 v23_fuzz_symb_23))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-23-8048a0e
Size=2 Low=0 splitIndex=1 high=1
78 [State 0] Switching from state 0 to state 24
Copied 34928 (count=1)
Finalizing TB execution 24
s2e_dummyMainFunction
tcg-llvm-tb-23-8048a0e
78 [State 24] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 23 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
79 [State 24] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e27: 00 00             add [eax], al           
79 [State 24] Terminating state 24 with message 'eliminated a state with an impossible first instruction'
79 [State 24] Switching from state 24 to state 0
Copied 34928 (count=1)
Deleting state 24 0x0x209a4660
Firing timer event
79 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 23
>> fuzzInit: datum forking for value 24
>> fuzzInit: datum forking for value 24
79 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 24)
        (ReadLSB w32 0 v24_fuzz_symb_24)))
    state 25 with condition (Not (Eq false
         (Eq (w32 24)
             (ReadLSB w32 0 v24_fuzz_symb_24))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-24-8048a0e
Size=2 Low=0 splitIndex=1 high=1
79 [State 0] Switching from state 0 to state 25
Copied 34928 (count=1)
Finalizing TB execution 25
s2e_dummyMainFunction
tcg-llvm-tb-24-8048a0e
79 [State 25] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 24 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
79 [State 25] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e28: 00 00             add [eax], al           
79 [State 25] Terminating state 25 with message 'eliminated a state with an impossible first instruction'
79 [State 25] Switching from state 25 to state 0
Copied 34928 (count=1)
Deleting state 25 0x0x209a4660
79 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 24
>> fuzzInit: datum forking for value 25
>> fuzzInit: datum forking for value 25
79 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 25)
        (ReadLSB w32 0 v25_fuzz_symb_25)))
    state 26 with condition (Not (Eq false
         (Eq (w32 25)
             (ReadLSB w32 0 v25_fuzz_symb_25))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-25-8048a0e
Size=2 Low=0 splitIndex=1 high=1
79 [State 0] Switching from state 0 to state 26
Copied 34928 (count=1)
Finalizing TB execution 26
s2e_dummyMainFunction
tcg-llvm-tb-25-8048a0e
80 [State 26] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 25 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
80 [State 26] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e29: 00 00             add [eax], al           
80 [State 26] Terminating state 26 with message 'eliminated a state with an impossible first instruction'
80 [State 26] Switching from state 26 to state 0
Copied 34928 (count=1)
Deleting state 26 0x0x209a4660
80 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 25
>> fuzzInit: datum forking for value 26
>> fuzzInit: datum forking for value 26
80 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 26)
        (ReadLSB w32 0 v26_fuzz_symb_26)))
    state 27 with condition (Not (Eq false
         (Eq (w32 26)
             (ReadLSB w32 0 v26_fuzz_symb_26))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-26-8048a0e
Size=2 Low=0 splitIndex=1 high=1
80 [State 0] Switching from state 0 to state 27
Copied 34928 (count=1)
Finalizing TB execution 27
s2e_dummyMainFunction
tcg-llvm-tb-26-8048a0e
80 [State 27] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 26 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
80 [State 27] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e2a: 00 00             add [eax], al           
80 [State 27] Terminating state 27 with message 'eliminated a state with an impossible first instruction'
80 [State 27] Switching from state 27 to state 0
Copied 34928 (count=1)
Deleting state 27 0x0x209a4660
81 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 26
>> fuzzInit: datum forking for value 27
>> fuzzInit: datum forking for value 27
81 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 27)
        (ReadLSB w32 0 v27_fuzz_symb_27)))
    state 28 with condition (Not (Eq false
         (Eq (w32 27)
             (ReadLSB w32 0 v27_fuzz_symb_27))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-27-8048a0e
Size=2 Low=0 splitIndex=1 high=1
81 [State 0] Switching from state 0 to state 28
Copied 34928 (count=1)
Finalizing TB execution 28
s2e_dummyMainFunction
tcg-llvm-tb-27-8048a0e
Firing timer event
81 [State 28] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 27 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
81 [State 28] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e2b: 00 00             add [eax], al           
81 [State 28] Terminating state 28 with message 'eliminated a state with an impossible first instruction'
81 [State 28] Switching from state 28 to state 0
Copied 34928 (count=1)
Deleting state 28 0x0x209a4660
81 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 27
>> fuzzInit: datum forking for value 28
>> fuzzInit: datum forking for value 28
81 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 28)
        (ReadLSB w32 0 v28_fuzz_symb_28)))
    state 29 with condition (Not (Eq false
         (Eq (w32 28)
             (ReadLSB w32 0 v28_fuzz_symb_28))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-28-8048a0e
Size=2 Low=0 splitIndex=1 high=1
81 [State 0] Switching from state 0 to state 29
Copied 34928 (count=1)
Finalizing TB execution 29
s2e_dummyMainFunction
tcg-llvm-tb-28-8048a0e
81 [State 29] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 28 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
81 [State 29] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e2c: 00 00             add [eax], al           
81 [State 29] Terminating state 29 with message 'eliminated a state with an impossible first instruction'
81 [State 29] Switching from state 29 to state 0
Copied 34928 (count=1)
Deleting state 29 0x0x209a4660
82 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 28
>> fuzzInit: datum forking for value 29
>> fuzzInit: datum forking for value 29
82 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 29)
        (ReadLSB w32 0 v29_fuzz_symb_29)))
    state 30 with condition (Not (Eq false
         (Eq (w32 29)
             (ReadLSB w32 0 v29_fuzz_symb_29))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-29-8048a0e
Size=2 Low=0 splitIndex=1 high=1
82 [State 0] Switching from state 0 to state 30
Copied 34928 (count=1)
Finalizing TB execution 30
s2e_dummyMainFunction
tcg-llvm-tb-29-8048a0e
Firing timer event
82 [State 30] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 29 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
82 [State 30] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e2d: 00 00             add [eax], al           
82 [State 30] Terminating state 30 with message 'eliminated a state with an impossible first instruction'
82 [State 30] Switching from state 30 to state 0
Copied 34928 (count=1)
Deleting state 30 0x0x209a4660
82 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 29
>> fuzzInit: datum forking for value 30
>> fuzzInit: datum forking for value 30
82 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 30)
        (ReadLSB w32 0 v30_fuzz_symb_30)))
    state 31 with condition (Not (Eq false
         (Eq (w32 30)
             (ReadLSB w32 0 v30_fuzz_symb_30))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-30-8048a0e
Size=2 Low=0 splitIndex=1 high=1
82 [State 0] Switching from state 0 to state 31
Copied 34928 (count=1)
Finalizing TB execution 31
s2e_dummyMainFunction
tcg-llvm-tb-30-8048a0e
83 [State 31] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 30 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
83 [State 31] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e2e: 00 00             add [eax], al           
83 [State 31] Terminating state 31 with message 'eliminated a state with an impossible first instruction'
83 [State 31] Switching from state 31 to state 0
Copied 34928 (count=1)
Deleting state 31 0x0x209a4660
83 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 30
>> fuzzInit: datum forking for value 31
>> fuzzInit: datum forking for value 31
83 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 31)
        (ReadLSB w32 0 v31_fuzz_symb_31)))
    state 32 with condition (Not (Eq false
         (Eq (w32 31)
             (ReadLSB w32 0 v31_fuzz_symb_31))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-31-8048a0e
Size=2 Low=0 splitIndex=1 high=1
83 [State 0] Switching from state 0 to state 32
Copied 34928 (count=1)
Finalizing TB execution 32
s2e_dummyMainFunction
tcg-llvm-tb-31-8048a0e
83 [State 32] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 31 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
84 [State 32] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e2f: 00 00             add [eax], al           
84 [State 32] Terminating state 32 with message 'eliminated a state with an impossible first instruction'
84 [State 32] Switching from state 32 to state 0
Copied 34928 (count=1)
Deleting state 32 0x0x209a4660
Firing timer event
84 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 31
>> fuzzInit: datum forking for value 32
>> fuzzInit: datum forking for value 32
84 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 32)
        (ReadLSB w32 0 v32_fuzz_symb_32)))
    state 33 with condition (Not (Eq false
         (Eq (w32 32)
             (ReadLSB w32 0 v32_fuzz_symb_32))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-32-8048a0e
Size=2 Low=0 splitIndex=1 high=1
84 [State 0] Switching from state 0 to state 33
Copied 34928 (count=1)
Finalizing TB execution 33
s2e_dummyMainFunction
tcg-llvm-tb-32-8048a0e
84 [State 33] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 32 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
84 [State 33] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e30: 00 00             add [eax], al           
84 [State 33] Terminating state 33 with message 'eliminated a state with an impossible first instruction'
84 [State 33] Switching from state 33 to state 0
Copied 34928 (count=1)
Deleting state 33 0x0x209a4660
85 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 32
>> fuzzInit: datum forking for value 33
>> fuzzInit: datum forking for value 33
85 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 33)
        (ReadLSB w32 0 v33_fuzz_symb_33)))
    state 34 with condition (Not (Eq false
         (Eq (w32 33)
             (ReadLSB w32 0 v33_fuzz_symb_33))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-33-8048a0e
Size=2 Low=0 splitIndex=1 high=1
85 [State 0] Switching from state 0 to state 34
Copied 34928 (count=1)
Finalizing TB execution 34
s2e_dummyMainFunction
tcg-llvm-tb-33-8048a0e
85 [State 34] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 33 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
85 [State 34] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e31: 00 00             add [eax], al           
85 [State 34] Terminating state 34 with message 'eliminated a state with an impossible first instruction'
85 [State 34] Switching from state 34 to state 0
Copied 34928 (count=1)
Deleting state 34 0x0x209a4660
85 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 33
>> fuzzInit: datum forking for value 34
>> fuzzInit: datum forking for value 34
85 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 34)
        (ReadLSB w32 0 v34_fuzz_symb_34)))
    state 35 with condition (Not (Eq false
         (Eq (w32 34)
             (ReadLSB w32 0 v34_fuzz_symb_34))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-34-8048a0e
Size=2 Low=0 splitIndex=1 high=1
85 [State 0] Switching from state 0 to state 35
Copied 34928 (count=1)
Finalizing TB execution 35
s2e_dummyMainFunction
tcg-llvm-tb-34-8048a0e
85 [State 35] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 34 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
85 [State 35] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e32: 00 00             add [eax], al           
85 [State 35] Terminating state 35 with message 'eliminated a state with an impossible first instruction'
85 [State 35] Switching from state 35 to state 0
Copied 34928 (count=1)
Deleting state 35 0x0x209a4660
86 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 34
>> fuzzInit: datum forking for value 35
>> fuzzInit: datum forking for value 35
86 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 35)
        (ReadLSB w32 0 v35_fuzz_symb_35)))
    state 36 with condition (Not (Eq false
         (Eq (w32 35)
             (ReadLSB w32 0 v35_fuzz_symb_35))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-35-8048a0e
Size=2 Low=0 splitIndex=1 high=1
86 [State 0] Switching from state 0 to state 36
Copied 34928 (count=1)
Finalizing TB execution 36
s2e_dummyMainFunction
tcg-llvm-tb-35-8048a0e
Firing timer event
86 [State 36] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 35 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
86 [State 36] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e33: 00 00             add [eax], al           
86 [State 36] Terminating state 36 with message 'eliminated a state with an impossible first instruction'
86 [State 36] Switching from state 36 to state 0
Copied 34928 (count=1)
Deleting state 36 0x0x209a4660
86 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 35
>> fuzzInit: datum forking for value 36
>> fuzzInit: datum forking for value 36
86 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 36)
        (ReadLSB w32 0 v36_fuzz_symb_36)))
    state 37 with condition (Not (Eq false
         (Eq (w32 36)
             (ReadLSB w32 0 v36_fuzz_symb_36))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-36-8048a0e
Size=2 Low=0 splitIndex=1 high=1
86 [State 0] Switching from state 0 to state 37
Copied 34928 (count=1)
Finalizing TB execution 37
s2e_dummyMainFunction
tcg-llvm-tb-36-8048a0e
87 [State 37] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 36 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
87 [State 37] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e34: 00 00             add [eax], al           
87 [State 37] Terminating state 37 with message 'eliminated a state with an impossible first instruction'
87 [State 37] Switching from state 37 to state 0
Copied 34928 (count=1)
Deleting state 37 0x0x209a4660
Firing timer event
87 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 36
>> fuzzInit: datum forking for value 37
>> fuzzInit: datum forking for value 37
87 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 37)
        (ReadLSB w32 0 v37_fuzz_symb_37)))
    state 38 with condition (Not (Eq false
         (Eq (w32 37)
             (ReadLSB w32 0 v37_fuzz_symb_37))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-37-8048a0e
Size=2 Low=0 splitIndex=1 high=1
87 [State 0] Switching from state 0 to state 38
Copied 34928 (count=1)
Finalizing TB execution 38
s2e_dummyMainFunction
tcg-llvm-tb-37-8048a0e
87 [State 38] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 37 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
87 [State 38] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e35: 00 00             add [eax], al           
87 [State 38] Terminating state 38 with message 'eliminated a state with an impossible first instruction'
87 [State 38] Switching from state 38 to state 0
Copied 34928 (count=1)
Deleting state 38 0x0x209a4660
88 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 37
>> fuzzInit: datum forking for value 38
>> fuzzInit: datum forking for value 38
88 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 38)
        (ReadLSB w32 0 v38_fuzz_symb_38)))
    state 39 with condition (Not (Eq false
         (Eq (w32 38)
             (ReadLSB w32 0 v38_fuzz_symb_38))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-38-8048a0e
Size=2 Low=0 splitIndex=1 high=1
88 [State 0] Switching from state 0 to state 39
Copied 34928 (count=1)
Finalizing TB execution 39
s2e_dummyMainFunction
tcg-llvm-tb-38-8048a0e
Firing timer event
88 [State 39] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 38 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
88 [State 39] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e36: 00 00             add [eax], al           
88 [State 39] Terminating state 39 with message 'eliminated a state with an impossible first instruction'
88 [State 39] Switching from state 39 to state 0
Copied 34928 (count=1)
Deleting state 39 0x0x20b60450
88 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 38
>> fuzzInit: datum forking for value 39
>> fuzzInit: datum forking for value 39
88 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 39)
        (ReadLSB w32 0 v39_fuzz_symb_39)))
    state 40 with condition (Not (Eq false
         (Eq (w32 39)
             (ReadLSB w32 0 v39_fuzz_symb_39))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-39-8048a0e
Size=2 Low=0 splitIndex=1 high=1
88 [State 0] Switching from state 0 to state 40
Copied 34928 (count=1)
Finalizing TB execution 40
s2e_dummyMainFunction
tcg-llvm-tb-39-8048a0e
88 [State 40] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 39 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
89 [State 40] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e37: 00 00             add [eax], al           
89 [State 40] Terminating state 40 with message 'eliminated a state with an impossible first instruction'
89 [State 40] Switching from state 40 to state 0
Copied 34928 (count=1)
Deleting state 40 0x0x20b60450
89 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 39
>> fuzzInit: datum forking for value 40
>> fuzzInit: datum forking for value 40
89 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 40)
        (ReadLSB w32 0 v40_fuzz_symb_40)))
    state 41 with condition (Not (Eq false
         (Eq (w32 40)
             (ReadLSB w32 0 v40_fuzz_symb_40))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-40-8048a0e
Size=2 Low=0 splitIndex=1 high=1
89 [State 0] Switching from state 0 to state 41
Copied 34928 (count=1)
Finalizing TB execution 41
s2e_dummyMainFunction
tcg-llvm-tb-40-8048a0e
Firing timer event
89 [State 41] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 40 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
89 [State 41] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e38: 00 00             add [eax], al           
89 [State 41] Terminating state 41 with message 'eliminated a state with an impossible first instruction'
89 [State 41] Switching from state 41 to state 0
Copied 34928 (count=1)
Deleting state 41 0x0x20b60450
89 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 40
>> fuzzInit: datum forking for value 41
>> fuzzInit: datum forking for value 41
89 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 41)
        (ReadLSB w32 0 v41_fuzz_symb_41)))
    state 42 with condition (Not (Eq false
         (Eq (w32 41)
             (ReadLSB w32 0 v41_fuzz_symb_41))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-41-8048a0e
Size=2 Low=0 splitIndex=1 high=1
89 [State 0] Switching from state 0 to state 42
Copied 34928 (count=1)
Finalizing TB execution 42
s2e_dummyMainFunction
tcg-llvm-tb-41-8048a0e
90 [State 42] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 41 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
90 [State 42] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e39: 00 00             add [eax], al           
90 [State 42] Terminating state 42 with message 'eliminated a state with an impossible first instruction'
90 [State 42] Switching from state 42 to state 0
Copied 34928 (count=1)
Deleting state 42 0x0x20b60450
90 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 41
>> fuzzInit: datum forking for value 42
>> fuzzInit: datum forking for value 42
90 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 42)
        (ReadLSB w32 0 v42_fuzz_symb_42)))
    state 43 with condition (Not (Eq false
         (Eq (w32 42)
             (ReadLSB w32 0 v42_fuzz_symb_42))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-42-8048a0e
Size=2 Low=0 splitIndex=1 high=1
90 [State 0] Switching from state 0 to state 43
Copied 34928 (count=1)
Finalizing TB execution 43
s2e_dummyMainFunction
tcg-llvm-tb-42-8048a0e
Firing timer event
90 [State 43] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 42 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
90 [State 43] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e3a: 00 00             add [eax], al           
90 [State 43] Terminating state 43 with message 'eliminated a state with an impossible first instruction'
90 [State 43] Switching from state 43 to state 0
Copied 34928 (count=1)
Deleting state 43 0x0x20b60450
90 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 42
>> fuzzInit: datum forking for value 43
>> fuzzInit: datum forking for value 43
91 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 43)
        (ReadLSB w32 0 v43_fuzz_symb_43)))
    state 44 with condition (Not (Eq false
         (Eq (w32 43)
             (ReadLSB w32 0 v43_fuzz_symb_43))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-43-8048a0e
Size=2 Low=0 splitIndex=1 high=1
91 [State 0] Switching from state 0 to state 44
Copied 34928 (count=1)
Finalizing TB execution 44
s2e_dummyMainFunction
tcg-llvm-tb-43-8048a0e
91 [State 44] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 43 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
91 [State 44] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e3b: 00 00             add [eax], al           
91 [State 44] Terminating state 44 with message 'eliminated a state with an impossible first instruction'
91 [State 44] Switching from state 44 to state 0
Copied 34928 (count=1)
Deleting state 44 0x0x20b60450
Firing timer event
91 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 43
>> fuzzInit: datum forking for value 44
>> fuzzInit: datum forking for value 44
91 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 44)
        (ReadLSB w32 0 v44_fuzz_symb_44)))
    state 45 with condition (Not (Eq false
         (Eq (w32 44)
             (ReadLSB w32 0 v44_fuzz_symb_44))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-44-8048a0e
Size=2 Low=0 splitIndex=1 high=1
91 [State 0] Switching from state 0 to state 45
Copied 34928 (count=1)
Finalizing TB execution 45
s2e_dummyMainFunction
tcg-llvm-tb-44-8048a0e
91 [State 45] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 44 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
91 [State 45] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e3c: 00 00             add [eax], al           
91 [State 45] Terminating state 45 with message 'eliminated a state with an impossible first instruction'
91 [State 45] Switching from state 45 to state 0
Copied 34928 (count=1)
Deleting state 45 0x0x20b60450
92 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 44
>> fuzzInit: datum forking for value 45
>> fuzzInit: datum forking for value 45
92 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 45)
        (ReadLSB w32 0 v45_fuzz_symb_45)))
    state 46 with condition (Not (Eq false
         (Eq (w32 45)
             (ReadLSB w32 0 v45_fuzz_symb_45))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-45-8048a0e
Size=2 Low=0 splitIndex=1 high=1
92 [State 0] Switching from state 0 to state 46
Copied 34928 (count=1)
Finalizing TB execution 46
s2e_dummyMainFunction
tcg-llvm-tb-45-8048a0e
92 [State 46] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 45 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
92 [State 46] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e3d: 00 00             add [eax], al           
92 [State 46] Terminating state 46 with message 'eliminated a state with an impossible first instruction'
92 [State 46] Switching from state 46 to state 0
Copied 34928 (count=1)
Deleting state 46 0x0x20b60450
92 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 45
>> fuzzInit: datum forking for value 46
>> fuzzInit: datum forking for value 46
92 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 46)
        (ReadLSB w32 0 v46_fuzz_symb_46)))
    state 47 with condition (Not (Eq false
         (Eq (w32 46)
             (ReadLSB w32 0 v46_fuzz_symb_46))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-46-8048a0e
Size=2 Low=0 splitIndex=1 high=1
92 [State 0] Switching from state 0 to state 47
Copied 34928 (count=1)
Finalizing TB execution 47
s2e_dummyMainFunction
tcg-llvm-tb-46-8048a0e
93 [State 47] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 46 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
93 [State 47] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e3e: 00 00             add [eax], al           
93 [State 47] Terminating state 47 with message 'eliminated a state with an impossible first instruction'
93 [State 47] Switching from state 47 to state 0
Copied 34928 (count=1)
Deleting state 47 0x0x20b60450
93 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 46
>> fuzzInit: datum forking for value 47
>> fuzzInit: datum forking for value 47
93 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 47)
        (ReadLSB w32 0 v47_fuzz_symb_47)))
    state 48 with condition (Not (Eq false
         (Eq (w32 47)
             (ReadLSB w32 0 v47_fuzz_symb_47))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-47-8048a0e
Size=2 Low=0 splitIndex=1 high=1
93 [State 0] Switching from state 0 to state 48
Copied 34928 (count=1)
Finalizing TB execution 48
s2e_dummyMainFunction
tcg-llvm-tb-47-8048a0e
Firing timer event
93 [State 48] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 47 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
93 [State 48] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e3f: 00 00             add [eax], al           
93 [State 48] Terminating state 48 with message 'eliminated a state with an impossible first instruction'
93 [State 48] Switching from state 48 to state 0
Copied 34928 (count=1)
Deleting state 48 0x0x20b60450
93 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 47
>> fuzzInit: datum forking for value 48
>> fuzzInit: datum forking for value 48
94 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 48)
        (ReadLSB w32 0 v48_fuzz_symb_48)))
    state 49 with condition (Not (Eq false
         (Eq (w32 48)
             (ReadLSB w32 0 v48_fuzz_symb_48))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-48-8048a0e
Size=2 Low=0 splitIndex=1 high=1
94 [State 0] Switching from state 0 to state 49
Copied 34928 (count=1)
Finalizing TB execution 49
s2e_dummyMainFunction
tcg-llvm-tb-48-8048a0e
94 [State 49] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 48 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
94 [State 49] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e40: 00 00             add [eax], al           
94 [State 49] Terminating state 49 with message 'eliminated a state with an impossible first instruction'
94 [State 49] Switching from state 49 to state 0
Copied 34928 (count=1)
Deleting state 49 0x0x20b60450
94 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 48
>> fuzzInit: datum forking for value 49
>> fuzzInit: datum forking for value 49
94 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 49)
        (ReadLSB w32 0 v49_fuzz_symb_49)))
    state 50 with condition (Not (Eq false
         (Eq (w32 49)
             (ReadLSB w32 0 v49_fuzz_symb_49))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-49-8048a0e
Size=2 Low=0 splitIndex=1 high=1
94 [State 0] Switching from state 0 to state 50
Copied 34928 (count=1)
Finalizing TB execution 50
s2e_dummyMainFunction
tcg-llvm-tb-49-8048a0e
Firing timer event
94 [State 50] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 49 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
94 [State 50] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e41: 00 00             add [eax], al           
94 [State 50] Terminating state 50 with message 'eliminated a state with an impossible first instruction'
94 [State 50] Switching from state 50 to state 0
Copied 34928 (count=1)
Deleting state 50 0x0x20b60450
95 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 49
>> fuzzInit: datum forking for value 50
>> fuzzInit: datum forking for value 50
95 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 50)
        (ReadLSB w32 0 v50_fuzz_symb_50)))
    state 51 with condition (Not (Eq false
         (Eq (w32 50)
             (ReadLSB w32 0 v50_fuzz_symb_50))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-50-8048a0e
Size=2 Low=0 splitIndex=1 high=1
95 [State 0] Switching from state 0 to state 51
Copied 34928 (count=1)
Finalizing TB execution 51
s2e_dummyMainFunction
tcg-llvm-tb-50-8048a0e
95 [State 51] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 50 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
95 [State 51] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e42: 00 00             add [eax], al           
95 [State 51] Terminating state 51 with message 'eliminated a state with an impossible first instruction'
95 [State 51] Switching from state 51 to state 0
Copied 34928 (count=1)
Deleting state 51 0x0x20b60450
95 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 50
>> fuzzInit: datum forking for value 51
>> fuzzInit: datum forking for value 51
95 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 51)
        (ReadLSB w32 0 v51_fuzz_symb_51)))
    state 52 with condition (Not (Eq false
         (Eq (w32 51)
             (ReadLSB w32 0 v51_fuzz_symb_51))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-51-8048a0e
Size=2 Low=0 splitIndex=1 high=1
95 [State 0] Switching from state 0 to state 52
Copied 34928 (count=1)
Finalizing TB execution 52
s2e_dummyMainFunction
tcg-llvm-tb-51-8048a0e
Firing timer event
95 [State 52] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 51 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
96 [State 52] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e43: 00 00             add [eax], al           
96 [State 52] Terminating state 52 with message 'eliminated a state with an impossible first instruction'
96 [State 52] Switching from state 52 to state 0
Copied 34928 (count=1)
Deleting state 52 0x0x20b60450
96 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 51
>> fuzzInit: datum forking for value 52
>> fuzzInit: datum forking for value 52
96 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 52)
        (ReadLSB w32 0 v52_fuzz_symb_52)))
    state 53 with condition (Not (Eq false
         (Eq (w32 52)
             (ReadLSB w32 0 v52_fuzz_symb_52))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-52-8048a0e
Size=2 Low=0 splitIndex=1 high=1
96 [State 0] Switching from state 0 to state 53
Copied 34928 (count=1)
Finalizing TB execution 53
s2e_dummyMainFunction
tcg-llvm-tb-52-8048a0e
96 [State 53] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 52 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
96 [State 53] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e44: 00 00             add [eax], al           
96 [State 53] Terminating state 53 with message 'eliminated a state with an impossible first instruction'
96 [State 53] Switching from state 53 to state 0
Copied 34928 (count=1)
Deleting state 53 0x0x20b60450
Firing timer event
96 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 52
>> fuzzInit: datum forking for value 53
>> fuzzInit: datum forking for value 53
96 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 53)
        (ReadLSB w32 0 v53_fuzz_symb_53)))
    state 54 with condition (Not (Eq false
         (Eq (w32 53)
             (ReadLSB w32 0 v53_fuzz_symb_53))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-53-8048a0e
Size=2 Low=0 splitIndex=1 high=1
96 [State 0] Switching from state 0 to state 54
Copied 34928 (count=1)
Finalizing TB execution 54
s2e_dummyMainFunction
tcg-llvm-tb-53-8048a0e
97 [State 54] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 53 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
97 [State 54] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e45: 00 00             add [eax], al           
97 [State 54] Terminating state 54 with message 'eliminated a state with an impossible first instruction'
97 [State 54] Switching from state 54 to state 0
Copied 34928 (count=1)
Deleting state 54 0x0x211f9450
97 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 53
>> fuzzInit: datum forking for value 54
>> fuzzInit: datum forking for value 54
97 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 54)
        (ReadLSB w32 0 v54_fuzz_symb_54)))
    state 55 with condition (Not (Eq false
         (Eq (w32 54)
             (ReadLSB w32 0 v54_fuzz_symb_54))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-54-8048a0e
Size=2 Low=0 splitIndex=1 high=1
97 [State 0] Switching from state 0 to state 55
Copied 34928 (count=1)
Finalizing TB execution 55
s2e_dummyMainFunction
tcg-llvm-tb-54-8048a0e
97 [State 55] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 54 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
97 [State 55] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e46: 00 00             add [eax], al           
97 [State 55] Terminating state 55 with message 'eliminated a state with an impossible first instruction'
97 [State 55] Switching from state 55 to state 0
Copied 34928 (count=1)
Deleting state 55 0x0x211f9450
98 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 54
>> fuzzInit: datum forking for value 55
>> fuzzInit: datum forking for value 55
98 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 55)
        (ReadLSB w32 0 v55_fuzz_symb_55)))
    state 56 with condition (Not (Eq false
         (Eq (w32 55)
             (ReadLSB w32 0 v55_fuzz_symb_55))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-55-8048a0e
Size=2 Low=0 splitIndex=1 high=1
98 [State 0] Switching from state 0 to state 56
Copied 34928 (count=1)
Finalizing TB execution 56
s2e_dummyMainFunction
tcg-llvm-tb-55-8048a0e
98 [State 56] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 55 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
98 [State 56] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e47: 00 00             add [eax], al           
98 [State 56] Terminating state 56 with message 'eliminated a state with an impossible first instruction'
98 [State 56] Switching from state 56 to state 0
Copied 34928 (count=1)
Deleting state 56 0x0x211f9450
98 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 55
>> fuzzInit: datum forking for value 56
>> fuzzInit: datum forking for value 56
98 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 56)
        (ReadLSB w32 0 v56_fuzz_symb_56)))
    state 57 with condition (Not (Eq false
         (Eq (w32 56)
             (ReadLSB w32 0 v56_fuzz_symb_56))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-56-8048a0e
Size=2 Low=0 splitIndex=1 high=1
98 [State 0] Switching from state 0 to state 57
Copied 34928 (count=1)
Finalizing TB execution 57
s2e_dummyMainFunction
tcg-llvm-tb-56-8048a0e
Firing timer event
98 [State 57] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 56 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
98 [State 57] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e48: 00 00             add [eax], al           
98 [State 57] Terminating state 57 with message 'eliminated a state with an impossible first instruction'
98 [State 57] Switching from state 57 to state 0
Copied 34928 (count=1)
Deleting state 57 0x0x211f9450
99 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 56
>> fuzzInit: datum forking for value 57
>> fuzzInit: datum forking for value 57
99 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 57)
        (ReadLSB w32 0 v57_fuzz_symb_57)))
    state 58 with condition (Not (Eq false
         (Eq (w32 57)
             (ReadLSB w32 0 v57_fuzz_symb_57))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-57-8048a0e
Size=2 Low=0 splitIndex=1 high=1
99 [State 0] Switching from state 0 to state 58
Copied 34928 (count=1)
Finalizing TB execution 58
s2e_dummyMainFunction
tcg-llvm-tb-57-8048a0e
99 [State 58] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 57 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
99 [State 58] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e49: 00 00             add [eax], al           
99 [State 58] Terminating state 58 with message 'eliminated a state with an impossible first instruction'
99 [State 58] Switching from state 58 to state 0
Copied 34928 (count=1)
Deleting state 58 0x0x211f9450
99 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 57
>> fuzzInit: datum forking for value 58
>> fuzzInit: datum forking for value 58
99 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 58)
        (ReadLSB w32 0 v58_fuzz_symb_58)))
    state 59 with condition (Not (Eq false
         (Eq (w32 58)
             (ReadLSB w32 0 v58_fuzz_symb_58))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-58-8048a0e
Size=2 Low=0 splitIndex=1 high=1
99 [State 0] Switching from state 0 to state 59
Copied 34928 (count=1)
Finalizing TB execution 59
s2e_dummyMainFunction
tcg-llvm-tb-58-8048a0e
Firing timer event
100 [State 59] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 58 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
100 [State 59] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e4a: 00 00             add [eax], al           
100 [State 59] Terminating state 59 with message 'eliminated a state with an impossible first instruction'
100 [State 59] Switching from state 59 to state 0
Copied 34928 (count=1)
Deleting state 59 0x0x211f9450
100 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 58
>> fuzzInit: datum forking for value 59
>> fuzzInit: datum forking for value 59
100 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 59)
        (ReadLSB w32 0 v59_fuzz_symb_59)))
    state 60 with condition (Not (Eq false
         (Eq (w32 59)
             (ReadLSB w32 0 v59_fuzz_symb_59))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-59-8048a0e
Size=2 Low=0 splitIndex=1 high=1
100 [State 0] Switching from state 0 to state 60
Copied 34928 (count=1)
Finalizing TB execution 60
s2e_dummyMainFunction
tcg-llvm-tb-59-8048a0e
100 [State 60] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 59 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
100 [State 60] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e4b: 00 00             add [eax], al           
100 [State 60] Terminating state 60 with message 'eliminated a state with an impossible first instruction'
100 [State 60] Switching from state 60 to state 0
Copied 34928 (count=1)
Deleting state 60 0x0x211f9450
Firing timer event
100 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 59
>> fuzzInit: datum forking for value 60
>> fuzzInit: datum forking for value 60
101 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 60)
        (ReadLSB w32 0 v60_fuzz_symb_60)))
    state 61 with condition (Not (Eq false
         (Eq (w32 60)
             (ReadLSB w32 0 v60_fuzz_symb_60))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-60-8048a0e
Size=2 Low=0 splitIndex=1 high=1
101 [State 0] Switching from state 0 to state 61
Copied 34928 (count=1)
Finalizing TB execution 61
s2e_dummyMainFunction
tcg-llvm-tb-60-8048a0e
101 [State 61] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 60 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
101 [State 61] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e4c: 00 00             add [eax], al           
101 [State 61] Terminating state 61 with message 'eliminated a state with an impossible first instruction'
101 [State 61] Switching from state 61 to state 0
Copied 34928 (count=1)
Deleting state 61 0x0x211f9450
101 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 60
>> fuzzInit: datum forking for value 61
>> fuzzInit: datum forking for value 61
101 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 61)
        (ReadLSB w32 0 v61_fuzz_symb_61)))
    state 62 with condition (Not (Eq false
         (Eq (w32 61)
             (ReadLSB w32 0 v61_fuzz_symb_61))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-61-8048a0e
Size=2 Low=0 splitIndex=1 high=1
101 [State 0] Switching from state 0 to state 62
Copied 34928 (count=1)
Finalizing TB execution 62
s2e_dummyMainFunction
tcg-llvm-tb-61-8048a0e
101 [State 62] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 61 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
102 [State 62] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e4d: 00 00             add [eax], al           
102 [State 62] Terminating state 62 with message 'eliminated a state with an impossible first instruction'
102 [State 62] Switching from state 62 to state 0
Copied 34928 (count=1)
Deleting state 62 0x0x211f9450
102 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 61
>> fuzzInit: datum forking for value 62
>> fuzzInit: datum forking for value 62
102 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 62)
        (ReadLSB w32 0 v62_fuzz_symb_62)))
    state 63 with condition (Not (Eq false
         (Eq (w32 62)
             (ReadLSB w32 0 v62_fuzz_symb_62))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-62-8048a0e
Size=2 Low=0 splitIndex=1 high=1
102 [State 0] Switching from state 0 to state 63
Copied 34928 (count=1)
Finalizing TB execution 63
s2e_dummyMainFunction
tcg-llvm-tb-62-8048a0e
102 [State 63] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 62 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
102 [State 63] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e4e: 00 00             add [eax], al           
102 [State 63] Terminating state 63 with message 'eliminated a state with an impossible first instruction'
102 [State 63] Switching from state 63 to state 0
Copied 34928 (count=1)
Deleting state 63 0x0x211f9450
102 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 62
>> fuzzInit: datum forking for value 63
>> fuzzInit: datum forking for value 63
102 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 63)
        (ReadLSB w32 0 v63_fuzz_symb_63)))
    state 64 with condition (Not (Eq false
         (Eq (w32 63)
             (ReadLSB w32 0 v63_fuzz_symb_63))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-63-8048a0e
Size=2 Low=0 splitIndex=1 high=1
102 [State 0] Switching from state 0 to state 64
Copied 34928 (count=1)
Finalizing TB execution 64
s2e_dummyMainFunction
tcg-llvm-tb-63-8048a0e
Firing timer event
103 [State 64] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 63 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
103 [State 64] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e4f: 00 00             add [eax], al           
103 [State 64] Terminating state 64 with message 'eliminated a state with an impossible first instruction'
103 [State 64] Switching from state 64 to state 0
Copied 34928 (count=1)
Deleting state 64 0x0x211f9450
103 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 63
>> fuzzInit: datum forking for value 64
>> fuzzInit: datum forking for value 64
103 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 64)
        (ReadLSB w32 0 v64_fuzz_symb_64)))
    state 65 with condition (Not (Eq false
         (Eq (w32 64)
             (ReadLSB w32 0 v64_fuzz_symb_64))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-64-8048a0e
Size=2 Low=0 splitIndex=1 high=1
103 [State 0] Switching from state 0 to state 65
Copied 34928 (count=1)
Finalizing TB execution 65
s2e_dummyMainFunction
tcg-llvm-tb-64-8048a0e
103 [State 65] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 64 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
103 [State 65] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e50: 00 00             add [eax], al           
103 [State 65] Terminating state 65 with message 'eliminated a state with an impossible first instruction'
103 [State 65] Switching from state 65 to state 0
Copied 34928 (count=1)
Deleting state 65 0x0x211f9450
103 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 64
>> fuzzInit: datum forking for value 65
>> fuzzInit: datum forking for value 65
103 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 65)
        (ReadLSB w32 0 v65_fuzz_symb_65)))
    state 66 with condition (Not (Eq false
         (Eq (w32 65)
             (ReadLSB w32 0 v65_fuzz_symb_65))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-65-8048a0e
Size=2 Low=0 splitIndex=1 high=1
103 [State 0] Switching from state 0 to state 66
Copied 34928 (count=1)
Finalizing TB execution 66
s2e_dummyMainFunction
tcg-llvm-tb-65-8048a0e
Firing timer event
104 [State 66] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 65 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
104 [State 66] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e51: 00 00             add [eax], al           
104 [State 66] Terminating state 66 with message 'eliminated a state with an impossible first instruction'
104 [State 66] Switching from state 66 to state 0
Copied 34928 (count=1)
Deleting state 66 0x0x216b11e0
104 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 65
>> fuzzInit: datum forking for value 66
>> fuzzInit: datum forking for value 66
104 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 66)
        (ReadLSB w32 0 v66_fuzz_symb_66)))
    state 67 with condition (Not (Eq false
         (Eq (w32 66)
             (ReadLSB w32 0 v66_fuzz_symb_66))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-66-8048a0e
Size=2 Low=0 splitIndex=1 high=1
104 [State 0] Switching from state 0 to state 67
Copied 34928 (count=1)
Finalizing TB execution 67
s2e_dummyMainFunction
tcg-llvm-tb-66-8048a0e
104 [State 67] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 66 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
104 [State 67] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e52: 00 00             add [eax], al           
104 [State 67] Terminating state 67 with message 'eliminated a state with an impossible first instruction'
104 [State 67] Switching from state 67 to state 0
Copied 34928 (count=1)
Deleting state 67 0x0x217bab90
Firing timer event
105 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 66
>> fuzzInit: datum forking for value 67
>> fuzzInit: datum forking for value 67
105 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 67)
        (ReadLSB w32 0 v67_fuzz_symb_67)))
    state 68 with condition (Not (Eq false
         (Eq (w32 67)
             (ReadLSB w32 0 v67_fuzz_symb_67))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-67-8048a0e
Size=2 Low=0 splitIndex=1 high=1
105 [State 0] Switching from state 0 to state 68
Copied 34928 (count=1)
Finalizing TB execution 68
s2e_dummyMainFunction
tcg-llvm-tb-67-8048a0e
105 [State 68] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 67 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
105 [State 68] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e53: 00 00             add [eax], al           
105 [State 68] Terminating state 68 with message 'eliminated a state with an impossible first instruction'
105 [State 68] Switching from state 68 to state 0
Copied 34928 (count=1)
Deleting state 68 0x0x215ae550
105 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 67
>> fuzzInit: datum forking for value 68
>> fuzzInit: datum forking for value 68
105 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 68)
        (ReadLSB w32 0 v68_fuzz_symb_68)))
    state 69 with condition (Not (Eq false
         (Eq (w32 68)
             (ReadLSB w32 0 v68_fuzz_symb_68))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-68-8048a0e
Size=2 Low=0 splitIndex=1 high=1
105 [State 0] Switching from state 0 to state 69
Copied 34928 (count=1)
Finalizing TB execution 69
s2e_dummyMainFunction
tcg-llvm-tb-68-8048a0e
105 [State 69] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 68 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
106 [State 69] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e54: 00 00             add [eax], al           
106 [State 69] Terminating state 69 with message 'eliminated a state with an impossible first instruction'
106 [State 69] Switching from state 69 to state 0
Copied 34928 (count=1)
Deleting state 69 0x0x215ae550
106 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 68
>> fuzzInit: datum forking for value 69
>> fuzzInit: datum forking for value 69
106 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 69)
        (ReadLSB w32 0 v69_fuzz_symb_69)))
    state 70 with condition (Not (Eq false
         (Eq (w32 69)
             (ReadLSB w32 0 v69_fuzz_symb_69))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-69-8048a0e
Size=2 Low=0 splitIndex=1 high=1
106 [State 0] Switching from state 0 to state 70
Copied 34928 (count=1)
Finalizing TB execution 70
s2e_dummyMainFunction
tcg-llvm-tb-69-8048a0e
106 [State 70] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 69 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
106 [State 70] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e55: 00 00             add [eax], al           
106 [State 70] Terminating state 70 with message 'eliminated a state with an impossible first instruction'
106 [State 70] Switching from state 70 to state 0
Copied 34928 (count=1)
Deleting state 70 0x0x215ae550
106 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 69
>> fuzzInit: datum forking for value 70
>> fuzzInit: datum forking for value 70
107 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 70)
        (ReadLSB w32 0 v70_fuzz_symb_70)))
    state 71 with condition (Not (Eq false
         (Eq (w32 70)
             (ReadLSB w32 0 v70_fuzz_symb_70))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-70-8048a0e
Size=2 Low=0 splitIndex=1 high=1
107 [State 0] Switching from state 0 to state 71
Copied 34928 (count=1)
Finalizing TB execution 71
s2e_dummyMainFunction
tcg-llvm-tb-70-8048a0e
Firing timer event
107 [State 71] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 70 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
107 [State 71] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e56: 00 00             add [eax], al           
107 [State 71] Terminating state 71 with message 'eliminated a state with an impossible first instruction'
107 [State 71] Switching from state 71 to state 0
Copied 34928 (count=1)
Deleting state 71 0x0x215ae550
107 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 70
>> fuzzInit: datum forking for value 71
>> fuzzInit: datum forking for value 71
107 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 71)
        (ReadLSB w32 0 v71_fuzz_symb_71)))
    state 72 with condition (Not (Eq false
         (Eq (w32 71)
             (ReadLSB w32 0 v71_fuzz_symb_71))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-71-8048a0e
Size=2 Low=0 splitIndex=1 high=1
107 [State 0] Switching from state 0 to state 72
Copied 34928 (count=1)
Finalizing TB execution 72
s2e_dummyMainFunction
tcg-llvm-tb-71-8048a0e
107 [State 72] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 71 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
107 [State 72] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e57: 00 00             add [eax], al           
107 [State 72] Terminating state 72 with message 'eliminated a state with an impossible first instruction'
107 [State 72] Switching from state 72 to state 0
Copied 34928 (count=1)
Deleting state 72 0x0x215ae550
108 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 71
>> fuzzInit: datum forking for value 72
>> fuzzInit: datum forking for value 72
108 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 72)
        (ReadLSB w32 0 v72_fuzz_symb_72)))
    state 73 with condition (Not (Eq false
         (Eq (w32 72)
             (ReadLSB w32 0 v72_fuzz_symb_72))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-72-8048a0e
Size=2 Low=0 splitIndex=1 high=1
108 [State 0] Switching from state 0 to state 73
Copied 34928 (count=1)
Finalizing TB execution 73
s2e_dummyMainFunction
tcg-llvm-tb-72-8048a0e
Firing timer event
108 [State 73] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 72 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
108 [State 73] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e58: 00 00             add [eax], al           
108 [State 73] Terminating state 73 with message 'eliminated a state with an impossible first instruction'
108 [State 73] Switching from state 73 to state 0
Copied 34928 (count=1)
Deleting state 73 0x0x215ae550
108 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 72
>> fuzzInit: datum forking for value 73
>> fuzzInit: datum forking for value 73
108 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 73)
        (ReadLSB w32 0 v73_fuzz_symb_73)))
    state 74 with condition (Not (Eq false
         (Eq (w32 73)
             (ReadLSB w32 0 v73_fuzz_symb_73))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-73-8048a0e
Size=2 Low=0 splitIndex=1 high=1
108 [State 0] Switching from state 0 to state 74
Copied 34928 (count=1)
Finalizing TB execution 74
s2e_dummyMainFunction
tcg-llvm-tb-73-8048a0e
108 [State 74] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 73 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
109 [State 74] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e59: 00 00             add [eax], al           
109 [State 74] Terminating state 74 with message 'eliminated a state with an impossible first instruction'
109 [State 74] Switching from state 74 to state 0
Copied 34928 (count=1)
Deleting state 74 0x0x215ae550
109 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 73
>> fuzzInit: datum forking for value 74
>> fuzzInit: datum forking for value 74
109 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 74)
        (ReadLSB w32 0 v74_fuzz_symb_74)))
    state 75 with condition (Not (Eq false
         (Eq (w32 74)
             (ReadLSB w32 0 v74_fuzz_symb_74))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-74-8048a0e
Size=2 Low=0 splitIndex=1 high=1
109 [State 0] Switching from state 0 to state 75
Copied 34928 (count=1)
Finalizing TB execution 75
s2e_dummyMainFunction
tcg-llvm-tb-74-8048a0e
109 [State 75] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 74 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
110 [State 75] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e5a: 00 00             add [eax], al           
110 [State 75] Terminating state 75 with message 'eliminated a state with an impossible first instruction'
110 [State 75] Switching from state 75 to state 0
Copied 34928 (count=1)
Deleting state 75 0x0x215ae550
Firing timer event
110 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 74
>> fuzzInit: datum forking for value 75
>> fuzzInit: datum forking for value 75
110 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 75)
        (ReadLSB w32 0 v75_fuzz_symb_75)))
    state 76 with condition (Not (Eq false
         (Eq (w32 75)
             (ReadLSB w32 0 v75_fuzz_symb_75))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-75-8048a0e
Size=2 Low=0 splitIndex=1 high=1
110 [State 0] Switching from state 0 to state 76
Copied 34928 (count=1)
Finalizing TB execution 76
s2e_dummyMainFunction
tcg-llvm-tb-75-8048a0e
110 [State 76] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 75 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
111 [State 76] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e5b: 00 00             add [eax], al           
111 [State 76] Terminating state 76 with message 'eliminated a state with an impossible first instruction'
111 [State 76] Switching from state 76 to state 0
Copied 34928 (count=1)
Deleting state 76 0x0x215ae550
Firing timer event
111 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 75
>> fuzzInit: datum forking for value 76
>> fuzzInit: datum forking for value 76
111 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 76)
        (ReadLSB w32 0 v76_fuzz_symb_76)))
    state 77 with condition (Not (Eq false
         (Eq (w32 76)
             (ReadLSB w32 0 v76_fuzz_symb_76))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-76-8048a0e
Size=2 Low=0 splitIndex=1 high=1
111 [State 0] Switching from state 0 to state 77
Copied 34928 (count=1)
Finalizing TB execution 77
s2e_dummyMainFunction
tcg-llvm-tb-76-8048a0e
112 [State 77] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 76 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
112 [State 77] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e5c: 00 00             add [eax], al           
112 [State 77] Terminating state 77 with message 'eliminated a state with an impossible first instruction'
112 [State 77] Switching from state 77 to state 0
Copied 34928 (count=1)
Deleting state 77 0x0x215ae550
112 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 76
>> fuzzInit: datum forking for value 77
>> fuzzInit: datum forking for value 77
113 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 77)
        (ReadLSB w32 0 v77_fuzz_symb_77)))
    state 78 with condition (Not (Eq false
         (Eq (w32 77)
             (ReadLSB w32 0 v77_fuzz_symb_77))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-77-8048a0e
Size=2 Low=0 splitIndex=1 high=1
113 [State 0] Switching from state 0 to state 78
Copied 34928 (count=1)
Finalizing TB execution 78
s2e_dummyMainFunction
tcg-llvm-tb-77-8048a0e
Firing timer event
113 [State 78] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 77 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
113 [State 78] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e5d: 00 00             add [eax], al           
113 [State 78] Terminating state 78 with message 'eliminated a state with an impossible first instruction'
114 [State 78] Switching from state 78 to state 0
Copied 34928 (count=1)
Deleting state 78 0x0x215ae550
Firing timer event
114 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 77
>> fuzzInit: datum forking for value 78
>> fuzzInit: datum forking for value 78
114 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 78)
        (ReadLSB w32 0 v78_fuzz_symb_78)))
    state 79 with condition (Not (Eq false
         (Eq (w32 78)
             (ReadLSB w32 0 v78_fuzz_symb_78))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-78-8048a0e
Size=2 Low=0 splitIndex=1 high=1
114 [State 0] Switching from state 0 to state 79
Copied 34928 (count=1)
Finalizing TB execution 79
s2e_dummyMainFunction
tcg-llvm-tb-78-8048a0e
115 [State 79] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 78 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
115 [State 79] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e5e: 00 00             add [eax], al           
115 [State 79] Terminating state 79 with message 'eliminated a state with an impossible first instruction'
115 [State 79] Switching from state 79 to state 0
Copied 34928 (count=1)
Deleting state 79 0x0x215ae550
115 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 78
>> fuzzInit: datum forking for value 79
>> fuzzInit: datum forking for value 79
115 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 79)
        (ReadLSB w32 0 v79_fuzz_symb_79)))
    state 80 with condition (Not (Eq false
         (Eq (w32 79)
             (ReadLSB w32 0 v79_fuzz_symb_79))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-79-8048a0e
Size=2 Low=0 splitIndex=1 high=1
115 [State 0] Switching from state 0 to state 80
Copied 34928 (count=1)
Finalizing TB execution 80
s2e_dummyMainFunction
tcg-llvm-tb-79-8048a0e
Firing timer event
116 [State 80] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 79 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
116 [State 80] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e5f: 00 00             add [eax], al           
116 [State 80] Terminating state 80 with message 'eliminated a state with an impossible first instruction'
116 [State 80] Switching from state 80 to state 0
Copied 34928 (count=1)
Deleting state 80 0x0x215ae550
117 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 79
>> fuzzInit: datum forking for value 80
>> fuzzInit: datum forking for value 80
117 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 80)
        (ReadLSB w32 0 v80_fuzz_symb_80)))
    state 81 with condition (Not (Eq false
         (Eq (w32 80)
             (ReadLSB w32 0 v80_fuzz_symb_80))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-80-8048a0e
Size=2 Low=0 splitIndex=1 high=1
117 [State 0] Switching from state 0 to state 81
Copied 34928 (count=1)
Finalizing TB execution 81
s2e_dummyMainFunction
tcg-llvm-tb-80-8048a0e
Firing timer event
117 [State 81] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 80 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
118 [State 81] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e60: 00 00             add [eax], al           
118 [State 81] Terminating state 81 with message 'eliminated a state with an impossible first instruction'
118 [State 81] Switching from state 81 to state 0
Copied 34928 (count=1)
Deleting state 81 0x0x215ae550
Firing timer event
118 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 80
>> fuzzInit: datum forking for value 81
>> fuzzInit: datum forking for value 81
118 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 81)
        (ReadLSB w32 0 v81_fuzz_symb_81)))
    state 82 with condition (Not (Eq false
         (Eq (w32 81)
             (ReadLSB w32 0 v81_fuzz_symb_81))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-81-8048a0e
Size=2 Low=0 splitIndex=1 high=1
118 [State 0] Switching from state 0 to state 82
Copied 34928 (count=1)
Finalizing TB execution 82
s2e_dummyMainFunction
tcg-llvm-tb-81-8048a0e
119 [State 82] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 81 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
119 [State 82] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e61: 00 00             add [eax], al           
119 [State 82] Terminating state 82 with message 'eliminated a state with an impossible first instruction'
119 [State 82] Switching from state 82 to state 0
Copied 34928 (count=1)
Deleting state 82 0x0x215ae550
120 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 81
>> fuzzInit: datum forking for value 82
>> fuzzInit: datum forking for value 82
120 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 82)
        (ReadLSB w32 0 v82_fuzz_symb_82)))
    state 83 with condition (Not (Eq false
         (Eq (w32 82)
             (ReadLSB w32 0 v82_fuzz_symb_82))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-82-8048a0e
Size=2 Low=0 splitIndex=1 high=1
120 [State 0] Switching from state 0 to state 83
Copied 34928 (count=1)
Finalizing TB execution 83
s2e_dummyMainFunction
tcg-llvm-tb-82-8048a0e
Firing timer event
120 [State 83] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 82 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
121 [State 83] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e62: 00 00             add [eax], al           
121 [State 83] Terminating state 83 with message 'eliminated a state with an impossible first instruction'
121 [State 83] Switching from state 83 to state 0
Copied 34928 (count=1)
Deleting state 83 0x0x215ae550
121 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 82
>> fuzzInit: datum forking for value 83
>> fuzzInit: datum forking for value 83
121 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 83)
        (ReadLSB w32 0 v83_fuzz_symb_83)))
    state 84 with condition (Not (Eq false
         (Eq (w32 83)
             (ReadLSB w32 0 v83_fuzz_symb_83))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-83-8048a0e
Size=2 Low=0 splitIndex=1 high=1
121 [State 0] Switching from state 0 to state 84
Copied 34928 (count=1)
Finalizing TB execution 84
s2e_dummyMainFunction
tcg-llvm-tb-83-8048a0e
Firing timer event
121 [State 84] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 83 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
122 [State 84] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e63: 00 00             add [eax], al           
122 [State 84] Terminating state 84 with message 'eliminated a state with an impossible first instruction'
122 [State 84] Switching from state 84 to state 0
Copied 34928 (count=1)
Deleting state 84 0x0x215ae550
Firing timer event
122 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 83
>> fuzzInit: datum forking for value 84
>> fuzzInit: datum forking for value 84
123 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 84)
        (ReadLSB w32 0 v84_fuzz_symb_84)))
    state 85 with condition (Not (Eq false
         (Eq (w32 84)
             (ReadLSB w32 0 v84_fuzz_symb_84))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-84-8048a0e
Size=2 Low=0 splitIndex=1 high=1
123 [State 0] Switching from state 0 to state 85
Copied 34928 (count=1)
Finalizing TB execution 85
s2e_dummyMainFunction
tcg-llvm-tb-84-8048a0e
123 [State 85] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 84 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
123 [State 85] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e64: 00 00             add [eax], al           
123 [State 85] Terminating state 85 with message 'eliminated a state with an impossible first instruction'
123 [State 85] Switching from state 85 to state 0
Copied 34928 (count=1)
Deleting state 85 0x0x215ae550
124 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 84
>> fuzzInit: datum forking for value 85
>> fuzzInit: datum forking for value 85
124 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 85)
        (ReadLSB w32 0 v85_fuzz_symb_85)))
    state 86 with condition (Not (Eq false
         (Eq (w32 85)
             (ReadLSB w32 0 v85_fuzz_symb_85))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-85-8048a0e
Size=2 Low=0 splitIndex=1 high=1
124 [State 0] Switching from state 0 to state 86
Copied 34928 (count=1)
Finalizing TB execution 86
s2e_dummyMainFunction
tcg-llvm-tb-85-8048a0e
Firing timer event
124 [State 86] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 85 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
125 [State 86] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e65: 00 00             add [eax], al           
125 [State 86] Terminating state 86 with message 'eliminated a state with an impossible first instruction'
125 [State 86] Switching from state 86 to state 0
Copied 34928 (count=1)
Deleting state 86 0x0x215ae550
125 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 85
>> fuzzInit: datum forking for value 86
>> fuzzInit: datum forking for value 86
125 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 86)
        (ReadLSB w32 0 v86_fuzz_symb_86)))
    state 87 with condition (Not (Eq false
         (Eq (w32 86)
             (ReadLSB w32 0 v86_fuzz_symb_86))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-86-8048a0e
Size=2 Low=0 splitIndex=1 high=1
125 [State 0] Switching from state 0 to state 87
Copied 34928 (count=1)
Finalizing TB execution 87
s2e_dummyMainFunction
tcg-llvm-tb-86-8048a0e
Firing timer event
126 [State 87] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 86 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
126 [State 87] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e66: 00 00             add [eax], al           
126 [State 87] Terminating state 87 with message 'eliminated a state with an impossible first instruction'
126 [State 87] Switching from state 87 to state 0
Copied 34928 (count=1)
Deleting state 87 0x0x215ae550
Firing timer event
127 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 86
>> fuzzInit: datum forking for value 87
>> fuzzInit: datum forking for value 87
127 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 87)
        (ReadLSB w32 0 v87_fuzz_symb_87)))
    state 88 with condition (Not (Eq false
         (Eq (w32 87)
             (ReadLSB w32 0 v87_fuzz_symb_87))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-87-8048a0e
Size=2 Low=0 splitIndex=1 high=1
127 [State 0] Switching from state 0 to state 88
Copied 34928 (count=1)
Finalizing TB execution 88
s2e_dummyMainFunction
tcg-llvm-tb-87-8048a0e
127 [State 88] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 87 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
127 [State 88] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e67: 00 00             add [eax], al           
127 [State 88] Terminating state 88 with message 'eliminated a state with an impossible first instruction'
127 [State 88] Switching from state 88 to state 0
Copied 34928 (count=1)
Deleting state 88 0x0x215ae550
128 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 87
>> fuzzInit: datum forking for value 88
>> fuzzInit: datum forking for value 88
128 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 88)
        (ReadLSB w32 0 v88_fuzz_symb_88)))
    state 89 with condition (Not (Eq false
         (Eq (w32 88)
             (ReadLSB w32 0 v88_fuzz_symb_88))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-88-8048a0e
Size=2 Low=0 splitIndex=1 high=1
128 [State 0] Switching from state 0 to state 89
Copied 34928 (count=1)
Finalizing TB execution 89
s2e_dummyMainFunction
tcg-llvm-tb-88-8048a0e
128 [State 89] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 88 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
129 [State 89] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e68: 00 00             add [eax], al           
129 [State 89] Terminating state 89 with message 'eliminated a state with an impossible first instruction'
129 [State 89] Switching from state 89 to state 0
Copied 34928 (count=1)
Deleting state 89 0x0x215ae550
129 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 88
>> fuzzInit: datum forking for value 89
>> fuzzInit: datum forking for value 89
129 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 89)
        (ReadLSB w32 0 v89_fuzz_symb_89)))
    state 90 with condition (Not (Eq false
         (Eq (w32 89)
             (ReadLSB w32 0 v89_fuzz_symb_89))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-89-8048a0e
Size=2 Low=0 splitIndex=1 high=1
130 [State 0] Switching from state 0 to state 90
Copied 34928 (count=1)
Finalizing TB execution 90
s2e_dummyMainFunction
tcg-llvm-tb-89-8048a0e
Firing timer event
130 [State 90] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 89 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
130 [State 90] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e69: 00 00             add [eax], al           
130 [State 90] Terminating state 90 with message 'eliminated a state with an impossible first instruction'
130 [State 90] Switching from state 90 to state 0
Copied 34928 (count=1)
Deleting state 90 0x0x215ae550
Firing timer event
131 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 89
>> fuzzInit: datum forking for value 90
>> fuzzInit: datum forking for value 90
131 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 90)
        (ReadLSB w32 0 v90_fuzz_symb_90)))
    state 91 with condition (Not (Eq false
         (Eq (w32 90)
             (ReadLSB w32 0 v90_fuzz_symb_90))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-90-8048a0e
Size=2 Low=0 splitIndex=1 high=1
131 [State 0] Switching from state 0 to state 91
Copied 34928 (count=1)
Finalizing TB execution 91
s2e_dummyMainFunction
tcg-llvm-tb-90-8048a0e
131 [State 91] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 90 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
132 [State 91] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e6a: 00 00             add [eax], al           
132 [State 91] Terminating state 91 with message 'eliminated a state with an impossible first instruction'
132 [State 91] Switching from state 91 to state 0
Copied 34928 (count=1)
Deleting state 91 0x0x21f2bfd0
132 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 90
>> fuzzInit: datum forking for value 91
>> fuzzInit: datum forking for value 91
132 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 91)
        (ReadLSB w32 0 v91_fuzz_symb_91)))
    state 92 with condition (Not (Eq false
         (Eq (w32 91)
             (ReadLSB w32 0 v91_fuzz_symb_91))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-91-8048a0e
Size=2 Low=0 splitIndex=1 high=1
132 [State 0] Switching from state 0 to state 92
Copied 34928 (count=1)
Finalizing TB execution 92
s2e_dummyMainFunction
tcg-llvm-tb-91-8048a0e
Firing timer event
133 [State 92] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 91 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
133 [State 92] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e6b: 00 00             add [eax], al           
133 [State 92] Terminating state 92 with message 'eliminated a state with an impossible first instruction'
133 [State 92] Switching from state 92 to state 0
Copied 34928 (count=1)
Deleting state 92 0x0x21f2bfd0
Firing timer event
134 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 91
>> fuzzInit: datum forking for value 92
>> fuzzInit: datum forking for value 92
134 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 92)
        (ReadLSB w32 0 v92_fuzz_symb_92)))
    state 93 with condition (Not (Eq false
         (Eq (w32 92)
             (ReadLSB w32 0 v92_fuzz_symb_92))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-92-8048a0e
Size=2 Low=0 splitIndex=1 high=1
134 [State 0] Switching from state 0 to state 93
Copied 34928 (count=1)
Finalizing TB execution 93
s2e_dummyMainFunction
tcg-llvm-tb-92-8048a0e
134 [State 93] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 92 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
135 [State 93] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e6c: 00 00             add [eax], al           
135 [State 93] Terminating state 93 with message 'eliminated a state with an impossible first instruction'
135 [State 93] Switching from state 93 to state 0
Copied 34928 (count=1)
Deleting state 93 0x0x21f2bfd0
Firing timer event
135 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 92
>> fuzzInit: datum forking for value 93
>> fuzzInit: datum forking for value 93
135 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 93)
        (ReadLSB w32 0 v93_fuzz_symb_93)))
    state 94 with condition (Not (Eq false
         (Eq (w32 93)
             (ReadLSB w32 0 v93_fuzz_symb_93))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-93-8048a0e
Size=2 Low=0 splitIndex=1 high=1
135 [State 0] Switching from state 0 to state 94
Copied 34928 (count=1)
Finalizing TB execution 94
s2e_dummyMainFunction
tcg-llvm-tb-93-8048a0e
Firing timer event
136 [State 94] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 93 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
136 [State 94] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e6d: 00 00             add [eax], al           
136 [State 94] Terminating state 94 with message 'eliminated a state with an impossible first instruction'
136 [State 94] Switching from state 94 to state 0
Copied 34928 (count=1)
Deleting state 94 0x0x229e7290
137 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 93
>> fuzzInit: datum forking for value 94
>> fuzzInit: datum forking for value 94
137 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 94)
        (ReadLSB w32 0 v94_fuzz_symb_94)))
    state 95 with condition (Not (Eq false
         (Eq (w32 94)
             (ReadLSB w32 0 v94_fuzz_symb_94))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-94-8048a0e
Size=2 Low=0 splitIndex=1 high=1
137 [State 0] Switching from state 0 to state 95
Copied 34928 (count=1)
Finalizing TB execution 95
s2e_dummyMainFunction
tcg-llvm-tb-94-8048a0e
Firing timer event
137 [State 95] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 94 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
138 [State 95] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e6e: 00 00             add [eax], al           
138 [State 95] Terminating state 95 with message 'eliminated a state with an impossible first instruction'
138 [State 95] Switching from state 95 to state 0
Copied 34928 (count=1)
Deleting state 95 0x0x229e7290
Firing timer event
138 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 94
>> fuzzInit: datum forking for value 95
>> fuzzInit: datum forking for value 95
138 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 95)
        (ReadLSB w32 0 v95_fuzz_symb_95)))
    state 96 with condition (Not (Eq false
         (Eq (w32 95)
             (ReadLSB w32 0 v95_fuzz_symb_95))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-95-8048a0e
Size=2 Low=0 splitIndex=1 high=1
138 [State 0] Switching from state 0 to state 96
Copied 34928 (count=1)
Finalizing TB execution 96
s2e_dummyMainFunction
tcg-llvm-tb-95-8048a0e
139 [State 96] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 95 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
139 [State 96] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e6f: 00 00             add [eax], al           
139 [State 96] Terminating state 96 with message 'eliminated a state with an impossible first instruction'
139 [State 96] Switching from state 96 to state 0
Copied 34928 (count=1)
Deleting state 96 0x0x229e7290
139 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 95
>> fuzzInit: datum forking for value 96
>> fuzzInit: datum forking for value 96
>> fuzzInit: datum forking for value 96
140 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 96)
        (ReadLSB w32 0 v96_fuzz_symb_96)))
    state 97 with condition (Not (Eq false
         (Eq (w32 96)
             (ReadLSB w32 0 v96_fuzz_symb_96))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-96-8048a0e
Size=2 Low=0 splitIndex=1 high=1
140 [State 0] Switching from state 0 to state 97
Copied 34928 (count=1)
Finalizing TB execution 97
s2e_dummyMainFunction
tcg-llvm-tb-96-8048a0e
Firing timer event
140 [State 97] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 96 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
141 [State 97] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e70: 00 00             add [eax], al           
141 [State 97] Terminating state 97 with message 'eliminated a state with an impossible first instruction'
141 [State 97] Switching from state 97 to state 0
Copied 34928 (count=1)
Deleting state 97 0x0x229e7290
Firing timer event
141 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 96
>> fuzzInit: datum forking for value 97
>> fuzzInit: datum forking for value 97
141 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 97)
        (ReadLSB w32 0 v97_fuzz_symb_97)))
    state 98 with condition (Not (Eq false
         (Eq (w32 97)
             (ReadLSB w32 0 v97_fuzz_symb_97))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-97-8048a0e
Size=2 Low=0 splitIndex=1 high=1
141 [State 0] Switching from state 0 to state 98
Copied 34928 (count=1)
Finalizing TB execution 98
s2e_dummyMainFunction
tcg-llvm-tb-97-8048a0e
142 [State 98] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 97 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
142 [State 98] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e71: 00 00             add [eax], al           
142 [State 98] Terminating state 98 with message 'eliminated a state with an impossible first instruction'
142 [State 98] Switching from state 98 to state 0
Copied 34928 (count=1)
Deleting state 98 0x0x229e7290
142 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 97
>> fuzzInit: datum forking for value 98
>> fuzzInit: datum forking for value 98
143 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 98)
        (ReadLSB w32 0 v98_fuzz_symb_98)))
    state 99 with condition (Not (Eq false
         (Eq (w32 98)
             (ReadLSB w32 0 v98_fuzz_symb_98))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-98-8048a0e
Size=2 Low=0 splitIndex=1 high=1
143 [State 0] Switching from state 0 to state 99
Copied 34928 (count=1)
Finalizing TB execution 99
s2e_dummyMainFunction
tcg-llvm-tb-98-8048a0e
143 [State 99] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 98 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
143 [State 99] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e72: 00 00             add [eax], al           
143 [State 99] Terminating state 99 with message 'eliminated a state with an impossible first instruction'
143 [State 99] Switching from state 99 to state 0
Copied 34928 (count=1)
Deleting state 99 0x0x229e7290
144 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 98
>> fuzzInit: datum forking for value 99
>> fuzzInit: datum forking for value 99
144 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 99)
        (ReadLSB w32 0 v99_fuzz_symb_99)))
    state 100 with condition (Not (Eq false
         (Eq (w32 99)
             (ReadLSB w32 0 v99_fuzz_symb_99))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-99-8048a0e
Size=2 Low=0 splitIndex=1 high=1
144 [State 0] Switching from state 0 to state 100
Copied 34928 (count=1)
Finalizing TB execution 100
s2e_dummyMainFunction
tcg-llvm-tb-99-8048a0e
Firing timer event
145 [State 100] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 99 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
145 [State 100] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e73: 00 00             add [eax], al           
145 [State 100] Terminating state 100 with message 'eliminated a state with an impossible first instruction'
145 [State 100] Switching from state 100 to state 0
Copied 34928 (count=1)
Deleting state 100 0x0x229e7290
Firing timer event
145 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 99
>> fuzzInit: datum forking for value 100
>> fuzzInit: datum forking for value 100
145 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 100)
        (ReadLSB w32 0 v100_fuzz_symb_100)))
    state 101 with condition (Not (Eq false
         (Eq (w32 100)
             (ReadLSB w32 0 v100_fuzz_symb_100))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-100-8048a0e
Size=2 Low=0 splitIndex=1 high=1
145 [State 0] Switching from state 0 to state 101
Copied 34928 (count=1)
Finalizing TB execution 101
s2e_dummyMainFunction
tcg-llvm-tb-100-8048a0e
146 [State 101] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 100 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
146 [State 101] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e74: 00 00             add [eax], al           
146 [State 101] Terminating state 101 with message 'eliminated a state with an impossible first instruction'
146 [State 101] Switching from state 101 to state 0
Copied 34928 (count=1)
Deleting state 101 0x0x229e7290
147 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 100
>> fuzzInit: datum forking for value 101
>> fuzzInit: datum forking for value 101
147 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 101)
        (ReadLSB w32 0 v101_fuzz_symb_101)))
    state 102 with condition (Not (Eq false
         (Eq (w32 101)
             (ReadLSB w32 0 v101_fuzz_symb_101))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-101-8048a0e
Size=2 Low=0 splitIndex=1 high=1
147 [State 0] Switching from state 0 to state 102
Copied 34928 (count=1)
Finalizing TB execution 102
s2e_dummyMainFunction
tcg-llvm-tb-101-8048a0e
Firing timer event
148 [State 102] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 101 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
148 [State 102] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e75: 00 00             add [eax], al           
148 [State 102] Terminating state 102 with message 'eliminated a state with an impossible first instruction'
148 [State 102] Switching from state 102 to state 0
Copied 34928 (count=1)
Deleting state 102 0x0x229e7290
149 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 101
>> fuzzInit: datum forking for value 102
>> fuzzInit: datum forking for value 102
149 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 102)
        (ReadLSB w32 0 v102_fuzz_symb_102)))
    state 103 with condition (Not (Eq false
         (Eq (w32 102)
             (ReadLSB w32 0 v102_fuzz_symb_102))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-102-8048a0e
Size=2 Low=0 splitIndex=1 high=1
149 [State 0] Switching from state 0 to state 103
Copied 34928 (count=1)
Finalizing TB execution 103
s2e_dummyMainFunction
tcg-llvm-tb-102-8048a0e
149 [State 103] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 102 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
150 [State 103] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e76: 00 00             add [eax], al           
150 [State 103] Terminating state 103 with message 'eliminated a state with an impossible first instruction'
150 [State 103] Switching from state 103 to state 0
Copied 34928 (count=1)
Deleting state 103 0x0x229e7290
Firing timer event
150 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 102
>> fuzzInit: datum forking for value 103
>> fuzzInit: datum forking for value 103
151 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 103)
        (ReadLSB w32 0 v103_fuzz_symb_103)))
    state 104 with condition (Not (Eq false
         (Eq (w32 103)
             (ReadLSB w32 0 v103_fuzz_symb_103))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-103-8048a0e
Size=2 Low=0 splitIndex=1 high=1
151 [State 0] Switching from state 0 to state 104
Copied 34928 (count=1)
Finalizing TB execution 104
s2e_dummyMainFunction
tcg-llvm-tb-103-8048a0e
151 [State 104] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 103 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
151 [State 104] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e77: 00 00             add [eax], al           
151 [State 104] Terminating state 104 with message 'eliminated a state with an impossible first instruction'
151 [State 104] Switching from state 104 to state 0
Copied 34928 (count=1)
Deleting state 104 0x0x229e7290
152 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 103
>> fuzzInit: datum forking for value 104
>> fuzzInit: datum forking for value 104
152 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 104)
        (ReadLSB w32 0 v104_fuzz_symb_104)))
    state 105 with condition (Not (Eq false
         (Eq (w32 104)
             (ReadLSB w32 0 v104_fuzz_symb_104))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-104-8048a0e
Size=2 Low=0 splitIndex=1 high=1
152 [State 0] Switching from state 0 to state 105
Copied 34928 (count=1)
Finalizing TB execution 105
s2e_dummyMainFunction
tcg-llvm-tb-104-8048a0e
Firing timer event
152 [State 105] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 104 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
153 [State 105] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e78: 00 00             add [eax], al           
153 [State 105] Terminating state 105 with message 'eliminated a state with an impossible first instruction'
153 [State 105] Switching from state 105 to state 0
Copied 34928 (count=1)
Deleting state 105 0x0x229e7290
Firing timer event
153 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 104
>> fuzzInit: datum forking for value 105
>> fuzzInit: datum forking for value 105
153 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 105)
        (ReadLSB w32 0 v105_fuzz_symb_105)))
    state 106 with condition (Not (Eq false
         (Eq (w32 105)
             (ReadLSB w32 0 v105_fuzz_symb_105))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-105-8048a0e
Size=2 Low=0 splitIndex=1 high=1
153 [State 0] Switching from state 0 to state 106
Copied 34928 (count=1)
Finalizing TB execution 106
s2e_dummyMainFunction
tcg-llvm-tb-105-8048a0e
154 [State 106] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 105 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
154 [State 106] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e79: 00 00             add [eax], al           
154 [State 106] Terminating state 106 with message 'eliminated a state with an impossible first instruction'
154 [State 106] Switching from state 106 to state 0
Copied 34928 (count=1)
Deleting state 106 0x0x229e7290
Firing timer event
155 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 105
>> fuzzInit: datum forking for value 106
>> fuzzInit: datum forking for value 106
155 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 106)
        (ReadLSB w32 0 v106_fuzz_symb_106)))
    state 107 with condition (Not (Eq false
         (Eq (w32 106)
             (ReadLSB w32 0 v106_fuzz_symb_106))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-106-8048a0e
Size=2 Low=0 splitIndex=1 high=1
155 [State 0] Switching from state 0 to state 107
Copied 34928 (count=1)
Finalizing TB execution 107
s2e_dummyMainFunction
tcg-llvm-tb-106-8048a0e
155 [State 107] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 106 not yet applied), shell_len: 1024, eip: 0xbfb77010

Firing timer event
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
155 [State 107] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e7a: 00 00             add [eax], al           
155 [State 107] Terminating state 107 with message 'eliminated a state with an impossible first instruction'
155 [State 107] Switching from state 107 to state 0
Copied 34928 (count=1)
Deleting state 107 0x0x229e7290
156 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 106
>> fuzzInit: datum forking for value 107
>> fuzzInit: datum forking for value 107
156 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 107)
        (ReadLSB w32 0 v107_fuzz_symb_107)))
    state 108 with condition (Not (Eq false
         (Eq (w32 107)
             (ReadLSB w32 0 v107_fuzz_symb_107))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-107-8048a0e
Size=2 Low=0 splitIndex=1 high=1
156 [State 0] Switching from state 0 to state 108
Copied 34928 (count=1)
Finalizing TB execution 108
s2e_dummyMainFunction
tcg-llvm-tb-107-8048a0e
Firing timer event
157 [State 108] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 107 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
157 [State 108] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e7b: 00 00             add [eax], al           
157 [State 108] Terminating state 108 with message 'eliminated a state with an impossible first instruction'
157 [State 108] Switching from state 108 to state 0
Copied 34928 (count=1)
Deleting state 108 0x0x229e7290
Firing timer event
158 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 107
>> fuzzInit: datum forking for value 108
>> fuzzInit: datum forking for value 108
158 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 108)
        (ReadLSB w32 0 v108_fuzz_symb_108)))
    state 109 with condition (Not (Eq false
         (Eq (w32 108)
             (ReadLSB w32 0 v108_fuzz_symb_108))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-108-8048a0e
Size=2 Low=0 splitIndex=1 high=1
158 [State 0] Switching from state 0 to state 109
Copied 34928 (count=1)
Finalizing TB execution 109
s2e_dummyMainFunction
tcg-llvm-tb-108-8048a0e
158 [State 109] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 108 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
158 [State 109] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e7c: 00 00             add [eax], al           
158 [State 109] Terminating state 109 with message 'eliminated a state with an impossible first instruction'
158 [State 109] Switching from state 109 to state 0
Copied 34928 (count=1)
Deleting state 109 0x0x229e7290
Firing timer event
159 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 108
>> fuzzInit: datum forking for value 109
>> fuzzInit: datum forking for value 109
159 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 109)
        (ReadLSB w32 0 v109_fuzz_symb_109)))
    state 110 with condition (Not (Eq false
         (Eq (w32 109)
             (ReadLSB w32 0 v109_fuzz_symb_109))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-109-8048a0e
Size=2 Low=0 splitIndex=1 high=1
159 [State 0] Switching from state 0 to state 110
Copied 34928 (count=1)
Finalizing TB execution 110
s2e_dummyMainFunction
tcg-llvm-tb-109-8048a0e
159 [State 110] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 109 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
159 [State 110] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e7d: 00 00             add [eax], al           
159 [State 110] Terminating state 110 with message 'eliminated a state with an impossible first instruction'
159 [State 110] Switching from state 110 to state 0
Copied 34928 (count=1)
Deleting state 110 0x0x229e7290
Firing timer event
160 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 109
>> fuzzInit: datum forking for value 110
>> fuzzInit: datum forking for value 110
160 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 110)
        (ReadLSB w32 0 v110_fuzz_symb_110)))
    state 111 with condition (Not (Eq false
         (Eq (w32 110)
             (ReadLSB w32 0 v110_fuzz_symb_110))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-110-8048a0e
Size=2 Low=0 splitIndex=1 high=1
160 [State 0] Switching from state 0 to state 111
Copied 34928 (count=1)
Finalizing TB execution 111
s2e_dummyMainFunction
tcg-llvm-tb-110-8048a0e
160 [State 111] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 110 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
161 [State 111] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e7e: 00 00             add [eax], al           
161 [State 111] Terminating state 111 with message 'eliminated a state with an impossible first instruction'
161 [State 111] Switching from state 111 to state 0
Copied 34928 (count=1)
Deleting state 111 0x0x229e7290
161 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 110
>> fuzzInit: datum forking for value 111
>> fuzzInit: datum forking for value 111
161 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 111)
        (ReadLSB w32 0 v111_fuzz_symb_111)))
    state 112 with condition (Not (Eq false
         (Eq (w32 111)
             (ReadLSB w32 0 v111_fuzz_symb_111))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-111-8048a0e
Size=2 Low=0 splitIndex=1 high=1
161 [State 0] Switching from state 0 to state 112
Copied 34928 (count=1)
Finalizing TB execution 112
s2e_dummyMainFunction
tcg-llvm-tb-111-8048a0e
162 [State 112] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 111 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
162 [State 112] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e7f: 00 00             add [eax], al           
162 [State 112] Terminating state 112 with message 'eliminated a state with an impossible first instruction'
162 [State 112] Switching from state 112 to state 0
Copied 34928 (count=1)
Deleting state 112 0x0x229e7290
Firing timer event
163 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 111
>> fuzzInit: datum forking for value 112
>> fuzzInit: datum forking for value 112
163 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 112)
        (ReadLSB w32 0 v112_fuzz_symb_112)))
    state 113 with condition (Not (Eq false
         (Eq (w32 112)
             (ReadLSB w32 0 v112_fuzz_symb_112))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-112-8048a0e
Size=2 Low=0 splitIndex=1 high=1
163 [State 0] Switching from state 0 to state 113
Copied 34928 (count=1)
Finalizing TB execution 113
s2e_dummyMainFunction
tcg-llvm-tb-112-8048a0e
163 [State 113] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 112 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
163 [State 113] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e80: 00 00             add [eax], al           
163 [State 113] Terminating state 113 with message 'eliminated a state with an impossible first instruction'
163 [State 113] Switching from state 113 to state 0
Copied 34928 (count=1)
Deleting state 113 0x0x229e7290
Firing timer event
164 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 112
>> fuzzInit: datum forking for value 113
>> fuzzInit: datum forking for value 113
164 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 113)
        (ReadLSB w32 0 v113_fuzz_symb_113)))
    state 114 with condition (Not (Eq false
         (Eq (w32 113)
             (ReadLSB w32 0 v113_fuzz_symb_113))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-113-8048a0e
Size=2 Low=0 splitIndex=1 high=1
164 [State 0] Switching from state 0 to state 114
Copied 34928 (count=1)
Finalizing TB execution 114
s2e_dummyMainFunction
tcg-llvm-tb-113-8048a0e
165 [State 114] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 113 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
165 [State 114] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e81: 00 00             add [eax], al           
165 [State 114] Terminating state 114 with message 'eliminated a state with an impossible first instruction'
165 [State 114] Switching from state 114 to state 0
Copied 34928 (count=1)
Deleting state 114 0x0x23acd870
165 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 113
>> fuzzInit: datum forking for value 114
>> fuzzInit: datum forking for value 114
165 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 114)
        (ReadLSB w32 0 v114_fuzz_symb_114)))
    state 115 with condition (Not (Eq false
         (Eq (w32 114)
             (ReadLSB w32 0 v114_fuzz_symb_114))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-114-8048a0e
Size=2 Low=0 splitIndex=1 high=1
165 [State 0] Switching from state 0 to state 115
Copied 34928 (count=1)
Finalizing TB execution 115
s2e_dummyMainFunction
tcg-llvm-tb-114-8048a0e
165 [State 115] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 114 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
166 [State 115] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e82: 00 00             add [eax], al           
166 [State 115] Terminating state 115 with message 'eliminated a state with an impossible first instruction'
166 [State 115] Switching from state 115 to state 0
Copied 34928 (count=1)
Deleting state 115 0x0x23acd870
Firing timer event
166 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 114
>> fuzzInit: datum forking for value 115
>> fuzzInit: datum forking for value 115
166 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 115)
        (ReadLSB w32 0 v115_fuzz_symb_115)))
    state 116 with condition (Not (Eq false
         (Eq (w32 115)
             (ReadLSB w32 0 v115_fuzz_symb_115))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-115-8048a0e
Size=2 Low=0 splitIndex=1 high=1
166 [State 0] Switching from state 0 to state 116
Copied 34928 (count=1)
Finalizing TB execution 116
s2e_dummyMainFunction
tcg-llvm-tb-115-8048a0e
166 [State 116] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 115 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
166 [State 116] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e83: 00 00             add [eax], al           
166 [State 116] Terminating state 116 with message 'eliminated a state with an impossible first instruction'
166 [State 116] Switching from state 116 to state 0
Copied 34928 (count=1)
Deleting state 116 0x0x238f1e30
166 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 115
>> fuzzInit: datum forking for value 116
>> fuzzInit: datum forking for value 116
166 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 116)
        (ReadLSB w32 0 v116_fuzz_symb_116)))
    state 117 with condition (Not (Eq false
         (Eq (w32 116)
             (ReadLSB w32 0 v116_fuzz_symb_116))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-116-8048a0e
Size=2 Low=0 splitIndex=1 high=1
166 [State 0] Switching from state 0 to state 117
Copied 34928 (count=1)
Finalizing TB execution 117
s2e_dummyMainFunction
tcg-llvm-tb-116-8048a0e
167 [State 117] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 116 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
167 [State 117] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e84: 00 00             add [eax], al           
167 [State 117] Terminating state 117 with message 'eliminated a state with an impossible first instruction'
167 [State 117] Switching from state 117 to state 0
Copied 34928 (count=1)
Deleting state 117 0x0x238b7a60
167 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 116
>> fuzzInit: datum forking for value 117
>> fuzzInit: datum forking for value 117
167 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 117)
        (ReadLSB w32 0 v117_fuzz_symb_117)))
    state 118 with condition (Not (Eq false
         (Eq (w32 117)
             (ReadLSB w32 0 v117_fuzz_symb_117))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-117-8048a0e
Size=2 Low=0 splitIndex=1 high=1
167 [State 0] Switching from state 0 to state 118
Copied 34928 (count=1)
Finalizing TB execution 118
s2e_dummyMainFunction
tcg-llvm-tb-117-8048a0e
167 [State 118] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 117 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
167 [State 118] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e85: 00 00             add [eax], al           
167 [State 118] Terminating state 118 with message 'eliminated a state with an impossible first instruction'
167 [State 118] Switching from state 118 to state 0
Copied 34928 (count=1)
Deleting state 118 0x0x23982400
168 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 117
>> fuzzInit: datum forking for value 118
>> fuzzInit: datum forking for value 118
168 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 118)
        (ReadLSB w32 0 v118_fuzz_symb_118)))
    state 119 with condition (Not (Eq false
         (Eq (w32 118)
             (ReadLSB w32 0 v118_fuzz_symb_118))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-118-8048a0e
Size=2 Low=0 splitIndex=1 high=1
168 [State 0] Switching from state 0 to state 119
Copied 34928 (count=1)
Finalizing TB execution 119
s2e_dummyMainFunction
tcg-llvm-tb-118-8048a0e
Firing timer event
168 [State 119] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 118 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
168 [State 119] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e86: 00 00             add [eax], al           
168 [State 119] Terminating state 119 with message 'eliminated a state with an impossible first instruction'
168 [State 119] Switching from state 119 to state 0
Copied 34928 (count=1)
Deleting state 119 0x0x23a746b0
168 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 118
>> fuzzInit: datum forking for value 119
>> fuzzInit: datum forking for value 119
168 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 119)
        (ReadLSB w32 0 v119_fuzz_symb_119)))
    state 120 with condition (Not (Eq false
         (Eq (w32 119)
             (ReadLSB w32 0 v119_fuzz_symb_119))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-119-8048a0e
Size=2 Low=0 splitIndex=1 high=1
168 [State 0] Switching from state 0 to state 120
Copied 34928 (count=1)
Finalizing TB execution 120
s2e_dummyMainFunction
tcg-llvm-tb-119-8048a0e
169 [State 120] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 119 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
169 [State 120] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e87: 00 00             add [eax], al           
169 [State 120] Terminating state 120 with message 'eliminated a state with an impossible first instruction'
169 [State 120] Switching from state 120 to state 0
Copied 34928 (count=1)
Deleting state 120 0x0x23be0d10
Firing timer event
169 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 119
>> fuzzInit: datum forking for value 120
>> fuzzInit: datum forking for value 120
169 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 120)
        (ReadLSB w32 0 v120_fuzz_symb_120)))
    state 121 with condition (Not (Eq false
         (Eq (w32 120)
             (ReadLSB w32 0 v120_fuzz_symb_120))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-120-8048a0e
Size=2 Low=0 splitIndex=1 high=1
169 [State 0] Switching from state 0 to state 121
Copied 34928 (count=1)
Finalizing TB execution 121
s2e_dummyMainFunction
tcg-llvm-tb-120-8048a0e
169 [State 121] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 120 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
169 [State 121] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e88: 00 00             add [eax], al           
169 [State 121] Terminating state 121 with message 'eliminated a state with an impossible first instruction'
169 [State 121] Switching from state 121 to state 0
Copied 34928 (count=1)
Deleting state 121 0x0x23be0d10
169 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 120
>> fuzzInit: datum forking for value 121
>> fuzzInit: datum forking for value 121
170 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 121)
        (ReadLSB w32 0 v121_fuzz_symb_121)))
    state 122 with condition (Not (Eq false
         (Eq (w32 121)
             (ReadLSB w32 0 v121_fuzz_symb_121))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-121-8048a0e
Size=2 Low=0 splitIndex=1 high=1
170 [State 0] Switching from state 0 to state 122
Copied 34928 (count=1)
Finalizing TB execution 122
s2e_dummyMainFunction
tcg-llvm-tb-121-8048a0e
170 [State 122] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 121 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
170 [State 122] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e89: 00 00             add [eax], al           
170 [State 122] Terminating state 122 with message 'eliminated a state with an impossible first instruction'
170 [State 122] Switching from state 122 to state 0
Copied 34928 (count=1)
Deleting state 122 0x0x23acaec0
170 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 121
>> fuzzInit: datum forking for value 122
>> fuzzInit: datum forking for value 122
170 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 122)
        (ReadLSB w32 0 v122_fuzz_symb_122)))
    state 123 with condition (Not (Eq false
         (Eq (w32 122)
             (ReadLSB w32 0 v122_fuzz_symb_122))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-122-8048a0e
Size=2 Low=0 splitIndex=1 high=1
170 [State 0] Switching from state 0 to state 123
Copied 34928 (count=1)
Finalizing TB execution 123
s2e_dummyMainFunction
tcg-llvm-tb-122-8048a0e
170 [State 123] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 122 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
171 [State 123] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e8a: 00 00             add [eax], al           
171 [State 123] Terminating state 123 with message 'eliminated a state with an impossible first instruction'
171 [State 123] Switching from state 123 to state 0
Copied 34928 (count=1)
Deleting state 123 0x0x2398f870
171 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 122
>> fuzzInit: datum forking for value 123
>> fuzzInit: datum forking for value 123
171 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 123)
        (ReadLSB w32 0 v123_fuzz_symb_123)))
    state 124 with condition (Not (Eq false
         (Eq (w32 123)
             (ReadLSB w32 0 v123_fuzz_symb_123))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-123-8048a0e
Size=2 Low=0 splitIndex=1 high=1
171 [State 0] Switching from state 0 to state 124
Copied 34928 (count=1)
Finalizing TB execution 124
s2e_dummyMainFunction
tcg-llvm-tb-123-8048a0e
Firing timer event
171 [State 124] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 123 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
171 [State 124] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e8b: 00 00             add [eax], al           
171 [State 124] Terminating state 124 with message 'eliminated a state with an impossible first instruction'
171 [State 124] Switching from state 124 to state 0
Copied 34928 (count=1)
Deleting state 124 0x0x2398f870
171 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 123
>> fuzzInit: datum forking for value 124
>> fuzzInit: datum forking for value 124
172 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 124)
        (ReadLSB w32 0 v124_fuzz_symb_124)))
    state 125 with condition (Not (Eq false
         (Eq (w32 124)
             (ReadLSB w32 0 v124_fuzz_symb_124))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-124-8048a0e
Size=2 Low=0 splitIndex=1 high=1
172 [State 0] Switching from state 0 to state 125
Copied 34928 (count=1)
Finalizing TB execution 125
s2e_dummyMainFunction
tcg-llvm-tb-124-8048a0e
172 [State 125] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 124 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
172 [State 125] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e8c: 00 00             add [eax], al           
172 [State 125] Terminating state 125 with message 'eliminated a state with an impossible first instruction'
172 [State 125] Switching from state 125 to state 0
Copied 34928 (count=1)
Deleting state 125 0x0x2398f870
Firing timer event
172 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 124
>> fuzzInit: datum forking for value 125
>> fuzzInit: datum forking for value 125
172 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 125)
        (ReadLSB w32 0 v125_fuzz_symb_125)))
    state 126 with condition (Not (Eq false
         (Eq (w32 125)
             (ReadLSB w32 0 v125_fuzz_symb_125))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-125-8048a0e
Size=2 Low=0 splitIndex=1 high=1
172 [State 0] Switching from state 0 to state 126
Copied 34928 (count=1)
Finalizing TB execution 126
s2e_dummyMainFunction
tcg-llvm-tb-125-8048a0e
172 [State 126] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 125 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
172 [State 126] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e8d: 00 00             add [eax], al           
172 [State 126] Terminating state 126 with message 'eliminated a state with an impossible first instruction'
172 [State 126] Switching from state 126 to state 0
Copied 34928 (count=1)
Deleting state 126 0x0x2398f870
173 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 125
>> fuzzInit: datum forking for value 126
>> fuzzInit: datum forking for value 126
173 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 126)
        (ReadLSB w32 0 v126_fuzz_symb_126)))
    state 127 with condition (Not (Eq false
         (Eq (w32 126)
             (ReadLSB w32 0 v126_fuzz_symb_126))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-126-8048a0e
Size=2 Low=0 splitIndex=1 high=1
173 [State 0] Switching from state 0 to state 127
Copied 34928 (count=1)
Finalizing TB execution 127
s2e_dummyMainFunction
tcg-llvm-tb-126-8048a0e
173 [State 127] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 126 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
173 [State 127] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e8e: 00 00             add [eax], al           
173 [State 127] Terminating state 127 with message 'eliminated a state with an impossible first instruction'
173 [State 127] Switching from state 127 to state 0
Copied 34928 (count=1)
Deleting state 127 0x0x2398f870
173 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 126
>> fuzzInit: datum forking for value 127
>> fuzzInit: datum forking for value 127
173 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 127)
        (ReadLSB w32 0 v127_fuzz_symb_127)))
    state 128 with condition (Not (Eq false
         (Eq (w32 127)
             (ReadLSB w32 0 v127_fuzz_symb_127))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-127-8048a0e
Size=2 Low=0 splitIndex=1 high=1
173 [State 0] Switching from state 0 to state 128
Copied 34928 (count=1)
Finalizing TB execution 128
s2e_dummyMainFunction
tcg-llvm-tb-127-8048a0e
174 [State 128] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 127 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
174 [State 128] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e8f: 00 00             add [eax], al           
174 [State 128] Terminating state 128 with message 'eliminated a state with an impossible first instruction'
174 [State 128] Switching from state 128 to state 0
Copied 34928 (count=1)
Deleting state 128 0x0x2398f870
174 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 127
>> fuzzInit: datum forking for value 128
>> fuzzInit: datum forking for value 128
174 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 128)
        (ReadLSB w32 0 v128_fuzz_symb_128)))
    state 129 with condition (Not (Eq false
         (Eq (w32 128)
             (ReadLSB w32 0 v128_fuzz_symb_128))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-128-8048a0e
Size=2 Low=0 splitIndex=1 high=1
174 [State 0] Switching from state 0 to state 129
Copied 34928 (count=1)
Finalizing TB execution 129
s2e_dummyMainFunction
tcg-llvm-tb-128-8048a0e
Firing timer event
174 [State 129] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 128 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
174 [State 129] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e90: 00 00             add [eax], al           
174 [State 129] Terminating state 129 with message 'eliminated a state with an impossible first instruction'
174 [State 129] Switching from state 129 to state 0
Copied 34928 (count=1)
Deleting state 129 0x0x2398f870
175 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 128
>> fuzzInit: datum forking for value 129
>> fuzzInit: datum forking for value 129
175 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 129)
        (ReadLSB w32 0 v129_fuzz_symb_129)))
    state 130 with condition (Not (Eq false
         (Eq (w32 129)
             (ReadLSB w32 0 v129_fuzz_symb_129))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-129-8048a0e
Size=2 Low=0 splitIndex=1 high=1
175 [State 0] Switching from state 0 to state 130
Copied 34928 (count=1)
Finalizing TB execution 130
s2e_dummyMainFunction
tcg-llvm-tb-129-8048a0e
175 [State 130] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 129 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
175 [State 130] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e91: 00 00             add [eax], al           
175 [State 130] Terminating state 130 with message 'eliminated a state with an impossible first instruction'
175 [State 130] Switching from state 130 to state 0
Copied 34928 (count=1)
Deleting state 130 0x0x2398f870
175 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 129
Firing timer event
>> fuzzInit: datum forking for value 130
>> fuzzInit: datum forking for value 130
175 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 130)
        (ReadLSB w32 0 v130_fuzz_symb_130)))
    state 131 with condition (Not (Eq false
         (Eq (w32 130)
             (ReadLSB w32 0 v130_fuzz_symb_130))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-130-8048a0e
Size=2 Low=0 splitIndex=1 high=1
175 [State 0] Switching from state 0 to state 131
Copied 34928 (count=1)
Finalizing TB execution 131
s2e_dummyMainFunction
tcg-llvm-tb-130-8048a0e
175 [State 131] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 130 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
176 [State 131] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e92: 00 00             add [eax], al           
176 [State 131] Terminating state 131 with message 'eliminated a state with an impossible first instruction'
176 [State 131] Switching from state 131 to state 0
Copied 34928 (count=1)
Deleting state 131 0x0x2398f870
176 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 130
>> fuzzInit: datum forking for value 131
>> fuzzInit: datum forking for value 131
176 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 131)
        (ReadLSB w32 0 v131_fuzz_symb_131)))
    state 132 with condition (Not (Eq false
         (Eq (w32 131)
             (ReadLSB w32 0 v131_fuzz_symb_131))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-131-8048a0e
Size=2 Low=0 splitIndex=1 high=1
176 [State 0] Switching from state 0 to state 132
Copied 34928 (count=1)
Finalizing TB execution 132
s2e_dummyMainFunction
tcg-llvm-tb-131-8048a0e
176 [State 132] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 131 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
176 [State 132] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e93: 00 00             add [eax], al           
176 [State 132] Terminating state 132 with message 'eliminated a state with an impossible first instruction'
176 [State 132] Switching from state 132 to state 0
Copied 34928 (count=1)
Deleting state 132 0x0x2398f870
176 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 131
>> fuzzInit: datum forking for value 132
>> fuzzInit: datum forking for value 132
177 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 132)
        (ReadLSB w32 0 v132_fuzz_symb_132)))
    state 133 with condition (Not (Eq false
         (Eq (w32 132)
             (ReadLSB w32 0 v132_fuzz_symb_132))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-132-8048a0e
Size=2 Low=0 splitIndex=1 high=1
177 [State 0] Switching from state 0 to state 133
Copied 34928 (count=1)
Finalizing TB execution 133
s2e_dummyMainFunction
tcg-llvm-tb-132-8048a0e
177 [State 133] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 132 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
177 [State 133] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb76e94: 00 00             add [eax], al           
177 [State 133] Terminating state 133 with message 'eliminated a state with an impossible first instruction'
177 [State 133] Switching from state 133 to state 0
Copied 34928 (count=1)
Deleting state 133 0x0x2398f870
177 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 132
>> fuzzInit: datum forking for value 133
>> fuzzInit: datum forking for value 133
177 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 133)
        (ReadLSB w32 0 v133_fuzz_symb_133)))
    state 134 with condition (Not (Eq false
         (Eq (w32 133)
             (ReadLSB w32 0 v133_fuzz_symb_133))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-133-8048a0e
Size=2 Low=0 splitIndex=1 high=1
177 [State 0] Switching from state 0 to state 134
Copied 34928 (count=1)
Finalizing TB execution 134
s2e_dummyMainFunction
tcg-llvm-tb-133-8048a0e
Firing timer event
177 [State 134] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 133 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  4B @0xbfb76e95: 00 4c ab 0b                        add [ebx+ebp*4+0xb], cl  nextPC: 0xbfb76e99
  2  1B @0xbfb76e99: 40                                 inc eax                  nextPC: 0xbfb76e9a
  3  1B @0xbfb76e9a: f4                                 hlt                      nextPC: 0xbfb76e9b
178 [State 134] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76e9a, disasm in debug.
  1  1B @0xbfb76e9a: f4                                 hlt                      nextPC: 0xbfb76e9b
178 [State 134] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
178 [State 134] Terminating state 134 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
178 [State 134] Switching from state 134 to state 0
Copied 34928 (count=1)
Deleting state 134 0x0x2398f870
178 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 133
>> fuzzInit: datum forking for value 134
>> fuzzInit: datum forking for value 134
178 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 134)
        (ReadLSB w32 0 v134_fuzz_symb_134)))
    state 135 with condition (Not (Eq false
         (Eq (w32 134)
             (ReadLSB w32 0 v134_fuzz_symb_134))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-134-8048a0e
Size=2 Low=0 splitIndex=1 high=1
178 [State 0] Switching from state 0 to state 135
Copied 34928 (count=1)
Finalizing TB execution 135
s2e_dummyMainFunction
tcg-llvm-tb-134-8048a0e
178 [State 135] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 134 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76e96: 4c                                 dec esp                  nextPC: 0xbfb76e97
  2  1B @0xbfb76e97: ab                                 stosd                    nextPC: 0xbfb76e98
  3  3B @0xbfb76e98: 0b 40 f4                           or eax, [eax-0xc]        nextPC: 0xbfb76e9b
  4  1B @0xbfb76e9b: af                                 scasd                    nextPC: 0xbfb76e9c
  5  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
Firing timer event
178 [State 135] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76e9c, disasm in debug.
  1  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
178 [State 135] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
178 [State 135] Terminating state 135 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
178 [State 135] Switching from state 135 to state 0
Copied 34928 (count=1)
Deleting state 135 0x0x2398f870
179 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 134
>> fuzzInit: datum forking for value 135
>> fuzzInit: datum forking for value 135
179 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 135)
        (ReadLSB w32 0 v135_fuzz_symb_135)))
    state 136 with condition (Not (Eq false
         (Eq (w32 135)
             (ReadLSB w32 0 v135_fuzz_symb_135))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-135-8048a0e
Size=2 Low=0 splitIndex=1 high=1
179 [State 0] Switching from state 0 to state 136
Copied 34928 (count=1)
Finalizing TB execution 136
s2e_dummyMainFunction
tcg-llvm-tb-135-8048a0e
179 [State 136] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 135 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76e97: ab                                 stosd                    nextPC: 0xbfb76e98
  2  3B @0xbfb76e98: 0b 40 f4                           or eax, [eax-0xc]        nextPC: 0xbfb76e9b
  3  1B @0xbfb76e9b: af                                 scasd                    nextPC: 0xbfb76e9c
  4  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
179 [State 136] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76e9c, disasm in debug.
  1  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
179 [State 136] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
179 [State 136] Terminating state 136 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
179 [State 136] Switching from state 136 to state 0
Copied 34928 (count=1)
Deleting state 136 0x0x2398f870
Firing timer event
179 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 135
>> fuzzInit: datum forking for value 136
>> fuzzInit: datum forking for value 136
179 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 136)
        (ReadLSB w32 0 v136_fuzz_symb_136)))
    state 137 with condition (Not (Eq false
         (Eq (w32 136)
             (ReadLSB w32 0 v136_fuzz_symb_136))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-136-8048a0e
Size=2 Low=0 splitIndex=1 high=1
179 [State 0] Switching from state 0 to state 137
Copied 34928 (count=1)
Finalizing TB execution 137
s2e_dummyMainFunction
tcg-llvm-tb-136-8048a0e
180 [State 137] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 136 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76e98: 0b 40 f4                           or eax, [eax-0xc]        nextPC: 0xbfb76e9b
  2  1B @0xbfb76e9b: af                                 scasd                    nextPC: 0xbfb76e9c
  3  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
180 [State 137] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76e9c, disasm in debug.
  1  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
180 [State 137] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
180 [State 137] Terminating state 137 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
180 [State 137] Switching from state 137 to state 0
Copied 34928 (count=1)
Deleting state 137 0x0x2398f870
180 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 136
>> fuzzInit: datum forking for value 137
>> fuzzInit: datum forking for value 137
180 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 137)
        (ReadLSB w32 0 v137_fuzz_symb_137)))
    state 138 with condition (Not (Eq false
         (Eq (w32 137)
             (ReadLSB w32 0 v137_fuzz_symb_137))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-137-8048a0e
Size=2 Low=0 splitIndex=1 high=1
180 [State 0] Switching from state 0 to state 138
Copied 34928 (count=1)
Finalizing TB execution 138
s2e_dummyMainFunction
tcg-llvm-tb-137-8048a0e
Firing timer event
181 [State 138] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 137 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76e99: 40                                 inc eax                  nextPC: 0xbfb76e9a
  2  1B @0xbfb76e9a: f4                                 hlt                      nextPC: 0xbfb76e9b
181 [State 138] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76e9a, disasm in debug.
  1  1B @0xbfb76e9a: f4                                 hlt                      nextPC: 0xbfb76e9b
181 [State 138] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
181 [State 138] Terminating state 138 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
181 [State 138] Switching from state 138 to state 0
Copied 34928 (count=1)
Deleting state 138 0x0x2398f870
181 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 137
>> fuzzInit: datum forking for value 138
>> fuzzInit: datum forking for value 138
181 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 138)
        (ReadLSB w32 0 v138_fuzz_symb_138)))
    state 139 with condition (Not (Eq false
         (Eq (w32 138)
             (ReadLSB w32 0 v138_fuzz_symb_138))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-138-8048a0e
Size=2 Low=0 splitIndex=1 high=1
181 [State 0] Switching from state 0 to state 139
Copied 34928 (count=1)
Finalizing TB execution 139
s2e_dummyMainFunction
tcg-llvm-tb-138-8048a0e
Firing timer event
182 [State 139] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 138 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76e9a: f4                                 hlt                      nextPC: 0xbfb76e9b
182 [State 139] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb76e9a, disasm in debug.
  1  1B @0xbfb76e9a: f4                                 hlt                      nextPC: 0xbfb76e9b
182 [State 139] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
182 [State 139] Terminating state 139 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
182 [State 139] Switching from state 139 to state 0
Copied 34928 (count=1)
Deleting state 139 0x0x2398f870
182 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 138
Firing timer event
>> fuzzInit: datum forking for value 139
>> fuzzInit: datum forking for value 139
183 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 139)
        (ReadLSB w32 0 v139_fuzz_symb_139)))
    state 140 with condition (Not (Eq false
         (Eq (w32 139)
             (ReadLSB w32 0 v139_fuzz_symb_139))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-139-8048a0e
Size=2 Low=0 splitIndex=1 high=1
183 [State 0] Switching from state 0 to state 140
Copied 34928 (count=1)
Finalizing TB execution 140
s2e_dummyMainFunction
tcg-llvm-tb-139-8048a0e
183 [State 140] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 139 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76e9b: af                                 scasd                    nextPC: 0xbfb76e9c
  2  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
183 [State 140] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76e9c, disasm in debug.
  1  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
183 [State 140] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
183 [State 140] Terminating state 140 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
183 [State 140] Switching from state 140 to state 0
Copied 34928 (count=1)
Deleting state 140 0x0x2398f870
Firing timer event
184 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 139
>> fuzzInit: datum forking for value 140
>> fuzzInit: datum forking for value 140
184 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 140)
        (ReadLSB w32 0 v140_fuzz_symb_140)))
    state 141 with condition (Not (Eq false
         (Eq (w32 140)
             (ReadLSB w32 0 v140_fuzz_symb_140))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-140-8048a0e
Size=2 Low=0 splitIndex=1 high=1
184 [State 0] Switching from state 0 to state 141
Copied 34928 (count=1)
Finalizing TB execution 141
s2e_dummyMainFunction
tcg-llvm-tb-140-8048a0e
184 [State 141] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 140 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
185 [State 141] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb76e9c, disasm in debug.
  1  1B @0xbfb76e9c: 1f                                 pop ds                   nextPC: 0xbfb76e9d
185 [State 141] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
185 [State 141] Terminating state 141 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
185 [State 141] Switching from state 141 to state 0
Copied 34928 (count=1)
Deleting state 141 0x0x2398f870
185 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 140
>> fuzzInit: datum forking for value 141
>> fuzzInit: datum forking for value 141
185 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 141)
        (ReadLSB w32 0 v141_fuzz_symb_141)))
    state 142 with condition (Not (Eq false
         (Eq (w32 141)
             (ReadLSB w32 0 v141_fuzz_symb_141))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-141-8048a0e
Size=2 Low=0 splitIndex=1 high=1
185 [State 0] Switching from state 0 to state 142
Copied 34928 (count=1)
Finalizing TB execution 142
s2e_dummyMainFunction
tcg-llvm-tb-141-8048a0e
Firing timer event
186 [State 142] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 141 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76e9d: 40                                 inc eax                  nextPC: 0xbfb76e9e
  2  1B @0xbfb76e9e: 5b                                 pop ebx                  nextPC: 0xbfb76e9f
  3  6B @0xbfb76e9f: 31 35 2e 30 32 2e                  xor [0x2e32302e], esi    nextPC: 0xbfb76ea5
  4  2B @0xbfb76ea5: 32 30                              xor dh, [eax]            nextPC: 0xbfb76ea7
  5  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  6  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  7  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  8  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  9  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
 10  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
 11  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
 12  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 13  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 14  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 15  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 16  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 17  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 18  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 19  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 20  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 21  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 22  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 23  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 24  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 25  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 26  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 27  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
186 [State 142] @0x080499bf, left buffer range after 27 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
186 [State 142] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
186 [State 142] Terminating state 142 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
186 [State 142] Switching from state 142 to state 0
Copied 34928 (count=1)
Deleting state 142 0x0x24192c20
186 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 141
Firing timer event
>> fuzzInit: datum forking for value 142
>> fuzzInit: datum forking for value 142
187 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 142)
        (ReadLSB w32 0 v142_fuzz_symb_142)))
    state 143 with condition (Not (Eq false
         (Eq (w32 142)
             (ReadLSB w32 0 v142_fuzz_symb_142))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-142-8048a0e
Size=2 Low=0 splitIndex=1 high=1
187 [State 0] Switching from state 0 to state 143
Copied 34928 (count=1)
Finalizing TB execution 143
s2e_dummyMainFunction
tcg-llvm-tb-142-8048a0e
187 [State 143] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 142 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76e9e: 5b                                 pop ebx                  nextPC: 0xbfb76e9f
  2  6B @0xbfb76e9f: 31 35 2e 30 32 2e                  xor [0x2e32302e], esi    nextPC: 0xbfb76ea5
  3  2B @0xbfb76ea5: 32 30                              xor dh, [eax]            nextPC: 0xbfb76ea7
  4  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  5  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  6  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  7  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  8  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  9  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
 10  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
 11  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 12  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 13  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 14  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 15  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 16  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 17  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 18  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 19  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 20  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 21  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 22  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 23  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 24  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 25  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 26  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
187 [State 143] @0x080499bf, left buffer range after 26 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
187 [State 143] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
187 [State 143] Terminating state 143 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
187 [State 143] Switching from state 143 to state 0
Copied 34928 (count=1)
Deleting state 143 0x0x242958a0
187 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 142
>> fuzzInit: datum forking for value 143
>> fuzzInit: datum forking for value 143
187 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 143)
        (ReadLSB w32 0 v143_fuzz_symb_143)))
    state 144 with condition (Not (Eq false
         (Eq (w32 143)
             (ReadLSB w32 0 v143_fuzz_symb_143))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-143-8048a0e
Size=2 Low=0 splitIndex=1 high=1
187 [State 0] Switching from state 0 to state 144
Copied 34928 (count=1)
Finalizing TB execution 144
s2e_dummyMainFunction
tcg-llvm-tb-143-8048a0e
Firing timer event
188 [State 144] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 143 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76e9f: 31 35 2e 30 32 2e                  xor [0x2e32302e], esi    nextPC: 0xbfb76ea5
  2  2B @0xbfb76ea5: 32 30                              xor dh, [eax]            nextPC: 0xbfb76ea7
  3  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  4  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  5  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  6  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  7  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  8  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  9  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
 10  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 11  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 12  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 13  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 14  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 15  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 16  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 17  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 18  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 19  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 20  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 21  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 22  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 23  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 24  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 25  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
188 [State 144] @0x080499bf, left buffer range after 25 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
188 [State 144] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
188 [State 144] Terminating state 144 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
188 [State 144] Switching from state 144 to state 0
Copied 34928 (count=1)
Deleting state 144 0x0x242958a0
188 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 143
>> fuzzInit: datum forking for value 144
>> fuzzInit: datum forking for value 144
188 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 144)
        (ReadLSB w32 0 v144_fuzz_symb_144)))
    state 145 with condition (Not (Eq false
         (Eq (w32 144)
             (ReadLSB w32 0 v144_fuzz_symb_144))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-144-8048a0e
Size=2 Low=0 splitIndex=1 high=1
188 [State 0] Switching from state 0 to state 145
Copied 34928 (count=1)
Finalizing TB execution 145
s2e_dummyMainFunction
tcg-llvm-tb-144-8048a0e
188 [State 145] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 144 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76ea0: 35 2e 30 32 2e                     xor eax, 0x2e32302e      nextPC: 0xbfb76ea5
  2  2B @0xbfb76ea5: 32 30                              xor dh, [eax]            nextPC: 0xbfb76ea7
  3  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  4  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  5  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  6  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  7  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  8  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  9  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
 10  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 11  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 12  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 13  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 14  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 15  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 16  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 17  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 18  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 19  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 20  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 21  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 22  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 23  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 24  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 25  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
Firing timer event
189 [State 145] @0x080499bf, left buffer range after 25 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
189 [State 145] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
189 [State 145] Terminating state 145 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
189 [State 145] Switching from state 145 to state 0
Copied 34928 (count=1)
Deleting state 145 0x0x242958a0
189 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 144
>> fuzzInit: datum forking for value 145
>> fuzzInit: datum forking for value 145
189 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 145)
        (ReadLSB w32 0 v145_fuzz_symb_145)))
    state 146 with condition (Not (Eq false
         (Eq (w32 145)
             (ReadLSB w32 0 v145_fuzz_symb_145))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-145-8048a0e
Size=2 Low=0 splitIndex=1 high=1
189 [State 0] Switching from state 0 to state 146
Copied 34928 (count=1)
Finalizing TB execution 146
s2e_dummyMainFunction
tcg-llvm-tb-145-8048a0e
189 [State 146] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 145 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ea1: 2e 30 32                           xor [cs:edx], dh         nextPC: 0xbfb76ea4
  2  3B @0xbfb76ea4: 2e 32 30                           xor dh, [cs:eax]         nextPC: 0xbfb76ea7
  3  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  4  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  5  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  6  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  7  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  8  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  9  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
 10  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 11  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 12  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 13  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 14  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 15  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 16  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 17  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 18  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 19  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 20  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 21  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 22  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 23  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 24  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 25  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
189 [State 146] @0x080499bf, left buffer range after 25 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
189 [State 146] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
189 [State 146] Terminating state 146 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
189 [State 146] Switching from state 146 to state 0
Copied 34928 (count=1)
Deleting state 146 0x0x242958a0
Firing timer event
190 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 145
>> fuzzInit: datum forking for value 146
>> fuzzInit: datum forking for value 146
190 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 146)
        (ReadLSB w32 0 v146_fuzz_symb_146)))
    state 147 with condition (Not (Eq false
         (Eq (w32 146)
             (ReadLSB w32 0 v146_fuzz_symb_146))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-146-8048a0e
Size=2 Low=0 splitIndex=1 high=1
190 [State 0] Switching from state 0 to state 147
Copied 34928 (count=1)
Finalizing TB execution 147
s2e_dummyMainFunction
tcg-llvm-tb-146-8048a0e
190 [State 147] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 146 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ea2: 30 32                              xor [edx], dh            nextPC: 0xbfb76ea4
  2  3B @0xbfb76ea4: 2e 32 30                           xor dh, [cs:eax]         nextPC: 0xbfb76ea7
  3  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  4  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  5  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  6  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  7  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  8  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  9  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
 10  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 11  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 12  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 13  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 14  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 15  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 16  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 17  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 18  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 19  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 20  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 21  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 22  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 23  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 24  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 25  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
190 [State 147] @0x080499bf, left buffer range after 25 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
190 [State 147] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
190 [State 147] Terminating state 147 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
190 [State 147] Switching from state 147 to state 0
Copied 34928 (count=1)
Deleting state 147 0x0x241f2dc0
190 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 146
>> fuzzInit: datum forking for value 147
>> fuzzInit: datum forking for value 147
>> fuzzInit: datum forking for value 147
191 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 147)
        (ReadLSB w32 0 v147_fuzz_symb_147)))
    state 148 with condition (Not (Eq false
         (Eq (w32 147)
             (ReadLSB w32 0 v147_fuzz_symb_147))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-147-8048a0e
Size=2 Low=0 splitIndex=1 high=1
191 [State 0] Switching from state 0 to state 148
Copied 34928 (count=1)
Finalizing TB execution 148
s2e_dummyMainFunction
tcg-llvm-tb-147-8048a0e
Firing timer event
191 [State 148] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 147 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ea3: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ea5
  2  2B @0xbfb76ea5: 32 30                              xor dh, [eax]            nextPC: 0xbfb76ea7
  3  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  4  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  5  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  6  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  7  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  8  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  9  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
 10  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 11  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 12  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 13  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 14  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 15  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 16  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 17  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 18  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 19  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 20  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 21  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 22  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 23  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 24  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 25  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
191 [State 148] @0x080499bf, left buffer range after 25 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
191 [State 148] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
191 [State 148] Terminating state 148 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
191 [State 148] Switching from state 148 to state 0
Copied 34928 (count=1)
Deleting state 148 0x0x241f2dc0
191 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 147
>> fuzzInit: datum forking for value 148
>> fuzzInit: datum forking for value 148
191 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 148)
        (ReadLSB w32 0 v148_fuzz_symb_148)))
    state 149 with condition (Not (Eq false
         (Eq (w32 148)
             (ReadLSB w32 0 v148_fuzz_symb_148))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-148-8048a0e
Size=2 Low=0 splitIndex=1 high=1
191 [State 0] Switching from state 0 to state 149
Copied 34928 (count=1)
Finalizing TB execution 149
s2e_dummyMainFunction
tcg-llvm-tb-148-8048a0e
191 [State 149] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 148 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ea4: 2e 32 30                           xor dh, [cs:eax]         nextPC: 0xbfb76ea7
  2  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  3  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  4  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  5  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  6  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  7  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  8  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  9  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 10  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 11  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 12  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 13  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 14  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 15  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 16  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 17  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 18  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 19  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 20  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 21  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 22  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 23  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 24  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
192 [State 149] @0x080499bf, left buffer range after 24 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
192 [State 149] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
192 [State 149] Terminating state 149 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
192 [State 149] Switching from state 149 to state 0
Copied 34928 (count=1)
Deleting state 149 0x0x241f2dc0
Firing timer event
192 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 148
>> fuzzInit: datum forking for value 149
>> fuzzInit: datum forking for value 149
192 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 149)
        (ReadLSB w32 0 v149_fuzz_symb_149)))
    state 150 with condition (Not (Eq false
         (Eq (w32 149)
             (ReadLSB w32 0 v149_fuzz_symb_149))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-149-8048a0e
Size=2 Low=0 splitIndex=1 high=1
192 [State 0] Switching from state 0 to state 150
Copied 34928 (count=1)
Finalizing TB execution 150
s2e_dummyMainFunction
tcg-llvm-tb-149-8048a0e
192 [State 150] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 149 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ea5: 32 30                              xor dh, [eax]            nextPC: 0xbfb76ea7
  2  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  3  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  4  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  5  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  6  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  7  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  8  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  9  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 10  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 11  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 12  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 13  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 14  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 15  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 16  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 17  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 18  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 19  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 20  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 21  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 22  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 23  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 24  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
192 [State 150] @0x080499bf, left buffer range after 24 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
192 [State 150] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
192 [State 150] Terminating state 150 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
192 [State 150] Switching from state 150 to state 0
Copied 34928 (count=1)
Deleting state 150 0x0x244e97d0
192 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 149
>> fuzzInit: datum forking for value 150
>> fuzzInit: datum forking for value 150
193 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 150)
        (ReadLSB w32 0 v150_fuzz_symb_150)))
    state 151 with condition (Not (Eq false
         (Eq (w32 150)
             (ReadLSB w32 0 v150_fuzz_symb_150))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-150-8048a0e
Size=2 Low=0 splitIndex=1 high=1
193 [State 0] Switching from state 0 to state 151
Copied 34928 (count=1)
Finalizing TB execution 151
s2e_dummyMainFunction
tcg-llvm-tb-150-8048a0e
Firing timer event
193 [State 151] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 150 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ea6: 30 31                              xor [ecx], dh            nextPC: 0xbfb76ea8
  2  3B @0xbfb76ea8: 32 5d 20                           xor bl, [ebp+0x20]       nextPC: 0xbfb76eab
  3  1B @0xbfb76eab: 5b                                 pop ebx                  nextPC: 0xbfb76eac
  4  2B @0xbfb76eac: 30 33                              xor [ebx], dh            nextPC: 0xbfb76eae
  5  2B @0xbfb76eae: 3a 32                              cmp dh, [edx]            nextPC: 0xbfb76eb0
  6  2B @0xbfb76eb0: 31 2e                              xor [esi], ebp           nextPC: 0xbfb76eb2
  7  2B @0xbfb76eb2: 34 30                              xor al, 0x30             nextPC: 0xbfb76eb4
  8  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  9  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
 10  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 11  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 12  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 13  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 14  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 15  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 16  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 17  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 18  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 19  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 20  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 21  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 22  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 23  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 24  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
193 [State 151] @0x080499bf, left buffer range after 24 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
193 [State 151] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
193 [State 151] Terminating state 151 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
193 [State 151] Switching from state 151 to state 0
Copied 34928 (count=1)
Deleting state 151 0x0x244e97d0
193 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 150
>> fuzzInit: datum forking for value 151
>> fuzzInit: datum forking for value 151
193 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 151)
        (ReadLSB w32 0 v151_fuzz_symb_151)))
    state 152 with condition (Not (Eq false
         (Eq (w32 151)
             (ReadLSB w32 0 v151_fuzz_symb_151))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-151-8048a0e
Size=2 Low=0 splitIndex=1 high=1
193 [State 0] Switching from state 0 to state 152
Copied 34928 (count=1)
Finalizing TB execution 152
s2e_dummyMainFunction
tcg-llvm-tb-151-8048a0e
193 [State 152] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 151 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ea7: 31 32                              xor [edx], esi           nextPC: 0xbfb76ea9
  2  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  3  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  4  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  5  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  6  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  7  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  8  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  9  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 10  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 11  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 12  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 13  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 14  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 15  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 16  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 17  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 18  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 19  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 20  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 21  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 22  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 23  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
194 [State 152] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
194 [State 152] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
194 [State 152] Terminating state 152 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
194 [State 152] Switching from state 152 to state 0
Copied 34928 (count=1)
Deleting state 152 0x0x244acbd0
Firing timer event
194 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 151
>> fuzzInit: datum forking for value 152
>> fuzzInit: datum forking for value 152
194 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 152)
        (ReadLSB w32 0 v152_fuzz_symb_152)))
    state 153 with condition (Not (Eq false
         (Eq (w32 152)
             (ReadLSB w32 0 v152_fuzz_symb_152))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-152-8048a0e
Size=2 Low=0 splitIndex=1 high=1
194 [State 0] Switching from state 0 to state 153
Copied 34928 (count=1)
Finalizing TB execution 153
s2e_dummyMainFunction
tcg-llvm-tb-152-8048a0e
194 [State 153] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 152 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ea8: 32 5d 20                           xor bl, [ebp+0x20]       nextPC: 0xbfb76eab
  2  1B @0xbfb76eab: 5b                                 pop ebx                  nextPC: 0xbfb76eac
  3  2B @0xbfb76eac: 30 33                              xor [ebx], dh            nextPC: 0xbfb76eae
  4  2B @0xbfb76eae: 3a 32                              cmp dh, [edx]            nextPC: 0xbfb76eb0
  5  2B @0xbfb76eb0: 31 2e                              xor [esi], ebp           nextPC: 0xbfb76eb2
  6  2B @0xbfb76eb2: 34 30                              xor al, 0x30             nextPC: 0xbfb76eb4
  7  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  8  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  9  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
 10  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 11  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 12  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 13  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 14  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 15  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 16  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 17  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 18  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 19  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 20  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 21  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 22  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 23  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
194 [State 153] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
194 [State 153] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
194 [State 153] Terminating state 153 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
194 [State 153] Switching from state 153 to state 0
Copied 34928 (count=1)
Deleting state 153 0x0x244acbd0
195 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 152
>> fuzzInit: datum forking for value 153
>> fuzzInit: datum forking for value 153
>> fuzzInit: datum forking for value 153
195 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 153)
        (ReadLSB w32 0 v153_fuzz_symb_153)))
    state 154 with condition (Not (Eq false
         (Eq (w32 153)
             (ReadLSB w32 0 v153_fuzz_symb_153))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-153-8048a0e
Size=2 Low=0 splitIndex=1 high=1
195 [State 0] Switching from state 0 to state 154
Copied 34928 (count=1)
Finalizing TB execution 154
s2e_dummyMainFunction
tcg-llvm-tb-153-8048a0e
Firing timer event
195 [State 154] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 153 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ea9: 5d                                 pop ebp                  nextPC: 0xbfb76eaa
  2  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  3  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  4  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  5  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  6  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  7  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  8  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  9  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 10  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 11  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 12  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 13  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 14  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 15  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 16  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 17  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 18  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 19  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 20  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 21  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 22  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
195 [State 154] @0x080499bf, left buffer range after 22 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
195 [State 154] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
195 [State 154] Terminating state 154 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
195 [State 154] Switching from state 154 to state 0
Copied 34928 (count=1)
Deleting state 154 0x0x244acbd0
195 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 153
>> fuzzInit: datum forking for value 154
>> fuzzInit: datum forking for value 154
195 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 154)
        (ReadLSB w32 0 v154_fuzz_symb_154)))
    state 155 with condition (Not (Eq false
         (Eq (w32 154)
             (ReadLSB w32 0 v154_fuzz_symb_154))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-154-8048a0e
Size=2 Low=0 splitIndex=1 high=1
195 [State 0] Switching from state 0 to state 155
Copied 34928 (count=1)
Finalizing TB execution 155
s2e_dummyMainFunction
tcg-llvm-tb-154-8048a0e
196 [State 155] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 154 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76eaa: 20 5b 30                           and [ebx+0x30], bl       nextPC: 0xbfb76ead
  2  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  3  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  4  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  5  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  6  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  7  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  8  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  9  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 10  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 11  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 12  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 13  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 14  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 15  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 16  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 17  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 18  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 19  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 20  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 21  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
196 [State 155] @0x080499bf, left buffer range after 21 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
196 [State 155] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
196 [State 155] Terminating state 155 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
196 [State 155] Switching from state 155 to state 0
Copied 34928 (count=1)
Deleting state 155 0x0x244acbd0
Firing timer event
196 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 154
>> fuzzInit: datum forking for value 155
>> fuzzInit: datum forking for value 155
196 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 155)
        (ReadLSB w32 0 v155_fuzz_symb_155)))
    state 156 with condition (Not (Eq false
         (Eq (w32 155)
             (ReadLSB w32 0 v155_fuzz_symb_155))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-155-8048a0e
Size=2 Low=0 splitIndex=1 high=1
196 [State 0] Switching from state 0 to state 156
Copied 34928 (count=1)
Finalizing TB execution 156
s2e_dummyMainFunction
tcg-llvm-tb-155-8048a0e
196 [State 156] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 155 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eab: 5b                                 pop ebx                  nextPC: 0xbfb76eac
  2  2B @0xbfb76eac: 30 33                              xor [ebx], dh            nextPC: 0xbfb76eae
  3  2B @0xbfb76eae: 3a 32                              cmp dh, [edx]            nextPC: 0xbfb76eb0
  4  2B @0xbfb76eb0: 31 2e                              xor [esi], ebp           nextPC: 0xbfb76eb2
  5  2B @0xbfb76eb2: 34 30                              xor al, 0x30             nextPC: 0xbfb76eb4
  6  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  7  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  8  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  9  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
 10  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 11  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 12  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 13  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 14  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 15  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 16  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 17  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 18  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 19  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 20  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 21  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 22  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
196 [State 156] @0x080499bf, left buffer range after 22 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
196 [State 156] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
196 [State 156] Terminating state 156 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
196 [State 156] Switching from state 156 to state 0
Copied 34928 (count=1)
Deleting state 156 0x0x244acbd0
197 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 155
>> fuzzInit: datum forking for value 156
>> fuzzInit: datum forking for value 156
197 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 156)
        (ReadLSB w32 0 v156_fuzz_symb_156)))
    state 157 with condition (Not (Eq false
         (Eq (w32 156)
             (ReadLSB w32 0 v156_fuzz_symb_156))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-156-8048a0e
Size=2 Low=0 splitIndex=1 high=1
197 [State 0] Switching from state 0 to state 157
Copied 34928 (count=1)
Finalizing TB execution 157
s2e_dummyMainFunction
tcg-llvm-tb-156-8048a0e
Firing timer event
197 [State 157] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 156 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76eac: 30 33                              xor [ebx], dh            nextPC: 0xbfb76eae
  2  2B @0xbfb76eae: 3a 32                              cmp dh, [edx]            nextPC: 0xbfb76eb0
  3  2B @0xbfb76eb0: 31 2e                              xor [esi], ebp           nextPC: 0xbfb76eb2
  4  2B @0xbfb76eb2: 34 30                              xor al, 0x30             nextPC: 0xbfb76eb4
  5  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  6  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  7  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  8  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  9  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
 10  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 11  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 12  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 13  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 14  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 15  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 16  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 17  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 18  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 19  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 20  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 21  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
197 [State 157] @0x080499bf, left buffer range after 21 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
197 [State 157] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
197 [State 157] Terminating state 157 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
197 [State 157] Switching from state 157 to state 0
Copied 34928 (count=1)
Deleting state 157 0x0x244bc510
197 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 156
>> fuzzInit: datum forking for value 157
>> fuzzInit: datum forking for value 157
197 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 157)
        (ReadLSB w32 0 v157_fuzz_symb_157)))
    state 158 with condition (Not (Eq false
         (Eq (w32 157)
             (ReadLSB w32 0 v157_fuzz_symb_157))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-157-8048a0e
Size=2 Low=0 splitIndex=1 high=1
197 [State 0] Switching from state 0 to state 158
Copied 34928 (count=1)
Finalizing TB execution 158
s2e_dummyMainFunction
tcg-llvm-tb-157-8048a0e
198 [State 158] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 157 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ead: 33 3a                              xor edi, [edx]           nextPC: 0xbfb76eaf
  2  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  3  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  4  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  5  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  6  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  7  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  8  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  9  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 10  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 11  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 12  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 13  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 14  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 15  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 16  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 17  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 18  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 19  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 20  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
198 [State 158] @0x080499bf, left buffer range after 20 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
198 [State 158] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
198 [State 158] Terminating state 158 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
198 [State 158] Switching from state 158 to state 0
Copied 34928 (count=1)
Deleting state 158 0x0x24739930
Firing timer event
198 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 157
>> fuzzInit: datum forking for value 158
>> fuzzInit: datum forking for value 158
198 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 158)
        (ReadLSB w32 0 v158_fuzz_symb_158)))
    state 159 with condition (Not (Eq false
         (Eq (w32 158)
             (ReadLSB w32 0 v158_fuzz_symb_158))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-158-8048a0e
Size=2 Low=0 splitIndex=1 high=1
198 [State 0] Switching from state 0 to state 159
Copied 34928 (count=1)
Finalizing TB execution 159
s2e_dummyMainFunction
tcg-llvm-tb-158-8048a0e
198 [State 159] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 158 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76eae: 3a 32                              cmp dh, [edx]            nextPC: 0xbfb76eb0
  2  2B @0xbfb76eb0: 31 2e                              xor [esi], ebp           nextPC: 0xbfb76eb2
  3  2B @0xbfb76eb2: 34 30                              xor al, 0x30             nextPC: 0xbfb76eb4
  4  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  5  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  6  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  7  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  8  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  9  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
 10  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 11  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 12  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 13  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 14  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 15  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 16  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 17  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 18  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 19  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 20  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
199 [State 159] @0x080499bf, left buffer range after 20 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
199 [State 159] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
199 [State 159] Terminating state 159 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
199 [State 159] Switching from state 159 to state 0
Copied 34928 (count=1)
Deleting state 159 0x0x24739930
199 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 158
>> fuzzInit: datum forking for value 159
>> fuzzInit: datum forking for value 159
199 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 159)
        (ReadLSB w32 0 v159_fuzz_symb_159)))
    state 160 with condition (Not (Eq false
         (Eq (w32 159)
             (ReadLSB w32 0 v159_fuzz_symb_159))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-159-8048a0e
Size=2 Low=0 splitIndex=1 high=1
199 [State 0] Switching from state 0 to state 160
Copied 34928 (count=1)
Finalizing TB execution 160
s2e_dummyMainFunction
tcg-llvm-tb-159-8048a0e
Firing timer event
199 [State 160] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 159 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76eaf: 32 31                              xor dh, [ecx]            nextPC: 0xbfb76eb1
  2  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  3  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  4  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  5  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  6  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  7  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  8  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  9  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 10  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 11  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 12  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 13  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 14  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 15  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 16  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 17  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 18  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 19  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
199 [State 160] @0x080499bf, left buffer range after 19 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
199 [State 160] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
199 [State 160] Terminating state 160 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
199 [State 160] Switching from state 160 to state 0
Copied 34928 (count=1)
Deleting state 160 0x0x24739930
200 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 159
>> fuzzInit: datum forking for value 160
>> fuzzInit: datum forking for value 160
200 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 160)
        (ReadLSB w32 0 v160_fuzz_symb_160)))
    state 161 with condition (Not (Eq false
         (Eq (w32 160)
             (ReadLSB w32 0 v160_fuzz_symb_160))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-160-8048a0e
Size=2 Low=0 splitIndex=1 high=1
200 [State 0] Switching from state 0 to state 161
Copied 34928 (count=1)
Finalizing TB execution 161
s2e_dummyMainFunction
tcg-llvm-tb-160-8048a0e
200 [State 161] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 160 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76eb0: 31 2e                              xor [esi], ebp           nextPC: 0xbfb76eb2
  2  2B @0xbfb76eb2: 34 30                              xor al, 0x30             nextPC: 0xbfb76eb4
  3  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  4  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  5  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  6  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  7  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  8  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  9  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
 10  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 11  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 12  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 13  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 14  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 15  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 16  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 17  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 18  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 19  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
200 [State 161] @0x080499bf, left buffer range after 19 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
200 [State 161] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
200 [State 161] Terminating state 161 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
200 [State 161] Switching from state 161 to state 0
Copied 34928 (count=1)
Deleting state 161 0x0x24739930
200 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 160
>> fuzzInit: datum forking for value 161
>> fuzzInit: datum forking for value 161
200 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 161)
        (ReadLSB w32 0 v161_fuzz_symb_161)))
    state 162 with condition (Not (Eq false
         (Eq (w32 161)
             (ReadLSB w32 0 v161_fuzz_symb_161))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-161-8048a0e
Size=2 Low=0 splitIndex=1 high=1
200 [State 0] Switching from state 0 to state 162
Copied 34928 (count=1)
Finalizing TB execution 162
s2e_dummyMainFunction
tcg-llvm-tb-161-8048a0e
201 [State 162] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 161 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76eb1: 2e 34 30                           xor al, 0x30             nextPC: 0xbfb76eb4
  2  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  3  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  4  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  5  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  6  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  7  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  8  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  9  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 10  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 11  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 12  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 13  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 14  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 15  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 16  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 17  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 18  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
201 [State 162] @0x080499bf, left buffer range after 18 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
201 [State 162] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
201 [State 162] Terminating state 162 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
201 [State 162] Switching from state 162 to state 0
Copied 34928 (count=1)
Deleting state 162 0x0x24869800
201 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 161
>> fuzzInit: datum forking for value 162
>> fuzzInit: datum forking for value 162
201 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 162)
        (ReadLSB w32 0 v162_fuzz_symb_162)))
    state 163 with condition (Not (Eq false
         (Eq (w32 162)
             (ReadLSB w32 0 v162_fuzz_symb_162))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-162-8048a0e
Size=2 Low=0 splitIndex=1 high=1
201 [State 0] Switching from state 0 to state 163
Copied 34928 (count=1)
Finalizing TB execution 163
s2e_dummyMainFunction
tcg-llvm-tb-162-8048a0e
Firing timer event
201 [State 163] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 162 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76eb2: 34 30                              xor al, 0x30             nextPC: 0xbfb76eb4
  2  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  3  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  4  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  5  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  6  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  7  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  8  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  9  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 10  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 11  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 12  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 13  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 14  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 15  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 16  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 17  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 18  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
201 [State 163] @0x080499bf, left buffer range after 18 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
201 [State 163] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
201 [State 163] Terminating state 163 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
201 [State 163] Switching from state 163 to state 0
Copied 34928 (count=1)
Deleting state 163 0x0x24869800
202 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 162
>> fuzzInit: datum forking for value 163
>> fuzzInit: datum forking for value 163
202 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 163)
        (ReadLSB w32 0 v163_fuzz_symb_163)))
    state 164 with condition (Not (Eq false
         (Eq (w32 163)
             (ReadLSB w32 0 v163_fuzz_symb_163))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-163-8048a0e
Size=2 Low=0 splitIndex=1 high=1
202 [State 0] Switching from state 0 to state 164
Copied 34928 (count=1)
Finalizing TB execution 164
s2e_dummyMainFunction
tcg-llvm-tb-163-8048a0e
202 [State 164] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 163 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76eb3: 30 5d 20                           xor [ebp+0x20], bl       nextPC: 0xbfb76eb6
  2  5B @0xbfb76eb6: 2d 20 43 6f 6e                     sub eax, 0x6e6f4320      nextPC: 0xbfb76ebb
  3  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  4  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  5  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  6  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  7  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  8  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  9  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 10  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 11  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 12  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 13  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 14  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 15  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 16  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 17  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
202 [State 164] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
202 [State 164] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
202 [State 164] Terminating state 164 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
202 [State 164] Switching from state 164 to state 0
Copied 34928 (count=1)
Deleting state 164 0x0x24869800
Firing timer event
202 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 163
>> fuzzInit: datum forking for value 164
>> fuzzInit: datum forking for value 164
202 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 164)
        (ReadLSB w32 0 v164_fuzz_symb_164)))
    state 165 with condition (Not (Eq false
         (Eq (w32 164)
             (ReadLSB w32 0 v164_fuzz_symb_164))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-164-8048a0e
Size=2 Low=0 splitIndex=1 high=1
202 [State 0] Switching from state 0 to state 165
Copied 34928 (count=1)
Finalizing TB execution 165
s2e_dummyMainFunction
tcg-llvm-tb-164-8048a0e
203 [State 165] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 164 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eb4: 5d                                 pop ebp                  nextPC: 0xbfb76eb5
  2  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  3  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  4  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  5  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  6  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  7  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  8  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  9  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 10  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 11  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 12  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 13  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 14  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 15  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 16  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 17  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
203 [State 165] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
203 [State 165] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
203 [State 165] Terminating state 165 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
203 [State 165] Switching from state 165 to state 0
Copied 34928 (count=1)
Deleting state 165 0x0x2489acf0
203 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 164
>> fuzzInit: datum forking for value 165
>> fuzzInit: datum forking for value 165
203 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 165)
        (ReadLSB w32 0 v165_fuzz_symb_165)))
    state 166 with condition (Not (Eq false
         (Eq (w32 165)
             (ReadLSB w32 0 v165_fuzz_symb_165))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-165-8048a0e
Size=2 Low=0 splitIndex=1 high=1
203 [State 0] Switching from state 0 to state 166
Copied 34928 (count=1)
Finalizing TB execution 166
s2e_dummyMainFunction
tcg-llvm-tb-165-8048a0e
Firing timer event
203 [State 166] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 165 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76eb5: 20 2d 20 43 6f 6e                  and [0x6e6f4320], ch     nextPC: 0xbfb76ebb
  2  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  3  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  4  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  5  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  6  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  7  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  8  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  9  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 10  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 11  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 12  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 13  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 14  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 15  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 16  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
203 [State 166] @0x080499bf, left buffer range after 16 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
203 [State 166] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
203 [State 166] Terminating state 166 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
203 [State 166] Switching from state 166 to state 0
Copied 34928 (count=1)
Deleting state 166 0x0x2489acf0
204 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 165
>> fuzzInit: datum forking for value 166
>> fuzzInit: datum forking for value 166
204 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 166)
        (ReadLSB w32 0 v166_fuzz_symb_166)))
    state 167 with condition (Not (Eq false
         (Eq (w32 166)
             (ReadLSB w32 0 v166_fuzz_symb_166))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-166-8048a0e
Size=2 Low=0 splitIndex=1 high=1
204 [State 0] Switching from state 0 to state 167
Copied 34928 (count=1)
Finalizing TB execution 167
s2e_dummyMainFunction
tcg-llvm-tb-166-8048a0e
204 [State 167] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 166 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76eb6: 2d 20 43 6f 6e                     sub eax, 0x6e6f4320      nextPC: 0xbfb76ebb
  2  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  3  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  4  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  5  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  6  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  7  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  8  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  9  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 10  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 11  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 12  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 13  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 14  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 15  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 16  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
204 [State 167] @0x080499bf, left buffer range after 16 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
204 [State 167] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
204 [State 167] Terminating state 167 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
204 [State 167] Switching from state 167 to state 0
Copied 34928 (count=1)
Deleting state 167 0x0x2497f190
204 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 166
>> fuzzInit: datum forking for value 167
>> fuzzInit: datum forking for value 167
204 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 167)
        (ReadLSB w32 0 v167_fuzz_symb_167)))
    state 168 with condition (Not (Eq false
         (Eq (w32 167)
             (ReadLSB w32 0 v167_fuzz_symb_167))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-167-8048a0e
Size=2 Low=0 splitIndex=1 high=1
204 [State 0] Switching from state 0 to state 168
Copied 34928 (count=1)
Finalizing TB execution 168
s2e_dummyMainFunction
tcg-llvm-tb-167-8048a0e
Firing timer event
205 [State 168] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 167 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76eb7: 20 43 6f                           and [ebx+0x6f], al       nextPC: 0xbfb76eba
  2  1B @0xbfb76eba: 6e                                 outsb                    nextPC: 0xbfb76ebb
  3  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  4  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  5  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  6  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  7  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  8  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  9  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 10  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 11  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 12  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 13  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 14  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 15  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 16  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 17  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
205 [State 168] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
205 [State 168] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
205 [State 168] Terminating state 168 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
205 [State 168] Switching from state 168 to state 0
Copied 34928 (count=1)
Deleting state 168 0x0x249c75a0
205 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 167
>> fuzzInit: datum forking for value 168
>> fuzzInit: datum forking for value 168
205 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 168)
        (ReadLSB w32 0 v168_fuzz_symb_168)))
    state 169 with condition (Not (Eq false
         (Eq (w32 168)
             (ReadLSB w32 0 v168_fuzz_symb_168))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-168-8048a0e
Size=2 Low=0 splitIndex=1 high=1
205 [State 0] Switching from state 0 to state 169
Copied 34928 (count=1)
Finalizing TB execution 169
s2e_dummyMainFunction
tcg-llvm-tb-168-8048a0e
205 [State 169] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 168 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76eb8: 43                                 inc ebx                  nextPC: 0xbfb76eb9
  2  1B @0xbfb76eb9: 6f                                 outsd                    nextPC: 0xbfb76eba
  3  1B @0xbfb76eba: 6e                                 outsb                    nextPC: 0xbfb76ebb
  4  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  5  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  6  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  7  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  8  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  9  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
 10  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 11  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 12  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 13  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 14  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 15  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 16  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 17  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 18  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
206 [State 169] @0x080499bf, left buffer range after 18 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
206 [State 169] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
206 [State 169] Terminating state 169 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
206 [State 169] Switching from state 169 to state 0
Copied 34928 (count=1)
Deleting state 169 0x0x249c75a0
206 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 168
>> fuzzInit: datum forking for value 169
>> fuzzInit: datum forking for value 169
206 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 169)
        (ReadLSB w32 0 v169_fuzz_symb_169)))
    state 170 with condition (Not (Eq false
         (Eq (w32 169)
             (ReadLSB w32 0 v169_fuzz_symb_169))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-169-8048a0e
Size=2 Low=0 splitIndex=1 high=1
206 [State 0] Switching from state 0 to state 170
Copied 34928 (count=1)
Finalizing TB execution 170
s2e_dummyMainFunction
tcg-llvm-tb-169-8048a0e
206 [State 170] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 169 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eb9: 6f                                 outsd                    nextPC: 0xbfb76eba
  2  1B @0xbfb76eba: 6e                                 outsb                    nextPC: 0xbfb76ebb
  3  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  4  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  5  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  6  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  7  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  8  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  9  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
 10  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 11  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 12  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 13  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 14  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 15  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 16  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 17  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
206 [State 170] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
206 [State 170] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
206 [State 170] Terminating state 170 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
206 [State 170] Switching from state 170 to state 0
Copied 34928 (count=1)
Deleting state 170 0x0x249c75a0
206 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 169
>> fuzzInit: datum forking for value 170
>> fuzzInit: datum forking for value 170
207 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 170)
        (ReadLSB w32 0 v170_fuzz_symb_170)))
    state 171 with condition (Not (Eq false
         (Eq (w32 170)
             (ReadLSB w32 0 v170_fuzz_symb_170))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-170-8048a0e
Size=2 Low=0 splitIndex=1 high=1
207 [State 0] Switching from state 0 to state 171
Copied 34928 (count=1)
Finalizing TB execution 171
s2e_dummyMainFunction
tcg-llvm-tb-170-8048a0e
Firing timer event
207 [State 171] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 170 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eba: 6e                                 outsb                    nextPC: 0xbfb76ebb
  2  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  3  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  4  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  5  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  6  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  7  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  8  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  9  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
 10  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 11  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 12  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 13  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 14  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 15  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 16  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
207 [State 171] @0x080499bf, left buffer range after 16 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
207 [State 171] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
207 [State 171] Terminating state 171 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
207 [State 171] Switching from state 171 to state 0
Copied 34928 (count=1)
Deleting state 171 0x0x249c75a0
207 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 170
>> fuzzInit: datum forking for value 171
>> fuzzInit: datum forking for value 171
207 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 171)
        (ReadLSB w32 0 v171_fuzz_symb_171)))
    state 172 with condition (Not (Eq false
         (Eq (w32 171)
             (ReadLSB w32 0 v171_fuzz_symb_171))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-171-8048a0e
Size=2 Low=0 splitIndex=1 high=1
207 [State 0] Switching from state 0 to state 172
Copied 34928 (count=1)
Finalizing TB execution 172
s2e_dummyMainFunction
tcg-llvm-tb-171-8048a0e
207 [State 172] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 171 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ebb: 6e                                 outsb                    nextPC: 0xbfb76ebc
  2  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  3  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  4  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  5  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  6  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  7  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  8  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  9  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 10  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 11  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 12  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 13  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 14  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 15  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
208 [State 172] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
208 [State 172] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
208 [State 172] Terminating state 172 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
208 [State 172] Switching from state 172 to state 0
Copied 34928 (count=1)
Deleting state 172 0x0x249c75a0
Firing timer event
208 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 171
>> fuzzInit: datum forking for value 172
>> fuzzInit: datum forking for value 172
208 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 172)
        (ReadLSB w32 0 v172_fuzz_symb_172)))
    state 173 with condition (Not (Eq false
         (Eq (w32 172)
             (ReadLSB w32 0 v172_fuzz_symb_172))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-172-8048a0e
Size=2 Low=0 splitIndex=1 high=1
208 [State 0] Switching from state 0 to state 173
Copied 34928 (count=1)
Finalizing TB execution 173
s2e_dummyMainFunction
tcg-llvm-tb-172-8048a0e
208 [State 173] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 172 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76ebc: 65 63 74 69 6f                     arpl [gs:ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  2  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  3  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  4  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  5  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  6  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  7  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  8  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  9  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 10  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 11  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 12  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 13  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 14  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
208 [State 173] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
208 [State 173] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
208 [State 173] Terminating state 173 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
208 [State 173] Switching from state 173 to state 0
Copied 34928 (count=1)
Deleting state 173 0x0x249c75a0
208 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 172
>> fuzzInit: datum forking for value 173
>> fuzzInit: datum forking for value 173
209 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 173)
        (ReadLSB w32 0 v173_fuzz_symb_173)))
    state 174 with condition (Not (Eq false
         (Eq (w32 173)
             (ReadLSB w32 0 v173_fuzz_symb_173))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-173-8048a0e
Size=2 Low=0 splitIndex=1 high=1
209 [State 0] Switching from state 0 to state 174
Copied 34928 (count=1)
Finalizing TB execution 174
s2e_dummyMainFunction
tcg-llvm-tb-173-8048a0e
Firing timer event
209 [State 174] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 173 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  4B @0xbfb76ebd: 63 74 69 6f                        arpl [ecx+ebp*2+0x6f], si nextPC: 0xbfb76ec1
  2  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  3  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  4  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  5  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  6  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  7  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  8  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  9  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 10  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 11  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 12  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 13  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 14  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
209 [State 174] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
209 [State 174] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
209 [State 174] Terminating state 174 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
209 [State 174] Switching from state 174 to state 0
Copied 34928 (count=1)
Deleting state 174 0x0x249c75a0
209 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 173
>> fuzzInit: datum forking for value 174
>> fuzzInit: datum forking for value 174
209 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 174)
        (ReadLSB w32 0 v174_fuzz_symb_174)))
    state 175 with condition (Not (Eq false
         (Eq (w32 174)
             (ReadLSB w32 0 v174_fuzz_symb_174))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-174-8048a0e
Size=2 Low=0 splitIndex=1 high=1
209 [State 0] Switching from state 0 to state 175
Copied 34928 (count=1)
Finalizing TB execution 175
s2e_dummyMainFunction
tcg-llvm-tb-174-8048a0e
209 [State 175] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 174 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ebe: 74 69                              jz 0x6b                  nextPC: 0xbfb76ec0 jmpPc: 0xbfb76f29
  2  1B @0xbfb76ec0: 6f                                 outsd                    nextPC: 0xbfb76ec1
  3  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  4  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  5  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  6  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  7  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  8  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  9  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
 10  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 11  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 12  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 13  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 14  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 15  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
210 [State 175] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
210 [State 175] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
210 [State 175] Terminating state 175 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
210 [State 175] Switching from state 175 to state 0
Copied 34928 (count=1)
Deleting state 175 0x0x249c75a0
Firing timer event
210 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 174
>> fuzzInit: datum forking for value 175
>> fuzzInit: datum forking for value 175
210 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 175)
        (ReadLSB w32 0 v175_fuzz_symb_175)))
    state 176 with condition (Not (Eq false
         (Eq (w32 175)
             (ReadLSB w32 0 v175_fuzz_symb_175))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-175-8048a0e
Size=2 Low=0 splitIndex=1 high=1
210 [State 0] Switching from state 0 to state 176
Copied 34928 (count=1)
Finalizing TB execution 176
s2e_dummyMainFunction
tcg-llvm-tb-175-8048a0e
210 [State 176] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 175 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  7B @0xbfb76ebf: 69 6f 6e 20 66 72 6f               imul ebp, [edi+0x6e], 0x6f726620 nextPC: 0xbfb76ec6
  2  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  3  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  4  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  5  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  6  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  7  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  8  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  9  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 10  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 11  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
210 [State 176] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
210 [State 176] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
210 [State 176] Terminating state 176 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
210 [State 176] Switching from state 176 to state 0
Copied 34928 (count=1)
Deleting state 176 0x0x249c75a0
211 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 175
>> fuzzInit: datum forking for value 176
>> fuzzInit: datum forking for value 176
211 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 176)
        (ReadLSB w32 0 v176_fuzz_symb_176)))
    state 177 with condition (Not (Eq false
         (Eq (w32 176)
             (ReadLSB w32 0 v176_fuzz_symb_176))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-176-8048a0e
Size=2 Low=0 splitIndex=1 high=1
211 [State 0] Switching from state 0 to state 177
Copied 34928 (count=1)
Finalizing TB execution 177
s2e_dummyMainFunction
tcg-llvm-tb-176-8048a0e
Firing timer event
211 [State 177] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 176 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ec0: 6f                                 outsd                    nextPC: 0xbfb76ec1
  2  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  3  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  4  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  5  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  6  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  7  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  8  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  9  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
 10  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 11  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 12  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 13  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 14  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
211 [State 177] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
211 [State 177] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
211 [State 177] Terminating state 177 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
211 [State 177] Switching from state 177 to state 0
Copied 34928 (count=1)
Deleting state 177 0x0x249c75a0
211 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 176
>> fuzzInit: datum forking for value 177
>> fuzzInit: datum forking for value 177
211 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 177)
        (ReadLSB w32 0 v177_fuzz_symb_177)))
    state 178 with condition (Not (Eq false
         (Eq (w32 177)
             (ReadLSB w32 0 v177_fuzz_symb_177))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-177-8048a0e
Size=2 Low=0 splitIndex=1 high=1
211 [State 0] Switching from state 0 to state 178
Copied 34928 (count=1)
Finalizing TB execution 178
s2e_dummyMainFunction
tcg-llvm-tb-177-8048a0e
212 [State 178] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 177 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ec1: 6e                                 outsb                    nextPC: 0xbfb76ec2
  2  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  3  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  4  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  5  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  6  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  7  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  8  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  9  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
 10  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 11  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 12  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 13  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
212 [State 178] @0x080499bf, left buffer range after 13 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
212 [State 178] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
212 [State 178] Terminating state 178 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
212 [State 178] Switching from state 178 to state 0
Copied 34928 (count=1)
Deleting state 178 0x0x249c75a0
Firing timer event
212 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 177
>> fuzzInit: datum forking for value 178
>> fuzzInit: datum forking for value 178
212 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 178)
        (ReadLSB w32 0 v178_fuzz_symb_178)))
    state 179 with condition (Not (Eq false
         (Eq (w32 178)
             (ReadLSB w32 0 v178_fuzz_symb_178))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-178-8048a0e
Size=2 Low=0 splitIndex=1 high=1
212 [State 0] Switching from state 0 to state 179
Copied 34928 (count=1)
Finalizing TB execution 179
s2e_dummyMainFunction
tcg-llvm-tb-178-8048a0e
212 [State 179] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 178 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ec2: 20 66 72                           and [esi+0x72], ah       nextPC: 0xbfb76ec5
  2  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  3  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  4  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  5  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  6  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  7  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  8  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  9  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
 10  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 11  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 12  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
212 [State 179] @0x080499bf, left buffer range after 12 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
212 [State 179] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
212 [State 179] Terminating state 179 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
212 [State 179] Switching from state 179 to state 0
Copied 34928 (count=1)
Deleting state 179 0x0x249c75a0
213 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 178
>> fuzzInit: datum forking for value 179
>> fuzzInit: datum forking for value 179
213 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 179)
        (ReadLSB w32 0 v179_fuzz_symb_179)))
    state 180 with condition (Not (Eq false
         (Eq (w32 179)
             (ReadLSB w32 0 v179_fuzz_symb_179))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-179-8048a0e
Size=2 Low=0 splitIndex=1 high=1
213 [State 0] Switching from state 0 to state 180
Copied 34928 (count=1)
Finalizing TB execution 180
s2e_dummyMainFunction
tcg-llvm-tb-179-8048a0e
Firing timer event
213 [State 180] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 179 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ec3: 66 72 6f                           o16 jb 0x72              nextPC: 0xbfb76ec6 jmpPc: 0xffffffff
  2  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  3  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  4  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  5  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  6  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  7  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  8  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  9  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 10  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 11  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
213 [State 180] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
213 [State 180] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
213 [State 180] Terminating state 180 with message 'eliminated a state that is at unexpected location'
213 [State 180] Switching from state 180 to state 0
Copied 34928 (count=1)
Deleting state 180 0x0x24ee6110
213 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 179
>> fuzzInit: datum forking for value 180
>> fuzzInit: datum forking for value 180
213 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 180)
        (ReadLSB w32 0 v180_fuzz_symb_180)))
    state 181 with condition (Not (Eq false
         (Eq (w32 180)
             (ReadLSB w32 0 v180_fuzz_symb_180))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-180-8048a0e
Size=2 Low=0 splitIndex=1 high=1
213 [State 0] Switching from state 0 to state 181
Copied 34928 (count=1)
Finalizing TB execution 181
s2e_dummyMainFunction
tcg-llvm-tb-180-8048a0e
214 [State 181] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 180 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ec4: 72 6f                              jb 0x71                  nextPC: 0xbfb76ec6 jmpPc: 0xbfb76f35
  2  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  3  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  4  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  5  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  6  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  7  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  8  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  9  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 10  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 11  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
Firing timer event
214 [State 181] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
214 [State 181] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
214 [State 181] Terminating state 181 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
214 [State 181] Switching from state 181 to state 0
Copied 34928 (count=1)
Deleting state 181 0x0x24ee6110
214 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 180
>> fuzzInit: datum forking for value 181
>> fuzzInit: datum forking for value 181
214 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 181)
        (ReadLSB w32 0 v181_fuzz_symb_181)))
    state 182 with condition (Not (Eq false
         (Eq (w32 181)
             (ReadLSB w32 0 v181_fuzz_symb_181))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-181-8048a0e
Size=2 Low=0 splitIndex=1 high=1
214 [State 0] Switching from state 0 to state 182
Copied 34928 (count=1)
Finalizing TB execution 182
s2e_dummyMainFunction
tcg-llvm-tb-181-8048a0e
214 [State 182] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 181 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ec5: 6f                                 outsd                    nextPC: 0xbfb76ec6
  2  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  3  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  4  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  5  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  6  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  7  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  8  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  9  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
 10  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 11  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
215 [State 182] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
215 [State 182] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
215 [State 182] Terminating state 182 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
215 [State 182] Switching from state 182 to state 0
Copied 34928 (count=1)
Deleting state 182 0x0x24ee6110
215 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 181
>> fuzzInit: datum forking for value 182
>> fuzzInit: datum forking for value 182
215 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 182)
        (ReadLSB w32 0 v182_fuzz_symb_182)))
    state 183 with condition (Not (Eq false
         (Eq (w32 182)
             (ReadLSB w32 0 v182_fuzz_symb_182))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-182-8048a0e
Size=2 Low=0 splitIndex=1 high=1
215 [State 0] Switching from state 0 to state 183
Copied 34928 (count=1)
Finalizing TB execution 183
s2e_dummyMainFunction
tcg-llvm-tb-182-8048a0e
Firing timer event
215 [State 183] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 182 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ec6: 6d                                 insd                     nextPC: 0xbfb76ec7
  2  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  3  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  4  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  5  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  6  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  7  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  8  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  9  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
 10  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
215 [State 183] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
215 [State 183] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
215 [State 183] Terminating state 183 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
215 [State 183] Switching from state 183 to state 0
Copied 34928 (count=1)
Deleting state 183 0x0x24ee6110
215 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 182
>> fuzzInit: datum forking for value 183
>> fuzzInit: datum forking for value 183
216 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 183)
        (ReadLSB w32 0 v183_fuzz_symb_183)))
    state 184 with condition (Not (Eq false
         (Eq (w32 183)
             (ReadLSB w32 0 v183_fuzz_symb_183))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-183-8048a0e
Size=2 Low=0 splitIndex=1 high=1
216 [State 0] Switching from state 0 to state 184
Copied 34928 (count=1)
Finalizing TB execution 184
s2e_dummyMainFunction
tcg-llvm-tb-183-8048a0e
216 [State 184] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 183 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76ec7: 20 31                              and [ecx], dh            nextPC: 0xbfb76ec9
  2  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  3  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  4  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  5  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  6  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  7  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  8  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  9  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
216 [State 184] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
216 [State 184] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
216 [State 184] Terminating state 184 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
216 [State 184] Switching from state 184 to state 0
Copied 34928 (count=1)
Deleting state 184 0x0x24ee6110
216 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 183
>> fuzzInit: datum forking for value 184
>> fuzzInit: datum forking for value 184
216 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 184)
        (ReadLSB w32 0 v184_fuzz_symb_184)))
    state 185 with condition (Not (Eq false
         (Eq (w32 184)
             (ReadLSB w32 0 v184_fuzz_symb_184))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-184-8048a0e
Size=2 Low=0 splitIndex=1 high=1
216 [State 0] Switching from state 0 to state 185
Copied 34928 (count=1)
Finalizing TB execution 185
s2e_dummyMainFunction
tcg-llvm-tb-184-8048a0e
217 [State 185] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 184 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ec8: 31 37                              xor [edi], esi           nextPC: 0xbfb76eca
  2  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  3  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  4  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  5  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  6  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  7  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  8  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
217 [State 185] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
217 [State 185] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
217 [State 185] Terminating state 185 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
217 [State 185] Switching from state 185 to state 0
Copied 34928 (count=1)
Deleting state 185 0x0x24ee6110
Firing timer event
217 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 184
>> fuzzInit: datum forking for value 185
>> fuzzInit: datum forking for value 185
217 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 185)
        (ReadLSB w32 0 v185_fuzz_symb_185)))
    state 186 with condition (Not (Eq false
         (Eq (w32 185)
             (ReadLSB w32 0 v185_fuzz_symb_185))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-185-8048a0e
Size=2 Low=0 splitIndex=1 high=1
217 [State 0] Switching from state 0 to state 186
Copied 34928 (count=1)
Finalizing TB execution 186
s2e_dummyMainFunction
tcg-llvm-tb-185-8048a0e
218 [State 186] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 185 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ec9: 37                                 aaa                      nextPC: 0xbfb76eca
  2  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  3  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  4  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  5  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  6  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  7  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  8  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
218 [State 186] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
218 [State 186] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
218 [State 186] Terminating state 186 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
218 [State 186] Switching from state 186 to state 0
Copied 34928 (count=1)
Deleting state 186 0x0x24ee6110
Firing timer event
218 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 185
>> fuzzInit: datum forking for value 186
>> fuzzInit: datum forking for value 186
218 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 186)
        (ReadLSB w32 0 v186_fuzz_symb_186)))
    state 187 with condition (Not (Eq false
         (Eq (w32 186)
             (ReadLSB w32 0 v186_fuzz_symb_186))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-186-8048a0e
Size=2 Low=0 splitIndex=1 high=1
218 [State 0] Switching from state 0 to state 187
Copied 34928 (count=1)
Finalizing TB execution 187
s2e_dummyMainFunction
tcg-llvm-tb-186-8048a0e
218 [State 187] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 186 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76eca: 32 2e                              xor ch, [esi]            nextPC: 0xbfb76ecc
  2  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  3  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  4  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  5  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  6  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  7  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
218 [State 187] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
218 [State 187] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
218 [State 187] Terminating state 187 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
218 [State 187] Switching from state 187 to state 0
Copied 34928 (count=1)
Deleting state 187 0x0x24ee6110
219 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 186
>> fuzzInit: datum forking for value 187
>> fuzzInit: datum forking for value 187
219 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 187)
        (ReadLSB w32 0 v187_fuzz_symb_187)))
    state 188 with condition (Not (Eq false
         (Eq (w32 187)
             (ReadLSB w32 0 v187_fuzz_symb_187))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-187-8048a0e
Size=2 Low=0 splitIndex=1 high=1
219 [State 0] Switching from state 0 to state 188
Copied 34928 (count=1)
Finalizing TB execution 188
s2e_dummyMainFunction
tcg-llvm-tb-187-8048a0e
219 [State 188] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 187 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  3B @0xbfb76ecb: 2e 31 36                           xor [cs:esi], esi        nextPC: 0xbfb76ece
  2  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  3  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  4  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  5  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  6  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
219 [State 188] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
219 [State 188] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
219 [State 188] Terminating state 188 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
219 [State 188] Switching from state 188 to state 0
Copied 34928 (count=1)
Deleting state 188 0x0x24ee6110
219 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 187
>> fuzzInit: datum forking for value 188
>> fuzzInit: datum forking for value 188
220 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 188)
        (ReadLSB w32 0 v188_fuzz_symb_188)))
    state 189 with condition (Not (Eq false
         (Eq (w32 188)
             (ReadLSB w32 0 v188_fuzz_symb_188))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-188-8048a0e
Size=2 Low=0 splitIndex=1 high=1
220 [State 0] Switching from state 0 to state 189
Copied 34928 (count=1)
Finalizing TB execution 189
s2e_dummyMainFunction
tcg-llvm-tb-188-8048a0e
220 [State 189] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 188 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ecc: 31 36                              xor [esi], esi           nextPC: 0xbfb76ece
  2  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  3  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  4  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  5  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  6  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
220 [State 189] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
220 [State 189] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
220 [State 189] Terminating state 189 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
220 [State 189] Switching from state 189 to state 0
Copied 34928 (count=1)
Deleting state 189 0x0x24ee6110
Firing timer event
220 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 188
>> fuzzInit: datum forking for value 189
>> fuzzInit: datum forking for value 189
220 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 189)
        (ReadLSB w32 0 v189_fuzz_symb_189)))
    state 190 with condition (Not (Eq false
         (Eq (w32 189)
             (ReadLSB w32 0 v189_fuzz_symb_189))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-189-8048a0e
Size=2 Low=0 splitIndex=1 high=1
220 [State 0] Switching from state 0 to state 190
Copied 34928 (count=1)
Finalizing TB execution 190
s2e_dummyMainFunction
tcg-llvm-tb-189-8048a0e
220 [State 190] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 189 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  4B @0xbfb76ecd: 36 2e 31 39                        xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  2  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  3  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  4  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  5  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  6  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  7  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  8  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  9  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
 10  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
 11  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
 12  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 13  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 14  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 15  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 16  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 17  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 18  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 19  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 20  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 21  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 22  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 23  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
221 [State 190] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
221 [State 190] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
221 [State 190] Terminating state 190 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
221 [State 190] Switching from state 190 to state 0
Copied 34928 (count=1)
Deleting state 190 0x0x2501bd00
221 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 189
>> fuzzInit: datum forking for value 190
>> fuzzInit: datum forking for value 190
221 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 190)
        (ReadLSB w32 0 v190_fuzz_symb_190)))
    state 191 with condition (Not (Eq false
         (Eq (w32 190)
             (ReadLSB w32 0 v190_fuzz_symb_190))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-190-8048a0e
Size=2 Low=0 splitIndex=1 high=1
221 [State 0] Switching from state 0 to state 191
Copied 34928 (count=1)
Finalizing TB execution 191
s2e_dummyMainFunction
tcg-llvm-tb-190-8048a0e
Firing timer event
221 [State 191] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 190 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ece: 2e 31 39                           xor [cs:ecx], edi        nextPC: 0xbfb76ed1
  2  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  3  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  4  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  5  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  6  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  7  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  8  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  9  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
 10  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
 11  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
 12  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 13  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 14  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 15  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 16  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 17  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 18  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 19  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 20  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 21  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 22  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 23  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
222 [State 191] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
222 [State 191] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
222 [State 191] Terminating state 191 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
222 [State 191] Switching from state 191 to state 0
Copied 34928 (count=1)
Deleting state 191 0x0x2501bd00
222 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 190
>> fuzzInit: datum forking for value 191
>> fuzzInit: datum forking for value 191
222 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 191)
        (ReadLSB w32 0 v191_fuzz_symb_191)))
    state 192 with condition (Not (Eq false
         (Eq (w32 191)
             (ReadLSB w32 0 v191_fuzz_symb_191))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-191-8048a0e
Size=2 Low=0 splitIndex=1 high=1
222 [State 0] Switching from state 0 to state 192
Copied 34928 (count=1)
Finalizing TB execution 192
s2e_dummyMainFunction
tcg-llvm-tb-191-8048a0e
222 [State 192] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 191 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76ecf: 31 39                              xor [ecx], edi           nextPC: 0xbfb76ed1
  2  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  3  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  4  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  5  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  6  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  7  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  8  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  9  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
 10  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
 11  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
 12  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 13  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 14  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 15  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 16  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 17  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 18  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 19  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 20  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 21  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 22  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 23  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
222 [State 192] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
222 [State 192] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
222 [State 192] Terminating state 192 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
222 [State 192] Switching from state 192 to state 0
Copied 34928 (count=1)
Deleting state 192 0x0x2501bd00
223 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 191
>> fuzzInit: datum forking for value 192
>> fuzzInit: datum forking for value 192
223 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 192)
        (ReadLSB w32 0 v192_fuzz_symb_192)))
    state 193 with condition (Not (Eq false
         (Eq (w32 192)
             (ReadLSB w32 0 v192_fuzz_symb_192))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-192-8048a0e
Size=2 Low=0 splitIndex=1 high=1
223 [State 0] Switching from state 0 to state 193
Copied 34928 (count=1)
Finalizing TB execution 193
s2e_dummyMainFunction
tcg-llvm-tb-192-8048a0e
223 [State 193] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 192 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76ed0: 39 37                              cmp [edi], esi           nextPC: 0xbfb76ed2
  2  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  3  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  4  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
223 [State 193] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
223 [State 193] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
223 [State 193] Terminating state 193 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
223 [State 193] Switching from state 193 to state 0
Copied 34928 (count=1)
Deleting state 193 0x0x252d0eb0
224 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 192
>> fuzzInit: datum forking for value 193
>> fuzzInit: datum forking for value 193
224 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 193)
        (ReadLSB w32 0 v193_fuzz_symb_193)))
    state 194 with condition (Not (Eq false
         (Eq (w32 193)
             (ReadLSB w32 0 v193_fuzz_symb_193))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-193-8048a0e
Size=2 Low=0 splitIndex=1 high=1
224 [State 0] Switching from state 0 to state 194
Copied 34928 (count=1)
Finalizing TB execution 194
s2e_dummyMainFunction
tcg-llvm-tb-193-8048a0e
224 [State 194] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 193 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ed1: 37                                 aaa                      nextPC: 0xbfb76ed2
  2  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  3  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  4  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  5  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  6  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  7  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  8  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  9  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
 10  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
 11  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 12  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 13  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 14  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 15  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 16  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 17  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 18  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 19  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 20  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 21  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 22  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
224 [State 194] @0x080499bf, left buffer range after 22 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
224 [State 194] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
224 [State 194] Terminating state 194 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
224 [State 194] Switching from state 194 to state 0
Copied 34928 (count=1)
Deleting state 194 0x0x252d0eb0
224 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 193
>> fuzzInit: datum forking for value 194
>> fuzzInit: datum forking for value 194
225 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 194)
        (ReadLSB w32 0 v194_fuzz_symb_194)))
    state 195 with condition (Not (Eq false
         (Eq (w32 194)
             (ReadLSB w32 0 v194_fuzz_symb_194))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-194-8048a0e
Size=2 Low=0 splitIndex=1 high=1
225 [State 0] Switching from state 0 to state 195
Copied 34928 (count=1)
Finalizing TB execution 195
s2e_dummyMainFunction
tcg-llvm-tb-194-8048a0e
225 [State 195] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 194 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ed2: 2e 31 33                           xor [cs:ebx], esi        nextPC: 0xbfb76ed5
  2  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  3  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  4  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  5  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  6  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  7  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  8  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  9  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
 10  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 11  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 12  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 13  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 14  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 15  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 16  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 17  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 18  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 19  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 20  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 21  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
225 [State 195] @0x080499bf, left buffer range after 21 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
225 [State 195] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
225 [State 195] Terminating state 195 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
225 [State 195] Switching from state 195 to state 0
Copied 34928 (count=1)
Deleting state 195 0x0x252d0eb0
225 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 194
>> fuzzInit: datum forking for value 195
>> fuzzInit: datum forking for value 195
225 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 195)
        (ReadLSB w32 0 v195_fuzz_symb_195)))
    state 196 with condition (Not (Eq false
         (Eq (w32 195)
             (ReadLSB w32 0 v195_fuzz_symb_195))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-195-8048a0e
Size=2 Low=0 splitIndex=1 high=1
225 [State 0] Switching from state 0 to state 196
Copied 34928 (count=1)
Finalizing TB execution 196
s2e_dummyMainFunction
tcg-llvm-tb-195-8048a0e
Firing timer event
225 [State 196] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 195 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ed3: 31 33                              xor [ebx], esi           nextPC: 0xbfb76ed5
  2  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  3  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  4  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  5  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  6  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  7  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  8  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  9  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
 10  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 11  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 12  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 13  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 14  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 15  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 16  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 17  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 18  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 19  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 20  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 21  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
226 [State 196] @0x080499bf, left buffer range after 21 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
226 [State 196] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
226 [State 196] Terminating state 196 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
226 [State 196] Switching from state 196 to state 0
Copied 34928 (count=1)
Deleting state 196 0x0x252d0eb0
226 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 195
>> fuzzInit: datum forking for value 196
>> fuzzInit: datum forking for value 196
226 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 196)
        (ReadLSB w32 0 v196_fuzz_symb_196)))
    state 197 with condition (Not (Eq false
         (Eq (w32 196)
             (ReadLSB w32 0 v196_fuzz_symb_196))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-196-8048a0e
Size=2 Low=0 splitIndex=1 high=1
226 [State 0] Switching from state 0 to state 197
Copied 34928 (count=1)
Finalizing TB execution 197
s2e_dummyMainFunction
tcg-llvm-tb-196-8048a0e
226 [State 197] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 196 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  6B @0xbfb76ed4: 33 35 2c 20 72 65                  xor esi, [0x6572202c]    nextPC: 0xbfb76eda
  2  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
226 [State 197] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76eda, disasm in debug.
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
226 [State 197] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
226 [State 197] Terminating state 197 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
226 [State 197] Switching from state 197 to state 0
Copied 34928 (count=1)
Deleting state 197 0x0x252d0eb0
227 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 196
>> fuzzInit: datum forking for value 197
>> fuzzInit: datum forking for value 197
227 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 197)
        (ReadLSB w32 0 v197_fuzz_symb_197)))
    state 198 with condition (Not (Eq false
         (Eq (w32 197)
             (ReadLSB w32 0 v197_fuzz_symb_197))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-197-8048a0e
Size=2 Low=0 splitIndex=1 high=1
227 [State 0] Switching from state 0 to state 198
Copied 34928 (count=1)
Finalizing TB execution 198
s2e_dummyMainFunction
tcg-llvm-tb-197-8048a0e
227 [State 198] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 197 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76ed5: 35 2c 20 72 65                     xor eax, 0x6572202c      nextPC: 0xbfb76eda
  2  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  3  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  4  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  5  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  6  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  7  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  8  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  9  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 10  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 11  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 12  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 13  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 14  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 15  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 16  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 17  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 18  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 19  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 20  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
227 [State 198] @0x080499bf, left buffer range after 20 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
227 [State 198] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
227 [State 198] Terminating state 198 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
227 [State 198] Switching from state 198 to state 0
Copied 34928 (count=1)
Deleting state 198 0x0x252d0eb0
Firing timer event
227 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 197
>> fuzzInit: datum forking for value 198
>> fuzzInit: datum forking for value 198
228 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 198)
        (ReadLSB w32 0 v198_fuzz_symb_198)))
    state 199 with condition (Not (Eq false
         (Eq (w32 198)
             (ReadLSB w32 0 v198_fuzz_symb_198))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-198-8048a0e
Size=2 Low=0 splitIndex=1 high=1
228 [State 0] Switching from state 0 to state 199
Copied 34928 (count=1)
Finalizing TB execution 199
s2e_dummyMainFunction
tcg-llvm-tb-198-8048a0e
228 [State 199] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 198 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ed6: 2c 20                              sub al, 0x20             nextPC: 0xbfb76ed8
  2  2B @0xbfb76ed8: 72 65                              jb 0x67                  nextPC: 0xbfb76eda jmpPc: 0xbfb76f3f
  3  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  4  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  5  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  6  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  7  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  8  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  9  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
 10  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 11  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 12  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 13  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 14  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 15  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 16  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 17  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 18  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 19  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 20  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 21  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
228 [State 199] @0x080499bf, left buffer range after 21 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
228 [State 199] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
228 [State 199] Terminating state 199 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
228 [State 199] Switching from state 199 to state 0
Copied 34928 (count=1)
Deleting state 199 0x0x2525ecc0
228 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 198
>> fuzzInit: datum forking for value 199
>> fuzzInit: datum forking for value 199
228 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 199)
        (ReadLSB w32 0 v199_fuzz_symb_199)))
    state 200 with condition (Not (Eq false
         (Eq (w32 199)
             (ReadLSB w32 0 v199_fuzz_symb_199))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-199-8048a0e
Size=2 Low=0 splitIndex=1 high=1
228 [State 0] Switching from state 0 to state 200
Copied 34928 (count=1)
Finalizing TB execution 200
s2e_dummyMainFunction
tcg-llvm-tb-199-8048a0e
Firing timer event
229 [State 200] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 199 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ed7: 20 72 65                           and [edx+0x65], dh       nextPC: 0xbfb76eda
  2  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  3  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  4  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  5  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  6  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  7  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  8  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  9  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 10  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 11  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 12  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 13  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 14  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 15  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 16  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 17  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 18  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 19  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 20  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
229 [State 200] @0x080499bf, left buffer range after 20 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
229 [State 200] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
229 [State 200] Terminating state 200 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
229 [State 200] Switching from state 200 to state 0
Copied 34928 (count=1)
Deleting state 200 0x0x2525ecc0
229 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 199
>> fuzzInit: datum forking for value 200
>> fuzzInit: datum forking for value 200
229 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 200)
        (ReadLSB w32 0 v200_fuzz_symb_200)))
    state 201 with condition (Not (Eq false
         (Eq (w32 200)
             (ReadLSB w32 0 v200_fuzz_symb_200))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-200-8048a0e
Size=2 Low=0 splitIndex=1 high=1
229 [State 0] Switching from state 0 to state 201
Copied 34928 (count=1)
Finalizing TB execution 201
s2e_dummyMainFunction
tcg-llvm-tb-200-8048a0e
229 [State 201] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 200 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ed8: 72 65                              jb 0x67                  nextPC: 0xbfb76eda jmpPc: 0xbfb76f3f
  2  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  3  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  4  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  5  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  6  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  7  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  8  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  9  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
 10  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 11  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 12  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 13  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 14  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 15  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 16  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 17  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 18  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 19  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 20  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
229 [State 201] @0x080499bf, left buffer range after 20 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
229 [State 201] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
229 [State 201] Terminating state 201 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
229 [State 201] Switching from state 201 to state 0
Copied 34928 (count=1)
Deleting state 201 0x0x254ea350
230 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 200
>> fuzzInit: datum forking for value 201
>> fuzzInit: datum forking for value 201
230 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 201)
        (ReadLSB w32 0 v201_fuzz_symb_201)))
    state 202 with condition (Not (Eq false
         (Eq (w32 201)
             (ReadLSB w32 0 v201_fuzz_symb_201))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-201-8048a0e
Size=2 Low=0 splitIndex=1 high=1
230 [State 0] Switching from state 0 to state 202
Copied 34928 (count=1)
Finalizing TB execution 202
s2e_dummyMainFunction
tcg-llvm-tb-201-8048a0e
230 [State 202] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 201 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ed9: 65 71 75                           jno 0x78                 nextPC: 0xbfb76edc jmpPc: 0xffffffff
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  2  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  3  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  4  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  5  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  6  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  7  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  8  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  9  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 10  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 11  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 12  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 13  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 14  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 15  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 16  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 17  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 18  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 19  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
230 [State 202] @0x080499bf, left buffer range after 19 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
230 [State 202] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
230 [State 202] Terminating state 202 with message 'eliminated a state that is at unexpected location'
230 [State 202] Switching from state 202 to state 0
Copied 34928 (count=1)
Deleting state 202 0x0x254ea350
Firing timer event
230 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 201
>> fuzzInit: datum forking for value 202
>> fuzzInit: datum forking for value 202
231 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 202)
        (ReadLSB w32 0 v202_fuzz_symb_202)))
    state 203 with condition (Not (Eq false
         (Eq (w32 202)
             (ReadLSB w32 0 v202_fuzz_symb_202))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-202-8048a0e
Size=2 Low=0 splitIndex=1 high=1
231 [State 0] Switching from state 0 to state 203
Copied 34928 (count=1)
Finalizing TB execution 203
s2e_dummyMainFunction
tcg-llvm-tb-202-8048a0e
231 [State 203] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 202 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76eda: 71 75                              jno 0x77                 nextPC: 0xbfb76edc jmpPc: 0xbfb76f51
!!* pc != prev insn's next_pc; 0xbfb76f51 != bfb76edc
  2  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  3  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  4  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  5  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  6  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  7  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  8  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  9  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 10  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 11  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 12  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 13  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 14  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 15  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 16  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 17  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 18  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 19  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
231 [State 203] @0x080499bf, left buffer range after 19 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
231 [State 203] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
231 [State 203] Terminating state 203 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
231 [State 203] Switching from state 203 to state 0
Copied 34928 (count=1)
Deleting state 203 0x0x254ea350
231 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 202
>> fuzzInit: datum forking for value 203
>> fuzzInit: datum forking for value 203
232 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 203)
        (ReadLSB w32 0 v203_fuzz_symb_203)))
    state 204 with condition (Not (Eq false
         (Eq (w32 203)
             (ReadLSB w32 0 v203_fuzz_symb_203))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-203-8048a0e
Size=2 Low=0 splitIndex=1 high=1
232 [State 0] Switching from state 0 to state 204
Copied 34928 (count=1)
Finalizing TB execution 204
s2e_dummyMainFunction
tcg-llvm-tb-203-8048a0e
Firing timer event
232 [State 204] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 203 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76edb: 75 65                              jnz 0x67                 nextPC: 0xbfb76edd jmpPc: 0xbfb76f42
!!* pc != prev insn's next_pc; 0xbfb76f42 != bfb76edd
  2  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
!!* pc != prev insn's next_pc; 0xbfb76f38 != bfb76f44
  3  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  4  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  5  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
232 [State 204] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
232 [State 204] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
232 [State 204] Terminating state 204 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
232 [State 204] Switching from state 204 to state 0
Copied 34928 (count=1)
Deleting state 204 0x0x254ea350
232 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 203
>> fuzzInit: datum forking for value 204
>> fuzzInit: datum forking for value 204
232 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 204)
        (ReadLSB w32 0 v204_fuzz_symb_204)))
    state 205 with condition (Not (Eq false
         (Eq (w32 204)
             (ReadLSB w32 0 v204_fuzz_symb_204))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-204-8048a0e
Size=2 Low=0 splitIndex=1 high=1
232 [State 0] Switching from state 0 to state 205
Copied 34928 (count=1)
Finalizing TB execution 205
s2e_dummyMainFunction
tcg-llvm-tb-204-8048a0e
232 [State 205] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 204 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76edc: 65 73 74                           jae 0x77                 nextPC: 0xbfb76edf jmpPc: 0xffffffff
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76edf
  2  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  3  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  4  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  5  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  6  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  7  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  8  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  9  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 10  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 11  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 12  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 13  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 14  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 15  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 16  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 17  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
233 [State 205] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
233 [State 205] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
233 [State 205] Terminating state 205 with message 'eliminated a state that is at unexpected location'
233 [State 205] Switching from state 205 to state 0
Copied 34928 (count=1)
Deleting state 205 0x0x254ea350
233 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 204
>> fuzzInit: datum forking for value 205
>> fuzzInit: datum forking for value 205
233 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 205)
        (ReadLSB w32 0 v205_fuzz_symb_205)))
    state 206 with condition (Not (Eq false
         (Eq (w32 205)
             (ReadLSB w32 0 v205_fuzz_symb_205))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-205-8048a0e
Size=2 Low=0 splitIndex=1 high=1
233 [State 0] Switching from state 0 to state 206
Copied 34928 (count=1)
Finalizing TB execution 206
s2e_dummyMainFunction
tcg-llvm-tb-205-8048a0e
233 [State 206] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 205 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76edd: 73 74                              jae 0x76                 nextPC: 0xbfb76edf jmpPc: 0xbfb76f53
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76edf
  2  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  3  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  4  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  5  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  6  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  7  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  8  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  9  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 10  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 11  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 12  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 13  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 14  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 15  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 16  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 17  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
233 [State 206] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
233 [State 206] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
233 [State 206] Terminating state 206 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
233 [State 206] Switching from state 206 to state 0
Copied 34928 (count=1)
Deleting state 206 0x0x2576e990
Firing timer event
234 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 205
>> fuzzInit: datum forking for value 206
>> fuzzInit: datum forking for value 206
234 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 206)
        (ReadLSB w32 0 v206_fuzz_symb_206)))
    state 207 with condition (Not (Eq false
         (Eq (w32 206)
             (ReadLSB w32 0 v206_fuzz_symb_206))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-206-8048a0e
Size=2 Low=0 splitIndex=1 high=1
234 [State 0] Switching from state 0 to state 207
Copied 34928 (count=1)
Finalizing TB execution 207
s2e_dummyMainFunction
tcg-llvm-tb-206-8048a0e
234 [State 207] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 206 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ede: 74 20                              jz 0x22                  nextPC: 0xbfb76ee0 jmpPc: 0xbfb76f00
  2  5B @0xbfb76ee0: 3d 20 22 47 45                     cmp eax, 0x45472220      nextPC: 0xbfb76ee5
  3  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  4  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  5  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  6  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  7  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  8  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  9  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
 10  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
 11  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 12  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 13  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 14  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 15  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 16  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 17  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 18  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 19  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 20  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 21  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 22  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 23  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 24  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 25  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 26  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 27  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 28  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 29  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 30  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 31  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 32  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 33  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 34  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 35  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 36  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 37  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 38  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 39  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 40  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 41  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 42  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 43  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 44  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 45  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 46  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 47  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 48  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 49  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 50  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 51  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 52  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 53  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 54  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 55  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 56  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 57  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 58  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 59  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 60  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 61  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 62  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 63  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 64  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 65  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 66  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 67  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
234 [State 207] @0x080499bf, left buffer range after 67 IoB insns; last IoB insn @0xbfb76f26, disasm in debug.
  1  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
234 [State 207] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
234 [State 207] Terminating state 207 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
234 [State 207] Switching from state 207 to state 0
Copied 34928 (count=1)
Deleting state 207 0x0x257991a0
234 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 206
>> fuzzInit: datum forking for value 207
>> fuzzInit: datum forking for value 207
235 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 207)
        (ReadLSB w32 0 v207_fuzz_symb_207)))
    state 208 with condition (Not (Eq false
         (Eq (w32 207)
             (ReadLSB w32 0 v207_fuzz_symb_207))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-207-8048a0e
Size=2 Low=0 splitIndex=1 high=1
235 [State 0] Switching from state 0 to state 208
Copied 34928 (count=1)
Finalizing TB execution 208
s2e_dummyMainFunction
tcg-llvm-tb-207-8048a0e
Firing timer event
235 [State 208] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 207 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76edf: 20 3d 20 22 47 45                  and [0x45472220], bh     nextPC: 0xbfb76ee5
  2  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  3  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  4  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  5  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  6  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  7  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  8  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  9  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
 10  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 11  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 12  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 13  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 14  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 15  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 16  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 17  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 18  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 19  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 20  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 21  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 22  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 23  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 24  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 25  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 26  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 27  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 28  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 29  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 30  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 31  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 32  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 33  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 34  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 35  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 36  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 37  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 38  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 39  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 40  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 41  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 42  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 43  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 44  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 45  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 46  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 47  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 48  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 49  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 50  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 51  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 52  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 53  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 54  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 55  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 56  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 57  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 58  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 59  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 60  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 61  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 62  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 63  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 64  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 65  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
235 [State 208] @0x080499bf, left buffer range after 65 IoB insns; last IoB insn @0xbfb76f25, disasm in debug.
  1  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
235 [State 208] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
235 [State 208] Terminating state 208 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
235 [State 208] Switching from state 208 to state 0
Copied 34928 (count=1)
Deleting state 208 0x0x25821880
235 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 207
>> fuzzInit: datum forking for value 208
>> fuzzInit: datum forking for value 208
235 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 208)
        (ReadLSB w32 0 v208_fuzz_symb_208)))
    state 209 with condition (Not (Eq false
         (Eq (w32 208)
             (ReadLSB w32 0 v208_fuzz_symb_208))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-208-8048a0e
Size=2 Low=0 splitIndex=1 high=1
235 [State 0] Switching from state 0 to state 209
Copied 34928 (count=1)
Finalizing TB execution 209
s2e_dummyMainFunction
tcg-llvm-tb-208-8048a0e
235 [State 209] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 208 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76ee0: 3d 20 22 47 45                     cmp eax, 0x45472220      nextPC: 0xbfb76ee5
  2  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  3  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  4  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  5  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  6  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  7  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  8  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  9  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
 10  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 11  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 12  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 13  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 14  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 15  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 16  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 17  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 18  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 19  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 20  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 21  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 22  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 23  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 24  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 25  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 26  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 27  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 28  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 29  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 30  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 31  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 32  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 33  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 34  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 35  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 36  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 37  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 38  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 39  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 40  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 41  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 42  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 43  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 44  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 45  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 46  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 47  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 48  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 49  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 50  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 51  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 52  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 53  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 54  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 55  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 56  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 57  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 58  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 59  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 60  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 61  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 62  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 63  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 64  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 65  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 66  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
Firing timer event
236 [State 209] @0x080499bf, left buffer range after 66 IoB insns; last IoB insn @0xbfb76f26, disasm in debug.
  1  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
236 [State 209] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
236 [State 209] Terminating state 209 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
236 [State 209] Switching from state 209 to state 0
Copied 34928 (count=1)
Deleting state 209 0x0x257d8850
236 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 208
>> fuzzInit: datum forking for value 209
>> fuzzInit: datum forking for value 209
236 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 209)
        (ReadLSB w32 0 v209_fuzz_symb_209)))
    state 210 with condition (Not (Eq false
         (Eq (w32 209)
             (ReadLSB w32 0 v209_fuzz_symb_209))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-209-8048a0e
Size=2 Low=0 splitIndex=1 high=1
236 [State 0] Switching from state 0 to state 210
Copied 34928 (count=1)
Finalizing TB execution 210
s2e_dummyMainFunction
tcg-llvm-tb-209-8048a0e
236 [State 210] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 209 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ee1: 20 22                              and [edx], ah            nextPC: 0xbfb76ee3
  2  1B @0xbfb76ee3: 47                                 inc edi                  nextPC: 0xbfb76ee4
  3  1B @0xbfb76ee4: 45                                 inc ebp                  nextPC: 0xbfb76ee5
  4  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  5  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  6  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  7  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  8  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  9  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
 10  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
 11  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
 12  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 13  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 14  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 15  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 16  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 17  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 18  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 19  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 20  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 21  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 22  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 23  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 24  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 25  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 26  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 27  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 28  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 29  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 30  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 31  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 32  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 33  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 34  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 35  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 36  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 37  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 38  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 39  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 40  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 41  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 42  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 43  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 44  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 45  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 46  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 47  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 48  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 49  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 50  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 51  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 52  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 53  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 54  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 55  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 56  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 57  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 58  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 59  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 60  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 61  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 62  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 63  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
236 [State 210] @0x080499bf, left buffer range after 63 IoB insns; last IoB insn @0xbfb76f21, disasm in debug.
  1  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
236 [State 210] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
236 [State 210] Terminating state 210 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
236 [State 210] Switching from state 210 to state 0
Copied 34928 (count=1)
Deleting state 210 0x0x256e36b0
237 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 209
>> fuzzInit: datum forking for value 210
>> fuzzInit: datum forking for value 210
237 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 210)
        (ReadLSB w32 0 v210_fuzz_symb_210)))
    state 211 with condition (Not (Eq false
         (Eq (w32 210)
             (ReadLSB w32 0 v210_fuzz_symb_210))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-210-8048a0e
Size=2 Low=0 splitIndex=1 high=1
237 [State 0] Switching from state 0 to state 211
Copied 34928 (count=1)
Finalizing TB execution 211
s2e_dummyMainFunction
tcg-llvm-tb-210-8048a0e
Firing timer event
237 [State 211] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 210 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76ee2: 22 47 45                           and al, [edi+0x45]       nextPC: 0xbfb76ee5
  2  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  3  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  4  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  5  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  6  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  7  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  8  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  9  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
 10  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 11  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 12  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 13  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 14  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 15  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 16  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 17  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 18  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 19  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 20  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 21  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 22  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 23  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 24  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 25  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 26  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 27  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 28  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 29  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 30  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 31  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 32  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 33  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 34  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 35  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 36  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 37  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 38  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 39  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 40  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 41  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 42  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 43  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 44  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 45  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 46  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 47  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 48  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 49  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 50  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 51  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 52  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 53  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 54  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 55  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 56  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 57  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 58  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 59  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 60  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 61  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 62  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 63  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 64  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 65  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
237 [State 211] @0x080499bf, left buffer range after 65 IoB insns; last IoB insn @0xbfb76f25, disasm in debug.
  1  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
237 [State 211] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
237 [State 211] Terminating state 211 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
237 [State 211] Switching from state 211 to state 0
Copied 34928 (count=1)
Deleting state 211 0x0x256e36b0
237 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 210
>> fuzzInit: datum forking for value 211
>> fuzzInit: datum forking for value 211
238 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 211)
        (ReadLSB w32 0 v211_fuzz_symb_211)))
    state 212 with condition (Not (Eq false
         (Eq (w32 211)
             (ReadLSB w32 0 v211_fuzz_symb_211))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-211-8048a0e
Size=2 Low=0 splitIndex=1 high=1
238 [State 0] Switching from state 0 to state 212
Copied 34928 (count=1)
Finalizing TB execution 212
s2e_dummyMainFunction
tcg-llvm-tb-211-8048a0e
238 [State 212] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 211 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76ee3: 47                                 inc edi                  nextPC: 0xbfb76ee4
  2  1B @0xbfb76ee4: 45                                 inc ebp                  nextPC: 0xbfb76ee5
  3  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  4  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  5  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  6  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  7  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  8  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  9  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
 10  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
 11  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 12  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 13  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 14  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 15  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 16  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 17  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 18  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 19  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 20  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 21  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 22  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 23  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 24  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 25  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 26  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 27  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 28  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 29  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 30  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 31  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 32  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 33  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 34  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 35  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 36  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 37  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 38  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 39  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 40  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 41  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 42  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 43  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 44  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 45  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 46  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 47  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 48  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 49  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 50  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 51  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 52  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 53  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 54  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 55  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 56  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 57  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 58  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 59  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 60  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 61  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 62  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 63  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 64  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
238 [State 212] @0x080499bf, left buffer range after 64 IoB insns; last IoB insn @0xbfb76f23, disasm in debug.
  1  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
238 [State 212] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
238 [State 212] Terminating state 212 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
238 [State 212] Switching from state 212 to state 0
Copied 34928 (count=1)
Deleting state 212 0x0x256e36b0
238 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 211
>> fuzzInit: datum forking for value 212
>> fuzzInit: datum forking for value 212
238 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 212)
        (ReadLSB w32 0 v212_fuzz_symb_212)))
    state 213 with condition (Not (Eq false
         (Eq (w32 212)
             (ReadLSB w32 0 v212_fuzz_symb_212))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-212-8048a0e
Size=2 Low=0 splitIndex=1 high=1
238 [State 0] Switching from state 0 to state 213
Copied 34928 (count=1)
Finalizing TB execution 213
s2e_dummyMainFunction
tcg-llvm-tb-212-8048a0e
238 [State 213] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 212 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ee4: 45                                 inc ebp                  nextPC: 0xbfb76ee5
  2  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  3  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  4  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  5  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  6  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  7  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  8  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  9  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
 10  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 11  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 12  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 13  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 14  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 15  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 16  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 17  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 18  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 19  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 20  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 21  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 22  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 23  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 24  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 25  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 26  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 27  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 28  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 29  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 30  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 31  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 32  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 33  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 34  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 35  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 36  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 37  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 38  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 39  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 40  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 41  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 42  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 43  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 44  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 45  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 46  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 47  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 48  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 49  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 50  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 51  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 52  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 53  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 54  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 55  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 56  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 57  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 58  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 59  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 60  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 61  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 62  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 63  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 64  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 65  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
239 [State 213] @0x080499bf, left buffer range after 65 IoB insns; last IoB insn @0xbfb76f25, disasm in debug.
  1  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
239 [State 213] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
239 [State 213] Terminating state 213 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
239 [State 213] Switching from state 213 to state 0
Copied 34928 (count=1)
Deleting state 213 0x0x256e36b0
Firing timer event
239 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 212
>> fuzzInit: datum forking for value 213
>> fuzzInit: datum forking for value 213
239 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 213)
        (ReadLSB w32 0 v213_fuzz_symb_213)))
    state 214 with condition (Not (Eq false
         (Eq (w32 213)
             (ReadLSB w32 0 v213_fuzz_symb_213))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-213-8048a0e
Size=2 Low=0 splitIndex=1 high=1
239 [State 0] Switching from state 0 to state 214
Copied 34928 (count=1)
Finalizing TB execution 214
s2e_dummyMainFunction
tcg-llvm-tb-213-8048a0e
239 [State 214] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 213 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ee5: 54                                 push esp                 nextPC: 0xbfb76ee6
  2  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  3  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  4  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  5  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  6  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  7  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  8  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  9  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
 10  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 11  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 12  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 13  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 14  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 15  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 16  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 17  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 18  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 19  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 20  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 21  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 22  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 23  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 24  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 25  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 26  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 27  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 28  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 29  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 30  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 31  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 32  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 33  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 34  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 35  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 36  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 37  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 38  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 39  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 40  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 41  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 42  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 43  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 44  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 45  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 46  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 47  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 48  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 49  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 50  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 51  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 52  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 53  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 54  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 55  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 56  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 57  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 58  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 59  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 60  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 61  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 62  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 63  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 64  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 65  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 66  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 67  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
239 [State 214] @0x080499bf, left buffer range after 67 IoB insns; last IoB insn @0xbfb76f28, disasm in debug.
  1  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
239 [State 214] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
239 [State 214] Terminating state 214 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
239 [State 214] Switching from state 214 to state 0
Copied 34928 (count=1)
Deleting state 214 0x0x256e36b0
240 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 213
>> fuzzInit: datum forking for value 214
>> fuzzInit: datum forking for value 214
240 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 214)
        (ReadLSB w32 0 v214_fuzz_symb_214)))
    state 215 with condition (Not (Eq false
         (Eq (w32 214)
             (ReadLSB w32 0 v214_fuzz_symb_214))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-214-8048a0e
Size=2 Low=0 splitIndex=1 high=1
240 [State 0] Switching from state 0 to state 215
Copied 34928 (count=1)
Finalizing TB execution 215
s2e_dummyMainFunction
tcg-llvm-tb-214-8048a0e
Firing timer event
240 [State 215] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 214 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76ee6: 20 2f                              and [edi], ch            nextPC: 0xbfb76ee8
  2  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  3  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  4  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  5  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  6  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  7  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  8  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  9  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 10  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 11  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 12  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 13  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 14  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 15  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 16  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 17  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 18  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 19  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 20  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 21  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 22  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 23  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 24  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 25  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 26  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 27  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 28  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 29  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 30  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 31  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 32  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 33  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 34  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 35  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 36  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 37  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 38  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 39  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 40  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 41  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 42  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 43  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 44  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 45  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 46  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 47  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 48  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 49  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 50  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 51  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 52  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 53  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 54  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 55  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 56  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 57  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 58  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 59  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 60  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 61  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 62  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 63  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 64  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 65  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 66  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 67  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
240 [State 215] @0x080499bf, left buffer range after 67 IoB insns; last IoB insn @0xbfb76f29, disasm in debug.
  1  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
240 [State 215] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
240 [State 215] Terminating state 215 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
240 [State 215] Switching from state 215 to state 0
Copied 34928 (count=1)
Deleting state 215 0x0x256e36b0
240 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 214
>> fuzzInit: datum forking for value 215
>> fuzzInit: datum forking for value 215
241 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 215)
        (ReadLSB w32 0 v215_fuzz_symb_215)))
    state 216 with condition (Not (Eq false
         (Eq (w32 215)
             (ReadLSB w32 0 v215_fuzz_symb_215))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-215-8048a0e
Size=2 Low=0 splitIndex=1 high=1
241 [State 0] Switching from state 0 to state 216
Copied 34928 (count=1)
Finalizing TB execution 216
s2e_dummyMainFunction
tcg-llvm-tb-215-8048a0e
241 [State 216] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 215 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ee7: 2f                                 das                      nextPC: 0xbfb76ee8
  2  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  3  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  4  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  5  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  6  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  7  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  8  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  9  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
 10  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 11  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 12  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 13  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 14  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 15  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 16  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 17  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 18  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 19  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 20  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 21  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 22  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 23  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 24  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 25  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 26  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 27  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 28  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 29  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 30  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 31  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 32  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 33  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 34  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 35  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 36  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 37  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 38  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 39  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 40  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 41  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 42  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 43  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 44  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 45  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 46  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 47  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 48  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 49  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 50  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 51  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 52  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 53  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 54  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 55  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 56  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 57  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 58  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 59  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 60  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 61  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 62  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 63  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 64  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 65  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 66  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 67  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 68  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 69  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 70  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 71  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 72  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
Firing timer event
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 73  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 74  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 75  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 76  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 77  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 78  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
241 [State 216] @0x080499bf, left buffer range after 78 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
241 [State 216] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
241 [State 216] Terminating state 216 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
241 [State 216] Switching from state 216 to state 0
Copied 34928 (count=1)
Deleting state 216 0x0x256e36b0
241 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 215
>> fuzzInit: datum forking for value 216
>> fuzzInit: datum forking for value 216
241 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 216)
        (ReadLSB w32 0 v216_fuzz_symb_216)))
    state 217 with condition (Not (Eq false
         (Eq (w32 216)
             (ReadLSB w32 0 v216_fuzz_symb_216))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-216-8048a0e
Size=2 Low=0 splitIndex=1 high=1
241 [State 0] Switching from state 0 to state 217
Copied 34928 (count=1)
Finalizing TB execution 217
s2e_dummyMainFunction
tcg-llvm-tb-216-8048a0e
241 [State 217] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 216 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ee8: 90                                 nop                      nextPC: 0xbfb76ee9
  2  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  3  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  4  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  5  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  6  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  7  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  8  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  9  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
 10  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 11  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 12  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 13  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 14  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 15  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 16  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 17  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 18  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 19  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 20  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 21  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 22  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 23  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 24  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 25  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 26  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 27  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 28  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 29  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 30  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 31  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 32  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 33  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 34  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 35  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 36  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 37  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 38  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 39  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 40  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 41  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 42  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 43  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 44  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 45  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 46  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 47  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 48  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 49  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 50  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 51  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 52  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 53  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 54  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 55  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 56  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 57  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 58  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 59  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 60  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 61  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 62  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 63  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 64  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 65  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 66  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 67  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 68  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 69  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 70  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 71  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 72  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 73  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 74  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 75  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 76  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 77  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
242 [State 217] @0x080499bf, left buffer range after 77 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
242 [State 217] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
242 [State 217] Terminating state 217 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
242 [State 217] Switching from state 217 to state 0
Copied 34928 (count=1)
Deleting state 217 0x0x256e36b0
Firing timer event
242 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 216
>> fuzzInit: datum forking for value 217
>> fuzzInit: datum forking for value 217
242 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 217)
        (ReadLSB w32 0 v217_fuzz_symb_217)))
    state 218 with condition (Not (Eq false
         (Eq (w32 217)
             (ReadLSB w32 0 v217_fuzz_symb_217))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-217-8048a0e
Size=2 Low=0 splitIndex=1 high=1
242 [State 0] Switching from state 0 to state 218
Copied 34928 (count=1)
Finalizing TB execution 218
s2e_dummyMainFunction
tcg-llvm-tb-217-8048a0e
242 [State 218] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 217 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ee9: 90                                 nop                      nextPC: 0xbfb76eea
  2  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  3  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  4  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  5  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  6  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  7  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  8  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  9  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
 10  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 11  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 12  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 13  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 14  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 15  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 16  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 17  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 18  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 19  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 20  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 21  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 22  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 23  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 24  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 25  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 26  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 27  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 28  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 29  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 30  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 31  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 32  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 33  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 34  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 35  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 36  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 37  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 38  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 39  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 40  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 41  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 42  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 43  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 44  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 45  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 46  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 47  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 48  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 49  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 50  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 51  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 52  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 53  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 54  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 55  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 56  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 57  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 58  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 59  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 60  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 61  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 62  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 63  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 64  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 65  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 66  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 67  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 68  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 69  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 70  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 71  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 72  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 73  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 74  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 75  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 76  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
243 [State 218] @0x080499bf, left buffer range after 76 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
243 [State 218] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
243 [State 218] Terminating state 218 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
243 [State 218] Switching from state 218 to state 0
Copied 34928 (count=1)
Deleting state 218 0x0x256e36b0
243 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 217
>> fuzzInit: datum forking for value 218
>> fuzzInit: datum forking for value 218
243 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 218)
        (ReadLSB w32 0 v218_fuzz_symb_218)))
    state 219 with condition (Not (Eq false
         (Eq (w32 218)
             (ReadLSB w32 0 v218_fuzz_symb_218))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-218-8048a0e
Size=2 Low=0 splitIndex=1 high=1
243 [State 0] Switching from state 0 to state 219
Copied 34928 (count=1)
Finalizing TB execution 219
s2e_dummyMainFunction
tcg-llvm-tb-218-8048a0e
Firing timer event
243 [State 219] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 218 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eea: 90                                 nop                      nextPC: 0xbfb76eeb
  2  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  3  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  4  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  5  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  6  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  7  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  8  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  9  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
 10  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 11  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 12  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 13  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 14  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 15  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 16  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 17  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 18  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 19  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 20  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 21  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 22  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 23  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 24  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 25  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 26  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 27  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 28  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 29  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 30  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 31  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 32  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 33  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 34  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 35  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 36  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 37  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 38  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 39  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 40  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 41  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 42  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 43  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 44  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 45  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 46  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 47  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 48  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 49  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 50  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 51  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 52  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 53  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 54  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 55  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 56  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 57  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 58  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 59  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 60  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 61  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 62  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 63  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 64  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 65  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 66  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 67  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 68  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 69  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 70  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 71  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 72  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 73  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 74  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 75  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
243 [State 219] @0x080499bf, left buffer range after 75 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
243 [State 219] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
243 [State 219] Terminating state 219 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
243 [State 219] Switching from state 219 to state 0
Copied 34928 (count=1)
Deleting state 219 0x0x256e36b0
243 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 218
>> fuzzInit: datum forking for value 219
>> fuzzInit: datum forking for value 219
244 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 219)
        (ReadLSB w32 0 v219_fuzz_symb_219)))
    state 220 with condition (Not (Eq false
         (Eq (w32 219)
             (ReadLSB w32 0 v219_fuzz_symb_219))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-219-8048a0e
Size=2 Low=0 splitIndex=1 high=1
244 [State 0] Switching from state 0 to state 220
Copied 34928 (count=1)
Finalizing TB execution 220
s2e_dummyMainFunction
tcg-llvm-tb-219-8048a0e
Firing timer event
244 [State 220] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 219 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eeb: 90                                 nop                      nextPC: 0xbfb76eec
  2  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  3  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  4  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  5  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  6  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  7  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  8  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  9  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
 10  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 11  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 12  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 13  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 14  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 15  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 16  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 17  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 18  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 19  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 20  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 21  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 22  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 23  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 24  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 25  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 26  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 27  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 28  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 29  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 30  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 31  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 32  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 33  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 34  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 35  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 36  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 37  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 38  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 39  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 40  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 41  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 42  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 43  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 44  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 45  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 46  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 47  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 48  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 49  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 50  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 51  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 52  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 53  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 54  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 55  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 56  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 57  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 58  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 59  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 60  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 61  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 62  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 63  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 64  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 65  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 66  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 67  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 68  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 69  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 70  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 71  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 72  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 73  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 74  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
244 [State 220] @0x080499bf, left buffer range after 74 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
244 [State 220] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
244 [State 220] Terminating state 220 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
244 [State 220] Switching from state 220 to state 0
Copied 34928 (count=1)
Deleting state 220 0x0x256e36b0
244 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 219
>> fuzzInit: datum forking for value 220
>> fuzzInit: datum forking for value 220
245 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 220)
        (ReadLSB w32 0 v220_fuzz_symb_220)))
    state 221 with condition (Not (Eq false
         (Eq (w32 220)
             (ReadLSB w32 0 v220_fuzz_symb_220))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-220-8048a0e
Size=2 Low=0 splitIndex=1 high=1
245 [State 0] Switching from state 0 to state 221
Copied 34928 (count=1)
Finalizing TB execution 221
s2e_dummyMainFunction
tcg-llvm-tb-220-8048a0e
245 [State 221] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 220 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eec: 90                                 nop                      nextPC: 0xbfb76eed
  2  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  3  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  4  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  5  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  6  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  7  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  8  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  9  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
 10  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 11  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 12  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 13  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 14  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 15  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 16  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 17  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 18  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 19  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 20  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 21  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 22  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 23  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 24  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 25  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 26  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 27  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 28  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 29  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 30  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 31  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 32  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 33  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 34  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 35  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 36  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 37  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 38  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 39  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 40  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 41  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 42  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 43  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 44  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 45  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 46  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 47  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 48  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 49  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 50  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 51  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 52  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 53  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 54  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 55  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 56  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 57  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 58  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 59  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 60  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 61  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 62  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 63  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 64  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 65  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 66  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 67  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 68  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 69  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 70  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 71  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 72  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 73  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
Firing timer event
245 [State 221] @0x080499bf, left buffer range after 73 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
245 [State 221] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
245 [State 221] Terminating state 221 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
245 [State 221] Switching from state 221 to state 0
Copied 34928 (count=1)
Deleting state 221 0x0x256e36b0
245 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 220
>> fuzzInit: datum forking for value 221
>> fuzzInit: datum forking for value 221
245 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 221)
        (ReadLSB w32 0 v221_fuzz_symb_221)))
    state 222 with condition (Not (Eq false
         (Eq (w32 221)
             (ReadLSB w32 0 v221_fuzz_symb_221))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-221-8048a0e
Size=2 Low=0 splitIndex=1 high=1
245 [State 0] Switching from state 0 to state 222
Copied 34928 (count=1)
Finalizing TB execution 222
s2e_dummyMainFunction
tcg-llvm-tb-221-8048a0e
245 [State 222] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 221 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eed: 90                                 nop                      nextPC: 0xbfb76eee
  2  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  3  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  4  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  5  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  6  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  7  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  8  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  9  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
 10  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 11  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 12  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 13  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 14  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 15  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 16  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 17  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 18  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 19  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 20  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 21  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 22  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 23  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 24  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 25  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 26  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 27  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 28  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 29  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 30  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 31  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 32  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 33  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 34  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 35  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 36  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 37  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 38  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 39  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 40  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 41  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 42  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 43  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 44  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 45  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 46  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 47  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 48  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 49  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 50  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 51  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 52  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 53  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 54  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 55  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 56  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 57  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 58  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 59  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 60  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 61  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 62  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 63  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 64  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 65  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 66  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 67  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 68  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 69  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 70  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 71  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 72  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
246 [State 222] @0x080499bf, left buffer range after 72 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
246 [State 222] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
246 [State 222] Terminating state 222 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
246 [State 222] Switching from state 222 to state 0
Copied 34928 (count=1)
Deleting state 222 0x0x256e36b0
Firing timer event
246 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 221
>> fuzzInit: datum forking for value 222
>> fuzzInit: datum forking for value 222
246 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 222)
        (ReadLSB w32 0 v222_fuzz_symb_222)))
    state 223 with condition (Not (Eq false
         (Eq (w32 222)
             (ReadLSB w32 0 v222_fuzz_symb_222))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-222-8048a0e
Size=2 Low=0 splitIndex=1 high=1
246 [State 0] Switching from state 0 to state 223
Copied 34928 (count=1)
Finalizing TB execution 223
s2e_dummyMainFunction
tcg-llvm-tb-222-8048a0e
246 [State 223] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 222 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eee: 90                                 nop                      nextPC: 0xbfb76eef
  2  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  3  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  4  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  5  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  6  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  7  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  8  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  9  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
 10  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 11  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 12  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 13  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 14  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 15  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 16  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 17  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 18  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 19  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 20  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 21  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 22  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 23  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 24  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 25  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 26  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 27  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 28  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 29  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 30  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 31  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 32  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 33  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 34  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 35  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 36  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 37  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 38  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 39  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 40  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 41  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 42  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 43  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 44  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 45  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 46  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 47  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 48  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 49  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 50  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 51  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 52  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 53  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 54  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 55  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 56  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 57  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 58  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 59  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 60  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 61  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 62  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 63  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 64  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 65  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 66  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 67  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 68  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 69  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 70  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 71  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
247 [State 223] @0x080499bf, left buffer range after 71 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
247 [State 223] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
247 [State 223] Terminating state 223 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
247 [State 223] Switching from state 223 to state 0
Copied 34928 (count=1)
Deleting state 223 0x0x256e36b0
247 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 222
>> fuzzInit: datum forking for value 223
>> fuzzInit: datum forking for value 223
247 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 223)
        (ReadLSB w32 0 v223_fuzz_symb_223)))
    state 224 with condition (Not (Eq false
         (Eq (w32 223)
             (ReadLSB w32 0 v223_fuzz_symb_223))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-223-8048a0e
Size=2 Low=0 splitIndex=1 high=1
247 [State 0] Switching from state 0 to state 224
Copied 34928 (count=1)
Finalizing TB execution 224
s2e_dummyMainFunction
tcg-llvm-tb-223-8048a0e
Firing timer event
247 [State 224] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 223 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76eef: 90                                 nop                      nextPC: 0xbfb76ef0
  2  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  3  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  4  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  5  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  6  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  7  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  8  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  9  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
 10  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 11  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 12  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 13  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 14  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 15  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 16  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 17  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 18  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 19  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 20  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 21  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 22  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 23  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 24  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 25  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 26  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 27  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 28  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 29  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 30  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 31  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 32  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 33  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 34  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 35  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 36  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 37  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 38  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 39  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 40  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 41  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 42  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 43  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 44  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 45  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 46  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 47  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 48  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 49  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 50  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 51  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 52  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 53  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 54  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 55  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 56  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 57  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 58  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 59  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 60  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 61  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 62  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 63  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 64  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 65  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 66  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 67  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 68  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 69  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 70  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
247 [State 224] @0x080499bf, left buffer range after 70 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
247 [State 224] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
247 [State 224] Terminating state 224 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
247 [State 224] Switching from state 224 to state 0
Copied 34928 (count=1)
Deleting state 224 0x0x256e36b0
248 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 223
>> fuzzInit: datum forking for value 224
>> fuzzInit: datum forking for value 224
248 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 224)
        (ReadLSB w32 0 v224_fuzz_symb_224)))
    state 225 with condition (Not (Eq false
         (Eq (w32 224)
             (ReadLSB w32 0 v224_fuzz_symb_224))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-224-8048a0e
Size=2 Low=0 splitIndex=1 high=1
248 [State 0] Switching from state 0 to state 225
Copied 34928 (count=1)
Finalizing TB execution 225
s2e_dummyMainFunction
tcg-llvm-tb-224-8048a0e
248 [State 225] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 224 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef0: 90                                 nop                      nextPC: 0xbfb76ef1
  2  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  3  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  4  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  5  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  6  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  7  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  8  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  9  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
 10  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 11  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 12  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 13  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 14  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 15  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 16  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 17  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 18  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 19  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 20  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 21  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 22  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 23  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 24  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 25  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 26  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 27  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 28  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 29  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 30  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 31  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 32  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 33  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 34  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 35  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 36  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 37  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 38  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 39  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 40  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 41  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 42  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 43  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 44  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 45  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 46  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 47  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 48  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 49  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 50  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 51  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 52  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 53  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 54  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 55  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 56  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 57  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 58  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 59  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 60  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 61  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 62  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 63  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
Firing timer event
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 64  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 65  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 66  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 67  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 68  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 69  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
248 [State 225] @0x080499bf, left buffer range after 69 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
248 [State 225] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
248 [State 225] Terminating state 225 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
248 [State 225] Switching from state 225 to state 0
Copied 34928 (count=1)
Deleting state 225 0x0x256e36b0
248 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 224
>> fuzzInit: datum forking for value 225
>> fuzzInit: datum forking for value 225
248 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 225)
        (ReadLSB w32 0 v225_fuzz_symb_225)))
    state 226 with condition (Not (Eq false
         (Eq (w32 225)
             (ReadLSB w32 0 v225_fuzz_symb_225))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-225-8048a0e
Size=2 Low=0 splitIndex=1 high=1
248 [State 0] Switching from state 0 to state 226
Copied 34928 (count=1)
Finalizing TB execution 226
s2e_dummyMainFunction
tcg-llvm-tb-225-8048a0e
249 [State 226] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 225 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef1: 90                                 nop                      nextPC: 0xbfb76ef2
  2  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  3  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  4  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  5  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  6  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  7  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  8  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  9  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
 10  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 11  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 12  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 13  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 14  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 15  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 16  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 17  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 18  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 19  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 20  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 21  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 22  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 23  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 24  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 25  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 26  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 27  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 28  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 29  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 30  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 31  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 32  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 33  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 34  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 35  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 36  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 37  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 38  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 39  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 40  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 41  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 42  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 43  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 44  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 45  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 46  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 47  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 48  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 49  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 50  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 51  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 52  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 53  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 54  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 55  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 56  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 57  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 58  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 59  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 60  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 61  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 62  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 63  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 64  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 65  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 66  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 67  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 68  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
249 [State 226] @0x080499bf, left buffer range after 68 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
249 [State 226] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
249 [State 226] Terminating state 226 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
249 [State 226] Switching from state 226 to state 0
Copied 34928 (count=1)
Deleting state 226 0x0x256e36b0
Firing timer event
249 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 225
>> fuzzInit: datum forking for value 226
>> fuzzInit: datum forking for value 226
249 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 226)
        (ReadLSB w32 0 v226_fuzz_symb_226)))
    state 227 with condition (Not (Eq false
         (Eq (w32 226)
             (ReadLSB w32 0 v226_fuzz_symb_226))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-226-8048a0e
Size=2 Low=0 splitIndex=1 high=1
249 [State 0] Switching from state 0 to state 227
Copied 34928 (count=1)
Finalizing TB execution 227
s2e_dummyMainFunction
tcg-llvm-tb-226-8048a0e
250 [State 227] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 226 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef2: 90                                 nop                      nextPC: 0xbfb76ef3
  2  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  3  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  4  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  5  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  6  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  7  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  8  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  9  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
 10  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 11  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 12  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 13  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 14  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 15  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 16  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 17  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 18  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 19  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 20  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 21  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 22  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 23  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 24  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 25  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 26  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 27  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 28  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 29  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 30  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 31  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 32  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 33  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 34  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 35  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 36  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 37  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 38  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 39  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 40  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 41  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 42  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 43  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 44  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 45  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 46  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 47  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 48  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 49  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 50  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 51  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 52  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 53  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 54  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 55  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 56  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 57  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 58  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 59  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 60  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 61  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 62  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 63  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 64  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 65  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 66  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 67  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
250 [State 227] @0x080499bf, left buffer range after 67 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
250 [State 227] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
250 [State 227] Terminating state 227 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
250 [State 227] Switching from state 227 to state 0
Copied 34928 (count=1)
Deleting state 227 0x0x256e36b0
250 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 226
>> fuzzInit: datum forking for value 227
>> fuzzInit: datum forking for value 227
250 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 227)
        (ReadLSB w32 0 v227_fuzz_symb_227)))
    state 228 with condition (Not (Eq false
         (Eq (w32 227)
             (ReadLSB w32 0 v227_fuzz_symb_227))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-227-8048a0e
Size=2 Low=0 splitIndex=1 high=1
250 [State 0] Switching from state 0 to state 228
Copied 34928 (count=1)
Finalizing TB execution 228
s2e_dummyMainFunction
tcg-llvm-tb-227-8048a0e
Firing timer event
250 [State 228] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 227 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef3: 90                                 nop                      nextPC: 0xbfb76ef4
  2  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  3  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  4  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  5  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  6  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  7  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  8  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  9  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
 10  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 11  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 12  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 13  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 14  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 15  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 16  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 17  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 18  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 19  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 20  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 21  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 22  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 23  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 24  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 25  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 26  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 27  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 28  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 29  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 30  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 31  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 32  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 33  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 34  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 35  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 36  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 37  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 38  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 39  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 40  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 41  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 42  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 43  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 44  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 45  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 46  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 47  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 48  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 49  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 50  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 51  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 52  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 53  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 54  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 55  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 56  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 57  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 58  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 59  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 60  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 61  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 62  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 63  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 64  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 65  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 66  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
251 [State 228] @0x080499bf, left buffer range after 66 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
251 [State 228] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
251 [State 228] Terminating state 228 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
251 [State 228] Switching from state 228 to state 0
Copied 34928 (count=1)
Deleting state 228 0x0x256e36b0
251 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 227
>> fuzzInit: datum forking for value 228
>> fuzzInit: datum forking for value 228
251 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 228)
        (ReadLSB w32 0 v228_fuzz_symb_228)))
    state 229 with condition (Not (Eq false
         (Eq (w32 228)
             (ReadLSB w32 0 v228_fuzz_symb_228))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-228-8048a0e
Size=2 Low=0 splitIndex=1 high=1
251 [State 0] Switching from state 0 to state 229
Copied 34928 (count=1)
Finalizing TB execution 229
s2e_dummyMainFunction
tcg-llvm-tb-228-8048a0e
251 [State 229] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 228 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76ef4: 90                                 nop                      nextPC: 0xbfb76ef5
  2  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  3  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  4  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  5  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  6  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  7  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  8  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  9  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
 10  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 11  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 12  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 13  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 14  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 15  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 16  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 17  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 18  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 19  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 20  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 21  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 22  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 23  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 24  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 25  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 26  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 27  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 28  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 29  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 30  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 31  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 32  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 33  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 34  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 35  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 36  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 37  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 38  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 39  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 40  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 41  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 42  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 43  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 44  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 45  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 46  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 47  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 48  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 49  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 50  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 51  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 52  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 53  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 54  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 55  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 56  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 57  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 58  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 59  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 60  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 61  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 62  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 63  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 64  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 65  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
251 [State 229] @0x080499bf, left buffer range after 65 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
251 [State 229] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
251 [State 229] Terminating state 229 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
251 [State 229] Switching from state 229 to state 0
Copied 34928 (count=1)
Deleting state 229 0x0x256e36b0
252 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 228
>> fuzzInit: datum forking for value 229
>> fuzzInit: datum forking for value 229
252 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 229)
        (ReadLSB w32 0 v229_fuzz_symb_229)))
    state 230 with condition (Not (Eq false
         (Eq (w32 229)
             (ReadLSB w32 0 v229_fuzz_symb_229))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-229-8048a0e
Size=2 Low=0 splitIndex=1 high=1
252 [State 0] Switching from state 0 to state 230
Copied 34928 (count=1)
Finalizing TB execution 230
s2e_dummyMainFunction
tcg-llvm-tb-229-8048a0e
252 [State 230] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 229 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef5: 90                                 nop                      nextPC: 0xbfb76ef6
  2  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  3  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  4  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  5  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  6  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  7  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  8  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  9  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
 10  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 11  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 12  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 13  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 14  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 15  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 16  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 17  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 18  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 19  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 20  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 21  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 22  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 23  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 24  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 25  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 26  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 27  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 28  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 29  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 30  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 31  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 32  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 33  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 34  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 35  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 36  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 37  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 38  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 39  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 40  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 41  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 42  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 43  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 44  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 45  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 46  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 47  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 48  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 49  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 50  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 51  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 52  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 53  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 54  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 55  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 56  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 57  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 58  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 59  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 60  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 61  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 62  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 63  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 64  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
Firing timer event
252 [State 230] @0x080499bf, left buffer range after 64 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
252 [State 230] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
252 [State 230] Terminating state 230 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
252 [State 230] Switching from state 230 to state 0
Copied 34928 (count=1)
Deleting state 230 0x0x256e36b0
252 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 229
>> fuzzInit: datum forking for value 230
>> fuzzInit: datum forking for value 230
253 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 230)
        (ReadLSB w32 0 v230_fuzz_symb_230)))
    state 231 with condition (Not (Eq false
         (Eq (w32 230)
             (ReadLSB w32 0 v230_fuzz_symb_230))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-230-8048a0e
Size=2 Low=0 splitIndex=1 high=1
253 [State 0] Switching from state 0 to state 231
Copied 34928 (count=1)
Finalizing TB execution 231
s2e_dummyMainFunction
tcg-llvm-tb-230-8048a0e
253 [State 231] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 230 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef6: 90                                 nop                      nextPC: 0xbfb76ef7
  2  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  3  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  4  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  5  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  6  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  7  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  8  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  9  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
 10  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 11  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 12  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 13  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 14  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 15  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 16  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 17  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 18  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 19  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 20  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 21  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 22  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 23  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 24  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 25  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 26  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 27  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 28  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 29  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 30  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 31  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 32  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 33  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 34  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 35  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 36  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 37  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 38  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 39  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 40  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 41  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 42  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 43  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 44  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 45  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 46  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 47  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 48  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 49  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 50  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 51  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 52  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 53  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 54  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 55  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 56  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 57  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 58  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 59  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 60  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 61  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 62  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 63  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
253 [State 231] @0x080499bf, left buffer range after 63 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
253 [State 231] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
253 [State 231] Terminating state 231 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
253 [State 231] Switching from state 231 to state 0
Copied 34928 (count=1)
Deleting state 231 0x0x256e36b0
Firing timer event
253 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 230
>> fuzzInit: datum forking for value 231
>> fuzzInit: datum forking for value 231
253 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 231)
        (ReadLSB w32 0 v231_fuzz_symb_231)))
    state 232 with condition (Not (Eq false
         (Eq (w32 231)
             (ReadLSB w32 0 v231_fuzz_symb_231))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-231-8048a0e
Size=2 Low=0 splitIndex=1 high=1
253 [State 0] Switching from state 0 to state 232
Copied 34928 (count=1)
Finalizing TB execution 232
s2e_dummyMainFunction
tcg-llvm-tb-231-8048a0e
254 [State 232] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 231 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef7: 90                                 nop                      nextPC: 0xbfb76ef8
  2  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  3  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  4  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  5  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  6  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  7  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  8  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  9  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
 10  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 11  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 12  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 13  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 14  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 15  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 16  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 17  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 18  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 19  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 20  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 21  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 22  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 23  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 24  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 25  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 26  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 27  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 28  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 29  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 30  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 31  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 32  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 33  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 34  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 35  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 36  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 37  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 38  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 39  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 40  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 41  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 42  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 43  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 44  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 45  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 46  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 47  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 48  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 49  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 50  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 51  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 52  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 53  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 54  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 55  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 56  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 57  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 58  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 59  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 60  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 61  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 62  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
254 [State 232] @0x080499bf, left buffer range after 62 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
254 [State 232] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
254 [State 232] Terminating state 232 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
254 [State 232] Switching from state 232 to state 0
Copied 34928 (count=1)
Deleting state 232 0x0x256e36b0
254 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 231
>> fuzzInit: datum forking for value 232
>> fuzzInit: datum forking for value 232
254 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 232)
        (ReadLSB w32 0 v232_fuzz_symb_232)))
    state 233 with condition (Not (Eq false
         (Eq (w32 232)
             (ReadLSB w32 0 v232_fuzz_symb_232))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-232-8048a0e
Size=2 Low=0 splitIndex=1 high=1
254 [State 0] Switching from state 0 to state 233
Copied 34928 (count=1)
Finalizing TB execution 233
s2e_dummyMainFunction
tcg-llvm-tb-232-8048a0e
Firing timer event
254 [State 233] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 232 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ef8: 90                                 nop                      nextPC: 0xbfb76ef9
  2  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  3  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  4  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  5  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  6  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  7  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  8  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  9  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
 10  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 11  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 12  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 13  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 14  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 15  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 16  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 17  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 18  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 19  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 20  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 21  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 22  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 23  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 24  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 25  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 26  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 27  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 28  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 29  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 30  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 31  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 32  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 33  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 34  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 35  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 36  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 37  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 38  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 39  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 40  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 41  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 42  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 43  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 44  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 45  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 46  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 47  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 48  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 49  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 50  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 51  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 52  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 53  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 54  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 55  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 56  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 57  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 58  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 59  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 60  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 61  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
255 [State 233] @0x080499bf, left buffer range after 61 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
255 [State 233] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
255 [State 233] Terminating state 233 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
255 [State 233] Switching from state 233 to state 0
Copied 34928 (count=1)
Deleting state 233 0x0x25e897f0
255 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 232
>> fuzzInit: datum forking for value 233
>> fuzzInit: datum forking for value 233
255 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 233)
        (ReadLSB w32 0 v233_fuzz_symb_233)))
    state 234 with condition (Not (Eq false
         (Eq (w32 233)
             (ReadLSB w32 0 v233_fuzz_symb_233))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-233-8048a0e
Size=2 Low=0 splitIndex=1 high=1
255 [State 0] Switching from state 0 to state 234
Copied 34928 (count=1)
Finalizing TB execution 234
s2e_dummyMainFunction
tcg-llvm-tb-233-8048a0e
255 [State 234] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 233 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76ef9: 90                                 nop                      nextPC: 0xbfb76efa
  2  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  3  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  4  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  5  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  6  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  7  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  8  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  9  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
 10  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 11  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 12  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 13  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 14  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 15  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 16  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 17  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 18  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 19  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 20  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 21  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 22  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 23  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 24  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 25  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 26  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 27  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 28  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 29  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 30  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 31  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 32  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 33  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 34  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 35  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 36  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 37  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 38  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 39  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 40  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 41  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 42  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 43  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 44  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 45  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 46  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 47  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 48  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 49  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 50  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 51  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 52  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 53  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 54  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 55  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 56  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 57  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 58  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 59  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 60  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
256 [State 234] @0x080499bf, left buffer range after 60 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
256 [State 234] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
256 [State 234] Terminating state 234 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
256 [State 234] Switching from state 234 to state 0
Copied 34928 (count=1)
Deleting state 234 0x0x25f317b0
256 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 233
>> fuzzInit: datum forking for value 234
>> fuzzInit: datum forking for value 234
256 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 234)
        (ReadLSB w32 0 v234_fuzz_symb_234)))
    state 235 with condition (Not (Eq false
         (Eq (w32 234)
             (ReadLSB w32 0 v234_fuzz_symb_234))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-234-8048a0e
Size=2 Low=0 splitIndex=1 high=1
256 [State 0] Switching from state 0 to state 235
Copied 34928 (count=1)
Finalizing TB execution 235
s2e_dummyMainFunction
tcg-llvm-tb-234-8048a0e
256 [State 235] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 234 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76efa: 90                                 nop                      nextPC: 0xbfb76efb
  2  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  3  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  4  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  5  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  6  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  7  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  8  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  9  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
 10  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 11  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 12  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 13  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 14  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 15  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 16  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 17  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 18  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 19  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 20  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 21  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 22  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 23  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 24  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 25  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 26  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 27  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 28  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 29  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 30  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 31  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 32  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 33  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 34  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 35  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 36  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 37  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 38  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 39  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 40  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 41  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 42  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 43  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 44  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 45  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 46  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 47  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 48  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 49  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 50  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 51  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 52  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 53  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 54  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 55  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 56  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 57  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 58  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 59  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
256 [State 235] @0x080499bf, left buffer range after 59 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
256 [State 235] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
256 [State 235] Terminating state 235 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
256 [State 235] Switching from state 235 to state 0
Copied 34928 (count=1)
Deleting state 235 0x0x260d30e0
Firing timer event
257 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 234
>> fuzzInit: datum forking for value 235
>> fuzzInit: datum forking for value 235
257 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 235)
        (ReadLSB w32 0 v235_fuzz_symb_235)))
    state 236 with condition (Not (Eq false
         (Eq (w32 235)
             (ReadLSB w32 0 v235_fuzz_symb_235))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-235-8048a0e
Size=2 Low=0 splitIndex=1 high=1
257 [State 0] Switching from state 0 to state 236
Copied 34928 (count=1)
Finalizing TB execution 236
s2e_dummyMainFunction
tcg-llvm-tb-235-8048a0e
257 [State 236] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 235 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76efb: 90                                 nop                      nextPC: 0xbfb76efc
  2  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  3  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  4  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  5  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  6  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  7  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  8  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  9  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
 10  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 11  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 12  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 13  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 14  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 15  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 16  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 17  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 18  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 19  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 20  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 21  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 22  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 23  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 24  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 25  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 26  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 27  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 28  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 29  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 30  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 31  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 32  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 33  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 34  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 35  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 36  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 37  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 38  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 39  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 40  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 41  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 42  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 43  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 44  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 45  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 46  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 47  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 48  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 49  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 50  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 51  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 52  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 53  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 54  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 55  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 56  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 57  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 58  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
257 [State 236] @0x080499bf, left buffer range after 58 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
257 [State 236] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
257 [State 236] Terminating state 236 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
257 [State 236] Switching from state 236 to state 0
Copied 34928 (count=1)
Deleting state 236 0x0x2615f000
257 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 235
>> fuzzInit: datum forking for value 236
>> fuzzInit: datum forking for value 236
258 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 236)
        (ReadLSB w32 0 v236_fuzz_symb_236)))
    state 237 with condition (Not (Eq false
         (Eq (w32 236)
             (ReadLSB w32 0 v236_fuzz_symb_236))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-236-8048a0e
Size=2 Low=0 splitIndex=1 high=1
258 [State 0] Switching from state 0 to state 237
Copied 34928 (count=1)
Finalizing TB execution 237
s2e_dummyMainFunction
tcg-llvm-tb-236-8048a0e
Firing timer event
258 [State 237] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 236 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76efc: 90                                 nop                      nextPC: 0xbfb76efd
  2  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  3  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  4  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  5  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  6  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  7  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  8  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  9  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
 10  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 11  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 12  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 13  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 14  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 15  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 16  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 17  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 18  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 19  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 20  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 21  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 22  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 23  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 24  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 25  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 26  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 27  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 28  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 29  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 30  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 31  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 32  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 33  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 34  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 35  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 36  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 37  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 38  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 39  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 40  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 41  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 42  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 43  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 44  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 45  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 46  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 47  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 48  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 49  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 50  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 51  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 52  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 53  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 54  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 55  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 56  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 57  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
258 [State 237] @0x080499bf, left buffer range after 57 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
258 [State 237] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
258 [State 237] Terminating state 237 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
258 [State 237] Switching from state 237 to state 0
Copied 34928 (count=1)
Deleting state 237 0x0x25fdc7d0
258 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 236
>> fuzzInit: datum forking for value 237
>> fuzzInit: datum forking for value 237
258 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 237)
        (ReadLSB w32 0 v237_fuzz_symb_237)))
    state 238 with condition (Not (Eq false
         (Eq (w32 237)
             (ReadLSB w32 0 v237_fuzz_symb_237))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-237-8048a0e
Size=2 Low=0 splitIndex=1 high=1
258 [State 0] Switching from state 0 to state 238
Copied 34928 (count=1)
Finalizing TB execution 238
s2e_dummyMainFunction
tcg-llvm-tb-237-8048a0e
259 [State 238] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 237 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76efd: 90                                 nop                      nextPC: 0xbfb76efe
  2  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  3  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  4  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  5  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  6  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  7  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  8  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  9  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
 10  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 11  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 12  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 13  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 14  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 15  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 16  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 17  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 18  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 19  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 20  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 21  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 22  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 23  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 24  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 25  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 26  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 27  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 28  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 29  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 30  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 31  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 32  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 33  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 34  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 35  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 36  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 37  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 38  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 39  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 40  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 41  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 42  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 43  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 44  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 45  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 46  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 47  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 48  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 49  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 50  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 51  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 52  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 53  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 54  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 55  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 56  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
259 [State 238] @0x080499bf, left buffer range after 56 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
259 [State 238] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
259 [State 238] Terminating state 238 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
259 [State 238] Switching from state 238 to state 0
Copied 34928 (count=1)
Deleting state 238 0x0x25f96ef0
259 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 237
>> fuzzInit: datum forking for value 238
>> fuzzInit: datum forking for value 238
259 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 238)
        (ReadLSB w32 0 v238_fuzz_symb_238)))
    state 239 with condition (Not (Eq false
         (Eq (w32 238)
             (ReadLSB w32 0 v238_fuzz_symb_238))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-238-8048a0e
Size=2 Low=0 splitIndex=1 high=1
259 [State 0] Switching from state 0 to state 239
Copied 34928 (count=1)
Finalizing TB execution 239
s2e_dummyMainFunction
tcg-llvm-tb-238-8048a0e
259 [State 239] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 238 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76efe: 90                                 nop                      nextPC: 0xbfb76eff
  2  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  3  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  4  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  5  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  6  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  7  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  8  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  9  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
 10  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 11  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 12  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 13  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 14  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 15  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 16  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 17  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 18  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 19  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 20  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 21  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 22  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 23  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 24  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 25  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 26  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 27  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 28  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 29  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 30  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 31  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 32  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 33  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 34  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 35  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 36  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 37  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 38  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 39  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 40  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 41  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 42  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 43  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 44  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 45  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 46  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 47  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 48  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 49  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 50  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 51  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 52  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 53  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 54  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 55  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
260 [State 239] @0x080499bf, left buffer range after 55 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
260 [State 239] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
260 [State 239] Terminating state 239 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
260 [State 239] Switching from state 239 to state 0
Copied 34928 (count=1)
Deleting state 239 0x0x25f96ef0
260 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 238
>> fuzzInit: datum forking for value 239
>> fuzzInit: datum forking for value 239
260 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 239)
        (ReadLSB w32 0 v239_fuzz_symb_239)))
    state 240 with condition (Not (Eq false
         (Eq (w32 239)
             (ReadLSB w32 0 v239_fuzz_symb_239))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-239-8048a0e
Size=2 Low=0 splitIndex=1 high=1
260 [State 0] Switching from state 0 to state 240
Copied 34928 (count=1)
Finalizing TB execution 240
s2e_dummyMainFunction
tcg-llvm-tb-239-8048a0e
260 [State 240] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 239 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76eff: 90                                 nop                      nextPC: 0xbfb76f00
  2  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  3  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  4  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  5  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  6  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  7  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  8  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  9  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
 10  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 11  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 12  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 13  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 14  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 15  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 16  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 17  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 18  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 19  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 20  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 21  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 22  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 23  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 24  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 25  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 26  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 27  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 28  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 29  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 30  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 31  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 32  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 33  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 34  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 35  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 36  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 37  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 38  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 39  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 40  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 41  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 42  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 43  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 44  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 45  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 46  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 47  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 48  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 49  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 50  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 51  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 52  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 53  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 54  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
261 [State 240] @0x080499bf, left buffer range after 54 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
261 [State 240] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
261 [State 240] Terminating state 240 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
261 [State 240] Switching from state 240 to state 0
Copied 34928 (count=1)
Deleting state 240 0x0x25f96ef0
261 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 239
>> fuzzInit: datum forking for value 240
>> fuzzInit: datum forking for value 240
261 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 240)
        (ReadLSB w32 0 v240_fuzz_symb_240)))
    state 241 with condition (Not (Eq false
         (Eq (w32 240)
             (ReadLSB w32 0 v240_fuzz_symb_240))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-240-8048a0e
Size=2 Low=0 splitIndex=1 high=1
261 [State 0] Switching from state 0 to state 241
Copied 34928 (count=1)
Finalizing TB execution 241
s2e_dummyMainFunction
tcg-llvm-tb-240-8048a0e
261 [State 241] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 240 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f00: 90                                 nop                      nextPC: 0xbfb76f01
  2  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  3  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  4  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  5  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  6  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  7  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  8  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  9  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
 10  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 11  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 12  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 13  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 14  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 15  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 16  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 17  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 18  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 19  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 20  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 21  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 22  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 23  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 24  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 25  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 26  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 27  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 28  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 29  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 30  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 31  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 32  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 33  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 34  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 35  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 36  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 37  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 38  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 39  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 40  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 41  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 42  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 43  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 44  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 45  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 46  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 47  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 48  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 49  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 50  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 51  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 52  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 53  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
262 [State 241] @0x080499bf, left buffer range after 53 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
262 [State 241] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
262 [State 241] Terminating state 241 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
262 [State 241] Switching from state 241 to state 0
Copied 34928 (count=1)
Deleting state 241 0x0x25f96ef0
Firing timer event
262 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 240
>> fuzzInit: datum forking for value 241
>> fuzzInit: datum forking for value 241
262 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 241)
        (ReadLSB w32 0 v241_fuzz_symb_241)))
    state 242 with condition (Not (Eq false
         (Eq (w32 241)
             (ReadLSB w32 0 v241_fuzz_symb_241))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-241-8048a0e
Size=2 Low=0 splitIndex=1 high=1
262 [State 0] Switching from state 0 to state 242
Copied 34928 (count=1)
Finalizing TB execution 242
s2e_dummyMainFunction
tcg-llvm-tb-241-8048a0e
262 [State 242] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 241 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f01: 90                                 nop                      nextPC: 0xbfb76f02
  2  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  3  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  4  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  5  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  6  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  7  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  8  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  9  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
 10  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 11  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 12  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 13  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 14  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 15  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 16  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 17  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 18  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 19  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 20  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 21  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 22  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 23  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 24  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 25  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 26  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 27  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 28  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 29  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 30  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 31  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 32  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 33  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 34  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 35  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 36  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 37  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 38  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 39  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 40  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 41  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 42  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 43  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 44  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 45  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 46  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 47  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 48  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 49  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 50  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 51  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 52  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
262 [State 242] @0x080499bf, left buffer range after 52 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
262 [State 242] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
262 [State 242] Terminating state 242 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
262 [State 242] Switching from state 242 to state 0
Copied 34928 (count=1)
Deleting state 242 0x0x25f96ef0
263 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 241
>> fuzzInit: datum forking for value 242
>> fuzzInit: datum forking for value 242
263 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 242)
        (ReadLSB w32 0 v242_fuzz_symb_242)))
    state 243 with condition (Not (Eq false
         (Eq (w32 242)
             (ReadLSB w32 0 v242_fuzz_symb_242))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-242-8048a0e
Size=2 Low=0 splitIndex=1 high=1
263 [State 0] Switching from state 0 to state 243
Copied 34928 (count=1)
Finalizing TB execution 243
s2e_dummyMainFunction
tcg-llvm-tb-242-8048a0e
Firing timer event
263 [State 243] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 242 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f02: 90                                 nop                      nextPC: 0xbfb76f03
  2  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  3  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  4  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  5  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  6  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  7  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  8  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  9  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
 10  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 11  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 12  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 13  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 14  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 15  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 16  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 17  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 18  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 19  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 20  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 21  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 22  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 23  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 24  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 25  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 26  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 27  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 28  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 29  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 30  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 31  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 32  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 33  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 34  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 35  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 36  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 37  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 38  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 39  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 40  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 41  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 42  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 43  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 44  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 45  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 46  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 47  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 48  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 49  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 50  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 51  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
263 [State 243] @0x080499bf, left buffer range after 51 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
263 [State 243] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
263 [State 243] Terminating state 243 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
263 [State 243] Switching from state 243 to state 0
Copied 34928 (count=1)
Deleting state 243 0x0x25f96ef0
263 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 242
>> fuzzInit: datum forking for value 243
>> fuzzInit: datum forking for value 243
264 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 243)
        (ReadLSB w32 0 v243_fuzz_symb_243)))
    state 244 with condition (Not (Eq false
         (Eq (w32 243)
             (ReadLSB w32 0 v243_fuzz_symb_243))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-243-8048a0e
Size=2 Low=0 splitIndex=1 high=1
264 [State 0] Switching from state 0 to state 244
Copied 34928 (count=1)
Finalizing TB execution 244
s2e_dummyMainFunction
tcg-llvm-tb-243-8048a0e
264 [State 244] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 243 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f03: 90                                 nop                      nextPC: 0xbfb76f04
  2  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  3  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  4  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  5  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  6  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  7  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  8  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  9  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
 10  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 11  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 12  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 13  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 14  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 15  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 16  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 17  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 18  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 19  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 20  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 21  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 22  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 23  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 24  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 25  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 26  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 27  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 28  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 29  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 30  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 31  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 32  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 33  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 34  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 35  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 36  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 37  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 38  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 39  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 40  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 41  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 42  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 43  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 44  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 45  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 46  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 47  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 48  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 49  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 50  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
264 [State 244] @0x080499bf, left buffer range after 50 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
264 [State 244] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
264 [State 244] Terminating state 244 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
264 [State 244] Switching from state 244 to state 0
Copied 34928 (count=1)
Deleting state 244 0x0x262c3bb0
264 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 243
>> fuzzInit: datum forking for value 244
>> fuzzInit: datum forking for value 244
264 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 244)
        (ReadLSB w32 0 v244_fuzz_symb_244)))
    state 245 with condition (Not (Eq false
         (Eq (w32 244)
             (ReadLSB w32 0 v244_fuzz_symb_244))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-244-8048a0e
Size=2 Low=0 splitIndex=1 high=1
264 [State 0] Switching from state 0 to state 245
Copied 34928 (count=1)
Finalizing TB execution 245
s2e_dummyMainFunction
tcg-llvm-tb-244-8048a0e
265 [State 245] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 244 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f04: 90                                 nop                      nextPC: 0xbfb76f05
  2  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  3  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  4  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  5  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  6  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  7  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  8  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  9  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
 10  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 11  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 12  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 13  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 14  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 15  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 16  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 17  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 18  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 19  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 20  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 21  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 22  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 23  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 24  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 25  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 26  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 27  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 28  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 29  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 30  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 31  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 32  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 33  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 34  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 35  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 36  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 37  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 38  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 39  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 40  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 41  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 42  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 43  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 44  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 45  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 46  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 47  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 48  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 49  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
265 [State 245] @0x080499bf, left buffer range after 49 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
265 [State 245] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
265 [State 245] Terminating state 245 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
265 [State 245] Switching from state 245 to state 0
Copied 34928 (count=1)
Deleting state 245 0x0x26346690
Firing timer event
265 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 244
>> fuzzInit: datum forking for value 245
>> fuzzInit: datum forking for value 245
265 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 245)
        (ReadLSB w32 0 v245_fuzz_symb_245)))
    state 246 with condition (Not (Eq false
         (Eq (w32 245)
             (ReadLSB w32 0 v245_fuzz_symb_245))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-245-8048a0e
Size=2 Low=0 splitIndex=1 high=1
265 [State 0] Switching from state 0 to state 246
Copied 34928 (count=1)
Finalizing TB execution 246
s2e_dummyMainFunction
tcg-llvm-tb-245-8048a0e
265 [State 246] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 245 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f05: 90                                 nop                      nextPC: 0xbfb76f06
  2  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  3  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  4  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  5  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  6  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  7  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  8  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  9  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
 10  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 11  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 12  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 13  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 14  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 15  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 16  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 17  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 18  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 19  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 20  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 21  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 22  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 23  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 24  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 25  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 26  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 27  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 28  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 29  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 30  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 31  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 32  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 33  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 34  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 35  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 36  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 37  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 38  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 39  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 40  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 41  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 42  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 43  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 44  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 45  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 46  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 47  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 48  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
266 [State 246] @0x080499bf, left buffer range after 48 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
266 [State 246] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
266 [State 246] Terminating state 246 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
266 [State 246] Switching from state 246 to state 0
Copied 34928 (count=1)
Deleting state 246 0x0x26346690
266 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 245
>> fuzzInit: datum forking for value 246
>> fuzzInit: datum forking for value 246
266 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 246)
        (ReadLSB w32 0 v246_fuzz_symb_246)))
    state 247 with condition (Not (Eq false
         (Eq (w32 246)
             (ReadLSB w32 0 v246_fuzz_symb_246))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-246-8048a0e
Size=2 Low=0 splitIndex=1 high=1
266 [State 0] Switching from state 0 to state 247
Copied 34928 (count=1)
Finalizing TB execution 247
s2e_dummyMainFunction
tcg-llvm-tb-246-8048a0e
Firing timer event
266 [State 247] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 246 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f06: 90                                 nop                      nextPC: 0xbfb76f07
  2  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  3  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  4  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  5  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  6  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  7  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  8  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  9  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
 10  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 11  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 12  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 13  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 14  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 15  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 16  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 17  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 18  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 19  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 20  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 21  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 22  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 23  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 24  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 25  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 26  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 27  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 28  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 29  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 30  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 31  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 32  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 33  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 34  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 35  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 36  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 37  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 38  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 39  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 40  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 41  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 42  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 43  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 44  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 45  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 46  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 47  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
266 [State 247] @0x080499bf, left buffer range after 47 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
266 [State 247] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
266 [State 247] Terminating state 247 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
266 [State 247] Switching from state 247 to state 0
Copied 34928 (count=1)
Deleting state 247 0x0x26346690
267 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 246
>> fuzzInit: datum forking for value 247
>> fuzzInit: datum forking for value 247
267 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 247)
        (ReadLSB w32 0 v247_fuzz_symb_247)))
    state 248 with condition (Not (Eq false
         (Eq (w32 247)
             (ReadLSB w32 0 v247_fuzz_symb_247))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-247-8048a0e
Size=2 Low=0 splitIndex=1 high=1
267 [State 0] Switching from state 0 to state 248
Copied 34928 (count=1)
Finalizing TB execution 248
s2e_dummyMainFunction
tcg-llvm-tb-247-8048a0e
Firing timer event
267 [State 248] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 247 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f07: 90                                 nop                      nextPC: 0xbfb76f08
  2  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  3  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  4  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  5  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  6  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  7  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  8  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  9  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
 10  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 11  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 12  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 13  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 14  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 15  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 16  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 17  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 18  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 19  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 20  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 21  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 22  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 23  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 24  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 25  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 26  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 27  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 28  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 29  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 30  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 31  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 32  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 33  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 34  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 35  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 36  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 37  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 38  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 39  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 40  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 41  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 42  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 43  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 44  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 45  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 46  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
267 [State 248] @0x080499bf, left buffer range after 46 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
267 [State 248] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
267 [State 248] Terminating state 248 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
267 [State 248] Switching from state 248 to state 0
Copied 34928 (count=1)
Deleting state 248 0x0x26453450
268 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 247
>> fuzzInit: datum forking for value 248
>> fuzzInit: datum forking for value 248
268 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 248)
        (ReadLSB w32 0 v248_fuzz_symb_248)))
    state 249 with condition (Not (Eq false
         (Eq (w32 248)
             (ReadLSB w32 0 v248_fuzz_symb_248))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-248-8048a0e
Size=2 Low=0 splitIndex=1 high=1
268 [State 0] Switching from state 0 to state 249
Copied 34928 (count=1)
Finalizing TB execution 249
s2e_dummyMainFunction
tcg-llvm-tb-248-8048a0e
268 [State 249] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 248 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f08: 90                                 nop                      nextPC: 0xbfb76f09
  2  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  3  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  4  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  5  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  6  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  7  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  8  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  9  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
 10  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 11  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 12  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 13  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 14  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 15  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 16  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 17  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 18  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 19  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 20  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 21  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 22  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 23  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 24  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 25  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 26  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 27  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 28  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 29  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 30  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 31  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 32  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 33  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 34  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 35  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 36  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 37  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 38  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 39  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 40  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 41  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 42  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 43  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 44  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 45  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
268 [State 249] @0x080499bf, left buffer range after 45 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
268 [State 249] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
268 [State 249] Terminating state 249 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
268 [State 249] Switching from state 249 to state 0
Copied 34928 (count=1)
Deleting state 249 0x0x26453450
268 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 248
>> fuzzInit: datum forking for value 249
>> fuzzInit: datum forking for value 249
268 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 249)
        (ReadLSB w32 0 v249_fuzz_symb_249)))
    state 250 with condition (Not (Eq false
         (Eq (w32 249)
             (ReadLSB w32 0 v249_fuzz_symb_249))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-249-8048a0e
Size=2 Low=0 splitIndex=1 high=1
268 [State 0] Switching from state 0 to state 250
Copied 34928 (count=1)
Finalizing TB execution 250
s2e_dummyMainFunction
tcg-llvm-tb-249-8048a0e
269 [State 250] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 249 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f09: 90                                 nop                      nextPC: 0xbfb76f0a
  2  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  3  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  4  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  5  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  6  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  7  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  8  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  9  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
 10  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 11  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 12  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 13  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 14  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 15  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 16  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 17  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 18  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 19  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 20  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 21  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 22  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 23  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 24  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 25  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 26  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 27  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 28  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 29  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 30  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 31  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 32  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 33  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 34  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 35  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 36  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 37  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 38  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 39  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 40  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 41  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 42  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 43  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 44  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
269 [State 250] @0x080499bf, left buffer range after 44 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
269 [State 250] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
269 [State 250] Terminating state 250 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
269 [State 250] Switching from state 250 to state 0
Copied 34928 (count=1)
Deleting state 250 0x0x26453450
Firing timer event
269 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 249
>> fuzzInit: datum forking for value 250
>> fuzzInit: datum forking for value 250
269 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 250)
        (ReadLSB w32 0 v250_fuzz_symb_250)))
    state 251 with condition (Not (Eq false
         (Eq (w32 250)
             (ReadLSB w32 0 v250_fuzz_symb_250))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-250-8048a0e
Size=2 Low=0 splitIndex=1 high=1
269 [State 0] Switching from state 0 to state 251
Copied 34928 (count=1)
Finalizing TB execution 251
s2e_dummyMainFunction
tcg-llvm-tb-250-8048a0e
269 [State 251] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 250 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f0a: 90                                 nop                      nextPC: 0xbfb76f0b
  2  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  3  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  4  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  5  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  6  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  7  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  8  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  9  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
 10  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 11  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 12  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 13  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 14  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 15  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 16  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 17  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 18  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 19  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 20  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 21  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 22  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 23  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 24  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 25  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 26  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 27  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 28  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 29  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 30  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 31  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 32  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 33  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 34  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 35  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 36  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 37  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 38  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 39  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 40  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 41  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 42  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 43  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
270 [State 251] @0x080499bf, left buffer range after 43 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
270 [State 251] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
270 [State 251] Terminating state 251 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
270 [State 251] Switching from state 251 to state 0
Copied 34928 (count=1)
Deleting state 251 0x0x266fec10
270 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 250
>> fuzzInit: datum forking for value 251
>> fuzzInit: datum forking for value 251
270 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 251)
        (ReadLSB w32 0 v251_fuzz_symb_251)))
    state 252 with condition (Not (Eq false
         (Eq (w32 251)
             (ReadLSB w32 0 v251_fuzz_symb_251))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-251-8048a0e
Size=2 Low=0 splitIndex=1 high=1
270 [State 0] Switching from state 0 to state 252
Copied 34928 (count=1)
Finalizing TB execution 252
s2e_dummyMainFunction
tcg-llvm-tb-251-8048a0e
Firing timer event
270 [State 252] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 251 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f0b: 90                                 nop                      nextPC: 0xbfb76f0c
  2  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  3  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  4  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  5  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  6  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  7  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  8  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  9  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
 10  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 11  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 12  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 13  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 14  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 15  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 16  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 17  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 18  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 19  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 20  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 21  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 22  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 23  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 24  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 25  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 26  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 27  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 28  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 29  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 30  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 31  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 32  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 33  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 34  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 35  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 36  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 37  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 38  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 39  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 40  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 41  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 42  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
270 [State 252] @0x080499bf, left buffer range after 42 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
270 [State 252] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
270 [State 252] Terminating state 252 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
270 [State 252] Switching from state 252 to state 0
Copied 34928 (count=1)
Deleting state 252 0x0x266fec10
271 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 251
>> fuzzInit: datum forking for value 252
>> fuzzInit: datum forking for value 252
271 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 252)
        (ReadLSB w32 0 v252_fuzz_symb_252)))
    state 253 with condition (Not (Eq false
         (Eq (w32 252)
             (ReadLSB w32 0 v252_fuzz_symb_252))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-252-8048a0e
Size=2 Low=0 splitIndex=1 high=1
271 [State 0] Switching from state 0 to state 253
Copied 34928 (count=1)
Finalizing TB execution 253
s2e_dummyMainFunction
tcg-llvm-tb-252-8048a0e
271 [State 253] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 252 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f0c: 90                                 nop                      nextPC: 0xbfb76f0d
  2  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  3  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  4  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  5  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  6  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  7  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  8  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  9  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
 10  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 11  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 12  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 13  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 14  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 15  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 16  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 17  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 18  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 19  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 20  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 21  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 22  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 23  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 24  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 25  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 26  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 27  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 28  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 29  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 30  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 31  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 32  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 33  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 34  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 35  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 36  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 37  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 38  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 39  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 40  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 41  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
271 [State 253] @0x080499bf, left buffer range after 41 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
271 [State 253] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
271 [State 253] Terminating state 253 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
271 [State 253] Switching from state 253 to state 0
Copied 34928 (count=1)
Deleting state 253 0x0x266fec10
271 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 252
>> fuzzInit: datum forking for value 253
>> fuzzInit: datum forking for value 253
272 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 253)
        (ReadLSB w32 0 v253_fuzz_symb_253)))
    state 254 with condition (Not (Eq false
         (Eq (w32 253)
             (ReadLSB w32 0 v253_fuzz_symb_253))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-253-8048a0e
Size=2 Low=0 splitIndex=1 high=1
272 [State 0] Switching from state 0 to state 254
Copied 34928 (count=1)
Finalizing TB execution 254
s2e_dummyMainFunction
tcg-llvm-tb-253-8048a0e
272 [State 254] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 253 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f0d: 90                                 nop                      nextPC: 0xbfb76f0e
  2  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  3  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  4  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  5  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  6  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  7  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  8  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  9  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
 10  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 11  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 12  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 13  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 14  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 15  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 16  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 17  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 18  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 19  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 20  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 21  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 22  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 23  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 24  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 25  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 26  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 27  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 28  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 29  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 30  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 31  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 32  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 33  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 34  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
Firing timer event
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 35  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 36  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 37  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 38  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 39  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 40  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
272 [State 254] @0x080499bf, left buffer range after 40 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
272 [State 254] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
272 [State 254] Terminating state 254 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
272 [State 254] Switching from state 254 to state 0
Copied 34928 (count=1)
Deleting state 254 0x0x266fec10
272 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 253
>> fuzzInit: datum forking for value 254
>> fuzzInit: datum forking for value 254
272 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 254)
        (ReadLSB w32 0 v254_fuzz_symb_254)))
    state 255 with condition (Not (Eq false
         (Eq (w32 254)
             (ReadLSB w32 0 v254_fuzz_symb_254))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-254-8048a0e
Size=2 Low=0 splitIndex=1 high=1
273 [State 0] Switching from state 0 to state 255
Copied 34928 (count=1)
Finalizing TB execution 255
s2e_dummyMainFunction
tcg-llvm-tb-254-8048a0e
273 [State 255] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 254 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f0e: 90                                 nop                      nextPC: 0xbfb76f0f
  2  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  3  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  4  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  5  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  6  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  7  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  8  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  9  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
 10  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 11  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 12  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 13  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 14  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 15  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 16  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 17  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 18  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 19  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 20  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 21  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 22  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 23  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 24  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 25  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 26  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 27  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 28  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 29  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 30  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 31  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 32  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 33  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 34  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 35  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 36  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 37  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 38  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 39  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
273 [State 255] @0x080499bf, left buffer range after 39 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
273 [State 255] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
273 [State 255] Terminating state 255 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
273 [State 255] Switching from state 255 to state 0
Copied 34928 (count=1)
Deleting state 255 0x0x266fec10
Firing timer event
273 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 254
>> fuzzInit: datum forking for value 255
>> fuzzInit: datum forking for value 255
273 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 255)
        (ReadLSB w32 0 v255_fuzz_symb_255)))
    state 256 with condition (Not (Eq false
         (Eq (w32 255)
             (ReadLSB w32 0 v255_fuzz_symb_255))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-255-8048a0e
Size=2 Low=0 splitIndex=1 high=1
273 [State 0] Switching from state 0 to state 256
Copied 34928 (count=1)
Finalizing TB execution 256
s2e_dummyMainFunction
tcg-llvm-tb-255-8048a0e
274 [State 256] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 255 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f0f: 90                                 nop                      nextPC: 0xbfb76f10
  2  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  3  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  4  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  5  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  6  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  7  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  8  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  9  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
 10  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 11  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 12  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 13  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 14  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 15  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 16  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 17  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 18  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 19  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 20  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 21  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 22  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 23  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 24  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 25  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 26  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 27  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 28  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 29  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 30  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 31  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 32  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 33  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 34  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 35  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 36  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 37  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 38  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
274 [State 256] @0x080499bf, left buffer range after 38 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
274 [State 256] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
274 [State 256] Terminating state 256 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
274 [State 256] Switching from state 256 to state 0
Copied 34928 (count=1)
Deleting state 256 0x0x268b5880
Firing timer event
274 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 255
>> fuzzInit: datum forking for value 256
>> fuzzInit: datum forking for value 256
274 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 256)
        (ReadLSB w32 0 v256_fuzz_symb_256)))
    state 257 with condition (Not (Eq false
         (Eq (w32 256)
             (ReadLSB w32 0 v256_fuzz_symb_256))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-256-8048a0e
Size=2 Low=0 splitIndex=1 high=1
274 [State 0] Switching from state 0 to state 257
Copied 34928 (count=1)
Finalizing TB execution 257
s2e_dummyMainFunction
tcg-llvm-tb-256-8048a0e
274 [State 257] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 256 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f10: 90                                 nop                      nextPC: 0xbfb76f11
  2  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  3  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  4  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  5  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  6  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  7  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  8  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  9  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
 10  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 11  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 12  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 13  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 14  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 15  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 16  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 17  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 18  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 19  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 20  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 21  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 22  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 23  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 24  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 25  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 26  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 27  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 28  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 29  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 30  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 31  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 32  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 33  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 34  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 35  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 36  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 37  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
275 [State 257] @0x080499bf, left buffer range after 37 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
275 [State 257] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
275 [State 257] Terminating state 257 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
275 [State 257] Switching from state 257 to state 0
Copied 34928 (count=1)
Deleting state 257 0x0x2671cc90
275 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 256
>> fuzzInit: datum forking for value 257
>> fuzzInit: datum forking for value 257
275 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 257)
        (ReadLSB w32 0 v257_fuzz_symb_257)))
    state 258 with condition (Not (Eq false
         (Eq (w32 257)
             (ReadLSB w32 0 v257_fuzz_symb_257))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-257-8048a0e
Size=2 Low=0 splitIndex=1 high=1
275 [State 0] Switching from state 0 to state 258
Copied 34928 (count=1)
Finalizing TB execution 258
s2e_dummyMainFunction
tcg-llvm-tb-257-8048a0e
Firing timer event
275 [State 258] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 257 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f11: 90                                 nop                      nextPC: 0xbfb76f12
  2  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  3  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  4  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  5  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  6  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  7  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  8  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  9  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
 10  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 11  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 12  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 13  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 14  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 15  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 16  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 17  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 18  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 19  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 20  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 21  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 22  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 23  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 24  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 25  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 26  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 27  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 28  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 29  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 30  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 31  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 32  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 33  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 34  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 35  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 36  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
275 [State 258] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
275 [State 258] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
275 [State 258] Terminating state 258 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
275 [State 258] Switching from state 258 to state 0
Copied 34928 (count=1)
Deleting state 258 0x0x2671cc90
276 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 257
>> fuzzInit: datum forking for value 258
>> fuzzInit: datum forking for value 258
276 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 258)
        (ReadLSB w32 0 v258_fuzz_symb_258)))
    state 259 with condition (Not (Eq false
         (Eq (w32 258)
             (ReadLSB w32 0 v258_fuzz_symb_258))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-258-8048a0e
Size=2 Low=0 splitIndex=1 high=1
276 [State 0] Switching from state 0 to state 259
Copied 34928 (count=1)
Finalizing TB execution 259
s2e_dummyMainFunction
tcg-llvm-tb-258-8048a0e
276 [State 259] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 258 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f12: 90                                 nop                      nextPC: 0xbfb76f13
  2  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  3  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  4  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  5  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  6  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  7  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  8  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  9  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
 10  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 11  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 12  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 13  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 14  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 15  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 16  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 17  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 18  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 19  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 20  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 21  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 22  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 23  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 24  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 25  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 26  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 27  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 28  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 29  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 30  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 31  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 32  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 33  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 34  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 35  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
276 [State 259] @0x080499bf, left buffer range after 35 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
276 [State 259] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
276 [State 259] Terminating state 259 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
276 [State 259] Switching from state 259 to state 0
Copied 34928 (count=1)
Deleting state 259 0x0x2671cc90
276 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 258
>> fuzzInit: datum forking for value 259
>> fuzzInit: datum forking for value 259
277 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 259)
        (ReadLSB w32 0 v259_fuzz_symb_259)))
    state 260 with condition (Not (Eq false
         (Eq (w32 259)
             (ReadLSB w32 0 v259_fuzz_symb_259))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-259-8048a0e
Size=2 Low=0 splitIndex=1 high=1
277 [State 0] Switching from state 0 to state 260
Copied 34928 (count=1)
Finalizing TB execution 260
s2e_dummyMainFunction
tcg-llvm-tb-259-8048a0e
277 [State 260] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 259 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f13: 90                                 nop                      nextPC: 0xbfb76f14
  2  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  3  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  4  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  5  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  6  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  7  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  8  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  9  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
 10  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 11  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 12  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 13  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 14  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 15  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 16  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 17  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 18  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 19  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 20  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 21  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 22  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 23  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 24  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 25  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 26  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 27  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 28  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 29  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 30  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 31  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 32  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 33  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 34  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
277 [State 260] @0x080499bf, left buffer range after 34 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
277 [State 260] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
277 [State 260] Terminating state 260 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
277 [State 260] Switching from state 260 to state 0
Copied 34928 (count=1)
Deleting state 260 0x0x2671cc90
Firing timer event
277 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 259
>> fuzzInit: datum forking for value 260
>> fuzzInit: datum forking for value 260
277 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 260)
        (ReadLSB w32 0 v260_fuzz_symb_260)))
    state 261 with condition (Not (Eq false
         (Eq (w32 260)
             (ReadLSB w32 0 v260_fuzz_symb_260))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-260-8048a0e
Size=2 Low=0 splitIndex=1 high=1
277 [State 0] Switching from state 0 to state 261
Copied 34928 (count=1)
Finalizing TB execution 261
s2e_dummyMainFunction
tcg-llvm-tb-260-8048a0e
278 [State 261] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 260 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f14: 90                                 nop                      nextPC: 0xbfb76f15
  2  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  3  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  4  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  5  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  6  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  7  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  8  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  9  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
 10  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 11  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 12  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 13  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 14  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 15  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 16  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 17  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 18  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 19  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 20  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 21  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 22  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 23  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 24  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 25  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 26  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 27  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 28  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 29  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 30  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 31  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 32  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 33  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
278 [State 261] @0x080499bf, left buffer range after 33 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
278 [State 261] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
278 [State 261] Terminating state 261 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
278 [State 261] Switching from state 261 to state 0
Copied 34928 (count=1)
Deleting state 261 0x0x2693b6e0
278 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 260
>> fuzzInit: datum forking for value 261
>> fuzzInit: datum forking for value 261
278 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 261)
        (ReadLSB w32 0 v261_fuzz_symb_261)))
    state 262 with condition (Not (Eq false
         (Eq (w32 261)
             (ReadLSB w32 0 v261_fuzz_symb_261))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-261-8048a0e
Size=2 Low=0 splitIndex=1 high=1
278 [State 0] Switching from state 0 to state 262
Copied 34928 (count=1)
Finalizing TB execution 262
s2e_dummyMainFunction
tcg-llvm-tb-261-8048a0e
Firing timer event
278 [State 262] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 261 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f15: 90                                 nop                      nextPC: 0xbfb76f16
  2  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  3  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  4  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  5  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  6  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  7  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  8  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  9  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
 10  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 11  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 12  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 13  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 14  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 15  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 16  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 17  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 18  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 19  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 20  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 21  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 22  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 23  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 24  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 25  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 26  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 27  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 28  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 29  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 30  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 31  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 32  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
279 [State 262] @0x080499bf, left buffer range after 32 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
279 [State 262] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
279 [State 262] Terminating state 262 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
279 [State 262] Switching from state 262 to state 0
Copied 34928 (count=1)
Deleting state 262 0x0x268bb900
279 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 261
>> fuzzInit: datum forking for value 262
>> fuzzInit: datum forking for value 262
279 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 262)
        (ReadLSB w32 0 v262_fuzz_symb_262)))
    state 263 with condition (Not (Eq false
         (Eq (w32 262)
             (ReadLSB w32 0 v262_fuzz_symb_262))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-262-8048a0e
Size=2 Low=0 splitIndex=1 high=1
279 [State 0] Switching from state 0 to state 263
Copied 34928 (count=1)
Finalizing TB execution 263
s2e_dummyMainFunction
tcg-llvm-tb-262-8048a0e
279 [State 263] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 262 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f16: 90                                 nop                      nextPC: 0xbfb76f17
  2  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  3  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  4  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  5  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  6  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  7  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  8  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  9  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
 10  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 11  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 12  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 13  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 14  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 15  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 16  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 17  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 18  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 19  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 20  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 21  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 22  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 23  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 24  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 25  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 26  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 27  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 28  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 29  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 30  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 31  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
279 [State 263] @0x080499bf, left buffer range after 31 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
279 [State 263] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
279 [State 263] Terminating state 263 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
279 [State 263] Switching from state 263 to state 0
Copied 34928 (count=1)
Deleting state 263 0x0x26a6e580
280 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 262
>> fuzzInit: datum forking for value 263
>> fuzzInit: datum forking for value 263
280 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 263)
        (ReadLSB w32 0 v263_fuzz_symb_263)))
    state 264 with condition (Not (Eq false
         (Eq (w32 263)
             (ReadLSB w32 0 v263_fuzz_symb_263))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-263-8048a0e
Size=2 Low=0 splitIndex=1 high=1
280 [State 0] Switching from state 0 to state 264
Copied 34928 (count=1)
Finalizing TB execution 264
s2e_dummyMainFunction
tcg-llvm-tb-263-8048a0e
280 [State 264] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 263 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f17: 90                                 nop                      nextPC: 0xbfb76f18
  2  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  3  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  4  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  5  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  6  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  7  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  8  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  9  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
 10  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 11  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 12  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 13  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 14  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 15  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 16  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 17  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 18  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 19  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 20  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 21  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 22  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 23  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 24  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 25  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 26  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 27  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 28  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 29  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 30  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
280 [State 264] @0x080499bf, left buffer range after 30 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
280 [State 264] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
280 [State 264] Terminating state 264 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
280 [State 264] Switching from state 264 to state 0
Copied 34928 (count=1)
Deleting state 264 0x0x26a6e580
Firing timer event
280 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 263
>> fuzzInit: datum forking for value 264
>> fuzzInit: datum forking for value 264
281 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 264)
        (ReadLSB w32 0 v264_fuzz_symb_264)))
    state 265 with condition (Not (Eq false
         (Eq (w32 264)
             (ReadLSB w32 0 v264_fuzz_symb_264))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-264-8048a0e
Size=2 Low=0 splitIndex=1 high=1
281 [State 0] Switching from state 0 to state 265
Copied 34928 (count=1)
Finalizing TB execution 265
s2e_dummyMainFunction
tcg-llvm-tb-264-8048a0e
281 [State 265] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 264 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f18: 90                                 nop                      nextPC: 0xbfb76f19
  2  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  3  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  4  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  5  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  6  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  7  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  8  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  9  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
 10  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 11  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 12  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 13  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 14  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 15  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 16  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 17  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 18  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 19  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 20  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 21  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 22  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 23  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 24  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 25  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 26  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 27  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 28  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 29  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
281 [State 265] @0x080499bf, left buffer range after 29 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
281 [State 265] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
281 [State 265] Terminating state 265 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
281 [State 265] Switching from state 265 to state 0
Copied 34928 (count=1)
Deleting state 265 0x0x26b1b500
281 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 264
>> fuzzInit: datum forking for value 265
>> fuzzInit: datum forking for value 265
281 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 265)
        (ReadLSB w32 0 v265_fuzz_symb_265)))
    state 266 with condition (Not (Eq false
         (Eq (w32 265)
             (ReadLSB w32 0 v265_fuzz_symb_265))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-265-8048a0e
Size=2 Low=0 splitIndex=1 high=1
281 [State 0] Switching from state 0 to state 266
Copied 34928 (count=1)
Finalizing TB execution 266
s2e_dummyMainFunction
tcg-llvm-tb-265-8048a0e
Firing timer event
282 [State 266] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 265 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f19: 90                                 nop                      nextPC: 0xbfb76f1a
  2  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  3  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  4  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  5  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  6  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  7  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  8  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  9  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
 10  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 11  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 12  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 13  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 14  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 15  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 16  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 17  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 18  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 19  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 20  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 21  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 22  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 23  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 24  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 25  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 26  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 27  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 28  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
282 [State 266] @0x080499bf, left buffer range after 28 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
282 [State 266] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
282 [State 266] Terminating state 266 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
282 [State 266] Switching from state 266 to state 0
Copied 34928 (count=1)
Deleting state 266 0x0x26b1b500
282 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 265
>> fuzzInit: datum forking for value 266
>> fuzzInit: datum forking for value 266
282 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 266)
        (ReadLSB w32 0 v266_fuzz_symb_266)))
    state 267 with condition (Not (Eq false
         (Eq (w32 266)
             (ReadLSB w32 0 v266_fuzz_symb_266))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-266-8048a0e
Size=2 Low=0 splitIndex=1 high=1
282 [State 0] Switching from state 0 to state 267
Copied 34928 (count=1)
Finalizing TB execution 267
s2e_dummyMainFunction
tcg-llvm-tb-266-8048a0e
282 [State 267] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 266 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f1a: 90                                 nop                      nextPC: 0xbfb76f1b
  2  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  3  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  4  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  5  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  6  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  7  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  8  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  9  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
 10  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 11  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 12  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 13  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 14  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 15  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 16  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 17  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 18  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 19  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 20  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 21  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 22  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 23  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 24  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 25  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 26  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 27  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
283 [State 267] @0x080499bf, left buffer range after 27 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
283 [State 267] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
283 [State 267] Terminating state 267 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
283 [State 267] Switching from state 267 to state 0
Copied 34928 (count=1)
Deleting state 267 0x0x26b1b500
283 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 266
>> fuzzInit: datum forking for value 267
>> fuzzInit: datum forking for value 267
283 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 267)
        (ReadLSB w32 0 v267_fuzz_symb_267)))
    state 268 with condition (Not (Eq false
         (Eq (w32 267)
             (ReadLSB w32 0 v267_fuzz_symb_267))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-267-8048a0e
Size=2 Low=0 splitIndex=1 high=1
283 [State 0] Switching from state 0 to state 268
Copied 34928 (count=1)
Finalizing TB execution 268
s2e_dummyMainFunction
tcg-llvm-tb-267-8048a0e
283 [State 268] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 267 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f1b: 90                                 nop                      nextPC: 0xbfb76f1c
  2  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  3  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  4  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  5  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  6  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  7  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  8  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  9  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
 10  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 11  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 12  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 13  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 14  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 15  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 16  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 17  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 18  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 19  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 20  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 21  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 22  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 23  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 24  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 25  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 26  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
Firing timer event
283 [State 268] @0x080499bf, left buffer range after 26 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
283 [State 268] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
283 [State 268] Terminating state 268 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
283 [State 268] Switching from state 268 to state 0
Copied 34928 (count=1)
Deleting state 268 0x0x26c889c0
284 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 267
>> fuzzInit: datum forking for value 268
>> fuzzInit: datum forking for value 268
284 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 268)
        (ReadLSB w32 0 v268_fuzz_symb_268)))
    state 269 with condition (Not (Eq false
         (Eq (w32 268)
             (ReadLSB w32 0 v268_fuzz_symb_268))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-268-8048a0e
Size=2 Low=0 splitIndex=1 high=1
284 [State 0] Switching from state 0 to state 269
Copied 34928 (count=1)
Finalizing TB execution 269
s2e_dummyMainFunction
tcg-llvm-tb-268-8048a0e
284 [State 269] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 268 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f1c: 90                                 nop                      nextPC: 0xbfb76f1d
  2  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  3  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  4  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  5  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  6  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  7  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  8  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  9  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
 10  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 11  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 12  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 13  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 14  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 15  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 16  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 17  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 18  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 19  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 20  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 21  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 22  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 23  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 24  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 25  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
284 [State 269] @0x080499bf, left buffer range after 25 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
284 [State 269] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
284 [State 269] Terminating state 269 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
284 [State 269] Switching from state 269 to state 0
Copied 34928 (count=1)
Deleting state 269 0x0x26c889c0
Firing timer event
284 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 268
>> fuzzInit: datum forking for value 269
>> fuzzInit: datum forking for value 269
285 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 269)
        (ReadLSB w32 0 v269_fuzz_symb_269)))
    state 270 with condition (Not (Eq false
         (Eq (w32 269)
             (ReadLSB w32 0 v269_fuzz_symb_269))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-269-8048a0e
Size=2 Low=0 splitIndex=1 high=1
285 [State 0] Switching from state 0 to state 270
Copied 34928 (count=1)
Finalizing TB execution 270
s2e_dummyMainFunction
tcg-llvm-tb-269-8048a0e
285 [State 270] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 269 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f1d: 90                                 nop                      nextPC: 0xbfb76f1e
  2  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  3  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  4  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  5  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  6  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  7  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  8  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  9  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
 10  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 11  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 12  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 13  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 14  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 15  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 16  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 17  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 18  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 19  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 20  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 21  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 22  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 23  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 24  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
285 [State 270] @0x080499bf, left buffer range after 24 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
285 [State 270] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
285 [State 270] Terminating state 270 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
285 [State 270] Switching from state 270 to state 0
Copied 34928 (count=1)
Deleting state 270 0x0x26c889c0
285 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 269
>> fuzzInit: datum forking for value 270
>> fuzzInit: datum forking for value 270
285 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 270)
        (ReadLSB w32 0 v270_fuzz_symb_270)))
    state 271 with condition (Not (Eq false
         (Eq (w32 270)
             (ReadLSB w32 0 v270_fuzz_symb_270))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-270-8048a0e
Size=2 Low=0 splitIndex=1 high=1
285 [State 0] Switching from state 0 to state 271
Copied 34928 (count=1)
Finalizing TB execution 271
s2e_dummyMainFunction
tcg-llvm-tb-270-8048a0e
Firing timer event
286 [State 271] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 270 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f1e: 90                                 nop                      nextPC: 0xbfb76f1f
  2  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  3  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  4  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  5  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  6  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  7  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  8  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  9  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
 10  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 11  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 12  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 13  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 14  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 15  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 16  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 17  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 18  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 19  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 20  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 21  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 22  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 23  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
286 [State 271] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
286 [State 271] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
286 [State 271] Terminating state 271 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
286 [State 271] Switching from state 271 to state 0
Copied 34928 (count=1)
Deleting state 271 0x0x26c889c0
286 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 270
>> fuzzInit: datum forking for value 271
>> fuzzInit: datum forking for value 271
286 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 271)
        (ReadLSB w32 0 v271_fuzz_symb_271)))
    state 272 with condition (Not (Eq false
         (Eq (w32 271)
             (ReadLSB w32 0 v271_fuzz_symb_271))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-271-8048a0e
Size=2 Low=0 splitIndex=1 high=1
286 [State 0] Switching from state 0 to state 272
Copied 34928 (count=1)
Finalizing TB execution 272
s2e_dummyMainFunction
tcg-llvm-tb-271-8048a0e
286 [State 272] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 271 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f1f: 90                                 nop                      nextPC: 0xbfb76f20
  2  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  3  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  4  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  5  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  6  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  7  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  8  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  9  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
 10  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 11  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 12  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 13  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 14  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 15  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 16  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 17  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 18  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 19  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 20  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 21  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 22  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
287 [State 272] @0x080499bf, left buffer range after 22 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
287 [State 272] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
287 [State 272] Terminating state 272 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
287 [State 272] Switching from state 272 to state 0
Copied 34928 (count=1)
Deleting state 272 0x0x26dc3e00
287 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 271
>> fuzzInit: datum forking for value 272
>> fuzzInit: datum forking for value 272
287 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 272)
        (ReadLSB w32 0 v272_fuzz_symb_272)))
    state 273 with condition (Not (Eq false
         (Eq (w32 272)
             (ReadLSB w32 0 v272_fuzz_symb_272))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-272-8048a0e
Size=2 Low=0 splitIndex=1 high=1
287 [State 0] Switching from state 0 to state 273
Copied 34928 (count=1)
Finalizing TB execution 273
s2e_dummyMainFunction
tcg-llvm-tb-272-8048a0e
287 [State 273] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 272 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f20: 90                                 nop                      nextPC: 0xbfb76f21
  2  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  3  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  4  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  5  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  6  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  7  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  8  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  9  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
 10  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 11  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 12  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 13  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 14  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 15  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 16  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 17  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 18  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 19  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 20  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 21  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
288 [State 273] @0x080499bf, left buffer range after 21 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
288 [State 273] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
288 [State 273] Terminating state 273 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
288 [State 273] Switching from state 273 to state 0
Copied 34928 (count=1)
Deleting state 273 0x0x26d44bc0
288 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 272
>> fuzzInit: datum forking for value 273
>> fuzzInit: datum forking for value 273
288 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 273)
        (ReadLSB w32 0 v273_fuzz_symb_273)))
    state 274 with condition (Not (Eq false
         (Eq (w32 273)
             (ReadLSB w32 0 v273_fuzz_symb_273))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-273-8048a0e
Size=2 Low=0 splitIndex=1 high=1
288 [State 0] Switching from state 0 to state 274
Copied 34928 (count=1)
Finalizing TB execution 274
s2e_dummyMainFunction
tcg-llvm-tb-273-8048a0e
288 [State 274] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 273 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f21: 90                                 nop                      nextPC: 0xbfb76f22
  2  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  3  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  4  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  5  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  6  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  7  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  8  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  9  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
 10  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 11  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 12  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 13  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 14  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 15  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 16  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 17  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 18  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 19  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 20  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
Firing timer event
289 [State 274] @0x080499bf, left buffer range after 20 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
289 [State 274] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
289 [State 274] Terminating state 274 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
289 [State 274] Switching from state 274 to state 0
Copied 34928 (count=1)
Deleting state 274 0x0x26d44bc0
289 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 273
>> fuzzInit: datum forking for value 274
>> fuzzInit: datum forking for value 274
289 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 274)
        (ReadLSB w32 0 v274_fuzz_symb_274)))
    state 275 with condition (Not (Eq false
         (Eq (w32 274)
             (ReadLSB w32 0 v274_fuzz_symb_274))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-274-8048a0e
Size=2 Low=0 splitIndex=1 high=1
289 [State 0] Switching from state 0 to state 275
Copied 34928 (count=1)
Finalizing TB execution 275
s2e_dummyMainFunction
tcg-llvm-tb-274-8048a0e
289 [State 275] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 274 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f22: 90                                 nop                      nextPC: 0xbfb76f23
  2  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  3  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  4  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  5  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  6  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  7  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  8  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  9  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
 10  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 11  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 12  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 13  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 14  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 15  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 16  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 17  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 18  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 19  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
289 [State 275] @0x080499bf, left buffer range after 19 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
289 [State 275] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
289 [State 275] Terminating state 275 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
289 [State 275] Switching from state 275 to state 0
Copied 34928 (count=1)
Deleting state 275 0x0x26d44bc0
Firing timer event
290 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 274
>> fuzzInit: datum forking for value 275
>> fuzzInit: datum forking for value 275
290 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 275)
        (ReadLSB w32 0 v275_fuzz_symb_275)))
    state 276 with condition (Not (Eq false
         (Eq (w32 275)
             (ReadLSB w32 0 v275_fuzz_symb_275))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-275-8048a0e
Size=2 Low=0 splitIndex=1 high=1
290 [State 0] Switching from state 0 to state 276
Copied 34928 (count=1)
Finalizing TB execution 276
s2e_dummyMainFunction
tcg-llvm-tb-275-8048a0e
290 [State 276] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 275 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f23: 90                                 nop                      nextPC: 0xbfb76f24
  2  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  3  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  4  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  5  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  6  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  7  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  8  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  9  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
 10  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 11  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 12  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 13  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 14  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 15  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 16  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 17  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 18  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
290 [State 276] @0x080499bf, left buffer range after 18 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
290 [State 276] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
290 [State 276] Terminating state 276 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
290 [State 276] Switching from state 276 to state 0
Copied 34928 (count=1)
Deleting state 276 0x0x26d44bc0
290 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 275
>> fuzzInit: datum forking for value 276
>> fuzzInit: datum forking for value 276
291 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 276)
        (ReadLSB w32 0 v276_fuzz_symb_276)))
    state 277 with condition (Not (Eq false
         (Eq (w32 276)
             (ReadLSB w32 0 v276_fuzz_symb_276))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-276-8048a0e
Size=2 Low=0 splitIndex=1 high=1
291 [State 0] Switching from state 0 to state 277
Copied 34928 (count=1)
Finalizing TB execution 277
s2e_dummyMainFunction
tcg-llvm-tb-276-8048a0e
Firing timer event
291 [State 277] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 276 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f24: 90                                 nop                      nextPC: 0xbfb76f25
  2  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  3  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  4  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  5  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  6  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  7  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  8  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  9  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
 10  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 11  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 12  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 13  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 14  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 15  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 16  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 17  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
291 [State 277] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
291 [State 277] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
291 [State 277] Terminating state 277 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
291 [State 277] Switching from state 277 to state 0
Copied 34928 (count=1)
Deleting state 277 0x0x26d44bc0
291 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 276
>> fuzzInit: datum forking for value 277
>> fuzzInit: datum forking for value 277
292 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 277)
        (ReadLSB w32 0 v277_fuzz_symb_277)))
    state 278 with condition (Not (Eq false
         (Eq (w32 277)
             (ReadLSB w32 0 v277_fuzz_symb_277))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-277-8048a0e
Size=2 Low=0 splitIndex=1 high=1
292 [State 0] Switching from state 0 to state 278
Copied 34928 (count=1)
Finalizing TB execution 278
s2e_dummyMainFunction
tcg-llvm-tb-277-8048a0e
Firing timer event
292 [State 278] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 277 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f25: 90                                 nop                      nextPC: 0xbfb76f26
  2  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  3  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  4  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  5  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  6  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  7  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  8  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  9  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
 10  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 11  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 12  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 13  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 14  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 15  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 16  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
292 [State 278] @0x080499bf, left buffer range after 16 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
292 [State 278] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
292 [State 278] Terminating state 278 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
292 [State 278] Switching from state 278 to state 0
Copied 34928 (count=1)
Deleting state 278 0x0x26d44bc0
292 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 277
>> fuzzInit: datum forking for value 278
>> fuzzInit: datum forking for value 278
292 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 278)
        (ReadLSB w32 0 v278_fuzz_symb_278)))
    state 279 with condition (Not (Eq false
         (Eq (w32 278)
             (ReadLSB w32 0 v278_fuzz_symb_278))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-278-8048a0e
Size=2 Low=0 splitIndex=1 high=1
292 [State 0] Switching from state 0 to state 279
Copied 34928 (count=1)
Finalizing TB execution 279
s2e_dummyMainFunction
tcg-llvm-tb-278-8048a0e
292 [State 279] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 278 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f26: 90                                 nop                      nextPC: 0xbfb76f27
  2  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  3  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  4  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  5  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  6  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  7  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  8  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  9  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
 10  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 11  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 12  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 13  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 14  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 15  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
293 [State 279] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
293 [State 279] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
293 [State 279] Terminating state 279 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
293 [State 279] Switching from state 279 to state 0
Copied 34928 (count=1)
Deleting state 279 0x0x26d44bc0
Firing timer event
293 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 278
>> fuzzInit: datum forking for value 279
>> fuzzInit: datum forking for value 279
293 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 279)
        (ReadLSB w32 0 v279_fuzz_symb_279)))
    state 280 with condition (Not (Eq false
         (Eq (w32 279)
             (ReadLSB w32 0 v279_fuzz_symb_279))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-279-8048a0e
Size=2 Low=0 splitIndex=1 high=1
293 [State 0] Switching from state 0 to state 280
Copied 34928 (count=1)
Finalizing TB execution 280
s2e_dummyMainFunction
tcg-llvm-tb-279-8048a0e
293 [State 280] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 279 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f27: 90                                 nop                      nextPC: 0xbfb76f28
  2  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  3  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  4  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  5  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  6  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  7  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  8  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  9  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
 10  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 11  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 12  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 13  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 14  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
293 [State 280] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
293 [State 280] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
293 [State 280] Terminating state 280 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
293 [State 280] Switching from state 280 to state 0
Copied 34928 (count=1)
Deleting state 280 0x0x26cd95a0
294 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 279
>> fuzzInit: datum forking for value 280
>> fuzzInit: datum forking for value 280
294 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 280)
        (ReadLSB w32 0 v280_fuzz_symb_280)))
    state 281 with condition (Not (Eq false
         (Eq (w32 280)
             (ReadLSB w32 0 v280_fuzz_symb_280))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-280-8048a0e
Size=2 Low=0 splitIndex=1 high=1
294 [State 0] Switching from state 0 to state 281
Copied 34928 (count=1)
Finalizing TB execution 281
s2e_dummyMainFunction
tcg-llvm-tb-280-8048a0e
Firing timer event
294 [State 281] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 280 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f28: 90                                 nop                      nextPC: 0xbfb76f29
  2  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  3  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  4  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  5  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  6  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  7  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  8  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  9  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
 10  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 11  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 12  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 13  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
294 [State 281] @0x080499bf, left buffer range after 13 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
294 [State 281] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
294 [State 281] Terminating state 281 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
294 [State 281] Switching from state 281 to state 0
Copied 34928 (count=1)
Deleting state 281 0x0x26cd95a0
294 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 280
>> fuzzInit: datum forking for value 281
>> fuzzInit: datum forking for value 281
295 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 281)
        (ReadLSB w32 0 v281_fuzz_symb_281)))
    state 282 with condition (Not (Eq false
         (Eq (w32 281)
             (ReadLSB w32 0 v281_fuzz_symb_281))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-281-8048a0e
Size=2 Low=0 splitIndex=1 high=1
295 [State 0] Switching from state 0 to state 282
Copied 34928 (count=1)
Finalizing TB execution 282
s2e_dummyMainFunction
tcg-llvm-tb-281-8048a0e
295 [State 282] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 281 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f29: 90                                 nop                      nextPC: 0xbfb76f2a
  2  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  3  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  4  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  5  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  6  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  7  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  8  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  9  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
 10  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 11  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 12  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
295 [State 282] @0x080499bf, left buffer range after 12 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
295 [State 282] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
295 [State 282] Terminating state 282 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
295 [State 282] Switching from state 282 to state 0
Copied 34928 (count=1)
Deleting state 282 0x0x26cd95a0
295 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 281
>> fuzzInit: datum forking for value 282
>> fuzzInit: datum forking for value 282
296 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 282)
        (ReadLSB w32 0 v282_fuzz_symb_282)))
    state 283 with condition (Not (Eq false
         (Eq (w32 282)
             (ReadLSB w32 0 v282_fuzz_symb_282))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-282-8048a0e
Size=2 Low=0 splitIndex=1 high=1
296 [State 0] Switching from state 0 to state 283
Copied 34928 (count=1)
Finalizing TB execution 283
s2e_dummyMainFunction
tcg-llvm-tb-282-8048a0e
Firing timer event
296 [State 283] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 282 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f2a: 90                                 nop                      nextPC: 0xbfb76f2b
  2  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  3  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  4  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  5  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  6  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  7  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  8  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  9  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
 10  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 11  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
296 [State 283] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
296 [State 283] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
296 [State 283] Terminating state 283 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
296 [State 283] Switching from state 283 to state 0
Copied 34928 (count=1)
Deleting state 283 0x0x26cd95a0
296 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 282
>> fuzzInit: datum forking for value 283
>> fuzzInit: datum forking for value 283
297 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 283)
        (ReadLSB w32 0 v283_fuzz_symb_283)))
    state 284 with condition (Not (Eq false
         (Eq (w32 283)
             (ReadLSB w32 0 v283_fuzz_symb_283))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-283-8048a0e
Size=2 Low=0 splitIndex=1 high=1
297 [State 0] Switching from state 0 to state 284
Copied 34928 (count=1)
Finalizing TB execution 284
s2e_dummyMainFunction
tcg-llvm-tb-283-8048a0e
297 [State 284] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 283 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f2b: 90                                 nop                      nextPC: 0xbfb76f2c
  2  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  3  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  4  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  5  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  6  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  7  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  8  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  9  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
 10  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
297 [State 284] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
297 [State 284] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
297 [State 284] Terminating state 284 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
297 [State 284] Switching from state 284 to state 0
Copied 34928 (count=1)
Deleting state 284 0x0x26cd95a0
297 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 283
>> fuzzInit: datum forking for value 284
>> fuzzInit: datum forking for value 284
298 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 284)
        (ReadLSB w32 0 v284_fuzz_symb_284)))
    state 285 with condition (Not (Eq false
         (Eq (w32 284)
             (ReadLSB w32 0 v284_fuzz_symb_284))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-284-8048a0e
Size=2 Low=0 splitIndex=1 high=1
298 [State 0] Switching from state 0 to state 285
Copied 34928 (count=1)
Finalizing TB execution 285
s2e_dummyMainFunction
tcg-llvm-tb-284-8048a0e
298 [State 285] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 284 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f2c: 29 c9                              sub ecx, ecx             nextPC: 0xbfb76f2e
  2  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  3  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  4  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  5  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  6  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  7  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  8  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  9  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
Firing timer event
298 [State 285] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
298 [State 285] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
298 [State 285] Terminating state 285 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
298 [State 285] Switching from state 285 to state 0
Copied 34928 (count=1)
Deleting state 285 0x0x26cd95a0
298 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 284
>> fuzzInit: datum forking for value 285
>> fuzzInit: datum forking for value 285
298 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 285)
        (ReadLSB w32 0 v285_fuzz_symb_285)))
    state 286 with condition (Not (Eq false
         (Eq (w32 285)
             (ReadLSB w32 0 v285_fuzz_symb_285))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-285-8048a0e
Size=2 Low=0 splitIndex=1 high=1
298 [State 0] Switching from state 0 to state 286
Copied 34928 (count=1)
Finalizing TB execution 286
s2e_dummyMainFunction
tcg-llvm-tb-285-8048a0e
299 [State 286] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 285 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f2d: c9                                 leave                    nextPC: 0xbfb76f2e
  2  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  3  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  4  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  5  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  6  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  7  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  8  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  9  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
299 [State 286] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
299 [State 286] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
299 [State 286] Terminating state 286 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
299 [State 286] Switching from state 286 to state 0
Copied 34928 (count=1)
Deleting state 286 0x0x26cd95a0
Firing timer event
299 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 285
>> fuzzInit: datum forking for value 286
>> fuzzInit: datum forking for value 286
299 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 286)
        (ReadLSB w32 0 v286_fuzz_symb_286)))
    state 287 with condition (Not (Eq false
         (Eq (w32 286)
             (ReadLSB w32 0 v286_fuzz_symb_286))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-286-8048a0e
Size=2 Low=0 splitIndex=1 high=1
299 [State 0] Switching from state 0 to state 287
Copied 34928 (count=1)
Finalizing TB execution 287
s2e_dummyMainFunction
tcg-llvm-tb-286-8048a0e
299 [State 287] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 286 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f2e: 83 e9 f0                           sub ecx, 0xf0            nextPC: 0xbfb76f31
  2  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  3  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  4  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  5  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  6  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  7  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  8  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
299 [State 287] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
299 [State 287] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
299 [State 287] Terminating state 287 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
299 [State 287] Switching from state 287 to state 0
Copied 34928 (count=1)
Deleting state 287 0x0x26cd95a0
300 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 286
>> fuzzInit: datum forking for value 287
>> fuzzInit: datum forking for value 287
300 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 287)
        (ReadLSB w32 0 v287_fuzz_symb_287)))
    state 288 with condition (Not (Eq false
         (Eq (w32 287)
             (ReadLSB w32 0 v287_fuzz_symb_287))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-287-8048a0e
Size=2 Low=0 splitIndex=1 high=1
300 [State 0] Switching from state 0 to state 288
Copied 34928 (count=1)
Finalizing TB execution 288
s2e_dummyMainFunction
tcg-llvm-tb-287-8048a0e
Firing timer event
300 [State 288] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 287 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f2f: e9 f0 d9 ee d9                     jmp 0xffffffffd9eed9f5   nextPC: 0x99a64924 jmpPc: 0xffffffff
300 [State 288] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb76f2f, disasm in debug.
  1  5B @0xbfb76f2f: e9 f0 d9 ee d9                     jmp 0xffffffffd9eed9f5   nextPC: 0x99a64924 jmpPc: 0xffffffff
300 [State 288] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
300 [State 288] Terminating state 288 with message 'eliminated a state that is at unexpected location'
300 [State 288] Switching from state 288 to state 0
Copied 34928 (count=1)
Deleting state 288 0x0x26cd95a0
300 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 287
>> fuzzInit: datum forking for value 288
>> fuzzInit: datum forking for value 288
301 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 288)
        (ReadLSB w32 0 v288_fuzz_symb_288)))
    state 289 with condition (Not (Eq false
         (Eq (w32 288)
             (ReadLSB w32 0 v288_fuzz_symb_288))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-288-8048a0e
Size=2 Low=0 splitIndex=1 high=1
301 [State 0] Switching from state 0 to state 289
Copied 34928 (count=1)
Finalizing TB execution 289
s2e_dummyMainFunction
tcg-llvm-tb-288-8048a0e
301 [State 289] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 288 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76f30: f0 d9                              invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f30 != bfb76f32
  2  3B @0xbfb76f30:*f0*d9 ee                           lock fldz                nextPC: 0xbfb76f33
  3  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  4  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  5  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  6  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  7  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
301 [State 289] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
301 [State 289] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
301 [State 289] Terminating state 289 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
301 [State 289] Switching from state 289 to state 0
Copied 34928 (count=1)
Deleting state 289 0x0x26cd95a0
301 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 288
>> fuzzInit: datum forking for value 289
>> fuzzInit: datum forking for value 289
301 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 289)
        (ReadLSB w32 0 v289_fuzz_symb_289)))
    state 290 with condition (Not (Eq false
         (Eq (w32 289)
             (ReadLSB w32 0 v289_fuzz_symb_289))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-289-8048a0e
Size=2 Low=0 splitIndex=1 high=1
301 [State 0] Switching from state 0 to state 290
Copied 34928 (count=1)
Finalizing TB execution 290
s2e_dummyMainFunction
tcg-llvm-tb-289-8048a0e
302 [State 290] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 289 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f31: d9                                 invalid                  nextPC: 0xbfb76f32
!!* pc != prev insn's next_pc; 0xbfb76f31 != bfb76f32
  2  2B @0xbfb76f31:*d9 ee                              fldz                     nextPC: 0xbfb76f33
  3  4B @0xbfb76f33: d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  4  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  5  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  6  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  7  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
302 [State 290] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
302 [State 290] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
302 [State 290] Terminating state 290 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
302 [State 290] Switching from state 290 to state 0
Copied 34928 (count=1)
Deleting state 290 0x0x26cd95a0
Firing timer event
302 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 289
>> fuzzInit: datum forking for value 290
>> fuzzInit: datum forking for value 290
>> fuzzInit: datum forking for value 290
302 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 290)
        (ReadLSB w32 0 v290_fuzz_symb_290)))
    state 291 with condition (Not (Eq false
         (Eq (w32 290)
             (ReadLSB w32 0 v290_fuzz_symb_290))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-290-8048a0e
Size=2 Low=0 splitIndex=1 high=1
302 [State 0] Switching from state 0 to state 291
Copied 34928 (count=1)
Finalizing TB execution 291
s2e_dummyMainFunction
tcg-llvm-tb-290-8048a0e
302 [State 291] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 290 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f32: ee                                 out dx, al               nextPC: 0xbfb76f33
  2  1B @0xbfb76f33: d9                                 invalid                  nextPC: 0xbfb76f34
303 [State 291] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76f33, disasm in debug.
  1  1B @0xbfb76f33: d9                                 invalid                  nextPC: 0xbfb76f34
303 [State 291] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
303 [State 291] Terminating state 291 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
303 [State 291] Switching from state 291 to state 0
Copied 34928 (count=1)
Deleting state 291 0x0x274ec3f0
303 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 290
>> fuzzInit: datum forking for value 291
>> fuzzInit: datum forking for value 291
303 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 291)
        (ReadLSB w32 0 v291_fuzz_symb_291)))
    state 292 with condition (Not (Eq false
         (Eq (w32 291)
             (ReadLSB w32 0 v291_fuzz_symb_291))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-291-8048a0e
Size=2 Low=0 splitIndex=1 high=1
303 [State 0] Switching from state 0 to state 292
Copied 34928 (count=1)
Finalizing TB execution 292
s2e_dummyMainFunction
tcg-llvm-tb-291-8048a0e
Firing timer event
303 [State 292] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 291 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f33: d9                                 invalid                  nextPC: 0xbfb76f34
!!* pc != prev insn's next_pc; 0xbfb76f33 != bfb76f34
  2  4B @0xbfb76f33:*d9 74 24 f4                        fnstenv [esp-0xc]        nextPC: 0xbfb76f37
  3  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  4  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  5  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  6  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
303 [State 292] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
303 [State 292] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
303 [State 292] Terminating state 292 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
303 [State 292] Switching from state 292 to state 0
Copied 34928 (count=1)
Deleting state 292 0x0x272adc50
304 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 291
>> fuzzInit: datum forking for value 292
>> fuzzInit: datum forking for value 292
304 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 292)
        (ReadLSB w32 0 v292_fuzz_symb_292)))
    state 293 with condition (Not (Eq false
         (Eq (w32 292)
             (ReadLSB w32 0 v292_fuzz_symb_292))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-292-8048a0e
Size=2 Low=0 splitIndex=1 high=1
304 [State 0] Switching from state 0 to state 293
Copied 34928 (count=1)
Finalizing TB execution 293
s2e_dummyMainFunction
tcg-llvm-tb-292-8048a0e
304 [State 293] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 292 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76f34: 74 24                              jz 0x26                  nextPC: 0xbfb76f36 jmpPc: 0xbfb76f5a
  2  1B @0xbfb76f36: f4                                 hlt                      nextPC: 0xbfb76f37
304 [State 293] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76f36, disasm in debug.
  1  1B @0xbfb76f36: f4                                 hlt                      nextPC: 0xbfb76f37
304 [State 293] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
304 [State 293] Terminating state 293 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
304 [State 293] Switching from state 293 to state 0
Copied 34928 (count=1)
Deleting state 293 0x0x272adc50
304 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 292
>> fuzzInit: datum forking for value 293
>> fuzzInit: datum forking for value 293
305 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 293)
        (ReadLSB w32 0 v293_fuzz_symb_293)))
    state 294 with condition (Not (Eq false
         (Eq (w32 293)
             (ReadLSB w32 0 v293_fuzz_symb_293))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-293-8048a0e
Size=2 Low=0 splitIndex=1 high=1
305 [State 0] Switching from state 0 to state 294
Copied 34928 (count=1)
Finalizing TB execution 294
s2e_dummyMainFunction
tcg-llvm-tb-293-8048a0e
305 [State 294] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 293 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f35: 24 f4                              and al, 0xf4             nextPC: 0xbfb76f37
  2  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  3  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  4  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  5  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
Firing timer event
305 [State 294] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
305 [State 294] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
305 [State 294] Terminating state 294 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
305 [State 294] Switching from state 294 to state 0
Copied 34928 (count=1)
Deleting state 294 0x0x272adc50
305 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 293
>> fuzzInit: datum forking for value 294
>> fuzzInit: datum forking for value 294
305 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 294)
        (ReadLSB w32 0 v294_fuzz_symb_294)))
    state 295 with condition (Not (Eq false
         (Eq (w32 294)
             (ReadLSB w32 0 v294_fuzz_symb_294))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-294-8048a0e
Size=2 Low=0 splitIndex=1 high=1
305 [State 0] Switching from state 0 to state 295
Copied 34928 (count=1)
Finalizing TB execution 295
s2e_dummyMainFunction
tcg-llvm-tb-294-8048a0e
306 [State 295] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 294 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f36: f4                                 hlt                      nextPC: 0xbfb76f37
306 [State 295] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb76f36, disasm in debug.
  1  1B @0xbfb76f36: f4                                 hlt                      nextPC: 0xbfb76f37
306 [State 295] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
306 [State 295] Terminating state 295 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
306 [State 295] Switching from state 295 to state 0
Copied 34928 (count=1)
Deleting state 295 0x0x272adc50
Firing timer event
306 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 294
>> fuzzInit: datum forking for value 295
>> fuzzInit: datum forking for value 295
306 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 295)
        (ReadLSB w32 0 v295_fuzz_symb_295)))
    state 296 with condition (Not (Eq false
         (Eq (w32 295)
             (ReadLSB w32 0 v295_fuzz_symb_295))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-295-8048a0e
Size=2 Low=0 splitIndex=1 high=1
306 [State 0] Switching from state 0 to state 296
Copied 34928 (count=1)
Finalizing TB execution 296
s2e_dummyMainFunction
tcg-llvm-tb-295-8048a0e
307 [State 296] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 295 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f37: 5b                                 pop ebx                  nextPC: 0xbfb76f38
  2  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  3  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  4  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
307 [State 296] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
307 [State 296] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
307 [State 296] Terminating state 296 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
307 [State 296] Switching from state 296 to state 0
Copied 34928 (count=1)
Deleting state 296 0x0x272adc50
307 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 295
Firing timer event
>> fuzzInit: datum forking for value 296
>> fuzzInit: datum forking for value 296
307 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 296)
        (ReadLSB w32 0 v296_fuzz_symb_296)))
    state 297 with condition (Not (Eq false
         (Eq (w32 296)
             (ReadLSB w32 0 v296_fuzz_symb_296))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-296-8048a0e
Size=2 Low=0 splitIndex=1 high=1
307 [State 0] Switching from state 0 to state 297
Copied 34928 (count=1)
Finalizing TB execution 297
s2e_dummyMainFunction
tcg-llvm-tb-296-8048a0e
307 [State 297] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 296 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  2  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  3  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
308 [State 297] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
308 [State 297] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
308 [State 297] Terminating state 297 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
308 [State 297] Switching from state 297 to state 0
Copied 34928 (count=1)
Deleting state 297 0x0x272adc50
308 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 296
>> fuzzInit: datum forking for value 297
>> fuzzInit: datum forking for value 297
308 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 297)
        (ReadLSB w32 0 v297_fuzz_symb_297)))
    state 298 with condition (Not (Eq false
         (Eq (w32 297)
             (ReadLSB w32 0 v297_fuzz_symb_297))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-297-8048a0e
Size=2 Low=0 splitIndex=1 high=1
308 [State 0] Switching from state 0 to state 298
Copied 34928 (count=1)
Finalizing TB execution 298
s2e_dummyMainFunction
tcg-llvm-tb-297-8048a0e
Firing timer event
308 [State 298] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 297 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f39: 73 13                              jae 0x15                 nextPC: 0xbfb76f3b jmpPc: 0xbfb76f4e
!!* pc != prev insn's next_pc; 0xbfb76f4e != bfb76f3b
  2  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  3  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
308 [State 298] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
308 [State 298] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
308 [State 298] Terminating state 298 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
308 [State 298] Switching from state 298 to state 0
Copied 34928 (count=1)
Deleting state 298 0x0x272adc50
308 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 297
>> fuzzInit: datum forking for value 298
>> fuzzInit: datum forking for value 298
309 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 298)
        (ReadLSB w32 0 v298_fuzz_symb_298)))
    state 299 with condition (Not (Eq false
         (Eq (w32 298)
             (ReadLSB w32 0 v298_fuzz_symb_298))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-298-8048a0e
Size=2 Low=0 splitIndex=1 high=1
309 [State 0] Switching from state 0 to state 299
Copied 34928 (count=1)
Finalizing TB execution 299
s2e_dummyMainFunction
tcg-llvm-tb-298-8048a0e
309 [State 299] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 298 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f3a: 13 49 d4                           adc ecx, [ecx-0x2c]      nextPC: 0xbfb76f3d
  2  1B @0xbfb76f3d: d6                                 salc                     nextPC: 0xbfb76f3e
  3  6B @0xbfb76f3e: 21 83 eb fc e2 f4                  and [ebx+0xf4e2fceb], eax nextPC: 0xbfb76f44
  4  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
Firing timer event
309 [State 299] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f44, disasm in debug.
  1  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
309 [State 299] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
309 [State 299] Terminating state 299 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
309 [State 299] Switching from state 299 to state 0
Copied 34928 (count=1)
Deleting state 299 0x0x272adc50
309 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 298
>> fuzzInit: datum forking for value 299
>> fuzzInit: datum forking for value 299
310 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 299)
        (ReadLSB w32 0 v299_fuzz_symb_299)))
    state 300 with condition (Not (Eq false
         (Eq (w32 299)
             (ReadLSB w32 0 v299_fuzz_symb_299))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-299-8048a0e
Size=2 Low=0 splitIndex=1 high=1
310 [State 0] Switching from state 0 to state 300
Copied 34928 (count=1)
Finalizing TB execution 300
s2e_dummyMainFunction
tcg-llvm-tb-299-8048a0e
310 [State 300] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 299 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f3b: 49                                 dec ecx                  nextPC: 0xbfb76f3c
  2  2B @0xbfb76f3c: d4 d6                              aam 0xd6                 nextPC: 0xbfb76f3e
  3  6B @0xbfb76f3e: 21 83 eb fc e2 f4                  and [ebx+0xf4e2fceb], eax nextPC: 0xbfb76f44
  4  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
310 [State 300] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f44, disasm in debug.
  1  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
310 [State 300] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
310 [State 300] Terminating state 300 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
310 [State 300] Switching from state 300 to state 0
Copied 34928 (count=1)
Deleting state 300 0x0x2779efe0
Firing timer event
310 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 299
>> fuzzInit: datum forking for value 300
>> fuzzInit: datum forking for value 300
310 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 300)
        (ReadLSB w32 0 v300_fuzz_symb_300)))
    state 301 with condition (Not (Eq false
         (Eq (w32 300)
             (ReadLSB w32 0 v300_fuzz_symb_300))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-300-8048a0e
Size=2 Low=0 splitIndex=1 high=1
310 [State 0] Switching from state 0 to state 301
Copied 34928 (count=1)
Finalizing TB execution 301
s2e_dummyMainFunction
tcg-llvm-tb-300-8048a0e
310 [State 301] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 300 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f3c: d4 d6                              aam 0xd6                 nextPC: 0xbfb76f3e
  2  6B @0xbfb76f3e: 21 83 eb fc e2 f4                  and [ebx+0xf4e2fceb], eax nextPC: 0xbfb76f44
  3  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
311 [State 301] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f44, disasm in debug.
  1  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
311 [State 301] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
311 [State 301] Terminating state 301 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
311 [State 301] Switching from state 301 to state 0
Copied 34928 (count=1)
Deleting state 301 0x0x2779efe0
311 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 300
>> fuzzInit: datum forking for value 301
>> fuzzInit: datum forking for value 301
311 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 301)
        (ReadLSB w32 0 v301_fuzz_symb_301)))
    state 302 with condition (Not (Eq false
         (Eq (w32 301)
             (ReadLSB w32 0 v301_fuzz_symb_301))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-301-8048a0e
Size=2 Low=0 splitIndex=1 high=1
311 [State 0] Switching from state 0 to state 302
Copied 34928 (count=1)
Finalizing TB execution 302
s2e_dummyMainFunction
tcg-llvm-tb-301-8048a0e
Firing timer event
311 [State 302] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 301 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f3d: d6                                 salc                     nextPC: 0xbfb76f3e
  2  6B @0xbfb76f3e: 21 83 eb fc e2 f4                  and [ebx+0xf4e2fceb], eax nextPC: 0xbfb76f44
  3  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
311 [State 302] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f44, disasm in debug.
  1  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
311 [State 302] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
311 [State 302] Terminating state 302 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
311 [State 302] Switching from state 302 to state 0
Copied 34928 (count=1)
Deleting state 302 0x0x27742b40
312 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 301
>> fuzzInit: datum forking for value 302
>> fuzzInit: datum forking for value 302
312 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 302)
        (ReadLSB w32 0 v302_fuzz_symb_302)))
    state 303 with condition (Not (Eq false
         (Eq (w32 302)
             (ReadLSB w32 0 v302_fuzz_symb_302))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-302-8048a0e
Size=2 Low=0 splitIndex=1 high=1
312 [State 0] Switching from state 0 to state 303
Copied 34928 (count=1)
Finalizing TB execution 303
s2e_dummyMainFunction
tcg-llvm-tb-302-8048a0e
312 [State 303] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 302 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76f3e: 21 83 eb fc e2 f4                  and [ebx+0xf4e2fceb], eax nextPC: 0xbfb76f44
  2  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
312 [State 303] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76f44, disasm in debug.
  1  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
312 [State 303] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
312 [State 303] Terminating state 303 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
312 [State 303] Switching from state 303 to state 0
Copied 34928 (count=1)
Deleting state 303 0x0x27478810
Firing timer event
312 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 302
>> fuzzInit: datum forking for value 303
>> fuzzInit: datum forking for value 303
313 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 303)
        (ReadLSB w32 0 v303_fuzz_symb_303)))
    state 304 with condition (Not (Eq false
         (Eq (w32 303)
             (ReadLSB w32 0 v303_fuzz_symb_303))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-303-8048a0e
Size=2 Low=0 splitIndex=1 high=1
313 [State 0] Switching from state 0 to state 304
Copied 34928 (count=1)
Finalizing TB execution 304
s2e_dummyMainFunction
tcg-llvm-tb-303-8048a0e
313 [State 304] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 303 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  2  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
!!* pc != prev insn's next_pc; 0xbfb76f38 != bfb76f44
  3  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  4  3B @0xbfb76f3f:*83*eb*fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  5  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
313 [State 304] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
313 [State 304] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
313 [State 304] Terminating state 304 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
313 [State 304] Switching from state 304 to state 0
Copied 34928 (count=1)
Deleting state 304 0x0x27478810
Firing timer event
313 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 303
>> fuzzInit: datum forking for value 304
>> fuzzInit: datum forking for value 304
313 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 304)
        (ReadLSB w32 0 v304_fuzz_symb_304)))
    state 305 with condition (Not (Eq false
         (Eq (w32 304)
             (ReadLSB w32 0 v304_fuzz_symb_304))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-304-8048a0e
Size=2 Low=0 splitIndex=1 high=1
313 [State 0] Switching from state 0 to state 305
Copied 34928 (count=1)
Finalizing TB execution 305
s2e_dummyMainFunction
tcg-llvm-tb-304-8048a0e
314 [State 305] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 304 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f40: eb fc                              jmp 0xfffffffffffffffe   nextPC: 0xbfb76f3e
  2  6B @0xbfb76f3e: 21 83*eb*fc e2 f4                  and [ebx+0xf4e2fceb], eax nextPC: 0xbfb76f44
  3  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
314 [State 305] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f44, disasm in debug.
  1  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
314 [State 305] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
314 [State 305] Terminating state 305 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
314 [State 305] Switching from state 305 to state 0
Copied 34928 (count=1)
Deleting state 305 0x0x27478810
314 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 304
>> fuzzInit: datum forking for value 305
>> fuzzInit: datum forking for value 305
314 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 305)
        (ReadLSB w32 0 v305_fuzz_symb_305)))
    state 306 with condition (Not (Eq false
         (Eq (w32 305)
             (ReadLSB w32 0 v305_fuzz_symb_305))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-305-8048a0e
Size=2 Low=0 splitIndex=1 high=1
314 [State 0] Switching from state 0 to state 306
Copied 34928 (count=1)
Finalizing TB execution 306
s2e_dummyMainFunction
tcg-llvm-tb-305-8048a0e
314 [State 306] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 305 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f41: fc                                 cld                      nextPC: 0xbfb76f42
  2  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
!!* pc != prev insn's next_pc; 0xbfb76f38 != bfb76f44
  3  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  4  3B @0xbfb76f3f: 83 eb*fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  5  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
314 [State 306] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
314 [State 306] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
314 [State 306] Terminating state 306 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
314 [State 306] Switching from state 306 to state 0
Copied 34928 (count=1)
Deleting state 306 0x0x27478810
315 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 305
>> fuzzInit: datum forking for value 306
>> fuzzInit: datum forking for value 306
315 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 306)
        (ReadLSB w32 0 v306_fuzz_symb_306)))
    state 307 with condition (Not (Eq false
         (Eq (w32 306)
             (ReadLSB w32 0 v306_fuzz_symb_306))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-306-8048a0e
Size=2 Low=0 splitIndex=1 high=1
315 [State 0] Switching from state 0 to state 307
Copied 34928 (count=1)
Finalizing TB execution 307
s2e_dummyMainFunction
tcg-llvm-tb-306-8048a0e
315 [State 307] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 306 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f42: e2 f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
!!* pc != prev insn's next_pc; 0xbfb76f38 != bfb76f44
  2  7B @0xbfb76f38: 81 73 13 49 d4 d6 21               xor dword [ebx+0x13], 0x21d6d449 nextPC: 0xbfb76f3f
  3  3B @0xbfb76f3f: 83 eb fc                           sub ebx, 0xfc            nextPC: 0xbfb76f42
  4  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
315 [State 307] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f42, disasm in debug.
  1  2B @0xbfb76f42:*e2*f4                              loop 0xfffffffffffffff6  nextPC: 0xbfb76f44 jmpPc: 0xbfb76f38
315 [State 307] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
315 [State 307] Terminating state 307 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
315 [State 307] Switching from state 307 to state 0
Copied 34928 (count=1)
Deleting state 307 0x0x27478810
Firing timer event
315 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 306
>> fuzzInit: datum forking for value 307
>> fuzzInit: datum forking for value 307
>> fuzzInit: datum forking for value 307
316 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 307)
        (ReadLSB w32 0 v307_fuzz_symb_307)))
    state 308 with condition (Not (Eq false
         (Eq (w32 307)
             (ReadLSB w32 0 v307_fuzz_symb_307))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-307-8048a0e
Size=2 Low=0 splitIndex=1 high=1
316 [State 0] Switching from state 0 to state 308
Copied 34928 (count=1)
Finalizing TB execution 308
s2e_dummyMainFunction
tcg-llvm-tb-307-8048a0e
316 [State 308] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 307 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f43: f4                                 hlt                      nextPC: 0xbfb76f44
316 [State 308] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb76f43, disasm in debug.
  1  1B @0xbfb76f43: f4                                 hlt                      nextPC: 0xbfb76f44
316 [State 308] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
316 [State 308] Terminating state 308 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
316 [State 308] Switching from state 308 to state 0
Copied 34928 (count=1)
Deleting state 308 0x0x27478810
316 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 307
>> fuzzInit: datum forking for value 308
>> fuzzInit: datum forking for value 308
316 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 308)
        (ReadLSB w32 0 v308_fuzz_symb_308)))
    state 309 with condition (Not (Eq false
         (Eq (w32 308)
             (ReadLSB w32 0 v308_fuzz_symb_308))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-308-8048a0e
Size=2 Low=0 splitIndex=1 high=1
316 [State 0] Switching from state 0 to state 309
Copied 34928 (count=1)
Finalizing TB execution 309
s2e_dummyMainFunction
tcg-llvm-tb-308-8048a0e
Firing timer event
317 [State 309] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 308 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f44: 78 06                              js 0x8                   nextPC: 0xbfb76f46 jmpPc: 0xbfb76f4c
!!* pc != prev insn's next_pc; 0xbfb76f4c != bfb76f46
  2  2B @0xbfb76f4c: 23 c4                              and eax, esp             nextPC: 0xbfb76f4e
  3  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  4  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
317 [State 309] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
317 [State 309] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
317 [State 309] Terminating state 309 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
317 [State 309] Switching from state 309 to state 0
Copied 34928 (count=1)
Deleting state 309 0x0x27478810
317 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 308
>> fuzzInit: datum forking for value 309
>> fuzzInit: datum forking for value 309
317 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 309)
        (ReadLSB w32 0 v309_fuzz_symb_309)))
    state 310 with condition (Not (Eq false
         (Eq (w32 309)
             (ReadLSB w32 0 v309_fuzz_symb_309))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-309-8048a0e
Size=2 Low=0 splitIndex=1 high=1
317 [State 0] Switching from state 0 to state 310
Copied 34928 (count=1)
Finalizing TB execution 310
s2e_dummyMainFunction
tcg-llvm-tb-309-8048a0e
317 [State 310] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 309 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f45: 06                                 push es                  nextPC: 0xbfb76f46
  2  6B @0xbfb76f46: 84 a8 ac be d1 7a                  test [eax+0x7ad1beac], ch nextPC: 0xbfb76f4c
  3  2B @0xbfb76f4c: 23 c4                              and eax, esp             nextPC: 0xbfb76f4e
  4  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  5  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
318 [State 310] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
318 [State 310] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
318 [State 310] Terminating state 310 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
318 [State 310] Switching from state 310 to state 0
Copied 34928 (count=1)
Deleting state 310 0x0x27478810
318 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 309
>> fuzzInit: datum forking for value 310
>> fuzzInit: datum forking for value 310
318 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 310)
        (ReadLSB w32 0 v310_fuzz_symb_310)))
    state 311 with condition (Not (Eq false
         (Eq (w32 310)
             (ReadLSB w32 0 v310_fuzz_symb_310))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-310-8048a0e
Size=2 Low=0 splitIndex=1 high=1
318 [State 0] Switching from state 0 to state 311
Copied 34928 (count=1)
Finalizing TB execution 311
s2e_dummyMainFunction
tcg-llvm-tb-310-8048a0e
318 [State 311] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 310 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76f46: 84 a8 ac be d1 7a                  test [eax+0x7ad1beac], ch nextPC: 0xbfb76f4c
  2  2B @0xbfb76f4c: 23 c4                              and eax, esp             nextPC: 0xbfb76f4e
  3  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  4  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
318 [State 311] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
318 [State 311] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
318 [State 311] Terminating state 311 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
318 [State 311] Switching from state 311 to state 0
Copied 34928 (count=1)
Deleting state 311 0x0x27478810
319 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 310
>> fuzzInit: datum forking for value 311
>> fuzzInit: datum forking for value 311
319 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 311)
        (ReadLSB w32 0 v311_fuzz_symb_311)))
    state 312 with condition (Not (Eq false
         (Eq (w32 311)
             (ReadLSB w32 0 v311_fuzz_symb_311))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-311-8048a0e
Size=2 Low=0 splitIndex=1 high=1
319 [State 0] Switching from state 0 to state 312
Copied 34928 (count=1)
Finalizing TB execution 312
s2e_dummyMainFunction
tcg-llvm-tb-311-8048a0e
Firing timer event
319 [State 312] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 311 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f47: a8 ac                              test al, 0xac            nextPC: 0xbfb76f49
  2  5B @0xbfb76f49: be d1 7a 23 c4                     mov esi, 0xc4237ad1      nextPC: 0xbfb76f4e
  3  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  4  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
319 [State 312] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
319 [State 312] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
319 [State 312] Terminating state 312 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
319 [State 312] Switching from state 312 to state 0
Copied 34928 (count=1)
Deleting state 312 0x0x27478810
319 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 311
>> fuzzInit: datum forking for value 312
>> fuzzInit: datum forking for value 312
319 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 312)
        (ReadLSB w32 0 v312_fuzz_symb_312)))
    state 313 with condition (Not (Eq false
         (Eq (w32 312)
             (ReadLSB w32 0 v312_fuzz_symb_312))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-312-8048a0e
Size=2 Low=0 splitIndex=1 high=1
319 [State 0] Switching from state 0 to state 313
Copied 34928 (count=1)
Finalizing TB execution 313
s2e_dummyMainFunction
tcg-llvm-tb-312-8048a0e
320 [State 313] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 312 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f48: ac                                 lodsb                    nextPC: 0xbfb76f49
  2  5B @0xbfb76f49: be d1 7a 23 c4                     mov esi, 0xc4237ad1      nextPC: 0xbfb76f4e
  3  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  4  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
320 [State 313] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
320 [State 313] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
320 [State 313] Terminating state 313 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
320 [State 313] Switching from state 313 to state 0
Copied 34928 (count=1)
Deleting state 313 0x0x27478810
Firing timer event
320 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 312
>> fuzzInit: datum forking for value 313
>> fuzzInit: datum forking for value 313
320 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 313)
        (ReadLSB w32 0 v313_fuzz_symb_313)))
    state 314 with condition (Not (Eq false
         (Eq (w32 313)
             (ReadLSB w32 0 v313_fuzz_symb_313))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-313-8048a0e
Size=2 Low=0 splitIndex=1 high=1
320 [State 0] Switching from state 0 to state 314
Copied 34928 (count=1)
Finalizing TB execution 314
s2e_dummyMainFunction
tcg-llvm-tb-313-8048a0e
320 [State 314] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 313 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f49: be d1 7a 23 c4                     mov esi, 0xc4237ad1      nextPC: 0xbfb76f4e
  2  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  3  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
320 [State 314] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
320 [State 314] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
320 [State 314] Terminating state 314 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
320 [State 314] Switching from state 314 to state 0
Copied 34928 (count=1)
Deleting state 314 0x0x27478810
321 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 313
>> fuzzInit: datum forking for value 314
>> fuzzInit: datum forking for value 314
321 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 314)
        (ReadLSB w32 0 v314_fuzz_symb_314)))
    state 315 with condition (Not (Eq false
         (Eq (w32 314)
             (ReadLSB w32 0 v314_fuzz_symb_314))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-314-8048a0e
Size=2 Low=0 splitIndex=1 high=1
321 [State 0] Switching from state 0 to state 315
Copied 34928 (count=1)
Finalizing TB execution 315
s2e_dummyMainFunction
tcg-llvm-tb-314-8048a0e
Firing timer event
321 [State 315] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 314 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f4a: d1 7a 23                           sar dword [edx+0x23], 1  nextPC: 0xbfb76f4d
  2  6B @0xbfb76f4d: c4 82 74 1b 5d 37                  les eax, [edx+0x375d1b74] nextPC: 0xbfb76f53
321 [State 315] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76f4d, disasm in debug.
  1  6B @0xbfb76f4d: c4 82 74 1b 5d 37                  les eax, [edx+0x375d1b74] nextPC: 0xbfb76f53
321 [State 315] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
321 [State 315] Terminating state 315 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
321 [State 315] Switching from state 315 to state 0
Copied 34928 (count=1)
Deleting state 315 0x0x27478810
321 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 314
>> fuzzInit: datum forking for value 315
>> fuzzInit: datum forking for value 315
322 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 315)
        (ReadLSB w32 0 v315_fuzz_symb_315)))
    state 316 with condition (Not (Eq false
         (Eq (w32 315)
             (ReadLSB w32 0 v315_fuzz_symb_315))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-315-8048a0e
Size=2 Low=0 splitIndex=1 high=1
322 [State 0] Switching from state 0 to state 316
Copied 34928 (count=1)
Finalizing TB execution 316
s2e_dummyMainFunction
tcg-llvm-tb-315-8048a0e
322 [State 316] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 315 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f4b: 7a 23                              jp 0x25                  nextPC: 0xbfb76f4d jmpPc: 0xbfb76f70
!!* pc != prev insn's next_pc; 0xbfb76f70 != bfb76f4d
  2  2B @0xbfb76f70: 66 a7                              cmpsw                    nextPC: 0xbfb76f72
  3  5B @0xbfb76f72: be 49 66 b6 bf                     mov esi, 0xbfb66649      nextPC: 0xbfb76f77
  4  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  5  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  6  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
322 [State 316] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
322 [State 316] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
322 [State 316] Terminating state 316 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
322 [State 316] Switching from state 316 to state 0
Copied 34928 (count=1)
Deleting state 316 0x0x27478810
322 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 315
>> fuzzInit: datum forking for value 316
>> fuzzInit: datum forking for value 316
322 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 316)
        (ReadLSB w32 0 v316_fuzz_symb_316)))
    state 317 with condition (Not (Eq false
         (Eq (w32 316)
             (ReadLSB w32 0 v316_fuzz_symb_316))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-316-8048a0e
Size=2 Low=0 splitIndex=1 high=1
322 [State 0] Switching from state 0 to state 317
Copied 34928 (count=1)
Finalizing TB execution 317
s2e_dummyMainFunction
tcg-llvm-tb-316-8048a0e
323 [State 317] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 316 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f4c: 23 c4                              and eax, esp             nextPC: 0xbfb76f4e
  2  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  3  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
323 [State 317] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
323 [State 317] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
323 [State 317] Terminating state 317 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
323 [State 317] Switching from state 317 to state 0
Copied 34928 (count=1)
Deleting state 317 0x0x27478810
Firing timer event
323 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 316
>> fuzzInit: datum forking for value 317
>> fuzzInit: datum forking for value 317
323 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 317)
        (ReadLSB w32 0 v317_fuzz_symb_317)))
    state 318 with condition (Not (Eq false
         (Eq (w32 317)
             (ReadLSB w32 0 v317_fuzz_symb_317))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-317-8048a0e
Size=2 Low=0 splitIndex=1 high=1
323 [State 0] Switching from state 0 to state 318
Copied 34928 (count=1)
Finalizing TB execution 318
s2e_dummyMainFunction
tcg-llvm-tb-317-8048a0e
323 [State 318] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 317 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76f4d: c4 82 74 1b 5d 37                  les eax, [edx+0x375d1b74] nextPC: 0xbfb76f53
324 [State 318] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb76f4d, disasm in debug.
  1  6B @0xbfb76f4d: c4 82 74 1b 5d 37                  les eax, [edx+0x375d1b74] nextPC: 0xbfb76f53
324 [State 318] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
324 [State 318] Terminating state 318 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
324 [State 318] Switching from state 318 to state 0
Copied 34928 (count=1)
Deleting state 318 0x0x27478810
324 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 317
>> fuzzInit: datum forking for value 318
>> fuzzInit: datum forking for value 318
324 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 318)
        (ReadLSB w32 0 v318_fuzz_symb_318)))
    state 319 with condition (Not (Eq false
         (Eq (w32 318)
             (ReadLSB w32 0 v318_fuzz_symb_318))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-318-8048a0e
Size=2 Low=0 splitIndex=1 high=1
324 [State 0] Switching from state 0 to state 319
Copied 34928 (count=1)
Finalizing TB execution 319
s2e_dummyMainFunction
tcg-llvm-tb-318-8048a0e
Firing timer event
324 [State 319] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 318 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f4e: 82 74 1b 5d 37                     xor byte [ebx+ebx+0x5d], 0x37 nextPC: 0xbfb76f53
  2  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
324 [State 319] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76f53, disasm in debug.
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
324 [State 319] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
324 [State 319] Terminating state 319 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
324 [State 319] Switching from state 319 to state 0
Copied 34928 (count=1)
Deleting state 319 0x0x27db7210
325 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 318
>> fuzzInit: datum forking for value 319
>> fuzzInit: datum forking for value 319
325 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 319)
        (ReadLSB w32 0 v319_fuzz_symb_319)))
    state 320 with condition (Not (Eq false
         (Eq (w32 319)
             (ReadLSB w32 0 v319_fuzz_symb_319))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-319-8048a0e
Size=2 Low=0 splitIndex=1 high=1
325 [State 0] Switching from state 0 to state 320
Copied 34928 (count=1)
Finalizing TB execution 320
s2e_dummyMainFunction
tcg-llvm-tb-319-8048a0e
325 [State 320] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 319 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f4f: 74 1b                              jz 0x1d                  nextPC: 0xbfb76f51 jmpPc: 0xbfb76f6c
  2  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  3  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  4  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  5  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  6  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  7  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  8  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  9  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
 10  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 11  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 12  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 13  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 14  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 15  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 16  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 17  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 18  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 19  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
325 [State 320] @0x080499bf, left buffer range after 19 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
325 [State 320] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
325 [State 320] Terminating state 320 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
325 [State 320] Switching from state 320 to state 0
Copied 34928 (count=1)
Deleting state 320 0x0x27db7210
325 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 319
>> fuzzInit: datum forking for value 320
>> fuzzInit: datum forking for value 320
326 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 320)
        (ReadLSB w32 0 v320_fuzz_symb_320)))
    state 321 with condition (Not (Eq false
         (Eq (w32 320)
             (ReadLSB w32 0 v320_fuzz_symb_320))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-320-8048a0e
Size=2 Low=0 splitIndex=1 high=1
326 [State 0] Switching from state 0 to state 321
Copied 34928 (count=1)
Finalizing TB execution 321
s2e_dummyMainFunction
tcg-llvm-tb-320-8048a0e
326 [State 321] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 320 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f50: 1b 5d 37                           sbb ebx, [ebp+0x37]      nextPC: 0xbfb76f53
  2  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  3  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  4  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  5  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  6  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  7  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  8  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  9  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 10  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 11  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 12  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 13  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 14  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 15  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 16  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 17  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
326 [State 321] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
326 [State 321] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
326 [State 321] Terminating state 321 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
326 [State 321] Switching from state 321 to state 0
Copied 34928 (count=1)
Deleting state 321 0x0x27db7210
Firing timer event
326 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 320
>> fuzzInit: datum forking for value 321
>> fuzzInit: datum forking for value 321
326 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 321)
        (ReadLSB w32 0 v321_fuzz_symb_321)))
    state 322 with condition (Not (Eq false
         (Eq (w32 321)
             (ReadLSB w32 0 v321_fuzz_symb_321))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-321-8048a0e
Size=2 Low=0 splitIndex=1 high=1
326 [State 0] Switching from state 0 to state 322
Copied 34928 (count=1)
Finalizing TB execution 322
s2e_dummyMainFunction
tcg-llvm-tb-321-8048a0e
326 [State 322] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 321 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f51: 5d                                 pop ebp                  nextPC: 0xbfb76f52
  2  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  3  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  4  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  5  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  6  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  7  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  8  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  9  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
 10  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 11  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 12  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 13  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 14  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 15  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 16  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 17  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 18  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
327 [State 322] @0x080499bf, left buffer range after 18 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
327 [State 322] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
327 [State 322] Terminating state 322 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
327 [State 322] Switching from state 322 to state 0
Copied 34928 (count=1)
Deleting state 322 0x0x27db7210
327 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 321
>> fuzzInit: datum forking for value 322
>> fuzzInit: datum forking for value 322
327 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 322)
        (ReadLSB w32 0 v322_fuzz_symb_322)))
    state 323 with condition (Not (Eq false
         (Eq (w32 322)
             (ReadLSB w32 0 v322_fuzz_symb_322))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-322-8048a0e
Size=2 Low=0 splitIndex=1 high=1
327 [State 0] Switching from state 0 to state 323
Copied 34928 (count=1)
Finalizing TB execution 323
s2e_dummyMainFunction
tcg-llvm-tb-322-8048a0e
Firing timer event
327 [State 323] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 322 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f52: 37                                 aaa                      nextPC: 0xbfb76f53
  2  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  3  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  4  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  5  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  6  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  7  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  8  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  9  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
 10  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 11  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 12  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 13  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 14  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 15  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 16  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 17  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
328 [State 323] @0x080499bf, left buffer range after 17 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
328 [State 323] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
328 [State 323] Terminating state 323 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
328 [State 323] Switching from state 323 to state 0
Copied 34928 (count=1)
Deleting state 323 0x0x27db7210
328 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 322
>> fuzzInit: datum forking for value 323
>> fuzzInit: datum forking for value 323
328 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 323)
        (ReadLSB w32 0 v323_fuzz_symb_323)))
    state 324 with condition (Not (Eq false
         (Eq (w32 323)
             (ReadLSB w32 0 v323_fuzz_symb_323))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-323-8048a0e
Size=2 Low=0 splitIndex=1 high=1
328 [State 0] Switching from state 0 to state 324
Copied 34928 (count=1)
Finalizing TB execution 324
s2e_dummyMainFunction
tcg-llvm-tb-323-8048a0e
328 [State 324] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 323 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f53: de                                 invalid                  nextPC: 0xbfb76f54
!!* pc != prev insn's next_pc; 0xbfb76f53 != bfb76f54
  2  3B @0xbfb76f53:*de 48 be                           fimul word [eax-0x42]    nextPC: 0xbfb76f56
  3  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  4  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  5  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  6  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  7  7B @0xbfb76f5f: de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  8  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  9  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 10  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 11  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 12  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 13  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 14  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 15  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 16  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
329 [State 324] @0x080499bf, left buffer range after 16 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
329 [State 324] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
329 [State 324] Terminating state 324 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
329 [State 324] Switching from state 324 to state 0
Copied 34928 (count=1)
Deleting state 324 0x0x27db7210
329 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 323
>> fuzzInit: datum forking for value 324
>> fuzzInit: datum forking for value 324
329 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 324)
        (ReadLSB w32 0 v324_fuzz_symb_324)))
    state 325 with condition (Not (Eq false
         (Eq (w32 324)
             (ReadLSB w32 0 v324_fuzz_symb_324))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-324-8048a0e
Size=2 Low=0 splitIndex=1 high=1
329 [State 0] Switching from state 0 to state 325
Copied 34928 (count=1)
Finalizing TB execution 325
s2e_dummyMainFunction
tcg-llvm-tb-324-8048a0e
329 [State 325] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 324 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f54: 48                                 dec eax                  nextPC: 0xbfb76f55
  2  5B @0xbfb76f55: be b0 79 84 54                     mov esi, 0x548479b0      nextPC: 0xbfb76f5a
  3  2B @0xbfb76f5a: b0 a0                              mov al, 0xa0             nextPC: 0xbfb76f5c
  4  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  5  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  6  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  7  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  8  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  9  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 10  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 11  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 12  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 13  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 14  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 15  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 16  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
329 [State 325] @0x080499bf, left buffer range after 16 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
329 [State 325] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
329 [State 325] Terminating state 325 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
329 [State 325] Switching from state 325 to state 0
Copied 34928 (count=1)
Deleting state 325 0x0x27e11ae0
330 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 324
>> fuzzInit: datum forking for value 325
>> fuzzInit: datum forking for value 325
330 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 325)
        (ReadLSB w32 0 v325_fuzz_symb_325)))
    state 326 with condition (Not (Eq false
         (Eq (w32 325)
             (ReadLSB w32 0 v325_fuzz_symb_325))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-325-8048a0e
Size=2 Low=0 splitIndex=1 high=1
330 [State 0] Switching from state 0 to state 326
Copied 34928 (count=1)
Finalizing TB execution 326
s2e_dummyMainFunction
tcg-llvm-tb-325-8048a0e
330 [State 326] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 325 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f55: be b0 79 84 54                     mov esi, 0x548479b0      nextPC: 0xbfb76f5a
  2  2B @0xbfb76f5a: b0 a0                              mov al, 0xa0             nextPC: 0xbfb76f5c
  3  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  4  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  5  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  6  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  7  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  8  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  9  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 10  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 11  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 12  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 13  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 14  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 15  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
330 [State 326] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
330 [State 326] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
330 [State 326] Terminating state 326 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
330 [State 326] Switching from state 326 to state 0
Copied 34928 (count=1)
Deleting state 326 0x0x27e11ae0
Firing timer event
330 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 325
>> fuzzInit: datum forking for value 326
>> fuzzInit: datum forking for value 326
331 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 326)
        (ReadLSB w32 0 v326_fuzz_symb_326)))
    state 327 with condition (Not (Eq false
         (Eq (w32 326)
             (ReadLSB w32 0 v326_fuzz_symb_326))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-326-8048a0e
Size=2 Low=0 splitIndex=1 high=1
331 [State 0] Switching from state 0 to state 327
Copied 34928 (count=1)
Finalizing TB execution 327
s2e_dummyMainFunction
tcg-llvm-tb-326-8048a0e
331 [State 327] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 326 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f56: b0 79                              mov al, 0x79             nextPC: 0xbfb76f58
  2  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  3  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  4  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  5  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  6  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  7  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  8  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  9  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 10  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 11  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 12  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 13  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 14  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 15  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
331 [State 327] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
331 [State 327] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
331 [State 327] Terminating state 327 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
331 [State 327] Switching from state 327 to state 0
Copied 34928 (count=1)
Deleting state 327 0x0x27e11ae0
Firing timer event
332 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 326
>> fuzzInit: datum forking for value 327
>> fuzzInit: datum forking for value 327
332 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 327)
        (ReadLSB w32 0 v327_fuzz_symb_327)))
    state 328 with condition (Not (Eq false
         (Eq (w32 327)
             (ReadLSB w32 0 v327_fuzz_symb_327))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-327-8048a0e
Size=2 Low=0 splitIndex=1 high=1
332 [State 0] Switching from state 0 to state 328
Copied 34928 (count=1)
Finalizing TB execution 328
s2e_dummyMainFunction
tcg-llvm-tb-327-8048a0e
332 [State 328] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 327 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f57: 79 84                              jns 0xffffffffffffff86   nextPC: 0xbfb76f59 jmpPc: 0xbfb76edd
  2  1B @0xbfb76f59: 54                                 push esp                 nextPC: 0xbfb76f5a
  3  2B @0xbfb76f5a: b0 a0                              mov al, 0xa0             nextPC: 0xbfb76f5c
  4  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  5  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  6  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  7  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  8  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  9  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
 10  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 11  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 12  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 13  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 14  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 15  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 16  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
332 [State 328] @0x080499bf, left buffer range after 16 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
332 [State 328] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
332 [State 328] Terminating state 328 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
332 [State 328] Switching from state 328 to state 0
Copied 34928 (count=1)
Deleting state 328 0x0x27e11ae0
332 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 327
>> fuzzInit: datum forking for value 328
>> fuzzInit: datum forking for value 328
332 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 328)
        (ReadLSB w32 0 v328_fuzz_symb_328)))
    state 329 with condition (Not (Eq false
         (Eq (w32 328)
             (ReadLSB w32 0 v328_fuzz_symb_328))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-328-8048a0e
Size=2 Low=0 splitIndex=1 high=1
333 [State 0] Switching from state 0 to state 329
Copied 34928 (count=1)
Finalizing TB execution 329
s2e_dummyMainFunction
tcg-llvm-tb-328-8048a0e
Firing timer event
333 [State 329] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 328 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  4B @0xbfb76f58: 84 54 b0 a0                        test [eax+esi*4-0x60], dl nextPC: 0xbfb76f5c
  2  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  3  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  4  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  5  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  6  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  7  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  8  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  9  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 10  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 11  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 12  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 13  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 14  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
333 [State 329] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
333 [State 329] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
333 [State 329] Terminating state 329 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
333 [State 329] Switching from state 329 to state 0
Copied 34928 (count=1)
Deleting state 329 0x0x27e11ae0
333 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 328
>> fuzzInit: datum forking for value 329
>> fuzzInit: datum forking for value 329
333 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 329)
        (ReadLSB w32 0 v329_fuzz_symb_329)))
    state 330 with condition (Not (Eq false
         (Eq (w32 329)
             (ReadLSB w32 0 v329_fuzz_symb_329))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-329-8048a0e
Size=2 Low=0 splitIndex=1 high=1
333 [State 0] Switching from state 0 to state 330
Copied 34928 (count=1)
Finalizing TB execution 330
s2e_dummyMainFunction
tcg-llvm-tb-329-8048a0e
333 [State 330] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 329 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f59: 54                                 push esp                 nextPC: 0xbfb76f5a
  2  2B @0xbfb76f5a: b0 a0                              mov al, 0xa0             nextPC: 0xbfb76f5c
  3  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  4  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  5  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  6  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  7  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  8  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  9  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
 10  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 11  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 12  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 13  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 14  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 15  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
334 [State 330] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
334 [State 330] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
334 [State 330] Terminating state 330 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
334 [State 330] Switching from state 330 to state 0
Copied 34928 (count=1)
Deleting state 330 0x0x27e11ae0
334 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 329
>> fuzzInit: datum forking for value 330
>> fuzzInit: datum forking for value 330
334 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 330)
        (ReadLSB w32 0 v330_fuzz_symb_330)))
    state 331 with condition (Not (Eq false
         (Eq (w32 330)
             (ReadLSB w32 0 v330_fuzz_symb_330))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-330-8048a0e
Size=2 Low=0 splitIndex=1 high=1
334 [State 0] Switching from state 0 to state 331
Copied 34928 (count=1)
Finalizing TB execution 331
s2e_dummyMainFunction
tcg-llvm-tb-330-8048a0e
334 [State 331] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 330 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f5a: b0 a0                              mov al, 0xa0             nextPC: 0xbfb76f5c
  2  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  3  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  4  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  5  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  6  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  7  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  8  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  9  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
 10  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 11  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 12  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 13  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 14  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
335 [State 331] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
335 [State 331] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
335 [State 331] Terminating state 331 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
335 [State 331] Switching from state 331 to state 0
Copied 34928 (count=1)
Deleting state 331 0x0x27e11ae0
Firing timer event
335 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 330
>> fuzzInit: datum forking for value 331
>> fuzzInit: datum forking for value 331
335 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 331)
        (ReadLSB w32 0 v331_fuzz_symb_331)))
    state 332 with condition (Not (Eq false
         (Eq (w32 331)
             (ReadLSB w32 0 v331_fuzz_symb_331))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-331-8048a0e
Size=2 Low=0 splitIndex=1 high=1
335 [State 0] Switching from state 0 to state 332
Copied 34928 (count=1)
Finalizing TB execution 332
s2e_dummyMainFunction
tcg-llvm-tb-331-8048a0e
335 [State 332] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 331 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f5b: a0 34 d6 59 de                     mov al, [0xde59d634]     nextPC: 0xbfb76f60
  2  2B @0xbfb76f60: 3c 25                              cmp al, 0x25             nextPC: 0xbfb76f62
  3  3B @0xbfb76f62: 8d 4b 4b                           lea ecx, [ebx+0x4b]      nextPC: 0xbfb76f65
  4  3B @0xbfb76f65: 8d 66 1e                           lea esp, [esi+0x1e]      nextPC: 0xbfb76f68
  5  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  6  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  7  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  8  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  9  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 10  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 11  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 12  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
335 [State 332] @0x080499bf, left buffer range after 12 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
335 [State 332] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
335 [State 332] Terminating state 332 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
335 [State 332] Switching from state 332 to state 0
Copied 34928 (count=1)
Deleting state 332 0x0x28179b80
335 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 331
>> fuzzInit: datum forking for value 332
>> fuzzInit: datum forking for value 332
335 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 332)
        (ReadLSB w32 0 v332_fuzz_symb_332)))
    state 333 with condition (Not (Eq false
         (Eq (w32 332)
             (ReadLSB w32 0 v332_fuzz_symb_332))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-332-8048a0e
Size=2 Low=0 splitIndex=1 high=1
335 [State 0] Switching from state 0 to state 333
Copied 34928 (count=1)
Finalizing TB execution 333
s2e_dummyMainFunction
tcg-llvm-tb-332-8048a0e
336 [State 333] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 332 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76f5c: 34 d6                              xor al, 0xd6             nextPC: 0xbfb76f5e
  2  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  3  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  4  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  5  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  6  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  7  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  8  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  9  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 10  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 11  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 12  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 13  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
336 [State 333] @0x080499bf, left buffer range after 13 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
336 [State 333] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
336 [State 333] Terminating state 333 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
336 [State 333] Switching from state 333 to state 0
Copied 34928 (count=1)
Deleting state 333 0x0x28179b80
336 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 332
>> fuzzInit: datum forking for value 333
>> fuzzInit: datum forking for value 333
336 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 333)
        (ReadLSB w32 0 v333_fuzz_symb_333)))
    state 334 with condition (Not (Eq false
         (Eq (w32 333)
             (ReadLSB w32 0 v333_fuzz_symb_333))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-333-8048a0e
Size=2 Low=0 splitIndex=1 high=1
336 [State 0] Switching from state 0 to state 334
Copied 34928 (count=1)
Finalizing TB execution 334
s2e_dummyMainFunction
tcg-llvm-tb-333-8048a0e
336 [State 334] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 333 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f5d: d6                                 salc                     nextPC: 0xbfb76f5e
  2  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  3  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  4  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  5  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  6  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  7  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  8  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  9  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
 10  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 11  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 12  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 13  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
337 [State 334] @0x080499bf, left buffer range after 13 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
337 [State 334] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
337 [State 334] Terminating state 334 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
337 [State 334] Switching from state 334 to state 0
Copied 34928 (count=1)
Deleting state 334 0x0x28179b80
337 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 333
>> fuzzInit: datum forking for value 334
>> fuzzInit: datum forking for value 334
337 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 334)
        (ReadLSB w32 0 v334_fuzz_symb_334)))
    state 335 with condition (Not (Eq false
         (Eq (w32 334)
             (ReadLSB w32 0 v334_fuzz_symb_334))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-334-8048a0e
Size=2 Low=0 splitIndex=1 high=1
337 [State 0] Switching from state 0 to state 335
Copied 34928 (count=1)
Finalizing TB execution 335
s2e_dummyMainFunction
tcg-llvm-tb-334-8048a0e
337 [State 335] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 334 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f5e: 59                                 pop ecx                  nextPC: 0xbfb76f5f
  2  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  3  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  4  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  5  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  6  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  7  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  8  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  9  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
 10  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 11  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 12  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
338 [State 335] @0x080499bf, left buffer range after 12 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
338 [State 335] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
338 [State 335] Terminating state 335 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
338 [State 335] Switching from state 335 to state 0
Copied 34928 (count=1)
Deleting state 335 0x0x28179b80
Firing timer event
338 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 334
>> fuzzInit: datum forking for value 335
>> fuzzInit: datum forking for value 335
338 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 335)
        (ReadLSB w32 0 v335_fuzz_symb_335)))
    state 336 with condition (Not (Eq false
         (Eq (w32 335)
             (ReadLSB w32 0 v335_fuzz_symb_335))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-335-8048a0e
Size=2 Low=0 splitIndex=1 high=1
338 [State 0] Switching from state 0 to state 336
Copied 34928 (count=1)
Finalizing TB execution 336
s2e_dummyMainFunction
tcg-llvm-tb-335-8048a0e
338 [State 336] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 335 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f5f: de                                 invalid                  nextPC: 0xbfb76f60
!!* pc != prev insn's next_pc; 0xbfb76f5f != bfb76f60
  2  7B @0xbfb76f5f:*de 3c 25 8d 4b 4b 8d               fidivr word [0x8d4b4b8d] nextPC: 0xbfb76f66
  3  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  4  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  5  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  6  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  7  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  8  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  9  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 10  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 11  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
338 [State 336] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
338 [State 336] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
338 [State 336] Terminating state 336 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
338 [State 336] Switching from state 336 to state 0
Copied 34928 (count=1)
Deleting state 336 0x0x28179b80
339 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 335
>> fuzzInit: datum forking for value 336
>> fuzzInit: datum forking for value 336
339 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 336)
        (ReadLSB w32 0 v336_fuzz_symb_336)))
    state 337 with condition (Not (Eq false
         (Eq (w32 336)
             (ReadLSB w32 0 v336_fuzz_symb_336))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-336-8048a0e
Size=2 Low=0 splitIndex=1 high=1
339 [State 0] Switching from state 0 to state 337
Copied 34928 (count=1)
Finalizing TB execution 337
s2e_dummyMainFunction
tcg-llvm-tb-336-8048a0e
Firing timer event
339 [State 337] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 336 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f60: 3c 25                              cmp al, 0x25             nextPC: 0xbfb76f62
  2  3B @0xbfb76f62: 8d 4b 4b                           lea ecx, [ebx+0x4b]      nextPC: 0xbfb76f65
  3  3B @0xbfb76f65: 8d 66 1e                           lea esp, [esi+0x1e]      nextPC: 0xbfb76f68
  4  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  5  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  6  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  7  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  8  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  9  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 10  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 11  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
340 [State 337] ERROR: too many killable insns (tot:10001;oob:0;kern:497;other:703), terminateStateEarly
340 [State 337] Terminating state 337 with message 'eliminated a state that exec'ed too many killable insns, possible hang or other unexpected error'
340 [State 337] Switching from state 337 to state 0
Copied 34928 (count=1)
Deleting state 337 0x0x280a2e80
340 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 336
>> fuzzInit: datum forking for value 337
>> fuzzInit: datum forking for value 337
340 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 337)
        (ReadLSB w32 0 v337_fuzz_symb_337)))
    state 338 with condition (Not (Eq false
         (Eq (w32 337)
             (ReadLSB w32 0 v337_fuzz_symb_337))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-337-8048a0e
Size=2 Low=0 splitIndex=1 high=1
340 [State 0] Switching from state 0 to state 338
Copied 34928 (count=1)
Finalizing TB execution 338
s2e_dummyMainFunction
tcg-llvm-tb-337-8048a0e
Firing timer event
340 [State 338] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 337 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f61: 25 8d 4b 4b 8d                     and eax, 0x8d4b4b8d      nextPC: 0xbfb76f66
  2  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  3  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  4  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  5  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  6  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  7  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  8  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  9  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 10  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
341 [State 338] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
341 [State 338] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
341 [State 338] Terminating state 338 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
341 [State 338] Switching from state 338 to state 0
Copied 34928 (count=1)
Deleting state 338 0x0x280a2e80
341 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 337
>> fuzzInit: datum forking for value 338
>> fuzzInit: datum forking for value 338
341 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 338)
        (ReadLSB w32 0 v338_fuzz_symb_338)))
    state 339 with condition (Not (Eq false
         (Eq (w32 338)
             (ReadLSB w32 0 v338_fuzz_symb_338))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-338-8048a0e
Size=2 Low=0 splitIndex=1 high=1
341 [State 0] Switching from state 0 to state 339
Copied 34928 (count=1)
Finalizing TB execution 339
s2e_dummyMainFunction
tcg-llvm-tb-338-8048a0e
341 [State 339] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 338 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  3B @0xbfb76f62: 8d 4b 4b                           lea ecx, [ebx+0x4b]      nextPC: 0xbfb76f65
  2  3B @0xbfb76f65: 8d 66 1e                           lea esp, [esi+0x1e]      nextPC: 0xbfb76f68
  3  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  4  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  5  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  6  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  7  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  8  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  9  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 10  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
342 [State 339] ERROR: too many killable insns (tot:10001;oob:0;kern:497;other:703), terminateStateEarly
342 [State 339] Terminating state 339 with message 'eliminated a state that exec'ed too many killable insns, possible hang or other unexpected error'
342 [State 339] Switching from state 339 to state 0
Copied 34928 (count=1)
Deleting state 339 0x0x2840f940
342 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 338
>> fuzzInit: datum forking for value 339
>> fuzzInit: datum forking for value 339
342 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 339)
        (ReadLSB w32 0 v339_fuzz_symb_339)))
    state 340 with condition (Not (Eq false
         (Eq (w32 339)
             (ReadLSB w32 0 v339_fuzz_symb_339))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-339-8048a0e
Size=2 Low=0 splitIndex=1 high=1
342 [State 0] Switching from state 0 to state 340
Copied 34928 (count=1)
Finalizing TB execution 340
s2e_dummyMainFunction
tcg-llvm-tb-339-8048a0e
Firing timer event
342 [State 340] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 339 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f63: 4b                                 dec ebx                  nextPC: 0xbfb76f64
  2  1B @0xbfb76f64: 4b                                 dec ebx                  nextPC: 0xbfb76f65
  3  3B @0xbfb76f65: 8d 66 1e                           lea esp, [esi+0x1e]      nextPC: 0xbfb76f68
  4  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  5  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  6  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  7  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  8  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  9  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
 10  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 11  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
343 [State 340] ERROR: too many killable insns (tot:10001;oob:0;kern:492;other:703), terminateStateEarly
343 [State 340] Terminating state 340 with message 'eliminated a state that exec'ed too many killable insns, possible hang or other unexpected error'
343 [State 340] Switching from state 340 to state 0
Copied 34928 (count=1)
Deleting state 340 0x0x2840f940
343 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 339
>> fuzzInit: datum forking for value 340
>> fuzzInit: datum forking for value 340
343 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 340)
        (ReadLSB w32 0 v340_fuzz_symb_340)))
    state 341 with condition (Not (Eq false
         (Eq (w32 340)
             (ReadLSB w32 0 v340_fuzz_symb_340))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-340-8048a0e
Size=2 Low=0 splitIndex=1 high=1
343 [State 0] Switching from state 0 to state 341
Copied 34928 (count=1)
Finalizing TB execution 341
s2e_dummyMainFunction
tcg-llvm-tb-340-8048a0e
Firing timer event
343 [State 341] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 340 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f64: 4b                                 dec ebx                  nextPC: 0xbfb76f65
  2  3B @0xbfb76f65: 8d 66 1e                           lea esp, [esi+0x1e]      nextPC: 0xbfb76f68
  3  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  4  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  5  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  6  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  7  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  8  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  9  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 10  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
344 [State 341] ERROR: too many killable insns (tot:10001;oob:0;kern:366;other:703), terminateStateEarly
344 [State 341] Terminating state 341 with message 'eliminated a state that exec'ed too many killable insns, possible hang or other unexpected error'
344 [State 341] Switching from state 341 to state 0
Copied 34928 (count=1)
Deleting state 341 0x0x2840f940
344 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 340
>> fuzzInit: datum forking for value 341
>> fuzzInit: datum forking for value 341
344 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 341)
        (ReadLSB w32 0 v341_fuzz_symb_341)))
    state 342 with condition (Not (Eq false
         (Eq (w32 341)
             (ReadLSB w32 0 v341_fuzz_symb_341))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-341-8048a0e
Size=2 Low=0 splitIndex=1 high=1
344 [State 0] Switching from state 0 to state 342
Copied 34928 (count=1)
Finalizing TB execution 342
s2e_dummyMainFunction
tcg-llvm-tb-341-8048a0e
Firing timer event
345 [State 342] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 341 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f65: 8d 66 1e                           lea esp, [esi+0x1e]      nextPC: 0xbfb76f68
  2  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  3  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  4  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  5  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  6  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  7  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  8  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  9  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
345 [State 342] ERROR: too many killable insns (tot:10001;oob:0;kern:365;other:703), terminateStateEarly
345 [State 342] Terminating state 342 with message 'eliminated a state that exec'ed too many killable insns, possible hang or other unexpected error'
345 [State 342] Switching from state 342 to state 0
Copied 34928 (count=1)
Deleting state 342 0x0x287cfc80
345 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 341
>> fuzzInit: datum forking for value 342
>> fuzzInit: datum forking for value 342
346 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 342)
        (ReadLSB w32 0 v342_fuzz_symb_342)))
    state 343 with condition (Not (Eq false
         (Eq (w32 342)
             (ReadLSB w32 0 v342_fuzz_symb_342))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-342-8048a0e
Size=2 Low=0 splitIndex=1 high=1
346 [State 0] Switching from state 0 to state 343
Copied 34928 (count=1)
Finalizing TB execution 343
s2e_dummyMainFunction
tcg-llvm-tb-342-8048a0e
Firing timer event
346 [State 343] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 342 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f66: 66 1e                              o16 push ds              nextPC: 0xbfb76f68
  2  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  3  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  4  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  5  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  6  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  7  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  8  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  9  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
346 [State 343] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
346 [State 343] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
346 [State 343] Terminating state 343 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
346 [State 343] Switching from state 343 to state 0
Copied 34928 (count=1)
Deleting state 343 0x0x287cfc80
346 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 342
>> fuzzInit: datum forking for value 343
>> fuzzInit: datum forking for value 343
346 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 343)
        (ReadLSB w32 0 v343_fuzz_symb_343)))
    state 344 with condition (Not (Eq false
         (Eq (w32 343)
             (ReadLSB w32 0 v343_fuzz_symb_343))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-343-8048a0e
Size=2 Low=0 splitIndex=1 high=1
346 [State 0] Switching from state 0 to state 344
Copied 34928 (count=1)
Finalizing TB execution 344
s2e_dummyMainFunction
tcg-llvm-tb-343-8048a0e
346 [State 344] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 343 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f67: 1e                                 push ds                  nextPC: 0xbfb76f68
  2  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  3  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  4  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  5  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  6  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  7  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  8  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  9  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
347 [State 344] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
347 [State 344] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
347 [State 344] Terminating state 344 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
347 [State 344] Switching from state 344 to state 0
Copied 34928 (count=1)
Deleting state 344 0x0x286b5da0
Firing timer event
347 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 343
>> fuzzInit: datum forking for value 344
>> fuzzInit: datum forking for value 344
347 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 344)
        (ReadLSB w32 0 v344_fuzz_symb_344)))
    state 345 with condition (Not (Eq false
         (Eq (w32 344)
             (ReadLSB w32 0 v344_fuzz_symb_344))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-344-8048a0e
Size=2 Low=0 splitIndex=1 high=1
347 [State 0] Switching from state 0 to state 345
Copied 34928 (count=1)
Finalizing TB execution 345
s2e_dummyMainFunction
tcg-llvm-tb-344-8048a0e
347 [State 345] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 344 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  4B @0xbfb76f68: 84 54 9f 58                        test [edi+ebx*4+0x58], dl nextPC: 0xbfb76f6c
  2  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  3  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  4  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  5  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  6  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  7  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  8  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
347 [State 345] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
347 [State 345] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
347 [State 345] Terminating state 345 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
347 [State 345] Switching from state 345 to state 0
Copied 34928 (count=1)
Deleting state 345 0x0x286b5da0
348 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 344
>> fuzzInit: datum forking for value 345
>> fuzzInit: datum forking for value 345
348 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 345)
        (ReadLSB w32 0 v345_fuzz_symb_345)))
    state 346 with condition (Not (Eq false
         (Eq (w32 345)
             (ReadLSB w32 0 v345_fuzz_symb_345))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-345-8048a0e
Size=2 Low=0 splitIndex=1 high=1
348 [State 0] Switching from state 0 to state 346
Copied 34928 (count=1)
Finalizing TB execution 346
s2e_dummyMainFunction
tcg-llvm-tb-345-8048a0e
Firing timer event
348 [State 346] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 345 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f69: 54                                 push esp                 nextPC: 0xbfb76f6a
  2  1B @0xbfb76f6a: 9f                                 lahf                     nextPC: 0xbfb76f6b
  3  1B @0xbfb76f6b: 58                                 pop eax                  nextPC: 0xbfb76f6c
  4  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  5  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  6  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  7  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  8  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  9  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
 10  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
348 [State 346] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
348 [State 346] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
348 [State 346] Terminating state 346 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
348 [State 346] Switching from state 346 to state 0
Copied 34928 (count=1)
Deleting state 346 0x0x286b5da0
348 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 345
>> fuzzInit: datum forking for value 346
>> fuzzInit: datum forking for value 346
349 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 346)
        (ReadLSB w32 0 v346_fuzz_symb_346)))
    state 347 with condition (Not (Eq false
         (Eq (w32 346)
             (ReadLSB w32 0 v346_fuzz_symb_346))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-346-8048a0e
Size=2 Low=0 splitIndex=1 high=1
349 [State 0] Switching from state 0 to state 347
Copied 34928 (count=1)
Finalizing TB execution 347
s2e_dummyMainFunction
tcg-llvm-tb-346-8048a0e
349 [State 347] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 346 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f6a: 9f                                 lahf                     nextPC: 0xbfb76f6b
  2  1B @0xbfb76f6b: 58                                 pop eax                  nextPC: 0xbfb76f6c
  3  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  4  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  5  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  6  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  7  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  8  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  9  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
349 [State 347] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
349 [State 347] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
349 [State 347] Terminating state 347 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
349 [State 347] Switching from state 347 to state 0
Copied 34928 (count=1)
Deleting state 347 0x0x286b5da0
349 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 346
>> fuzzInit: datum forking for value 347
>> fuzzInit: datum forking for value 347
349 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 347)
        (ReadLSB w32 0 v347_fuzz_symb_347)))
    state 348 with condition (Not (Eq false
         (Eq (w32 347)
             (ReadLSB w32 0 v347_fuzz_symb_347))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-347-8048a0e
Size=2 Low=0 splitIndex=1 high=1
349 [State 0] Switching from state 0 to state 348
Copied 34928 (count=1)
Finalizing TB execution 348
s2e_dummyMainFunction
tcg-llvm-tb-347-8048a0e
349 [State 348] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 347 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f6b: 58                                 pop eax                  nextPC: 0xbfb76f6c
  2  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  3  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  4  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  5  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  6  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  7  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  8  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
350 [State 348] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
350 [State 348] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
350 [State 348] Terminating state 348 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
350 [State 348] Switching from state 348 to state 0
Copied 34928 (count=1)
Deleting state 348 0x0x286b5da0
350 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 347
>> fuzzInit: datum forking for value 348
>> fuzzInit: datum forking for value 348
350 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 348)
        (ReadLSB w32 0 v348_fuzz_symb_348)))
    state 349 with condition (Not (Eq false
         (Eq (w32 348)
             (ReadLSB w32 0 v348_fuzz_symb_348))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-348-8048a0e
Size=2 Low=0 splitIndex=1 high=1
350 [State 0] Switching from state 0 to state 349
Copied 34928 (count=1)
Finalizing TB execution 349
s2e_dummyMainFunction
tcg-llvm-tb-348-8048a0e
Firing timer event
350 [State 349] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 348 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f6c: b0 86                              mov al, 0x86             nextPC: 0xbfb76f6e
  2  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  3  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  4  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  5  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  6  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  7  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
350 [State 349] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
350 [State 349] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
350 [State 349] Terminating state 349 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
350 [State 349] Switching from state 349 to state 0
Copied 34928 (count=1)
Deleting state 349 0x0x286b5da0
351 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 348
>> fuzzInit: datum forking for value 349
>> fuzzInit: datum forking for value 349
351 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 349)
        (ReadLSB w32 0 v349_fuzz_symb_349)))
    state 350 with condition (Not (Eq false
         (Eq (w32 349)
             (ReadLSB w32 0 v349_fuzz_symb_349))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-349-8048a0e
Size=2 Low=0 splitIndex=1 high=1
351 [State 0] Switching from state 0 to state 350
Copied 34928 (count=1)
Finalizing TB execution 350
s2e_dummyMainFunction
tcg-llvm-tb-349-8048a0e
351 [State 350] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 349 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76f6d: 86 be 0e 66 a7 be                  xchg [esi+0xbea7660e], bh nextPC: 0xbfb76f73
  2  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  3  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  4  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  5  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  6  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
351 [State 350] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
351 [State 350] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
351 [State 350] Terminating state 350 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
351 [State 350] Switching from state 350 to state 0
Copied 34928 (count=1)
Deleting state 350 0x0x28814e50
Firing timer event
351 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 349
>> fuzzInit: datum forking for value 350
>> fuzzInit: datum forking for value 350
351 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 350)
        (ReadLSB w32 0 v350_fuzz_symb_350)))
    state 351 with condition (Not (Eq false
         (Eq (w32 350)
             (ReadLSB w32 0 v350_fuzz_symb_350))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-350-8048a0e
Size=2 Low=0 splitIndex=1 high=1
351 [State 0] Switching from state 0 to state 351
Copied 34928 (count=1)
Finalizing TB execution 351
s2e_dummyMainFunction
tcg-llvm-tb-350-8048a0e
352 [State 351] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 350 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f6e: be 0e 66 a7 be                     mov esi, 0xbea7660e      nextPC: 0xbfb76f73
  2  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  3  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  4  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  5  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  6  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
352 [State 351] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
352 [State 351] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
352 [State 351] Terminating state 351 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
352 [State 351] Switching from state 351 to state 0
Copied 34928 (count=1)
Deleting state 351 0x0x28296860
352 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 350
>> fuzzInit: datum forking for value 351
>> fuzzInit: datum forking for value 351
352 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 351)
        (ReadLSB w32 0 v351_fuzz_symb_351)))
    state 352 with condition (Not (Eq false
         (Eq (w32 351)
             (ReadLSB w32 0 v351_fuzz_symb_351))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-351-8048a0e
Size=2 Low=0 splitIndex=1 high=1
352 [State 0] Switching from state 0 to state 352
Copied 34928 (count=1)
Finalizing TB execution 352
s2e_dummyMainFunction
tcg-llvm-tb-351-8048a0e
Firing timer event
352 [State 352] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 351 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f6f: 0e                                 push cs                  nextPC: 0xbfb76f70
  2  2B @0xbfb76f70: 66 a7                              cmpsw                    nextPC: 0xbfb76f72
  3  5B @0xbfb76f72: be 49 66 b6 bf                     mov esi, 0xbfb66649      nextPC: 0xbfb76f77
  4  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  5  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  6  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
353 [State 352] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
353 [State 352] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
353 [State 352] Terminating state 352 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
353 [State 352] Switching from state 352 to state 0
Copied 34928 (count=1)
Deleting state 352 0x0x28296860
353 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 351
>> fuzzInit: datum forking for value 352
>> fuzzInit: datum forking for value 352
353 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 352)
        (ReadLSB w32 0 v352_fuzz_symb_352)))
    state 353 with condition (Not (Eq false
         (Eq (w32 352)
             (ReadLSB w32 0 v352_fuzz_symb_352))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-352-8048a0e
Size=2 Low=0 splitIndex=1 high=1
353 [State 0] Switching from state 0 to state 353
Copied 34928 (count=1)
Finalizing TB execution 353
s2e_dummyMainFunction
tcg-llvm-tb-352-8048a0e
353 [State 353] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 352 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f70: 66 a7                              cmpsw                    nextPC: 0xbfb76f72
  2  5B @0xbfb76f72: be 49 66 b6 bf                     mov esi, 0xbfb66649      nextPC: 0xbfb76f77
  3  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  4  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  5  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
353 [State 353] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
353 [State 353] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
353 [State 353] Terminating state 353 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
353 [State 353] Switching from state 353 to state 0
Copied 34928 (count=1)
Deleting state 353 0x0x28296860
354 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 352
>> fuzzInit: datum forking for value 353
>> fuzzInit: datum forking for value 353
354 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 353)
        (ReadLSB w32 0 v353_fuzz_symb_353)))
    state 354 with condition (Not (Eq false
         (Eq (w32 353)
             (ReadLSB w32 0 v353_fuzz_symb_353))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-353-8048a0e
Size=2 Low=0 splitIndex=1 high=1
354 [State 0] Switching from state 0 to state 354
Copied 34928 (count=1)
Finalizing TB execution 354
s2e_dummyMainFunction
tcg-llvm-tb-353-8048a0e
354 [State 354] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 353 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f71: a7                                 cmpsd                    nextPC: 0xbfb76f72
  2  5B @0xbfb76f72: be 49 66 b6 bf                     mov esi, 0xbfb66649      nextPC: 0xbfb76f77
  3  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  4  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  5  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
354 [State 354] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
354 [State 354] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
354 [State 354] Terminating state 354 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
354 [State 354] Switching from state 354 to state 0
Copied 34928 (count=1)
Deleting state 354 0x0x28296860
354 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 353
>> fuzzInit: datum forking for value 354
>> fuzzInit: datum forking for value 354
354 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 354)
        (ReadLSB w32 0 v354_fuzz_symb_354)))
    state 355 with condition (Not (Eq false
         (Eq (w32 354)
             (ReadLSB w32 0 v354_fuzz_symb_354))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-354-8048a0e
Size=2 Low=0 splitIndex=1 high=1
354 [State 0] Switching from state 0 to state 355
Copied 34928 (count=1)
Finalizing TB execution 355
s2e_dummyMainFunction
tcg-llvm-tb-354-8048a0e
Firing timer event
355 [State 355] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 354 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f72: be 49 66 b6 bf                     mov esi, 0xbfb66649      nextPC: 0xbfb76f77
  2  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  3  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  4  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
355 [State 355] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
355 [State 355] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
355 [State 355] Terminating state 355 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
355 [State 355] Switching from state 355 to state 0
Copied 34928 (count=1)
Deleting state 355 0x0x28730190
355 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 354
>> fuzzInit: datum forking for value 355
>> fuzzInit: datum forking for value 355
355 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 355)
        (ReadLSB w32 0 v355_fuzz_symb_355)))
    state 356 with condition (Not (Eq false
         (Eq (w32 355)
             (ReadLSB w32 0 v355_fuzz_symb_355))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-355-8048a0e
Size=2 Low=0 splitIndex=1 high=1
355 [State 0] Switching from state 0 to state 356
Copied 34928 (count=1)
Finalizing TB execution 356
s2e_dummyMainFunction
tcg-llvm-tb-355-8048a0e
355 [State 356] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 355 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f73: 49                                 dec ecx                  nextPC: 0xbfb76f74
  2  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  3  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  4  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  5  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
Firing timer event
356 [State 356] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
356 [State 356] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
356 [State 356] Terminating state 356 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
356 [State 356] Switching from state 356 to state 0
Copied 34928 (count=1)
Deleting state 356 0x0x28730190
356 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 355
>> fuzzInit: datum forking for value 356
>> fuzzInit: datum forking for value 356
356 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 356)
        (ReadLSB w32 0 v356_fuzz_symb_356)))
    state 357 with condition (Not (Eq false
         (Eq (w32 356)
             (ReadLSB w32 0 v356_fuzz_symb_356))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-356-8048a0e
Size=2 Low=0 splitIndex=1 high=1
356 [State 0] Switching from state 0 to state 357
Copied 34928 (count=1)
Finalizing TB execution 357
s2e_dummyMainFunction
tcg-llvm-tb-356-8048a0e
356 [State 357] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 356 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f74: 66 b6 bf                           o16 mov dh, 0xbf         nextPC: 0xbfb76f77
  2  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  3  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  4  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
356 [State 357] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
356 [State 357] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
356 [State 357] Terminating state 357 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
356 [State 357] Switching from state 357 to state 0
Copied 34928 (count=1)
Deleting state 357 0x0x28730190
356 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 356
>> fuzzInit: datum forking for value 357
>> fuzzInit: datum forking for value 357
357 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 357)
        (ReadLSB w32 0 v357_fuzz_symb_357)))
    state 358 with condition (Not (Eq false
         (Eq (w32 357)
             (ReadLSB w32 0 v357_fuzz_symb_357))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-357-8048a0e
Size=2 Low=0 splitIndex=1 high=1
357 [State 0] Switching from state 0 to state 358
Copied 34928 (count=1)
Finalizing TB execution 358
s2e_dummyMainFunction
tcg-llvm-tb-357-8048a0e
Firing timer event
357 [State 358] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 357 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f75: b6 bf                              mov dh, 0xbf             nextPC: 0xbfb76f77
  2  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  3  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  4  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
357 [State 358] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
357 [State 358] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
357 [State 358] Terminating state 358 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
357 [State 358] Switching from state 358 to state 0
Copied 34928 (count=1)
Deleting state 358 0x0x28730190
357 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 357
>> fuzzInit: datum forking for value 358
>> fuzzInit: datum forking for value 358
357 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 358)
        (ReadLSB w32 0 v358_fuzz_symb_358)))
    state 359 with condition (Not (Eq false
         (Eq (w32 358)
             (ReadLSB w32 0 v358_fuzz_symb_358))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-358-8048a0e
Size=2 Low=0 splitIndex=1 high=1
357 [State 0] Switching from state 0 to state 359
Copied 34928 (count=1)
Finalizing TB execution 359
s2e_dummyMainFunction
tcg-llvm-tb-358-8048a0e
358 [State 359] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 358 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f76: bf 4f c0 37 84                     mov edi, 0x8437c04f      nextPC: 0xbfb76f7b
  2  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
  3  5B @0xbfb76f7d: 35 66 2a 84 54                     xor eax, 0x54842a66      nextPC: 0xbfb76f82
  4  1B @0xbfb76f82: d6                                 salc                     nextPC: 0xbfb76f83
  5  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  6  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  7  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  8  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  9  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
 10  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
Firing timer event
358 [State 359] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
358 [State 359] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
358 [State 359] Terminating state 359 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
358 [State 359] Switching from state 359 to state 0
Copied 34928 (count=1)
Deleting state 359 0x0x28730190
358 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 358
>> fuzzInit: datum forking for value 359
>> fuzzInit: datum forking for value 359
358 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 359)
        (ReadLSB w32 0 v359_fuzz_symb_359)))
    state 360 with condition (Not (Eq false
         (Eq (w32 359)
             (ReadLSB w32 0 v359_fuzz_symb_359))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-359-8048a0e
Size=2 Low=0 splitIndex=1 high=1
358 [State 0] Switching from state 0 to state 360
Copied 34928 (count=1)
Finalizing TB execution 360
s2e_dummyMainFunction
tcg-llvm-tb-359-8048a0e
358 [State 360] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 359 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f77: 4f                                 dec edi                  nextPC: 0xbfb76f78
  2  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  3  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
359 [State 360] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
359 [State 360] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
359 [State 360] Terminating state 360 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
359 [State 360] Switching from state 360 to state 0
Copied 34928 (count=1)
Deleting state 360 0x0x28730190
Firing timer event
359 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 359
>> fuzzInit: datum forking for value 360
>> fuzzInit: datum forking for value 360
359 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 360)
        (ReadLSB w32 0 v360_fuzz_symb_360)))
    state 361 with condition (Not (Eq false
         (Eq (w32 360)
             (ReadLSB w32 0 v360_fuzz_symb_360))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-360-8048a0e
Size=2 Low=0 splitIndex=1 high=1
359 [State 0] Switching from state 0 to state 361
Copied 34928 (count=1)
Finalizing TB execution 361
s2e_dummyMainFunction
tcg-llvm-tb-360-8048a0e
359 [State 361] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 360 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f78: c0 37 84                           shl byte [edi], 0x84     nextPC: 0xbfb76f7b
  2  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
359 [State 361] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb76f7b, disasm in debug.
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
359 [State 361] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
359 [State 361] Terminating state 361 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
359 [State 361] Switching from state 361 to state 0
Copied 34928 (count=1)
Deleting state 361 0x0x28a69f20
360 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 360
>> fuzzInit: datum forking for value 361
>> fuzzInit: datum forking for value 361
360 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 361)
        (ReadLSB w32 0 v361_fuzz_symb_361)))
    state 362 with condition (Not (Eq false
         (Eq (w32 361)
             (ReadLSB w32 0 v361_fuzz_symb_361))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-361-8048a0e
Size=2 Low=0 splitIndex=1 high=1
360 [State 0] Switching from state 0 to state 362
Copied 34928 (count=1)
Finalizing TB execution 362
s2e_dummyMainFunction
tcg-llvm-tb-361-8048a0e
Firing timer event
360 [State 362] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 361 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f79: 37                                 aaa                      nextPC: 0xbfb76f7a
  2  3B @0xbfb76f7a: 84 72 c0                           test [edx-0x40], dh      nextPC: 0xbfb76f7d
  3  5B @0xbfb76f7d: 35 66 2a 84 54                     xor eax, 0x54842a66      nextPC: 0xbfb76f82
  4  1B @0xbfb76f82: d6                                 salc                     nextPC: 0xbfb76f83
  5  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  6  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  7  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  8  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  9  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
 10  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
360 [State 362] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
360 [State 362] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
360 [State 362] Terminating state 362 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
360 [State 362] Switching from state 362 to state 0
Copied 34928 (count=1)
Deleting state 362 0x0x28a69f20
360 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 361
>> fuzzInit: datum forking for value 362
>> fuzzInit: datum forking for value 362
361 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 362)
        (ReadLSB w32 0 v362_fuzz_symb_362)))
    state 363 with condition (Not (Eq false
         (Eq (w32 362)
             (ReadLSB w32 0 v362_fuzz_symb_362))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-362-8048a0e
Size=2 Low=0 splitIndex=1 high=1
361 [State 0] Switching from state 0 to state 363
Copied 34928 (count=1)
Finalizing TB execution 363
s2e_dummyMainFunction
tcg-llvm-tb-362-8048a0e
361 [State 363] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 362 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f7a: 84 72 c0                           test [edx-0x40], dh      nextPC: 0xbfb76f7d
  2  5B @0xbfb76f7d: 35 66 2a 84 54                     xor eax, 0x54842a66      nextPC: 0xbfb76f82
  3  1B @0xbfb76f82: d6                                 salc                     nextPC: 0xbfb76f83
  4  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  5  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  6  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  7  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  8  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  9  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
361 [State 363] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
361 [State 363] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
361 [State 363] Terminating state 363 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
361 [State 363] Switching from state 363 to state 0
Copied 34928 (count=1)
Deleting state 363 0x0x28a69f20
Firing timer event
361 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 362
>> fuzzInit: datum forking for value 363
>> fuzzInit: datum forking for value 363
361 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 363)
        (ReadLSB w32 0 v363_fuzz_symb_363)))
    state 364 with condition (Not (Eq false
         (Eq (w32 363)
             (ReadLSB w32 0 v363_fuzz_symb_363))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-363-8048a0e
Size=2 Low=0 splitIndex=1 high=1
361 [State 0] Switching from state 0 to state 364
Copied 34928 (count=1)
Finalizing TB execution 364
s2e_dummyMainFunction
tcg-llvm-tb-363-8048a0e
361 [State 364] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 363 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f7b: 72 c0                              jb 0xffffffffffffffc2    nextPC: 0xbfb76f7d jmpPc: 0xbfb76f3d
  2  5B @0xbfb76f7d: 35 66 2a 84 54                     xor eax, 0x54842a66      nextPC: 0xbfb76f82
  3  1B @0xbfb76f82: d6                                 salc                     nextPC: 0xbfb76f83
  4  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  5  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  6  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  7  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  8  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  9  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
362 [State 364] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
362 [State 364] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
362 [State 364] Terminating state 364 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
362 [State 364] Switching from state 364 to state 0
Copied 34928 (count=1)
Deleting state 364 0x0x28a69f20
362 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 363
>> fuzzInit: datum forking for value 364
>> fuzzInit: datum forking for value 364
362 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 364)
        (ReadLSB w32 0 v364_fuzz_symb_364)))
    state 365 with condition (Not (Eq false
         (Eq (w32 364)
             (ReadLSB w32 0 v364_fuzz_symb_364))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-364-8048a0e
Size=2 Low=0 splitIndex=1 high=1
362 [State 0] Switching from state 0 to state 365
Copied 34928 (count=1)
Finalizing TB execution 365
s2e_dummyMainFunction
tcg-llvm-tb-364-8048a0e
Firing timer event
362 [State 365] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 364 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  7B @0xbfb76f7c: c0 35 66 2a 84 54 d6               shl byte [0x54842a66], 0xd6 nextPC: 0xbfb76f83
  2  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  3  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  4  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  5  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  6  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  7  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
362 [State 365] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
362 [State 365] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
362 [State 365] Terminating state 365 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
362 [State 365] Switching from state 365 to state 0
Copied 34928 (count=1)
Deleting state 365 0x0x28a69f20
362 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 364
>> fuzzInit: datum forking for value 365
>> fuzzInit: datum forking for value 365
363 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 365)
        (ReadLSB w32 0 v365_fuzz_symb_365)))
    state 366 with condition (Not (Eq false
         (Eq (w32 365)
             (ReadLSB w32 0 v365_fuzz_symb_365))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-365-8048a0e
Size=2 Low=0 splitIndex=1 high=1
363 [State 0] Switching from state 0 to state 366
Copied 34928 (count=1)
Finalizing TB execution 366
s2e_dummyMainFunction
tcg-llvm-tb-365-8048a0e
363 [State 366] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 365 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f7d: 35 66 2a 84 54                     xor eax, 0x54842a66      nextPC: 0xbfb76f82
  2  1B @0xbfb76f82: d6                                 salc                     nextPC: 0xbfb76f83
  3  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  4  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  5  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  6  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  7  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  8  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
Firing timer event
363 [State 366] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
363 [State 366] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
363 [State 366] Terminating state 366 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
363 [State 366] Switching from state 366 to state 0
Copied 34928 (count=1)
Deleting state 366 0x0x28a69f20
363 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 365
>> fuzzInit: datum forking for value 366
>> fuzzInit: datum forking for value 366
364 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 366)
        (ReadLSB w32 0 v366_fuzz_symb_366)))
    state 367 with condition (Not (Eq false
         (Eq (w32 366)
             (ReadLSB w32 0 v366_fuzz_symb_366))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-366-8048a0e
Size=2 Low=0 splitIndex=1 high=1
364 [State 0] Switching from state 0 to state 367
Copied 34928 (count=1)
Finalizing TB execution 367
s2e_dummyMainFunction
tcg-llvm-tb-366-8048a0e
364 [State 367] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 366 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  8B @0xbfb76f7e: 66 2a 84 54 d6 21 90 90            o16 sub al, [esp+edx*2+0x909021d6] nextPC: 0xbfb76f86
  2  1B @0xbfb76f86: 90                                 nop                      nextPC: 0xbfb76f87
  3  1B @0xbfb76f87: 90                                 nop                      nextPC: 0xbfb76f88
  4  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  5  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  6  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  7  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  8  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  9  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
364 [State 367] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
364 [State 367] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
364 [State 367] Terminating state 367 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
364 [State 367] Switching from state 367 to state 0
Copied 34928 (count=1)
Deleting state 367 0x0x28a69f20
364 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 366
>> fuzzInit: datum forking for value 367
>> fuzzInit: datum forking for value 367
365 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 367)
        (ReadLSB w32 0 v367_fuzz_symb_367)))
    state 368 with condition (Not (Eq false
         (Eq (w32 367)
             (ReadLSB w32 0 v367_fuzz_symb_367))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-367-8048a0e
Size=2 Low=0 splitIndex=1 high=1
365 [State 0] Switching from state 0 to state 368
Copied 34928 (count=1)
Finalizing TB execution 368
s2e_dummyMainFunction
tcg-llvm-tb-367-8048a0e
365 [State 368] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 367 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  7B @0xbfb76f7f: 2a 84 54 d6 21 90 90               sub al, [esp+edx*2+0x909021d6] nextPC: 0xbfb76f86
  2  1B @0xbfb76f86: 90                                 nop                      nextPC: 0xbfb76f87
  3  1B @0xbfb76f87: 90                                 nop                      nextPC: 0xbfb76f88
  4  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  5  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  6  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  7  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  8  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  9  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
365 [State 368] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
365 [State 368] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
365 [State 368] Terminating state 368 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
365 [State 368] Switching from state 368 to state 0
Copied 34928 (count=1)
Deleting state 368 0x0x28a69f20
366 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 367
>> fuzzInit: datum forking for value 368
>> fuzzInit: datum forking for value 368
366 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 368)
        (ReadLSB w32 0 v368_fuzz_symb_368)))
    state 369 with condition (Not (Eq false
         (Eq (w32 368)
             (ReadLSB w32 0 v368_fuzz_symb_368))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-368-8048a0e
Size=2 Low=0 splitIndex=1 high=1
366 [State 0] Switching from state 0 to state 369
Copied 34928 (count=1)
Finalizing TB execution 369
s2e_dummyMainFunction
tcg-llvm-tb-368-8048a0e
Firing timer event
366 [State 369] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 368 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  4B @0xbfb76f80: 84 54 d6 21                        test [esi+edx*8+0x21], dl nextPC: 0xbfb76f84
  2  1B @0xbfb76f84: 90                                 nop                      nextPC: 0xbfb76f85
  3  1B @0xbfb76f85: 90                                 nop                      nextPC: 0xbfb76f86
  4  1B @0xbfb76f86: 90                                 nop                      nextPC: 0xbfb76f87
  5  1B @0xbfb76f87: 90                                 nop                      nextPC: 0xbfb76f88
  6  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  7  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  8  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  9  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
 10  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
 11  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
367 [State 369] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
367 [State 369] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
367 [State 369] Terminating state 369 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
367 [State 369] Switching from state 369 to state 0
Copied 34928 (count=1)
Deleting state 369 0x0x28a69f20
367 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 368
>> fuzzInit: datum forking for value 369
>> fuzzInit: datum forking for value 369
367 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 369)
        (ReadLSB w32 0 v369_fuzz_symb_369)))
    state 370 with condition (Not (Eq false
         (Eq (w32 369)
             (ReadLSB w32 0 v369_fuzz_symb_369))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-369-8048a0e
Size=2 Low=0 splitIndex=1 high=1
367 [State 0] Switching from state 0 to state 370
Copied 34928 (count=1)
Finalizing TB execution 370
s2e_dummyMainFunction
tcg-llvm-tb-369-8048a0e
Firing timer event
367 [State 370] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 369 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f81: 54                                 push esp                 nextPC: 0xbfb76f82
  2  1B @0xbfb76f82: d6                                 salc                     nextPC: 0xbfb76f83
  3  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  4  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  5  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  6  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  7  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  8  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
368 [State 370] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
368 [State 370] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
368 [State 370] Terminating state 370 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
368 [State 370] Switching from state 370 to state 0
Copied 34928 (count=1)
Deleting state 370 0x0x2900c760
Firing timer event
369 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 369
>> fuzzInit: datum forking for value 370
>> fuzzInit: datum forking for value 370
369 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 370)
        (ReadLSB w32 0 v370_fuzz_symb_370)))
    state 371 with condition (Not (Eq false
         (Eq (w32 370)
             (ReadLSB w32 0 v370_fuzz_symb_370))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-370-8048a0e
Size=2 Low=0 splitIndex=1 high=1
369 [State 0] Switching from state 0 to state 371
Copied 34928 (count=1)
Finalizing TB execution 371
s2e_dummyMainFunction
tcg-llvm-tb-370-8048a0e
369 [State 371] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 370 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f82: d6                                 salc                     nextPC: 0xbfb76f83
  2  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  3  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  4  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  5  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  6  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  7  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
369 [State 371] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
369 [State 371] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
369 [State 371] Terminating state 371 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
369 [State 371] Switching from state 371 to state 0
Copied 34928 (count=1)
Deleting state 371 0x0x2900c760
Firing timer event
369 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 370
>> fuzzInit: datum forking for value 371
>> fuzzInit: datum forking for value 371
>> fuzzInit: datum forking for value 371
370 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 371)
        (ReadLSB w32 0 v371_fuzz_symb_371)))
    state 372 with condition (Not (Eq false
         (Eq (w32 371)
             (ReadLSB w32 0 v371_fuzz_symb_371))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-371-8048a0e
Size=2 Low=0 splitIndex=1 high=1
370 [State 0] Switching from state 0 to state 372
Copied 34928 (count=1)
Finalizing TB execution 372
s2e_dummyMainFunction
tcg-llvm-tb-371-8048a0e
370 [State 372] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 371 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76f83: 21 90 90 90 90 90                  and [eax+0x90909090], edx nextPC: 0xbfb76f89
  2  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  3  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  4  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  5  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  6  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
370 [State 372] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb76f8e, disasm in debug.
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
370 [State 372] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
370 [State 372] Terminating state 372 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
370 [State 372] Switching from state 372 to state 0
Copied 34928 (count=1)
Deleting state 372 0x0x29058010
370 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 371
>> fuzzInit: datum forking for value 372
>> fuzzInit: datum forking for value 372
370 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 372)
        (ReadLSB w32 0 v372_fuzz_symb_372)))
    state 373 with condition (Not (Eq false
         (Eq (w32 372)
             (ReadLSB w32 0 v372_fuzz_symb_372))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-372-8048a0e
Size=2 Low=0 splitIndex=1 high=1
370 [State 0] Switching from state 0 to state 373
Copied 34928 (count=1)
Finalizing TB execution 373
s2e_dummyMainFunction
tcg-llvm-tb-372-8048a0e
Firing timer event
370 [State 373] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 372 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f84: 90                                 nop                      nextPC: 0xbfb76f85
  2  1B @0xbfb76f85: 90                                 nop                      nextPC: 0xbfb76f86
  3  1B @0xbfb76f86: 90                                 nop                      nextPC: 0xbfb76f87
  4  1B @0xbfb76f87: 90                                 nop                      nextPC: 0xbfb76f88
  5  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  6  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  7  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  8  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  9  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
 10  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
 11  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
 12  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 13  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 14  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 15  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 16  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 373] CPU dump
EAX=0xbfb76f94
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x8c
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469908:0xbfb76f94
371 [State 373] Terminating state 373 with message 'eliminated this false positive, out of range syscall number found at eip'
371 [State 373] Switching from state 373 to state 0
Copied 34928 (count=1)
Deleting state 373 0x0x29058010
371 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 372
>> fuzzInit: datum forking for value 373
>> fuzzInit: datum forking for value 373
371 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 373)
        (ReadLSB w32 0 v373_fuzz_symb_373)))
    state 374 with condition (Not (Eq false
         (Eq (w32 373)
             (ReadLSB w32 0 v373_fuzz_symb_373))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-373-8048a0e
Size=2 Low=0 splitIndex=1 high=1
371 [State 0] Switching from state 0 to state 374
Copied 34928 (count=1)
Finalizing TB execution 374
s2e_dummyMainFunction
tcg-llvm-tb-373-8048a0e
371 [State 374] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 373 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f85: 90                                 nop                      nextPC: 0xbfb76f86
  2  1B @0xbfb76f86: 90                                 nop                      nextPC: 0xbfb76f87
  3  1B @0xbfb76f87: 90                                 nop                      nextPC: 0xbfb76f88
  4  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  5  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  6  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  7  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  8  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  9  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
 10  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
 11  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 12  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 13  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 14  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 15  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 374] CPU dump
EAX=0xbfb76f95
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x8b
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469909:0xbfb76f95
371 [State 374] Terminating state 374 with message 'eliminated this false positive, out of range syscall number found at eip'
371 [State 374] Switching from state 374 to state 0
Copied 34928 (count=1)
Deleting state 374 0x0x28f6ee80
Firing timer event
372 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 373
>> fuzzInit: datum forking for value 374
>> fuzzInit: datum forking for value 374
372 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 374)
        (ReadLSB w32 0 v374_fuzz_symb_374)))
    state 375 with condition (Not (Eq false
         (Eq (w32 374)
             (ReadLSB w32 0 v374_fuzz_symb_374))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-374-8048a0e
Size=2 Low=0 splitIndex=1 high=1
372 [State 0] Switching from state 0 to state 375
Copied 34928 (count=1)
Finalizing TB execution 375
s2e_dummyMainFunction
tcg-llvm-tb-374-8048a0e
372 [State 375] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 374 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f86: 90                                 nop                      nextPC: 0xbfb76f87
  2  1B @0xbfb76f87: 90                                 nop                      nextPC: 0xbfb76f88
  3  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  4  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  5  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  6  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  7  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  8  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  9  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
 10  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 11  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 12  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 13  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 14  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 375] CPU dump
EAX=0xbfb76f96
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x8a
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469910:0xbfb76f96
372 [State 375] Terminating state 375 with message 'eliminated this false positive, out of range syscall number found at eip'
372 [State 375] Switching from state 375 to state 0
Copied 34928 (count=1)
Deleting state 375 0x0x28f6ee80
372 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 374
>> fuzzInit: datum forking for value 375
>> fuzzInit: datum forking for value 375
>> fuzzInit: datum forking for value 375
373 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 375)
        (ReadLSB w32 0 v375_fuzz_symb_375)))
    state 376 with condition (Not (Eq false
         (Eq (w32 375)
             (ReadLSB w32 0 v375_fuzz_symb_375))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-375-8048a0e
Size=2 Low=0 splitIndex=1 high=1
373 [State 0] Switching from state 0 to state 376
Copied 34928 (count=1)
Finalizing TB execution 376
s2e_dummyMainFunction
tcg-llvm-tb-375-8048a0e
Firing timer event
373 [State 376] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 375 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f87: 90                                 nop                      nextPC: 0xbfb76f88
  2  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  3  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  4  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  5  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  6  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  7  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  8  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  9  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 10  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 11  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 12  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 13  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 376] CPU dump
EAX=0xbfb76f97
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x89
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469911:0xbfb76f97
373 [State 376] Terminating state 376 with message 'eliminated this false positive, out of range syscall number found at eip'
373 [State 376] Switching from state 376 to state 0
Copied 34928 (count=1)
Deleting state 376 0x0x28f6ee80
373 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 375
>> fuzzInit: datum forking for value 376
>> fuzzInit: datum forking for value 376
373 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 376)
        (ReadLSB w32 0 v376_fuzz_symb_376)))
    state 377 with condition (Not (Eq false
         (Eq (w32 376)
             (ReadLSB w32 0 v376_fuzz_symb_376))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-376-8048a0e
Size=2 Low=0 splitIndex=1 high=1
373 [State 0] Switching from state 0 to state 377
Copied 34928 (count=1)
Finalizing TB execution 377
s2e_dummyMainFunction
tcg-llvm-tb-376-8048a0e
373 [State 377] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 376 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76f88: 90                                 nop                      nextPC: 0xbfb76f89
  2  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  3  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  4  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  5  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  6  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  7  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  8  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  9  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 10  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 11  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 12  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 377] CPU dump
EAX=0xbfb76f98
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x88
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469912:0xbfb76f98
374 [State 377] Terminating state 377 with message 'eliminated this false positive, out of range syscall number found at eip'
374 [State 377] Switching from state 377 to state 0
Copied 34928 (count=1)
Deleting state 377 0x0x29094960
374 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 376
>> fuzzInit: datum forking for value 377
>> fuzzInit: datum forking for value 377
374 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 377)
        (ReadLSB w32 0 v377_fuzz_symb_377)))
    state 378 with condition (Not (Eq false
         (Eq (w32 377)
             (ReadLSB w32 0 v377_fuzz_symb_377))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-377-8048a0e
Size=2 Low=0 splitIndex=1 high=1
374 [State 0] Switching from state 0 to state 378
Copied 34928 (count=1)
Finalizing TB execution 378
s2e_dummyMainFunction
tcg-llvm-tb-377-8048a0e
374 [State 378] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 377 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f89: 90                                 nop                      nextPC: 0xbfb76f8a
  2  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  3  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  4  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  5  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  6  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  7  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  8  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  9  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 10  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 11  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 378] CPU dump
EAX=0xbfb76f99
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x87
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469913:0xbfb76f99
374 [State 378] Terminating state 378 with message 'eliminated this false positive, out of range syscall number found at eip'
374 [State 378] Switching from state 378 to state 0
Copied 34928 (count=1)
Deleting state 378 0x0x29094960
375 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 377
>> fuzzInit: datum forking for value 378
>> fuzzInit: datum forking for value 378
375 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 378)
        (ReadLSB w32 0 v378_fuzz_symb_378)))
    state 379 with condition (Not (Eq false
         (Eq (w32 378)
             (ReadLSB w32 0 v378_fuzz_symb_378))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-378-8048a0e
Size=2 Low=0 splitIndex=1 high=1
375 [State 0] Switching from state 0 to state 379
Copied 34928 (count=1)
Finalizing TB execution 379
s2e_dummyMainFunction
tcg-llvm-tb-378-8048a0e
Firing timer event
375 [State 379] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 378 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f8a: 90                                 nop                      nextPC: 0xbfb76f8b
  2  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  3  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  4  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  5  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  6  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  7  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  8  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  9  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 10  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 379] CPU dump
EAX=0xbfb76f9a
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x86
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469914:0xbfb76f9a
375 [State 379] Terminating state 379 with message 'eliminated this false positive, out of range syscall number found at eip'
375 [State 379] Switching from state 379 to state 0
Copied 34928 (count=1)
Deleting state 379 0x0x29094960
375 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 378
>> fuzzInit: datum forking for value 379
>> fuzzInit: datum forking for value 379
375 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 379)
        (ReadLSB w32 0 v379_fuzz_symb_379)))
    state 380 with condition (Not (Eq false
         (Eq (w32 379)
             (ReadLSB w32 0 v379_fuzz_symb_379))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-379-8048a0e
Size=2 Low=0 splitIndex=1 high=1
375 [State 0] Switching from state 0 to state 380
Copied 34928 (count=1)
Finalizing TB execution 380
s2e_dummyMainFunction
tcg-llvm-tb-379-8048a0e
376 [State 380] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 379 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f8b: 90                                 nop                      nextPC: 0xbfb76f8c
  2  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  3  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  4  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  5  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  6  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  7  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  8  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  9  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 380] CPU dump
EAX=0xbfb76f9b
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x85
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469915:0xbfb76f9b
376 [State 380] Terminating state 380 with message 'eliminated this false positive, out of range syscall number found at eip'
376 [State 380] Switching from state 380 to state 0
Copied 34928 (count=1)
Deleting state 380 0x0x29094960
Firing timer event
376 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 379
>> fuzzInit: datum forking for value 380
>> fuzzInit: datum forking for value 380
376 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 380)
        (ReadLSB w32 0 v380_fuzz_symb_380)))
    state 381 with condition (Not (Eq false
         (Eq (w32 380)
             (ReadLSB w32 0 v380_fuzz_symb_380))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-380-8048a0e
Size=2 Low=0 splitIndex=1 high=1
376 [State 0] Switching from state 0 to state 381
Copied 34928 (count=1)
Finalizing TB execution 381
s2e_dummyMainFunction
tcg-llvm-tb-380-8048a0e
376 [State 381] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 380 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f8c: 0a 00                              or al, [eax]             nextPC: 0xbfb76f8e
  2  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  3  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  4  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  5  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  6  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  7  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  8  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 381] CPU dump
EAX=0xbfb76f8e
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x84
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469902:0xbfb76f8e
376 [State 381] Terminating state 381 with message 'eliminated this false positive, out of range syscall number found at eip'
376 [State 381] Switching from state 381 to state 0
Copied 34928 (count=1)
Deleting state 381 0x0x29094960
377 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 380
>> fuzzInit: datum forking for value 381
>> fuzzInit: datum forking for value 381
377 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 381)
        (ReadLSB w32 0 v381_fuzz_symb_381)))
    state 382 with condition (Not (Eq false
         (Eq (w32 381)
             (ReadLSB w32 0 v381_fuzz_symb_381))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-381-8048a0e
Size=2 Low=0 splitIndex=1 high=1
377 [State 0] Switching from state 0 to state 382
Copied 34928 (count=1)
Finalizing TB execution 382
s2e_dummyMainFunction
tcg-llvm-tb-381-8048a0e
Firing timer event
377 [State 382] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 381 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f8d: 00 72 65                           add [edx+0x65], dh       nextPC: 0xbfb76f90
  2  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  3  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  4  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  5  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  6  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  7  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 382] CPU dump
EAX=0xbfb76f8d
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x83
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469901:0xbfb76f8d
377 [State 382] Terminating state 382 with message 'eliminated this false positive, out of range syscall number found at eip'
377 [State 382] Switching from state 382 to state 0
Copied 34928 (count=1)
Deleting state 382 0x0x29094960
377 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 381
>> fuzzInit: datum forking for value 382
>> fuzzInit: datum forking for value 382
378 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 382)
        (ReadLSB w32 0 v382_fuzz_symb_382)))
    state 383 with condition (Not (Eq false
         (Eq (w32 382)
             (ReadLSB w32 0 v382_fuzz_symb_382))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-382-8048a0e
Size=2 Low=0 splitIndex=1 high=1
378 [State 0] Switching from state 0 to state 383
Copied 34928 (count=1)
Finalizing TB execution 383
s2e_dummyMainFunction
tcg-llvm-tb-382-8048a0e
378 [State 383] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 382 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f8e: 72 65                              jb 0x67                  nextPC: 0xbfb76f90 jmpPc: 0xbfb76ff5
  2  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  3  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  4  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  5  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  6  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  7  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 383] CPU dump
EAX=0xbfb76f8e
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x82
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469902:0xbfb76f8e
378 [State 383] Terminating state 383 with message 'eliminated this false positive, out of range syscall number found at eip'
378 [State 383] Switching from state 383 to state 0
Copied 34928 (count=1)
Deleting state 383 0x0x2939aa00
Firing timer event
378 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 382
>> fuzzInit: datum forking for value 383
>> fuzzInit: datum forking for value 383
378 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 383)
        (ReadLSB w32 0 v383_fuzz_symb_383)))
    state 384 with condition (Not (Eq false
         (Eq (w32 383)
             (ReadLSB w32 0 v383_fuzz_symb_383))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-383-8048a0e
Size=2 Low=0 splitIndex=1 high=1
378 [State 0] Switching from state 0 to state 384
Copied 34928 (count=1)
Finalizing TB execution 384
s2e_dummyMainFunction
tcg-llvm-tb-383-8048a0e
378 [State 384] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 383 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f8f: 65 71 75                           jno 0x78                 nextPC: 0xbfb76f92 jmpPc: 0xffffffff
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  2  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  3  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  4  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  5  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  6  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 384] CPU dump
EAX=0xbfb76f8f
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x81
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469903:0xbfb76f8f
379 [State 384] Terminating state 384 with message 'eliminated this false positive, out of range syscall number found at eip'
379 [State 384] Switching from state 384 to state 0
Copied 34928 (count=1)
Deleting state 384 0x0x2939aa00
379 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 383
>> fuzzInit: datum forking for value 384
>> fuzzInit: datum forking for value 384
379 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 384)
        (ReadLSB w32 0 v384_fuzz_symb_384)))
    state 385 with condition (Not (Eq false
         (Eq (w32 384)
             (ReadLSB w32 0 v384_fuzz_symb_384))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-384-8048a0e
Size=2 Low=0 splitIndex=1 high=1
379 [State 0] Switching from state 0 to state 385
Copied 34928 (count=1)
Finalizing TB execution 385
s2e_dummyMainFunction
tcg-llvm-tb-384-8048a0e
Firing timer event
379 [State 385] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 384 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f90: 71 75                              jno 0x77                 nextPC: 0xbfb76f92 jmpPc: 0xbfb77007
!!* pc != prev insn's next_pc; 0xbfb77007 != bfb76f92
  2  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  3  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  4  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  5  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  6  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 385] CPU dump
EAX=0xbfb76f90
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x80
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469904:0xbfb76f90
379 [State 385] Terminating state 385 with message 'eliminated this false positive, out of range syscall number found at eip'
379 [State 385] Switching from state 385 to state 0
Copied 34928 (count=1)
Deleting state 385 0x0x2939aa00
380 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 384
>> fuzzInit: datum forking for value 385
>> fuzzInit: datum forking for value 385
380 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 385)
        (ReadLSB w32 0 v385_fuzz_symb_385)))
    state 386 with condition (Not (Eq false
         (Eq (w32 385)
             (ReadLSB w32 0 v385_fuzz_symb_385))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-385-8048a0e
Size=2 Low=0 splitIndex=1 high=1
380 [State 0] Switching from state 0 to state 386
Copied 34928 (count=1)
Finalizing TB execution 386
s2e_dummyMainFunction
tcg-llvm-tb-385-8048a0e
380 [State 386] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 385 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f91: 75 65                              jnz 0x67                 nextPC: 0xbfb76f93 jmpPc: 0xbfb76ff8
!!* pc != prev insn's next_pc; 0xbfb76ff8 != bfb76f93
  2  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  3  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  4  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  5  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  6  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  7  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  8  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  9  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 10  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 11  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 12  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 13  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 14  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 15  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 16  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 17  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 18  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 19  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 386] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x7f
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
>> EIP Found. Syscall number 4 at addr 0xbfb7700e offset from base: 510 (should be EIP-2) within pid: 86716416 number of instructions: 19. This is success #1
>> Success from offset 385
>> Success densities, overlay: 0.226277; avg: 0.226277
>> Success eip: 0xbfb77010 offset from base: 512
>> Printing PC Trace (instructions in order of execution)
>>      1  2B @0xbfb76f91: 75 65                              jnz 0x67                 nextPC: 0xbfb76f93 jmpPc: 0xbfb76ff8
>>      2  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
>>      3  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
>>      4  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
>>      5  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
>>      6  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
>>      7  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
>>      8  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
>>      9  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
>>     10  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
>>     11  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
>>     12  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
>>     13  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
>>     14  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
>>     15  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
>>     16  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
>>     17  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
>>     18  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
>>     19  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (31/137) = 0.226277
>>    Mem_map start_addr: 0xbfb76f91, length: 1024B, valid bytes: 31, exec'ed bytes: 31, range: 137B, end_addr: 0xbfb77019
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfb76f90   7565-- -------- -------- --------   ue.............
0xbfb76fa0 -------- -------- -------- --------  ................
0xbfb76fb0 -------- -------- -------- --------  ................
0xbfb76fc0 -------- -------- -------- --------  ................
0xbfb76fd0 -------- -------- -------- --------  ................
0xbfb76fe0 -------- -------- -------- --------  ................
0xbfb76ff0 -------- -------- 90909090 90909090  ................
0xbfb77000 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfb77010 -------- --e8e8ff ffff               ..........      

380 [State 386] Terminating state 386 with message 'EIP reached, success'
380 [State 386] Switching from state 386 to state 0
Copied 34928 (count=1)
Deleting state 386 0x0x2939aa00
Firing timer event
380 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 385
>> fuzzInit: datum forking for value 386
>> fuzzInit: datum forking for value 386
381 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 386)
        (ReadLSB w32 0 v386_fuzz_symb_386)))
    state 387 with condition (Not (Eq false
         (Eq (w32 386)
             (ReadLSB w32 0 v386_fuzz_symb_386))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-386-8048a0e
Size=2 Low=0 splitIndex=1 high=1
381 [State 0] Switching from state 0 to state 387
Copied 34928 (count=1)
Finalizing TB execution 387
s2e_dummyMainFunction
tcg-llvm-tb-386-8048a0e
381 [State 387] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 386 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb76f92: 65 73 74                           jae 0x77                 nextPC: 0xbfb76f95 jmpPc: 0xffffffff
!!* pc != prev insn's next_pc; 0xbfb77009 != bfb76f95
  2  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  3  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  4  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  5  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 387] CPU dump
EAX=0xbfb76f92
EBX=0xbfb77011
ECX=0xbfb76408
EDX=0xf
ESI=0x7e
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469906:0xbfb76f92
381 [State 387] Terminating state 387 with message 'eliminated this false positive, out of range syscall number found at eip'
381 [State 387] Switching from state 387 to state 0
Copied 34928 (count=1)
Deleting state 387 0x0x2939aa00
381 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 386
>> fuzzInit: datum forking for value 387
>> fuzzInit: datum forking for value 387
381 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 387)
        (ReadLSB w32 0 v387_fuzz_symb_387)))
    state 388 with condition (Not (Eq false
         (Eq (w32 387)
             (ReadLSB w32 0 v387_fuzz_symb_387))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-387-8048a0e
Size=2 Low=0 splitIndex=1 high=1
381 [State 0] Switching from state 0 to state 388
Copied 34928 (count=1)
Finalizing TB execution 388
s2e_dummyMainFunction
tcg-llvm-tb-387-8048a0e
Firing timer event
381 [State 388] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 387 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f93: 73 74                              jae 0x76                 nextPC: 0xbfb76f95 jmpPc: 0xbfb77009
!!* pc != prev insn's next_pc; 0xbfb77009 != bfb76f95
  2  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  3  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  4  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  5  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 388] CPU dump
EAX=0xbfb76f93
EBX=0xbfb77011
ECX=0xbfb76408
EDX=0xf
ESI=0x7d
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216469907:0xbfb76f93
382 [State 388] Terminating state 388 with message 'eliminated this false positive, out of range syscall number found at eip'
382 [State 388] Switching from state 388 to state 0
Copied 34928 (count=1)
Deleting state 388 0x0x2939aa00
382 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 387
>> fuzzInit: datum forking for value 388
>> fuzzInit: datum forking for value 388
382 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 388)
        (ReadLSB w32 0 v388_fuzz_symb_388)))
    state 389 with condition (Not (Eq false
         (Eq (w32 388)
             (ReadLSB w32 0 v388_fuzz_symb_388))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-388-8048a0e
Size=2 Low=0 splitIndex=1 high=1
382 [State 0] Switching from state 0 to state 389
Copied 34928 (count=1)
Finalizing TB execution 389
s2e_dummyMainFunction
tcg-llvm-tb-388-8048a0e
382 [State 389] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 388 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f94: 74 20                              jz 0x22                  nextPC: 0xbfb76f96 jmpPc: 0xbfb76fb6
  2  5B @0xbfb76f96: 3d 20 22 47 45                     cmp eax, 0x45472220      nextPC: 0xbfb76f9b
  3  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  4  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  5  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  6  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  7  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  8  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  9  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
 10  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
 11  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 12  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 13  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 14  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 15  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 16  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 17  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 18  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 19  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 20  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 21  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 22  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 23  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 24  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 25  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 26  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 27  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 28  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 29  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 30  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 31  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 32  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 33  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 34  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 35  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 36  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 37  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 38  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 39  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 40  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 41  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 42  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 43  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 44  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 45  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 46  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 47  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 48  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 49  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 50  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 51  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 52  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 53  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 54  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 55  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 56  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 57  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 58  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 59  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 60  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 61  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 62  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 63  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 64  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 65  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 66  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 67  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
Firing timer event
382 [State 389] @0x080499bf, left buffer range after 67 IoB insns; last IoB insn @0xbfb76fdc, disasm in debug.
  1  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
382 [State 389] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
382 [State 389] Terminating state 389 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
382 [State 389] Switching from state 389 to state 0
Copied 34928 (count=1)
Deleting state 389 0x0x2939aa00
383 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 388
>> fuzzInit: datum forking for value 389
>> fuzzInit: datum forking for value 389
383 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 389)
        (ReadLSB w32 0 v389_fuzz_symb_389)))
    state 390 with condition (Not (Eq false
         (Eq (w32 389)
             (ReadLSB w32 0 v389_fuzz_symb_389))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-389-8048a0e
Size=2 Low=0 splitIndex=1 high=1
383 [State 0] Switching from state 0 to state 390
Copied 34928 (count=1)
Finalizing TB execution 390
s2e_dummyMainFunction
tcg-llvm-tb-389-8048a0e
383 [State 390] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 389 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb76f95: 20 3d 20 22 47 45                  and [0x45472220], bh     nextPC: 0xbfb76f9b
  2  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  3  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  4  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  5  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  6  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  7  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  8  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  9  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
 10  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 11  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 12  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 13  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 14  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 15  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 16  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 17  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 18  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 19  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 20  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 21  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 22  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 23  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 24  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 25  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 26  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 27  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 28  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 29  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 30  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 31  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 32  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 33  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 34  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 35  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 36  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 37  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 38  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 39  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 40  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 41  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 42  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 43  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 44  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 45  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 46  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 47  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 48  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 49  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 50  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 51  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 52  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 53  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 54  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 55  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 56  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 57  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 58  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 59  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 60  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 61  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 62  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 63  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 64  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 65  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
383 [State 390] @0x080499bf, left buffer range after 65 IoB insns; last IoB insn @0xbfb76fdb, disasm in debug.
  1  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
383 [State 390] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
383 [State 390] Terminating state 390 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
383 [State 390] Switching from state 390 to state 0
Copied 34928 (count=1)
Deleting state 390 0x0x2939aa00
Firing timer event
383 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 389
>> fuzzInit: datum forking for value 390
>> fuzzInit: datum forking for value 390
384 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 390)
        (ReadLSB w32 0 v390_fuzz_symb_390)))
    state 391 with condition (Not (Eq false
         (Eq (w32 390)
             (ReadLSB w32 0 v390_fuzz_symb_390))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-390-8048a0e
Size=2 Low=0 splitIndex=1 high=1
384 [State 0] Switching from state 0 to state 391
Copied 34928 (count=1)
Finalizing TB execution 391
s2e_dummyMainFunction
tcg-llvm-tb-390-8048a0e
384 [State 391] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 390 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb76f96: 3d 20 22 47 45                     cmp eax, 0x45472220      nextPC: 0xbfb76f9b
  2  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  3  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  4  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  5  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  6  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  7  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  8  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  9  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
 10  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 11  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 12  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 13  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 14  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 15  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 16  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 17  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 18  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 19  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 20  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 21  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 22  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 23  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 24  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 25  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 26  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 27  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 28  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 29  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 30  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 31  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 32  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 33  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 34  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 35  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 36  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 37  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 38  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 39  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 40  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 41  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 42  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 43  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 44  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 45  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 46  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 47  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 48  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 49  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 50  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 51  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 52  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 53  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 54  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 55  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 56  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 57  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 58  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 59  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 60  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 61  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 62  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 63  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 64  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 65  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 66  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
384 [State 391] @0x080499bf, left buffer range after 66 IoB insns; last IoB insn @0xbfb76fdc, disasm in debug.
  1  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
384 [State 391] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
384 [State 391] Terminating state 391 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
384 [State 391] Switching from state 391 to state 0
Copied 34928 (count=1)
Deleting state 391 0x0x2959fc40
384 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 390
>> fuzzInit: datum forking for value 391
>> fuzzInit: datum forking for value 391
385 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 391)
        (ReadLSB w32 0 v391_fuzz_symb_391)))
    state 392 with condition (Not (Eq false
         (Eq (w32 391)
             (ReadLSB w32 0 v391_fuzz_symb_391))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-391-8048a0e
Size=2 Low=0 splitIndex=1 high=1
385 [State 0] Switching from state 0 to state 392
Copied 34928 (count=1)
Finalizing TB execution 392
s2e_dummyMainFunction
tcg-llvm-tb-391-8048a0e
Firing timer event
385 [State 392] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 391 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb76f97: 20 22                              and [edx], ah            nextPC: 0xbfb76f99
  2  1B @0xbfb76f99: 47                                 inc edi                  nextPC: 0xbfb76f9a
  3  1B @0xbfb76f9a: 45                                 inc ebp                  nextPC: 0xbfb76f9b
  4  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  5  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  6  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  7  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  8  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  9  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
 10  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
 11  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
 12  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 13  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 14  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 15  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 16  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 17  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 18  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 19  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 20  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 21  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 22  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 23  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 24  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 25  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 26  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 27  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 28  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 29  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 30  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 31  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 32  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 33  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 34  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 35  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 36  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 37  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 38  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 39  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 40  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 41  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 42  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 43  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 44  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 45  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 46  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 47  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 48  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 49  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 50  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 51  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 52  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 53  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 54  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 55  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 56  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 57  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 58  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 59  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 60  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 61  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 62  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 63  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
385 [State 392] @0x080499bf, left buffer range after 63 IoB insns; last IoB insn @0xbfb76fd7, disasm in debug.
  1  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
385 [State 392] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
385 [State 392] Terminating state 392 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
385 [State 392] Switching from state 392 to state 0
Copied 34928 (count=1)
Deleting state 392 0x0x2959fc40
385 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 391
>> fuzzInit: datum forking for value 392
>> fuzzInit: datum forking for value 392
385 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 392)
        (ReadLSB w32 0 v392_fuzz_symb_392)))
    state 393 with condition (Not (Eq false
         (Eq (w32 392)
             (ReadLSB w32 0 v392_fuzz_symb_392))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-392-8048a0e
Size=2 Low=0 splitIndex=1 high=1
385 [State 0] Switching from state 0 to state 393
Copied 34928 (count=1)
Finalizing TB execution 393
s2e_dummyMainFunction
tcg-llvm-tb-392-8048a0e
386 [State 393] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 392 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  3B @0xbfb76f98: 22 47 45                           and al, [edi+0x45]       nextPC: 0xbfb76f9b
  2  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  3  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  4  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  5  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  6  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  7  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  8  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  9  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
 10  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 11  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 12  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 13  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 14  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 15  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 16  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 17  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 18  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 19  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 20  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 21  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 22  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 23  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 24  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 25  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 26  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 27  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 28  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 29  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 30  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 31  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 32  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 33  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 34  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 35  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 36  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 37  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 38  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 39  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 40  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 41  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 42  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 43  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 44  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 45  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 46  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 47  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 48  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 49  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 50  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 51  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 52  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 53  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 54  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 55  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 56  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 57  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 58  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 59  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 60  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 61  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 62  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 63  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 64  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 65  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
386 [State 393] @0x080499bf, left buffer range after 65 IoB insns; last IoB insn @0xbfb76fdb, disasm in debug.
  1  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
386 [State 393] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
386 [State 393] Terminating state 393 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
386 [State 393] Switching from state 393 to state 0
Copied 34928 (count=1)
Deleting state 393 0x0x2959fc40
386 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 392
>> fuzzInit: datum forking for value 393
>> fuzzInit: datum forking for value 393
386 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 393)
        (ReadLSB w32 0 v393_fuzz_symb_393)))
    state 394 with condition (Not (Eq false
         (Eq (w32 393)
             (ReadLSB w32 0 v393_fuzz_symb_393))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-393-8048a0e
Size=2 Low=0 splitIndex=1 high=1
386 [State 0] Switching from state 0 to state 394
Copied 34928 (count=1)
Finalizing TB execution 394
s2e_dummyMainFunction
tcg-llvm-tb-393-8048a0e
386 [State 394] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 393 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f99: 47                                 inc edi                  nextPC: 0xbfb76f9a
  2  1B @0xbfb76f9a: 45                                 inc ebp                  nextPC: 0xbfb76f9b
  3  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  4  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  5  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  6  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  7  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  8  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  9  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
 10  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
 11  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 12  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 13  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 14  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 15  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 16  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 17  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 18  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 19  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 20  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 21  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 22  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 23  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 24  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 25  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 26  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 27  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 28  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 29  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 30  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 31  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 32  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 33  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 34  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 35  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 36  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 37  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 38  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 39  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 40  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 41  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 42  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 43  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 44  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 45  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 46  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 47  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 48  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 49  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 50  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 51  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 52  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 53  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 54  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 55  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 56  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 57  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 58  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 59  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 60  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 61  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 62  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 63  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 64  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
387 [State 394] @0x080499bf, left buffer range after 64 IoB insns; last IoB insn @0xbfb76fd9, disasm in debug.
  1  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
387 [State 394] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
387 [State 394] Terminating state 394 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
387 [State 394] Switching from state 394 to state 0
Copied 34928 (count=1)
Deleting state 394 0x0x2959fc40
Firing timer event
387 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 393
>> fuzzInit: datum forking for value 394
>> fuzzInit: datum forking for value 394
387 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 394)
        (ReadLSB w32 0 v394_fuzz_symb_394)))
    state 395 with condition (Not (Eq false
         (Eq (w32 394)
             (ReadLSB w32 0 v394_fuzz_symb_394))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-394-8048a0e
Size=2 Low=0 splitIndex=1 high=1
387 [State 0] Switching from state 0 to state 395
Copied 34928 (count=1)
Finalizing TB execution 395
s2e_dummyMainFunction
tcg-llvm-tb-394-8048a0e
387 [State 395] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 394 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f9a: 45                                 inc ebp                  nextPC: 0xbfb76f9b
  2  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  3  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  4  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  5  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  6  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  7  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  8  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  9  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
 10  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 11  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 12  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 13  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 14  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 15  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 16  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 17  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 18  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 19  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 20  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 21  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 22  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 23  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 24  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 25  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 26  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 27  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 28  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 29  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 30  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 31  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 32  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 33  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 34  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 35  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 36  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 37  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 38  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 39  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 40  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 41  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 42  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 43  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 44  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 45  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 46  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 47  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 48  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 49  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 50  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 51  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 52  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 53  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 54  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 55  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 56  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 57  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 58  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 59  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 60  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 61  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 62  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 63  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 64  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 65  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
387 [State 395] @0x080499bf, left buffer range after 65 IoB insns; last IoB insn @0xbfb76fdb, disasm in debug.
  1  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
387 [State 395] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
387 [State 395] Terminating state 395 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
387 [State 395] Switching from state 395 to state 0
Copied 34928 (count=1)
Deleting state 395 0x0x2959fc40
388 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 394
>> fuzzInit: datum forking for value 395
>> fuzzInit: datum forking for value 395
388 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 395)
        (ReadLSB w32 0 v395_fuzz_symb_395)))
    state 396 with condition (Not (Eq false
         (Eq (w32 395)
             (ReadLSB w32 0 v395_fuzz_symb_395))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-395-8048a0e
Size=2 Low=0 splitIndex=1 high=1
388 [State 0] Switching from state 0 to state 396
Copied 34928 (count=1)
Finalizing TB execution 396
s2e_dummyMainFunction
tcg-llvm-tb-395-8048a0e
Firing timer event
388 [State 396] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 395 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f9b: 54                                 push esp                 nextPC: 0xbfb76f9c
  2  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  3  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  4  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  5  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  6  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  7  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  8  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  9  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
 10  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 11  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 12  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 13  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 14  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 15  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 16  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 17  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 18  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 19  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 20  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 21  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 22  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 23  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 24  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 25  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 26  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 27  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 28  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 29  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 30  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 31  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 32  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 33  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 34  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 35  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 36  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 37  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 38  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 39  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 40  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 41  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 42  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 43  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 44  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 45  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 46  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 47  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 48  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 49  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 50  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 51  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 52  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 53  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 54  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 55  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 56  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 57  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 58  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 59  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 60  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 61  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 62  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 63  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 64  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 65  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 66  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 67  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
388 [State 396] @0x080499bf, left buffer range after 67 IoB insns; last IoB insn @0xbfb76fde, disasm in debug.
  1  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
388 [State 396] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
388 [State 396] Terminating state 396 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
388 [State 396] Switching from state 396 to state 0
Copied 34928 (count=1)
Deleting state 396 0x0x2959fc40
388 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 395
>> fuzzInit: datum forking for value 396
>> fuzzInit: datum forking for value 396
389 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 396)
        (ReadLSB w32 0 v396_fuzz_symb_396)))
    state 397 with condition (Not (Eq false
         (Eq (w32 396)
             (ReadLSB w32 0 v396_fuzz_symb_396))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-396-8048a0e
Size=2 Low=0 splitIndex=1 high=1
389 [State 0] Switching from state 0 to state 397
Copied 34928 (count=1)
Finalizing TB execution 397
s2e_dummyMainFunction
tcg-llvm-tb-396-8048a0e
389 [State 397] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 396 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb76f9c: 20 2f                              and [edi], ch            nextPC: 0xbfb76f9e
  2  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  3  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  4  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  5  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  6  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  7  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  8  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  9  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 10  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 11  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 12  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 13  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 14  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 15  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 16  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 17  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 18  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 19  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 20  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 21  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 22  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 23  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 24  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 25  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 26  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 27  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 28  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 29  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 30  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 31  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 32  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 33  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 34  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 35  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 36  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 37  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 38  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 39  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 40  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 41  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 42  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 43  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 44  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 45  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 46  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 47  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 48  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 49  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 50  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 51  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 52  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 53  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 54  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 55  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 56  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 57  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 58  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 59  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 60  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 61  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 62  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 63  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 64  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 65  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 66  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 67  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
389 [State 397] @0x080499bf, left buffer range after 67 IoB insns; last IoB insn @0xbfb76fdf, disasm in debug.
  1  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
389 [State 397] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
389 [State 397] Terminating state 397 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
389 [State 397] Switching from state 397 to state 0
Copied 34928 (count=1)
Deleting state 397 0x0x2959fc40
389 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 396
>> fuzzInit: datum forking for value 397
>> fuzzInit: datum forking for value 397
389 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 397)
        (ReadLSB w32 0 v397_fuzz_symb_397)))
    state 398 with condition (Not (Eq false
         (Eq (w32 397)
             (ReadLSB w32 0 v397_fuzz_symb_397))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-397-8048a0e
Size=2 Low=0 splitIndex=1 high=1
389 [State 0] Switching from state 0 to state 398
Copied 34928 (count=1)
Finalizing TB execution 398
s2e_dummyMainFunction
tcg-llvm-tb-397-8048a0e
390 [State 398] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 397 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f9d: 2f                                 das                      nextPC: 0xbfb76f9e
  2  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  3  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  4  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  5  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  6  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  7  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  8  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  9  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
 10  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 11  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 12  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 13  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 14  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 15  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 16  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 17  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 18  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 19  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 20  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 21  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 22  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 23  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 24  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 25  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 26  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 27  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 28  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 29  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 30  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 31  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 32  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 33  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 34  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 35  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 36  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 37  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 38  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 39  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 40  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 41  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 42  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 43  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 44  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 45  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 46  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 47  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 48  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 49  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 50  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 51  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 52  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 53  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 54  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 55  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 56  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 57  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 58  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 59  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 60  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 61  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 62  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 63  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 64  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 65  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 66  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 67  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 68  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 69  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 70  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 71  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 72  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 73  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 74  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 75  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 76  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 77  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 78  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 79  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 80  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 81  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 82  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 83  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 84  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 85  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 86  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 87  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 88  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 89  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 90  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 91  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 92  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 93  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 94  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 95  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 96  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 97  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 98  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 99  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
100  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
101  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
102  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
103  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
104  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
105  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
106  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
107  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
108  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
109  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 398] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x73
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
>> EIP Found. Syscall number 4 at addr 0xbfb7700e offset from base: 510 (should be EIP-2) within pid: 86716416 number of instructions: 109. This is success #2
>> Success from offset 397
>> Success densities, overlay: 0.96; avg: 0.96
>> Success eip: 0xbfb77010 offset from base: 512
>> Printing PC Trace (instructions in order of execution)
>>      1  1B @0xbfb76f9d: 2f                                 das                      nextPC: 0xbfb76f9e
>>      2  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
>>      3  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
>>      4  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
>>      5  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
>>      6  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
>>      7  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
>>      8  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
>>      9  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
>>     10  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
>>     11  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
>>     12  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
>>     13  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
>>     14  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
>>     15  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
>>     16  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
>>     17  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
>>     18  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
>>     19  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
>>     20  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
>>     21  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
>>     22  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
>>     23  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
>>     24  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
>>     25  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
>>     26  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
>>     27  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
>>     28  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
>>     29  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
>>     30  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
>>     31  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
>>     32  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
>>     33  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
>>     34  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
>>     35  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
>>     36  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
>>     37  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
>>     38  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
>>     39  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
>>     40  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
>>     41  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
>>     42  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
>>     43  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
>>     44  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
>>     45  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
>>     46  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
>>     47  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
>>     48  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
>>     49  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
>>     50  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
>>     51  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
>>     52  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
>>     53  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
>>     54  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
>>     55  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
>>     56  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
>>     57  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
>>     58  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
>>     59  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
>>     60  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
>>     61  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
>>     62  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
>>     63  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
>>     64  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
>>     65  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
>>     66  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
>>     67  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
>>     68  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
>>     69  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
>>     70  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
>>     71  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
>>     72  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
>>     73  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
>>     74  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
>>     75  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
>>     76  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
>>     77  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
>>     78  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
>>     79  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
>>     80  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
>>     81  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
>>     82  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
>>     83  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
>>     84  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
>>     85  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
>>     86  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
>>     87  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
>>     88  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
>>     89  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
>>     90  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
>>     91  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
>>     92  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
>>     93  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
>>     94  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
>>     95  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
>>     96  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
>>     97  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
>>     98  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
>>     99  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
>>    100  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
>>    101  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
>>    102  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
>>    103  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
>>    104  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
>>    105  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
>>    106  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
>>    107  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
>>    108  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
>>    109  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (120/125) = 0.96
>>    Mem_map start_addr: 0xbfb76f9d, length: 1024B, valid bytes: 120, exec'ed bytes: 120, range: 125B, end_addr: 0xbfb77019
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfb76f90                              2f9090               /..
0xbfb76fa0 90909090 90909090 90909090 90909090  ................
0xbfb76fb0 90909090 90909090 90909090 90909090  ................
0xbfb76fc0 90909090 90909090 90909090 90909090  ................
0xbfb76fd0 90909090 90909090 90909090 90909090  ................
0xbfb76fe0 90909090 90909090 90909090 90909090  ................
0xbfb76ff0 90909090 90909090 90909090 90909090  ................
0xbfb77000 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfb77010 -------- --e8e8ff ffff               ..........      

390 [State 398] Terminating state 398 with message 'EIP reached, success'
390 [State 398] Switching from state 398 to state 0
Copied 34928 (count=1)
Deleting state 398 0x0x2959fc40
Firing timer event
390 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 397
>> fuzzInit: datum forking for value 398
>> fuzzInit: datum forking for value 398
390 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 398)
        (ReadLSB w32 0 v398_fuzz_symb_398)))
    state 399 with condition (Not (Eq false
         (Eq (w32 398)
             (ReadLSB w32 0 v398_fuzz_symb_398))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-398-8048a0e
Size=2 Low=0 splitIndex=1 high=1
390 [State 0] Switching from state 0 to state 399
Copied 34928 (count=1)
Finalizing TB execution 399
s2e_dummyMainFunction
tcg-llvm-tb-398-8048a0e
390 [State 399] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 398 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
  2  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  3  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  4  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  5  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  6  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  7  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  8  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  9  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
 10  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 11  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 12  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 13  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 14  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 15  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 16  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 17  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 18  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 19  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 20  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 21  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 22  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 23  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 24  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 25  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 26  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 27  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 28  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 29  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 30  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 31  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 32  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 33  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 34  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 35  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 36  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 37  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 38  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 39  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 40  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 41  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 42  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 43  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 44  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 45  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 46  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 47  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 48  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 49  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 50  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 51  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 52  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 53  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 54  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 55  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 56  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 57  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 58  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 59  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 60  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 61  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 62  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 63  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 64  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 65  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 66  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 67  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 68  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 69  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 70  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 71  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 72  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 73  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 74  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 75  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 76  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 77  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 78  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 79  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 80  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 81  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 82  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 83  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 84  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 85  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 86  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 87  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 88  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 89  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 90  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 91  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 92  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 93  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 94  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 95  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 96  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 97  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 98  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 99  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
100  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
101  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
102  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
103  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
104  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
105  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
106  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
107  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
108  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 399] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x72
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 108 instructions, PCs: bfb76f9e bfb76f9f bfb76fa0 bfb76fa1 bfb76fa2 bfb76fa3 bfb76fa4 bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
391 [State 399] Terminating state 399 with message 'eliminated this false positive, execution path subset of another success'
391 [State 399] Switching from state 399 to state 0
Copied 34928 (count=1)
Deleting state 399 0x0x2959fc40
391 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 398
>> fuzzInit: datum forking for value 399
>> fuzzInit: datum forking for value 399
391 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 399)
        (ReadLSB w32 0 v399_fuzz_symb_399)))
    state 400 with condition (Not (Eq false
         (Eq (w32 399)
             (ReadLSB w32 0 v399_fuzz_symb_399))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-399-8048a0e
Size=2 Low=0 splitIndex=1 high=1
391 [State 0] Switching from state 0 to state 400
Copied 34928 (count=1)
Finalizing TB execution 400
s2e_dummyMainFunction
tcg-llvm-tb-399-8048a0e
Firing timer event
391 [State 400] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 399 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
  2  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  3  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  4  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  5  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  6  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  7  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  8  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  9  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
 10  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 11  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 12  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 13  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 14  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 15  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 16  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 17  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 18  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 19  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 20  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 21  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 22  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 23  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 24  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 25  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 26  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 27  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 28  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 29  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 30  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 31  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 32  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 33  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 34  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 35  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 36  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 37  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 38  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 39  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 40  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 41  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 42  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 43  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 44  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 45  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 46  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 47  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 48  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 49  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 50  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 51  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 52  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 53  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 54  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 55  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 56  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 57  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 58  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 59  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 60  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 61  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 62  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 63  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 64  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 65  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 66  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 67  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 68  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 69  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 70  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 71  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 72  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 73  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 74  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 75  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 76  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 77  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 78  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 79  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 80  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 81  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 82  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 83  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 84  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 85  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 86  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 87  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 88  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 89  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 90  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 91  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 92  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 93  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 94  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 95  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 96  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 97  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 98  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 99  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
100  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
101  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
102  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
103  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
104  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
105  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
106  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
107  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 400] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x71
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 107 instructions, PCs: bfb76f9f bfb76fa0 bfb76fa1 bfb76fa2 bfb76fa3 bfb76fa4 bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
391 [State 400] Terminating state 400 with message 'eliminated this false positive, execution path subset of another success'
391 [State 400] Switching from state 400 to state 0
Copied 34928 (count=1)
Deleting state 400 0x0x2959fc40
392 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 399
>> fuzzInit: datum forking for value 400
>> fuzzInit: datum forking for value 400
392 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 400)
        (ReadLSB w32 0 v400_fuzz_symb_400)))
    state 401 with condition (Not (Eq false
         (Eq (w32 400)
             (ReadLSB w32 0 v400_fuzz_symb_400))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-400-8048a0e
Size=2 Low=0 splitIndex=1 high=1
392 [State 0] Switching from state 0 to state 401
Copied 34928 (count=1)
Finalizing TB execution 401
s2e_dummyMainFunction
tcg-llvm-tb-400-8048a0e
392 [State 401] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 400 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
  2  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  3  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  4  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  5  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  6  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  7  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  8  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  9  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
 10  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 11  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 12  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 13  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 14  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 15  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 16  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 17  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 18  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 19  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 20  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 21  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 22  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 23  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 24  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 25  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 26  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 27  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 28  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 29  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 30  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 31  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 32  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 33  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 34  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 35  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 36  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 37  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 38  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 39  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 40  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 41  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 42  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 43  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 44  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 45  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 46  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 47  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 48  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 49  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 50  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 51  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 52  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 53  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 54  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 55  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 56  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 57  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 58  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 59  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 60  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 61  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 62  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 63  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 64  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 65  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 66  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 67  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 68  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 69  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 70  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 71  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 72  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 73  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 74  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 75  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 76  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 77  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 78  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 79  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 80  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 81  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 82  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 83  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 84  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 85  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 86  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 87  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 88  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 89  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 90  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 91  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 92  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 93  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 94  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 95  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 96  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 97  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 98  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 99  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
100  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
101  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
102  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
103  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
104  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
105  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
106  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 401] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x70
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 106 instructions, PCs: bfb76fa0 bfb76fa1 bfb76fa2 bfb76fa3 bfb76fa4 bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
392 [State 401] Terminating state 401 with message 'eliminated this false positive, execution path subset of another success'
392 [State 401] Switching from state 401 to state 0
Copied 34928 (count=1)
Deleting state 401 0x0x2959fc40
392 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 400
>> fuzzInit: datum forking for value 401
>> fuzzInit: datum forking for value 401
393 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 401)
        (ReadLSB w32 0 v401_fuzz_symb_401)))
    state 402 with condition (Not (Eq false
         (Eq (w32 401)
             (ReadLSB w32 0 v401_fuzz_symb_401))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-401-8048a0e
Size=2 Low=0 splitIndex=1 high=1
393 [State 0] Switching from state 0 to state 402
Copied 34928 (count=1)
Finalizing TB execution 402
s2e_dummyMainFunction
tcg-llvm-tb-401-8048a0e
393 [State 402] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 401 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
  2  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  3  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  4  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  5  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  6  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  7  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  8  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  9  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
 10  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 11  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 12  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 13  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 14  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 15  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 16  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 17  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 18  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 19  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 20  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 21  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 22  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 23  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 24  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 25  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 26  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 27  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 28  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 29  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 30  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 31  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 32  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 33  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 34  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 35  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 36  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 37  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 38  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 39  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 40  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 41  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 42  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 43  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 44  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 45  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 46  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 47  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 48  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 49  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 50  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 51  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 52  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 53  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 54  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 55  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 56  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 57  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 58  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 59  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 60  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 61  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 62  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 63  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 64  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 65  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 66  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 67  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 68  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 69  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 70  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 71  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 72  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 73  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 74  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 75  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 76  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 77  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 78  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 79  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 80  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 81  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 82  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 83  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 84  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 85  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 86  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 87  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 88  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 89  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 90  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 91  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 92  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 93  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 94  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 95  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 96  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 97  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 98  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 99  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
100  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
101  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
102  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
103  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
104  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
105  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 402] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x6f
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 105 instructions, PCs: bfb76fa1 bfb76fa2 bfb76fa3 bfb76fa4 bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
393 [State 402] Terminating state 402 with message 'eliminated this false positive, execution path subset of another success'
393 [State 402] Switching from state 402 to state 0
Copied 34928 (count=1)
Deleting state 402 0x0x2959fc40
Firing timer event
393 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 401
>> fuzzInit: datum forking for value 402
>> fuzzInit: datum forking for value 402
393 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 402)
        (ReadLSB w32 0 v402_fuzz_symb_402)))
    state 403 with condition (Not (Eq false
         (Eq (w32 402)
             (ReadLSB w32 0 v402_fuzz_symb_402))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-402-8048a0e
Size=2 Low=0 splitIndex=1 high=1
393 [State 0] Switching from state 0 to state 403
Copied 34928 (count=1)
Finalizing TB execution 403
s2e_dummyMainFunction
tcg-llvm-tb-402-8048a0e
394 [State 403] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 402 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
  2  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  3  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  4  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  5  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  6  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  7  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  8  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  9  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
 10  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 11  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 12  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 13  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 14  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 15  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 16  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 17  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 18  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 19  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 20  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 21  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 22  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 23  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 24  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 25  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 26  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 27  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 28  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 29  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 30  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 31  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 32  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 33  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 34  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 35  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 36  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 37  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 38  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 39  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 40  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 41  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 42  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 43  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 44  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 45  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 46  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 47  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 48  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 49  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 50  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 51  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 52  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 53  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 54  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 55  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 56  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 57  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 58  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 59  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 60  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 61  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 62  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 63  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 64  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 65  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 66  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 67  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 68  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 69  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 70  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 71  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 72  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 73  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 74  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 75  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 76  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 77  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 78  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 79  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 80  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 81  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 82  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 83  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 84  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 85  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 86  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 87  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 88  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 89  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 90  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 91  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 92  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 93  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 94  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 95  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 96  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 97  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 98  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 99  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
100  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
101  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
102  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
103  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
104  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 403] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x6e
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 104 instructions, PCs: bfb76fa2 bfb76fa3 bfb76fa4 bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
394 [State 403] Terminating state 403 with message 'eliminated this false positive, execution path subset of another success'
394 [State 403] Switching from state 403 to state 0
Copied 34928 (count=1)
Deleting state 403 0x0x2959fc40
394 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 402
>> fuzzInit: datum forking for value 403
>> fuzzInit: datum forking for value 403
394 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 403)
        (ReadLSB w32 0 v403_fuzz_symb_403)))
    state 404 with condition (Not (Eq false
         (Eq (w32 403)
             (ReadLSB w32 0 v403_fuzz_symb_403))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-403-8048a0e
Size=2 Low=0 splitIndex=1 high=1
394 [State 0] Switching from state 0 to state 404
Copied 34928 (count=1)
Finalizing TB execution 404
s2e_dummyMainFunction
tcg-llvm-tb-403-8048a0e
Firing timer event
394 [State 404] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 403 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
  2  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  3  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  4  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  5  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  6  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  7  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  8  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  9  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
 10  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 11  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 12  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 13  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 14  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 15  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 16  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 17  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 18  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 19  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 20  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 21  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 22  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 23  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 24  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 25  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 26  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 27  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 28  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 29  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 30  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 31  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 32  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 33  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 34  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 35  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 36  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 37  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 38  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 39  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 40  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 41  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 42  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 43  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 44  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 45  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 46  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 47  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 48  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 49  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 50  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 51  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 52  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 53  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 54  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 55  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 56  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 57  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 58  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 59  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 60  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 61  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 62  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 63  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 64  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 65  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 66  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 67  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 68  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 69  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 70  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 71  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 72  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 73  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 74  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 75  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 76  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 77  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 78  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 79  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 80  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 81  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 82  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 83  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 84  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 85  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 86  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 87  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 88  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 89  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 90  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 91  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 92  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 93  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 94  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 95  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 96  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 97  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 98  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 99  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
100  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
101  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
102  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
103  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 404] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x6d
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 103 instructions, PCs: bfb76fa3 bfb76fa4 bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
395 [State 404] Terminating state 404 with message 'eliminated this false positive, execution path subset of another success'
395 [State 404] Switching from state 404 to state 0
Copied 34928 (count=1)
Deleting state 404 0x0x2959fc40
395 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 403
>> fuzzInit: datum forking for value 404
>> fuzzInit: datum forking for value 404
395 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 404)
        (ReadLSB w32 0 v404_fuzz_symb_404)))
    state 405 with condition (Not (Eq false
         (Eq (w32 404)
             (ReadLSB w32 0 v404_fuzz_symb_404))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-404-8048a0e
Size=2 Low=0 splitIndex=1 high=1
395 [State 0] Switching from state 0 to state 405
Copied 34928 (count=1)
Finalizing TB execution 405
s2e_dummyMainFunction
tcg-llvm-tb-404-8048a0e
395 [State 405] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 404 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
  2  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  3  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  4  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  5  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  6  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  7  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  8  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  9  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
 10  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 11  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 12  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 13  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 14  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 15  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 16  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 17  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 18  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 19  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 20  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 21  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 22  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 23  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 24  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 25  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 26  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 27  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 28  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 29  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 30  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 31  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 32  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 33  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 34  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 35  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 36  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 37  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 38  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 39  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 40  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 41  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 42  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 43  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 44  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 45  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 46  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 47  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 48  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 49  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 50  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 51  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 52  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 53  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 54  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 55  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 56  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 57  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 58  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 59  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 60  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 61  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 62  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 63  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 64  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 65  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 66  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 67  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 68  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 69  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 70  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 71  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 72  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 73  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 74  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 75  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 76  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 77  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 78  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 79  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 80  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 81  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 82  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 83  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 84  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 85  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 86  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 87  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 88  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 89  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 90  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 91  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 92  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 93  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 94  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 95  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 96  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 97  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 98  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 99  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
100  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
101  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
102  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 405] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x6c
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 102 instructions, PCs: bfb76fa4 bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
395 [State 405] Terminating state 405 with message 'eliminated this false positive, execution path subset of another success'
395 [State 405] Switching from state 405 to state 0
Copied 34928 (count=1)
Deleting state 405 0x0x2959fc40
396 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 404
>> fuzzInit: datum forking for value 405
>> fuzzInit: datum forking for value 405
396 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 405)
        (ReadLSB w32 0 v405_fuzz_symb_405)))
    state 406 with condition (Not (Eq false
         (Eq (w32 405)
             (ReadLSB w32 0 v405_fuzz_symb_405))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-405-8048a0e
Size=2 Low=0 splitIndex=1 high=1
396 [State 0] Switching from state 0 to state 406
Copied 34928 (count=1)
Finalizing TB execution 406
s2e_dummyMainFunction
tcg-llvm-tb-405-8048a0e
396 [State 406] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 405 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
  2  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  3  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  4  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  5  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  6  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  7  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  8  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  9  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
 10  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 11  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 12  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 13  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 14  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 15  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 16  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 17  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 18  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 19  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 20  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 21  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 22  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 23  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 24  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 25  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 26  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 27  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 28  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 29  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 30  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 31  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 32  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 33  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 34  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 35  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 36  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 37  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 38  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 39  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 40  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 41  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 42  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 43  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 44  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 45  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 46  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 47  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 48  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 49  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 50  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 51  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 52  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 53  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 54  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 55  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 56  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 57  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 58  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 59  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 60  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 61  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 62  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 63  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 64  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 65  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 66  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 67  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 68  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 69  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 70  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 71  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 72  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 73  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 74  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 75  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 76  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 77  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 78  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 79  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 80  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 81  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 82  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 83  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 84  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 85  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 86  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 87  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 88  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 89  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 90  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 91  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 92  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 93  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 94  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 95  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 96  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 97  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 98  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 99  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
100  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
101  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 406] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x6b
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 101 instructions, PCs: bfb76fa5 bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
396 [State 406] Terminating state 406 with message 'eliminated this false positive, execution path subset of another success'
396 [State 406] Switching from state 406 to state 0
Copied 34928 (count=1)
Deleting state 406 0x0x2959fc40
Firing timer event
396 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 405
>> fuzzInit: datum forking for value 406
>> fuzzInit: datum forking for value 406
397 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 406)
        (ReadLSB w32 0 v406_fuzz_symb_406)))
    state 407 with condition (Not (Eq false
         (Eq (w32 406)
             (ReadLSB w32 0 v406_fuzz_symb_406))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-406-8048a0e
Size=2 Low=0 splitIndex=1 high=1
397 [State 0] Switching from state 0 to state 407
Copied 34928 (count=1)
Finalizing TB execution 407
s2e_dummyMainFunction
tcg-llvm-tb-406-8048a0e
397 [State 407] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 406 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
  2  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  3  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  4  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  5  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  6  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  7  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  8  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  9  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
 10  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 11  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 12  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 13  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 14  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 15  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 16  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 17  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 18  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 19  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 20  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 21  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 22  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 23  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 24  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 25  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 26  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 27  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 28  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 29  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 30  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 31  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 32  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 33  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 34  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 35  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 36  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 37  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 38  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 39  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 40  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 41  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 42  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 43  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 44  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 45  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 46  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 47  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 48  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 49  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 50  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 51  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 52  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 53  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 54  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 55  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 56  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 57  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 58  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 59  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 60  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 61  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 62  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 63  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 64  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 65  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 66  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 67  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 68  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 69  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 70  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 71  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 72  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 73  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 74  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 75  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 76  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 77  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 78  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 79  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 80  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 81  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 82  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 83  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 84  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 85  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 86  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 87  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 88  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 89  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 90  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 91  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 92  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 93  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 94  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 95  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 96  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 97  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 98  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 99  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
100  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 407] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x6a
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 100 instructions, PCs: bfb76fa6 bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
397 [State 407] Terminating state 407 with message 'eliminated this false positive, execution path subset of another success'
397 [State 407] Switching from state 407 to state 0
Copied 34928 (count=1)
Deleting state 407 0x0x2959fc40
397 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 406
>> fuzzInit: datum forking for value 407
>> fuzzInit: datum forking for value 407
397 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 407)
        (ReadLSB w32 0 v407_fuzz_symb_407)))
    state 408 with condition (Not (Eq false
         (Eq (w32 407)
             (ReadLSB w32 0 v407_fuzz_symb_407))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-407-8048a0e
Size=2 Low=0 splitIndex=1 high=1
397 [State 0] Switching from state 0 to state 408
Copied 34928 (count=1)
Finalizing TB execution 408
s2e_dummyMainFunction
tcg-llvm-tb-407-8048a0e
Firing timer event
398 [State 408] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 407 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
  2  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  3  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  4  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  5  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  6  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  7  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  8  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  9  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
 10  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 11  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 12  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 13  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 14  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 15  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 16  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 17  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 18  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 19  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 20  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 21  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 22  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 23  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 24  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 25  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 26  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 27  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 28  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 29  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 30  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 31  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 32  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 33  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 34  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 35  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 36  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 37  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 38  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 39  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 40  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 41  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 42  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 43  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 44  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 45  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 46  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 47  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 48  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 49  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 50  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 51  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 52  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 53  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 54  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 55  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 56  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 57  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 58  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 59  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 60  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 61  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 62  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 63  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 64  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 65  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 66  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 67  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 68  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 69  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 70  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 71  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 72  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 73  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 74  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 75  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 76  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 77  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 78  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 79  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 80  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 81  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 82  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 83  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 84  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 85  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 86  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 87  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 88  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 89  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 90  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 91  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 92  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 93  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 94  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 95  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 96  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 97  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 98  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 99  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 408] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x69
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 99 instructions, PCs: bfb76fa7 bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
398 [State 408] Terminating state 408 with message 'eliminated this false positive, execution path subset of another success'
398 [State 408] Switching from state 408 to state 0
Copied 34928 (count=1)
Deleting state 408 0x0x2959fc40
398 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 407
>> fuzzInit: datum forking for value 408
>> fuzzInit: datum forking for value 408
398 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 408)
        (ReadLSB w32 0 v408_fuzz_symb_408)))
    state 409 with condition (Not (Eq false
         (Eq (w32 408)
             (ReadLSB w32 0 v408_fuzz_symb_408))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-408-8048a0e
Size=2 Low=0 splitIndex=1 high=1
398 [State 0] Switching from state 0 to state 409
Copied 34928 (count=1)
Finalizing TB execution 409
s2e_dummyMainFunction
tcg-llvm-tb-408-8048a0e
Firing timer event
399 [State 409] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 408 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
  2  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  3  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  4  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  5  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  6  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  7  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  8  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  9  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
 10  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 11  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 12  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 13  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 14  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 15  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 16  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 17  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 18  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 19  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 20  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 21  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 22  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 23  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 24  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 25  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 26  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 27  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 28  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 29  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 30  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 31  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 32  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 33  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 34  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 35  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 36  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 37  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 38  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 39  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 40  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 41  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 42  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 43  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 44  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 45  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 46  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 47  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 48  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 49  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 50  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 51  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 52  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 53  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 54  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 55  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 56  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 57  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 58  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 59  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 60  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 61  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 62  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 63  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 64  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 65  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 66  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 67  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 68  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 69  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 70  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 71  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 72  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 73  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 74  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 75  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 76  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 77  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 78  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 79  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 80  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 81  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 82  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 83  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 84  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 85  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 86  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 87  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 88  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 89  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 90  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 91  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 92  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 93  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 94  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 95  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 96  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 97  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 98  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 409] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x68
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 98 instructions, PCs: bfb76fa8 bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
399 [State 409] Terminating state 409 with message 'eliminated this false positive, execution path subset of another success'
399 [State 409] Switching from state 409 to state 0
Copied 34928 (count=1)
Deleting state 409 0x0x2959fc40
399 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 408
>> fuzzInit: datum forking for value 409
>> fuzzInit: datum forking for value 409
399 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 409)
        (ReadLSB w32 0 v409_fuzz_symb_409)))
    state 410 with condition (Not (Eq false
         (Eq (w32 409)
             (ReadLSB w32 0 v409_fuzz_symb_409))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-409-8048a0e
Size=2 Low=0 splitIndex=1 high=1
399 [State 0] Switching from state 0 to state 410
Copied 34928 (count=1)
Finalizing TB execution 410
s2e_dummyMainFunction
tcg-llvm-tb-409-8048a0e
399 [State 410] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 409 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
  2  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  3  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  4  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  5  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  6  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  7  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  8  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  9  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
 10  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 11  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 12  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 13  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 14  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 15  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 16  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 17  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 18  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 19  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 20  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 21  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 22  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 23  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 24  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 25  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 26  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 27  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 28  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 29  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 30  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 31  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 32  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 33  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 34  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 35  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 36  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 37  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 38  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 39  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 40  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 41  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 42  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 43  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 44  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 45  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 46  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 47  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 48  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 49  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 50  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 51  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 52  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 53  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 54  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 55  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 56  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 57  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 58  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 59  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 60  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 61  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 62  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 63  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 64  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 65  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 66  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 67  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 68  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 69  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 70  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 71  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 72  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 73  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 74  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 75  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 76  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 77  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 78  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
Firing timer event
 79  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 80  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 81  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 82  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 83  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 84  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 85  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 86  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 87  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 88  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 89  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 90  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 91  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 92  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 93  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 94  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 95  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 96  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 97  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 410] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x67
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 97 instructions, PCs: bfb76fa9 bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
400 [State 410] Terminating state 410 with message 'eliminated this false positive, execution path subset of another success'
400 [State 410] Switching from state 410 to state 0
Copied 34928 (count=1)
Deleting state 410 0x0x2959fc40
400 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 409
>> fuzzInit: datum forking for value 410
>> fuzzInit: datum forking for value 410
400 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 410)
        (ReadLSB w32 0 v410_fuzz_symb_410)))
    state 411 with condition (Not (Eq false
         (Eq (w32 410)
             (ReadLSB w32 0 v410_fuzz_symb_410))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-410-8048a0e
Size=2 Low=0 splitIndex=1 high=1
400 [State 0] Switching from state 0 to state 411
Copied 34928 (count=1)
Finalizing TB execution 411
s2e_dummyMainFunction
tcg-llvm-tb-410-8048a0e
400 [State 411] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 410 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
  2  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  3  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  4  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  5  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  6  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  7  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  8  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  9  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
 10  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 11  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 12  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 13  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 14  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 15  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 16  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 17  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 18  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 19  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 20  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 21  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 22  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 23  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 24  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 25  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 26  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 27  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 28  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 29  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 30  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 31  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 32  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 33  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 34  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 35  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 36  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 37  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 38  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 39  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 40  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 41  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 42  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 43  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 44  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 45  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 46  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 47  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 48  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 49  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 50  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 51  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 52  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 53  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 54  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 55  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 56  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 57  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 58  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 59  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 60  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 61  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 62  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 63  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 64  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 65  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 66  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 67  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 68  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 69  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 70  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 71  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 72  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 73  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 74  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 75  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 76  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 77  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 78  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 79  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 80  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 81  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 82  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 83  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 84  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 85  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 86  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 87  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 88  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 89  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 90  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 91  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 92  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 93  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 94  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 95  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 96  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 411] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x66
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 96 instructions, PCs: bfb76faa bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
400 [State 411] Terminating state 411 with message 'eliminated this false positive, execution path subset of another success'
400 [State 411] Switching from state 411 to state 0
Copied 34928 (count=1)
Deleting state 411 0x0x2959fc40
401 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 410
>> fuzzInit: datum forking for value 411
>> fuzzInit: datum forking for value 411
401 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 411)
        (ReadLSB w32 0 v411_fuzz_symb_411)))
    state 412 with condition (Not (Eq false
         (Eq (w32 411)
             (ReadLSB w32 0 v411_fuzz_symb_411))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-411-8048a0e
Size=2 Low=0 splitIndex=1 high=1
401 [State 0] Switching from state 0 to state 412
Copied 34928 (count=1)
Finalizing TB execution 412
s2e_dummyMainFunction
tcg-llvm-tb-411-8048a0e
Firing timer event
401 [State 412] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 411 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
  2  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  3  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  4  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  5  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  6  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  7  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  8  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  9  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
 10  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 11  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 12  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 13  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 14  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 15  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 16  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 17  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 18  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 19  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 20  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 21  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 22  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 23  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 24  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 25  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 26  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 27  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 28  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 29  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 30  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 31  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 32  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 33  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 34  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 35  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 36  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 37  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 38  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 39  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 40  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 41  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 42  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 43  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 44  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 45  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 46  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 47  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 48  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 49  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 50  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 51  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 52  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 53  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 54  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 55  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 56  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 57  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 58  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 59  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 60  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 61  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 62  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 63  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 64  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 65  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 66  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 67  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 68  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 69  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 70  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 71  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 72  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 73  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 74  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 75  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 76  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 77  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 78  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 79  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 80  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 81  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 82  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 83  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 84  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 85  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 86  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 87  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 88  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 89  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 90  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 91  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 92  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 93  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 94  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 95  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 412] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x65
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 95 instructions, PCs: bfb76fab bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
401 [State 412] Terminating state 412 with message 'eliminated this false positive, execution path subset of another success'
401 [State 412] Switching from state 412 to state 0
Copied 34928 (count=1)
Deleting state 412 0x0x2959fc40
401 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 411
>> fuzzInit: datum forking for value 412
>> fuzzInit: datum forking for value 412
401 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 412)
        (ReadLSB w32 0 v412_fuzz_symb_412)))
    state 413 with condition (Not (Eq false
         (Eq (w32 412)
             (ReadLSB w32 0 v412_fuzz_symb_412))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-412-8048a0e
Size=2 Low=0 splitIndex=1 high=1
401 [State 0] Switching from state 0 to state 413
Copied 34928 (count=1)
Finalizing TB execution 413
s2e_dummyMainFunction
tcg-llvm-tb-412-8048a0e
402 [State 413] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 412 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
  2  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  3  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  4  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  5  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  6  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  7  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  8  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  9  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
 10  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 11  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 12  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 13  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 14  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 15  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 16  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 17  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 18  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 19  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 20  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 21  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 22  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 23  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 24  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 25  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 26  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 27  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 28  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 29  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 30  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 31  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 32  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 33  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 34  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 35  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 36  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 37  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 38  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 39  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 40  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 41  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 42  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 43  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 44  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 45  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 46  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 47  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 48  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 49  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 50  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 51  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 52  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 53  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 54  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 55  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 56  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 57  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 58  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 59  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 60  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 61  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 62  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 63  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 64  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 65  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 66  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 67  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 68  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 69  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 70  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 71  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 72  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 73  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 74  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 75  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 76  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 77  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 78  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
Firing timer event
 79  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 80  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 81  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 82  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 83  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 84  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 85  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 86  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 87  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 88  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 89  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 90  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 91  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 92  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 93  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 94  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 413] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x64
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 94 instructions, PCs: bfb76fac bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
402 [State 413] Terminating state 413 with message 'eliminated this false positive, execution path subset of another success'
402 [State 413] Switching from state 413 to state 0
Copied 34928 (count=1)
Deleting state 413 0x0x2959fc40
402 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 412
>> fuzzInit: datum forking for value 413
>> fuzzInit: datum forking for value 413
402 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 413)
        (ReadLSB w32 0 v413_fuzz_symb_413)))
    state 414 with condition (Not (Eq false
         (Eq (w32 413)
             (ReadLSB w32 0 v413_fuzz_symb_413))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-413-8048a0e
Size=2 Low=0 splitIndex=1 high=1
402 [State 0] Switching from state 0 to state 414
Copied 34928 (count=1)
Finalizing TB execution 414
s2e_dummyMainFunction
tcg-llvm-tb-413-8048a0e
402 [State 414] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 413 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
  2  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  3  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  4  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  5  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  6  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  7  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  8  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  9  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
 10  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 11  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 12  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 13  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 14  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 15  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 16  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 17  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 18  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 19  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 20  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 21  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 22  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 23  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 24  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 25  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 26  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 27  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 28  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 29  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 30  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 31  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 32  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 33  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 34  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 35  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 36  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 37  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 38  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 39  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 40  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 41  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 42  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 43  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 44  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 45  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 46  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 47  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 48  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 49  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 50  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 51  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 52  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 53  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 54  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 55  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 56  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 57  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 58  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 59  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 60  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 61  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 62  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 63  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 64  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 65  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 66  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 67  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 68  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 69  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 70  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 71  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 72  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 73  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 74  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 75  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 76  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 77  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 78  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 79  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 80  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 81  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 82  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 83  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 84  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 85  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 86  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 87  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 88  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 89  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 90  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 91  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 92  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 93  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 414] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x63
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 93 instructions, PCs: bfb76fad bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
403 [State 414] Terminating state 414 with message 'eliminated this false positive, execution path subset of another success'
403 [State 414] Switching from state 414 to state 0
Copied 34928 (count=1)
Deleting state 414 0x0x2959fc40
Firing timer event
403 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 413
>> fuzzInit: datum forking for value 414
>> fuzzInit: datum forking for value 414
403 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 414)
        (ReadLSB w32 0 v414_fuzz_symb_414)))
    state 415 with condition (Not (Eq false
         (Eq (w32 414)
             (ReadLSB w32 0 v414_fuzz_symb_414))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-414-8048a0e
Size=2 Low=0 splitIndex=1 high=1
403 [State 0] Switching from state 0 to state 415
Copied 34928 (count=1)
Finalizing TB execution 415
s2e_dummyMainFunction
tcg-llvm-tb-414-8048a0e
403 [State 415] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 414 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
  2  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  3  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  4  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  5  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  6  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  7  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  8  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  9  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
 10  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 11  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 12  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 13  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 14  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 15  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 16  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 17  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 18  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 19  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 20  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 21  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 22  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 23  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 24  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 25  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 26  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 27  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 28  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 29  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 30  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 31  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 32  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 33  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 34  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 35  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 36  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 37  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 38  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 39  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 40  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 41  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 42  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 43  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 44  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 45  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 46  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 47  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 48  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 49  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 50  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 51  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 52  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 53  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 54  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 55  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 56  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 57  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 58  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 59  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 60  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 61  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 62  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 63  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 64  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 65  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 66  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 67  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 68  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 69  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 70  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 71  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 72  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 73  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 74  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 75  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 76  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 77  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 78  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 79  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 80  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 81  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 82  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 83  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 84  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 85  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 86  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 87  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 88  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 89  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 90  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 91  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 92  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 415] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x62
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 92 instructions, PCs: bfb76fae bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
403 [State 415] Terminating state 415 with message 'eliminated this false positive, execution path subset of another success'
403 [State 415] Switching from state 415 to state 0
Copied 34928 (count=1)
Deleting state 415 0x0x29b40520
404 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 414
>> fuzzInit: datum forking for value 415
>> fuzzInit: datum forking for value 415
404 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 415)
        (ReadLSB w32 0 v415_fuzz_symb_415)))
    state 416 with condition (Not (Eq false
         (Eq (w32 415)
             (ReadLSB w32 0 v415_fuzz_symb_415))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-415-8048a0e
Size=2 Low=0 splitIndex=1 high=1
404 [State 0] Switching from state 0 to state 416
Copied 34928 (count=1)
Finalizing TB execution 416
s2e_dummyMainFunction
tcg-llvm-tb-415-8048a0e
Firing timer event
404 [State 416] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 415 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
  2  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  3  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  4  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  5  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  6  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  7  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  8  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  9  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
 10  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 11  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 12  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 13  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 14  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 15  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 16  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 17  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 18  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 19  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 20  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 21  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 22  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 23  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 24  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 25  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 26  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 27  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 28  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 29  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 30  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 31  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 32  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 33  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 34  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 35  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 36  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 37  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 38  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 39  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 40  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 41  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 42  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 43  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 44  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 45  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 46  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 47  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 48  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 49  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 50  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 51  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 52  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 53  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 54  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 55  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 56  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 57  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 58  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 59  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 60  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 61  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 62  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 63  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 64  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 65  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 66  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 67  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 68  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 69  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 70  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 71  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 72  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 73  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 74  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 75  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 76  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 77  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 78  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 79  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 80  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 81  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 82  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 83  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 84  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 85  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 86  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 87  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 88  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 89  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 90  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 91  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 416] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x61
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 91 instructions, PCs: bfb76faf bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
404 [State 416] Terminating state 416 with message 'eliminated this false positive, execution path subset of another success'
404 [State 416] Switching from state 416 to state 0
Copied 34928 (count=1)
Deleting state 416 0x0x29b40520
405 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 415
>> fuzzInit: datum forking for value 416
>> fuzzInit: datum forking for value 416
405 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 416)
        (ReadLSB w32 0 v416_fuzz_symb_416)))
    state 417 with condition (Not (Eq false
         (Eq (w32 416)
             (ReadLSB w32 0 v416_fuzz_symb_416))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-416-8048a0e
Size=2 Low=0 splitIndex=1 high=1
405 [State 0] Switching from state 0 to state 417
Copied 34928 (count=1)
Finalizing TB execution 417
s2e_dummyMainFunction
tcg-llvm-tb-416-8048a0e
Firing timer event
405 [State 417] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 416 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
  2  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  3  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  4  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  5  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  6  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  7  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  8  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  9  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
 10  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 11  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 12  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 13  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 14  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 15  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 16  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 17  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 18  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 19  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 20  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 21  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 22  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 23  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 24  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 25  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 26  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 27  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 28  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 29  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 30  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 31  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 32  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 33  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 34  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 35  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 36  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 37  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 38  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 39  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 40  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 41  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 42  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 43  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 44  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 45  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 46  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 47  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 48  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 49  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 50  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 51  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 52  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 53  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 54  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 55  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 56  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 57  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 58  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 59  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 60  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 61  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 62  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 63  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 64  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 65  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 66  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 67  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 68  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 69  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 70  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 71  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 72  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 73  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 74  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 75  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 76  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 77  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 78  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 79  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 80  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 81  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 82  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 83  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 84  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 85  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 86  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 87  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 88  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 89  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 90  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 417] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x60
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 90 instructions, PCs: bfb76fb0 bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
405 [State 417] Terminating state 417 with message 'eliminated this false positive, execution path subset of another success'
405 [State 417] Switching from state 417 to state 0
Copied 34928 (count=1)
Deleting state 417 0x0x29d02810
406 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 416
>> fuzzInit: datum forking for value 417
>> fuzzInit: datum forking for value 417
406 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 417)
        (ReadLSB w32 0 v417_fuzz_symb_417)))
    state 418 with condition (Not (Eq false
         (Eq (w32 417)
             (ReadLSB w32 0 v417_fuzz_symb_417))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-417-8048a0e
Size=2 Low=0 splitIndex=1 high=1
406 [State 0] Switching from state 0 to state 418
Copied 34928 (count=1)
Finalizing TB execution 418
s2e_dummyMainFunction
tcg-llvm-tb-417-8048a0e
406 [State 418] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 417 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
  2  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  3  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  4  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  5  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  6  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  7  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  8  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  9  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
 10  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 11  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 12  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 13  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 14  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 15  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 16  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 17  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 18  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 19  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 20  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 21  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 22  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 23  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 24  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 25  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 26  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 27  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 28  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 29  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 30  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 31  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 32  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 33  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 34  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 35  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 36  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 37  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 38  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 39  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 40  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 41  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 42  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 43  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 44  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 45  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 46  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 47  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 48  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 49  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 50  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 51  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 52  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 53  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 54  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 55  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 56  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 57  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 58  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 59  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 60  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 61  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 62  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 63  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 64  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 65  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 66  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 67  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 68  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 69  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 70  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 71  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 72  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 73  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 74  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 75  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 76  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 77  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 78  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 79  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 80  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 81  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 82  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 83  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 84  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 85  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 86  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 87  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 88  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 89  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 418] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x5f
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 89 instructions, PCs: bfb76fb1 bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
406 [State 418] Terminating state 418 with message 'eliminated this false positive, execution path subset of another success'
406 [State 418] Switching from state 418 to state 0
Copied 34928 (count=1)
Deleting state 418 0x0x29d02810
406 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 417
>> fuzzInit: datum forking for value 418
>> fuzzInit: datum forking for value 418
407 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 418)
        (ReadLSB w32 0 v418_fuzz_symb_418)))
    state 419 with condition (Not (Eq false
         (Eq (w32 418)
             (ReadLSB w32 0 v418_fuzz_symb_418))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-418-8048a0e
Size=2 Low=0 splitIndex=1 high=1
407 [State 0] Switching from state 0 to state 419
Copied 34928 (count=1)
Finalizing TB execution 419
s2e_dummyMainFunction
tcg-llvm-tb-418-8048a0e
407 [State 419] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 418 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
  2  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  3  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  4  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  5  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  6  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  7  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  8  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  9  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
 10  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 11  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 12  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 13  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 14  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 15  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 16  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 17  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 18  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 19  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 20  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 21  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 22  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 23  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 24  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 25  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 26  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 27  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 28  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 29  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 30  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 31  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 32  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 33  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 34  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 35  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 36  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 37  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 38  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 39  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 40  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 41  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 42  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 43  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 44  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 45  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 46  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 47  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 48  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 49  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 50  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 51  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 52  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 53  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 54  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 55  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 56  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 57  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 58  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 59  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 60  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 61  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 62  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 63  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 64  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 65  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 66  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 67  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 68  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 69  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 70  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 71  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 72  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 73  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 74  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 75  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 76  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 77  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 78  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 79  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 80  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 81  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 82  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 83  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 84  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 85  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 86  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 87  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 88  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 419] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x5e
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 88 instructions, PCs: bfb76fb2 bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
407 [State 419] Terminating state 419 with message 'eliminated this false positive, execution path subset of another success'
407 [State 419] Switching from state 419 to state 0
Copied 34928 (count=1)
Deleting state 419 0x0x29d02810
Firing timer event
407 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 418
>> fuzzInit: datum forking for value 419
>> fuzzInit: datum forking for value 419
407 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 419)
        (ReadLSB w32 0 v419_fuzz_symb_419)))
    state 420 with condition (Not (Eq false
         (Eq (w32 419)
             (ReadLSB w32 0 v419_fuzz_symb_419))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-419-8048a0e
Size=2 Low=0 splitIndex=1 high=1
407 [State 0] Switching from state 0 to state 420
Copied 34928 (count=1)
Finalizing TB execution 420
s2e_dummyMainFunction
tcg-llvm-tb-419-8048a0e
408 [State 420] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 419 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
  2  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  3  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  4  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  5  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  6  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  7  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  8  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  9  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
 10  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 11  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 12  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 13  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 14  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 15  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 16  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 17  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 18  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 19  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 20  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 21  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 22  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 23  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 24  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 25  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 26  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 27  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 28  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 29  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 30  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 31  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 32  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 33  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 34  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 35  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 36  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 37  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 38  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 39  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 40  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 41  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 42  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 43  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 44  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 45  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 46  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 47  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 48  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 49  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 50  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 51  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 52  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 53  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 54  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 55  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 56  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 57  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 58  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 59  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 60  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 61  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 62  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 63  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 64  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 65  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 66  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 67  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 68  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 69  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 70  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 71  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 72  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 73  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 74  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 75  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 76  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 77  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 78  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 79  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 80  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 81  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 82  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 83  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 84  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 85  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 86  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 87  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 420] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x5d
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 87 instructions, PCs: bfb76fb3 bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
408 [State 420] Terminating state 420 with message 'eliminated this false positive, execution path subset of another success'
408 [State 420] Switching from state 420 to state 0
Copied 34928 (count=1)
Deleting state 420 0x0x29d02810
408 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 419
>> fuzzInit: datum forking for value 420
>> fuzzInit: datum forking for value 420
408 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 420)
        (ReadLSB w32 0 v420_fuzz_symb_420)))
    state 421 with condition (Not (Eq false
         (Eq (w32 420)
             (ReadLSB w32 0 v420_fuzz_symb_420))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-420-8048a0e
Size=2 Low=0 splitIndex=1 high=1
408 [State 0] Switching from state 0 to state 421
Copied 34928 (count=1)
Finalizing TB execution 421
s2e_dummyMainFunction
tcg-llvm-tb-420-8048a0e
Firing timer event
409 [State 421] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 420 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
  2  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  3  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  4  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  5  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  6  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  7  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  8  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  9  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
 10  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 11  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 12  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 13  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 14  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 15  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 16  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 17  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 18  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 19  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 20  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 21  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 22  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 23  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 24  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 25  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 26  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 27  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 28  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 29  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 30  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 31  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 32  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 33  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 34  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 35  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 36  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 37  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 38  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 39  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 40  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 41  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 42  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 43  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 44  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 45  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 46  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 47  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 48  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 49  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 50  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 51  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 52  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 53  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 54  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 55  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 56  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 57  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 58  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 59  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 60  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 61  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 62  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 63  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 64  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 65  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 66  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 67  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 68  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 69  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 70  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 71  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 72  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 73  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 74  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 75  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 76  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 77  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 78  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 79  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 80  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 81  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 82  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 83  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 84  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 85  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 86  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 421] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x5c
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 86 instructions, PCs: bfb76fb4 bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
409 [State 421] Terminating state 421 with message 'eliminated this false positive, execution path subset of another success'
409 [State 421] Switching from state 421 to state 0
Copied 34928 (count=1)
Deleting state 421 0x0x29cffb00
409 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 420
>> fuzzInit: datum forking for value 421
>> fuzzInit: datum forking for value 421
409 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 421)
        (ReadLSB w32 0 v421_fuzz_symb_421)))
    state 422 with condition (Not (Eq false
         (Eq (w32 421)
             (ReadLSB w32 0 v421_fuzz_symb_421))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-421-8048a0e
Size=2 Low=0 splitIndex=1 high=1
409 [State 0] Switching from state 0 to state 422
Copied 34928 (count=1)
Finalizing TB execution 422
s2e_dummyMainFunction
tcg-llvm-tb-421-8048a0e
409 [State 422] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 421 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
  2  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  3  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  4  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  5  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  6  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  7  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  8  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  9  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
 10  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 11  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 12  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 13  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 14  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 15  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 16  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 17  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 18  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 19  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 20  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 21  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 22  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 23  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 24  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 25  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 26  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 27  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 28  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 29  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 30  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 31  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 32  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 33  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 34  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 35  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 36  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 37  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 38  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 39  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 40  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 41  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 42  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 43  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 44  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 45  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 46  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 47  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 48  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 49  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 50  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 51  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 52  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 53  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 54  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 55  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 56  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 57  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 58  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 59  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 60  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 61  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 62  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 63  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 64  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 65  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 66  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 67  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 68  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 69  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 70  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 71  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 72  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 73  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 74  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 75  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 76  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 77  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 78  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 79  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 80  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 81  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 82  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 83  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 84  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 85  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 422] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x5b
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 85 instructions, PCs: bfb76fb5 bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
410 [State 422] Terminating state 422 with message 'eliminated this false positive, execution path subset of another success'
410 [State 422] Switching from state 422 to state 0
Copied 34928 (count=1)
Deleting state 422 0x0x29cffb00
410 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 421
>> fuzzInit: datum forking for value 422
>> fuzzInit: datum forking for value 422
410 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 422)
        (ReadLSB w32 0 v422_fuzz_symb_422)))
    state 423 with condition (Not (Eq false
         (Eq (w32 422)
             (ReadLSB w32 0 v422_fuzz_symb_422))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-422-8048a0e
Size=2 Low=0 splitIndex=1 high=1
410 [State 0] Switching from state 0 to state 423
Copied 34928 (count=1)
Finalizing TB execution 423
s2e_dummyMainFunction
tcg-llvm-tb-422-8048a0e
410 [State 423] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 422 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
  2  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  3  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  4  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  5  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  6  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  7  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  8  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  9  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
 10  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 11  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 12  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 13  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 14  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 15  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 16  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 17  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 18  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 19  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 20  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 21  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 22  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 23  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 24  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 25  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 26  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 27  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 28  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 29  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 30  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 31  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 32  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 33  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 34  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 35  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 36  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 37  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 38  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 39  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 40  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 41  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 42  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 43  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 44  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 45  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 46  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 47  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 48  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 49  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 50  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 51  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 52  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 53  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 54  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 55  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 56  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 57  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 58  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 59  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 60  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 61  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 62  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 63  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 64  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 65  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 66  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 67  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 68  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 69  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 70  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 71  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 72  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 73  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 74  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 75  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 76  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 77  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 78  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 79  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 80  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 81  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 82  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 83  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 84  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 423] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x5a
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 84 instructions, PCs: bfb76fb6 bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
410 [State 423] Terminating state 423 with message 'eliminated this false positive, execution path subset of another success'
410 [State 423] Switching from state 423 to state 0
Copied 34928 (count=1)
Deleting state 423 0x0x29e0dcf0
Firing timer event
411 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 422
>> fuzzInit: datum forking for value 423
>> fuzzInit: datum forking for value 423
411 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 423)
        (ReadLSB w32 0 v423_fuzz_symb_423)))
    state 424 with condition (Not (Eq false
         (Eq (w32 423)
             (ReadLSB w32 0 v423_fuzz_symb_423))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-423-8048a0e
Size=2 Low=0 splitIndex=1 high=1
411 [State 0] Switching from state 0 to state 424
Copied 34928 (count=1)
Finalizing TB execution 424
s2e_dummyMainFunction
tcg-llvm-tb-423-8048a0e
411 [State 424] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 423 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
  2  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  3  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  4  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  5  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  6  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  7  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  8  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  9  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
 10  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 11  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 12  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 13  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 14  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 15  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 16  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 17  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 18  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 19  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 20  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 21  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 22  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 23  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 24  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 25  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 26  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 27  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 28  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 29  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 30  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 31  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 32  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 33  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 34  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 35  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 36  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 37  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 38  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 39  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 40  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 41  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 42  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 43  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 44  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 45  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 46  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 47  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 48  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 49  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 50  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 51  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 52  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 53  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 54  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 55  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 56  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 57  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 58  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 59  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 60  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 61  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 62  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 63  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 64  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 65  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 66  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 67  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 68  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 69  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 70  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 71  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 72  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 73  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 74  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 75  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 76  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 77  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 78  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 79  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 80  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 81  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 82  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 83  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 424] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x59
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 83 instructions, PCs: bfb76fb7 bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
411 [State 424] Terminating state 424 with message 'eliminated this false positive, execution path subset of another success'
411 [State 424] Switching from state 424 to state 0
Copied 34928 (count=1)
Deleting state 424 0x0x29e0dcf0
411 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 423
>> fuzzInit: datum forking for value 424
>> fuzzInit: datum forking for value 424
412 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 424)
        (ReadLSB w32 0 v424_fuzz_symb_424)))
    state 425 with condition (Not (Eq false
         (Eq (w32 424)
             (ReadLSB w32 0 v424_fuzz_symb_424))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-424-8048a0e
Size=2 Low=0 splitIndex=1 high=1
412 [State 0] Switching from state 0 to state 425
Copied 34928 (count=1)
Finalizing TB execution 425
s2e_dummyMainFunction
tcg-llvm-tb-424-8048a0e
Firing timer event
412 [State 425] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 424 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
  2  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  3  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  4  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  5  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  6  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  7  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  8  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  9  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
 10  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 11  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 12  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 13  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 14  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 15  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 16  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 17  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 18  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 19  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 20  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 21  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 22  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 23  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 24  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 25  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 26  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 27  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 28  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 29  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 30  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 31  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 32  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 33  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 34  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 35  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 36  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 37  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 38  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 39  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 40  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 41  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 42  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 43  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 44  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 45  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 46  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 47  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 48  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 49  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 50  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 51  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 52  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 53  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 54  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 55  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 56  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 57  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 58  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 59  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 60  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 61  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 62  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 63  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 64  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 65  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 66  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 67  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 68  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 69  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 70  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 71  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 72  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 73  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 74  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 75  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 76  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 77  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 78  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 79  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 80  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 81  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 82  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 425] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x58
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 82 instructions, PCs: bfb76fb8 bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
412 [State 425] Terminating state 425 with message 'eliminated this false positive, execution path subset of another success'
412 [State 425] Switching from state 425 to state 0
Copied 34928 (count=1)
Deleting state 425 0x0x29e0dcf0
412 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 424
>> fuzzInit: datum forking for value 425
>> fuzzInit: datum forking for value 425
412 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 425)
        (ReadLSB w32 0 v425_fuzz_symb_425)))
    state 426 with condition (Not (Eq false
         (Eq (w32 425)
             (ReadLSB w32 0 v425_fuzz_symb_425))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-425-8048a0e
Size=2 Low=0 splitIndex=1 high=1
412 [State 0] Switching from state 0 to state 426
Copied 34928 (count=1)
Finalizing TB execution 426
s2e_dummyMainFunction
tcg-llvm-tb-425-8048a0e
412 [State 426] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 425 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
  2  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  3  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  4  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  5  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  6  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  7  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  8  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  9  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
 10  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 11  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 12  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 13  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 14  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 15  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 16  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 17  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 18  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 19  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 20  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 21  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 22  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 23  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 24  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 25  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 26  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 27  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 28  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 29  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 30  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 31  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 32  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 33  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 34  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 35  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 36  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 37  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 38  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 39  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 40  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 41  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 42  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 43  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 44  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 45  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 46  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 47  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 48  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 49  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 50  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 51  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 52  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 53  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 54  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 55  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 56  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 57  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 58  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 59  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 60  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 61  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 62  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 63  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 64  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 65  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 66  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 67  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 68  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 69  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 70  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 71  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 72  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 73  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 74  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 75  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 76  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 77  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 78  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 79  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 80  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 81  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 426] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x57
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 81 instructions, PCs: bfb76fb9 bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
413 [State 426] Terminating state 426 with message 'eliminated this false positive, execution path subset of another success'
413 [State 426] Switching from state 426 to state 0
Copied 34928 (count=1)
Deleting state 426 0x0x29e0dcf0
413 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 425
>> fuzzInit: datum forking for value 426
>> fuzzInit: datum forking for value 426
413 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 426)
        (ReadLSB w32 0 v426_fuzz_symb_426)))
    state 427 with condition (Not (Eq false
         (Eq (w32 426)
             (ReadLSB w32 0 v426_fuzz_symb_426))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-426-8048a0e
Size=2 Low=0 splitIndex=1 high=1
413 [State 0] Switching from state 0 to state 427
Copied 34928 (count=1)
Finalizing TB execution 427
s2e_dummyMainFunction
tcg-llvm-tb-426-8048a0e
413 [State 427] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 426 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
  2  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  3  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  4  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  5  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  6  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  7  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  8  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  9  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
 10  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 11  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 12  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 13  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 14  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 15  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 16  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 17  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 18  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 19  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 20  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 21  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 22  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 23  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 24  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 25  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 26  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 27  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 28  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 29  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 30  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 31  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 32  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 33  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 34  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 35  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 36  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 37  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 38  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 39  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 40  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 41  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 42  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 43  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 44  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 45  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 46  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 47  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 48  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 49  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 50  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 51  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 52  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 53  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 54  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 55  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 56  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 57  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 58  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 59  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 60  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 61  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 62  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 63  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 64  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 65  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 66  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 67  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 68  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 69  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 70  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 71  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
Firing timer event
 72  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 73  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 74  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 75  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 76  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 77  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 78  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 79  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 80  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 427] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x56
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 80 instructions, PCs: bfb76fba bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
414 [State 427] Terminating state 427 with message 'eliminated this false positive, execution path subset of another success'
414 [State 427] Switching from state 427 to state 0
Copied 34928 (count=1)
Deleting state 427 0x0x29e0dcf0
414 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 426
>> fuzzInit: datum forking for value 427
>> fuzzInit: datum forking for value 427
414 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 427)
        (ReadLSB w32 0 v427_fuzz_symb_427)))
    state 428 with condition (Not (Eq false
         (Eq (w32 427)
             (ReadLSB w32 0 v427_fuzz_symb_427))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-427-8048a0e
Size=2 Low=0 splitIndex=1 high=1
414 [State 0] Switching from state 0 to state 428
Copied 34928 (count=1)
Finalizing TB execution 428
s2e_dummyMainFunction
tcg-llvm-tb-427-8048a0e
414 [State 428] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 427 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
  2  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  3  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  4  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  5  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  6  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  7  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  8  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  9  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
 10  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 11  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 12  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 13  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 14  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 15  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 16  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 17  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 18  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 19  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 20  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 21  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 22  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 23  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 24  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 25  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 26  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 27  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 28  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 29  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 30  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 31  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 32  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 33  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 34  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 35  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 36  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 37  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 38  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 39  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 40  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 41  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 42  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 43  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 44  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 45  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 46  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 47  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 48  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 49  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 50  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 51  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 52  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 53  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 54  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 55  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 56  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 57  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 58  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 59  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 60  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 61  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 62  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 63  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 64  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 65  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 66  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 67  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 68  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 69  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 70  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 71  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 72  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 73  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 74  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 75  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 76  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 77  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 78  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 79  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 428] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x55
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 79 instructions, PCs: bfb76fbb bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
414 [State 428] Terminating state 428 with message 'eliminated this false positive, execution path subset of another success'
414 [State 428] Switching from state 428 to state 0
Copied 34928 (count=1)
Deleting state 428 0x0x29e0dcf0
Firing timer event
415 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 427
>> fuzzInit: datum forking for value 428
>> fuzzInit: datum forking for value 428
415 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 428)
        (ReadLSB w32 0 v428_fuzz_symb_428)))
    state 429 with condition (Not (Eq false
         (Eq (w32 428)
             (ReadLSB w32 0 v428_fuzz_symb_428))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-428-8048a0e
Size=2 Low=0 splitIndex=1 high=1
415 [State 0] Switching from state 0 to state 429
Copied 34928 (count=1)
Finalizing TB execution 429
s2e_dummyMainFunction
tcg-llvm-tb-428-8048a0e
415 [State 429] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 428 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
  2  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  3  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  4  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  5  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  6  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  7  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  8  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  9  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
 10  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 11  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 12  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 13  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 14  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 15  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 16  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 17  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 18  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 19  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 20  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 21  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 22  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 23  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 24  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 25  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 26  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 27  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 28  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 29  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 30  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 31  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 32  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 33  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 34  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 35  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 36  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 37  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 38  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 39  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 40  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 41  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 42  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 43  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 44  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 45  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 46  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 47  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 48  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 49  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 50  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 51  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 52  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 53  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 54  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 55  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 56  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 57  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 58  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 59  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 60  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 61  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 62  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 63  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 64  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 65  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 66  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 67  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 68  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 69  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 70  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 71  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 72  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 73  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 74  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 75  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 76  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 77  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 78  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 429] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x54
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 78 instructions, PCs: bfb76fbc bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
415 [State 429] Terminating state 429 with message 'eliminated this false positive, execution path subset of another success'
415 [State 429] Switching from state 429 to state 0
Copied 34928 (count=1)
Deleting state 429 0x0x29e0dcf0
415 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 428
>> fuzzInit: datum forking for value 429
>> fuzzInit: datum forking for value 429
416 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 429)
        (ReadLSB w32 0 v429_fuzz_symb_429)))
    state 430 with condition (Not (Eq false
         (Eq (w32 429)
             (ReadLSB w32 0 v429_fuzz_symb_429))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-429-8048a0e
Size=2 Low=0 splitIndex=1 high=1
416 [State 0] Switching from state 0 to state 430
Copied 34928 (count=1)
Finalizing TB execution 430
s2e_dummyMainFunction
tcg-llvm-tb-429-8048a0e
Firing timer event
416 [State 430] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 429 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
  2  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  3  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  4  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  5  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  6  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  7  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  8  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  9  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
 10  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 11  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 12  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 13  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 14  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 15  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 16  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 17  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 18  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 19  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 20  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 21  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 22  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 23  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 24  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 25  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 26  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 27  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 28  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 29  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 30  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 31  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 32  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 33  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 34  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 35  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 36  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 37  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 38  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 39  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 40  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 41  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 42  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 43  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 44  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 45  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 46  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 47  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 48  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 49  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 50  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 51  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 52  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 53  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 54  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 55  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 56  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 57  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 58  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 59  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 60  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 61  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 62  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 63  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 64  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 65  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 66  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 67  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 68  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 69  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 70  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 71  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 72  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 73  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 74  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 75  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 76  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 77  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 430] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x53
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 77 instructions, PCs: bfb76fbd bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
416 [State 430] Terminating state 430 with message 'eliminated this false positive, execution path subset of another success'
416 [State 430] Switching from state 430 to state 0
Copied 34928 (count=1)
Deleting state 430 0x0x29e0dcf0
416 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 429
>> fuzzInit: datum forking for value 430
>> fuzzInit: datum forking for value 430
416 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 430)
        (ReadLSB w32 0 v430_fuzz_symb_430)))
    state 431 with condition (Not (Eq false
         (Eq (w32 430)
             (ReadLSB w32 0 v430_fuzz_symb_430))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-430-8048a0e
Size=2 Low=0 splitIndex=1 high=1
416 [State 0] Switching from state 0 to state 431
Copied 34928 (count=1)
Finalizing TB execution 431
s2e_dummyMainFunction
tcg-llvm-tb-430-8048a0e
Firing timer event
417 [State 431] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 430 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
  2  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  3  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  4  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  5  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  6  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  7  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  8  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  9  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
 10  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 11  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 12  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 13  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 14  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 15  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 16  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 17  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 18  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 19  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 20  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 21  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 22  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 23  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 24  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 25  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 26  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 27  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 28  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 29  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 30  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 31  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 32  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 33  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 34  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 35  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 36  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 37  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 38  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 39  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 40  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 41  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 42  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 43  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 44  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 45  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 46  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 47  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 48  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 49  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 50  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 51  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 52  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 53  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 54  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 55  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 56  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 57  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 58  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 59  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 60  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 61  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 62  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 63  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 64  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 65  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 66  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 67  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 68  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 69  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 70  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 71  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 72  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 73  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 74  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 75  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 76  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 431] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x52
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 76 instructions, PCs: bfb76fbe bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
417 [State 431] Terminating state 431 with message 'eliminated this false positive, execution path subset of another success'
417 [State 431] Switching from state 431 to state 0
Copied 34928 (count=1)
Deleting state 431 0x0x29e0dcf0
417 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 430
>> fuzzInit: datum forking for value 431
>> fuzzInit: datum forking for value 431
417 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 431)
        (ReadLSB w32 0 v431_fuzz_symb_431)))
    state 432 with condition (Not (Eq false
         (Eq (w32 431)
             (ReadLSB w32 0 v431_fuzz_symb_431))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-431-8048a0e
Size=2 Low=0 splitIndex=1 high=1
417 [State 0] Switching from state 0 to state 432
Copied 34928 (count=1)
Finalizing TB execution 432
s2e_dummyMainFunction
tcg-llvm-tb-431-8048a0e
418 [State 432] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 431 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
  2  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  3  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  4  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  5  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  6  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  7  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  8  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  9  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
 10  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 11  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 12  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 13  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 14  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 15  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 16  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 17  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 18  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 19  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 20  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 21  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 22  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 23  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 24  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 25  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 26  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 27  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 28  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 29  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 30  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 31  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 32  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 33  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 34  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 35  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 36  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 37  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 38  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 39  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 40  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 41  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 42  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 43  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 44  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 45  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 46  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 47  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 48  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 49  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 50  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 51  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 52  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 53  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 54  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 55  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 56  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 57  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 58  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 59  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 60  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 61  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 62  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 63  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 64  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 65  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 66  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 67  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 68  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 69  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 70  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 71  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 72  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 73  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 74  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 75  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 432] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x51
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 75 instructions, PCs: bfb76fbf bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
418 [State 432] Terminating state 432 with message 'eliminated this false positive, execution path subset of another success'
418 [State 432] Switching from state 432 to state 0
Copied 34928 (count=1)
Deleting state 432 0x0x29e0dcf0
418 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 431
>> fuzzInit: datum forking for value 432
>> fuzzInit: datum forking for value 432
418 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 432)
        (ReadLSB w32 0 v432_fuzz_symb_432)))
    state 433 with condition (Not (Eq false
         (Eq (w32 432)
             (ReadLSB w32 0 v432_fuzz_symb_432))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-432-8048a0e
Size=2 Low=0 splitIndex=1 high=1
418 [State 0] Switching from state 0 to state 433
Copied 34928 (count=1)
Finalizing TB execution 433
s2e_dummyMainFunction
tcg-llvm-tb-432-8048a0e
418 [State 433] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 432 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
  2  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  3  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  4  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  5  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  6  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  7  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  8  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  9  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
 10  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 11  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 12  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 13  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 14  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 15  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 16  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 17  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 18  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 19  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 20  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 21  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 22  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 23  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 24  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 25  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 26  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 27  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 28  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 29  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 30  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 31  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 32  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 33  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 34  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 35  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 36  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 37  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 38  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 39  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 40  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 41  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 42  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 43  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 44  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 45  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 46  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 47  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 48  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 49  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 50  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 51  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 52  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 53  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 54  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 55  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 56  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 57  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 58  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 59  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 60  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 61  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 62  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 63  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 64  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 65  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 66  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 67  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 68  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 69  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 70  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 71  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 72  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 73  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 74  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 433] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x50
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 74 instructions, PCs: bfb76fc0 bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
419 [State 433] Terminating state 433 with message 'eliminated this false positive, execution path subset of another success'
419 [State 433] Switching from state 433 to state 0
Copied 34928 (count=1)
Deleting state 433 0x0x29e0dcf0
Firing timer event
419 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 432
>> fuzzInit: datum forking for value 433
>> fuzzInit: datum forking for value 433
419 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 433)
        (ReadLSB w32 0 v433_fuzz_symb_433)))
    state 434 with condition (Not (Eq false
         (Eq (w32 433)
             (ReadLSB w32 0 v433_fuzz_symb_433))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-433-8048a0e
Size=2 Low=0 splitIndex=1 high=1
419 [State 0] Switching from state 0 to state 434
Copied 34928 (count=1)
Finalizing TB execution 434
s2e_dummyMainFunction
tcg-llvm-tb-433-8048a0e
419 [State 434] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 433 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
  2  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  3  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  4  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  5  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  6  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  7  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  8  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  9  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
 10  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 11  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 12  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 13  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 14  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 15  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 16  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 17  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 18  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 19  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 20  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 21  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 22  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 23  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 24  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 25  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 26  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 27  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 28  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 29  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 30  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 31  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 32  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 33  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 34  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 35  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 36  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 37  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 38  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 39  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 40  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 41  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 42  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 43  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 44  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 45  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 46  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 47  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 48  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 49  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 50  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 51  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 52  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 53  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 54  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 55  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 56  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 57  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 58  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 59  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 60  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 61  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 62  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 63  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 64  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 65  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 66  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 67  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 68  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 69  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 70  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 71  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 72  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 73  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 434] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x4f
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 73 instructions, PCs: bfb76fc1 bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
420 [State 434] Terminating state 434 with message 'eliminated this false positive, execution path subset of another success'
420 [State 434] Switching from state 434 to state 0
Copied 34928 (count=1)
Deleting state 434 0x0x29e0dcf0
Firing timer event
420 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 433
>> fuzzInit: datum forking for value 434
>> fuzzInit: datum forking for value 434
420 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 434)
        (ReadLSB w32 0 v434_fuzz_symb_434)))
    state 435 with condition (Not (Eq false
         (Eq (w32 434)
             (ReadLSB w32 0 v434_fuzz_symb_434))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-434-8048a0e
Size=2 Low=0 splitIndex=1 high=1
420 [State 0] Switching from state 0 to state 435
Copied 34928 (count=1)
Finalizing TB execution 435
s2e_dummyMainFunction
tcg-llvm-tb-434-8048a0e
420 [State 435] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 434 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
  2  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  3  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  4  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  5  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  6  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  7  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  8  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  9  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
 10  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 11  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 12  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 13  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 14  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 15  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 16  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 17  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 18  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 19  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 20  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 21  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 22  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 23  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 24  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 25  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 26  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 27  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 28  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 29  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 30  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 31  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 32  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 33  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 34  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 35  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 36  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 37  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 38  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 39  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 40  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 41  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 42  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 43  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 44  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 45  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 46  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 47  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 48  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 49  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 50  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 51  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 52  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 53  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 54  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 55  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 56  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 57  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 58  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 59  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 60  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 61  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 62  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 63  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 64  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 65  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 66  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 67  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 68  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 69  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 70  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 71  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 72  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 435] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x4e
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 72 instructions, PCs: bfb76fc2 bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
420 [State 435] Terminating state 435 with message 'eliminated this false positive, execution path subset of another success'
420 [State 435] Switching from state 435 to state 0
Copied 34928 (count=1)
Deleting state 435 0x0x29e0dcf0
421 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 434
>> fuzzInit: datum forking for value 435
>> fuzzInit: datum forking for value 435
421 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 435)
        (ReadLSB w32 0 v435_fuzz_symb_435)))
    state 436 with condition (Not (Eq false
         (Eq (w32 435)
             (ReadLSB w32 0 v435_fuzz_symb_435))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-435-8048a0e
Size=2 Low=0 splitIndex=1 high=1
421 [State 0] Switching from state 0 to state 436
Copied 34928 (count=1)
Finalizing TB execution 436
s2e_dummyMainFunction
tcg-llvm-tb-435-8048a0e
Firing timer event
421 [State 436] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 435 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
  2  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  3  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  4  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  5  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  6  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  7  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  8  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  9  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
 10  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 11  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 12  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 13  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 14  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 15  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 16  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 17  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 18  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 19  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 20  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 21  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 22  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 23  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 24  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 25  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 26  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 27  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 28  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 29  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 30  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 31  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 32  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 33  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 34  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 35  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 36  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 37  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 38  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 39  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 40  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 41  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 42  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 43  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 44  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 45  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 46  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 47  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 48  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 49  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 50  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 51  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 52  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 53  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 54  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 55  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 56  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 57  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 58  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 59  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 60  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 61  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 62  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 63  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 64  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 65  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 66  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 67  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 68  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 69  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 70  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 71  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 436] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x4d
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 71 instructions, PCs: bfb76fc3 bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
421 [State 436] Terminating state 436 with message 'eliminated this false positive, execution path subset of another success'
421 [State 436] Switching from state 436 to state 0
Copied 34928 (count=1)
Deleting state 436 0x0x29e0dcf0
422 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 435
>> fuzzInit: datum forking for value 436
>> fuzzInit: datum forking for value 436
422 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 436)
        (ReadLSB w32 0 v436_fuzz_symb_436)))
    state 437 with condition (Not (Eq false
         (Eq (w32 436)
             (ReadLSB w32 0 v436_fuzz_symb_436))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-436-8048a0e
Size=2 Low=0 splitIndex=1 high=1
422 [State 0] Switching from state 0 to state 437
Copied 34928 (count=1)
Finalizing TB execution 437
s2e_dummyMainFunction
tcg-llvm-tb-436-8048a0e
422 [State 437] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 436 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
  2  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  3  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  4  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  5  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  6  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  7  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  8  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  9  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
 10  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 11  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 12  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 13  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 14  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 15  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 16  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 17  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 18  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 19  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 20  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 21  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 22  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 23  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 24  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 25  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 26  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 27  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 28  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 29  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 30  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 31  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 32  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 33  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 34  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 35  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 36  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 37  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 38  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 39  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 40  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 41  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 42  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 43  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 44  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 45  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 46  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 47  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 48  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 49  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 50  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 51  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 52  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 53  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 54  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 55  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 56  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 57  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 58  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 59  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 60  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 61  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 62  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 63  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 64  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 65  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 66  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 67  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 68  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 69  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 70  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 437] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x4c
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 70 instructions, PCs: bfb76fc4 bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
422 [State 437] Terminating state 437 with message 'eliminated this false positive, execution path subset of another success'
422 [State 437] Switching from state 437 to state 0
Copied 34928 (count=1)
Deleting state 437 0x0x29e0dcf0
422 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 436
>> fuzzInit: datum forking for value 437
>> fuzzInit: datum forking for value 437
423 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 437)
        (ReadLSB w32 0 v437_fuzz_symb_437)))
    state 438 with condition (Not (Eq false
         (Eq (w32 437)
             (ReadLSB w32 0 v437_fuzz_symb_437))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-437-8048a0e
Size=2 Low=0 splitIndex=1 high=1
423 [State 0] Switching from state 0 to state 438
Copied 34928 (count=1)
Finalizing TB execution 438
s2e_dummyMainFunction
tcg-llvm-tb-437-8048a0e
423 [State 438] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 437 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
  2  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  3  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  4  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  5  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  6  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  7  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  8  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  9  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
 10  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 11  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 12  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 13  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 14  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 15  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 16  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 17  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 18  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 19  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 20  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 21  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 22  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 23  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 24  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 25  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 26  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 27  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 28  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 29  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 30  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 31  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 32  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 33  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 34  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 35  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 36  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 37  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 38  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 39  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 40  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 41  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 42  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 43  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 44  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 45  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 46  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 47  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 48  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 49  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 50  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 51  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 52  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 53  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 54  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 55  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 56  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 57  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 58  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 59  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 60  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 61  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 62  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 63  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 64  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 65  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 66  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 67  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 68  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 69  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 438] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x4b
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 69 instructions, PCs: bfb76fc5 bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
423 [State 438] Terminating state 438 with message 'eliminated this false positive, execution path subset of another success'
423 [State 438] Switching from state 438 to state 0
Copied 34928 (count=1)
Deleting state 438 0x0x29e0dcf0
Firing timer event
423 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 437
>> fuzzInit: datum forking for value 438
>> fuzzInit: datum forking for value 438
423 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 438)
        (ReadLSB w32 0 v438_fuzz_symb_438)))
    state 439 with condition (Not (Eq false
         (Eq (w32 438)
             (ReadLSB w32 0 v438_fuzz_symb_438))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-438-8048a0e
Size=2 Low=0 splitIndex=1 high=1
423 [State 0] Switching from state 0 to state 439
Copied 34928 (count=1)
Finalizing TB execution 439
s2e_dummyMainFunction
tcg-llvm-tb-438-8048a0e
424 [State 439] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 438 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
  2  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  3  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  4  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  5  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  6  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  7  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  8  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  9  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
 10  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 11  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 12  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 13  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 14  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 15  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 16  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 17  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 18  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 19  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 20  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 21  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 22  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 23  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 24  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 25  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 26  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 27  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 28  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 29  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 30  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 31  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 32  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 33  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 34  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 35  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 36  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 37  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 38  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 39  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 40  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 41  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 42  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 43  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 44  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 45  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 46  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 47  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 48  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 49  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 50  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 51  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 52  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 53  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 54  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 55  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 56  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 57  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 58  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 59  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 60  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 61  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 62  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 63  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 64  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 65  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 66  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 67  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 68  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 439] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x4a
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 68 instructions, PCs: bfb76fc6 bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
424 [State 439] Terminating state 439 with message 'eliminated this false positive, execution path subset of another success'
424 [State 439] Switching from state 439 to state 0
Copied 34928 (count=1)
Deleting state 439 0x0x29e0dcf0
424 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 438
>> fuzzInit: datum forking for value 439
>> fuzzInit: datum forking for value 439
424 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 439)
        (ReadLSB w32 0 v439_fuzz_symb_439)))
    state 440 with condition (Not (Eq false
         (Eq (w32 439)
             (ReadLSB w32 0 v439_fuzz_symb_439))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-439-8048a0e
Size=2 Low=0 splitIndex=1 high=1
424 [State 0] Switching from state 0 to state 440
Copied 34928 (count=1)
Finalizing TB execution 440
s2e_dummyMainFunction
tcg-llvm-tb-439-8048a0e
Firing timer event
424 [State 440] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 439 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
  2  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  3  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  4  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  5  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  6  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  7  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  8  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  9  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
 10  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 11  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 12  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 13  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 14  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 15  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 16  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 17  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 18  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 19  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 20  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 21  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 22  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 23  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 24  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 25  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 26  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 27  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 28  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 29  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 30  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 31  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 32  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 33  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 34  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 35  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 36  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 37  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 38  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 39  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 40  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 41  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 42  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 43  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 44  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 45  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 46  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 47  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 48  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 49  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 50  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 51  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 52  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 53  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 54  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 55  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 56  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 57  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 58  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 59  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 60  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 61  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 62  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 63  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 64  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 65  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 66  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 67  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 440] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x49
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 67 instructions, PCs: bfb76fc7 bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
425 [State 440] Terminating state 440 with message 'eliminated this false positive, execution path subset of another success'
425 [State 440] Switching from state 440 to state 0
Copied 34928 (count=1)
Deleting state 440 0x0x29e0dcf0
425 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 439
>> fuzzInit: datum forking for value 440
>> fuzzInit: datum forking for value 440
425 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 440)
        (ReadLSB w32 0 v440_fuzz_symb_440)))
    state 441 with condition (Not (Eq false
         (Eq (w32 440)
             (ReadLSB w32 0 v440_fuzz_symb_440))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-440-8048a0e
Size=2 Low=0 splitIndex=1 high=1
425 [State 0] Switching from state 0 to state 441
Copied 34928 (count=1)
Finalizing TB execution 441
s2e_dummyMainFunction
tcg-llvm-tb-440-8048a0e
425 [State 441] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 440 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
  2  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  3  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  4  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  5  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  6  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  7  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  8  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  9  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
 10  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 11  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 12  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 13  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 14  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 15  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 16  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 17  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 18  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 19  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 20  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 21  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 22  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 23  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 24  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 25  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 26  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 27  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 28  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 29  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 30  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 31  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 32  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 33  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 34  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 35  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 36  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 37  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 38  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 39  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 40  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 41  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 42  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 43  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 44  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 45  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 46  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 47  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 48  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 49  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 50  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 51  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 52  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 53  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 54  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 55  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 56  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 57  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 58  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 59  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 60  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 61  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 62  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 63  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 64  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 65  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 66  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 441] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x48
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 66 instructions, PCs: bfb76fc8 bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
425 [State 441] Terminating state 441 with message 'eliminated this false positive, execution path subset of another success'
425 [State 441] Switching from state 441 to state 0
Copied 34928 (count=1)
Deleting state 441 0x0x29e0dcf0
426 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 440
>> fuzzInit: datum forking for value 441
>> fuzzInit: datum forking for value 441
426 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 441)
        (ReadLSB w32 0 v441_fuzz_symb_441)))
    state 442 with condition (Not (Eq false
         (Eq (w32 441)
             (ReadLSB w32 0 v441_fuzz_symb_441))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-441-8048a0e
Size=2 Low=0 splitIndex=1 high=1
426 [State 0] Switching from state 0 to state 442
Copied 34928 (count=1)
Finalizing TB execution 442
s2e_dummyMainFunction
tcg-llvm-tb-441-8048a0e
426 [State 442] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 441 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
  2  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  3  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  4  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  5  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  6  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  7  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  8  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  9  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
 10  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 11  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 12  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 13  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 14  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 15  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 16  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 17  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 18  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 19  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 20  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 21  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 22  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 23  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 24  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 25  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 26  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 27  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 28  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 29  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 30  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 31  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 32  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 33  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 34  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 35  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 36  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 37  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 38  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 39  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 40  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 41  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 42  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 43  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 44  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 45  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 46  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 47  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 48  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 49  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 50  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 51  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 52  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 53  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 54  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 55  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 56  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 57  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 58  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 59  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 60  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 61  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 62  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 63  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 64  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 65  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 442] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x47
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 65 instructions, PCs: bfb76fc9 bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
426 [State 442] Terminating state 442 with message 'eliminated this false positive, execution path subset of another success'
426 [State 442] Switching from state 442 to state 0
Copied 34928 (count=1)
Deleting state 442 0x0x29e0dcf0
Firing timer event
426 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 441
>> fuzzInit: datum forking for value 442
>> fuzzInit: datum forking for value 442
427 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 442)
        (ReadLSB w32 0 v442_fuzz_symb_442)))
    state 443 with condition (Not (Eq false
         (Eq (w32 442)
             (ReadLSB w32 0 v442_fuzz_symb_442))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-442-8048a0e
Size=2 Low=0 splitIndex=1 high=1
427 [State 0] Switching from state 0 to state 443
Copied 34928 (count=1)
Finalizing TB execution 443
s2e_dummyMainFunction
tcg-llvm-tb-442-8048a0e
427 [State 443] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 442 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
  2  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  3  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  4  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  5  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  6  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  7  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  8  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  9  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
 10  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 11  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 12  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 13  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 14  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 15  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 16  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 17  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 18  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 19  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 20  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 21  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 22  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 23  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 24  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 25  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 26  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 27  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 28  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 29  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 30  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 31  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 32  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 33  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 34  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 35  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 36  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 37  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 38  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 39  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 40  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 41  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 42  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 43  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 44  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 45  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 46  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 47  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 48  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 49  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 50  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 51  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 52  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 53  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 54  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 55  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 56  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 57  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 58  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 59  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 60  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 61  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 62  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 63  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 64  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 443] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x46
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 64 instructions, PCs: bfb76fca bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
427 [State 443] Terminating state 443 with message 'eliminated this false positive, execution path subset of another success'
427 [State 443] Switching from state 443 to state 0
Copied 34928 (count=1)
Deleting state 443 0x0x29e0dcf0
427 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 442
>> fuzzInit: datum forking for value 443
>> fuzzInit: datum forking for value 443
427 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 443)
        (ReadLSB w32 0 v443_fuzz_symb_443)))
    state 444 with condition (Not (Eq false
         (Eq (w32 443)
             (ReadLSB w32 0 v443_fuzz_symb_443))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-443-8048a0e
Size=2 Low=0 splitIndex=1 high=1
428 [State 0] Switching from state 0 to state 444
Copied 34928 (count=1)
Finalizing TB execution 444
s2e_dummyMainFunction
tcg-llvm-tb-443-8048a0e
Firing timer event
428 [State 444] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 443 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
  2  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  3  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  4  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  5  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  6  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  7  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  8  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  9  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
 10  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 11  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 12  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 13  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 14  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 15  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 16  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 17  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 18  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 19  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 20  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 21  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 22  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 23  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 24  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 25  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 26  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 27  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 28  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 29  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 30  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 31  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 32  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 33  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 34  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 35  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 36  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 37  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 38  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 39  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 40  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 41  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 42  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 43  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 44  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 45  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 46  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 47  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 48  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 49  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 50  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 51  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 52  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 53  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 54  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 55  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 56  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 57  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 58  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 59  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 60  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 61  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 62  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 63  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 444] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x45
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 63 instructions, PCs: bfb76fcb bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
428 [State 444] Terminating state 444 with message 'eliminated this false positive, execution path subset of another success'
428 [State 444] Switching from state 444 to state 0
Copied 34928 (count=1)
Deleting state 444 0x0x29e0dcf0
428 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 443
>> fuzzInit: datum forking for value 444
>> fuzzInit: datum forking for value 444
428 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 444)
        (ReadLSB w32 0 v444_fuzz_symb_444)))
    state 445 with condition (Not (Eq false
         (Eq (w32 444)
             (ReadLSB w32 0 v444_fuzz_symb_444))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-444-8048a0e
Size=2 Low=0 splitIndex=1 high=1
428 [State 0] Switching from state 0 to state 445
Copied 34928 (count=1)
Finalizing TB execution 445
s2e_dummyMainFunction
tcg-llvm-tb-444-8048a0e
429 [State 445] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 444 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
  2  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  3  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  4  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  5  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  6  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  7  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  8  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  9  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
 10  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 11  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 12  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 13  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 14  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 15  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 16  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 17  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 18  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 19  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 20  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 21  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 22  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 23  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 24  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 25  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 26  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 27  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 28  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 29  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 30  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 31  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 32  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 33  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 34  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 35  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 36  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 37  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 38  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 39  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 40  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 41  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 42  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 43  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 44  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 45  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 46  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 47  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 48  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 49  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 50  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 51  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 52  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 53  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 54  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 55  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 56  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 57  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 58  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 59  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 60  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 61  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 62  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 445] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x44
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 62 instructions, PCs: bfb76fcc bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
429 [State 445] Terminating state 445 with message 'eliminated this false positive, execution path subset of another success'
429 [State 445] Switching from state 445 to state 0
Copied 34928 (count=1)
Deleting state 445 0x0x29e0dcf0
429 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 444
>> fuzzInit: datum forking for value 445
>> fuzzInit: datum forking for value 445
429 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 445)
        (ReadLSB w32 0 v445_fuzz_symb_445)))
    state 446 with condition (Not (Eq false
         (Eq (w32 445)
             (ReadLSB w32 0 v445_fuzz_symb_445))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-445-8048a0e
Size=2 Low=0 splitIndex=1 high=1
429 [State 0] Switching from state 0 to state 446
Copied 34928 (count=1)
Finalizing TB execution 446
s2e_dummyMainFunction
tcg-llvm-tb-445-8048a0e
429 [State 446] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 445 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
  2  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  3  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  4  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  5  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  6  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  7  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  8  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  9  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
 10  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 11  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 12  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 13  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 14  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 15  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 16  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 17  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 18  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 19  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 20  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 21  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 22  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 23  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 24  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 25  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 26  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 27  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 28  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 29  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 30  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 31  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 32  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 33  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 34  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 35  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 36  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 37  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 38  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 39  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 40  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 41  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 42  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 43  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 44  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 45  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 46  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 47  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 48  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 49  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 50  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 51  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 52  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 53  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 54  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 55  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 56  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 57  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 58  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 59  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 60  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 61  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 446] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x43
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 61 instructions, PCs: bfb76fcd bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
430 [State 446] Terminating state 446 with message 'eliminated this false positive, execution path subset of another success'
430 [State 446] Switching from state 446 to state 0
Copied 34928 (count=1)
Deleting state 446 0x0x29e0dcf0
Firing timer event
430 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 445
>> fuzzInit: datum forking for value 446
>> fuzzInit: datum forking for value 446
430 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 446)
        (ReadLSB w32 0 v446_fuzz_symb_446)))
    state 447 with condition (Not (Eq false
         (Eq (w32 446)
             (ReadLSB w32 0 v446_fuzz_symb_446))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-446-8048a0e
Size=2 Low=0 splitIndex=1 high=1
430 [State 0] Switching from state 0 to state 447
Copied 34928 (count=1)
Finalizing TB execution 447
s2e_dummyMainFunction
tcg-llvm-tb-446-8048a0e
430 [State 447] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 446 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
  2  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  3  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  4  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  5  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  6  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  7  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  8  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  9  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
 10  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 11  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 12  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 13  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 14  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 15  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 16  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 17  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 18  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 19  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 20  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 21  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 22  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 23  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 24  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 25  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 26  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 27  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 28  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 29  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 30  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 31  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 32  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 33  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 34  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 35  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 36  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 37  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 38  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 39  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 40  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 41  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 42  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 43  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 44  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 45  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 46  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 47  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 48  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 49  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 50  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 51  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 52  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 53  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 54  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 55  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 56  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 57  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 58  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 59  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 60  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 447] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x42
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 60 instructions, PCs: bfb76fce bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
430 [State 447] Terminating state 447 with message 'eliminated this false positive, execution path subset of another success'
430 [State 447] Switching from state 447 to state 0
Copied 34928 (count=1)
Deleting state 447 0x0x29e0dcf0
431 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 446
>> fuzzInit: datum forking for value 447
>> fuzzInit: datum forking for value 447
431 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 447)
        (ReadLSB w32 0 v447_fuzz_symb_447)))
    state 448 with condition (Not (Eq false
         (Eq (w32 447)
             (ReadLSB w32 0 v447_fuzz_symb_447))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-447-8048a0e
Size=2 Low=0 splitIndex=1 high=1
431 [State 0] Switching from state 0 to state 448
Copied 34928 (count=1)
Finalizing TB execution 448
s2e_dummyMainFunction
tcg-llvm-tb-447-8048a0e
Firing timer event
431 [State 448] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 447 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
  2  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  3  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  4  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  5  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  6  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  7  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  8  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  9  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
 10  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 11  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 12  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 13  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 14  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 15  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 16  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 17  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 18  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 19  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 20  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 21  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 22  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 23  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 24  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 25  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 26  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 27  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 28  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 29  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 30  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 31  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 32  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 33  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 34  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 35  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 36  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 37  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 38  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 39  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 40  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 41  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 42  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 43  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 44  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 45  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 46  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 47  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 48  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 49  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 50  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 51  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 52  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 53  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 54  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 55  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 56  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 57  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 58  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 59  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 448] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x41
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 59 instructions, PCs: bfb76fcf bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
431 [State 448] Terminating state 448 with message 'eliminated this false positive, execution path subset of another success'
431 [State 448] Switching from state 448 to state 0
Copied 34928 (count=1)
Deleting state 448 0x0x29e0dcf0
431 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 447
>> fuzzInit: datum forking for value 448
>> fuzzInit: datum forking for value 448
432 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 448)
        (ReadLSB w32 0 v448_fuzz_symb_448)))
    state 449 with condition (Not (Eq false
         (Eq (w32 448)
             (ReadLSB w32 0 v448_fuzz_symb_448))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-448-8048a0e
Size=2 Low=0 splitIndex=1 high=1
432 [State 0] Switching from state 0 to state 449
Copied 34928 (count=1)
Finalizing TB execution 449
s2e_dummyMainFunction
tcg-llvm-tb-448-8048a0e
432 [State 449] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 448 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
  2  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  3  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  4  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  5  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  6  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  7  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  8  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  9  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
 10  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 11  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 12  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 13  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 14  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 15  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 16  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 17  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 18  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 19  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 20  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 21  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 22  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 23  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 24  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 25  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 26  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 27  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 28  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 29  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 30  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 31  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 32  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 33  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 34  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 35  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 36  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 37  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 38  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 39  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 40  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 41  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 42  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 43  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 44  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 45  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 46  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 47  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 48  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 49  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 50  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 51  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 52  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 53  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 54  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 55  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 56  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 57  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 58  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 449] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x40
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 58 instructions, PCs: bfb76fd0 bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
432 [State 449] Terminating state 449 with message 'eliminated this false positive, execution path subset of another success'
432 [State 449] Switching from state 449 to state 0
Copied 34928 (count=1)
Deleting state 449 0x0x29e0dcf0
432 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 448
>> fuzzInit: datum forking for value 449
>> fuzzInit: datum forking for value 449
432 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 449)
        (ReadLSB w32 0 v449_fuzz_symb_449)))
    state 450 with condition (Not (Eq false
         (Eq (w32 449)
             (ReadLSB w32 0 v449_fuzz_symb_449))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-449-8048a0e
Size=2 Low=0 splitIndex=1 high=1
432 [State 0] Switching from state 0 to state 450
Copied 34928 (count=1)
Finalizing TB execution 450
s2e_dummyMainFunction
tcg-llvm-tb-449-8048a0e
433 [State 450] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 449 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
  2  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  3  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  4  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  5  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  6  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  7  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  8  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  9  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
 10  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 11  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 12  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 13  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 14  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 15  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 16  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 17  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 18  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 19  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 20  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 21  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 22  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 23  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 24  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 25  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 26  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 27  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 28  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 29  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 30  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 31  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 32  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 33  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 34  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 35  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 36  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 37  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 38  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 39  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 40  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 41  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 42  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 43  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 44  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 45  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 46  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 47  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 48  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 49  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 50  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 51  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 52  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 53  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 54  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 55  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 56  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 57  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 450] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x3f
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 57 instructions, PCs: bfb76fd1 bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
433 [State 450] Terminating state 450 with message 'eliminated this false positive, execution path subset of another success'
433 [State 450] Switching from state 450 to state 0
Copied 34928 (count=1)
Deleting state 450 0x0x2a4569e0
433 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 449
Firing timer event
>> fuzzInit: datum forking for value 450
>> fuzzInit: datum forking for value 450
433 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 450)
        (ReadLSB w32 0 v450_fuzz_symb_450)))
    state 451 with condition (Not (Eq false
         (Eq (w32 450)
             (ReadLSB w32 0 v450_fuzz_symb_450))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-450-8048a0e
Size=2 Low=0 splitIndex=1 high=1
433 [State 0] Switching from state 0 to state 451
Copied 34928 (count=1)
Finalizing TB execution 451
s2e_dummyMainFunction
tcg-llvm-tb-450-8048a0e
433 [State 451] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 450 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
  2  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  3  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  4  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  5  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  6  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  7  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  8  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  9  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
 10  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 11  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 12  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 13  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 14  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 15  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 16  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 17  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 18  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 19  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 20  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 21  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 22  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 23  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 24  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 25  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 26  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 27  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 28  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 29  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 30  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 31  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 32  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 33  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 34  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 35  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 36  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 37  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 38  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 39  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 40  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 41  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 42  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 43  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 44  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 45  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 46  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 47  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 48  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 49  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 50  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 51  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 52  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 53  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 54  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 55  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 56  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 451] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x3e
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 56 instructions, PCs: bfb76fd2 bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
434 [State 451] Terminating state 451 with message 'eliminated this false positive, execution path subset of another success'
434 [State 451] Switching from state 451 to state 0
Copied 34928 (count=1)
Deleting state 451 0x0x2a4569e0
434 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 450
>> fuzzInit: datum forking for value 451
>> fuzzInit: datum forking for value 451
434 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 451)
        (ReadLSB w32 0 v451_fuzz_symb_451)))
    state 452 with condition (Not (Eq false
         (Eq (w32 451)
             (ReadLSB w32 0 v451_fuzz_symb_451))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-451-8048a0e
Size=2 Low=0 splitIndex=1 high=1
434 [State 0] Switching from state 0 to state 452
Copied 34928 (count=1)
Finalizing TB execution 452
s2e_dummyMainFunction
tcg-llvm-tb-451-8048a0e
Firing timer event
434 [State 452] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 451 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
  2  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  3  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  4  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  5  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  6  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  7  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  8  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  9  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
 10  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 11  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 12  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 13  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 14  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 15  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 16  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 17  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 18  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 19  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 20  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 21  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 22  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 23  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 24  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 25  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 26  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 27  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 28  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 29  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 30  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 31  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 32  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 33  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 34  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 35  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 36  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 37  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 38  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 39  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 40  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 41  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 42  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 43  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 44  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 45  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 46  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 47  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 48  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 49  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 50  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 51  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 52  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 53  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 54  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 55  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 452] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x3d
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 55 instructions, PCs: bfb76fd3 bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
434 [State 452] Terminating state 452 with message 'eliminated this false positive, execution path subset of another success'
434 [State 452] Switching from state 452 to state 0
Copied 34928 (count=1)
Deleting state 452 0x0x2a4569e0
435 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 451
>> fuzzInit: datum forking for value 452
>> fuzzInit: datum forking for value 452
435 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 452)
        (ReadLSB w32 0 v452_fuzz_symb_452)))
    state 453 with condition (Not (Eq false
         (Eq (w32 452)
             (ReadLSB w32 0 v452_fuzz_symb_452))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-452-8048a0e
Size=2 Low=0 splitIndex=1 high=1
435 [State 0] Switching from state 0 to state 453
Copied 34928 (count=1)
Finalizing TB execution 453
s2e_dummyMainFunction
tcg-llvm-tb-452-8048a0e
435 [State 453] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 452 not yet applied), shell_len: 1024, eip: 0xbfb77010

Firing timer event
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
  2  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  3  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  4  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  5  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  6  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  7  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  8  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  9  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
 10  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 11  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 12  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 13  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 14  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 15  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 16  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 17  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 18  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 19  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 20  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 21  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 22  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 23  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 24  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 25  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 26  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 27  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 28  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 29  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 30  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 31  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 32  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 33  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 34  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 35  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 36  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 37  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 38  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 39  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 40  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 41  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 42  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 43  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 44  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 45  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 46  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 47  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 48  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 49  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 50  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 51  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 52  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 53  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 54  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 453] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x3c
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 54 instructions, PCs: bfb76fd4 bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
435 [State 453] Terminating state 453 with message 'eliminated this false positive, execution path subset of another success'
435 [State 453] Switching from state 453 to state 0
Copied 34928 (count=1)
Deleting state 453 0x0x2a4569e0
435 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 452
>> fuzzInit: datum forking for value 453
>> fuzzInit: datum forking for value 453
436 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 453)
        (ReadLSB w32 0 v453_fuzz_symb_453)))
    state 454 with condition (Not (Eq false
         (Eq (w32 453)
             (ReadLSB w32 0 v453_fuzz_symb_453))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-453-8048a0e
Size=2 Low=0 splitIndex=1 high=1
436 [State 0] Switching from state 0 to state 454
Copied 34928 (count=1)
Finalizing TB execution 454
s2e_dummyMainFunction
tcg-llvm-tb-453-8048a0e
436 [State 454] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 453 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
  2  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  3  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  4  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  5  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  6  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  7  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  8  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  9  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
 10  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 11  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 12  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 13  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 14  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 15  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 16  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 17  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 18  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 19  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 20  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 21  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 22  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 23  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 24  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 25  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 26  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 27  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 28  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 29  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 30  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 31  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 32  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 33  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 34  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 35  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 36  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 37  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 38  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 39  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 40  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 41  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 42  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 43  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 44  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
Firing timer event
 45  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 46  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 47  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 48  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 49  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 50  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 51  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 52  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 53  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 454] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x3b
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 53 instructions, PCs: bfb76fd5 bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
436 [State 454] Terminating state 454 with message 'eliminated this false positive, execution path subset of another success'
436 [State 454] Switching from state 454 to state 0
Copied 34928 (count=1)
Deleting state 454 0x0x2a681d90
436 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 453
>> fuzzInit: datum forking for value 454
>> fuzzInit: datum forking for value 454
437 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 454)
        (ReadLSB w32 0 v454_fuzz_symb_454)))
    state 455 with condition (Not (Eq false
         (Eq (w32 454)
             (ReadLSB w32 0 v454_fuzz_symb_454))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-454-8048a0e
Size=2 Low=0 splitIndex=1 high=1
437 [State 0] Switching from state 0 to state 455
Copied 34928 (count=1)
Finalizing TB execution 455
s2e_dummyMainFunction
tcg-llvm-tb-454-8048a0e
437 [State 455] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 454 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
  2  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  3  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  4  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  5  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  6  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  7  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  8  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  9  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
 10  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 11  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 12  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 13  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 14  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 15  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 16  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 17  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 18  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 19  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 20  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 21  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 22  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 23  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 24  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 25  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 26  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 27  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 28  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 29  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 30  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 31  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 32  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 33  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 34  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 35  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 36  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 37  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 38  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 39  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 40  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 41  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 42  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 43  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 44  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 45  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 46  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 47  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 48  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 49  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 50  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 51  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 52  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 455] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x3a
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 52 instructions, PCs: bfb76fd6 bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
437 [State 455] Terminating state 455 with message 'eliminated this false positive, execution path subset of another success'
437 [State 455] Switching from state 455 to state 0
Copied 34928 (count=1)
Deleting state 455 0x0x2a681d90
Firing timer event
437 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 454
>> fuzzInit: datum forking for value 455
>> fuzzInit: datum forking for value 455
437 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 455)
        (ReadLSB w32 0 v455_fuzz_symb_455)))
    state 456 with condition (Not (Eq false
         (Eq (w32 455)
             (ReadLSB w32 0 v455_fuzz_symb_455))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-455-8048a0e
Size=2 Low=0 splitIndex=1 high=1
437 [State 0] Switching from state 0 to state 456
Copied 34928 (count=1)
Finalizing TB execution 456
s2e_dummyMainFunction
tcg-llvm-tb-455-8048a0e
438 [State 456] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 455 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
  2  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  3  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  4  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  5  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  6  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  7  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  8  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  9  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
 10  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 11  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 12  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 13  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 14  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 15  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 16  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 17  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 18  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 19  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 20  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 21  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 22  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 23  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 24  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 25  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 26  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 27  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 28  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 29  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 30  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 31  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 32  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 33  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 34  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 35  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 36  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 37  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 38  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 39  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 40  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 41  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 42  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 43  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 44  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 45  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 46  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 47  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 48  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 49  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 50  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 51  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 456] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x39
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 51 instructions, PCs: bfb76fd7 bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
438 [State 456] Terminating state 456 with message 'eliminated this false positive, execution path subset of another success'
438 [State 456] Switching from state 456 to state 0
Copied 34928 (count=1)
Deleting state 456 0x0x2a681d90
438 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 455
>> fuzzInit: datum forking for value 456
>> fuzzInit: datum forking for value 456
438 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 456)
        (ReadLSB w32 0 v456_fuzz_symb_456)))
    state 457 with condition (Not (Eq false
         (Eq (w32 456)
             (ReadLSB w32 0 v456_fuzz_symb_456))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-456-8048a0e
Size=2 Low=0 splitIndex=1 high=1
438 [State 0] Switching from state 0 to state 457
Copied 34928 (count=1)
Finalizing TB execution 457
s2e_dummyMainFunction
tcg-llvm-tb-456-8048a0e
Firing timer event
438 [State 457] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 456 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
  2  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  3  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  4  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  5  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  6  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  7  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  8  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  9  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
 10  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 11  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 12  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 13  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 14  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 15  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 16  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 17  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 18  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 19  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 20  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 21  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 22  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 23  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 24  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 25  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 26  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 27  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 28  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 29  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 30  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 31  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 32  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 33  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 34  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 35  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 36  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 37  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 38  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 39  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 40  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 41  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 42  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 43  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 44  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 45  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 46  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 47  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 48  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 49  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 50  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 457] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x38
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 50 instructions, PCs: bfb76fd8 bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
439 [State 457] Terminating state 457 with message 'eliminated this false positive, execution path subset of another success'
439 [State 457] Switching from state 457 to state 0
Copied 34928 (count=1)
Deleting state 457 0x0x2a681d90
439 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 456
>> fuzzInit: datum forking for value 457
>> fuzzInit: datum forking for value 457
439 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 457)
        (ReadLSB w32 0 v457_fuzz_symb_457)))
    state 458 with condition (Not (Eq false
         (Eq (w32 457)
             (ReadLSB w32 0 v457_fuzz_symb_457))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-457-8048a0e
Size=2 Low=0 splitIndex=1 high=1
439 [State 0] Switching from state 0 to state 458
Copied 34928 (count=1)
Finalizing TB execution 458
s2e_dummyMainFunction
tcg-llvm-tb-457-8048a0e
439 [State 458] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 457 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
  2  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  3  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  4  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  5  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  6  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  7  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  8  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  9  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
 10  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 11  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 12  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 13  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 14  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 15  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 16  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 17  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 18  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 19  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 20  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 21  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 22  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 23  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 24  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 25  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 26  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 27  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 28  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 29  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 30  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 31  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 32  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 33  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 34  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 35  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 36  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 37  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 38  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 39  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 40  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 41  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 42  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 43  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 44  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 45  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 46  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 47  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 48  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 49  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 458] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x37
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 49 instructions, PCs: bfb76fd9 bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
439 [State 458] Terminating state 458 with message 'eliminated this false positive, execution path subset of another success'
439 [State 458] Switching from state 458 to state 0
Copied 34928 (count=1)
Deleting state 458 0x0x2a681d90
440 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 457
>> fuzzInit: datum forking for value 458
>> fuzzInit: datum forking for value 458
440 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 458)
        (ReadLSB w32 0 v458_fuzz_symb_458)))
    state 459 with condition (Not (Eq false
         (Eq (w32 458)
             (ReadLSB w32 0 v458_fuzz_symb_458))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-458-8048a0e
Size=2 Low=0 splitIndex=1 high=1
440 [State 0] Switching from state 0 to state 459
Copied 34928 (count=1)
Finalizing TB execution 459
s2e_dummyMainFunction
tcg-llvm-tb-458-8048a0e
440 [State 459] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 458 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
  2  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  3  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  4  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  5  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  6  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  7  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  8  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  9  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
 10  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 11  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 12  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 13  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 14  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 15  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 16  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 17  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 18  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 19  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 20  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 21  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 22  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 23  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 24  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 25  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 26  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 27  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 28  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 29  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 30  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 31  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 32  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 33  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 34  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 35  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 36  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 37  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 38  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 39  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 40  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 41  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 42  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 43  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 44  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 45  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 46  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 47  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 48  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 459] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x36
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 48 instructions, PCs: bfb76fda bfb76fdb bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
440 [State 459] Terminating state 459 with message 'eliminated this false positive, execution path subset of another success'
440 [State 459] Switching from state 459 to state 0
Copied 34928 (count=1)
Deleting state 459 0x0x2a81a850
Firing timer event
440 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 458
>> fuzzInit: datum forking for value 459
>> fuzzInit: datum forking for value 459
441 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 459)
        (ReadLSB w32 0 v459_fuzz_symb_459)))
    state 460 with condition (Not (Eq false
         (Eq (w32 459)
             (ReadLSB w32 0 v459_fuzz_symb_459))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-459-8048a0e
Size=2 Low=0 splitIndex=1 high=1
441 [State 0] Switching from state 0 to state 460
Copied 34928 (count=1)
Finalizing TB execution 460
s2e_dummyMainFunction
tcg-llvm-tb-459-8048a0e
441 [State 460] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 459 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
  2  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  3  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  4  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  5  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  6  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  7  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  8  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  9  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
 10  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 11  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 12  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 13  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 14  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 15  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 16  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 17  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 18  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 19  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 20  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 21  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 22  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 23  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 24  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 25  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 26  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 27  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 28  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 29  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 30  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 31  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 32  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 33  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 34  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 35  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 36  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 37  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 38  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 39  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 40  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 41  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 42  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 43  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 44  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 45  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 46  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 47  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 460] CPU dump
EAX=0x7207ee00
EBX=0x0
ECX=0x8
EDX=0x0
ESI=0x7d
EDI=0x0
EBP=0xc13957a0
ESP=0xc6175f30
EIP=0xc104acec
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 1913122304:0x7207ee00
441 [State 460] Terminating state 460 with message 'eliminated this false positive, out of range syscall number found at eip'
441 [State 460] Switching from state 460 to state 0
Copied 34928 (count=1)
Deleting state 460 0x0x2a81a850
441 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 459
>> fuzzInit: datum forking for value 460
>> fuzzInit: datum forking for value 460
442 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 460)
        (ReadLSB w32 0 v460_fuzz_symb_460)))
    state 461 with condition (Not (Eq false
         (Eq (w32 460)
             (ReadLSB w32 0 v460_fuzz_symb_460))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-460-8048a0e
Size=2 Low=0 splitIndex=1 high=1
442 [State 0] Switching from state 0 to state 461
Copied 34928 (count=1)
Finalizing TB execution 461
s2e_dummyMainFunction
tcg-llvm-tb-460-8048a0e
Firing timer event
442 [State 461] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 460 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
  2  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  3  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  4  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  5  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  6  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  7  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  8  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  9  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
 10  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 11  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 12  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 13  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 14  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 15  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 16  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 17  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 18  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 19  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 20  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 21  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 22  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 23  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 24  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 25  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 26  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 27  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 28  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 29  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 30  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 31  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 32  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 33  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 34  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 35  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 36  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 37  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 38  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 39  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 40  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 41  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 42  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 43  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 44  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 45  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 46  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 461] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x34
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 46 instructions, PCs: bfb76fdc bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
442 [State 461] Terminating state 461 with message 'eliminated this false positive, execution path subset of another success'
442 [State 461] Switching from state 461 to state 0
Copied 34928 (count=1)
Deleting state 461 0x0x2a81a850
442 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 460
>> fuzzInit: datum forking for value 461
>> fuzzInit: datum forking for value 461
443 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 461)
        (ReadLSB w32 0 v461_fuzz_symb_461)))
    state 462 with condition (Not (Eq false
         (Eq (w32 461)
             (ReadLSB w32 0 v461_fuzz_symb_461))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-461-8048a0e
Size=2 Low=0 splitIndex=1 high=1
443 [State 0] Switching from state 0 to state 462
Copied 34928 (count=1)
Finalizing TB execution 462
s2e_dummyMainFunction
tcg-llvm-tb-461-8048a0e
Firing timer event
443 [State 462] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 461 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
  2  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  3  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  4  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  5  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  6  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  7  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  8  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  9  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
 10  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 11  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 12  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 13  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 14  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 15  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 16  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 17  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 18  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 19  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 20  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 21  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 22  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 23  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 24  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 25  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 26  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 27  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 28  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 29  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 30  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 31  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 32  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 33  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 34  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 35  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 36  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 37  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 38  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 39  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 40  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 41  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 42  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 43  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 44  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 45  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 462] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x33
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 45 instructions, PCs: bfb76fdd bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
443 [State 462] Terminating state 462 with message 'eliminated this false positive, execution path subset of another success'
443 [State 462] Switching from state 462 to state 0
Copied 34928 (count=1)
Deleting state 462 0x0x2a81a850
443 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 461
>> fuzzInit: datum forking for value 462
>> fuzzInit: datum forking for value 462
444 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 462)
        (ReadLSB w32 0 v462_fuzz_symb_462)))
    state 463 with condition (Not (Eq false
         (Eq (w32 462)
             (ReadLSB w32 0 v462_fuzz_symb_462))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-462-8048a0e
Size=2 Low=0 splitIndex=1 high=1
444 [State 0] Switching from state 0 to state 463
Copied 34928 (count=1)
Finalizing TB execution 463
s2e_dummyMainFunction
tcg-llvm-tb-462-8048a0e
Firing timer event
444 [State 463] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 462 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
  2  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  3  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  4  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  5  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  6  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  7  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  8  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  9  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
 10  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 11  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 12  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 13  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 14  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 15  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 16  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 17  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 18  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 19  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 20  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 21  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 22  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 23  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 24  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 25  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 26  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 27  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 28  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 29  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 30  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 31  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 32  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 33  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 34  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 35  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 36  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 37  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 38  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 39  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 40  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 41  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 42  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 43  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 44  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 463] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x32
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 44 instructions, PCs: bfb76fde bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
444 [State 463] Terminating state 463 with message 'eliminated this false positive, execution path subset of another success'
444 [State 463] Switching from state 463 to state 0
Copied 34928 (count=1)
Deleting state 463 0x0x2a81a850
444 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 462
>> fuzzInit: datum forking for value 463
>> fuzzInit: datum forking for value 463
445 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 463)
        (ReadLSB w32 0 v463_fuzz_symb_463)))
    state 464 with condition (Not (Eq false
         (Eq (w32 463)
             (ReadLSB w32 0 v463_fuzz_symb_463))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-463-8048a0e
Size=2 Low=0 splitIndex=1 high=1
445 [State 0] Switching from state 0 to state 464
Copied 34928 (count=1)
Finalizing TB execution 464
s2e_dummyMainFunction
tcg-llvm-tb-463-8048a0e
Firing timer event
445 [State 464] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 463 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
  2  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  3  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  4  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  5  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  6  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  7  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  8  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  9  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
 10  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 11  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 12  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 13  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 14  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 15  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 16  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 17  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 18  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 19  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 20  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 21  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 22  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 23  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 24  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 25  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 26  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 27  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 28  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 29  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 30  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 31  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 32  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 33  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 34  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 35  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 36  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 37  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 38  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 39  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 40  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 41  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 42  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 43  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 464] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x31
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 43 instructions, PCs: bfb76fdf bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
445 [State 464] Terminating state 464 with message 'eliminated this false positive, execution path subset of another success'
445 [State 464] Switching from state 464 to state 0
Copied 34928 (count=1)
Deleting state 464 0x0x2a81a850
445 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 463
>> fuzzInit: datum forking for value 464
>> fuzzInit: datum forking for value 464
445 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 464)
        (ReadLSB w32 0 v464_fuzz_symb_464)))
    state 465 with condition (Not (Eq false
         (Eq (w32 464)
             (ReadLSB w32 0 v464_fuzz_symb_464))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-464-8048a0e
Size=2 Low=0 splitIndex=1 high=1
445 [State 0] Switching from state 0 to state 465
Copied 34928 (count=1)
Finalizing TB execution 465
s2e_dummyMainFunction
tcg-llvm-tb-464-8048a0e
446 [State 465] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 464 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
  2  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  3  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  4  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  5  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  6  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  7  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  8  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  9  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
 10  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 11  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 12  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 13  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 14  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 15  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 16  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 17  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 18  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 19  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 20  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 21  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 22  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 23  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 24  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 25  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 26  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 27  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 28  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 29  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 30  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 31  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 32  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 33  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 34  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 35  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 36  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 37  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 38  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 39  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 40  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 41  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 42  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 465] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x30
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 42 instructions, PCs: bfb76fe0 bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
446 [State 465] Terminating state 465 with message 'eliminated this false positive, execution path subset of another success'
446 [State 465] Switching from state 465 to state 0
Copied 34928 (count=1)
Deleting state 465 0x0x2ab3c550
446 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 464
>> fuzzInit: datum forking for value 465
>> fuzzInit: datum forking for value 465
446 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 465)
        (ReadLSB w32 0 v465_fuzz_symb_465)))
    state 466 with condition (Not (Eq false
         (Eq (w32 465)
             (ReadLSB w32 0 v465_fuzz_symb_465))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-465-8048a0e
Size=2 Low=0 splitIndex=1 high=1
446 [State 0] Switching from state 0 to state 466
Copied 34928 (count=1)
Finalizing TB execution 466
s2e_dummyMainFunction
tcg-llvm-tb-465-8048a0e
446 [State 466] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 465 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
  2  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  3  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  4  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  5  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  6  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  7  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  8  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  9  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
 10  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 11  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 12  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 13  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 14  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 15  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 16  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 17  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 18  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 19  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 20  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 21  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 22  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 23  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 24  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 25  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 26  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 27  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 28  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 29  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 30  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 31  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 32  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 33  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 34  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 35  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 36  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 37  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 38  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 39  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 40  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 41  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 466] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x2f
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 41 instructions, PCs: bfb76fe1 bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
447 [State 466] Terminating state 466 with message 'eliminated this false positive, execution path subset of another success'
447 [State 466] Switching from state 466 to state 0
Copied 34928 (count=1)
Deleting state 466 0x0x2ab3c550
Firing timer event
447 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 465
>> fuzzInit: datum forking for value 466
>> fuzzInit: datum forking for value 466
447 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 466)
        (ReadLSB w32 0 v466_fuzz_symb_466)))
    state 467 with condition (Not (Eq false
         (Eq (w32 466)
             (ReadLSB w32 0 v466_fuzz_symb_466))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-466-8048a0e
Size=2 Low=0 splitIndex=1 high=1
447 [State 0] Switching from state 0 to state 467
Copied 34928 (count=1)
Finalizing TB execution 467
s2e_dummyMainFunction
tcg-llvm-tb-466-8048a0e
447 [State 467] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 466 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
  2  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  3  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  4  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  5  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  6  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  7  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  8  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  9  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
 10  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 11  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 12  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 13  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 14  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 15  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 16  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 17  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 18  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 19  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 20  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 21  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 22  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 23  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 24  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 25  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 26  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 27  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 28  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 29  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 30  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 31  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 32  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 33  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 34  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 35  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 36  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 37  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 38  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 39  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 40  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 467] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x2e
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 40 instructions, PCs: bfb76fe2 bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
447 [State 467] Terminating state 467 with message 'eliminated this false positive, execution path subset of another success'
447 [State 467] Switching from state 467 to state 0
Copied 34928 (count=1)
Deleting state 467 0x0x2ab3c550
448 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 466
>> fuzzInit: datum forking for value 467
>> fuzzInit: datum forking for value 467
448 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 467)
        (ReadLSB w32 0 v467_fuzz_symb_467)))
    state 468 with condition (Not (Eq false
         (Eq (w32 467)
             (ReadLSB w32 0 v467_fuzz_symb_467))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-467-8048a0e
Size=2 Low=0 splitIndex=1 high=1
448 [State 0] Switching from state 0 to state 468
Copied 34928 (count=1)
Finalizing TB execution 468
s2e_dummyMainFunction
tcg-llvm-tb-467-8048a0e
Firing timer event
448 [State 468] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 467 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
  2  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  3  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  4  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  5  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  6  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  7  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  8  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  9  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
 10  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 11  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 12  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 13  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 14  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 15  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 16  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 17  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 18  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 19  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 20  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 21  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 22  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 23  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 24  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 25  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 26  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 27  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 28  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 29  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 30  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 31  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 32  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 33  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 34  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 35  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 36  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 37  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 38  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 39  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 468] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x2d
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 39 instructions, PCs: bfb76fe3 bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
448 [State 468] Terminating state 468 with message 'eliminated this false positive, execution path subset of another success'
448 [State 468] Switching from state 468 to state 0
Copied 34928 (count=1)
Deleting state 468 0x0x2ab3c550
449 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 467
>> fuzzInit: datum forking for value 468
>> fuzzInit: datum forking for value 468
449 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 468)
        (ReadLSB w32 0 v468_fuzz_symb_468)))
    state 469 with condition (Not (Eq false
         (Eq (w32 468)
             (ReadLSB w32 0 v468_fuzz_symb_468))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-468-8048a0e
Size=2 Low=0 splitIndex=1 high=1
449 [State 0] Switching from state 0 to state 469
Copied 34928 (count=1)
Finalizing TB execution 469
s2e_dummyMainFunction
tcg-llvm-tb-468-8048a0e
449 [State 469] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 468 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
  2  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  3  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  4  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  5  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  6  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  7  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  8  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  9  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
 10  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 11  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 12  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 13  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 14  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 15  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 16  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 17  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 18  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 19  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 20  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 21  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 22  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 23  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 24  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 25  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 26  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 27  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 28  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 29  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 30  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 31  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 32  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 33  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 34  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 35  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 36  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 37  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 38  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 469] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x2c
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 38 instructions, PCs: bfb76fe4 bfb76fe5 bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
449 [State 469] Terminating state 469 with message 'eliminated this false positive, execution path subset of another success'
449 [State 469] Switching from state 469 to state 0
Copied 34928 (count=1)
Deleting state 469 0x0x2ab3c550
449 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 468
>> fuzzInit: datum forking for value 469
>> fuzzInit: datum forking for value 469
450 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 469)
        (ReadLSB w32 0 v469_fuzz_symb_469)))
    state 470 with condition (Not (Eq false
         (Eq (w32 469)
             (ReadLSB w32 0 v469_fuzz_symb_469))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-469-8048a0e
Size=2 Low=0 splitIndex=1 high=1
450 [State 0] Switching from state 0 to state 470
Copied 34928 (count=1)
Finalizing TB execution 470
s2e_dummyMainFunction
tcg-llvm-tb-469-8048a0e
450 [State 470] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 469 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
  2  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  3  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  4  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  5  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  6  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  7  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  8  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  9  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
 10  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 11  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 12  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 13  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 14  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 15  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 16  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 17  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 18  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 19  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 20  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 21  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 22  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 23  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 24  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 25  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 26  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 27  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 28  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 29  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 30  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 31  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 32  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 33  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 34  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 35  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 36  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 37  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 470] CPU dump
EAX=0x20
EBX=0x20
ECX=0x0
EDX=0x0
ESI=0x0
EDI=0xc1808674
EBP=0x20
ESP=0xc6175f4c
EIP=0xc1141730
CR2=0xb75fc29f
!! Not matching syscall number 32!=4
450 [State 470] Terminating state 470 with message 'eliminated this false positive, incorrect syscall number found at eip'
450 [State 470] Switching from state 470 to state 0
Copied 34928 (count=1)
Deleting state 470 0x0x2ab3c550
Firing timer event
450 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 469
>> fuzzInit: datum forking for value 470
>> fuzzInit: datum forking for value 470
450 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 470)
        (ReadLSB w32 0 v470_fuzz_symb_470)))
    state 471 with condition (Not (Eq false
         (Eq (w32 470)
             (ReadLSB w32 0 v470_fuzz_symb_470))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-470-8048a0e
Size=2 Low=0 splitIndex=1 high=1
450 [State 0] Switching from state 0 to state 471
Copied 34928 (count=1)
Finalizing TB execution 471
s2e_dummyMainFunction
tcg-llvm-tb-470-8048a0e
451 [State 471] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 470 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
  2  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  3  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  4  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  5  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  6  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  7  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  8  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  9  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
 10  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 11  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 12  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 13  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 14  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 15  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 16  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 17  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 18  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 19  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 20  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 21  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 22  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 23  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 24  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 25  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 26  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 27  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 28  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 29  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 30  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 31  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 32  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 33  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 34  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 35  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 36  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 471] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x2a
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 36 instructions, PCs: bfb76fe6 bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
451 [State 471] Terminating state 471 with message 'eliminated this false positive, execution path subset of another success'
451 [State 471] Switching from state 471 to state 0
Copied 34928 (count=1)
Deleting state 471 0x0x2ab3c550
451 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 470
>> fuzzInit: datum forking for value 471
>> fuzzInit: datum forking for value 471
451 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 471)
        (ReadLSB w32 0 v471_fuzz_symb_471)))
    state 472 with condition (Not (Eq false
         (Eq (w32 471)
             (ReadLSB w32 0 v471_fuzz_symb_471))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-471-8048a0e
Size=2 Low=0 splitIndex=1 high=1
451 [State 0] Switching from state 0 to state 472
Copied 34928 (count=1)
Finalizing TB execution 472
s2e_dummyMainFunction
tcg-llvm-tb-471-8048a0e
Firing timer event
451 [State 472] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 471 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
  2  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  3  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  4  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  5  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  6  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  7  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  8  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  9  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
 10  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 11  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 12  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 13  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 14  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 15  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 16  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 17  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 18  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 19  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 20  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 21  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 22  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 23  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 24  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 25  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 26  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 27  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 28  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 29  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 30  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 31  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 32  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 33  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 34  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 35  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 472] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x29
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 35 instructions, PCs: bfb76fe7 bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
452 [State 472] Terminating state 472 with message 'eliminated this false positive, execution path subset of another success'
452 [State 472] Switching from state 472 to state 0
Copied 34928 (count=1)
Deleting state 472 0x0x2ac8f6d0
452 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 471
>> fuzzInit: datum forking for value 472
>> fuzzInit: datum forking for value 472
452 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 472)
        (ReadLSB w32 0 v472_fuzz_symb_472)))
    state 473 with condition (Not (Eq false
         (Eq (w32 472)
             (ReadLSB w32 0 v472_fuzz_symb_472))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-472-8048a0e
Size=2 Low=0 splitIndex=1 high=1
452 [State 0] Switching from state 0 to state 473
Copied 34928 (count=1)
Finalizing TB execution 473
s2e_dummyMainFunction
tcg-llvm-tb-472-8048a0e
452 [State 473] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 472 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
  2  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  3  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  4  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  5  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  6  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  7  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  8  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  9  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
 10  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 11  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 12  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 13  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 14  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 15  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 16  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 17  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 18  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 19  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 20  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 21  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 22  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 23  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 24  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 25  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 26  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 27  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 28  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 29  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 30  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 31  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 32  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 33  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 34  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 473] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x28
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 34 instructions, PCs: bfb76fe8 bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
452 [State 473] Terminating state 473 with message 'eliminated this false positive, execution path subset of another success'
452 [State 473] Switching from state 473 to state 0
Copied 34928 (count=1)
Deleting state 473 0x0x2ac8f6d0
453 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 472
>> fuzzInit: datum forking for value 473
>> fuzzInit: datum forking for value 473
453 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 473)
        (ReadLSB w32 0 v473_fuzz_symb_473)))
    state 474 with condition (Not (Eq false
         (Eq (w32 473)
             (ReadLSB w32 0 v473_fuzz_symb_473))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-473-8048a0e
Size=2 Low=0 splitIndex=1 high=1
453 [State 0] Switching from state 0 to state 474
Copied 34928 (count=1)
Finalizing TB execution 474
s2e_dummyMainFunction
tcg-llvm-tb-473-8048a0e
453 [State 474] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 473 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
  2  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  3  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  4  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  5  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  6  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  7  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  8  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  9  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
 10  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 11  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 12  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 13  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 14  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 15  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 16  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 17  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 18  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 19  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 20  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 21  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 22  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 23  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 24  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 25  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 26  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 27  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 28  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 29  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 30  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 31  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 32  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 33  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 474] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x27
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 33 instructions, PCs: bfb76fe9 bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
453 [State 474] Terminating state 474 with message 'eliminated this false positive, execution path subset of another success'
453 [State 474] Switching from state 474 to state 0
Copied 34928 (count=1)
Deleting state 474 0x0x2ad70ae0
Firing timer event
453 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 473
>> fuzzInit: datum forking for value 474
>> fuzzInit: datum forking for value 474
454 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 474)
        (ReadLSB w32 0 v474_fuzz_symb_474)))
    state 475 with condition (Not (Eq false
         (Eq (w32 474)
             (ReadLSB w32 0 v474_fuzz_symb_474))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-474-8048a0e
Size=2 Low=0 splitIndex=1 high=1
454 [State 0] Switching from state 0 to state 475
Copied 34928 (count=1)
Finalizing TB execution 475
s2e_dummyMainFunction
tcg-llvm-tb-474-8048a0e
454 [State 475] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 474 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
  2  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  3  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  4  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  5  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  6  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  7  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  8  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  9  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
 10  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 11  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 12  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 13  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 14  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 15  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 16  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 17  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 18  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 19  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 20  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 21  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 22  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 23  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 24  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 25  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 26  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 27  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 28  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 29  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 30  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 31  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 32  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 475] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x26
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 32 instructions, PCs: bfb76fea bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
454 [State 475] Terminating state 475 with message 'eliminated this false positive, execution path subset of another success'
454 [State 475] Switching from state 475 to state 0
Copied 34928 (count=1)
Deleting state 475 0x0x2ad70ae0
454 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 474
>> fuzzInit: datum forking for value 475
>> fuzzInit: datum forking for value 475
454 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 475)
        (ReadLSB w32 0 v475_fuzz_symb_475)))
    state 476 with condition (Not (Eq false
         (Eq (w32 475)
             (ReadLSB w32 0 v475_fuzz_symb_475))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-475-8048a0e
Size=2 Low=0 splitIndex=1 high=1
454 [State 0] Switching from state 0 to state 476
Copied 34928 (count=1)
Finalizing TB execution 476
s2e_dummyMainFunction
tcg-llvm-tb-475-8048a0e
Firing timer event
455 [State 476] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 475 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
  2  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  3  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  4  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  5  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  6  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  7  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  8  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  9  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
 10  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 11  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 12  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 13  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 14  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 15  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 16  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 17  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 18  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 19  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 20  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 21  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 22  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 23  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 24  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 25  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 26  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 27  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 28  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 29  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 30  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 31  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 476] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x25
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 31 instructions, PCs: bfb76feb bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
455 [State 476] Terminating state 476 with message 'eliminated this false positive, execution path subset of another success'
455 [State 476] Switching from state 476 to state 0
Copied 34928 (count=1)
Deleting state 476 0x0x2ad70ae0
455 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 475
>> fuzzInit: datum forking for value 476
>> fuzzInit: datum forking for value 476
455 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 476)
        (ReadLSB w32 0 v476_fuzz_symb_476)))
    state 477 with condition (Not (Eq false
         (Eq (w32 476)
             (ReadLSB w32 0 v476_fuzz_symb_476))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-476-8048a0e
Size=2 Low=0 splitIndex=1 high=1
455 [State 0] Switching from state 0 to state 477
Copied 34928 (count=1)
Finalizing TB execution 477
s2e_dummyMainFunction
tcg-llvm-tb-476-8048a0e
455 [State 477] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 476 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
  2  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  3  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  4  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  5  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  6  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  7  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  8  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  9  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
 10  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 11  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 12  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 13  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 14  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 15  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 16  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 17  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 18  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 19  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 20  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 21  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 22  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 23  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 24  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 25  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 26  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 27  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 28  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 29  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 30  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 477] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x24
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 30 instructions, PCs: bfb76fec bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
456 [State 477] Terminating state 477 with message 'eliminated this false positive, execution path subset of another success'
456 [State 477] Switching from state 477 to state 0
Copied 34928 (count=1)
Deleting state 477 0x0x2ad70ae0
456 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 476
>> fuzzInit: datum forking for value 477
>> fuzzInit: datum forking for value 477
456 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 477)
        (ReadLSB w32 0 v477_fuzz_symb_477)))
    state 478 with condition (Not (Eq false
         (Eq (w32 477)
             (ReadLSB w32 0 v477_fuzz_symb_477))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-477-8048a0e
Size=2 Low=0 splitIndex=1 high=1
456 [State 0] Switching from state 0 to state 478
Copied 34928 (count=1)
Finalizing TB execution 478
s2e_dummyMainFunction
tcg-llvm-tb-477-8048a0e
456 [State 478] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 477 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
  2  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  3  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  4  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  5  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  6  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  7  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  8  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  9  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
 10  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 11  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 12  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 13  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 14  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 15  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 16  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 17  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 18  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 19  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 20  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 21  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 22  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 23  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 24  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 25  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 26  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 27  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 28  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 29  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 478] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x23
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 29 instructions, PCs: bfb76fed bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
457 [State 478] Terminating state 478 with message 'eliminated this false positive, execution path subset of another success'
457 [State 478] Switching from state 478 to state 0
Copied 34928 (count=1)
Deleting state 478 0x0x2abf9b30
Firing timer event
457 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 477
>> fuzzInit: datum forking for value 478
>> fuzzInit: datum forking for value 478
457 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 478)
        (ReadLSB w32 0 v478_fuzz_symb_478)))
    state 479 with condition (Not (Eq false
         (Eq (w32 478)
             (ReadLSB w32 0 v478_fuzz_symb_478))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-478-8048a0e
Size=2 Low=0 splitIndex=1 high=1
457 [State 0] Switching from state 0 to state 479
Copied 34928 (count=1)
Finalizing TB execution 479
s2e_dummyMainFunction
tcg-llvm-tb-478-8048a0e
457 [State 479] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 478 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
  2  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  3  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  4  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  5  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  6  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  7  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  8  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  9  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
 10  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 11  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 12  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 13  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 14  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 15  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 16  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 17  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 18  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 19  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 20  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 21  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 22  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 23  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 24  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 25  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 26  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 27  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 28  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 479] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x22
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 28 instructions, PCs: bfb76fee bfb76fef bfb76ff0 bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
457 [State 479] Terminating state 479 with message 'eliminated this false positive, execution path subset of another success'
457 [State 479] Switching from state 479 to state 0
Copied 34928 (count=1)
Deleting state 479 0x0x2abf9b30
458 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 478
>> fuzzInit: datum forking for value 479
>> fuzzInit: datum forking for value 479
458 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 479)
        (ReadLSB w32 0 v479_fuzz_symb_479)))
    state 480 with condition (Not (Eq false
         (Eq (w32 479)
             (ReadLSB w32 0 v479_fuzz_symb_479))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-479-8048a0e
Size=2 Low=0 splitIndex=1 high=1
458 [State 0] Switching from state 0 to state 480
Copied 34928 (count=1)
Finalizing TB execution 480
s2e_dummyMainFunction
tcg-llvm-tb-479-8048a0e
Firing timer event
458 [State 480] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 479 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
  2  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  3  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  4  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  5  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  6  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  7  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  8  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  9  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
 10  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 11  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 12  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 13  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 14  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 15  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 16  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 17  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 18  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 19  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 20  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 21  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 22  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 23  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 24  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 25  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 26  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 27  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 480] CPU dump
EAX=0xfffff680
EBX=0xfffff676
ECX=0x8
EDX=0xfffff680
ESI=0x0
EDI=0xc180295c
EBP=0x0
ESP=0xc6175f88
EIP=0xc1020692
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 4294964864:0xfffff680
458 [State 480] Terminating state 480 with message 'eliminated this false positive, out of range syscall number found at eip'
458 [State 480] Switching from state 480 to state 0
Copied 34928 (count=1)
Deleting state 480 0x0x2abf9b30
458 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 479
>> fuzzInit: datum forking for value 480
>> fuzzInit: datum forking for value 480
459 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 480)
        (ReadLSB w32 0 v480_fuzz_symb_480)))
    state 481 with condition (Not (Eq false
         (Eq (w32 480)
             (ReadLSB w32 0 v480_fuzz_symb_480))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-480-8048a0e
Size=2 Low=0 splitIndex=1 high=1
459 [State 0] Switching from state 0 to state 481
Copied 34928 (count=1)
Finalizing TB execution 481
s2e_dummyMainFunction
tcg-llvm-tb-480-8048a0e
459 [State 481] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 480 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
  2  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  3  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  4  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  5  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  6  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  7  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  8  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  9  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
 10  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 11  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 12  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 13  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 14  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 15  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 16  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 17  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 18  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 19  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 20  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 21  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 22  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 23  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 24  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 25  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 26  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 481] CPU dump
EAX=0x3fbbd500
EBX=0x0
ECX=0x8
EDX=0x1e
ESI=0x7d
EDI=0x0
EBP=0xc13957a0
ESP=0xc6175f30
EIP=0xc104acec
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 1069274368:0x3fbbd500
459 [State 481] Terminating state 481 with message 'eliminated this false positive, out of range syscall number found at eip'
459 [State 481] Switching from state 481 to state 0
Copied 34928 (count=1)
Deleting state 481 0x0x2abf9b30
459 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 480
>> fuzzInit: datum forking for value 481
>> fuzzInit: datum forking for value 481
459 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 481)
        (ReadLSB w32 0 v481_fuzz_symb_481)))
    state 482 with condition (Not (Eq false
         (Eq (w32 481)
             (ReadLSB w32 0 v481_fuzz_symb_481))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-481-8048a0e
Size=2 Low=0 splitIndex=1 high=1
459 [State 0] Switching from state 0 to state 482
Copied 34928 (count=1)
Finalizing TB execution 482
s2e_dummyMainFunction
tcg-llvm-tb-481-8048a0e
459 [State 482] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 481 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
  2  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  3  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  4  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  5  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  6  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  7  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  8  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  9  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
 10  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 11  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 12  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 13  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 14  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 15  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 16  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 17  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 18  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 19  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 20  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 21  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 22  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 23  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 24  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 25  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 482] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x1f
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 25 instructions, PCs: bfb76ff1 bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
460 [State 482] Terminating state 482 with message 'eliminated this false positive, execution path subset of another success'
460 [State 482] Switching from state 482 to state 0
Copied 34928 (count=1)
Deleting state 482 0x0x2abf9b30
Firing timer event
460 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 481
>> fuzzInit: datum forking for value 482
>> fuzzInit: datum forking for value 482
460 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 482)
        (ReadLSB w32 0 v482_fuzz_symb_482)))
    state 483 with condition (Not (Eq false
         (Eq (w32 482)
             (ReadLSB w32 0 v482_fuzz_symb_482))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-482-8048a0e
Size=2 Low=0 splitIndex=1 high=1
460 [State 0] Switching from state 0 to state 483
Copied 34928 (count=1)
Finalizing TB execution 483
s2e_dummyMainFunction
tcg-llvm-tb-482-8048a0e
460 [State 483] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 482 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
  2  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  3  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  4  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  5  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  6  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  7  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  8  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  9  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
 10  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 11  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 12  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 13  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 14  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 15  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 16  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 17  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 18  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 19  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 20  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 21  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 22  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 23  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 24  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 483] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x1e
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 24 instructions, PCs: bfb76ff2 bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
460 [State 483] Terminating state 483 with message 'eliminated this false positive, execution path subset of another success'
460 [State 483] Switching from state 483 to state 0
Copied 34928 (count=1)
Deleting state 483 0x0x2abf9b30
461 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 482
>> fuzzInit: datum forking for value 483
>> fuzzInit: datum forking for value 483
461 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 483)
        (ReadLSB w32 0 v483_fuzz_symb_483)))
    state 484 with condition (Not (Eq false
         (Eq (w32 483)
             (ReadLSB w32 0 v483_fuzz_symb_483))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-483-8048a0e
Size=2 Low=0 splitIndex=1 high=1
461 [State 0] Switching from state 0 to state 484
Copied 34928 (count=1)
Finalizing TB execution 484
s2e_dummyMainFunction
tcg-llvm-tb-483-8048a0e
Firing timer event
461 [State 484] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 483 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
  2  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  3  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  4  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  5  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  6  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  7  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  8  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  9  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
 10  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 11  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 12  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 13  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 14  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 15  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 16  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 17  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 18  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 19  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 20  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 21  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 22  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 23  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 484] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x1d
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 23 instructions, PCs: bfb76ff3 bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
461 [State 484] Terminating state 484 with message 'eliminated this false positive, execution path subset of another success'
461 [State 484] Switching from state 484 to state 0
Copied 34928 (count=1)
Deleting state 484 0x0x2abf9b30
461 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 483
>> fuzzInit: datum forking for value 484
>> fuzzInit: datum forking for value 484
462 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 484)
        (ReadLSB w32 0 v484_fuzz_symb_484)))
    state 485 with condition (Not (Eq false
         (Eq (w32 484)
             (ReadLSB w32 0 v484_fuzz_symb_484))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-484-8048a0e
Size=2 Low=0 splitIndex=1 high=1
462 [State 0] Switching from state 0 to state 485
Copied 34928 (count=1)
Finalizing TB execution 485
s2e_dummyMainFunction
tcg-llvm-tb-484-8048a0e
Firing timer event
462 [State 485] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 484 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
  2  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  3  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  4  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  5  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  6  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  7  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  8  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  9  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
 10  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 11  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 12  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 13  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 14  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 15  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 16  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 17  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 18  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 19  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 20  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 21  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 22  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 485] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x1c
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 22 instructions, PCs: bfb76ff4 bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
462 [State 485] Terminating state 485 with message 'eliminated this false positive, execution path subset of another success'
462 [State 485] Switching from state 485 to state 0
Copied 34928 (count=1)
Deleting state 485 0x0x2abf9b30
462 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 484
>> fuzzInit: datum forking for value 485
>> fuzzInit: datum forking for value 485
463 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 485)
        (ReadLSB w32 0 v485_fuzz_symb_485)))
    state 486 with condition (Not (Eq false
         (Eq (w32 485)
             (ReadLSB w32 0 v485_fuzz_symb_485))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-485-8048a0e
Size=2 Low=0 splitIndex=1 high=1
463 [State 0] Switching from state 0 to state 486
Copied 34928 (count=1)
Finalizing TB execution 486
s2e_dummyMainFunction
tcg-llvm-tb-485-8048a0e
463 [State 486] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 485 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
  2  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  3  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  4  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  5  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  6  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  7  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  8  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  9  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
 10  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 11  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 12  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 13  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 14  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 15  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 16  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 17  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 18  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 19  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 20  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 21  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 486] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x1b
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 21 instructions, PCs: bfb76ff5 bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
463 [State 486] Terminating state 486 with message 'eliminated this false positive, execution path subset of another success'
463 [State 486] Switching from state 486 to state 0
Copied 34928 (count=1)
Deleting state 486 0x0x2abf9b30
463 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 485
>> fuzzInit: datum forking for value 486
>> fuzzInit: datum forking for value 486
463 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 486)
        (ReadLSB w32 0 v486_fuzz_symb_486)))
    state 487 with condition (Not (Eq false
         (Eq (w32 486)
             (ReadLSB w32 0 v486_fuzz_symb_486))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-486-8048a0e
Size=2 Low=0 splitIndex=1 high=1
463 [State 0] Switching from state 0 to state 487
Copied 34928 (count=1)
Finalizing TB execution 487
s2e_dummyMainFunction
tcg-llvm-tb-486-8048a0e
464 [State 487] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 486 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
  2  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  3  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  4  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  5  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  6  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  7  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  8  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  9  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
 10  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 11  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 12  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 13  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 14  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 15  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 16  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 17  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 18  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 19  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 20  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 487] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x1a
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 20 instructions, PCs: bfb76ff6 bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
464 [State 487] Terminating state 487 with message 'eliminated this false positive, execution path subset of another success'
464 [State 487] Switching from state 487 to state 0
Copied 34928 (count=1)
Deleting state 487 0x0x2abf9b30
Firing timer event
464 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 486
>> fuzzInit: datum forking for value 487
>> fuzzInit: datum forking for value 487
464 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 487)
        (ReadLSB w32 0 v487_fuzz_symb_487)))
    state 488 with condition (Not (Eq false
         (Eq (w32 487)
             (ReadLSB w32 0 v487_fuzz_symb_487))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-487-8048a0e
Size=2 Low=0 splitIndex=1 high=1
464 [State 0] Switching from state 0 to state 488
Copied 34928 (count=1)
Finalizing TB execution 488
s2e_dummyMainFunction
tcg-llvm-tb-487-8048a0e
464 [State 488] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 487 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
  2  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  3  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  4  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  5  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  6  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  7  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  8  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  9  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
 10  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 11  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 12  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 13  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 14  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 15  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 16  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 17  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 18  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 19  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 488] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x19
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 19 instructions, PCs: bfb76ff7 bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
465 [State 488] Terminating state 488 with message 'eliminated this false positive, execution path subset of another success'
465 [State 488] Switching from state 488 to state 0
Copied 34928 (count=1)
Deleting state 488 0x0x2abf9b30
465 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 487
>> fuzzInit: datum forking for value 488
>> fuzzInit: datum forking for value 488
465 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 488)
        (ReadLSB w32 0 v488_fuzz_symb_488)))
    state 489 with condition (Not (Eq false
         (Eq (w32 488)
             (ReadLSB w32 0 v488_fuzz_symb_488))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-488-8048a0e
Size=2 Low=0 splitIndex=1 high=1
465 [State 0] Switching from state 0 to state 489
Copied 34928 (count=1)
Finalizing TB execution 489
s2e_dummyMainFunction
tcg-llvm-tb-488-8048a0e
Firing timer event
465 [State 489] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 488 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
  2  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  3  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  4  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  5  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  6  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  7  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  8  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  9  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
 10  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 11  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 12  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 13  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 14  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 15  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 16  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 17  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 18  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 489] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x18
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 18 instructions, PCs: bfb76ff8 bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
465 [State 489] Terminating state 489 with message 'eliminated this false positive, execution path subset of another success'
465 [State 489] Switching from state 489 to state 0
Copied 34928 (count=1)
Deleting state 489 0x0x2abf9b30
466 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 488
>> fuzzInit: datum forking for value 489
>> fuzzInit: datum forking for value 489
466 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 489)
        (ReadLSB w32 0 v489_fuzz_symb_489)))
    state 490 with condition (Not (Eq false
         (Eq (w32 489)
             (ReadLSB w32 0 v489_fuzz_symb_489))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-489-8048a0e
Size=2 Low=0 splitIndex=1 high=1
466 [State 0] Switching from state 0 to state 490
Copied 34928 (count=1)
Finalizing TB execution 490
s2e_dummyMainFunction
tcg-llvm-tb-489-8048a0e
466 [State 490] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 489 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
  2  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  3  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  4  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  5  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  6  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  7  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  8  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  9  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
 10  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 11  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 12  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 13  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 14  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 15  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 16  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 17  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 490] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x17
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 17 instructions, PCs: bfb76ff9 bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
466 [State 490] Terminating state 490 with message 'eliminated this false positive, execution path subset of another success'
466 [State 490] Switching from state 490 to state 0
Copied 34928 (count=1)
Deleting state 490 0x0x2abf9b30
466 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 489
>> fuzzInit: datum forking for value 490
>> fuzzInit: datum forking for value 490
467 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 490)
        (ReadLSB w32 0 v490_fuzz_symb_490)))
    state 491 with condition (Not (Eq false
         (Eq (w32 490)
             (ReadLSB w32 0 v490_fuzz_symb_490))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-490-8048a0e
Size=2 Low=0 splitIndex=1 high=1
467 [State 0] Switching from state 0 to state 491
Copied 34928 (count=1)
Finalizing TB execution 491
s2e_dummyMainFunction
tcg-llvm-tb-490-8048a0e
467 [State 491] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 490 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
  2  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  3  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  4  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  5  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  6  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  7  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  8  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  9  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
 10  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 11  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 12  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 13  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 14  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 15  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 16  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 491] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x16
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 16 instructions, PCs: bfb76ffa bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
467 [State 491] Terminating state 491 with message 'eliminated this false positive, execution path subset of another success'
467 [State 491] Switching from state 491 to state 0
Copied 34928 (count=1)
Deleting state 491 0x0x2abf9b30
Firing timer event
467 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 490
>> fuzzInit: datum forking for value 491
>> fuzzInit: datum forking for value 491
467 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 491)
        (ReadLSB w32 0 v491_fuzz_symb_491)))
    state 492 with condition (Not (Eq false
         (Eq (w32 491)
             (ReadLSB w32 0 v491_fuzz_symb_491))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-491-8048a0e
Size=2 Low=0 splitIndex=1 high=1
467 [State 0] Switching from state 0 to state 492
Copied 34928 (count=1)
Finalizing TB execution 492
s2e_dummyMainFunction
tcg-llvm-tb-491-8048a0e
468 [State 492] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 491 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
  2  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  3  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  4  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  5  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  6  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  7  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  8  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  9  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
 10  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 11  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 12  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 13  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 14  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 15  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 492] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x15
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 15 instructions, PCs: bfb76ffb bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
468 [State 492] Terminating state 492 with message 'eliminated this false positive, execution path subset of another success'
468 [State 492] Switching from state 492 to state 0
Copied 34928 (count=1)
Deleting state 492 0x0x2abf9b30
468 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 491
>> fuzzInit: datum forking for value 492
>> fuzzInit: datum forking for value 492
468 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 492)
        (ReadLSB w32 0 v492_fuzz_symb_492)))
    state 493 with condition (Not (Eq false
         (Eq (w32 492)
             (ReadLSB w32 0 v492_fuzz_symb_492))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-492-8048a0e
Size=2 Low=0 splitIndex=1 high=1
468 [State 0] Switching from state 0 to state 493
Copied 34928 (count=1)
Finalizing TB execution 493
s2e_dummyMainFunction
tcg-llvm-tb-492-8048a0e
Firing timer event
468 [State 493] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 492 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
  2  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  3  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  4  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  5  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  6  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  7  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  8  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  9  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
 10  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 11  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 12  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 13  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 14  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 493] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x14
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 14 instructions, PCs: bfb76ffc bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
469 [State 493] Terminating state 493 with message 'eliminated this false positive, execution path subset of another success'
469 [State 493] Switching from state 493 to state 0
Copied 34928 (count=1)
Deleting state 493 0x0x2abf9b30
469 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 492
>> fuzzInit: datum forking for value 493
>> fuzzInit: datum forking for value 493
469 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 493)
        (ReadLSB w32 0 v493_fuzz_symb_493)))
    state 494 with condition (Not (Eq false
         (Eq (w32 493)
             (ReadLSB w32 0 v493_fuzz_symb_493))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-493-8048a0e
Size=2 Low=0 splitIndex=1 high=1
469 [State 0] Switching from state 0 to state 494
Copied 34928 (count=1)
Finalizing TB execution 494
s2e_dummyMainFunction
tcg-llvm-tb-493-8048a0e
469 [State 494] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 493 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
  2  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  3  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  4  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  5  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  6  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  7  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  8  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  9  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
 10  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 11  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 12  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 13  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 494] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x13
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 13 instructions, PCs: bfb76ffd bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
469 [State 494] Terminating state 494 with message 'eliminated this false positive, execution path subset of another success'
469 [State 494] Switching from state 494 to state 0
Copied 34928 (count=1)
Deleting state 494 0x0x2abf9b30
470 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 493
>> fuzzInit: datum forking for value 494
>> fuzzInit: datum forking for value 494
470 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 494)
        (ReadLSB w32 0 v494_fuzz_symb_494)))
    state 495 with condition (Not (Eq false
         (Eq (w32 494)
             (ReadLSB w32 0 v494_fuzz_symb_494))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-494-8048a0e
Size=2 Low=0 splitIndex=1 high=1
470 [State 0] Switching from state 0 to state 495
Copied 34928 (count=1)
Finalizing TB execution 495
s2e_dummyMainFunction
tcg-llvm-tb-494-8048a0e
470 [State 495] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 494 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
  2  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  3  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  4  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  5  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  6  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  7  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  8  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  9  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
 10  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 11  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 12  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 495] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x12
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 12 instructions, PCs: bfb76ffe bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
470 [State 495] Terminating state 495 with message 'eliminated this false positive, execution path subset of another success'
470 [State 495] Switching from state 495 to state 0
Copied 34928 (count=1)
Deleting state 495 0x0x2abf9b30
Firing timer event
470 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 494
>> fuzzInit: datum forking for value 495
>> fuzzInit: datum forking for value 495
471 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 495)
        (ReadLSB w32 0 v495_fuzz_symb_495)))
    state 496 with condition (Not (Eq false
         (Eq (w32 495)
             (ReadLSB w32 0 v495_fuzz_symb_495))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-495-8048a0e
Size=2 Low=0 splitIndex=1 high=1
471 [State 0] Switching from state 0 to state 496
Copied 34928 (count=1)
Finalizing TB execution 496
s2e_dummyMainFunction
tcg-llvm-tb-495-8048a0e
471 [State 496] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 495 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
  2  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  3  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  4  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  5  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  6  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  7  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  8  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  9  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
 10  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 11  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 496] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x11
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 11 instructions, PCs: bfb76fff bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
471 [State 496] Terminating state 496 with message 'eliminated this false positive, execution path subset of another success'
471 [State 496] Switching from state 496 to state 0
Copied 34928 (count=1)
Deleting state 496 0x0x2b22cfd0
471 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 495
>> fuzzInit: datum forking for value 496
>> fuzzInit: datum forking for value 496
471 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 496)
        (ReadLSB w32 0 v496_fuzz_symb_496)))
    state 497 with condition (Not (Eq false
         (Eq (w32 496)
             (ReadLSB w32 0 v496_fuzz_symb_496))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-496-8048a0e
Size=2 Low=0 splitIndex=1 high=1
471 [State 0] Switching from state 0 to state 497
Copied 34928 (count=1)
Finalizing TB execution 497
s2e_dummyMainFunction
tcg-llvm-tb-496-8048a0e
Firing timer event
472 [State 497] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 496 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
  2  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  3  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  4  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  5  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  6  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  7  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  8  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  9  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
 10  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 497] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb7701a
EDX=0xf
ESI=0x10
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 10 instructions, PCs: bfb77000 bfb77015 bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
472 [State 497] Terminating state 497 with message 'eliminated this false positive, execution path subset of another success'
472 [State 497] Switching from state 497 to state 0
Copied 34928 (count=1)
Deleting state 497 0x0x2b3875e0
472 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 496
>> fuzzInit: datum forking for value 497
>> fuzzInit: datum forking for value 497
472 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 497)
        (ReadLSB w32 0 v497_fuzz_symb_497)))
    state 498 with condition (Not (Eq false
         (Eq (w32 497)
             (ReadLSB w32 0 v497_fuzz_symb_497))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-497-8048a0e
Size=2 Low=0 splitIndex=1 high=1
472 [State 0] Switching from state 0 to state 498
Copied 34928 (count=1)
Finalizing TB execution 498
s2e_dummyMainFunction
tcg-llvm-tb-497-8048a0e
Firing timer event
473 [State 498] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 497 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77001: 13 59 31                           adc ebx, [ecx+0x31]      nextPC: 0xbfb77004
  2  7B @0xbfb77004: c0 b0 04 31 db 43 31               shl byte [eax+0x43db3104], 0x31 nextPC: 0xbfb7700b
  3  6B @0xbfb7700b: d2 b2 0f cd 80 b0                  shl [edx+0xb080cd0f], cl nextPC: 0xbfb77011
  4  3B @0xbfb77011: 01 4b cd                           add [ebx-0x33], ecx      nextPC: 0xbfb77014
  5  3B @0xbfb77014: 80 e8 e8                           sub al, 0xe8             nextPC: 0xbfb77017
  6  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
473 [State 498] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
473 [State 498] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
473 [State 498] Terminating state 498 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
473 [State 498] Switching from state 498 to state 0
Copied 34928 (count=1)
Deleting state 498 0x0x2b3875e0
473 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 497
>> fuzzInit: datum forking for value 498
>> fuzzInit: datum forking for value 498
473 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 498)
        (ReadLSB w32 0 v498_fuzz_symb_498)))
    state 499 with condition (Not (Eq false
         (Eq (w32 498)
             (ReadLSB w32 0 v498_fuzz_symb_498))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-498-8048a0e
Size=2 Low=0 splitIndex=1 high=1
473 [State 0] Switching from state 0 to state 499
Copied 34928 (count=1)
Finalizing TB execution 499
s2e_dummyMainFunction
tcg-llvm-tb-498-8048a0e
473 [State 499] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 498 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  2  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  3  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  4  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  5  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  6  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  7  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  8  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 499] CPU dump
EAX=0x4
EBX=0x1
ECX=0x80492f7
EDX=0xf
ESI=0xe
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 8 instructions, PCs: bfb77002 bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
474 [State 499] Terminating state 499 with message 'eliminated this false positive, execution path subset of another success'
474 [State 499] Switching from state 499 to state 0
Copied 34928 (count=1)
Deleting state 499 0x0x2b3875e0
474 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 498
>> fuzzInit: datum forking for value 499
>> fuzzInit: datum forking for value 499
474 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 499)
        (ReadLSB w32 0 v499_fuzz_symb_499)))
    state 500 with condition (Not (Eq false
         (Eq (w32 499)
             (ReadLSB w32 0 v499_fuzz_symb_499))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-499-8048a0e
Size=2 Low=0 splitIndex=1 high=1
474 [State 0] Switching from state 0 to state 500
Copied 34928 (count=1)
Finalizing TB execution 500
s2e_dummyMainFunction
tcg-llvm-tb-499-8048a0e
474 [State 500] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 499 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  2  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  3  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  4  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  5  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  6  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  7  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 500] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0xd
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Unfortunately this execution path is a suffix/subset of a previously found success. This path has 7 instructions, PCs: bfb77003 bfb77005 bfb77007 bfb77009 bfb7700a bfb7700c bfb7700e 
474 [State 500] Terminating state 500 with message 'eliminated this false positive, execution path subset of another success'
474 [State 500] Switching from state 500 to state 0
Copied 34928 (count=1)
Deleting state 500 0x0x2b3c6550
Firing timer event
475 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 499
>> fuzzInit: datum forking for value 500
>> fuzzInit: datum forking for value 500
475 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 500)
        (ReadLSB w32 0 v500_fuzz_symb_500)))
    state 501 with condition (Not (Eq false
         (Eq (w32 500)
             (ReadLSB w32 0 v500_fuzz_symb_500))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-500-8048a0e
Size=2 Low=0 splitIndex=1 high=1
475 [State 0] Switching from state 0 to state 501
Copied 34928 (count=1)
Finalizing TB execution 501
s2e_dummyMainFunction
tcg-llvm-tb-500-8048a0e
475 [State 501] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 500 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  7B @0xbfb77004: c0 b0 04 31 db 43 31               shl byte [eax+0x43db3104], 0x31 nextPC: 0xbfb7700b
  2  6B @0xbfb7700b: d2 b2 0f cd 80 b0                  shl [edx+0xb080cd0f], cl nextPC: 0xbfb77011
  3  3B @0xbfb77011: 01 4b cd                           add [ebx-0x33], ecx      nextPC: 0xbfb77014
  4  3B @0xbfb77014: 80 e8 e8                           sub al, 0xe8             nextPC: 0xbfb77017
  5  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
475 [State 501] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
475 [State 501] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
475 [State 501] Terminating state 501 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
475 [State 501] Switching from state 501 to state 0
Copied 34928 (count=1)
Deleting state 501 0x0x2b4852f0
475 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 500
>> fuzzInit: datum forking for value 501
>> fuzzInit: datum forking for value 501
476 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 501)
        (ReadLSB w32 0 v501_fuzz_symb_501)))
    state 502 with condition (Not (Eq false
         (Eq (w32 501)
             (ReadLSB w32 0 v501_fuzz_symb_501))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-501-8048a0e
Size=2 Low=0 splitIndex=1 high=1
476 [State 0] Switching from state 0 to state 502
Copied 34928 (count=1)
Finalizing TB execution 502
s2e_dummyMainFunction
tcg-llvm-tb-501-8048a0e
Firing timer event
476 [State 502] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 501 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  2  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  3  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  4  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  5  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  6  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 502] CPU dump
EAX=0xbfb77004
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0xb
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216470020:0xbfb77004
476 [State 502] Terminating state 502 with message 'eliminated this false positive, out of range syscall number found at eip'
476 [State 502] Switching from state 502 to state 0
Copied 34928 (count=1)
Deleting state 502 0x0x2b571fc0
476 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 501
>> fuzzInit: datum forking for value 502
>> fuzzInit: datum forking for value 502
477 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 502)
        (ReadLSB w32 0 v502_fuzz_symb_502)))
    state 503 with condition (Not (Eq false
         (Eq (w32 502)
             (ReadLSB w32 0 v502_fuzz_symb_502))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-502-8048a0e
Size=2 Low=0 splitIndex=1 high=1
477 [State 0] Switching from state 0 to state 503
Copied 34928 (count=1)
Finalizing TB execution 503
s2e_dummyMainFunction
tcg-llvm-tb-502-8048a0e
477 [State 503] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 502 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb77006: 04 31                              add al, 0x31             nextPC: 0xbfb77008
  2  1B @0xbfb77008: db                                 invalid                  nextPC: 0xbfb77009
!!* pc != prev insn's next_pc; 0xbfb77008 != bfb77009
  3  3B @0xbfb77008:*db 43 31                           fild dword [ebx+0x31]    nextPC: 0xbfb7700b
  4  6B @0xbfb7700b: d2 b2 0f cd 80 b0                  shl [edx+0xb080cd0f], cl nextPC: 0xbfb77011
  5  3B @0xbfb77011: 01 4b cd                           add [ebx-0x33], ecx      nextPC: 0xbfb77014
  6  3B @0xbfb77014: 80 e8 e8                           sub al, 0xe8             nextPC: 0xbfb77017
  7  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
477 [State 503] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
477 [State 503] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
477 [State 503] Terminating state 503 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
477 [State 503] Switching from state 503 to state 0
Copied 34928 (count=1)
Deleting state 503 0x0x2b571fc0
477 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 502
>> fuzzInit: datum forking for value 503
>> fuzzInit: datum forking for value 503
477 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 503)
        (ReadLSB w32 0 v503_fuzz_symb_503)))
    state 504 with condition (Not (Eq false
         (Eq (w32 503)
             (ReadLSB w32 0 v503_fuzz_symb_503))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-503-8048a0e
Size=2 Low=0 splitIndex=1 high=1
477 [State 0] Switching from state 0 to state 504
Copied 34928 (count=1)
Finalizing TB execution 504
s2e_dummyMainFunction
tcg-llvm-tb-503-8048a0e
478 [State 504] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 503 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  2  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  3  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  4  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  5  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 504] CPU dump
EAX=0xbfb77007
EBX=0x1
ECX=0xbfb76408
EDX=0xf
ESI=0x9
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216470023:0xbfb77007
478 [State 504] Terminating state 504 with message 'eliminated this false positive, out of range syscall number found at eip'
478 [State 504] Switching from state 504 to state 0
Copied 34928 (count=1)
Deleting state 504 0x0x2b571fc0
Firing timer event
478 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 503
>> fuzzInit: datum forking for value 504
>> fuzzInit: datum forking for value 504
478 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 504)
        (ReadLSB w32 0 v504_fuzz_symb_504)))
    state 505 with condition (Not (Eq false
         (Eq (w32 504)
             (ReadLSB w32 0 v504_fuzz_symb_504))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-504-8048a0e
Size=2 Low=0 splitIndex=1 high=1
478 [State 0] Switching from state 0 to state 505
Copied 34928 (count=1)
Finalizing TB execution 505
s2e_dummyMainFunction
tcg-llvm-tb-504-8048a0e
478 [State 505] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 504 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77008: db                                 invalid                  nextPC: 0xbfb77009
!!* pc != prev insn's next_pc; 0xbfb77008 != bfb77009
  2  3B @0xbfb77008:*db 43 31                           fild dword [ebx+0x31]    nextPC: 0xbfb7700b
  3  6B @0xbfb7700b: d2 b2 0f cd 80 b0                  shl [edx+0xb080cd0f], cl nextPC: 0xbfb77011
  4  3B @0xbfb77011: 01 4b cd                           add [ebx-0x33], ecx      nextPC: 0xbfb77014
  5  3B @0xbfb77014: 80 e8 e8                           sub al, 0xe8             nextPC: 0xbfb77017
  6  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
479 [State 505] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
479 [State 505] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
479 [State 505] Terminating state 505 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
479 [State 505] Switching from state 505 to state 0
Copied 34928 (count=1)
Deleting state 505 0x0x2b571fc0
479 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 504
>> fuzzInit: datum forking for value 505
>> fuzzInit: datum forking for value 505
479 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 505)
        (ReadLSB w32 0 v505_fuzz_symb_505)))
    state 506 with condition (Not (Eq false
         (Eq (w32 505)
             (ReadLSB w32 0 v505_fuzz_symb_505))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-505-8048a0e
Size=2 Low=0 splitIndex=1 high=1
479 [State 0] Switching from state 0 to state 506
Copied 34928 (count=1)
Finalizing TB execution 506
s2e_dummyMainFunction
tcg-llvm-tb-505-8048a0e
Firing timer event
479 [State 506] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 505 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  2  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  3  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  4  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 506] CPU dump
EAX=0xbfb77009
EBX=0xbfb77011
ECX=0xbfb76408
EDX=0xf
ESI=0x7
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216470025:0xbfb77009
479 [State 506] Terminating state 506 with message 'eliminated this false positive, out of range syscall number found at eip'
479 [State 506] Switching from state 506 to state 0
Copied 34928 (count=1)
Deleting state 506 0x0x2b571fc0
480 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 505
>> fuzzInit: datum forking for value 506
>> fuzzInit: datum forking for value 506
480 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 506)
        (ReadLSB w32 0 v506_fuzz_symb_506)))
    state 507 with condition (Not (Eq false
         (Eq (w32 506)
             (ReadLSB w32 0 v506_fuzz_symb_506))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-506-8048a0e
Size=2 Low=0 splitIndex=1 high=1
480 [State 0] Switching from state 0 to state 507
Copied 34928 (count=1)
Finalizing TB execution 507
s2e_dummyMainFunction
tcg-llvm-tb-506-8048a0e
480 [State 507] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 506 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  2  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  3  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 507] CPU dump
EAX=0xbfb7700a
EBX=0xbfb77010
ECX=0xbfb76408
EDX=0xf
ESI=0x6
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216470026:0xbfb7700a
480 [State 507] Terminating state 507 with message 'eliminated this false positive, out of range syscall number found at eip'
480 [State 507] Switching from state 507 to state 0
Copied 34928 (count=1)
Deleting state 507 0x0x2b571fc0
481 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 506
>> fuzzInit: datum forking for value 507
>> fuzzInit: datum forking for value 507
481 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 507)
        (ReadLSB w32 0 v507_fuzz_symb_507)))
    state 508 with condition (Not (Eq false
         (Eq (w32 507)
             (ReadLSB w32 0 v507_fuzz_symb_507))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-507-8048a0e
Size=2 Low=0 splitIndex=1 high=1
481 [State 0] Switching from state 0 to state 508
Copied 34928 (count=1)
Finalizing TB execution 508
s2e_dummyMainFunction
tcg-llvm-tb-507-8048a0e
481 [State 508] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 507 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb7700b: d2 b2 0f cd 80 b0                  shl [edx+0xb080cd0f], cl nextPC: 0xbfb77011
  2  3B @0xbfb77011: 01 4b cd                           add [ebx-0x33], ecx      nextPC: 0xbfb77014
  3  3B @0xbfb77014: 80 e8 e8                           sub al, 0xe8             nextPC: 0xbfb77017
  4  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
481 [State 508] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
481 [State 508] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
481 [State 508] Terminating state 508 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
481 [State 508] Switching from state 508 to state 0
Copied 34928 (count=1)
Deleting state 508 0x0x2b5a0a90
Firing timer event
481 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 507
>> fuzzInit: datum forking for value 508
>> fuzzInit: datum forking for value 508
482 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 508)
        (ReadLSB w32 0 v508_fuzz_symb_508)))
    state 509 with condition (Not (Eq false
         (Eq (w32 508)
             (ReadLSB w32 0 v508_fuzz_symb_508))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-508-8048a0e
Size=2 Low=0 splitIndex=1 high=1
482 [State 0] Switching from state 0 to state 509
Copied 34928 (count=1)
Finalizing TB execution 509
s2e_dummyMainFunction
tcg-llvm-tb-508-8048a0e
482 [State 509] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 508 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  2  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 509] CPU dump
EAX=0xbfb7700c
EBX=0xbfb77010
ECX=0xbfb76408
EDX=0xb770030f
ESI=0x4
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216470028:0xbfb7700c
482 [State 509] Terminating state 509 with message 'eliminated this false positive, out of range syscall number found at eip'
482 [State 509] Switching from state 509 to state 0
Copied 34928 (count=1)
Deleting state 509 0x0x2b5a0a90
482 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 508
>> fuzzInit: datum forking for value 509
>> fuzzInit: datum forking for value 509
482 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 509)
        (ReadLSB w32 0 v509_fuzz_symb_509)))
    state 510 with condition (Not (Eq false
         (Eq (w32 509)
             (ReadLSB w32 0 v509_fuzz_symb_509))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-509-8048a0e
Size=2 Low=0 splitIndex=1 high=1
482 [State 0] Switching from state 0 to state 510
Copied 34928 (count=1)
Finalizing TB execution 510
s2e_dummyMainFunction
tcg-llvm-tb-509-8048a0e
Firing timer event
482 [State 510] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 509 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7700d: 0f cd                              bswap ebp                nextPC: 0xbfb7700f
  2  7B @0xbfb7700f: 80 b0 01 4b cd 80 e8               xor byte [eax+0x80cd4b01], 0xe8 nextPC: 0xbfb77016
  3  5B @0xbfb77016: e8 ff ff ff 48                     call 0x49000004          nextPC: 0x08b7701a
483 [State 510] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb77016, disasm in debug.
  1  5B @0xbfb77016: e8 ff ff ff 48                     call 0x49000004          nextPC: 0x08b7701a
483 [State 510] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
483 [State 510] Terminating state 510 with message 'eliminated a state that is at unexpected location'
483 [State 510] Switching from state 510 to state 0
Copied 34928 (count=1)
Deleting state 510 0x0x2b74f2f0
483 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 509
>> fuzzInit: datum forking for value 510
>> fuzzInit: datum forking for value 510
483 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 510)
        (ReadLSB w32 0 v510_fuzz_symb_510)))
    state 511 with condition (Not (Eq false
         (Eq (w32 510)
             (ReadLSB w32 0 v510_fuzz_symb_510))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-510-8048a0e
Size=2 Low=0 splitIndex=1 high=1
483 [State 0] Switching from state 0 to state 511
Copied 34928 (count=1)
Finalizing TB execution 511
s2e_dummyMainFunction
tcg-llvm-tb-510-8048a0e
483 [State 511] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 510 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 511] CPU dump
EAX=0xbfb7700e
EBX=0xbfb77010
ECX=0xbfb76408
EDX=0xb7700340
ESI=0x2
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3216470030:0xbfb7700e
483 [State 511] Terminating state 511 with message 'eliminated this false positive, out of range syscall number found at eip'
483 [State 511] Switching from state 511 to state 0
Copied 34928 (count=1)
Deleting state 511 0x0x2b74f2f0
484 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 510
>> fuzzInit: datum forking for value 511
>> fuzzInit: datum forking for value 511
484 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 511)
        (ReadLSB w32 0 v511_fuzz_symb_511)))
    state 512 with condition (Not (Eq false
         (Eq (w32 511)
             (ReadLSB w32 0 v511_fuzz_symb_511))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-511-8048a0e
Size=2 Low=0 splitIndex=1 high=1
484 [State 0] Switching from state 0 to state 512
Copied 34928 (count=1)
Finalizing TB execution 512
s2e_dummyMainFunction
tcg-llvm-tb-511-8048a0e
484 [State 512] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 511 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  7B @0xbfb7700f: 80 b0 01 4b cd 80 e8               xor byte [eax+0x80cd4b01], 0xe8 nextPC: 0xbfb77016
  2  5B @0xbfb77016: e8 ff ff ff 48                     call 0x49000004          nextPC: 0x08b7701a
484 [State 512] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb77016, disasm in debug.
  1  5B @0xbfb77016: e8 ff ff ff 48                     call 0x49000004          nextPC: 0x08b7701a
484 [State 512] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
484 [State 512] Terminating state 512 with message 'eliminated a state that is at unexpected location'
484 [State 512] Switching from state 512 to state 0
Copied 34928 (count=1)
Deleting state 512 0x0x2b74f2f0
Firing timer event
484 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 511
>> fuzzInit: datum forking for value 512
>> fuzzInit: datum forking for value 512
485 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 512)
        (ReadLSB w32 0 v512_fuzz_symb_512)))
    state 513 with condition (Not (Eq false
         (Eq (w32 512)
             (ReadLSB w32 0 v512_fuzz_symb_512))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-512-8048a0e
Size=2 Low=0 splitIndex=1 high=1
485 [State 0] Switching from state 0 to state 513
Copied 34928 (count=1)
Finalizing TB execution 513
s2e_dummyMainFunction
tcg-llvm-tb-512-8048a0e
485 [State 513] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 512 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77010: b0 01                              mov al, 0x1              nextPC: 0xbfb77012
  2  1B @0xbfb77012: 4b                                 dec ebx                  nextPC: 0xbfb77013
  3  2B @0xbfb77013: cd 80                              int 0x80                 nextPC: 0xbfb77015
[State 513] CPU dump
EAX=0xbfb77001
EBX=0xbfb7700f
ECX=0xbfb76408
EDX=0xb7700340
ESI=0x0
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall insn found in memory range. It's postload, pid, in range, yet not eip-2, syscall 32164700170xbfb77001 at addr 0xbfb77013 from pid: 86716416
485 [State 513] Terminating state 513 with message 'wrong syscall found in memory range'
485 [State 513] Switching from state 513 to state 0
Copied 34928 (count=1)
Deleting state 513 0x0x2b7da740
485 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 512
>> fuzzInit: datum forking for value 513
>> fuzzInit: datum forking for value 513
486 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 513)
        (ReadLSB w32 0 v513_fuzz_symb_513)))
    state 514 with condition (Not (Eq false
         (Eq (w32 513)
             (ReadLSB w32 0 v513_fuzz_symb_513))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-513-8048a0e
Size=2 Low=0 splitIndex=1 high=1
486 [State 0] Switching from state 0 to state 514
Copied 34928 (count=1)
Finalizing TB execution 514
s2e_dummyMainFunction
tcg-llvm-tb-513-8048a0e
Firing timer event
486 [State 514] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 513 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77011: 01 4b cd                           add [ebx-0x33], ecx      nextPC: 0xbfb77014
  2  3B @0xbfb77014: 80 e8 e8                           sub al, 0xe8             nextPC: 0xbfb77017
  3  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
486 [State 514] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
486 [State 514] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
486 [State 514] Terminating state 514 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
486 [State 514] Switching from state 514 to state 0
Copied 34928 (count=1)
Deleting state 514 0x0x2b7da740
486 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 513
>> fuzzInit: datum forking for value 514
>> fuzzInit: datum forking for value 514
486 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 514)
        (ReadLSB w32 0 v514_fuzz_symb_514)))
    state 515 with condition (Not (Eq false
         (Eq (w32 514)
             (ReadLSB w32 0 v514_fuzz_symb_514))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-514-8048a0e
Size=2 Low=0 splitIndex=1 high=1
486 [State 0] Switching from state 0 to state 515
Copied 34928 (count=1)
Finalizing TB execution 515
s2e_dummyMainFunction
tcg-llvm-tb-514-8048a0e
487 [State 515] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 514 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb77012: 4b                                 dec ebx                  nextPC: 0xbfb77013
  2  2B @0xbfb77013: cd 80                              int 0x80                 nextPC: 0xbfb77015
[State 515] CPU dump
EAX=0xbfb77012
EBX=0xbfb7700f
ECX=0xbfb76408
EDX=0xb7700340
ESI=0xfffffffe
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall insn found in memory range. It's postload, pid, in range, yet not eip-2, syscall 32164700340xbfb77012 at addr 0xbfb77013 from pid: 86716416
487 [State 515] Terminating state 515 with message 'wrong syscall found in memory range'
487 [State 515] Switching from state 515 to state 0
Copied 34928 (count=1)
Deleting state 515 0x0x2b7da740
487 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 514
>> fuzzInit: datum forking for value 515
>> fuzzInit: datum forking for value 515
487 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 515)
        (ReadLSB w32 0 v515_fuzz_symb_515)))
    state 516 with condition (Not (Eq false
         (Eq (w32 515)
             (ReadLSB w32 0 v515_fuzz_symb_515))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-515-8048a0e
Size=2 Low=0 splitIndex=1 high=1
487 [State 0] Switching from state 0 to state 516
Copied 34928 (count=1)
Finalizing TB execution 516
s2e_dummyMainFunction
tcg-llvm-tb-515-8048a0e
487 [State 516] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 515 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77013: cd 80                              int 0x80                 nextPC: 0xbfb77015
[State 516] CPU dump
EAX=0xbfb77013
EBX=0xbfb77010
ECX=0xbfb76408
EDX=0xb7700340
ESI=0xfffffffd
EDI=0x0
EBP=0xbfb76878
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb75fc29f
!! Wrong syscall insn found in memory range. It's postload, pid, in range, yet not eip-2, syscall 32164700350xbfb77013 at addr 0xbfb77013 from pid: 86716416
488 [State 516] Terminating state 516 with message 'wrong syscall found in memory range'
488 [State 516] Switching from state 516 to state 0
Copied 34928 (count=1)
Deleting state 516 0x0x2b7da740
Firing timer event
488 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 515
>> fuzzInit: datum forking for value 516
>> fuzzInit: datum forking for value 516
488 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 516)
        (ReadLSB w32 0 v516_fuzz_symb_516)))
    state 517 with condition (Not (Eq false
         (Eq (w32 516)
             (ReadLSB w32 0 v516_fuzz_symb_516))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-516-8048a0e
Size=2 Low=0 splitIndex=1 high=1
488 [State 0] Switching from state 0 to state 517
Copied 34928 (count=1)
Finalizing TB execution 517
s2e_dummyMainFunction
tcg-llvm-tb-516-8048a0e
488 [State 517] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 516 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77014: 80 e8 e8                           sub al, 0xe8             nextPC: 0xbfb77017
  2  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
488 [State 517] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
488 [State 517] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
488 [State 517] Terminating state 517 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
488 [State 517] Switching from state 517 to state 0
Copied 34928 (count=1)
Deleting state 517 0x0x2b7da740
489 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 516
>> fuzzInit: datum forking for value 517
>> fuzzInit: datum forking for value 517
489 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 517)
        (ReadLSB w32 0 v517_fuzz_symb_517)))
    state 518 with condition (Not (Eq false
         (Eq (w32 517)
             (ReadLSB w32 0 v517_fuzz_symb_517))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-517-8048a0e
Size=2 Low=0 splitIndex=1 high=1
489 [State 0] Switching from state 0 to state 518
Copied 34928 (count=1)
Finalizing TB execution 518
s2e_dummyMainFunction
tcg-llvm-tb-517-8048a0e
Firing timer event
489 [State 518] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 517 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
  2  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
  3  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
  4  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
  5  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
  6  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
  7  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
  8  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
  9  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
[State 518] CPU dump
EAX=0xc14537a8
EBX=0x57
ECX=0xc6175f54
EDX=0xc53d3f5c
ESI=0xc14534e0
EDI=0xc53d3f5c
EBP=0xc135f9c4
ESP=0xc6175f38
EIP=0xc103b194
CR2=0xb75fc29f
!! Wrong syscall number makes no sense (>512) 3242538920:0xc14537a8
489 [State 518] Terminating state 518 with message 'eliminated this false positive, out of range syscall number found at eip'
489 [State 518] Switching from state 518 to state 0
Copied 34928 (count=1)
Deleting state 518 0x0x2b7da740
489 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 517
>> fuzzInit: datum forking for value 518
>> fuzzInit: datum forking for value 518
490 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 518)
        (ReadLSB w32 0 v518_fuzz_symb_518)))
    state 519 with condition (Not (Eq false
         (Eq (w32 518)
             (ReadLSB w32 0 v518_fuzz_symb_518))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-518-8048a0e
Size=2 Low=0 splitIndex=1 high=1
490 [State 0] Switching from state 0 to state 519
Copied 34928 (count=1)
Finalizing TB execution 519
s2e_dummyMainFunction
tcg-llvm-tb-518-8048a0e
490 [State 519] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 518 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  5B @0xbfb77016: e8 ff ff ff 48                     call 0x49000004          nextPC: 0x08b7701a
490 [State 519] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77016, disasm in debug.
  1  5B @0xbfb77016: e8 ff ff ff 48                     call 0x49000004          nextPC: 0x08b7701a
490 [State 519] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
490 [State 519] Terminating state 519 with message 'eliminated a state that is at unexpected location'
490 [State 519] Switching from state 519 to state 0
Copied 34928 (count=1)
Deleting state 519 0x0x2b7da740
490 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 518
>> fuzzInit: datum forking for value 519
>> fuzzInit: datum forking for value 519
491 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 519)
        (ReadLSB w32 0 v519_fuzz_symb_519)))
    state 520 with condition (Not (Eq false
         (Eq (w32 519)
             (ReadLSB w32 0 v519_fuzz_symb_519))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-519-8048a0e
Size=2 Low=0 splitIndex=1 high=1
491 [State 0] Switching from state 0 to state 520
Copied 34928 (count=1)
Finalizing TB execution 520
s2e_dummyMainFunction
tcg-llvm-tb-519-8048a0e
491 [State 520] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 519 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
491 [State 520] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77017, disasm in debug.
  1  2B @0xbfb77017: ff ff                              invalid                  nextPC: 0xbfb77019
491 [State 520] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
491 [State 520] Terminating state 520 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
491 [State 520] Switching from state 520 to state 0
Copied 34928 (count=1)
Deleting state 520 0x0x2b7da740
491 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 519
>> fuzzInit: datum forking for value 520
>> fuzzInit: datum forking for value 520
492 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 520)
        (ReadLSB w32 0 v520_fuzz_symb_520)))
    state 521 with condition (Not (Eq false
         (Eq (w32 520)
             (ReadLSB w32 0 v520_fuzz_symb_520))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-520-8048a0e
Size=2 Low=0 splitIndex=1 high=1
492 [State 0] Switching from state 0 to state 521
Copied 34928 (count=1)
Finalizing TB execution 521
s2e_dummyMainFunction
tcg-llvm-tb-520-8048a0e
492 [State 521] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 520 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77018: ff ff                              invalid                  nextPC: 0xbfb7701a
492 [State 521] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77018, disasm in debug.
  1  2B @0xbfb77018: ff ff                              invalid                  nextPC: 0xbfb7701a
492 [State 521] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
492 [State 521] Terminating state 521 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
492 [State 521] Switching from state 521 to state 0
Copied 34928 (count=1)
Deleting state 521 0x0x2b636ee0
Firing timer event
492 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 520
>> fuzzInit: datum forking for value 521
>> fuzzInit: datum forking for value 521
492 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 521)
        (ReadLSB w32 0 v521_fuzz_symb_521)))
    state 522 with condition (Not (Eq false
         (Eq (w32 521)
             (ReadLSB w32 0 v521_fuzz_symb_521))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-521-8048a0e
Size=2 Low=0 splitIndex=1 high=1
492 [State 0] Switching from state 0 to state 522
Copied 34928 (count=1)
Finalizing TB execution 522
s2e_dummyMainFunction
tcg-llvm-tb-521-8048a0e
493 [State 522] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 521 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77019: ff 48 65                           dec dword [eax+0x65]     nextPC: 0xbfb7701c
  2  1B @0xbfb7701c: 6c                                 insb                     nextPC: 0xbfb7701d
  3  1B @0xbfb7701d: 6c                                 insb                     nextPC: 0xbfb7701e
  4  1B @0xbfb7701e: 6f                                 outsd                    nextPC: 0xbfb7701f
  5  2B @0xbfb7701f: 2c 20                              sub al, 0x20             nextPC: 0xbfb77021
  6  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
493 [State 522] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77021, disasm in debug.
  1  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
493 [State 522] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
493 [State 522] Terminating state 522 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
493 [State 522] Switching from state 522 to state 0
Copied 34928 (count=1)
Deleting state 522 0x0x2ba19f70
493 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 521
>> fuzzInit: datum forking for value 522
>> fuzzInit: datum forking for value 522
493 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 522)
        (ReadLSB w32 0 v522_fuzz_symb_522)))
    state 523 with condition (Not (Eq false
         (Eq (w32 522)
             (ReadLSB w32 0 v522_fuzz_symb_522))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-522-8048a0e
Size=2 Low=0 splitIndex=1 high=1
493 [State 0] Switching from state 0 to state 523
Copied 34928 (count=1)
Finalizing TB execution 523
s2e_dummyMainFunction
tcg-llvm-tb-522-8048a0e
Firing timer event
493 [State 523] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 522 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7701a: 48                                 dec eax                  nextPC: 0xbfb7701b
  2  2B @0xbfb7701b: 65 6c                              insb                     nextPC: 0xbfb7701d
  3  1B @0xbfb7701d: 6c                                 insb                     nextPC: 0xbfb7701e
  4  1B @0xbfb7701e: 6f                                 outsd                    nextPC: 0xbfb7701f
  5  2B @0xbfb7701f: 2c 20                              sub al, 0x20             nextPC: 0xbfb77021
  6  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
494 [State 523] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77021, disasm in debug.
  1  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
494 [State 523] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
494 [State 523] Terminating state 523 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
494 [State 523] Switching from state 523 to state 0
Copied 34928 (count=1)
Deleting state 523 0x0x2bbca950
494 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 522
>> fuzzInit: datum forking for value 523
>> fuzzInit: datum forking for value 523
494 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 523)
        (ReadLSB w32 0 v523_fuzz_symb_523)))
    state 524 with condition (Not (Eq false
         (Eq (w32 523)
             (ReadLSB w32 0 v523_fuzz_symb_523))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-523-8048a0e
Size=2 Low=0 splitIndex=1 high=1
494 [State 0] Switching from state 0 to state 524
Copied 34928 (count=1)
Finalizing TB execution 524
s2e_dummyMainFunction
tcg-llvm-tb-523-8048a0e
494 [State 524] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 523 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb7701b: 65 6c                              insb                     nextPC: 0xbfb7701d
  2  1B @0xbfb7701d: 6c                                 insb                     nextPC: 0xbfb7701e
  3  1B @0xbfb7701e: 6f                                 outsd                    nextPC: 0xbfb7701f
  4  2B @0xbfb7701f: 2c 20                              sub al, 0x20             nextPC: 0xbfb77021
  5  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
494 [State 524] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb77021, disasm in debug.
  1  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
494 [State 524] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
494 [State 524] Terminating state 524 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
494 [State 524] Switching from state 524 to state 0
Copied 34928 (count=1)
Deleting state 524 0x0x2bbca950
495 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 523
>> fuzzInit: datum forking for value 524
>> fuzzInit: datum forking for value 524
495 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 524)
        (ReadLSB w32 0 v524_fuzz_symb_524)))
    state 525 with condition (Not (Eq false
         (Eq (w32 524)
             (ReadLSB w32 0 v524_fuzz_symb_524))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-524-8048a0e
Size=2 Low=0 splitIndex=1 high=1
495 [State 0] Switching from state 0 to state 525
Copied 34928 (count=1)
Finalizing TB execution 525
s2e_dummyMainFunction
tcg-llvm-tb-524-8048a0e
495 [State 525] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 524 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7701c: 6c                                 insb                     nextPC: 0xbfb7701d
  2  1B @0xbfb7701d: 6c                                 insb                     nextPC: 0xbfb7701e
  3  1B @0xbfb7701e: 6f                                 outsd                    nextPC: 0xbfb7701f
  4  2B @0xbfb7701f: 2c 20                              sub al, 0x20             nextPC: 0xbfb77021
  5  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
495 [State 525] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb77021, disasm in debug.
  1  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
495 [State 525] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
495 [State 525] Terminating state 525 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
495 [State 525] Switching from state 525 to state 0
Copied 34928 (count=1)
Deleting state 525 0x0x2bbca950
Firing timer event
495 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 524
>> fuzzInit: datum forking for value 525
>> fuzzInit: datum forking for value 525
496 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 525)
        (ReadLSB w32 0 v525_fuzz_symb_525)))
    state 526 with condition (Not (Eq false
         (Eq (w32 525)
             (ReadLSB w32 0 v525_fuzz_symb_525))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-525-8048a0e
Size=2 Low=0 splitIndex=1 high=1
496 [State 0] Switching from state 0 to state 526
Copied 34928 (count=1)
Finalizing TB execution 526
s2e_dummyMainFunction
tcg-llvm-tb-525-8048a0e
496 [State 526] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 525 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7701d: 6c                                 insb                     nextPC: 0xbfb7701e
  2  1B @0xbfb7701e: 6f                                 outsd                    nextPC: 0xbfb7701f
  3  2B @0xbfb7701f: 2c 20                              sub al, 0x20             nextPC: 0xbfb77021
  4  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
496 [State 526] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb77021, disasm in debug.
  1  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
496 [State 526] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
496 [State 526] Terminating state 526 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
496 [State 526] Switching from state 526 to state 0
Copied 34928 (count=1)
Deleting state 526 0x0x2bbca950
496 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 525
>> fuzzInit: datum forking for value 526
>> fuzzInit: datum forking for value 526
497 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 526)
        (ReadLSB w32 0 v526_fuzz_symb_526)))
    state 527 with condition (Not (Eq false
         (Eq (w32 526)
             (ReadLSB w32 0 v526_fuzz_symb_526))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-526-8048a0e
Size=2 Low=0 splitIndex=1 high=1
497 [State 0] Switching from state 0 to state 527
Copied 34928 (count=1)
Finalizing TB execution 527
s2e_dummyMainFunction
tcg-llvm-tb-526-8048a0e
Firing timer event
497 [State 527] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 526 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7701e: 6f                                 outsd                    nextPC: 0xbfb7701f
  2  2B @0xbfb7701f: 2c 20                              sub al, 0x20             nextPC: 0xbfb77021
  3  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
497 [State 527] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb77021, disasm in debug.
  1  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
497 [State 527] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
497 [State 527] Terminating state 527 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
497 [State 527] Switching from state 527 to state 0
Copied 34928 (count=1)
Deleting state 527 0x0x2bbca950
497 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 526
>> fuzzInit: datum forking for value 527
>> fuzzInit: datum forking for value 527
498 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 527)
        (ReadLSB w32 0 v527_fuzz_symb_527)))
    state 528 with condition (Not (Eq false
         (Eq (w32 527)
             (ReadLSB w32 0 v527_fuzz_symb_527))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-527-8048a0e
Size=2 Low=0 splitIndex=1 high=1
498 [State 0] Switching from state 0 to state 528
Copied 34928 (count=1)
Finalizing TB execution 528
s2e_dummyMainFunction
tcg-llvm-tb-527-8048a0e
Firing timer event
498 [State 528] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 527 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7701f: 2c 20                              sub al, 0x20             nextPC: 0xbfb77021
  2  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
  3  2B @0xbfb77023: 72 6c                              jb 0x6e                  nextPC: 0xbfb77025 jmpPc: 0xbfb77091
!!* pc != prev insn's next_pc; 0xbfb77091 != bfb77025
  4  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
  5  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
  6  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
  7  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
  8  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
  9  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 10  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 11  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 12  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
498 [State 528] @0x080499bf, left buffer range after 12 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
498 [State 528] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
498 [State 528] Terminating state 528 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
498 [State 528] Switching from state 528 to state 0
Copied 34928 (count=1)
Deleting state 528 0x0x2bbca950
498 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 527
>> fuzzInit: datum forking for value 528
>> fuzzInit: datum forking for value 528
498 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 528)
        (ReadLSB w32 0 v528_fuzz_symb_528)))
    state 529 with condition (Not (Eq false
         (Eq (w32 528)
             (ReadLSB w32 0 v528_fuzz_symb_528))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-528-8048a0e
Size=2 Low=0 splitIndex=1 high=1
498 [State 0] Switching from state 0 to state 529
Copied 34928 (count=1)
Finalizing TB execution 529
s2e_dummyMainFunction
tcg-llvm-tb-528-8048a0e
499 [State 529] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 528 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77020: 20 77 6f                           and [edi+0x6f], dh       nextPC: 0xbfb77023
  2  2B @0xbfb77023: 72 6c                              jb 0x6e                  nextPC: 0xbfb77025 jmpPc: 0xbfb77091
499 [State 529] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb77023, disasm in debug.
  1  2B @0xbfb77023: 72 6c                              jb 0x6e                  nextPC: 0xbfb77025 jmpPc: 0xbfb77091
499 [State 529] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
499 [State 529] Terminating state 529 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
499 [State 529] Switching from state 529 to state 0
Copied 34928 (count=1)
Deleting state 529 0x0x2bbca950
Firing timer event
499 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 528
>> fuzzInit: datum forking for value 529
>> fuzzInit: datum forking for value 529
499 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 529)
        (ReadLSB w32 0 v529_fuzz_symb_529)))
    state 530 with condition (Not (Eq false
         (Eq (w32 529)
             (ReadLSB w32 0 v529_fuzz_symb_529))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-529-8048a0e
Size=2 Low=0 splitIndex=1 high=1
499 [State 0] Switching from state 0 to state 530
Copied 34928 (count=1)
Finalizing TB execution 530
s2e_dummyMainFunction
tcg-llvm-tb-529-8048a0e
499 [State 530] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 529 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77021: 77 6f                              ja 0x71                  nextPC: 0xbfb77023 jmpPc: 0xbfb77092
!!* pc != prev insn's next_pc; 0xbfb77092 != bfb77023
  2  2B @0xbfb77092: 00 00                              add [eax], al            nextPC: 0xbfb77094
  3  2B @0xbfb77094: 00 00                              add [eax], al            nextPC: 0xbfb77096
  4  2B @0xbfb77096: 00 00                              add [eax], al            nextPC: 0xbfb77098
  5  2B @0xbfb77098: 00 00                              add [eax], al            nextPC: 0xbfb7709a
  6  2B @0xbfb7709a: 00 00                              add [eax], al            nextPC: 0xbfb7709c
  7  2B @0xbfb7709c: 00 00                              add [eax], al            nextPC: 0xbfb7709e
  8  2B @0xbfb7709e: 28 d7                              sub bh, dl               nextPC: 0xbfb770a0
  9  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
500 [State 530] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
500 [State 530] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
500 [State 530] Terminating state 530 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
500 [State 530] Switching from state 530 to state 0
Copied 34928 (count=1)
Deleting state 530 0x0x2bbca950
500 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 529
>> fuzzInit: datum forking for value 530
>> fuzzInit: datum forking for value 530
500 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 530)
        (ReadLSB w32 0 v530_fuzz_symb_530)))
    state 531 with condition (Not (Eq false
         (Eq (w32 530)
             (ReadLSB w32 0 v530_fuzz_symb_530))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-530-8048a0e
Size=2 Low=0 splitIndex=1 high=1
500 [State 0] Switching from state 0 to state 531
Copied 34928 (count=1)
Finalizing TB execution 531
s2e_dummyMainFunction
tcg-llvm-tb-530-8048a0e
Firing timer event
500 [State 531] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 530 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77022: 6f                                 outsd                    nextPC: 0xbfb77023
  2  2B @0xbfb77023: 72 6c                              jb 0x6e                  nextPC: 0xbfb77025 jmpPc: 0xbfb77091
500 [State 531] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb77023, disasm in debug.
  1  2B @0xbfb77023: 72 6c                              jb 0x6e                  nextPC: 0xbfb77025 jmpPc: 0xbfb77091
500 [State 531] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
500 [State 531] Terminating state 531 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
500 [State 531] Switching from state 531 to state 0
Copied 34928 (count=1)
Deleting state 531 0x0x2bbca950
501 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 530
>> fuzzInit: datum forking for value 531
>> fuzzInit: datum forking for value 531
501 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 531)
        (ReadLSB w32 0 v531_fuzz_symb_531)))
    state 532 with condition (Not (Eq false
         (Eq (w32 531)
             (ReadLSB w32 0 v531_fuzz_symb_531))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-531-8048a0e
Size=2 Low=0 splitIndex=1 high=1
501 [State 0] Switching from state 0 to state 532
Copied 34928 (count=1)
Finalizing TB execution 532
s2e_dummyMainFunction
tcg-llvm-tb-531-8048a0e
501 [State 532] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 531 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb77023: 72 6c                              jb 0x6e                  nextPC: 0xbfb77025 jmpPc: 0xbfb77091
  2  3B @0xbfb77025: 64 21 0a                           and [fs:edx], ecx        nextPC: 0xbfb77028
  3  5B @0xbfb77028: 0d 00 00 00 00                     or eax, 0x0              nextPC: 0xbfb7702d
  4  2B @0xbfb7702d: 00 00                              add [eax], al            nextPC: 0xbfb7702f
  5  2B @0xbfb7702f: 00 00                              add [eax], al            nextPC: 0xbfb77031
  6  2B @0xbfb77031: 00 00                              add [eax], al            nextPC: 0xbfb77033
  7  2B @0xbfb77033: 00 00                              add [eax], al            nextPC: 0xbfb77035
  8  2B @0xbfb77035: 00 00                              add [eax], al            nextPC: 0xbfb77037
  9  2B @0xbfb77037: 00 00                              add [eax], al            nextPC: 0xbfb77039
 10  6B @0xbfb77039: 00 90 90 90 90 90                  add [eax+0x90909090], dl nextPC: 0xbfb7703f
 11  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
 12  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
 13  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
 14  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
 15  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
501 [State 532] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
501 [State 532] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
501 [State 532] Terminating state 532 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
501 [State 532] Switching from state 532 to state 0
Copied 34928 (count=1)
Deleting state 532 0x0x2bfdf090
502 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 531
>> fuzzInit: datum forking for value 532
>> fuzzInit: datum forking for value 532
502 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 532)
        (ReadLSB w32 0 v532_fuzz_symb_532)))
    state 533 with condition (Not (Eq false
         (Eq (w32 532)
             (ReadLSB w32 0 v532_fuzz_symb_532))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-532-8048a0e
Size=2 Low=0 splitIndex=1 high=1
502 [State 0] Switching from state 0 to state 533
Copied 34928 (count=1)
Finalizing TB execution 533
s2e_dummyMainFunction
tcg-llvm-tb-532-8048a0e
502 [State 533] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 532 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb77024: 6c                                 insb                     nextPC: 0xbfb77025
  2  3B @0xbfb77025: 64 21 0a                           and [fs:edx], ecx        nextPC: 0xbfb77028
  3  5B @0xbfb77028: 0d 00 00 00 00                     or eax, 0x0              nextPC: 0xbfb7702d
  4  2B @0xbfb7702d: 00 00                              add [eax], al            nextPC: 0xbfb7702f
  5  2B @0xbfb7702f: 00 00                              add [eax], al            nextPC: 0xbfb77031
  6  2B @0xbfb77031: 00 00                              add [eax], al            nextPC: 0xbfb77033
  7  2B @0xbfb77033: 00 00                              add [eax], al            nextPC: 0xbfb77035
  8  2B @0xbfb77035: 00 00                              add [eax], al            nextPC: 0xbfb77037
  9  2B @0xbfb77037: 00 00                              add [eax], al            nextPC: 0xbfb77039
 10  6B @0xbfb77039: 00 90 90 90 90 90                  add [eax+0x90909090], dl nextPC: 0xbfb7703f
 11  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
 12  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
 13  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
 14  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
 15  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
502 [State 533] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
502 [State 533] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
502 [State 533] Terminating state 533 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
502 [State 533] Switching from state 533 to state 0
Copied 34928 (count=1)
Deleting state 533 0x0x2beac890
502 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 532
>> fuzzInit: datum forking for value 533
>> fuzzInit: datum forking for value 533
503 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 533)
        (ReadLSB w32 0 v533_fuzz_symb_533)))
    state 534 with condition (Not (Eq false
         (Eq (w32 533)
             (ReadLSB w32 0 v533_fuzz_symb_533))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-533-8048a0e
Size=2 Low=0 splitIndex=1 high=1
503 [State 0] Switching from state 0 to state 534
Copied 34928 (count=1)
Finalizing TB execution 534
s2e_dummyMainFunction
tcg-llvm-tb-533-8048a0e
503 [State 534] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 533 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77025: 64 21 0a                           and [fs:edx], ecx        nextPC: 0xbfb77028
  2  5B @0xbfb77028: 0d 00 00 00 00                     or eax, 0x0              nextPC: 0xbfb7702d
  3  2B @0xbfb7702d: 00 00                              add [eax], al            nextPC: 0xbfb7702f
  4  2B @0xbfb7702f: 00 00                              add [eax], al            nextPC: 0xbfb77031
  5  2B @0xbfb77031: 00 00                              add [eax], al            nextPC: 0xbfb77033
  6  2B @0xbfb77033: 00 00                              add [eax], al            nextPC: 0xbfb77035
  7  2B @0xbfb77035: 00 00                              add [eax], al            nextPC: 0xbfb77037
  8  2B @0xbfb77037: 00 00                              add [eax], al            nextPC: 0xbfb77039
  9  6B @0xbfb77039: 00 90 90 90 90 90                  add [eax+0x90909090], dl nextPC: 0xbfb7703f
 10  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
 11  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
 12  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
 13  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
 14  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
Firing timer event
503 [State 534] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
503 [State 534] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
503 [State 534] Terminating state 534 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
503 [State 534] Switching from state 534 to state 0
Copied 34928 (count=1)
Deleting state 534 0x0x2bfb4600
503 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 533
>> fuzzInit: datum forking for value 534
>> fuzzInit: datum forking for value 534
504 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 534)
        (ReadLSB w32 0 v534_fuzz_symb_534)))
    state 535 with condition (Not (Eq false
         (Eq (w32 534)
             (ReadLSB w32 0 v534_fuzz_symb_534))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-534-8048a0e
Size=2 Low=0 splitIndex=1 high=1
504 [State 0] Switching from state 0 to state 535
Copied 34928 (count=1)
Finalizing TB execution 535
s2e_dummyMainFunction
tcg-llvm-tb-534-8048a0e
504 [State 535] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 534 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77026: 21 0a                              and [edx], ecx           nextPC: 0xbfb77028
  2  5B @0xbfb77028: 0d 00 00 00 00                     or eax, 0x0              nextPC: 0xbfb7702d
  3  2B @0xbfb7702d: 00 00                              add [eax], al            nextPC: 0xbfb7702f
  4  2B @0xbfb7702f: 00 00                              add [eax], al            nextPC: 0xbfb77031
  5  2B @0xbfb77031: 00 00                              add [eax], al            nextPC: 0xbfb77033
  6  2B @0xbfb77033: 00 00                              add [eax], al            nextPC: 0xbfb77035
  7  2B @0xbfb77035: 00 00                              add [eax], al            nextPC: 0xbfb77037
  8  2B @0xbfb77037: 00 00                              add [eax], al            nextPC: 0xbfb77039
  9  6B @0xbfb77039: 00 90 90 90 90 90                  add [eax+0x90909090], dl nextPC: 0xbfb7703f
 10  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
 11  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
 12  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
 13  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
 14  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
504 [State 535] @0x080499bf, left buffer range after 14 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
504 [State 535] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
504 [State 535] Terminating state 535 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
504 [State 535] Switching from state 535 to state 0
Copied 34928 (count=1)
Deleting state 535 0x0x2bfb4600
504 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 534
>> fuzzInit: datum forking for value 535
>> fuzzInit: datum forking for value 535
504 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 535)
        (ReadLSB w32 0 v535_fuzz_symb_535)))
    state 536 with condition (Not (Eq false
         (Eq (w32 535)
             (ReadLSB w32 0 v535_fuzz_symb_535))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-535-8048a0e
Size=2 Low=0 splitIndex=1 high=1
504 [State 0] Switching from state 0 to state 536
Copied 34928 (count=1)
Finalizing TB execution 536
s2e_dummyMainFunction
tcg-llvm-tb-535-8048a0e
Firing timer event
505 [State 536] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 535 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb77027: 0a 0d 00 00 00 00                  or cl, [0x0]             nextPC: 0xbfb7702d
  2  2B @0xbfb7702d: 00 00                              add [eax], al            nextPC: 0xbfb7702f
  3  2B @0xbfb7702f: 00 00                              add [eax], al            nextPC: 0xbfb77031
  4  2B @0xbfb77031: 00 00                              add [eax], al            nextPC: 0xbfb77033
  5  2B @0xbfb77033: 00 00                              add [eax], al            nextPC: 0xbfb77035
  6  2B @0xbfb77035: 00 00                              add [eax], al            nextPC: 0xbfb77037
  7  2B @0xbfb77037: 00 00                              add [eax], al            nextPC: 0xbfb77039
  8  6B @0xbfb77039: 00 90 90 90 90 90                  add [eax+0x90909090], dl nextPC: 0xbfb7703f
  9  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
 10  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
 11  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
 12  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
 13  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
505 [State 536] @0x080499bf, left buffer range after 13 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
505 [State 536] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
505 [State 536] Terminating state 536 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
505 [State 536] Switching from state 536 to state 0
Copied 34928 (count=1)
Deleting state 536 0x0x2bfb4600
505 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 535
>> fuzzInit: datum forking for value 536
>> fuzzInit: datum forking for value 536
505 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 536)
        (ReadLSB w32 0 v536_fuzz_symb_536)))
    state 537 with condition (Not (Eq false
         (Eq (w32 536)
             (ReadLSB w32 0 v536_fuzz_symb_536))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-536-8048a0e
Size=2 Low=0 splitIndex=1 high=1
505 [State 0] Switching from state 0 to state 537
Copied 34928 (count=1)
Finalizing TB execution 537
s2e_dummyMainFunction
tcg-llvm-tb-536-8048a0e
505 [State 537] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 536 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  5B @0xbfb77028: 0d 00 00 00 00                     or eax, 0x0              nextPC: 0xbfb7702d
  2  2B @0xbfb7702d: 00 00                              add [eax], al            nextPC: 0xbfb7702f
  3  2B @0xbfb7702f: 00 00                              add [eax], al            nextPC: 0xbfb77031
  4  2B @0xbfb77031: 00 00                              add [eax], al            nextPC: 0xbfb77033
  5  2B @0xbfb77033: 00 00                              add [eax], al            nextPC: 0xbfb77035
  6  2B @0xbfb77035: 00 00                              add [eax], al            nextPC: 0xbfb77037
  7  2B @0xbfb77037: 00 00                              add [eax], al            nextPC: 0xbfb77039
  8  6B @0xbfb77039: 00 90 90 90 90 90                  add [eax+0x90909090], dl nextPC: 0xbfb7703f
  9  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
 10  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
 11  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
 12  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
 13  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
506 [State 537] @0x080499bf, left buffer range after 13 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
506 [State 537] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
506 [State 537] Terminating state 537 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
506 [State 537] Switching from state 537 to state 0
Copied 34928 (count=1)
Deleting state 537 0x0x2bfb4600
506 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 536
>> fuzzInit: datum forking for value 537
>> fuzzInit: datum forking for value 537
506 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 537)
        (ReadLSB w32 0 v537_fuzz_symb_537)))
    state 538 with condition (Not (Eq false
         (Eq (w32 537)
             (ReadLSB w32 0 v537_fuzz_symb_537))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-537-8048a0e
Size=2 Low=0 splitIndex=1 high=1
506 [State 0] Switching from state 0 to state 538
Copied 34928 (count=1)
Finalizing TB execution 538
s2e_dummyMainFunction
tcg-llvm-tb-537-8048a0e
506 [State 538] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 537 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
506 [State 538] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77029: 00 00             add [eax], al           
506 [State 538] Terminating state 538 with message 'eliminated a state with an impossible first instruction'
506 [State 538] Switching from state 538 to state 0
Copied 34928 (count=1)
Deleting state 538 0x0x2bfb4600
Firing timer event
507 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 537
>> fuzzInit: datum forking for value 538
>> fuzzInit: datum forking for value 538
507 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 538)
        (ReadLSB w32 0 v538_fuzz_symb_538)))
    state 539 with condition (Not (Eq false
         (Eq (w32 538)
             (ReadLSB w32 0 v538_fuzz_symb_538))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-538-8048a0e
Size=2 Low=0 splitIndex=1 high=1
507 [State 0] Switching from state 0 to state 539
Copied 34928 (count=1)
Finalizing TB execution 539
s2e_dummyMainFunction
tcg-llvm-tb-538-8048a0e
507 [State 539] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 538 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
507 [State 539] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7702a: 00 00             add [eax], al           
507 [State 539] Terminating state 539 with message 'eliminated a state with an impossible first instruction'
507 [State 539] Switching from state 539 to state 0
Copied 34928 (count=1)
Deleting state 539 0x0x2bfb4600
507 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 538
>> fuzzInit: datum forking for value 539
>> fuzzInit: datum forking for value 539
508 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 539)
        (ReadLSB w32 0 v539_fuzz_symb_539)))
    state 540 with condition (Not (Eq false
         (Eq (w32 539)
             (ReadLSB w32 0 v539_fuzz_symb_539))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-539-8048a0e
Size=2 Low=0 splitIndex=1 high=1
508 [State 0] Switching from state 0 to state 540
Copied 34928 (count=1)
Finalizing TB execution 540
s2e_dummyMainFunction
tcg-llvm-tb-539-8048a0e
Firing timer event
508 [State 540] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 539 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
508 [State 540] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7702b: 00 00             add [eax], al           
508 [State 540] Terminating state 540 with message 'eliminated a state with an impossible first instruction'
508 [State 540] Switching from state 540 to state 0
Copied 34928 (count=1)
Deleting state 540 0x0x2bfb4600
508 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 539
>> fuzzInit: datum forking for value 540
>> fuzzInit: datum forking for value 540
508 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 540)
        (ReadLSB w32 0 v540_fuzz_symb_540)))
    state 541 with condition (Not (Eq false
         (Eq (w32 540)
             (ReadLSB w32 0 v540_fuzz_symb_540))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-540-8048a0e
Size=2 Low=0 splitIndex=1 high=1
508 [State 0] Switching from state 0 to state 541
Copied 34928 (count=1)
Finalizing TB execution 541
s2e_dummyMainFunction
tcg-llvm-tb-540-8048a0e
509 [State 541] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 540 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
509 [State 541] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7702c: 00 00             add [eax], al           
509 [State 541] Terminating state 541 with message 'eliminated a state with an impossible first instruction'
509 [State 541] Switching from state 541 to state 0
Copied 34928 (count=1)
Deleting state 541 0x0x2bfb4600
509 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 540
>> fuzzInit: datum forking for value 541
>> fuzzInit: datum forking for value 541
509 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 541)
        (ReadLSB w32 0 v541_fuzz_symb_541)))
    state 542 with condition (Not (Eq false
         (Eq (w32 541)
             (ReadLSB w32 0 v541_fuzz_symb_541))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-541-8048a0e
Size=2 Low=0 splitIndex=1 high=1
509 [State 0] Switching from state 0 to state 542
Copied 34928 (count=1)
Finalizing TB execution 542
s2e_dummyMainFunction
tcg-llvm-tb-541-8048a0e
509 [State 542] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 541 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
510 [State 542] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7702d: 00 00             add [eax], al           
510 [State 542] Terminating state 542 with message 'eliminated a state with an impossible first instruction'
510 [State 542] Switching from state 542 to state 0
Copied 34928 (count=1)
Deleting state 542 0x0x2bfb4600
Firing timer event
510 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 541
>> fuzzInit: datum forking for value 542
>> fuzzInit: datum forking for value 542
510 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 542)
        (ReadLSB w32 0 v542_fuzz_symb_542)))
    state 543 with condition (Not (Eq false
         (Eq (w32 542)
             (ReadLSB w32 0 v542_fuzz_symb_542))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-542-8048a0e
Size=2 Low=0 splitIndex=1 high=1
510 [State 0] Switching from state 0 to state 543
Copied 34928 (count=1)
Finalizing TB execution 543
s2e_dummyMainFunction
tcg-llvm-tb-542-8048a0e
510 [State 543] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 542 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
510 [State 543] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7702e: 00 00             add [eax], al           
510 [State 543] Terminating state 543 with message 'eliminated a state with an impossible first instruction'
510 [State 543] Switching from state 543 to state 0
Copied 34928 (count=1)
Deleting state 543 0x0x2bfb4600
511 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 542
>> fuzzInit: datum forking for value 543
>> fuzzInit: datum forking for value 543
511 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 543)
        (ReadLSB w32 0 v543_fuzz_symb_543)))
    state 544 with condition (Not (Eq false
         (Eq (w32 543)
             (ReadLSB w32 0 v543_fuzz_symb_543))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-543-8048a0e
Size=2 Low=0 splitIndex=1 high=1
511 [State 0] Switching from state 0 to state 544
Copied 34928 (count=1)
Finalizing TB execution 544
s2e_dummyMainFunction
tcg-llvm-tb-543-8048a0e
Firing timer event
511 [State 544] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 543 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
511 [State 544] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7702f: 00 00             add [eax], al           
511 [State 544] Terminating state 544 with message 'eliminated a state with an impossible first instruction'
511 [State 544] Switching from state 544 to state 0
Copied 34928 (count=1)
Deleting state 544 0x0x2bfb4600
512 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 543
>> fuzzInit: datum forking for value 544
>> fuzzInit: datum forking for value 544
512 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 544)
        (ReadLSB w32 0 v544_fuzz_symb_544)))
    state 545 with condition (Not (Eq false
         (Eq (w32 544)
             (ReadLSB w32 0 v544_fuzz_symb_544))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-544-8048a0e
Size=2 Low=0 splitIndex=1 high=1
512 [State 0] Switching from state 0 to state 545
Copied 34928 (count=1)
Finalizing TB execution 545
s2e_dummyMainFunction
tcg-llvm-tb-544-8048a0e
512 [State 545] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 544 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
512 [State 545] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77030: 00 00             add [eax], al           
512 [State 545] Terminating state 545 with message 'eliminated a state with an impossible first instruction'
512 [State 545] Switching from state 545 to state 0
Copied 34928 (count=1)
Deleting state 545 0x0x2bfb4600
Firing timer event
512 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 544
>> fuzzInit: datum forking for value 545
>> fuzzInit: datum forking for value 545
513 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 545)
        (ReadLSB w32 0 v545_fuzz_symb_545)))
    state 546 with condition (Not (Eq false
         (Eq (w32 545)
             (ReadLSB w32 0 v545_fuzz_symb_545))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-545-8048a0e
Size=2 Low=0 splitIndex=1 high=1
513 [State 0] Switching from state 0 to state 546
Copied 34928 (count=1)
Finalizing TB execution 546
s2e_dummyMainFunction
tcg-llvm-tb-545-8048a0e
513 [State 546] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 545 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
513 [State 546] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77031: 00 00             add [eax], al           
513 [State 546] Terminating state 546 with message 'eliminated a state with an impossible first instruction'
513 [State 546] Switching from state 546 to state 0
Copied 34928 (count=1)
Deleting state 546 0x0x2bfb4600
513 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 545
>> fuzzInit: datum forking for value 546
>> fuzzInit: datum forking for value 546
513 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 546)
        (ReadLSB w32 0 v546_fuzz_symb_546)))
    state 547 with condition (Not (Eq false
         (Eq (w32 546)
             (ReadLSB w32 0 v546_fuzz_symb_546))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-546-8048a0e
Size=2 Low=0 splitIndex=1 high=1
513 [State 0] Switching from state 0 to state 547
Copied 34928 (count=1)
Finalizing TB execution 547
s2e_dummyMainFunction
tcg-llvm-tb-546-8048a0e
Firing timer event
514 [State 547] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 546 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
514 [State 547] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77032: 00 00             add [eax], al           
514 [State 547] Terminating state 547 with message 'eliminated a state with an impossible first instruction'
514 [State 547] Switching from state 547 to state 0
Copied 34928 (count=1)
Deleting state 547 0x0x2bfb4600
514 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 546
>> fuzzInit: datum forking for value 547
>> fuzzInit: datum forking for value 547
514 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 547)
        (ReadLSB w32 0 v547_fuzz_symb_547)))
    state 548 with condition (Not (Eq false
         (Eq (w32 547)
             (ReadLSB w32 0 v547_fuzz_symb_547))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-547-8048a0e
Size=2 Low=0 splitIndex=1 high=1
514 [State 0] Switching from state 0 to state 548
Copied 34928 (count=1)
Finalizing TB execution 548
s2e_dummyMainFunction
tcg-llvm-tb-547-8048a0e
514 [State 548] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 547 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
514 [State 548] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77033: 00 00             add [eax], al           
514 [State 548] Terminating state 548 with message 'eliminated a state with an impossible first instruction'
514 [State 548] Switching from state 548 to state 0
Copied 34928 (count=1)
Deleting state 548 0x0x2bfb4600
515 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 547
>> fuzzInit: datum forking for value 548
>> fuzzInit: datum forking for value 548
515 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 548)
        (ReadLSB w32 0 v548_fuzz_symb_548)))
    state 549 with condition (Not (Eq false
         (Eq (w32 548)
             (ReadLSB w32 0 v548_fuzz_symb_548))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-548-8048a0e
Size=2 Low=0 splitIndex=1 high=1
515 [State 0] Switching from state 0 to state 549
Copied 34928 (count=1)
Finalizing TB execution 549
s2e_dummyMainFunction
tcg-llvm-tb-548-8048a0e
515 [State 549] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 548 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
515 [State 549] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77034: 00 00             add [eax], al           
515 [State 549] Terminating state 549 with message 'eliminated a state with an impossible first instruction'
515 [State 549] Switching from state 549 to state 0
Copied 34928 (count=1)
Deleting state 549 0x0x2bfb4600
Firing timer event
516 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 548
>> fuzzInit: datum forking for value 549
>> fuzzInit: datum forking for value 549
516 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 549)
        (ReadLSB w32 0 v549_fuzz_symb_549)))
    state 550 with condition (Not (Eq false
         (Eq (w32 549)
             (ReadLSB w32 0 v549_fuzz_symb_549))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-549-8048a0e
Size=2 Low=0 splitIndex=1 high=1
516 [State 0] Switching from state 0 to state 550
Copied 34928 (count=1)
Finalizing TB execution 550
s2e_dummyMainFunction
tcg-llvm-tb-549-8048a0e
516 [State 550] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 549 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
516 [State 550] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77035: 00 00             add [eax], al           
516 [State 550] Terminating state 550 with message 'eliminated a state with an impossible first instruction'
516 [State 550] Switching from state 550 to state 0
Copied 34928 (count=1)
Deleting state 550 0x0x2bfb4600
Firing timer event
517 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 549
>> fuzzInit: datum forking for value 550
>> fuzzInit: datum forking for value 550
517 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 550)
        (ReadLSB w32 0 v550_fuzz_symb_550)))
    state 551 with condition (Not (Eq false
         (Eq (w32 550)
             (ReadLSB w32 0 v550_fuzz_symb_550))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-550-8048a0e
Size=2 Low=0 splitIndex=1 high=1
517 [State 0] Switching from state 0 to state 551
Copied 34928 (count=1)
Finalizing TB execution 551
s2e_dummyMainFunction
tcg-llvm-tb-550-8048a0e
517 [State 551] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 550 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
517 [State 551] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77036: 00 00             add [eax], al           
517 [State 551] Terminating state 551 with message 'eliminated a state with an impossible first instruction'
517 [State 551] Switching from state 551 to state 0
Copied 34928 (count=1)
Deleting state 551 0x0x2bfb4600
Firing timer event
518 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 550
>> fuzzInit: datum forking for value 551
>> fuzzInit: datum forking for value 551
518 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 551)
        (ReadLSB w32 0 v551_fuzz_symb_551)))
    state 552 with condition (Not (Eq false
         (Eq (w32 551)
             (ReadLSB w32 0 v551_fuzz_symb_551))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-551-8048a0e
Size=2 Low=0 splitIndex=1 high=1
518 [State 0] Switching from state 0 to state 552
Copied 34928 (count=1)
Finalizing TB execution 552
s2e_dummyMainFunction
tcg-llvm-tb-551-8048a0e
518 [State 552] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 551 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
518 [State 552] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77037: 00 00             add [eax], al           
518 [State 552] Terminating state 552 with message 'eliminated a state with an impossible first instruction'
518 [State 552] Switching from state 552 to state 0
Copied 34928 (count=1)
Deleting state 552 0x0x2bfb4600
Firing timer event
519 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 551
>> fuzzInit: datum forking for value 552
>> fuzzInit: datum forking for value 552
519 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 552)
        (ReadLSB w32 0 v552_fuzz_symb_552)))
    state 553 with condition (Not (Eq false
         (Eq (w32 552)
             (ReadLSB w32 0 v552_fuzz_symb_552))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-552-8048a0e
Size=2 Low=0 splitIndex=1 high=1
519 [State 0] Switching from state 0 to state 553
Copied 34928 (count=1)
Finalizing TB execution 553
s2e_dummyMainFunction
tcg-llvm-tb-552-8048a0e
519 [State 553] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 552 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
519 [State 553] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77038: 00 00             add [eax], al           
519 [State 553] Terminating state 553 with message 'eliminated a state with an impossible first instruction'
519 [State 553] Switching from state 553 to state 0
Copied 34928 (count=1)
Deleting state 553 0x0x2bfb4600
519 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 552
>> fuzzInit: datum forking for value 553
>> fuzzInit: datum forking for value 553
520 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 553)
        (ReadLSB w32 0 v553_fuzz_symb_553)))
    state 554 with condition (Not (Eq false
         (Eq (w32 553)
             (ReadLSB w32 0 v553_fuzz_symb_553))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-553-8048a0e
Size=2 Low=0 splitIndex=1 high=1
520 [State 0] Switching from state 0 to state 554
Copied 34928 (count=1)
Finalizing TB execution 554
s2e_dummyMainFunction
tcg-llvm-tb-553-8048a0e
Firing timer event
520 [State 554] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 553 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb77039: 00 90 90 90 90 90                  add [eax+0x90909090], dl nextPC: 0xbfb7703f
  2  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
  3  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  4  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  5  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  6  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
520 [State 554] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
520 [State 554] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
520 [State 554] Terminating state 554 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
520 [State 554] Switching from state 554 to state 0
Copied 34928 (count=1)
Deleting state 554 0x0x2bfb4600
520 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 553
>> fuzzInit: datum forking for value 554
>> fuzzInit: datum forking for value 554
521 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 554)
        (ReadLSB w32 0 v554_fuzz_symb_554)))
    state 555 with condition (Not (Eq false
         (Eq (w32 554)
             (ReadLSB w32 0 v554_fuzz_symb_554))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-554-8048a0e
Size=2 Low=0 splitIndex=1 high=1
521 [State 0] Switching from state 0 to state 555
Copied 34928 (count=1)
Finalizing TB execution 555
s2e_dummyMainFunction
tcg-llvm-tb-554-8048a0e
Firing timer event
521 [State 555] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 554 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7703a: 90                                 nop                      nextPC: 0xbfb7703b
  2  1B @0xbfb7703b: 90                                 nop                      nextPC: 0xbfb7703c
  3  1B @0xbfb7703c: 90                                 nop                      nextPC: 0xbfb7703d
  4  1B @0xbfb7703d: 90                                 nop                      nextPC: 0xbfb7703e
  5  1B @0xbfb7703e: 90                                 nop                      nextPC: 0xbfb7703f
  6  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
  7  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  8  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  9  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
 10  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
521 [State 555] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
521 [State 555] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
521 [State 555] Terminating state 555 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
521 [State 555] Switching from state 555 to state 0
Copied 34928 (count=1)
Deleting state 555 0x0x2bfb4600
521 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 554
>> fuzzInit: datum forking for value 555
>> fuzzInit: datum forking for value 555
521 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 555)
        (ReadLSB w32 0 v555_fuzz_symb_555)))
    state 556 with condition (Not (Eq false
         (Eq (w32 555)
             (ReadLSB w32 0 v555_fuzz_symb_555))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-555-8048a0e
Size=2 Low=0 splitIndex=1 high=1
521 [State 0] Switching from state 0 to state 556
Copied 34928 (count=1)
Finalizing TB execution 556
s2e_dummyMainFunction
tcg-llvm-tb-555-8048a0e
522 [State 556] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 555 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7703b: 90                                 nop                      nextPC: 0xbfb7703c
  2  1B @0xbfb7703c: 90                                 nop                      nextPC: 0xbfb7703d
  3  1B @0xbfb7703d: 90                                 nop                      nextPC: 0xbfb7703e
  4  1B @0xbfb7703e: 90                                 nop                      nextPC: 0xbfb7703f
  5  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
  6  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  7  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  8  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  9  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
Firing timer event
522 [State 556] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
522 [State 556] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
522 [State 556] Terminating state 556 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
522 [State 556] Switching from state 556 to state 0
Copied 34928 (count=1)
Deleting state 556 0x0x2bfb4600
522 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 555
>> fuzzInit: datum forking for value 556
>> fuzzInit: datum forking for value 556
522 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 556)
        (ReadLSB w32 0 v556_fuzz_symb_556)))
    state 557 with condition (Not (Eq false
         (Eq (w32 556)
             (ReadLSB w32 0 v556_fuzz_symb_556))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-556-8048a0e
Size=2 Low=0 splitIndex=1 high=1
522 [State 0] Switching from state 0 to state 557
Copied 34928 (count=1)
Finalizing TB execution 557
s2e_dummyMainFunction
tcg-llvm-tb-556-8048a0e
522 [State 557] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 556 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7703c: 90                                 nop                      nextPC: 0xbfb7703d
  2  1B @0xbfb7703d: 90                                 nop                      nextPC: 0xbfb7703e
  3  1B @0xbfb7703e: 90                                 nop                      nextPC: 0xbfb7703f
  4  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
  5  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  6  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  7  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  8  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
523 [State 557] @0x080499bf, left buffer range after 8 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
523 [State 557] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
523 [State 557] Terminating state 557 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
523 [State 557] Switching from state 557 to state 0
Copied 34928 (count=1)
Deleting state 557 0x0x2bfb4600
Firing timer event
523 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 556
>> fuzzInit: datum forking for value 557
>> fuzzInit: datum forking for value 557
523 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 557)
        (ReadLSB w32 0 v557_fuzz_symb_557)))
    state 558 with condition (Not (Eq false
         (Eq (w32 557)
             (ReadLSB w32 0 v557_fuzz_symb_557))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-557-8048a0e
Size=2 Low=0 splitIndex=1 high=1
523 [State 0] Switching from state 0 to state 558
Copied 34928 (count=1)
Finalizing TB execution 558
s2e_dummyMainFunction
tcg-llvm-tb-557-8048a0e
523 [State 558] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 557 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7703d: 90                                 nop                      nextPC: 0xbfb7703e
  2  1B @0xbfb7703e: 90                                 nop                      nextPC: 0xbfb7703f
  3  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
  4  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  5  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  6  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  7  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
524 [State 558] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
524 [State 558] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
524 [State 558] Terminating state 558 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
524 [State 558] Switching from state 558 to state 0
Copied 34928 (count=1)
Deleting state 558 0x0x2bfb4600
524 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 557
>> fuzzInit: datum forking for value 558
>> fuzzInit: datum forking for value 558
524 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 558)
        (ReadLSB w32 0 v558_fuzz_symb_558)))
    state 559 with condition (Not (Eq false
         (Eq (w32 558)
             (ReadLSB w32 0 v558_fuzz_symb_558))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-558-8048a0e
Size=2 Low=0 splitIndex=1 high=1
524 [State 0] Switching from state 0 to state 559
Copied 34928 (count=1)
Finalizing TB execution 559
s2e_dummyMainFunction
tcg-llvm-tb-558-8048a0e
Firing timer event
524 [State 559] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 558 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7703e: 90                                 nop                      nextPC: 0xbfb7703f
  2  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
  3  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  4  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  5  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  6  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
524 [State 559] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
524 [State 559] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
524 [State 559] Terminating state 559 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
524 [State 559] Switching from state 559 to state 0
Copied 34928 (count=1)
Deleting state 559 0x0x2bfb4600
525 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 558
>> fuzzInit: datum forking for value 559
>> fuzzInit: datum forking for value 559
525 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 559)
        (ReadLSB w32 0 v559_fuzz_symb_559)))
    state 560 with condition (Not (Eq false
         (Eq (w32 559)
             (ReadLSB w32 0 v559_fuzz_symb_559))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-559-8048a0e
Size=2 Low=0 splitIndex=1 high=1
525 [State 0] Switching from state 0 to state 560
Copied 34928 (count=1)
Finalizing TB execution 560
s2e_dummyMainFunction
tcg-llvm-tb-559-8048a0e
525 [State 560] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 559 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb7703f: 90                                 nop                      nextPC: 0xbfb77040
  2  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  3  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  4  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  5  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
525 [State 560] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
525 [State 560] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
525 [State 560] Terminating state 560 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
525 [State 560] Switching from state 560 to state 0
Copied 34928 (count=1)
Deleting state 560 0x0x2bfb4600
526 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 559
>> fuzzInit: datum forking for value 560
>> fuzzInit: datum forking for value 560
526 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 560)
        (ReadLSB w32 0 v560_fuzz_symb_560)))
    state 561 with condition (Not (Eq false
         (Eq (w32 560)
             (ReadLSB w32 0 v560_fuzz_symb_560))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-560-8048a0e
Size=2 Low=0 splitIndex=1 high=1
526 [State 0] Switching from state 0 to state 561
Copied 34928 (count=1)
Finalizing TB execution 561
s2e_dummyMainFunction
tcg-llvm-tb-560-8048a0e
526 [State 561] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 560 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb77040: 90                                 nop                      nextPC: 0xbfb77041
  2  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  3  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  4  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
526 [State 561] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
526 [State 561] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
526 [State 561] Terminating state 561 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
526 [State 561] Switching from state 561 to state 0
Copied 34928 (count=1)
Deleting state 561 0x0x2bfb4600
526 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 560
>> fuzzInit: datum forking for value 561
>> fuzzInit: datum forking for value 561
527 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 561)
        (ReadLSB w32 0 v561_fuzz_symb_561)))
    state 562 with condition (Not (Eq false
         (Eq (w32 561)
             (ReadLSB w32 0 v561_fuzz_symb_561))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-561-8048a0e
Size=2 Low=0 splitIndex=1 high=1
527 [State 0] Switching from state 0 to state 562
Copied 34928 (count=1)
Finalizing TB execution 562
s2e_dummyMainFunction
tcg-llvm-tb-561-8048a0e
527 [State 562] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 561 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77041: 90                                 nop                      nextPC: 0xbfb77042
  2  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  3  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
Firing timer event
527 [State 562] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
527 [State 562] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
527 [State 562] Terminating state 562 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
527 [State 562] Switching from state 562 to state 0
Copied 34928 (count=1)
Deleting state 562 0x0x2bfb4600
527 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 561
>> fuzzInit: datum forking for value 562
>> fuzzInit: datum forking for value 562
528 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 562)
        (ReadLSB w32 0 v562_fuzz_symb_562)))
    state 563 with condition (Not (Eq false
         (Eq (w32 562)
             (ReadLSB w32 0 v562_fuzz_symb_562))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-562-8048a0e
Size=2 Low=0 splitIndex=1 high=1
528 [State 0] Switching from state 0 to state 563
Copied 34928 (count=1)
Finalizing TB execution 563
s2e_dummyMainFunction
tcg-llvm-tb-562-8048a0e
528 [State 563] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 562 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77042: 00 e9                              add cl, ch               nextPC: 0xbfb77044
  2  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
528 [State 563] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
528 [State 563] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
528 [State 563] Terminating state 563 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
528 [State 563] Switching from state 563 to state 0
Copied 34928 (count=1)
Deleting state 563 0x0x2bfb4600
Firing timer event
528 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 562
>> fuzzInit: datum forking for value 563
>> fuzzInit: datum forking for value 563
528 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 563)
        (ReadLSB w32 0 v563_fuzz_symb_563)))
    state 564 with condition (Not (Eq false
         (Eq (w32 563)
             (ReadLSB w32 0 v563_fuzz_symb_563))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-563-8048a0e
Size=2 Low=0 splitIndex=1 high=1
528 [State 0] Switching from state 0 to state 564
Copied 34928 (count=1)
Finalizing TB execution 564
s2e_dummyMainFunction
tcg-llvm-tb-563-8048a0e
529 [State 564] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 563 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb77043: e9 1f 40 c4 24                     jmp 0x24c44024           nextPC: 0xe47bb067 jmpPc: 0xffffffff
529 [State 564] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77043, disasm in debug.
  1  5B @0xbfb77043: e9 1f 40 c4 24                     jmp 0x24c44024           nextPC: 0xe47bb067 jmpPc: 0xffffffff
529 [State 564] ERROR: this jump destination doesn't match what we were expecting, terminateStateEarly
529 [State 564] Terminating state 564 with message 'eliminated a state that is at unexpected location'
529 [State 564] Switching from state 564 to state 0
Copied 34928 (count=1)
Deleting state 564 0x0x2bfb4600
529 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 563
>> fuzzInit: datum forking for value 564
>> fuzzInit: datum forking for value 564
529 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 564)
        (ReadLSB w32 0 v564_fuzz_symb_564)))
    state 565 with condition (Not (Eq false
         (Eq (w32 564)
             (ReadLSB w32 0 v564_fuzz_symb_564))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-564-8048a0e
Size=2 Low=0 splitIndex=1 high=1
529 [State 0] Switching from state 0 to state 565
Copied 34928 (count=1)
Finalizing TB execution 565
s2e_dummyMainFunction
tcg-llvm-tb-564-8048a0e
Firing timer event
529 [State 565] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 564 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
530 [State 565] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77044, disasm in debug.
  1  1B @0xbfb77044: 1f                                 pop ds                   nextPC: 0xbfb77045
530 [State 565] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
530 [State 565] Terminating state 565 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
530 [State 565] Switching from state 565 to state 0
Copied 34928 (count=1)
Deleting state 565 0x0x2bfb4600
530 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 564
>> fuzzInit: datum forking for value 565
>> fuzzInit: datum forking for value 565
530 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 565)
        (ReadLSB w32 0 v565_fuzz_symb_565)))
    state 566 with condition (Not (Eq false
         (Eq (w32 565)
             (ReadLSB w32 0 v565_fuzz_symb_565))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-565-8048a0e
Size=2 Low=0 splitIndex=1 high=1
530 [State 0] Switching from state 0 to state 566
Copied 34928 (count=1)
Finalizing TB execution 566
s2e_dummyMainFunction
tcg-llvm-tb-565-8048a0e
Firing timer event
530 [State 566] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 565 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77045: 40                                 inc eax                  nextPC: 0xbfb77046
  2  3B @0xbfb77046: c4 24 3b                           les esp, [ebx+edi]       nextPC: 0xbfb77049
531 [State 566] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb77046, disasm in debug.
  1  3B @0xbfb77046: c4 24 3b                           les esp, [ebx+edi]       nextPC: 0xbfb77049
531 [State 566] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
531 [State 566] Terminating state 566 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
531 [State 566] Switching from state 566 to state 0
Copied 34928 (count=1)
Deleting state 566 0x0x2bfb4600
531 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 565
>> fuzzInit: datum forking for value 566
>> fuzzInit: datum forking for value 566
531 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 566)
        (ReadLSB w32 0 v566_fuzz_symb_566)))
    state 567 with condition (Not (Eq false
         (Eq (w32 566)
             (ReadLSB w32 0 v566_fuzz_symb_566))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-566-8048a0e
Size=2 Low=0 splitIndex=1 high=1
531 [State 0] Switching from state 0 to state 567
Copied 34928 (count=1)
Finalizing TB execution 567
s2e_dummyMainFunction
tcg-llvm-tb-566-8048a0e
Firing timer event
531 [State 567] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 566 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77046: c4 24 3b                           les esp, [ebx+edi]       nextPC: 0xbfb77049
531 [State 567] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77046, disasm in debug.
  1  3B @0xbfb77046: c4 24 3b                           les esp, [ebx+edi]       nextPC: 0xbfb77049
532 [State 567] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
532 [State 567] Terminating state 567 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
532 [State 567] Switching from state 567 to state 0
Copied 34928 (count=1)
Deleting state 567 0x0x2bfb4600
532 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 566
>> fuzzInit: datum forking for value 567
>> fuzzInit: datum forking for value 567
532 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 567)
        (ReadLSB w32 0 v567_fuzz_symb_567)))
    state 568 with condition (Not (Eq false
         (Eq (w32 567)
             (ReadLSB w32 0 v567_fuzz_symb_567))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-567-8048a0e
Size=2 Low=0 splitIndex=1 high=1
532 [State 0] Switching from state 0 to state 568
Copied 34928 (count=1)
Finalizing TB execution 568
s2e_dummyMainFunction
tcg-llvm-tb-567-8048a0e
532 [State 568] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 567 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77047: 24 3b                              and al, 0x3b             nextPC: 0xbfb77049
  2  1B @0xbfb77049: 4f                                 dec edi                  nextPC: 0xbfb7704a
  3  3B @0xbfb7704a: 66 00 00                           o16 add [eax], al        nextPC: 0xbfb7704d
  4  2B @0xbfb7704d: 00 01                              add [ecx], al            nextPC: 0xbfb7704f
  5  2B @0xbfb7704f: 00 00                              add [eax], al            nextPC: 0xbfb77051
  6  3B @0xbfb77051: 00 60 b5                           add [eax-0x4b], ah       nextPC: 0xbfb77054
  7  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
532 [State 568] @0x080499bf, left buffer range after 7 IoB insns; last IoB insn @0xbfb77054, disasm in debug.
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
532 [State 568] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
532 [State 568] Terminating state 568 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
532 [State 568] Switching from state 568 to state 0
Copied 34928 (count=1)
Deleting state 568 0x0x2bfb4600
Firing timer event
533 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 567
>> fuzzInit: datum forking for value 568
>> fuzzInit: datum forking for value 568
533 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 568)
        (ReadLSB w32 0 v568_fuzz_symb_568)))
    state 569 with condition (Not (Eq false
         (Eq (w32 568)
             (ReadLSB w32 0 v568_fuzz_symb_568))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-568-8048a0e
Size=2 Low=0 splitIndex=1 high=1
533 [State 0] Switching from state 0 to state 569
Copied 34928 (count=1)
Finalizing TB execution 569
s2e_dummyMainFunction
tcg-llvm-tb-568-8048a0e
533 [State 569] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 568 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77048: 3b 4f 66                           cmp ecx, [edi+0x66]      nextPC: 0xbfb7704b
  2  2B @0xbfb7704b: 00 00                              add [eax], al            nextPC: 0xbfb7704d
  3  2B @0xbfb7704d: 00 01                              add [ecx], al            nextPC: 0xbfb7704f
  4  2B @0xbfb7704f: 00 00                              add [eax], al            nextPC: 0xbfb77051
  5  3B @0xbfb77051: 00 60 b5                           add [eax-0x4b], ah       nextPC: 0xbfb77054
  6  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
533 [State 569] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77054, disasm in debug.
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
533 [State 569] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
533 [State 569] Terminating state 569 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
533 [State 569] Switching from state 569 to state 0
Copied 34928 (count=1)
Deleting state 569 0x0x2bfb4600
533 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 568
>> fuzzInit: datum forking for value 569
>> fuzzInit: datum forking for value 569
534 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 569)
        (ReadLSB w32 0 v569_fuzz_symb_569)))
    state 570 with condition (Not (Eq false
         (Eq (w32 569)
             (ReadLSB w32 0 v569_fuzz_symb_569))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-569-8048a0e
Size=2 Low=0 splitIndex=1 high=1
534 [State 0] Switching from state 0 to state 570
Copied 34928 (count=1)
Finalizing TB execution 570
s2e_dummyMainFunction
tcg-llvm-tb-569-8048a0e
Firing timer event
534 [State 570] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 569 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77049: 4f                                 dec edi                  nextPC: 0xbfb7704a
  2  3B @0xbfb7704a: 66 00 00                           o16 add [eax], al        nextPC: 0xbfb7704d
  3  2B @0xbfb7704d: 00 01                              add [ecx], al            nextPC: 0xbfb7704f
  4  2B @0xbfb7704f: 00 00                              add [eax], al            nextPC: 0xbfb77051
  5  3B @0xbfb77051: 00 60 b5                           add [eax-0x4b], ah       nextPC: 0xbfb77054
  6  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
534 [State 570] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb77054, disasm in debug.
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
534 [State 570] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
534 [State 570] Terminating state 570 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
534 [State 570] Switching from state 570 to state 0
Copied 34928 (count=1)
Deleting state 570 0x0x2bfb4600
534 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 569
>> fuzzInit: datum forking for value 570
>> fuzzInit: datum forking for value 570
535 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 570)
        (ReadLSB w32 0 v570_fuzz_symb_570)))
    state 571 with condition (Not (Eq false
         (Eq (w32 570)
             (ReadLSB w32 0 v570_fuzz_symb_570))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-570-8048a0e
Size=2 Low=0 splitIndex=1 high=1
535 [State 0] Switching from state 0 to state 571
Copied 34928 (count=1)
Finalizing TB execution 571
s2e_dummyMainFunction
tcg-llvm-tb-570-8048a0e
535 [State 571] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 570 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  3B @0xbfb7704a: 66 00 00                           o16 add [eax], al        nextPC: 0xbfb7704d
  2  2B @0xbfb7704d: 00 01                              add [ecx], al            nextPC: 0xbfb7704f
  3  2B @0xbfb7704f: 00 00                              add [eax], al            nextPC: 0xbfb77051
  4  3B @0xbfb77051: 00 60 b5                           add [eax-0x4b], ah       nextPC: 0xbfb77054
  5  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
535 [State 571] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb77054, disasm in debug.
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
535 [State 571] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
535 [State 571] Terminating state 571 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
535 [State 571] Switching from state 571 to state 0
Copied 34928 (count=1)
Deleting state 571 0x0x2bfb4600
535 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 570
>> fuzzInit: datum forking for value 571
>> fuzzInit: datum forking for value 571
535 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 571)
        (ReadLSB w32 0 v571_fuzz_symb_571)))
    state 572 with condition (Not (Eq false
         (Eq (w32 571)
             (ReadLSB w32 0 v571_fuzz_symb_571))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-571-8048a0e
Size=2 Low=0 splitIndex=1 high=1
535 [State 0] Switching from state 0 to state 572
Copied 34928 (count=1)
Finalizing TB execution 572
s2e_dummyMainFunction
tcg-llvm-tb-571-8048a0e
536 [State 572] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 571 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
536 [State 572] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7704b: 00 00             add [eax], al           
536 [State 572] Terminating state 572 with message 'eliminated a state with an impossible first instruction'
536 [State 572] Switching from state 572 to state 0
Copied 34928 (count=1)
Deleting state 572 0x0x2bfb4600
Firing timer event
536 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 571
>> fuzzInit: datum forking for value 572
>> fuzzInit: datum forking for value 572
536 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 572)
        (ReadLSB w32 0 v572_fuzz_symb_572)))
    state 573 with condition (Not (Eq false
         (Eq (w32 572)
             (ReadLSB w32 0 v572_fuzz_symb_572))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-572-8048a0e
Size=2 Low=0 splitIndex=1 high=1
536 [State 0] Switching from state 0 to state 573
Copied 34928 (count=1)
Finalizing TB execution 573
s2e_dummyMainFunction
tcg-llvm-tb-572-8048a0e
536 [State 573] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 572 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
537 [State 573] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7704c: 00 00             add [eax], al           
537 [State 573] Terminating state 573 with message 'eliminated a state with an impossible first instruction'
537 [State 573] Switching from state 573 to state 0
Copied 34928 (count=1)
Deleting state 573 0x0x2bfb4600
537 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 572
>> fuzzInit: datum forking for value 573
>> fuzzInit: datum forking for value 573
537 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 573)
        (ReadLSB w32 0 v573_fuzz_symb_573)))
    state 574 with condition (Not (Eq false
         (Eq (w32 573)
             (ReadLSB w32 0 v573_fuzz_symb_573))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-573-8048a0e
Size=2 Low=0 splitIndex=1 high=1
537 [State 0] Switching from state 0 to state 574
Copied 34928 (count=1)
Finalizing TB execution 574
s2e_dummyMainFunction
tcg-llvm-tb-573-8048a0e
Firing timer event
537 [State 574] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 573 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7704d: 00 01                              add [ecx], al            nextPC: 0xbfb7704f
  2  2B @0xbfb7704f: 00 00                              add [eax], al            nextPC: 0xbfb77051
  3  3B @0xbfb77051: 00 60 b5                           add [eax-0x4b], ah       nextPC: 0xbfb77054
  4  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
537 [State 574] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb77054, disasm in debug.
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
537 [State 574] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
537 [State 574] Terminating state 574 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
537 [State 574] Switching from state 574 to state 0
Copied 34928 (count=1)
Deleting state 574 0x0x2bfb4600
538 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 573
>> fuzzInit: datum forking for value 574
>> fuzzInit: datum forking for value 574
538 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 574)
        (ReadLSB w32 0 v574_fuzz_symb_574)))
    state 575 with condition (Not (Eq false
         (Eq (w32 574)
             (ReadLSB w32 0 v574_fuzz_symb_574))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-574-8048a0e
Size=2 Low=0 splitIndex=1 high=1
538 [State 0] Switching from state 0 to state 575
Copied 34928 (count=1)
Finalizing TB execution 575
s2e_dummyMainFunction
tcg-llvm-tb-574-8048a0e
Firing timer event
538 [State 575] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 574 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7704e: 01 00                              add [eax], eax           nextPC: 0xbfb77050
  2  2B @0xbfb77050: 00 00                              add [eax], al            nextPC: 0xbfb77052
  3  1B @0xbfb77052: 60                                 pushad                   nextPC: 0xbfb77053
  4  2B @0xbfb77053: b5 ff                              mov ch, 0xff             nextPC: 0xbfb77055
  5  5B @0xbfb77055: bf 5c b5 ff bf                     mov edi, 0xbfffb55c      nextPC: 0xbfb7705a
  6  2B @0xbfb7705a: 10 00                              adc [eax], al            nextPC: 0xbfb7705c
  7  2B @0xbfb7705c: 00 00                              add [eax], al            nextPC: 0xbfb7705e
  8  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  9  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
 10  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
 11  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
 12  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
 13  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
 14  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
 15  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
538 [State 575] @0x080499bf, left buffer range after 15 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
538 [State 575] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
538 [State 575] Terminating state 575 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
538 [State 575] Switching from state 575 to state 0
Copied 34928 (count=1)
Deleting state 575 0x0x2bfb4600
539 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 574
>> fuzzInit: datum forking for value 575
>> fuzzInit: datum forking for value 575
539 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 575)
        (ReadLSB w32 0 v575_fuzz_symb_575)))
    state 576 with condition (Not (Eq false
         (Eq (w32 575)
             (ReadLSB w32 0 v575_fuzz_symb_575))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-575-8048a0e
Size=2 Low=0 splitIndex=1 high=1
539 [State 0] Switching from state 0 to state 576
Copied 34928 (count=1)
Finalizing TB execution 576
s2e_dummyMainFunction
tcg-llvm-tb-575-8048a0e
539 [State 576] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 575 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
539 [State 576] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7704f: 00 00             add [eax], al           
539 [State 576] Terminating state 576 with message 'eliminated a state with an impossible first instruction'
539 [State 576] Switching from state 576 to state 0
Copied 34928 (count=1)
Deleting state 576 0x0x2bfb4600
539 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 575
>> fuzzInit: datum forking for value 576
>> fuzzInit: datum forking for value 576
540 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 576)
        (ReadLSB w32 0 v576_fuzz_symb_576)))
    state 577 with condition (Not (Eq false
         (Eq (w32 576)
             (ReadLSB w32 0 v576_fuzz_symb_576))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-576-8048a0e
Size=2 Low=0 splitIndex=1 high=1
540 [State 0] Switching from state 0 to state 577
Copied 34928 (count=1)
Finalizing TB execution 577
s2e_dummyMainFunction
tcg-llvm-tb-576-8048a0e
540 [State 577] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 576 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
540 [State 577] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77050: 00 00             add [eax], al           
540 [State 577] Terminating state 577 with message 'eliminated a state with an impossible first instruction'
540 [State 577] Switching from state 577 to state 0
Copied 34928 (count=1)
Deleting state 577 0x0x2bfb4600
540 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 576
>> fuzzInit: datum forking for value 577
>> fuzzInit: datum forking for value 577
540 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 577)
        (ReadLSB w32 0 v577_fuzz_symb_577)))
    state 578 with condition (Not (Eq false
         (Eq (w32 577)
             (ReadLSB w32 0 v577_fuzz_symb_577))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-577-8048a0e
Size=2 Low=0 splitIndex=1 high=1
540 [State 0] Switching from state 0 to state 578
Copied 34928 (count=1)
Finalizing TB execution 578
s2e_dummyMainFunction
tcg-llvm-tb-577-8048a0e
Firing timer event
541 [State 578] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 577 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77051: 00 60 b5                           add [eax-0x4b], ah       nextPC: 0xbfb77054
  2  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
541 [State 578] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb77054, disasm in debug.
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
541 [State 578] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
541 [State 578] Terminating state 578 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
541 [State 578] Switching from state 578 to state 0
Copied 34928 (count=1)
Deleting state 578 0x0x2bfb4600
541 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 577
>> fuzzInit: datum forking for value 578
>> fuzzInit: datum forking for value 578
541 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 578)
        (ReadLSB w32 0 v578_fuzz_symb_578)))
    state 579 with condition (Not (Eq false
         (Eq (w32 578)
             (ReadLSB w32 0 v578_fuzz_symb_578))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-578-8048a0e
Size=2 Low=0 splitIndex=1 high=1
541 [State 0] Switching from state 0 to state 579
Copied 34928 (count=1)
Finalizing TB execution 579
s2e_dummyMainFunction
tcg-llvm-tb-578-8048a0e
Firing timer event
542 [State 579] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 578 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77052: 60                                 pushad                   nextPC: 0xbfb77053
  2  2B @0xbfb77053: b5 ff                              mov ch, 0xff             nextPC: 0xbfb77055
  3  5B @0xbfb77055: bf 5c b5 ff bf                     mov edi, 0xbfffb55c      nextPC: 0xbfb7705a
  4  2B @0xbfb7705a: 10 00                              adc [eax], al            nextPC: 0xbfb7705c
  5  2B @0xbfb7705c: 00 00                              add [eax], al            nextPC: 0xbfb7705e
  6  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  7  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
  8  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  9  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
 10  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
 11  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
 12  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
 13  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
542 [State 579] @0x080499bf, left buffer range after 13 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
542 [State 579] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
542 [State 579] Terminating state 579 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
542 [State 579] Switching from state 579 to state 0
Copied 34928 (count=1)
Deleting state 579 0x0x2bfb4600
542 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 578
>> fuzzInit: datum forking for value 579
>> fuzzInit: datum forking for value 579
542 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 579)
        (ReadLSB w32 0 v579_fuzz_symb_579)))
    state 580 with condition (Not (Eq false
         (Eq (w32 579)
             (ReadLSB w32 0 v579_fuzz_symb_579))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-579-8048a0e
Size=2 Low=0 splitIndex=1 high=1
542 [State 0] Switching from state 0 to state 580
Copied 34928 (count=1)
Finalizing TB execution 580
s2e_dummyMainFunction
tcg-llvm-tb-579-8048a0e
542 [State 580] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 579 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb77053: b5 ff                              mov ch, 0xff             nextPC: 0xbfb77055
  2  5B @0xbfb77055: bf 5c b5 ff bf                     mov edi, 0xbfffb55c      nextPC: 0xbfb7705a
  3  2B @0xbfb7705a: 10 00                              adc [eax], al            nextPC: 0xbfb7705c
  4  2B @0xbfb7705c: 00 00                              add [eax], al            nextPC: 0xbfb7705e
  5  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  6  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
  7  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  8  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  9  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
 10  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
 11  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
 12  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
543 [State 580] @0x080499bf, left buffer range after 12 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
543 [State 580] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
543 [State 580] Terminating state 580 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
543 [State 580] Switching from state 580 to state 0
Copied 34928 (count=1)
Deleting state 580 0x0x2bfb4600
543 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 579
>> fuzzInit: datum forking for value 580
>> fuzzInit: datum forking for value 580
543 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 580)
        (ReadLSB w32 0 v580_fuzz_symb_580)))
    state 581 with condition (Not (Eq false
         (Eq (w32 580)
             (ReadLSB w32 0 v580_fuzz_symb_580))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-580-8048a0e
Size=2 Low=0 splitIndex=1 high=1
543 [State 0] Switching from state 0 to state 581
Copied 34928 (count=1)
Finalizing TB execution 581
s2e_dummyMainFunction
tcg-llvm-tb-580-8048a0e
543 [State 581] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 580 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
543 [State 581] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77054, disasm in debug.
  1  6B @0xbfb77054: ff bf 5c b5 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705a
543 [State 581] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
543 [State 581] Terminating state 581 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
543 [State 581] Switching from state 581 to state 0
Copied 34928 (count=1)
Deleting state 581 0x0x2bfb4600
Firing timer event
544 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 580
>> fuzzInit: datum forking for value 581
>> fuzzInit: datum forking for value 581
544 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 581)
        (ReadLSB w32 0 v581_fuzz_symb_581)))
    state 582 with condition (Not (Eq false
         (Eq (w32 581)
             (ReadLSB w32 0 v581_fuzz_symb_581))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-581-8048a0e
Size=2 Low=0 splitIndex=1 high=1
544 [State 0] Switching from state 0 to state 582
Copied 34928 (count=1)
Finalizing TB execution 582
s2e_dummyMainFunction
tcg-llvm-tb-581-8048a0e
544 [State 582] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 581 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb77055: bf 5c b5 ff bf                     mov edi, 0xbfffb55c      nextPC: 0xbfb7705a
  2  2B @0xbfb7705a: 10 00                              adc [eax], al            nextPC: 0xbfb7705c
  3  2B @0xbfb7705c: 00 00                              add [eax], al            nextPC: 0xbfb7705e
  4  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  5  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
  6  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  7  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  8  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  9  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
 10  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
 11  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
544 [State 582] @0x080499bf, left buffer range after 11 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
544 [State 582] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
544 [State 582] Terminating state 582 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
544 [State 582] Switching from state 582 to state 0
Copied 34928 (count=1)
Deleting state 582 0x0x2bfb4600
545 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 581
Firing timer event
>> fuzzInit: datum forking for value 582
>> fuzzInit: datum forking for value 582
545 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 582)
        (ReadLSB w32 0 v582_fuzz_symb_582)))
    state 583 with condition (Not (Eq false
         (Eq (w32 582)
             (ReadLSB w32 0 v582_fuzz_symb_582))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-582-8048a0e
Size=2 Low=0 splitIndex=1 high=1
545 [State 0] Switching from state 0 to state 583
Copied 34928 (count=1)
Finalizing TB execution 583
s2e_dummyMainFunction
tcg-llvm-tb-582-8048a0e
545 [State 583] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 582 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77056: 5c                                 pop esp                  nextPC: 0xbfb77057
  2  2B @0xbfb77057: b5 ff                              mov ch, 0xff             nextPC: 0xbfb77059
  3  5B @0xbfb77059: bf 10 00 00 00                     mov edi, 0x10            nextPC: 0xbfb7705e
  4  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  5  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
  6  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  7  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  8  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  9  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
 10  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
 11  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
Firing timer event
546 [State 583] ERROR: too many killable insns (tot:10001;oob:0;kern:403;other:703), terminateStateEarly
546 [State 583] Terminating state 583 with message 'eliminated a state that exec'ed too many killable insns, possible hang or other unexpected error'
546 [State 583] Switching from state 583 to state 0
Copied 34928 (count=1)
Deleting state 583 0x0x2cd837b0
546 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 582
>> fuzzInit: datum forking for value 583
>> fuzzInit: datum forking for value 583
546 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 583)
        (ReadLSB w32 0 v583_fuzz_symb_583)))
    state 584 with condition (Not (Eq false
         (Eq (w32 583)
             (ReadLSB w32 0 v583_fuzz_symb_583))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-583-8048a0e
Size=2 Low=0 splitIndex=1 high=1
546 [State 0] Switching from state 0 to state 584
Copied 34928 (count=1)
Finalizing TB execution 584
s2e_dummyMainFunction
tcg-llvm-tb-583-8048a0e
546 [State 584] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 583 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77057: b5 ff                              mov ch, 0xff             nextPC: 0xbfb77059
  2  5B @0xbfb77059: bf 10 00 00 00                     mov edi, 0x10            nextPC: 0xbfb7705e
  3  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  4  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
  5  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  6  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  7  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  8  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  9  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
 10  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
Firing timer event
547 [State 584] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
547 [State 584] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
547 [State 584] Terminating state 584 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
547 [State 584] Switching from state 584 to state 0
Copied 34928 (count=1)
Deleting state 584 0x0x2cd837b0
547 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 583
>> fuzzInit: datum forking for value 584
>> fuzzInit: datum forking for value 584
547 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 584)
        (ReadLSB w32 0 v584_fuzz_symb_584)))
    state 585 with condition (Not (Eq false
         (Eq (w32 584)
             (ReadLSB w32 0 v584_fuzz_symb_584))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-584-8048a0e
Size=2 Low=0 splitIndex=1 high=1
547 [State 0] Switching from state 0 to state 585
Copied 34928 (count=1)
Finalizing TB execution 585
s2e_dummyMainFunction
tcg-llvm-tb-584-8048a0e
547 [State 585] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 584 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb77058: ff bf 10 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705e
547 [State 585] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb77058, disasm in debug.
  1  6B @0xbfb77058: ff bf 10 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb7705e
547 [State 585] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
547 [State 585] Terminating state 585 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
547 [State 585] Switching from state 585 to state 0
Copied 34928 (count=1)
Deleting state 585 0x0x2cea57c0
Firing timer event
548 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 584
>> fuzzInit: datum forking for value 585
>> fuzzInit: datum forking for value 585
548 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 585)
        (ReadLSB w32 0 v585_fuzz_symb_585)))
    state 586 with condition (Not (Eq false
         (Eq (w32 585)
             (ReadLSB w32 0 v585_fuzz_symb_585))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-585-8048a0e
Size=2 Low=0 splitIndex=1 high=1
548 [State 0] Switching from state 0 to state 586
Copied 34928 (count=1)
Finalizing TB execution 586
s2e_dummyMainFunction
tcg-llvm-tb-585-8048a0e
548 [State 586] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 585 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb77059: bf 10 00 00 00                     mov edi, 0x10            nextPC: 0xbfb7705e
  2  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  3  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
  4  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  5  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  6  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  7  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  8  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
  9  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
548 [State 586] @0x080499bf, left buffer range after 9 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
548 [State 586] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
548 [State 586] Terminating state 586 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
548 [State 586] Switching from state 586 to state 0
Copied 34928 (count=1)
Deleting state 586 0x0x2d0d0b30
548 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 585
>> fuzzInit: datum forking for value 586
>> fuzzInit: datum forking for value 586
549 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 586)
        (ReadLSB w32 0 v586_fuzz_symb_586)))
    state 587 with condition (Not (Eq false
         (Eq (w32 586)
             (ReadLSB w32 0 v586_fuzz_symb_586))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-586-8048a0e
Size=2 Low=0 splitIndex=1 high=1
549 [State 0] Switching from state 0 to state 587
Copied 34928 (count=1)
Finalizing TB execution 587
s2e_dummyMainFunction
tcg-llvm-tb-586-8048a0e
Firing timer event
549 [State 587] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 586 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7705a: 10 00                              adc [eax], al            nextPC: 0xbfb7705c
  2  2B @0xbfb7705c: 00 00                              add [eax], al            nextPC: 0xbfb7705e
  3  2B @0xbfb7705e: 00 00                              add [eax], al            nextPC: 0xbfb77060
  4  2B @0xbfb77060: 00 00                              add [eax], al            nextPC: 0xbfb77062
  5  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  6  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  7  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  8  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  9  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
 10  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
549 [State 587] @0x080499bf, left buffer range after 10 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
549 [State 587] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
549 [State 587] Terminating state 587 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
549 [State 587] Switching from state 587 to state 0
Copied 34928 (count=1)
Deleting state 587 0x0x2d1c82b0
549 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 586
>> fuzzInit: datum forking for value 587
>> fuzzInit: datum forking for value 587
550 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 587)
        (ReadLSB w32 0 v587_fuzz_symb_587)))
    state 588 with condition (Not (Eq false
         (Eq (w32 587)
             (ReadLSB w32 0 v587_fuzz_symb_587))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-587-8048a0e
Size=2 Low=0 splitIndex=1 high=1
550 [State 0] Switching from state 0 to state 588
Copied 34928 (count=1)
Finalizing TB execution 588
s2e_dummyMainFunction
tcg-llvm-tb-587-8048a0e
550 [State 588] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 587 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
550 [State 588] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7705b: 00 00             add [eax], al           
550 [State 588] Terminating state 588 with message 'eliminated a state with an impossible first instruction'
550 [State 588] Switching from state 588 to state 0
Copied 34928 (count=1)
Deleting state 588 0x0x2d1c82b0
550 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 587
>> fuzzInit: datum forking for value 588
>> fuzzInit: datum forking for value 588
550 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 588)
        (ReadLSB w32 0 v588_fuzz_symb_588)))
    state 589 with condition (Not (Eq false
         (Eq (w32 588)
             (ReadLSB w32 0 v588_fuzz_symb_588))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-588-8048a0e
Size=2 Low=0 splitIndex=1 high=1
550 [State 0] Switching from state 0 to state 589
Copied 34928 (count=1)
Finalizing TB execution 589
s2e_dummyMainFunction
tcg-llvm-tb-588-8048a0e
551 [State 589] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 588 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
551 [State 589] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7705c: 00 00             add [eax], al           
551 [State 589] Terminating state 589 with message 'eliminated a state with an impossible first instruction'
551 [State 589] Switching from state 589 to state 0
Copied 34928 (count=1)
Deleting state 589 0x0x2d1c82b0
Firing timer event
551 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 588
>> fuzzInit: datum forking for value 589
>> fuzzInit: datum forking for value 589
551 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 589)
        (ReadLSB w32 0 v589_fuzz_symb_589)))
    state 590 with condition (Not (Eq false
         (Eq (w32 589)
             (ReadLSB w32 0 v589_fuzz_symb_589))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-589-8048a0e
Size=2 Low=0 splitIndex=1 high=1
551 [State 0] Switching from state 0 to state 590
Copied 34928 (count=1)
Finalizing TB execution 590
s2e_dummyMainFunction
tcg-llvm-tb-589-8048a0e
551 [State 590] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 589 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
552 [State 590] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7705d: 00 00             add [eax], al           
552 [State 590] Terminating state 590 with message 'eliminated a state with an impossible first instruction'
552 [State 590] Switching from state 590 to state 0
Copied 34928 (count=1)
Deleting state 590 0x0x2d1c82b0
552 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 589
>> fuzzInit: datum forking for value 590
>> fuzzInit: datum forking for value 590
552 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 590)
        (ReadLSB w32 0 v590_fuzz_symb_590)))
    state 591 with condition (Not (Eq false
         (Eq (w32 590)
             (ReadLSB w32 0 v590_fuzz_symb_590))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-590-8048a0e
Size=2 Low=0 splitIndex=1 high=1
552 [State 0] Switching from state 0 to state 591
Copied 34928 (count=1)
Finalizing TB execution 591
s2e_dummyMainFunction
tcg-llvm-tb-590-8048a0e
Firing timer event
552 [State 591] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 590 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
553 [State 591] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7705e: 00 00             add [eax], al           
553 [State 591] Terminating state 591 with message 'eliminated a state with an impossible first instruction'
553 [State 591] Switching from state 591 to state 0
Copied 34928 (count=1)
Deleting state 591 0x0x2cea4a20
553 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 590
>> fuzzInit: datum forking for value 591
>> fuzzInit: datum forking for value 591
553 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 591)
        (ReadLSB w32 0 v591_fuzz_symb_591)))
    state 592 with condition (Not (Eq false
         (Eq (w32 591)
             (ReadLSB w32 0 v591_fuzz_symb_591))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-591-8048a0e
Size=2 Low=0 splitIndex=1 high=1
553 [State 0] Switching from state 0 to state 592
Copied 34928 (count=1)
Finalizing TB execution 592
s2e_dummyMainFunction
tcg-llvm-tb-591-8048a0e
553 [State 592] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 591 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
553 [State 592] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7705f: 00 00             add [eax], al           
553 [State 592] Terminating state 592 with message 'eliminated a state with an impossible first instruction'
553 [State 592] Switching from state 592 to state 0
Copied 34928 (count=1)
Deleting state 592 0x0x2cea4a20
553 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 591
>> fuzzInit: datum forking for value 592
>> fuzzInit: datum forking for value 592
554 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 592)
        (ReadLSB w32 0 v592_fuzz_symb_592)))
    state 593 with condition (Not (Eq false
         (Eq (w32 592)
             (ReadLSB w32 0 v592_fuzz_symb_592))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-592-8048a0e
Size=2 Low=0 splitIndex=1 high=1
554 [State 0] Switching from state 0 to state 593
Copied 34928 (count=1)
Finalizing TB execution 593
s2e_dummyMainFunction
tcg-llvm-tb-592-8048a0e
554 [State 593] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 592 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
554 [State 593] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77060: 00 00             add [eax], al           
554 [State 593] Terminating state 593 with message 'eliminated a state with an impossible first instruction'
554 [State 593] Switching from state 593 to state 0
Copied 34928 (count=1)
Deleting state 593 0x0x2cea4a20
Firing timer event
554 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 592
>> fuzzInit: datum forking for value 593
>> fuzzInit: datum forking for value 593
555 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 593)
        (ReadLSB w32 0 v593_fuzz_symb_593)))
    state 594 with condition (Not (Eq false
         (Eq (w32 593)
             (ReadLSB w32 0 v593_fuzz_symb_593))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-593-8048a0e
Size=2 Low=0 splitIndex=1 high=1
555 [State 0] Switching from state 0 to state 594
Copied 34928 (count=1)
Finalizing TB execution 594
s2e_dummyMainFunction
tcg-llvm-tb-593-8048a0e
555 [State 594] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 593 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77061: 00 73 00                           add [ebx+0x0], dh        nextPC: 0xbfb77064
  2  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  3  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  4  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  5  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
  6  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
555 [State 594] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
555 [State 594] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
555 [State 594] Terminating state 594 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
555 [State 594] Switching from state 594 to state 0
Copied 34928 (count=1)
Deleting state 594 0x0x2cea4a20
555 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 593
>> fuzzInit: datum forking for value 594
>> fuzzInit: datum forking for value 594
555 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 594)
        (ReadLSB w32 0 v594_fuzz_symb_594)))
    state 595 with condition (Not (Eq false
         (Eq (w32 594)
             (ReadLSB w32 0 v594_fuzz_symb_594))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-594-8048a0e
Size=2 Low=0 splitIndex=1 high=1
555 [State 0] Switching from state 0 to state 595
Copied 34928 (count=1)
Finalizing TB execution 595
s2e_dummyMainFunction
tcg-llvm-tb-594-8048a0e
Firing timer event
556 [State 595] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 594 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77062: 73 00                              jae 0x2                  nextPC: 0xbfb77064
  2  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  3  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  4  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  5  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
  6  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
556 [State 595] @0x080499bf, left buffer range after 6 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
556 [State 595] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
556 [State 595] Terminating state 595 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
556 [State 595] Switching from state 595 to state 0
Copied 34928 (count=1)
Deleting state 595 0x0x2cea4a20
556 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 594
>> fuzzInit: datum forking for value 595
>> fuzzInit: datum forking for value 595
556 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 595)
        (ReadLSB w32 0 v595_fuzz_symb_595)))
    state 596 with condition (Not (Eq false
         (Eq (w32 595)
             (ReadLSB w32 0 v595_fuzz_symb_595))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-595-8048a0e
Size=2 Low=0 splitIndex=1 high=1
556 [State 0] Switching from state 0 to state 596
Copied 34928 (count=1)
Finalizing TB execution 596
s2e_dummyMainFunction
tcg-llvm-tb-595-8048a0e
Firing timer event
557 [State 596] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 595 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77063: 00 ee                              add dh, ch               nextPC: 0xbfb77065
  2  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  3  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  4  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
  5  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
557 [State 596] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
557 [State 596] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
557 [State 596] Terminating state 596 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
557 [State 596] Switching from state 596 to state 0
Copied 34928 (count=1)
Deleting state 596 0x0x2cea4a20
557 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 595
>> fuzzInit: datum forking for value 596
>> fuzzInit: datum forking for value 596
557 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 596)
        (ReadLSB w32 0 v596_fuzz_symb_596)))
    state 597 with condition (Not (Eq false
         (Eq (w32 596)
             (ReadLSB w32 0 v596_fuzz_symb_596))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-596-8048a0e
Size=2 Low=0 splitIndex=1 high=1
557 [State 0] Switching from state 0 to state 597
Copied 34928 (count=1)
Finalizing TB execution 597
s2e_dummyMainFunction
tcg-llvm-tb-596-8048a0e
Firing timer event
558 [State 597] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 596 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77064: ee                                 out dx, al               nextPC: 0xbfb77065
  2  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  3  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  4  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
  5  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
558 [State 597] @0x080499bf, left buffer range after 5 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
558 [State 597] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
558 [State 597] Terminating state 597 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
558 [State 597] Switching from state 597 to state 0
Copied 34928 (count=1)
Deleting state 597 0x0x2cea4a20
558 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 596
>> fuzzInit: datum forking for value 597
>> fuzzInit: datum forking for value 597
559 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 597)
        (ReadLSB w32 0 v597_fuzz_symb_597)))
    state 598 with condition (Not (Eq false
         (Eq (w32 597)
             (ReadLSB w32 0 v597_fuzz_symb_597))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-597-8048a0e
Size=2 Low=0 splitIndex=1 high=1
559 [State 0] Switching from state 0 to state 598
Copied 34928 (count=1)
Finalizing TB execution 598
s2e_dummyMainFunction
tcg-llvm-tb-597-8048a0e
Firing timer event
559 [State 598] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 597 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77065: 01 00                              add [eax], eax           nextPC: 0xbfb77067
  2  2B @0xbfb77067: 00 00                              add [eax], al            nextPC: 0xbfb77069
  3  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
  4  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
559 [State 598] @0x080499bf, left buffer range after 4 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
559 [State 598] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
559 [State 598] Terminating state 598 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
559 [State 598] Switching from state 598 to state 0
Copied 34928 (count=1)
Deleting state 598 0x0x2cea4a20
560 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 597
>> fuzzInit: datum forking for value 598
>> fuzzInit: datum forking for value 598
560 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 598)
        (ReadLSB w32 0 v598_fuzz_symb_598)))
    state 599 with condition (Not (Eq false
         (Eq (w32 598)
             (ReadLSB w32 0 v598_fuzz_symb_598))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-598-8048a0e
Size=2 Low=0 splitIndex=1 high=1
560 [State 0] Switching from state 0 to state 599
Copied 34928 (count=1)
Finalizing TB execution 599
s2e_dummyMainFunction
tcg-llvm-tb-598-8048a0e
Firing timer event
560 [State 599] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 598 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
561 [State 599] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77066: 00 00             add [eax], al           
561 [State 599] Terminating state 599 with message 'eliminated a state with an impossible first instruction'
561 [State 599] Switching from state 599 to state 0
Copied 34928 (count=1)
Deleting state 599 0x0x2d35f810
Firing timer event
561 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 598
>> fuzzInit: datum forking for value 599
>> fuzzInit: datum forking for value 599
562 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 599)
        (ReadLSB w32 0 v599_fuzz_symb_599)))
    state 600 with condition (Not (Eq false
         (Eq (w32 599)
             (ReadLSB w32 0 v599_fuzz_symb_599))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-599-8048a0e
Size=2 Low=0 splitIndex=1 high=1
562 [State 0] Switching from state 0 to state 600
Copied 34928 (count=1)
Finalizing TB execution 600
s2e_dummyMainFunction
tcg-llvm-tb-599-8048a0e
562 [State 600] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 599 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
562 [State 600] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77067: 00 00             add [eax], al           
562 [State 600] Terminating state 600 with message 'eliminated a state with an impossible first instruction'
562 [State 600] Switching from state 600 to state 0
Copied 34928 (count=1)
Deleting state 600 0x0x2d3f94a0
563 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 599
>> fuzzInit: datum forking for value 600
>> fuzzInit: datum forking for value 600
563 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 600)
        (ReadLSB w32 0 v600_fuzz_symb_600)))
    state 601 with condition (Not (Eq false
         (Eq (w32 600)
             (ReadLSB w32 0 v600_fuzz_symb_600))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-600-8048a0e
Size=2 Low=0 splitIndex=1 high=1
563 [State 0] Switching from state 0 to state 601
Copied 34928 (count=1)
Finalizing TB execution 601
s2e_dummyMainFunction
tcg-llvm-tb-600-8048a0e
Firing timer event
563 [State 601] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 600 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
564 [State 601] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77068: 00 00             add [eax], al           
564 [State 601] Terminating state 601 with message 'eliminated a state with an impossible first instruction'
564 [State 601] Switching from state 601 to state 0
Copied 34928 (count=1)
Deleting state 601 0x0x2d3f94a0
Firing timer event
564 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 600
>> fuzzInit: datum forking for value 601
>> fuzzInit: datum forking for value 601
564 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 601)
        (ReadLSB w32 0 v601_fuzz_symb_601)))
    state 602 with condition (Not (Eq false
         (Eq (w32 601)
             (ReadLSB w32 0 v601_fuzz_symb_601))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-601-8048a0e
Size=2 Low=0 splitIndex=1 high=1
565 [State 0] Switching from state 0 to state 602
Copied 34928 (count=1)
Finalizing TB execution 602
s2e_dummyMainFunction
tcg-llvm-tb-601-8048a0e
565 [State 602] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 601 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  3B @0xbfb77069: 00 7b 00                           add [ebx+0x0], bh        nextPC: 0xbfb7706c
  2  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
Firing timer event
565 [State 602] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
565 [State 602] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
565 [State 602] Terminating state 602 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
565 [State 602] Switching from state 602 to state 0
Copied 34928 (count=1)
Deleting state 602 0x0x2d4c0c40
566 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 601
>> fuzzInit: datum forking for value 602
>> fuzzInit: datum forking for value 602
566 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 602)
        (ReadLSB w32 0 v602_fuzz_symb_602)))
    state 603 with condition (Not (Eq false
         (Eq (w32 602)
             (ReadLSB w32 0 v602_fuzz_symb_602))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-602-8048a0e
Size=2 Low=0 splitIndex=1 high=1
566 [State 0] Switching from state 0 to state 603
Copied 34928 (count=1)
Finalizing TB execution 603
s2e_dummyMainFunction
tcg-llvm-tb-602-8048a0e
566 [State 603] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 602 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7706a: 7b 00                              jnp 0x2                  nextPC: 0xbfb7706c
  2  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
Firing timer event
566 [State 603] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
566 [State 603] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
566 [State 603] Terminating state 603 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
566 [State 603] Switching from state 603 to state 0
Copied 34928 (count=1)
Deleting state 603 0x0x2d545660
566 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 602
>> fuzzInit: datum forking for value 603
>> fuzzInit: datum forking for value 603
567 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 603)
        (ReadLSB w32 0 v603_fuzz_symb_603)))
    state 604 with condition (Not (Eq false
         (Eq (w32 603)
             (ReadLSB w32 0 v603_fuzz_symb_603))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-603-8048a0e
Size=2 Low=0 splitIndex=1 high=1
567 [State 0] Switching from state 0 to state 604
Copied 34928 (count=1)
Finalizing TB execution 604
s2e_dummyMainFunction
tcg-llvm-tb-603-8048a0e
567 [State 604] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 603 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7706b: 00 ff                              add bh, bh               nextPC: 0xbfb7706d
  2  2B @0xbfb7706d: ff df                              call edi                 nextPC: 0xbfb7706d
567 [State 604] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb7706d, disasm in debug.
  1  2B @0xbfb7706d: ff df                              call edi                 nextPC: 0xbfb7706d
567 [State 604] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
567 [State 604] Terminating state 604 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
567 [State 604] Switching from state 604 to state 0
Copied 34928 (count=1)
Deleting state 604 0x0x2d545660
Firing timer event
567 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 603
>> fuzzInit: datum forking for value 604
>> fuzzInit: datum forking for value 604
568 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 604)
        (ReadLSB w32 0 v604_fuzz_symb_604)))
    state 605 with condition (Not (Eq false
         (Eq (w32 604)
             (ReadLSB w32 0 v604_fuzz_symb_604))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-604-8048a0e
Size=2 Low=0 splitIndex=1 high=1
568 [State 0] Switching from state 0 to state 605
Copied 34928 (count=1)
Finalizing TB execution 605
s2e_dummyMainFunction
tcg-llvm-tb-604-8048a0e
568 [State 605] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 604 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
568 [State 605] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb7706c, disasm in debug.
  1  2B @0xbfb7706c: ff ff                              invalid                  nextPC: 0xbfb7706e
568 [State 605] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
568 [State 605] Terminating state 605 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
568 [State 605] Switching from state 605 to state 0
Copied 34928 (count=1)
Deleting state 605 0x0x2d158080
568 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 604
>> fuzzInit: datum forking for value 605
>> fuzzInit: datum forking for value 605
568 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 605)
        (ReadLSB w32 0 v605_fuzz_symb_605)))
    state 606 with condition (Not (Eq false
         (Eq (w32 605)
             (ReadLSB w32 0 v605_fuzz_symb_605))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-605-8048a0e
Size=2 Low=0 splitIndex=1 high=1
568 [State 0] Switching from state 0 to state 606
Copied 34928 (count=1)
Finalizing TB execution 606
s2e_dummyMainFunction
tcg-llvm-tb-605-8048a0e
Firing timer event
569 [State 606] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 605 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7706d: ff df                              call edi                 nextPC: 0xbfb7706d
569 [State 606] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb7706d, disasm in debug.
  1  2B @0xbfb7706d: ff df                              call edi                 nextPC: 0xbfb7706d
569 [State 606] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
569 [State 606] Terminating state 606 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
569 [State 606] Switching from state 606 to state 0
Copied 34928 (count=1)
Deleting state 606 0x0x2d158080
569 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 605
>> fuzzInit: datum forking for value 606
>> fuzzInit: datum forking for value 606
569 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 606)
        (ReadLSB w32 0 v606_fuzz_symb_606)))
    state 607 with condition (Not (Eq false
         (Eq (w32 606)
             (ReadLSB w32 0 v606_fuzz_symb_606))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-606-8048a0e
Size=2 Low=0 splitIndex=1 high=1
569 [State 0] Switching from state 0 to state 607
Copied 34928 (count=1)
Finalizing TB execution 607
s2e_dummyMainFunction
tcg-llvm-tb-606-8048a0e
569 [State 607] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 606 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb7706e: df                                 invalid                  nextPC: 0xbfb7706f
!!* pc != prev insn's next_pc; 0xbfb7706e != bfb7706f
  2  6B @0xbfb7706e:*df 9b 57 13 df 9b                  fistp word [ebx+0x9bdf1357] nextPC: 0xbfb77074
  3  1B @0xbfb77074: 57                                 push edi                 nextPC: 0xbfb77075
  4  2B @0xbfb77075: 13 00                              adc eax, [eax]           nextPC: 0xbfb77077
  5  2B @0xbfb77077: 00 00                              add [eax], al            nextPC: 0xbfb77079
  6  2B @0xbfb77079: 00 00                              add [eax], al            nextPC: 0xbfb7707b
  7  2B @0xbfb7707b: 00 00                              add [eax], al            nextPC: 0xbfb7707d
  8  2B @0xbfb7707d: 00 00                              add [eax], al            nextPC: 0xbfb7707f
  9  2B @0xbfb7707f: 00 00                              add [eax], al            nextPC: 0xbfb77081
 10  2B @0xbfb77081: 00 00                              add [eax], al            nextPC: 0xbfb77083
 11  2B @0xbfb77083: 00 00                              add [eax], al            nextPC: 0xbfb77085
 12  2B @0xbfb77085: 00 00                              add [eax], al            nextPC: 0xbfb77087
 13  2B @0xbfb77087: 00 00                              add [eax], al            nextPC: 0xbfb77089
 14  2B @0xbfb77089: 00 00                              add [eax], al            nextPC: 0xbfb7708b
 15  2B @0xbfb7708b: 00 00                              add [eax], al            nextPC: 0xbfb7708d
 16  2B @0xbfb7708d: 00 00                              add [eax], al            nextPC: 0xbfb7708f
 17  2B @0xbfb7708f: 00 00                              add [eax], al            nextPC: 0xbfb77091
 18  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
 19  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
 20  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
 21  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
 22  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
 23  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 24  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 25  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 26  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
570 [State 607] @0x080499bf, left buffer range after 26 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
570 [State 607] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
570 [State 607] Terminating state 607 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
570 [State 607] Switching from state 607 to state 0
Copied 34928 (count=1)
Deleting state 607 0x0x2d3ef630
570 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 606
>> fuzzInit: datum forking for value 607
>> fuzzInit: datum forking for value 607
570 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 607)
        (ReadLSB w32 0 v607_fuzz_symb_607)))
    state 608 with condition (Not (Eq false
         (Eq (w32 607)
             (ReadLSB w32 0 v607_fuzz_symb_607))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-607-8048a0e
Size=2 Low=0 splitIndex=1 high=1
570 [State 0] Switching from state 0 to state 608
Copied 34928 (count=1)
Finalizing TB execution 608
s2e_dummyMainFunction
tcg-llvm-tb-607-8048a0e
570 [State 608] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 607 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb7706f: 9b                                 wait                     nextPC: 0xbfb77070
!!* pc != prev insn's next_pc; 0xbfb7706f != bfb77070
  2  1B @0xbfb7706f:*9b                                 wait                     nextPC: 0xbfb77070
  3  1B @0xbfb77070: 57                                 push edi                 nextPC: 0xbfb77071
  4  2B @0xbfb77071: 13 df                              adc ebx, edi             nextPC: 0xbfb77073
  5  1B @0xbfb77073: 9b                                 wait                     nextPC: 0xbfb77074
  6  1B @0xbfb77074: 57                                 push edi                 nextPC: 0xbfb77075
  7  2B @0xbfb77075: 13 00                              adc eax, [eax]           nextPC: 0xbfb77077
  8  2B @0xbfb77077: 00 00                              add [eax], al            nextPC: 0xbfb77079
  9  2B @0xbfb77079: 00 00                              add [eax], al            nextPC: 0xbfb7707b
 10  2B @0xbfb7707b: 00 00                              add [eax], al            nextPC: 0xbfb7707d
 11  2B @0xbfb7707d: 00 00                              add [eax], al            nextPC: 0xbfb7707f
 12  2B @0xbfb7707f: 00 00                              add [eax], al            nextPC: 0xbfb77081
 13  2B @0xbfb77081: 00 00                              add [eax], al            nextPC: 0xbfb77083
 14  2B @0xbfb77083: 00 00                              add [eax], al            nextPC: 0xbfb77085
 15  2B @0xbfb77085: 00 00                              add [eax], al            nextPC: 0xbfb77087
 16  2B @0xbfb77087: 00 00                              add [eax], al            nextPC: 0xbfb77089
 17  2B @0xbfb77089: 00 00                              add [eax], al            nextPC: 0xbfb7708b
 18  2B @0xbfb7708b: 00 00                              add [eax], al            nextPC: 0xbfb7708d
 19  2B @0xbfb7708d: 00 00                              add [eax], al            nextPC: 0xbfb7708f
 20  2B @0xbfb7708f: 00 00                              add [eax], al            nextPC: 0xbfb77091
 21  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
 22  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
 23  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
 24  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
 25  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
 26  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 27  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 28  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 29  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
571 [State 608] @0x080499bf, left buffer range after 29 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
571 [State 608] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
571 [State 608] Terminating state 608 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
571 [State 608] Switching from state 608 to state 0
Copied 34928 (count=1)
Deleting state 608 0x0x2d3ef630
571 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 607
>> fuzzInit: datum forking for value 608
>> fuzzInit: datum forking for value 608
571 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 608)
        (ReadLSB w32 0 v608_fuzz_symb_608)))
    state 609 with condition (Not (Eq false
         (Eq (w32 608)
             (ReadLSB w32 0 v608_fuzz_symb_608))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-608-8048a0e
Size=2 Low=0 splitIndex=1 high=1
571 [State 0] Switching from state 0 to state 609
Copied 34928 (count=1)
Finalizing TB execution 609
s2e_dummyMainFunction
tcg-llvm-tb-608-8048a0e
571 [State 609] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 608 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb77070: 57                                 push edi                 nextPC: 0xbfb77071
  2  2B @0xbfb77071: 13 df                              adc ebx, edi             nextPC: 0xbfb77073
  3  1B @0xbfb77073: 9b                                 wait                     nextPC: 0xbfb77074
!!* pc != prev insn's next_pc; 0xbfb77073 != bfb77074
  4  1B @0xbfb77073:*9b                                 wait                     nextPC: 0xbfb77074
  5  1B @0xbfb77074: 57                                 push edi                 nextPC: 0xbfb77075
  6  2B @0xbfb77075: 13 00                              adc eax, [eax]           nextPC: 0xbfb77077
  7  2B @0xbfb77077: 00 00                              add [eax], al            nextPC: 0xbfb77079
  8  2B @0xbfb77079: 00 00                              add [eax], al            nextPC: 0xbfb7707b
  9  2B @0xbfb7707b: 00 00                              add [eax], al            nextPC: 0xbfb7707d
 10  2B @0xbfb7707d: 00 00                              add [eax], al            nextPC: 0xbfb7707f
 11  2B @0xbfb7707f: 00 00                              add [eax], al            nextPC: 0xbfb77081
 12  2B @0xbfb77081: 00 00                              add [eax], al            nextPC: 0xbfb77083
 13  2B @0xbfb77083: 00 00                              add [eax], al            nextPC: 0xbfb77085
 14  2B @0xbfb77085: 00 00                              add [eax], al            nextPC: 0xbfb77087
 15  2B @0xbfb77087: 00 00                              add [eax], al            nextPC: 0xbfb77089
 16  2B @0xbfb77089: 00 00                              add [eax], al            nextPC: 0xbfb7708b
 17  2B @0xbfb7708b: 00 00                              add [eax], al            nextPC: 0xbfb7708d
 18  2B @0xbfb7708d: 00 00                              add [eax], al            nextPC: 0xbfb7708f
 19  2B @0xbfb7708f: 00 00                              add [eax], al            nextPC: 0xbfb77091
 20  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
 21  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
 22  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
 23  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
 24  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
 25  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 26  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 27  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 28  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
572 [State 609] @0x080499bf, left buffer range after 28 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
572 [State 609] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
572 [State 609] Terminating state 609 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
572 [State 609] Switching from state 609 to state 0
Copied 34928 (count=1)
Deleting state 609 0x0x2d3ef630
572 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 608
>> fuzzInit: datum forking for value 609
>> fuzzInit: datum forking for value 609
572 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 609)
        (ReadLSB w32 0 v609_fuzz_symb_609)))
    state 610 with condition (Not (Eq false
         (Eq (w32 609)
             (ReadLSB w32 0 v609_fuzz_symb_609))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-609-8048a0e
Size=2 Low=0 splitIndex=1 high=1
572 [State 0] Switching from state 0 to state 610
Copied 34928 (count=1)
Finalizing TB execution 610
s2e_dummyMainFunction
tcg-llvm-tb-609-8048a0e
572 [State 610] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 609 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb77071: 13 df                              adc ebx, edi             nextPC: 0xbfb77073
  2  1B @0xbfb77073: 9b                                 wait                     nextPC: 0xbfb77074
!!* pc != prev insn's next_pc; 0xbfb77073 != bfb77074
  3  1B @0xbfb77073:*9b                                 wait                     nextPC: 0xbfb77074
  4  1B @0xbfb77074: 57                                 push edi                 nextPC: 0xbfb77075
  5  2B @0xbfb77075: 13 00                              adc eax, [eax]           nextPC: 0xbfb77077
  6  2B @0xbfb77077: 00 00                              add [eax], al            nextPC: 0xbfb77079
  7  2B @0xbfb77079: 00 00                              add [eax], al            nextPC: 0xbfb7707b
  8  2B @0xbfb7707b: 00 00                              add [eax], al            nextPC: 0xbfb7707d
  9  2B @0xbfb7707d: 00 00                              add [eax], al            nextPC: 0xbfb7707f
 10  2B @0xbfb7707f: 00 00                              add [eax], al            nextPC: 0xbfb77081
 11  2B @0xbfb77081: 00 00                              add [eax], al            nextPC: 0xbfb77083
 12  2B @0xbfb77083: 00 00                              add [eax], al            nextPC: 0xbfb77085
 13  2B @0xbfb77085: 00 00                              add [eax], al            nextPC: 0xbfb77087
 14  2B @0xbfb77087: 00 00                              add [eax], al            nextPC: 0xbfb77089
 15  2B @0xbfb77089: 00 00                              add [eax], al            nextPC: 0xbfb7708b
 16  2B @0xbfb7708b: 00 00                              add [eax], al            nextPC: 0xbfb7708d
 17  2B @0xbfb7708d: 00 00                              add [eax], al            nextPC: 0xbfb7708f
 18  2B @0xbfb7708f: 00 00                              add [eax], al            nextPC: 0xbfb77091
 19  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
 20  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
 21  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
 22  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
 23  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
 24  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 25  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 26  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 27  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
573 [State 610] @0x080499bf, left buffer range after 27 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
573 [State 610] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
573 [State 610] Terminating state 610 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
573 [State 610] Switching from state 610 to state 0
Copied 34928 (count=1)
Deleting state 610 0x0x2d3ef630
573 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 609
>> fuzzInit: datum forking for value 610
>> fuzzInit: datum forking for value 610
573 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 610)
        (ReadLSB w32 0 v610_fuzz_symb_610)))
    state 611 with condition (Not (Eq false
         (Eq (w32 610)
             (ReadLSB w32 0 v610_fuzz_symb_610))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-610-8048a0e
Size=2 Low=0 splitIndex=1 high=1
573 [State 0] Switching from state 0 to state 611
Copied 34928 (count=1)
Finalizing TB execution 611
s2e_dummyMainFunction
tcg-llvm-tb-610-8048a0e
573 [State 611] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 610 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77072: df                                 invalid                  nextPC: 0xbfb77073
!!* pc != prev insn's next_pc; 0xbfb77072 != bfb77073
  2  6B @0xbfb77072:*df 9b 57 13 00 00                  fistp word [ebx+0x1357]  nextPC: 0xbfb77078
  3  2B @0xbfb77078: 00 00                              add [eax], al            nextPC: 0xbfb7707a
  4  2B @0xbfb7707a: 00 00                              add [eax], al            nextPC: 0xbfb7707c
  5  2B @0xbfb7707c: 00 00                              add [eax], al            nextPC: 0xbfb7707e
  6  2B @0xbfb7707e: 00 00                              add [eax], al            nextPC: 0xbfb77080
  7  2B @0xbfb77080: 00 00                              add [eax], al            nextPC: 0xbfb77082
  8  2B @0xbfb77082: 00 00                              add [eax], al            nextPC: 0xbfb77084
  9  2B @0xbfb77084: 00 00                              add [eax], al            nextPC: 0xbfb77086
 10  2B @0xbfb77086: 00 00                              add [eax], al            nextPC: 0xbfb77088
 11  2B @0xbfb77088: 00 00                              add [eax], al            nextPC: 0xbfb7708a
 12  2B @0xbfb7708a: 00 00                              add [eax], al            nextPC: 0xbfb7708c
 13  2B @0xbfb7708c: 00 00                              add [eax], al            nextPC: 0xbfb7708e
 14  2B @0xbfb7708e: 00 00                              add [eax], al            nextPC: 0xbfb77090
 15  2B @0xbfb77090: 00 00                              add [eax], al            nextPC: 0xbfb77092
 16  2B @0xbfb77092: 00 00                              add [eax], al            nextPC: 0xbfb77094
 17  2B @0xbfb77094: 00 00                              add [eax], al            nextPC: 0xbfb77096
 18  2B @0xbfb77096: 00 00                              add [eax], al            nextPC: 0xbfb77098
 19  2B @0xbfb77098: 00 00                              add [eax], al            nextPC: 0xbfb7709a
 20  2B @0xbfb7709a: 00 00                              add [eax], al            nextPC: 0xbfb7709c
 21  2B @0xbfb7709c: 00 00                              add [eax], al            nextPC: 0xbfb7709e
 22  2B @0xbfb7709e: 28 d7                              sub bh, dl               nextPC: 0xbfb770a0
 23  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
Firing timer event
574 [State 611] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
574 [State 611] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
574 [State 611] Terminating state 611 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
574 [State 611] Switching from state 611 to state 0
Copied 34928 (count=1)
Deleting state 611 0x0x2d579ab0
574 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 610
>> fuzzInit: datum forking for value 611
>> fuzzInit: datum forking for value 611
574 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 611)
        (ReadLSB w32 0 v611_fuzz_symb_611)))
    state 612 with condition (Not (Eq false
         (Eq (w32 611)
             (ReadLSB w32 0 v611_fuzz_symb_611))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-611-8048a0e
Size=2 Low=0 splitIndex=1 high=1
574 [State 0] Switching from state 0 to state 612
Copied 34928 (count=1)
Finalizing TB execution 612
s2e_dummyMainFunction
tcg-llvm-tb-611-8048a0e
574 [State 612] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 611 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77073: 9b                                 wait                     nextPC: 0xbfb77074
!!* pc != prev insn's next_pc; 0xbfb77073 != bfb77074
  2  1B @0xbfb77073:*9b                                 wait                     nextPC: 0xbfb77074
  3  1B @0xbfb77074: 57                                 push edi                 nextPC: 0xbfb77075
  4  2B @0xbfb77075: 13 00                              adc eax, [eax]           nextPC: 0xbfb77077
  5  2B @0xbfb77077: 00 00                              add [eax], al            nextPC: 0xbfb77079
  6  2B @0xbfb77079: 00 00                              add [eax], al            nextPC: 0xbfb7707b
  7  2B @0xbfb7707b: 00 00                              add [eax], al            nextPC: 0xbfb7707d
  8  2B @0xbfb7707d: 00 00                              add [eax], al            nextPC: 0xbfb7707f
  9  2B @0xbfb7707f: 00 00                              add [eax], al            nextPC: 0xbfb77081
 10  2B @0xbfb77081: 00 00                              add [eax], al            nextPC: 0xbfb77083
 11  2B @0xbfb77083: 00 00                              add [eax], al            nextPC: 0xbfb77085
 12  2B @0xbfb77085: 00 00                              add [eax], al            nextPC: 0xbfb77087
 13  2B @0xbfb77087: 00 00                              add [eax], al            nextPC: 0xbfb77089
 14  2B @0xbfb77089: 00 00                              add [eax], al            nextPC: 0xbfb7708b
 15  2B @0xbfb7708b: 00 00                              add [eax], al            nextPC: 0xbfb7708d
 16  2B @0xbfb7708d: 00 00                              add [eax], al            nextPC: 0xbfb7708f
 17  2B @0xbfb7708f: 00 00                              add [eax], al            nextPC: 0xbfb77091
 18  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
 19  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
 20  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
 21  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
 22  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
 23  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 24  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 25  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 26  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
Firing timer event
575 [State 612] @0x080499bf, left buffer range after 26 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
575 [State 612] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
575 [State 612] Terminating state 612 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
575 [State 612] Switching from state 612 to state 0
Copied 34928 (count=1)
Deleting state 612 0x0x2d6d6200
575 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 611
>> fuzzInit: datum forking for value 612
>> fuzzInit: datum forking for value 612
575 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 612)
        (ReadLSB w32 0 v612_fuzz_symb_612)))
    state 613 with condition (Not (Eq false
         (Eq (w32 612)
             (ReadLSB w32 0 v612_fuzz_symb_612))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-612-8048a0e
Size=2 Low=0 splitIndex=1 high=1
575 [State 0] Switching from state 0 to state 613
Copied 34928 (count=1)
Finalizing TB execution 613
s2e_dummyMainFunction
tcg-llvm-tb-612-8048a0e
575 [State 613] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 612 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb77074: 57                                 push edi                 nextPC: 0xbfb77075
  2  2B @0xbfb77075: 13 00                              adc eax, [eax]           nextPC: 0xbfb77077
  3  2B @0xbfb77077: 00 00                              add [eax], al            nextPC: 0xbfb77079
  4  2B @0xbfb77079: 00 00                              add [eax], al            nextPC: 0xbfb7707b
  5  2B @0xbfb7707b: 00 00                              add [eax], al            nextPC: 0xbfb7707d
  6  2B @0xbfb7707d: 00 00                              add [eax], al            nextPC: 0xbfb7707f
  7  2B @0xbfb7707f: 00 00                              add [eax], al            nextPC: 0xbfb77081
  8  2B @0xbfb77081: 00 00                              add [eax], al            nextPC: 0xbfb77083
  9  2B @0xbfb77083: 00 00                              add [eax], al            nextPC: 0xbfb77085
 10  2B @0xbfb77085: 00 00                              add [eax], al            nextPC: 0xbfb77087
 11  2B @0xbfb77087: 00 00                              add [eax], al            nextPC: 0xbfb77089
 12  2B @0xbfb77089: 00 00                              add [eax], al            nextPC: 0xbfb7708b
 13  2B @0xbfb7708b: 00 00                              add [eax], al            nextPC: 0xbfb7708d
 14  2B @0xbfb7708d: 00 00                              add [eax], al            nextPC: 0xbfb7708f
 15  2B @0xbfb7708f: 00 00                              add [eax], al            nextPC: 0xbfb77091
 16  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
 17  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
 18  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
 19  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
 20  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
 21  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 22  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 23  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 24  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
!!* pc != prev insn's next_pc; 0xbfb77077 != bfb770a6
 25  2B @0xbfb77077:*00*00                              add [eax], al            nextPC: 0xbfb77079
 26  2B @0xbfb77079:*00*00                              add [eax], al            nextPC: 0xbfb7707b
 27  2B @0xbfb7707b:*00*00                              add [eax], al            nextPC: 0xbfb7707d
 28  2B @0xbfb7707d:*00*00                              add [eax], al            nextPC: 0xbfb7707f
 29  2B @0xbfb7707f:*00*00                              add [eax], al            nextPC: 0xbfb77081
 30  2B @0xbfb77081:*00*00                              add [eax], al            nextPC: 0xbfb77083
 31  2B @0xbfb77083:*00*00                              add [eax], al            nextPC: 0xbfb77085
 32  2B @0xbfb77085:*00*00                              add [eax], al            nextPC: 0xbfb77087
 33  2B @0xbfb77087:*00*00                              add [eax], al            nextPC: 0xbfb77089
 34  2B @0xbfb77089:*00*00                              add [eax], al            nextPC: 0xbfb7708b
 35  2B @0xbfb7708b:*00*00                              add [eax], al            nextPC: 0xbfb7708d
 36  2B @0xbfb7708d:*00*00                              add [eax], al            nextPC: 0xbfb7708f
 37  2B @0xbfb7708f:*00*00                              add [eax], al            nextPC: 0xbfb77091
 38  2B @0xbfb77091:*00*00                              add [eax], al            nextPC: 0xbfb77093
 39  2B @0xbfb77093:*00*00                              add [eax], al            nextPC: 0xbfb77095
 40  2B @0xbfb77095:*00*00                              add [eax], al            nextPC: 0xbfb77097
 41  2B @0xbfb77097:*00*00                              add [eax], al            nextPC: 0xbfb77099
 42  2B @0xbfb77099:*00*00                              add [eax], al            nextPC: 0xbfb7709b
 43  2B @0xbfb7709b:*00*00                              add [eax], al            nextPC: 0xbfb7709d
 44  2B @0xbfb7709d:*00*28                              add [eax], ch            nextPC: 0xbfb7709f
 45  1B @0xbfb7709f:*d7                                 xlatb                    nextPC: 0xbfb770a0
 46  6B @0xbfb770a0:*ff*bf*28*d7*ff*bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
575 [State 613] @0x080499bf, left buffer range after 46 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0:*ff*bf*28*d7*ff*bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
575 [State 613] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
575 [State 613] Terminating state 613 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
575 [State 613] Switching from state 613 to state 0
Copied 34928 (count=1)
Deleting state 613 0x0x2d6d6200
Firing timer event
576 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 612
>> fuzzInit: datum forking for value 613
>> fuzzInit: datum forking for value 613
576 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 613)
        (ReadLSB w32 0 v613_fuzz_symb_613)))
    state 614 with condition (Not (Eq false
         (Eq (w32 613)
             (ReadLSB w32 0 v613_fuzz_symb_613))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-613-8048a0e
Size=2 Low=0 splitIndex=1 high=1
576 [State 0] Switching from state 0 to state 614
Copied 34928 (count=1)
Finalizing TB execution 614
s2e_dummyMainFunction
tcg-llvm-tb-613-8048a0e
576 [State 614] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 613 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb77075: 13 00                              adc eax, [eax]           nextPC: 0xbfb77077
  2  2B @0xbfb77077: 00 00                              add [eax], al            nextPC: 0xbfb77079
  3  2B @0xbfb77079: 00 00                              add [eax], al            nextPC: 0xbfb7707b
  4  2B @0xbfb7707b: 00 00                              add [eax], al            nextPC: 0xbfb7707d
  5  2B @0xbfb7707d: 00 00                              add [eax], al            nextPC: 0xbfb7707f
  6  2B @0xbfb7707f: 00 00                              add [eax], al            nextPC: 0xbfb77081
  7  2B @0xbfb77081: 00 00                              add [eax], al            nextPC: 0xbfb77083
  8  2B @0xbfb77083: 00 00                              add [eax], al            nextPC: 0xbfb77085
  9  2B @0xbfb77085: 00 00                              add [eax], al            nextPC: 0xbfb77087
 10  2B @0xbfb77087: 00 00                              add [eax], al            nextPC: 0xbfb77089
 11  2B @0xbfb77089: 00 00                              add [eax], al            nextPC: 0xbfb7708b
 12  2B @0xbfb7708b: 00 00                              add [eax], al            nextPC: 0xbfb7708d
 13  2B @0xbfb7708d: 00 00                              add [eax], al            nextPC: 0xbfb7708f
 14  2B @0xbfb7708f: 00 00                              add [eax], al            nextPC: 0xbfb77091
 15  2B @0xbfb77091: 00 00                              add [eax], al            nextPC: 0xbfb77093
 16  2B @0xbfb77093: 00 00                              add [eax], al            nextPC: 0xbfb77095
 17  2B @0xbfb77095: 00 00                              add [eax], al            nextPC: 0xbfb77097
 18  2B @0xbfb77097: 00 00                              add [eax], al            nextPC: 0xbfb77099
 19  2B @0xbfb77099: 00 00                              add [eax], al            nextPC: 0xbfb7709b
 20  2B @0xbfb7709b: 00 00                              add [eax], al            nextPC: 0xbfb7709d
 21  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
 22  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
 23  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
576 [State 614] @0x080499bf, left buffer range after 23 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
576 [State 614] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
576 [State 614] Terminating state 614 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
576 [State 614] Switching from state 614 to state 0
Copied 34928 (count=1)
Deleting state 614 0x0x2d6d6200
Firing timer event
577 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 613
>> fuzzInit: datum forking for value 614
>> fuzzInit: datum forking for value 614
577 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 614)
        (ReadLSB w32 0 v614_fuzz_symb_614)))
    state 615 with condition (Not (Eq false
         (Eq (w32 614)
             (ReadLSB w32 0 v614_fuzz_symb_614))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-614-8048a0e
Size=2 Low=0 splitIndex=1 high=1
577 [State 0] Switching from state 0 to state 615
Copied 34928 (count=1)
Finalizing TB execution 615
s2e_dummyMainFunction
tcg-llvm-tb-614-8048a0e
577 [State 615] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 614 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
577 [State 615] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77076: 00 00             add [eax], al           
577 [State 615] Terminating state 615 with message 'eliminated a state with an impossible first instruction'
577 [State 615] Switching from state 615 to state 0
Copied 34928 (count=1)
Deleting state 615 0x0x2d85b680
577 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 614
>> fuzzInit: datum forking for value 615
>> fuzzInit: datum forking for value 615
578 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 615)
        (ReadLSB w32 0 v615_fuzz_symb_615)))
    state 616 with condition (Not (Eq false
         (Eq (w32 615)
             (ReadLSB w32 0 v615_fuzz_symb_615))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-615-8048a0e
Size=2 Low=0 splitIndex=1 high=1
578 [State 0] Switching from state 0 to state 616
Copied 34928 (count=1)
Finalizing TB execution 616
s2e_dummyMainFunction
tcg-llvm-tb-615-8048a0e
Firing timer event
578 [State 616] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 615 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
578 [State 616] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77077: 00 00             add [eax], al           
578 [State 616] Terminating state 616 with message 'eliminated a state with an impossible first instruction'
578 [State 616] Switching from state 616 to state 0
Copied 34928 (count=1)
Deleting state 616 0x0x2d85b680
578 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 615
>> fuzzInit: datum forking for value 616
>> fuzzInit: datum forking for value 616
579 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 616)
        (ReadLSB w32 0 v616_fuzz_symb_616)))
    state 617 with condition (Not (Eq false
         (Eq (w32 616)
             (ReadLSB w32 0 v616_fuzz_symb_616))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-616-8048a0e
Size=2 Low=0 splitIndex=1 high=1
579 [State 0] Switching from state 0 to state 617
Copied 34928 (count=1)
Finalizing TB execution 617
s2e_dummyMainFunction
tcg-llvm-tb-616-8048a0e
Firing timer event
579 [State 617] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 616 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
579 [State 617] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77078: 00 00             add [eax], al           
579 [State 617] Terminating state 617 with message 'eliminated a state with an impossible first instruction'
579 [State 617] Switching from state 617 to state 0
Copied 34928 (count=1)
Deleting state 617 0x0x2d85b680
579 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 616
>> fuzzInit: datum forking for value 617
>> fuzzInit: datum forking for value 617
580 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 617)
        (ReadLSB w32 0 v617_fuzz_symb_617)))
    state 618 with condition (Not (Eq false
         (Eq (w32 617)
             (ReadLSB w32 0 v617_fuzz_symb_617))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-617-8048a0e
Size=2 Low=0 splitIndex=1 high=1
580 [State 0] Switching from state 0 to state 618
Copied 34928 (count=1)
Finalizing TB execution 618
s2e_dummyMainFunction
tcg-llvm-tb-617-8048a0e
580 [State 618] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 617 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
580 [State 618] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77079: 00 00             add [eax], al           
580 [State 618] Terminating state 618 with message 'eliminated a state with an impossible first instruction'
580 [State 618] Switching from state 618 to state 0
Copied 34928 (count=1)
Deleting state 618 0x0x2d85b680
580 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 617
>> fuzzInit: datum forking for value 618
>> fuzzInit: datum forking for value 618
580 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 618)
        (ReadLSB w32 0 v618_fuzz_symb_618)))
    state 619 with condition (Not (Eq false
         (Eq (w32 618)
             (ReadLSB w32 0 v618_fuzz_symb_618))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-618-8048a0e
Size=2 Low=0 splitIndex=1 high=1
580 [State 0] Switching from state 0 to state 619
Copied 34928 (count=1)
Finalizing TB execution 619
s2e_dummyMainFunction
tcg-llvm-tb-618-8048a0e
581 [State 619] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 618 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
581 [State 619] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7707a: 00 00             add [eax], al           
581 [State 619] Terminating state 619 with message 'eliminated a state with an impossible first instruction'
581 [State 619] Switching from state 619 to state 0
Copied 34928 (count=1)
Deleting state 619 0x0x2d85b680
Firing timer event
581 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 618
>> fuzzInit: datum forking for value 619
>> fuzzInit: datum forking for value 619
581 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 619)
        (ReadLSB w32 0 v619_fuzz_symb_619)))
    state 620 with condition (Not (Eq false
         (Eq (w32 619)
             (ReadLSB w32 0 v619_fuzz_symb_619))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-619-8048a0e
Size=2 Low=0 splitIndex=1 high=1
581 [State 0] Switching from state 0 to state 620
Copied 34928 (count=1)
Finalizing TB execution 620
s2e_dummyMainFunction
tcg-llvm-tb-619-8048a0e
581 [State 620] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 619 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
582 [State 620] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7707b: 00 00             add [eax], al           
582 [State 620] Terminating state 620 with message 'eliminated a state with an impossible first instruction'
582 [State 620] Switching from state 620 to state 0
Copied 34928 (count=1)
Deleting state 620 0x0x2d85b680
582 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 619
>> fuzzInit: datum forking for value 620
>> fuzzInit: datum forking for value 620
582 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 620)
        (ReadLSB w32 0 v620_fuzz_symb_620)))
    state 621 with condition (Not (Eq false
         (Eq (w32 620)
             (ReadLSB w32 0 v620_fuzz_symb_620))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-620-8048a0e
Size=2 Low=0 splitIndex=1 high=1
582 [State 0] Switching from state 0 to state 621
Copied 34928 (count=1)
Finalizing TB execution 621
s2e_dummyMainFunction
tcg-llvm-tb-620-8048a0e
Firing timer event
582 [State 621] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 620 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
582 [State 621] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7707c: 00 00             add [eax], al           
582 [State 621] Terminating state 621 with message 'eliminated a state with an impossible first instruction'
582 [State 621] Switching from state 621 to state 0
Copied 34928 (count=1)
Deleting state 621 0x0x2d85b680
583 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 620
>> fuzzInit: datum forking for value 621
>> fuzzInit: datum forking for value 621
583 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 621)
        (ReadLSB w32 0 v621_fuzz_symb_621)))
    state 622 with condition (Not (Eq false
         (Eq (w32 621)
             (ReadLSB w32 0 v621_fuzz_symb_621))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-621-8048a0e
Size=2 Low=0 splitIndex=1 high=1
583 [State 0] Switching from state 0 to state 622
Copied 34928 (count=1)
Finalizing TB execution 622
s2e_dummyMainFunction
tcg-llvm-tb-621-8048a0e
583 [State 622] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 621 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
583 [State 622] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7707d: 00 00             add [eax], al           
583 [State 622] Terminating state 622 with message 'eliminated a state with an impossible first instruction'
583 [State 622] Switching from state 622 to state 0
Copied 34928 (count=1)
Deleting state 622 0x0x2d85b680
583 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 621
>> fuzzInit: datum forking for value 622
>> fuzzInit: datum forking for value 622
584 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 622)
        (ReadLSB w32 0 v622_fuzz_symb_622)))
    state 623 with condition (Not (Eq false
         (Eq (w32 622)
             (ReadLSB w32 0 v622_fuzz_symb_622))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-622-8048a0e
Size=2 Low=0 splitIndex=1 high=1
584 [State 0] Switching from state 0 to state 623
Copied 34928 (count=1)
Finalizing TB execution 623
s2e_dummyMainFunction
tcg-llvm-tb-622-8048a0e
584 [State 623] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 622 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
584 [State 623] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7707e: 00 00             add [eax], al           
584 [State 623] Terminating state 623 with message 'eliminated a state with an impossible first instruction'
584 [State 623] Switching from state 623 to state 0
Copied 34928 (count=1)
Deleting state 623 0x0x2d85b680
Firing timer event
584 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 622
>> fuzzInit: datum forking for value 623
>> fuzzInit: datum forking for value 623
585 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 623)
        (ReadLSB w32 0 v623_fuzz_symb_623)))
    state 624 with condition (Not (Eq false
         (Eq (w32 623)
             (ReadLSB w32 0 v623_fuzz_symb_623))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-623-8048a0e
Size=2 Low=0 splitIndex=1 high=1
585 [State 0] Switching from state 0 to state 624
Copied 34928 (count=1)
Finalizing TB execution 624
s2e_dummyMainFunction
tcg-llvm-tb-623-8048a0e
585 [State 624] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 623 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
585 [State 624] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7707f: 00 00             add [eax], al           
585 [State 624] Terminating state 624 with message 'eliminated a state with an impossible first instruction'
585 [State 624] Switching from state 624 to state 0
Copied 34928 (count=1)
Deleting state 624 0x0x2d85b680
585 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 623
>> fuzzInit: datum forking for value 624
>> fuzzInit: datum forking for value 624
586 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 624)
        (ReadLSB w32 0 v624_fuzz_symb_624)))
    state 625 with condition (Not (Eq false
         (Eq (w32 624)
             (ReadLSB w32 0 v624_fuzz_symb_624))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-624-8048a0e
Size=2 Low=0 splitIndex=1 high=1
586 [State 0] Switching from state 0 to state 625
Copied 34928 (count=1)
Finalizing TB execution 625
s2e_dummyMainFunction
tcg-llvm-tb-624-8048a0e
Firing timer event
586 [State 625] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 624 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
586 [State 625] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77080: 00 00             add [eax], al           
586 [State 625] Terminating state 625 with message 'eliminated a state with an impossible first instruction'
586 [State 625] Switching from state 625 to state 0
Copied 34928 (count=1)
Deleting state 625 0x0x2d85b680
586 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 624
>> fuzzInit: datum forking for value 625
>> fuzzInit: datum forking for value 625
586 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 625)
        (ReadLSB w32 0 v625_fuzz_symb_625)))
    state 626 with condition (Not (Eq false
         (Eq (w32 625)
             (ReadLSB w32 0 v625_fuzz_symb_625))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-625-8048a0e
Size=2 Low=0 splitIndex=1 high=1
586 [State 0] Switching from state 0 to state 626
Copied 34928 (count=1)
Finalizing TB execution 626
s2e_dummyMainFunction
tcg-llvm-tb-625-8048a0e
587 [State 626] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 625 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
587 [State 626] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77081: 00 00             add [eax], al           
587 [State 626] Terminating state 626 with message 'eliminated a state with an impossible first instruction'
587 [State 626] Switching from state 626 to state 0
Copied 34928 (count=1)
Deleting state 626 0x0x2d85b680
587 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 625
>> fuzzInit: datum forking for value 626
>> fuzzInit: datum forking for value 626
587 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 626)
        (ReadLSB w32 0 v626_fuzz_symb_626)))
    state 627 with condition (Not (Eq false
         (Eq (w32 626)
             (ReadLSB w32 0 v626_fuzz_symb_626))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-626-8048a0e
Size=2 Low=0 splitIndex=1 high=1
587 [State 0] Switching from state 0 to state 627
Copied 34928 (count=1)
Finalizing TB execution 627
s2e_dummyMainFunction
tcg-llvm-tb-626-8048a0e
587 [State 627] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 626 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
587 [State 627] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77082: 00 00             add [eax], al           
587 [State 627] Terminating state 627 with message 'eliminated a state with an impossible first instruction'
587 [State 627] Switching from state 627 to state 0
Copied 34928 (count=1)
Deleting state 627 0x0x2dbc9e30
Firing timer event
588 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 626
>> fuzzInit: datum forking for value 627
>> fuzzInit: datum forking for value 627
588 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 627)
        (ReadLSB w32 0 v627_fuzz_symb_627)))
    state 628 with condition (Not (Eq false
         (Eq (w32 627)
             (ReadLSB w32 0 v627_fuzz_symb_627))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-627-8048a0e
Size=2 Low=0 splitIndex=1 high=1
588 [State 0] Switching from state 0 to state 628
Copied 34928 (count=1)
Finalizing TB execution 628
s2e_dummyMainFunction
tcg-llvm-tb-627-8048a0e
588 [State 628] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 627 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
588 [State 628] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77083: 00 00             add [eax], al           
588 [State 628] Terminating state 628 with message 'eliminated a state with an impossible first instruction'
588 [State 628] Switching from state 628 to state 0
Copied 34928 (count=1)
Deleting state 628 0x0x2dbc9e30
589 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 627
>> fuzzInit: datum forking for value 628
>> fuzzInit: datum forking for value 628
>> fuzzInit: datum forking for value 628
589 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 628)
        (ReadLSB w32 0 v628_fuzz_symb_628)))
    state 629 with condition (Not (Eq false
         (Eq (w32 628)
             (ReadLSB w32 0 v628_fuzz_symb_628))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-628-8048a0e
Size=2 Low=0 splitIndex=1 high=1
589 [State 0] Switching from state 0 to state 629
Copied 34928 (count=1)
Finalizing TB execution 629
s2e_dummyMainFunction
tcg-llvm-tb-628-8048a0e
Firing timer event
589 [State 629] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 628 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
589 [State 629] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77084: 00 00             add [eax], al           
589 [State 629] Terminating state 629 with message 'eliminated a state with an impossible first instruction'
589 [State 629] Switching from state 629 to state 0
Copied 34928 (count=1)
Deleting state 629 0x0x2dbc9e30
589 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 628
>> fuzzInit: datum forking for value 629
>> fuzzInit: datum forking for value 629
>> fuzzInit: datum forking for value 629
590 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 629)
        (ReadLSB w32 0 v629_fuzz_symb_629)))
    state 630 with condition (Not (Eq false
         (Eq (w32 629)
             (ReadLSB w32 0 v629_fuzz_symb_629))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-629-8048a0e
Size=2 Low=0 splitIndex=1 high=1
590 [State 0] Switching from state 0 to state 630
Copied 34928 (count=1)
Finalizing TB execution 630
s2e_dummyMainFunction
tcg-llvm-tb-629-8048a0e
Firing timer event
590 [State 630] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 629 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
590 [State 630] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77085: 00 00             add [eax], al           
590 [State 630] Terminating state 630 with message 'eliminated a state with an impossible first instruction'
590 [State 630] Switching from state 630 to state 0
Copied 34928 (count=1)
Deleting state 630 0x0x2dbc9e30
590 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 629
>> fuzzInit: datum forking for value 630
>> fuzzInit: datum forking for value 630
591 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 630)
        (ReadLSB w32 0 v630_fuzz_symb_630)))
    state 631 with condition (Not (Eq false
         (Eq (w32 630)
             (ReadLSB w32 0 v630_fuzz_symb_630))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-630-8048a0e
Size=2 Low=0 splitIndex=1 high=1
591 [State 0] Switching from state 0 to state 631
Copied 34928 (count=1)
Finalizing TB execution 631
s2e_dummyMainFunction
tcg-llvm-tb-630-8048a0e
Firing timer event
591 [State 631] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 630 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
591 [State 631] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77086: 00 00             add [eax], al           
591 [State 631] Terminating state 631 with message 'eliminated a state with an impossible first instruction'
591 [State 631] Switching from state 631 to state 0
Copied 34928 (count=1)
Deleting state 631 0x0x2dbc9e30
591 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 630
>> fuzzInit: datum forking for value 631
>> fuzzInit: datum forking for value 631
592 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 631)
        (ReadLSB w32 0 v631_fuzz_symb_631)))
    state 632 with condition (Not (Eq false
         (Eq (w32 631)
             (ReadLSB w32 0 v631_fuzz_symb_631))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-631-8048a0e
Size=2 Low=0 splitIndex=1 high=1
592 [State 0] Switching from state 0 to state 632
Copied 34928 (count=1)
Finalizing TB execution 632
s2e_dummyMainFunction
tcg-llvm-tb-631-8048a0e
Firing timer event
592 [State 632] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 631 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
592 [State 632] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77087: 00 00             add [eax], al           
592 [State 632] Terminating state 632 with message 'eliminated a state with an impossible first instruction'
592 [State 632] Switching from state 632 to state 0
Copied 34928 (count=1)
Deleting state 632 0x0x2dbc9e30
592 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 631
>> fuzzInit: datum forking for value 632
>> fuzzInit: datum forking for value 632
593 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 632)
        (ReadLSB w32 0 v632_fuzz_symb_632)))
    state 633 with condition (Not (Eq false
         (Eq (w32 632)
             (ReadLSB w32 0 v632_fuzz_symb_632))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-632-8048a0e
Size=2 Low=0 splitIndex=1 high=1
593 [State 0] Switching from state 0 to state 633
Copied 34928 (count=1)
Finalizing TB execution 633
s2e_dummyMainFunction
tcg-llvm-tb-632-8048a0e
Firing timer event
593 [State 633] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 632 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
593 [State 633] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77088: 00 00             add [eax], al           
593 [State 633] Terminating state 633 with message 'eliminated a state with an impossible first instruction'
593 [State 633] Switching from state 633 to state 0
Copied 34928 (count=1)
Deleting state 633 0x0x2dbc9e30
593 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 632
>> fuzzInit: datum forking for value 633
>> fuzzInit: datum forking for value 633
594 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 633)
        (ReadLSB w32 0 v633_fuzz_symb_633)))
    state 634 with condition (Not (Eq false
         (Eq (w32 633)
             (ReadLSB w32 0 v633_fuzz_symb_633))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-633-8048a0e
Size=2 Low=0 splitIndex=1 high=1
594 [State 0] Switching from state 0 to state 634
Copied 34928 (count=1)
Finalizing TB execution 634
s2e_dummyMainFunction
tcg-llvm-tb-633-8048a0e
Firing timer event
594 [State 634] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 633 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
594 [State 634] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77089: 00 00             add [eax], al           
594 [State 634] Terminating state 634 with message 'eliminated a state with an impossible first instruction'
594 [State 634] Switching from state 634 to state 0
Copied 34928 (count=1)
Deleting state 634 0x0x2dedca90
594 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 633
>> fuzzInit: datum forking for value 634
>> fuzzInit: datum forking for value 634
595 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 634)
        (ReadLSB w32 0 v634_fuzz_symb_634)))
    state 635 with condition (Not (Eq false
         (Eq (w32 634)
             (ReadLSB w32 0 v634_fuzz_symb_634))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-634-8048a0e
Size=2 Low=0 splitIndex=1 high=1
595 [State 0] Switching from state 0 to state 635
Copied 34928 (count=1)
Finalizing TB execution 635
s2e_dummyMainFunction
tcg-llvm-tb-634-8048a0e
595 [State 635] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 634 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
595 [State 635] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7708a: 00 00             add [eax], al           
595 [State 635] Terminating state 635 with message 'eliminated a state with an impossible first instruction'
595 [State 635] Switching from state 635 to state 0
Copied 34928 (count=1)
Deleting state 635 0x0x2dd9f3f0
595 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 634
>> fuzzInit: datum forking for value 635
>> fuzzInit: datum forking for value 635
596 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 635)
        (ReadLSB w32 0 v635_fuzz_symb_635)))
    state 636 with condition (Not (Eq false
         (Eq (w32 635)
             (ReadLSB w32 0 v635_fuzz_symb_635))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-635-8048a0e
Size=2 Low=0 splitIndex=1 high=1
596 [State 0] Switching from state 0 to state 636
Copied 34928 (count=1)
Finalizing TB execution 636
s2e_dummyMainFunction
tcg-llvm-tb-635-8048a0e
596 [State 636] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 635 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
596 [State 636] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7708b: 00 00             add [eax], al           
596 [State 636] Terminating state 636 with message 'eliminated a state with an impossible first instruction'
596 [State 636] Switching from state 636 to state 0
Copied 34928 (count=1)
Deleting state 636 0x0x2df3c260
Firing timer event
596 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 635
>> fuzzInit: datum forking for value 636
>> fuzzInit: datum forking for value 636
596 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 636)
        (ReadLSB w32 0 v636_fuzz_symb_636)))
    state 637 with condition (Not (Eq false
         (Eq (w32 636)
             (ReadLSB w32 0 v636_fuzz_symb_636))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-636-8048a0e
Size=2 Low=0 splitIndex=1 high=1
596 [State 0] Switching from state 0 to state 637
Copied 34928 (count=1)
Finalizing TB execution 637
s2e_dummyMainFunction
tcg-llvm-tb-636-8048a0e
597 [State 637] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 636 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
597 [State 637] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7708c: 00 00             add [eax], al           
597 [State 637] Terminating state 637 with message 'eliminated a state with an impossible first instruction'
597 [State 637] Switching from state 637 to state 0
Copied 34928 (count=1)
Deleting state 637 0x0x2df3c260
597 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 636
>> fuzzInit: datum forking for value 637
>> fuzzInit: datum forking for value 637
597 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 637)
        (ReadLSB w32 0 v637_fuzz_symb_637)))
    state 638 with condition (Not (Eq false
         (Eq (w32 637)
             (ReadLSB w32 0 v637_fuzz_symb_637))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-637-8048a0e
Size=2 Low=0 splitIndex=1 high=1
597 [State 0] Switching from state 0 to state 638
Copied 34928 (count=1)
Finalizing TB execution 638
s2e_dummyMainFunction
tcg-llvm-tb-637-8048a0e
Firing timer event
597 [State 638] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 637 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
598 [State 638] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7708d: 00 00             add [eax], al           
598 [State 638] Terminating state 638 with message 'eliminated a state with an impossible first instruction'
598 [State 638] Switching from state 638 to state 0
Copied 34928 (count=1)
Deleting state 638 0x0x2df3c260
598 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 637
>> fuzzInit: datum forking for value 638
>> fuzzInit: datum forking for value 638
598 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 638)
        (ReadLSB w32 0 v638_fuzz_symb_638)))
    state 639 with condition (Not (Eq false
         (Eq (w32 638)
             (ReadLSB w32 0 v638_fuzz_symb_638))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-638-8048a0e
Size=2 Low=0 splitIndex=1 high=1
598 [State 0] Switching from state 0 to state 639
Copied 34928 (count=1)
Finalizing TB execution 639
s2e_dummyMainFunction
tcg-llvm-tb-638-8048a0e
598 [State 639] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 638 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
598 [State 639] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7708e: 00 00             add [eax], al           
598 [State 639] Terminating state 639 with message 'eliminated a state with an impossible first instruction'
598 [State 639] Switching from state 639 to state 0
Copied 34928 (count=1)
Deleting state 639 0x0x2df3c260
599 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 638
>> fuzzInit: datum forking for value 639
>> fuzzInit: datum forking for value 639
599 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 639)
        (ReadLSB w32 0 v639_fuzz_symb_639)))
    state 640 with condition (Not (Eq false
         (Eq (w32 639)
             (ReadLSB w32 0 v639_fuzz_symb_639))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-639-8048a0e
Size=2 Low=0 splitIndex=1 high=1
599 [State 0] Switching from state 0 to state 640
Copied 34928 (count=1)
Finalizing TB execution 640
s2e_dummyMainFunction
tcg-llvm-tb-639-8048a0e
599 [State 640] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 639 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
599 [State 640] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7708f: 00 00             add [eax], al           
599 [State 640] Terminating state 640 with message 'eliminated a state with an impossible first instruction'
599 [State 640] Switching from state 640 to state 0
Copied 34928 (count=1)
Deleting state 640 0x0x2e02d460
Firing timer event
599 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 639
>> fuzzInit: datum forking for value 640
>> fuzzInit: datum forking for value 640
600 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 640)
        (ReadLSB w32 0 v640_fuzz_symb_640)))
    state 641 with condition (Not (Eq false
         (Eq (w32 640)
             (ReadLSB w32 0 v640_fuzz_symb_640))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-640-8048a0e
Size=2 Low=0 splitIndex=1 high=1
600 [State 0] Switching from state 0 to state 641
Copied 34928 (count=1)
Finalizing TB execution 641
s2e_dummyMainFunction
tcg-llvm-tb-640-8048a0e
600 [State 641] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 640 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
600 [State 641] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77090: 00 00             add [eax], al           
600 [State 641] Terminating state 641 with message 'eliminated a state with an impossible first instruction'
600 [State 641] Switching from state 641 to state 0
Copied 34928 (count=1)
Deleting state 641 0x0x2e02d460
600 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 640
>> fuzzInit: datum forking for value 641
>> fuzzInit: datum forking for value 641
601 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 641)
        (ReadLSB w32 0 v641_fuzz_symb_641)))
    state 642 with condition (Not (Eq false
         (Eq (w32 641)
             (ReadLSB w32 0 v641_fuzz_symb_641))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-641-8048a0e
Size=2 Low=0 splitIndex=1 high=1
601 [State 0] Switching from state 0 to state 642
Copied 34928 (count=1)
Finalizing TB execution 642
s2e_dummyMainFunction
tcg-llvm-tb-641-8048a0e
Firing timer event
601 [State 642] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 641 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
601 [State 642] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77091: 00 00             add [eax], al           
601 [State 642] Terminating state 642 with message 'eliminated a state with an impossible first instruction'
601 [State 642] Switching from state 642 to state 0
Copied 34928 (count=1)
Deleting state 642 0x0x2e02d460
601 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 641
>> fuzzInit: datum forking for value 642
>> fuzzInit: datum forking for value 642
602 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 642)
        (ReadLSB w32 0 v642_fuzz_symb_642)))
    state 643 with condition (Not (Eq false
         (Eq (w32 642)
             (ReadLSB w32 0 v642_fuzz_symb_642))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-642-8048a0e
Size=2 Low=0 splitIndex=1 high=1
602 [State 0] Switching from state 0 to state 643
Copied 34928 (count=1)
Finalizing TB execution 643
s2e_dummyMainFunction
tcg-llvm-tb-642-8048a0e
Firing timer event
602 [State 643] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 642 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
602 [State 643] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77092: 00 00             add [eax], al           
602 [State 643] Terminating state 643 with message 'eliminated a state with an impossible first instruction'
602 [State 643] Switching from state 643 to state 0
Copied 34928 (count=1)
Deleting state 643 0x0x2e02d460
602 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 642
>> fuzzInit: datum forking for value 643
>> fuzzInit: datum forking for value 643
602 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 643)
        (ReadLSB w32 0 v643_fuzz_symb_643)))
    state 644 with condition (Not (Eq false
         (Eq (w32 643)
             (ReadLSB w32 0 v643_fuzz_symb_643))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-643-8048a0e
Size=2 Low=0 splitIndex=1 high=1
603 [State 0] Switching from state 0 to state 644
Copied 34928 (count=1)
Finalizing TB execution 644
s2e_dummyMainFunction
tcg-llvm-tb-643-8048a0e
603 [State 644] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 643 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
603 [State 644] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77093: 00 00             add [eax], al           
603 [State 644] Terminating state 644 with message 'eliminated a state with an impossible first instruction'
603 [State 644] Switching from state 644 to state 0
Copied 34928 (count=1)
Deleting state 644 0x0x2e02d460
603 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 643
>> fuzzInit: datum forking for value 644
>> fuzzInit: datum forking for value 644
603 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 644)
        (ReadLSB w32 0 v644_fuzz_symb_644)))
    state 645 with condition (Not (Eq false
         (Eq (w32 644)
             (ReadLSB w32 0 v644_fuzz_symb_644))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-644-8048a0e
Size=2 Low=0 splitIndex=1 high=1
603 [State 0] Switching from state 0 to state 645
Copied 34928 (count=1)
Finalizing TB execution 645
s2e_dummyMainFunction
tcg-llvm-tb-644-8048a0e
603 [State 645] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 644 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
604 [State 645] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77094: 00 00             add [eax], al           
604 [State 645] Terminating state 645 with message 'eliminated a state with an impossible first instruction'
604 [State 645] Switching from state 645 to state 0
Copied 34928 (count=1)
Deleting state 645 0x0x2e02d460
604 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 644
>> fuzzInit: datum forking for value 645
>> fuzzInit: datum forking for value 645
604 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 645)
        (ReadLSB w32 0 v645_fuzz_symb_645)))
    state 646 with condition (Not (Eq false
         (Eq (w32 645)
             (ReadLSB w32 0 v645_fuzz_symb_645))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-645-8048a0e
Size=2 Low=0 splitIndex=1 high=1
604 [State 0] Switching from state 0 to state 646
Copied 34928 (count=1)
Finalizing TB execution 646
s2e_dummyMainFunction
tcg-llvm-tb-645-8048a0e
Firing timer event
604 [State 646] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 645 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
604 [State 646] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77095: 00 00             add [eax], al           
604 [State 646] Terminating state 646 with message 'eliminated a state with an impossible first instruction'
604 [State 646] Switching from state 646 to state 0
Copied 34928 (count=1)
Deleting state 646 0x0x2e02d460
605 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 645
>> fuzzInit: datum forking for value 646
>> fuzzInit: datum forking for value 646
605 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 646)
        (ReadLSB w32 0 v646_fuzz_symb_646)))
    state 647 with condition (Not (Eq false
         (Eq (w32 646)
             (ReadLSB w32 0 v646_fuzz_symb_646))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-646-8048a0e
Size=2 Low=0 splitIndex=1 high=1
605 [State 0] Switching from state 0 to state 647
Copied 34928 (count=1)
Finalizing TB execution 647
s2e_dummyMainFunction
tcg-llvm-tb-646-8048a0e
Firing timer event
605 [State 647] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 646 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
605 [State 647] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77096: 00 00             add [eax], al           
605 [State 647] Terminating state 647 with message 'eliminated a state with an impossible first instruction'
605 [State 647] Switching from state 647 to state 0
Copied 34928 (count=1)
Deleting state 647 0x0x2e02d460
606 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 646
>> fuzzInit: datum forking for value 647
>> fuzzInit: datum forking for value 647
606 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 647)
        (ReadLSB w32 0 v647_fuzz_symb_647)))
    state 648 with condition (Not (Eq false
         (Eq (w32 647)
             (ReadLSB w32 0 v647_fuzz_symb_647))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-647-8048a0e
Size=2 Low=0 splitIndex=1 high=1
606 [State 0] Switching from state 0 to state 648
Copied 34928 (count=1)
Finalizing TB execution 648
s2e_dummyMainFunction
tcg-llvm-tb-647-8048a0e
Firing timer event
606 [State 648] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 647 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
606 [State 648] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77097: 00 00             add [eax], al           
606 [State 648] Terminating state 648 with message 'eliminated a state with an impossible first instruction'
606 [State 648] Switching from state 648 to state 0
Copied 34928 (count=1)
Deleting state 648 0x0x2e02d460
606 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 647
>> fuzzInit: datum forking for value 648
>> fuzzInit: datum forking for value 648
607 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 648)
        (ReadLSB w32 0 v648_fuzz_symb_648)))
    state 649 with condition (Not (Eq false
         (Eq (w32 648)
             (ReadLSB w32 0 v648_fuzz_symb_648))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-648-8048a0e
Size=2 Low=0 splitIndex=1 high=1
607 [State 0] Switching from state 0 to state 649
Copied 34928 (count=1)
Finalizing TB execution 649
s2e_dummyMainFunction
tcg-llvm-tb-648-8048a0e
607 [State 649] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 648 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
607 [State 649] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77098: 00 00             add [eax], al           
607 [State 649] Terminating state 649 with message 'eliminated a state with an impossible first instruction'
607 [State 649] Switching from state 649 to state 0
Copied 34928 (count=1)
Deleting state 649 0x0x2e02d460
Firing timer event
607 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 648
>> fuzzInit: datum forking for value 649
>> fuzzInit: datum forking for value 649
608 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 649)
        (ReadLSB w32 0 v649_fuzz_symb_649)))
    state 650 with condition (Not (Eq false
         (Eq (w32 649)
             (ReadLSB w32 0 v649_fuzz_symb_649))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-649-8048a0e
Size=2 Low=0 splitIndex=1 high=1
608 [State 0] Switching from state 0 to state 650
Copied 34928 (count=1)
Finalizing TB execution 650
s2e_dummyMainFunction
tcg-llvm-tb-649-8048a0e
608 [State 650] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 649 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
608 [State 650] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77099: 00 00             add [eax], al           
608 [State 650] Terminating state 650 with message 'eliminated a state with an impossible first instruction'
608 [State 650] Switching from state 650 to state 0
Copied 34928 (count=1)
Deleting state 650 0x0x2e02d460
Firing timer event
608 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 649
>> fuzzInit: datum forking for value 650
>> fuzzInit: datum forking for value 650
609 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 650)
        (ReadLSB w32 0 v650_fuzz_symb_650)))
    state 651 with condition (Not (Eq false
         (Eq (w32 650)
             (ReadLSB w32 0 v650_fuzz_symb_650))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-650-8048a0e
Size=2 Low=0 splitIndex=1 high=1
609 [State 0] Switching from state 0 to state 651
Copied 34928 (count=1)
Finalizing TB execution 651
s2e_dummyMainFunction
tcg-llvm-tb-650-8048a0e
609 [State 651] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 650 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
609 [State 651] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7709a: 00 00             add [eax], al           
609 [State 651] Terminating state 651 with message 'eliminated a state with an impossible first instruction'
609 [State 651] Switching from state 651 to state 0
Copied 34928 (count=1)
Deleting state 651 0x0x2e02d460
609 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 650
>> fuzzInit: datum forking for value 651
>> fuzzInit: datum forking for value 651
609 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 651)
        (ReadLSB w32 0 v651_fuzz_symb_651)))
    state 652 with condition (Not (Eq false
         (Eq (w32 651)
             (ReadLSB w32 0 v651_fuzz_symb_651))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-651-8048a0e
Size=2 Low=0 splitIndex=1 high=1
609 [State 0] Switching from state 0 to state 652
Copied 34928 (count=1)
Finalizing TB execution 652
s2e_dummyMainFunction
tcg-llvm-tb-651-8048a0e
Firing timer event
610 [State 652] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 651 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
610 [State 652] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7709b: 00 00             add [eax], al           
610 [State 652] Terminating state 652 with message 'eliminated a state with an impossible first instruction'
610 [State 652] Switching from state 652 to state 0
Copied 34928 (count=1)
Deleting state 652 0x0x2e02d460
610 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 651
>> fuzzInit: datum forking for value 652
>> fuzzInit: datum forking for value 652
610 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 652)
        (ReadLSB w32 0 v652_fuzz_symb_652)))
    state 653 with condition (Not (Eq false
         (Eq (w32 652)
             (ReadLSB w32 0 v652_fuzz_symb_652))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-652-8048a0e
Size=2 Low=0 splitIndex=1 high=1
610 [State 0] Switching from state 0 to state 653
Copied 34928 (count=1)
Finalizing TB execution 653
s2e_dummyMainFunction
tcg-llvm-tb-652-8048a0e
610 [State 653] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 652 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
610 [State 653] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7709c: 00 00             add [eax], al           
610 [State 653] Terminating state 653 with message 'eliminated a state with an impossible first instruction'
610 [State 653] Switching from state 653 to state 0
Copied 34928 (count=1)
Deleting state 653 0x0x2e02d460
Firing timer event
611 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 652
>> fuzzInit: datum forking for value 653
>> fuzzInit: datum forking for value 653
611 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 653)
        (ReadLSB w32 0 v653_fuzz_symb_653)))
    state 654 with condition (Not (Eq false
         (Eq (w32 653)
             (ReadLSB w32 0 v653_fuzz_symb_653))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-653-8048a0e
Size=2 Low=0 splitIndex=1 high=1
611 [State 0] Switching from state 0 to state 654
Copied 34928 (count=1)
Finalizing TB execution 654
s2e_dummyMainFunction
tcg-llvm-tb-653-8048a0e
611 [State 654] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 653 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7709d: 00 28                              add [eax], ch            nextPC: 0xbfb7709f
  2  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
  3  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
611 [State 654] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
611 [State 654] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
611 [State 654] Terminating state 654 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
611 [State 654] Switching from state 654 to state 0
Copied 34928 (count=1)
Deleting state 654 0x0x2e02d460
Firing timer event
612 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 653
>> fuzzInit: datum forking for value 654
>> fuzzInit: datum forking for value 654
612 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 654)
        (ReadLSB w32 0 v654_fuzz_symb_654)))
    state 655 with condition (Not (Eq false
         (Eq (w32 654)
             (ReadLSB w32 0 v654_fuzz_symb_654))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-654-8048a0e
Size=2 Low=0 splitIndex=1 high=1
612 [State 0] Switching from state 0 to state 655
Copied 34928 (count=1)
Finalizing TB execution 655
s2e_dummyMainFunction
tcg-llvm-tb-654-8048a0e
612 [State 655] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 654 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb7709e: 28 d7                              sub bh, dl               nextPC: 0xbfb770a0
  2  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
612 [State 655] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
612 [State 655] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
612 [State 655] Terminating state 655 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
612 [State 655] Switching from state 655 to state 0
Copied 34928 (count=1)
Deleting state 655 0x0x2e02d460
Firing timer event
613 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 654
>> fuzzInit: datum forking for value 655
>> fuzzInit: datum forking for value 655
613 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 655)
        (ReadLSB w32 0 v655_fuzz_symb_655)))
    state 656 with condition (Not (Eq false
         (Eq (w32 655)
             (ReadLSB w32 0 v655_fuzz_symb_655))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-655-8048a0e
Size=2 Low=0 splitIndex=1 high=1
613 [State 0] Switching from state 0 to state 656
Copied 34928 (count=1)
Finalizing TB execution 656
s2e_dummyMainFunction
tcg-llvm-tb-655-8048a0e
613 [State 656] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 655 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb7709f: d7                                 xlatb                    nextPC: 0xbfb770a0
  2  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
613 [State 656] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
613 [State 656] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
613 [State 656] Terminating state 656 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
613 [State 656] Switching from state 656 to state 0
Copied 34928 (count=1)
Deleting state 656 0x0x2e02d460
614 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 655
>> fuzzInit: datum forking for value 656
>> fuzzInit: datum forking for value 656
614 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 656)
        (ReadLSB w32 0 v656_fuzz_symb_656)))
    state 657 with condition (Not (Eq false
         (Eq (w32 656)
             (ReadLSB w32 0 v656_fuzz_symb_656))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-656-8048a0e
Size=2 Low=0 splitIndex=1 high=1
614 [State 0] Switching from state 0 to state 657
Copied 34928 (count=1)
Finalizing TB execution 657
s2e_dummyMainFunction
tcg-llvm-tb-656-8048a0e
Firing timer event
614 [State 657] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 656 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
614 [State 657] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb770a0, disasm in debug.
  1  6B @0xbfb770a0: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770a6
614 [State 657] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
614 [State 657] Terminating state 657 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
614 [State 657] Switching from state 657 to state 0
Copied 34928 (count=1)
Deleting state 657 0x0x2e02d460
614 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 656
>> fuzzInit: datum forking for value 657
>> fuzzInit: datum forking for value 657
615 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 657)
        (ReadLSB w32 0 v657_fuzz_symb_657)))
    state 658 with condition (Not (Eq false
         (Eq (w32 657)
             (ReadLSB w32 0 v657_fuzz_symb_657))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-657-8048a0e
Size=2 Low=0 splitIndex=1 high=1
615 [State 0] Switching from state 0 to state 658
Copied 34928 (count=1)
Finalizing TB execution 658
s2e_dummyMainFunction
tcg-llvm-tb-657-8048a0e
615 [State 658] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 657 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  5B @0xbfb770a1: bf 28 d7 ff bf                     mov edi, 0xbfffd728      nextPC: 0xbfb770a6
  2  2B @0xbfb770a6: 28 d7                              sub bh, dl               nextPC: 0xbfb770a8
  3  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
615 [State 658] @0x080499bf, left buffer range after 3 IoB insns; last IoB insn @0xbfb770a8, disasm in debug.
  1  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
615 [State 658] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
615 [State 658] Terminating state 658 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
615 [State 658] Switching from state 658 to state 0
Copied 34928 (count=1)
Deleting state 658 0x0x2e02d460
615 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 657
>> fuzzInit: datum forking for value 658
>> fuzzInit: datum forking for value 658
616 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 658)
        (ReadLSB w32 0 v658_fuzz_symb_658)))
    state 659 with condition (Not (Eq false
         (Eq (w32 658)
             (ReadLSB w32 0 v658_fuzz_symb_658))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-658-8048a0e
Size=2 Low=0 splitIndex=1 high=1
616 [State 0] Switching from state 0 to state 659
Copied 34928 (count=1)
Finalizing TB execution 659
s2e_dummyMainFunction
tcg-llvm-tb-658-8048a0e
616 [State 659] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 658 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770a2: 28 d7                              sub bh, dl               nextPC: 0xbfb770a4
  2  6B @0xbfb770a4: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770aa
Firing timer event
616 [State 659] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb770a4, disasm in debug.
  1  6B @0xbfb770a4: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770aa
616 [State 659] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
616 [State 659] Terminating state 659 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
616 [State 659] Switching from state 659 to state 0
Copied 34928 (count=1)
Deleting state 659 0x0x2e02d460
616 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 658
>> fuzzInit: datum forking for value 659
>> fuzzInit: datum forking for value 659
617 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 659)
        (ReadLSB w32 0 v659_fuzz_symb_659)))
    state 660 with condition (Not (Eq false
         (Eq (w32 659)
             (ReadLSB w32 0 v659_fuzz_symb_659))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-659-8048a0e
Size=2 Low=0 splitIndex=1 high=1
617 [State 0] Switching from state 0 to state 660
Copied 34928 (count=1)
Finalizing TB execution 660
s2e_dummyMainFunction
tcg-llvm-tb-659-8048a0e
617 [State 660] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 659 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb770a3: d7                                 xlatb                    nextPC: 0xbfb770a4
  2  6B @0xbfb770a4: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770aa
617 [State 660] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb770a4, disasm in debug.
  1  6B @0xbfb770a4: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770aa
617 [State 660] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
617 [State 660] Terminating state 660 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
617 [State 660] Switching from state 660 to state 0
Copied 34928 (count=1)
Deleting state 660 0x0x2e02d460
Firing timer event
617 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 659
>> fuzzInit: datum forking for value 660
>> fuzzInit: datum forking for value 660
618 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 660)
        (ReadLSB w32 0 v660_fuzz_symb_660)))
    state 661 with condition (Not (Eq false
         (Eq (w32 660)
             (ReadLSB w32 0 v660_fuzz_symb_660))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-660-8048a0e
Size=2 Low=0 splitIndex=1 high=1
618 [State 0] Switching from state 0 to state 661
Copied 34928 (count=1)
Finalizing TB execution 661
s2e_dummyMainFunction
tcg-llvm-tb-660-8048a0e
618 [State 661] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 660 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb770a4: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770aa
618 [State 661] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb770a4, disasm in debug.
  1  6B @0xbfb770a4: ff bf 28 d7 ff bf                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770aa
618 [State 661] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
618 [State 661] Terminating state 661 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
618 [State 661] Switching from state 661 to state 0
Copied 34928 (count=1)
Deleting state 661 0x0x2e86c0a0
Firing timer event
618 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 660
>> fuzzInit: datum forking for value 661
>> fuzzInit: datum forking for value 661
618 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 661)
        (ReadLSB w32 0 v661_fuzz_symb_661)))
    state 662 with condition (Not (Eq false
         (Eq (w32 661)
             (ReadLSB w32 0 v661_fuzz_symb_661))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-661-8048a0e
Size=2 Low=0 splitIndex=1 high=1
618 [State 0] Switching from state 0 to state 662
Copied 34928 (count=1)
Finalizing TB execution 662
s2e_dummyMainFunction
tcg-llvm-tb-661-8048a0e
619 [State 662] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 661 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb770a5: bf 28 d7 ff bf                     mov edi, 0xbfffd728      nextPC: 0xbfb770aa
  2  2B @0xbfb770aa: 00 00                              add [eax], al            nextPC: 0xbfb770ac
  3  2B @0xbfb770ac: 00 00                              add [eax], al            nextPC: 0xbfb770ae
  4  1B @0xbfb770ae: 40                                 inc eax                  nextPC: 0xbfb770af
  5  1B @0xbfb770af: 1e                                 push ds                  nextPC: 0xbfb770b0
  6  5B @0xbfb770b0: 05 08 10 00 00                     add eax, 0x1008          nextPC: 0xbfb770b5
  7  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  8  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  9  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
 10  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
 11  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
 12  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
 13  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 14  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 15  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 16  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 17  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 18  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 19  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 20  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 21  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 22  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 23  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 24  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 25  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 26  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 27  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 28  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 29  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 30  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 31  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 32  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 33  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 34  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 35  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 36  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
619 [State 662] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770f3, disasm in debug.
  1  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
619 [State 662] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
619 [State 662] Terminating state 662 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
619 [State 662] Switching from state 662 to state 0
Copied 34928 (count=1)
Deleting state 662 0x0x2e86c0a0
619 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 661
>> fuzzInit: datum forking for value 662
>> fuzzInit: datum forking for value 662
619 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 662)
        (ReadLSB w32 0 v662_fuzz_symb_662)))
    state 663 with condition (Not (Eq false
         (Eq (w32 662)
             (ReadLSB w32 0 v662_fuzz_symb_662))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-662-8048a0e
Size=2 Low=0 splitIndex=1 high=1
619 [State 0] Switching from state 0 to state 663
Copied 34928 (count=1)
Finalizing TB execution 663
s2e_dummyMainFunction
tcg-llvm-tb-662-8048a0e
Firing timer event
619 [State 663] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 662 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770a6: 28 d7                              sub bh, dl               nextPC: 0xbfb770a8
  2  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
620 [State 663] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb770a8, disasm in debug.
  1  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
620 [State 663] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
620 [State 663] Terminating state 663 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
620 [State 663] Switching from state 663 to state 0
Copied 34928 (count=1)
Deleting state 663 0x0x2e633560
620 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 662
>> fuzzInit: datum forking for value 663
>> fuzzInit: datum forking for value 663
620 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 663)
        (ReadLSB w32 0 v663_fuzz_symb_663)))
    state 664 with condition (Not (Eq false
         (Eq (w32 663)
             (ReadLSB w32 0 v663_fuzz_symb_663))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-663-8048a0e
Size=2 Low=0 splitIndex=1 high=1
620 [State 0] Switching from state 0 to state 664
Copied 34928 (count=1)
Finalizing TB execution 664
s2e_dummyMainFunction
tcg-llvm-tb-663-8048a0e
620 [State 664] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 663 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  1B @0xbfb770a7: d7                                 xlatb                    nextPC: 0xbfb770a8
  2  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
620 [State 664] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbfb770a8, disasm in debug.
  1  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
620 [State 664] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
620 [State 664] Terminating state 664 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
620 [State 664] Switching from state 664 to state 0
Copied 34928 (count=1)
Deleting state 664 0x0x2e633560
621 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 663
>> fuzzInit: datum forking for value 664
>> fuzzInit: datum forking for value 664
621 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 664)
        (ReadLSB w32 0 v664_fuzz_symb_664)))
    state 665 with condition (Not (Eq false
         (Eq (w32 664)
             (ReadLSB w32 0 v664_fuzz_symb_664))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-664-8048a0e
Size=2 Low=0 splitIndex=1 high=1
621 [State 0] Switching from state 0 to state 665
Copied 34928 (count=1)
Finalizing TB execution 665
s2e_dummyMainFunction
tcg-llvm-tb-664-8048a0e
621 [State 665] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 664 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
Firing timer event
621 [State 665] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb770a8, disasm in debug.
  1  6B @0xbfb770a8: ff bf 00 00 00 00                 disasm didn't do all insn bytes: 2/6 nextPC: 0xbfb770ae
621 [State 665] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
621 [State 665] Terminating state 665 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
621 [State 665] Switching from state 665 to state 0
Copied 34928 (count=1)
Deleting state 665 0x0x2e633560
622 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 664
>> fuzzInit: datum forking for value 665
>> fuzzInit: datum forking for value 665
622 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 665)
        (ReadLSB w32 0 v665_fuzz_symb_665)))
    state 666 with condition (Not (Eq false
         (Eq (w32 665)
             (ReadLSB w32 0 v665_fuzz_symb_665))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-665-8048a0e
Size=2 Low=0 splitIndex=1 high=1
622 [State 0] Switching from state 0 to state 666
Copied 34928 (count=1)
Finalizing TB execution 666
s2e_dummyMainFunction
tcg-llvm-tb-665-8048a0e
622 [State 666] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 665 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb770a9: bf 00 00 00 00                     mov edi, 0x0             nextPC: 0xbfb770ae
  2  1B @0xbfb770ae: 40                                 inc eax                  nextPC: 0xbfb770af
  3  1B @0xbfb770af: 1e                                 push ds                  nextPC: 0xbfb770b0
  4  5B @0xbfb770b0: 05 08 10 00 00                     add eax, 0x1008          nextPC: 0xbfb770b5
  5  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  6  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  7  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  8  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  9  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
 10  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
 11  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 12  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 13  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 14  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 15  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 16  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 17  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 18  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 19  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 20  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 21  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 22  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 23  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 24  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 25  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 26  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 27  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 28  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 29  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 30  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 31  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 32  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 33  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 34  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 35  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 36  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
622 [State 666] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770f7, disasm in debug.
  1  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
622 [State 666] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
622 [State 666] Terminating state 666 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
622 [State 666] Switching from state 666 to state 0
Copied 34928 (count=1)
Deleting state 666 0x0x2e633560
Firing timer event
622 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 665
>> fuzzInit: datum forking for value 666
>> fuzzInit: datum forking for value 666
623 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 666)
        (ReadLSB w32 0 v666_fuzz_symb_666)))
    state 667 with condition (Not (Eq false
         (Eq (w32 666)
             (ReadLSB w32 0 v666_fuzz_symb_666))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-666-8048a0e
Size=2 Low=0 splitIndex=1 high=1
623 [State 0] Switching from state 0 to state 667
Copied 34928 (count=1)
Finalizing TB execution 667
s2e_dummyMainFunction
tcg-llvm-tb-666-8048a0e
623 [State 667] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 666 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
623 [State 667] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770aa: 00 00             add [eax], al           
623 [State 667] Terminating state 667 with message 'eliminated a state with an impossible first instruction'
623 [State 667] Switching from state 667 to state 0
Copied 34928 (count=1)
Deleting state 667 0x0x2e633560
623 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 666
>> fuzzInit: datum forking for value 667
>> fuzzInit: datum forking for value 667
624 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 667)
        (ReadLSB w32 0 v667_fuzz_symb_667)))
    state 668 with condition (Not (Eq false
         (Eq (w32 667)
             (ReadLSB w32 0 v667_fuzz_symb_667))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-667-8048a0e
Size=2 Low=0 splitIndex=1 high=1
624 [State 0] Switching from state 0 to state 668
Copied 34928 (count=1)
Finalizing TB execution 668
s2e_dummyMainFunction
tcg-llvm-tb-667-8048a0e
Firing timer event
624 [State 668] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 667 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
624 [State 668] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ab: 00 00             add [eax], al           
624 [State 668] Terminating state 668 with message 'eliminated a state with an impossible first instruction'
624 [State 668] Switching from state 668 to state 0
Copied 34928 (count=1)
Deleting state 668 0x0x2e9eefa0
624 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 667
>> fuzzInit: datum forking for value 668
>> fuzzInit: datum forking for value 668
624 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 668)
        (ReadLSB w32 0 v668_fuzz_symb_668)))
    state 669 with condition (Not (Eq false
         (Eq (w32 668)
             (ReadLSB w32 0 v668_fuzz_symb_668))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-668-8048a0e
Size=2 Low=0 splitIndex=1 high=1
624 [State 0] Switching from state 0 to state 669
Copied 34928 (count=1)
Finalizing TB execution 669
s2e_dummyMainFunction
tcg-llvm-tb-668-8048a0e
Firing timer event
625 [State 669] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 668 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
625 [State 669] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ac: 00 00             add [eax], al           
625 [State 669] Terminating state 669 with message 'eliminated a state with an impossible first instruction'
625 [State 669] Switching from state 669 to state 0
Copied 34928 (count=1)
Deleting state 669 0x0x2e93b190
625 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 668
>> fuzzInit: datum forking for value 669
>> fuzzInit: datum forking for value 669
625 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 669)
        (ReadLSB w32 0 v669_fuzz_symb_669)))
    state 670 with condition (Not (Eq false
         (Eq (w32 669)
             (ReadLSB w32 0 v669_fuzz_symb_669))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-669-8048a0e
Size=2 Low=0 splitIndex=1 high=1
625 [State 0] Switching from state 0 to state 670
Copied 34928 (count=1)
Finalizing TB execution 670
s2e_dummyMainFunction
tcg-llvm-tb-669-8048a0e
626 [State 670] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 669 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  3B @0xbfb770ad: 00 40 1e                           add [eax+0x1e], al       nextPC: 0xbfb770b0
  2  5B @0xbfb770b0: 05 08 10 00 00                     add eax, 0x1008          nextPC: 0xbfb770b5
  3  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  4  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  5  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  6  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  7  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  8  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  9  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 10  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 11  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 12  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 13  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 14  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 15  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 16  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 17  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 18  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 19  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 20  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 21  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 22  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 23  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 24  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 25  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 26  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 27  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 28  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 29  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 30  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 31  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 32  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 33  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 34  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 35  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 36  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
626 [State 670] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770fb, disasm in debug.
  1  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
626 [State 670] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
626 [State 670] Terminating state 670 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
626 [State 670] Switching from state 670 to state 0
Copied 34928 (count=1)
Deleting state 670 0x0x2e93b190
626 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 669
>> fuzzInit: datum forking for value 670
>> fuzzInit: datum forking for value 670
626 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 670)
        (ReadLSB w32 0 v670_fuzz_symb_670)))
    state 671 with condition (Not (Eq false
         (Eq (w32 670)
             (ReadLSB w32 0 v670_fuzz_symb_670))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-670-8048a0e
Size=2 Low=0 splitIndex=1 high=1
626 [State 0] Switching from state 0 to state 671
Copied 34928 (count=1)
Finalizing TB execution 671
s2e_dummyMainFunction
tcg-llvm-tb-670-8048a0e
626 [State 671] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 670 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb770ae: 40                                 inc eax                  nextPC: 0xbfb770af
  2  1B @0xbfb770af: 1e                                 push ds                  nextPC: 0xbfb770b0
  3  5B @0xbfb770b0: 05 08 10 00 00                     add eax, 0x1008          nextPC: 0xbfb770b5
  4  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  5  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  6  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  7  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  8  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  9  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
 10  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 11  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 12  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 13  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 14  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 15  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 16  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 17  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 18  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 19  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 20  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 21  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 22  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 23  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 24  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 25  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 26  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 27  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 28  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 29  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 30  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 31  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 32  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 33  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 34  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 35  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 36  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
627 [State 671] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770f9, disasm in debug.
  1  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
627 [State 671] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
627 [State 671] Terminating state 671 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
627 [State 671] Switching from state 671 to state 0
Copied 34928 (count=1)
Deleting state 671 0x0x2e93b190
Firing timer event
627 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 670
>> fuzzInit: datum forking for value 671
>> fuzzInit: datum forking for value 671
627 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 671)
        (ReadLSB w32 0 v671_fuzz_symb_671)))
    state 672 with condition (Not (Eq false
         (Eq (w32 671)
             (ReadLSB w32 0 v671_fuzz_symb_671))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-671-8048a0e
Size=2 Low=0 splitIndex=1 high=1
627 [State 0] Switching from state 0 to state 672
Copied 34928 (count=1)
Finalizing TB execution 672
s2e_dummyMainFunction
tcg-llvm-tb-671-8048a0e
627 [State 672] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 671 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb770af: 1e                                 push ds                  nextPC: 0xbfb770b0
  2  5B @0xbfb770b0: 05 08 10 00 00                     add eax, 0x1008          nextPC: 0xbfb770b5
  3  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  4  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  5  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  6  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  7  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  8  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  9  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 10  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 11  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 12  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 13  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 14  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 15  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 16  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 17  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 18  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 19  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 20  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 21  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 22  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 23  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 24  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 25  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 26  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 27  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 28  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 29  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 30  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 31  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 32  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 33  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 34  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 35  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 36  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
627 [State 672] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770fb, disasm in debug.
  1  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
627 [State 672] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
627 [State 672] Terminating state 672 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
627 [State 672] Switching from state 672 to state 0
Copied 34928 (count=1)
Deleting state 672 0x0x2e93b190
628 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 671
>> fuzzInit: datum forking for value 672
>> fuzzInit: datum forking for value 672
628 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 672)
        (ReadLSB w32 0 v672_fuzz_symb_672)))
    state 673 with condition (Not (Eq false
         (Eq (w32 672)
             (ReadLSB w32 0 v672_fuzz_symb_672))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-672-8048a0e
Size=2 Low=0 splitIndex=1 high=1
628 [State 0] Switching from state 0 to state 673
Copied 34928 (count=1)
Finalizing TB execution 673
s2e_dummyMainFunction
tcg-llvm-tb-672-8048a0e
Firing timer event
628 [State 673] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 672 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  5B @0xbfb770b0: 05 08 10 00 00                     add eax, 0x1008          nextPC: 0xbfb770b5
  2  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  3  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  4  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  5  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  6  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  7  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  8  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
  9  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 10  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 11  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 12  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 13  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 14  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 15  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 16  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 17  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 18  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 19  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 20  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 21  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 22  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 23  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 24  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 25  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 26  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 27  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 28  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 29  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 30  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 31  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 32  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 33  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 34  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 35  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 36  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
628 [State 673] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770fd, disasm in debug.
  1  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
628 [State 673] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
628 [State 673] Terminating state 673 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
628 [State 673] Switching from state 673 to state 0
Copied 34928 (count=1)
Deleting state 673 0x0x2e93b190
629 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 672
>> fuzzInit: datum forking for value 673
>> fuzzInit: datum forking for value 673
629 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 673)
        (ReadLSB w32 0 v673_fuzz_symb_673)))
    state 674 with condition (Not (Eq false
         (Eq (w32 673)
             (ReadLSB w32 0 v673_fuzz_symb_673))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-673-8048a0e
Size=2 Low=0 splitIndex=1 high=1
629 [State 0] Switching from state 0 to state 674
Copied 34928 (count=1)
Finalizing TB execution 674
s2e_dummyMainFunction
tcg-llvm-tb-673-8048a0e
Firing timer event
629 [State 674] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 673 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770b1: 08 10                              or [eax], dl             nextPC: 0xbfb770b3
  2  2B @0xbfb770b3: 00 00                              add [eax], al            nextPC: 0xbfb770b5
  3  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  4  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  5  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  6  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  7  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  8  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  9  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 10  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 11  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 12  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 13  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 14  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 15  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 16  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 17  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 18  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 19  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 20  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 21  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 22  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 23  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 24  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 25  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 26  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 27  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 28  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 29  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 30  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 31  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 32  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 33  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 34  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 35  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 36  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
630 [State 674] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770fb, disasm in debug.
  1  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
630 [State 674] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
630 [State 674] Terminating state 674 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
630 [State 674] Switching from state 674 to state 0
Copied 34928 (count=1)
Deleting state 674 0x0x2eb874b0
630 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 673
>> fuzzInit: datum forking for value 674
>> fuzzInit: datum forking for value 674
630 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 674)
        (ReadLSB w32 0 v674_fuzz_symb_674)))
    state 675 with condition (Not (Eq false
         (Eq (w32 674)
             (ReadLSB w32 0 v674_fuzz_symb_674))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-674-8048a0e
Size=2 Low=0 splitIndex=1 high=1
630 [State 0] Switching from state 0 to state 675
Copied 34928 (count=1)
Finalizing TB execution 675
s2e_dummyMainFunction
tcg-llvm-tb-674-8048a0e
Firing timer event
630 [State 675] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 674 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770b2: 10 00                              adc [eax], al            nextPC: 0xbfb770b4
  2  2B @0xbfb770b4: 00 00                              add [eax], al            nextPC: 0xbfb770b6
  3  2B @0xbfb770b6: 02 00                              add al, [eax]            nextPC: 0xbfb770b8
  4  2B @0xbfb770b8: 8f ff                              invalid                  nextPC: 0xbfb770ba
  5  1B @0xbfb770ba: ac                                 lodsb                    nextPC: 0xbfb770bb
  6  2B @0xbfb770bb: 10 c5                              adc ch, al               nextPC: 0xbfb770bd
  7  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  8  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  9  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
 10  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
 11  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 12  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 13  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 14  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 15  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 16  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 17  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 18  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 19  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 20  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 21  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 22  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 23  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 24  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 25  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 26  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 27  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 28  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 29  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 30  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 31  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 32  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 33  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 34  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
631 [State 675] @0x080499bf, left buffer range after 34 IoB insns; last IoB insn @0xbfb770f3, disasm in debug.
  1  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
631 [State 675] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
631 [State 675] Terminating state 675 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
631 [State 675] Switching from state 675 to state 0
Copied 34928 (count=1)
Deleting state 675 0x0x2eb874b0
631 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 674
>> fuzzInit: datum forking for value 675
>> fuzzInit: datum forking for value 675
>> fuzzInit: datum forking for value 675
631 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 675)
        (ReadLSB w32 0 v675_fuzz_symb_675)))
    state 676 with condition (Not (Eq false
         (Eq (w32 675)
             (ReadLSB w32 0 v675_fuzz_symb_675))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-675-8048a0e
Size=2 Low=0 splitIndex=1 high=1
631 [State 0] Switching from state 0 to state 676
Copied 34928 (count=1)
Finalizing TB execution 676
s2e_dummyMainFunction
tcg-llvm-tb-675-8048a0e
Firing timer event
631 [State 676] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 675 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
631 [State 676] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770b3: 00 00             add [eax], al           
631 [State 676] Terminating state 676 with message 'eliminated a state with an impossible first instruction'
631 [State 676] Switching from state 676 to state 0
Copied 34928 (count=1)
Deleting state 676 0x0x2eb874b0
632 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 675
>> fuzzInit: datum forking for value 676
>> fuzzInit: datum forking for value 676
632 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 676)
        (ReadLSB w32 0 v676_fuzz_symb_676)))
    state 677 with condition (Not (Eq false
         (Eq (w32 676)
             (ReadLSB w32 0 v676_fuzz_symb_676))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-676-8048a0e
Size=2 Low=0 splitIndex=1 high=1
632 [State 0] Switching from state 0 to state 677
Copied 34928 (count=1)
Finalizing TB execution 677
s2e_dummyMainFunction
tcg-llvm-tb-676-8048a0e
Firing timer event
632 [State 677] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 676 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
632 [State 677] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770b4: 00 00             add [eax], al           
632 [State 677] Terminating state 677 with message 'eliminated a state with an impossible first instruction'
632 [State 677] Switching from state 677 to state 0
Copied 34928 (count=1)
Deleting state 677 0x0x2eb874b0
633 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 676
>> fuzzInit: datum forking for value 677
>> fuzzInit: datum forking for value 677
633 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 677)
        (ReadLSB w32 0 v677_fuzz_symb_677)))
    state 678 with condition (Not (Eq false
         (Eq (w32 677)
             (ReadLSB w32 0 v677_fuzz_symb_677))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-677-8048a0e
Size=2 Low=0 splitIndex=1 high=1
633 [State 0] Switching from state 0 to state 678
Copied 34928 (count=1)
Finalizing TB execution 678
s2e_dummyMainFunction
tcg-llvm-tb-677-8048a0e
633 [State 678] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 677 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb770b5: 00 02                              add [edx], al            nextPC: 0xbfb770b7
  2  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  3  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  4  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  5  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  6  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  7  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
  8  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
  9  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 10  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 11  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 12  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 13  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 14  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 15  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 16  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 17  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 18  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 19  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 20  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 21  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 22  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 23  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 24  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 25  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 26  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 27  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 28  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 29  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 30  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 31  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 32  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 33  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 34  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 35  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
 36  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
633 [State 678] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb770ff, disasm in debug.
  1  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
633 [State 678] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
633 [State 678] Terminating state 678 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
633 [State 678] Switching from state 678 to state 0
Copied 34928 (count=1)
Deleting state 678 0x0x2eb874b0
634 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 677
>> fuzzInit: datum forking for value 678
>> fuzzInit: datum forking for value 678
634 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 678)
        (ReadLSB w32 0 v678_fuzz_symb_678)))
    state 679 with condition (Not (Eq false
         (Eq (w32 678)
             (ReadLSB w32 0 v678_fuzz_symb_678))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-678-8048a0e
Size=2 Low=0 splitIndex=1 high=1
634 [State 0] Switching from state 0 to state 679
Copied 34928 (count=1)
Finalizing TB execution 679
s2e_dummyMainFunction
tcg-llvm-tb-678-8048a0e
634 [State 679] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 678 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770b6: 02 00                              add al, [eax]            nextPC: 0xbfb770b8
  2  2B @0xbfb770b8: 8f ff                              invalid                  nextPC: 0xbfb770ba
  3  1B @0xbfb770ba: ac                                 lodsb                    nextPC: 0xbfb770bb
  4  2B @0xbfb770bb: 10 c5                              adc ch, al               nextPC: 0xbfb770bd
  5  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  6  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  7  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  8  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  9  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
 10  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 11  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 12  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 13  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 14  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 15  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 16  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 17  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 18  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 19  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 20  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 21  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 22  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 23  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 24  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 25  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 26  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 27  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 28  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 29  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 30  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 31  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 32  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 33  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 34  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 35  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
634 [State 679] @0x080499bf, left buffer range after 35 IoB insns; last IoB insn @0xbfb770f9, disasm in debug.
  1  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
634 [State 679] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
634 [State 679] Terminating state 679 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
634 [State 679] Switching from state 679 to state 0
Copied 34928 (count=1)
Deleting state 679 0x0x2eb94120
Firing timer event
634 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 678
>> fuzzInit: datum forking for value 679
>> fuzzInit: datum forking for value 679
635 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 679)
        (ReadLSB w32 0 v679_fuzz_symb_679)))
    state 680 with condition (Not (Eq false
         (Eq (w32 679)
             (ReadLSB w32 0 v679_fuzz_symb_679))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-679-8048a0e
Size=2 Low=0 splitIndex=1 high=1
635 [State 0] Switching from state 0 to state 680
Copied 34928 (count=1)
Finalizing TB execution 680
s2e_dummyMainFunction
tcg-llvm-tb-679-8048a0e
635 [State 680] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 679 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb770b7: 00 8f ff ac 10 c5                  add [edi+0xc510acff], cl nextPC: 0xbfb770bd
  2  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  3  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  4  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  5  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  6  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
  7  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
  8  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
  9  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 10  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 11  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 12  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 13  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 14  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 15  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 16  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 17  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 18  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 19  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 20  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 21  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 22  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 23  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 24  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 25  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 26  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 27  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 28  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 29  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 30  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 31  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 32  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 33  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 34  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
 35  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
 36  2B @0xbfb77101: 00 00                              add [eax], al            nextPC: 0xbfb77103
635 [State 680] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb77101, disasm in debug.
  1  2B @0xbfb77101: 00 00                              add [eax], al            nextPC: 0xbfb77103
635 [State 680] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
635 [State 680] Terminating state 680 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
635 [State 680] Switching from state 680 to state 0
Copied 34928 (count=1)
Deleting state 680 0x0x2eb94120
635 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 679
>> fuzzInit: datum forking for value 680
>> fuzzInit: datum forking for value 680
636 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 680)
        (ReadLSB w32 0 v680_fuzz_symb_680)))
    state 681 with condition (Not (Eq false
         (Eq (w32 680)
             (ReadLSB w32 0 v680_fuzz_symb_680))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-680-8048a0e
Size=2 Low=0 splitIndex=1 high=1
636 [State 0] Switching from state 0 to state 681
Copied 34928 (count=1)
Finalizing TB execution 681
s2e_dummyMainFunction
tcg-llvm-tb-680-8048a0e
Firing timer event
636 [State 681] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 680 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770b8: 8f ff                              invalid                  nextPC: 0xbfb770ba
  2  1B @0xbfb770ba: ac                                 lodsb                    nextPC: 0xbfb770bb
  3  2B @0xbfb770bb: 10 c5                              adc ch, al               nextPC: 0xbfb770bd
  4  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  5  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  6  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  7  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  8  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
  9  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
 10  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 11  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 12  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 13  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 14  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 15  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 16  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 17  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 18  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 19  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 20  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 21  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 22  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 23  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 24  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 25  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 26  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 27  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 28  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 29  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 30  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 31  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 32  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 33  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 34  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 35  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
636 [State 681] @0x080499bf, left buffer range after 35 IoB insns; last IoB insn @0xbfb770fb, disasm in debug.
  1  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
636 [State 681] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
636 [State 681] Terminating state 681 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
636 [State 681] Switching from state 681 to state 0
Copied 34928 (count=1)
Deleting state 681 0x0x2eb94120
636 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 680
>> fuzzInit: datum forking for value 681
>> fuzzInit: datum forking for value 681
637 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 681)
        (ReadLSB w32 0 v681_fuzz_symb_681)))
    state 682 with condition (Not (Eq false
         (Eq (w32 681)
             (ReadLSB w32 0 v681_fuzz_symb_681))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-681-8048a0e
Size=2 Low=0 splitIndex=1 high=1
637 [State 0] Switching from state 0 to state 682
Copied 34928 (count=1)
Finalizing TB execution 682
s2e_dummyMainFunction
tcg-llvm-tb-681-8048a0e
Firing timer event
637 [State 682] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 681 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  7B @0xbfb770b9: ff ac 10 c5 87 00 00               jmp dword far [eax+edx+0x87c5] nextPC: 0xbfb770b9
637 [State 682] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb770b9, disasm in debug.
  1  7B @0xbfb770b9: ff ac 10 c5 87 00 00               jmp dword far [eax+edx+0x87c5] nextPC: 0xbfb770b9
637 [State 682] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
637 [State 682] Terminating state 682 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
637 [State 682] Switching from state 682 to state 0
Copied 34928 (count=1)
Deleting state 682 0x0x2eb94120
637 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 681
>> fuzzInit: datum forking for value 682
>> fuzzInit: datum forking for value 682
638 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 682)
        (ReadLSB w32 0 v682_fuzz_symb_682)))
    state 683 with condition (Not (Eq false
         (Eq (w32 682)
             (ReadLSB w32 0 v682_fuzz_symb_682))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-682-8048a0e
Size=2 Low=0 splitIndex=1 high=1
638 [State 0] Switching from state 0 to state 683
Copied 34928 (count=1)
Finalizing TB execution 683
s2e_dummyMainFunction
tcg-llvm-tb-682-8048a0e
Firing timer event
638 [State 683] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 682 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  1B @0xbfb770ba: ac                                 lodsb                    nextPC: 0xbfb770bb
  2  2B @0xbfb770bb: 10 c5                              adc ch, al               nextPC: 0xbfb770bd
  3  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  4  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  5  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  6  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  7  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
  8  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
  9  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
 10  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 11  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 12  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 13  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 14  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 15  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 16  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 17  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 18  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 19  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 20  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 21  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 22  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 23  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 24  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 25  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 26  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 27  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 28  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 29  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 30  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 31  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 32  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 33  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 34  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 35  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
638 [State 683] @0x080499bf, left buffer range after 35 IoB insns; last IoB insn @0xbfb770fd, disasm in debug.
  1  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
638 [State 683] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
638 [State 683] Terminating state 683 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
638 [State 683] Switching from state 683 to state 0
Copied 34928 (count=1)
Deleting state 683 0x0x2eb94120
638 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 682
>> fuzzInit: datum forking for value 683
>> fuzzInit: datum forking for value 683
639 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 683)
        (ReadLSB w32 0 v683_fuzz_symb_683)))
    state 684 with condition (Not (Eq false
         (Eq (w32 683)
             (ReadLSB w32 0 v683_fuzz_symb_683))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-683-8048a0e
Size=2 Low=0 splitIndex=1 high=1
639 [State 0] Switching from state 0 to state 684
Copied 34928 (count=1)
Finalizing TB execution 684
s2e_dummyMainFunction
tcg-llvm-tb-683-8048a0e
Firing timer event
639 [State 684] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 683 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770bb: 10 c5                              adc ch, al               nextPC: 0xbfb770bd
  2  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  3  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  4  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  5  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  6  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
  7  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
  8  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
  9  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
 10  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 11  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 12  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 13  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 14  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 15  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 16  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 17  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 18  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 19  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 20  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 21  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 22  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 23  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 24  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 25  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 26  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 27  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 28  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 29  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 30  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 31  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 32  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 33  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 34  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
 35  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
639 [State 684] @0x080499bf, left buffer range after 35 IoB insns; last IoB insn @0xbfb770ff, disasm in debug.
  1  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
639 [State 684] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
639 [State 684] Terminating state 684 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
639 [State 684] Switching from state 684 to state 0
Copied 34928 (count=1)
Deleting state 684 0x0x2eb94120
639 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 683
>> fuzzInit: datum forking for value 684
>> fuzzInit: datum forking for value 684
640 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 684)
        (ReadLSB w32 0 v684_fuzz_symb_684)))
    state 685 with condition (Not (Eq false
         (Eq (w32 684)
             (ReadLSB w32 0 v684_fuzz_symb_684))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-684-8048a0e
Size=2 Low=0 splitIndex=1 high=1
640 [State 0] Switching from state 0 to state 685
Copied 34928 (count=1)
Finalizing TB execution 685
s2e_dummyMainFunction
tcg-llvm-tb-684-8048a0e
640 [State 685] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 684 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  6B @0xbfb770bc: c5 87 00 00 00 00                  lds eax, [edi+0x0]       nextPC: 0xbfb770c2
640 [State 685] @0x080499bf, left buffer range after 1 IoB insns; last IoB insn @0xbfb770bc, disasm in debug.
  1  6B @0xbfb770bc: c5 87 00 00 00 00                  lds eax, [edi+0x0]       nextPC: 0xbfb770c2
640 [State 685] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
640 [State 685] Terminating state 685 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
640 [State 685] Switching from state 685 to state 0
Copied 34928 (count=1)
Deleting state 685 0x0x2ec40f70
640 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 684
>> fuzzInit: datum forking for value 685
>> fuzzInit: datum forking for value 685
640 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 685)
        (ReadLSB w32 0 v685_fuzz_symb_685)))
    state 686 with condition (Not (Eq false
         (Eq (w32 685)
             (ReadLSB w32 0 v685_fuzz_symb_685))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-685-8048a0e
Size=2 Low=0 splitIndex=1 high=1
640 [State 0] Switching from state 0 to state 686
Copied 34928 (count=1)
Finalizing TB execution 686
s2e_dummyMainFunction
tcg-llvm-tb-685-8048a0e
641 [State 686] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 685 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770bd: 87 00                              xchg [eax], eax          nextPC: 0xbfb770bf
  2  2B @0xbfb770bf: 00 00                              add [eax], al            nextPC: 0xbfb770c1
  3  2B @0xbfb770c1: 00 00                              add [eax], al            nextPC: 0xbfb770c3
  4  2B @0xbfb770c3: 00 00                              add [eax], al            nextPC: 0xbfb770c5
  5  2B @0xbfb770c5: 00 00                              add [eax], al            nextPC: 0xbfb770c7
  6  2B @0xbfb770c7: 00 00                              add [eax], al            nextPC: 0xbfb770c9
  7  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
  8  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
  9  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
 10  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
 11  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
 12  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
 13  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
 14  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
 15  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 16  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 17  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 18  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 19  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 20  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 21  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 22  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 23  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 24  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 25  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 26  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 27  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 28  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 29  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 30  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 31  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 32  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 33  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
 34  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
 35  2B @0xbfb77101: 00 00                              add [eax], al            nextPC: 0xbfb77103
 36  2B @0xbfb77103: 00 00                              add [eax], al            nextPC: 0xbfb77105
641 [State 686] @0x080499bf, left buffer range after 36 IoB insns; last IoB insn @0xbfb77103, disasm in debug.
  1  2B @0xbfb77103: 00 00                              add [eax], al            nextPC: 0xbfb77105
641 [State 686] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
641 [State 686] Terminating state 686 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
641 [State 686] Switching from state 686 to state 0
Copied 34928 (count=1)
Deleting state 686 0x0x2ec40f70
Firing timer event
641 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 685
>> fuzzInit: datum forking for value 686
>> fuzzInit: datum forking for value 686
641 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 686)
        (ReadLSB w32 0 v686_fuzz_symb_686)))
    state 687 with condition (Not (Eq false
         (Eq (w32 686)
             (ReadLSB w32 0 v686_fuzz_symb_686))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-686-8048a0e
Size=2 Low=0 splitIndex=1 high=1
641 [State 0] Switching from state 0 to state 687
Copied 34928 (count=1)
Finalizing TB execution 687
s2e_dummyMainFunction
tcg-llvm-tb-686-8048a0e
641 [State 687] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 686 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
642 [State 687] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770be: 00 00             add [eax], al           
642 [State 687] Terminating state 687 with message 'eliminated a state with an impossible first instruction'
642 [State 687] Switching from state 687 to state 0
Copied 34928 (count=1)
Deleting state 687 0x0x2ef7b5c0
642 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 686
>> fuzzInit: datum forking for value 687
>> fuzzInit: datum forking for value 687
642 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 687)
        (ReadLSB w32 0 v687_fuzz_symb_687)))
    state 688 with condition (Not (Eq false
         (Eq (w32 687)
             (ReadLSB w32 0 v687_fuzz_symb_687))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-687-8048a0e
Size=2 Low=0 splitIndex=1 high=1
642 [State 0] Switching from state 0 to state 688
Copied 34928 (count=1)
Finalizing TB execution 688
s2e_dummyMainFunction
tcg-llvm-tb-687-8048a0e
Firing timer event
642 [State 688] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 687 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
642 [State 688] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770bf: 00 00             add [eax], al           
642 [State 688] Terminating state 688 with message 'eliminated a state with an impossible first instruction'
642 [State 688] Switching from state 688 to state 0
Copied 34928 (count=1)
Deleting state 688 0x0x2ef7b5c0
643 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 687
>> fuzzInit: datum forking for value 688
>> fuzzInit: datum forking for value 688
643 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 688)
        (ReadLSB w32 0 v688_fuzz_symb_688)))
    state 689 with condition (Not (Eq false
         (Eq (w32 688)
             (ReadLSB w32 0 v688_fuzz_symb_688))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-688-8048a0e
Size=2 Low=0 splitIndex=1 high=1
643 [State 0] Switching from state 0 to state 689
Copied 34928 (count=1)
Finalizing TB execution 689
s2e_dummyMainFunction
tcg-llvm-tb-688-8048a0e
643 [State 689] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 688 not yet applied), shell_len: 1024, eip: 0xbfb77010

Firing timer event
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
643 [State 689] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c0: 00 00             add [eax], al           
643 [State 689] Terminating state 689 with message 'eliminated a state with an impossible first instruction'
643 [State 689] Switching from state 689 to state 0
Copied 34928 (count=1)
Deleting state 689 0x0x2ef7b5c0
644 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 688
>> fuzzInit: datum forking for value 689
>> fuzzInit: datum forking for value 689
644 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 689)
        (ReadLSB w32 0 v689_fuzz_symb_689)))
    state 690 with condition (Not (Eq false
         (Eq (w32 689)
             (ReadLSB w32 0 v689_fuzz_symb_689))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-689-8048a0e
Size=2 Low=0 splitIndex=1 high=1
644 [State 0] Switching from state 0 to state 690
Copied 34928 (count=1)
Finalizing TB execution 690
s2e_dummyMainFunction
tcg-llvm-tb-689-8048a0e
644 [State 690] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 689 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
644 [State 690] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c1: 00 00             add [eax], al           
644 [State 690] Terminating state 690 with message 'eliminated a state with an impossible first instruction'
644 [State 690] Switching from state 690 to state 0
Copied 34928 (count=1)
Deleting state 690 0x0x2ef7b5c0
Firing timer event
644 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 689
>> fuzzInit: datum forking for value 690
>> fuzzInit: datum forking for value 690
645 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 690)
        (ReadLSB w32 0 v690_fuzz_symb_690)))
    state 691 with condition (Not (Eq false
         (Eq (w32 690)
             (ReadLSB w32 0 v690_fuzz_symb_690))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-690-8048a0e
Size=2 Low=0 splitIndex=1 high=1
645 [State 0] Switching from state 0 to state 691
Copied 34928 (count=1)
Finalizing TB execution 691
s2e_dummyMainFunction
tcg-llvm-tb-690-8048a0e
645 [State 691] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 690 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
645 [State 691] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c2: 00 00             add [eax], al           
645 [State 691] Terminating state 691 with message 'eliminated a state with an impossible first instruction'
645 [State 691] Switching from state 691 to state 0
Copied 34928 (count=1)
Deleting state 691 0x0x2ef7b5c0
645 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 690
>> fuzzInit: datum forking for value 691
>> fuzzInit: datum forking for value 691
646 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 691)
        (ReadLSB w32 0 v691_fuzz_symb_691)))
    state 692 with condition (Not (Eq false
         (Eq (w32 691)
             (ReadLSB w32 0 v691_fuzz_symb_691))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-691-8048a0e
Size=2 Low=0 splitIndex=1 high=1
646 [State 0] Switching from state 0 to state 692
Copied 34928 (count=1)
Finalizing TB execution 692
s2e_dummyMainFunction
tcg-llvm-tb-691-8048a0e
Firing timer event
646 [State 692] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 691 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
646 [State 692] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c3: 00 00             add [eax], al           
646 [State 692] Terminating state 692 with message 'eliminated a state with an impossible first instruction'
646 [State 692] Switching from state 692 to state 0
Copied 34928 (count=1)
Deleting state 692 0x0x2ef7b5c0
646 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 691
>> fuzzInit: datum forking for value 692
>> fuzzInit: datum forking for value 692
646 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 692)
        (ReadLSB w32 0 v692_fuzz_symb_692)))
    state 693 with condition (Not (Eq false
         (Eq (w32 692)
             (ReadLSB w32 0 v692_fuzz_symb_692))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-692-8048a0e
Size=2 Low=0 splitIndex=1 high=1
646 [State 0] Switching from state 0 to state 693
Copied 34928 (count=1)
Finalizing TB execution 693
s2e_dummyMainFunction
tcg-llvm-tb-692-8048a0e
Firing timer event
647 [State 693] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 692 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
647 [State 693] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c4: 00 00             add [eax], al           
647 [State 693] Terminating state 693 with message 'eliminated a state with an impossible first instruction'
647 [State 693] Switching from state 693 to state 0
Copied 34928 (count=1)
Deleting state 693 0x0x2ef7b5c0
647 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 692
>> fuzzInit: datum forking for value 693
>> fuzzInit: datum forking for value 693
647 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 693)
        (ReadLSB w32 0 v693_fuzz_symb_693)))
    state 694 with condition (Not (Eq false
         (Eq (w32 693)
             (ReadLSB w32 0 v693_fuzz_symb_693))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-693-8048a0e
Size=2 Low=0 splitIndex=1 high=1
647 [State 0] Switching from state 0 to state 694
Copied 34928 (count=1)
Finalizing TB execution 694
s2e_dummyMainFunction
tcg-llvm-tb-693-8048a0e
647 [State 694] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 693 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
648 [State 694] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c5: 00 00             add [eax], al           
648 [State 694] Terminating state 694 with message 'eliminated a state with an impossible first instruction'
648 [State 694] Switching from state 694 to state 0
Copied 34928 (count=1)
Deleting state 694 0x0x2ef7b5c0
Firing timer event
648 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 693
>> fuzzInit: datum forking for value 694
>> fuzzInit: datum forking for value 694
648 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 694)
        (ReadLSB w32 0 v694_fuzz_symb_694)))
    state 695 with condition (Not (Eq false
         (Eq (w32 694)
             (ReadLSB w32 0 v694_fuzz_symb_694))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-694-8048a0e
Size=2 Low=0 splitIndex=1 high=1
648 [State 0] Switching from state 0 to state 695
Copied 34928 (count=1)
Finalizing TB execution 695
s2e_dummyMainFunction
tcg-llvm-tb-694-8048a0e
648 [State 695] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 694 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
648 [State 695] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c6: 00 00             add [eax], al           
648 [State 695] Terminating state 695 with message 'eliminated a state with an impossible first instruction'
648 [State 695] Switching from state 695 to state 0
Copied 34928 (count=1)
Deleting state 695 0x0x2ef7b5c0
649 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 694
>> fuzzInit: datum forking for value 695
>> fuzzInit: datum forking for value 695
649 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 695)
        (ReadLSB w32 0 v695_fuzz_symb_695)))
    state 696 with condition (Not (Eq false
         (Eq (w32 695)
             (ReadLSB w32 0 v695_fuzz_symb_695))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-695-8048a0e
Size=2 Low=0 splitIndex=1 high=1
649 [State 0] Switching from state 0 to state 696
Copied 34928 (count=1)
Finalizing TB execution 696
s2e_dummyMainFunction
tcg-llvm-tb-695-8048a0e
Firing timer event
649 [State 696] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 695 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
649 [State 696] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c7: 00 00             add [eax], al           
649 [State 696] Terminating state 696 with message 'eliminated a state with an impossible first instruction'
649 [State 696] Switching from state 696 to state 0
Copied 34928 (count=1)
Deleting state 696 0x0x2ef7b5c0
649 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 695
>> fuzzInit: datum forking for value 696
>> fuzzInit: datum forking for value 696
650 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 696)
        (ReadLSB w32 0 v696_fuzz_symb_696)))
    state 697 with condition (Not (Eq false
         (Eq (w32 696)
             (ReadLSB w32 0 v696_fuzz_symb_696))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-696-8048a0e
Size=2 Low=0 splitIndex=1 high=1
650 [State 0] Switching from state 0 to state 697
Copied 34928 (count=1)
Finalizing TB execution 697
s2e_dummyMainFunction
tcg-llvm-tb-696-8048a0e
650 [State 697] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 696 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
650 [State 697] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770c8: 00 00             add [eax], al           
650 [State 697] Terminating state 697 with message 'eliminated a state with an impossible first instruction'
650 [State 697] Switching from state 697 to state 0
Copied 34928 (count=1)
Deleting state 697 0x0x2ef7b5c0
650 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 696
>> fuzzInit: datum forking for value 697
>> fuzzInit: datum forking for value 697
651 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 697)
        (ReadLSB w32 0 v697_fuzz_symb_697)))
    state 698 with condition (Not (Eq false
         (Eq (w32 697)
             (ReadLSB w32 0 v697_fuzz_symb_697))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-697-8048a0e
Size=2 Low=0 splitIndex=1 high=1
651 [State 0] Switching from state 0 to state 698
Copied 34928 (count=1)
Finalizing TB execution 698
s2e_dummyMainFunction
tcg-llvm-tb-697-8048a0e
651 [State 698] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 697 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770c9: 00 c7                              add bh, al               nextPC: 0xbfb770cb
  2  2B @0xbfb770cb: 00 00                              add [eax], al            nextPC: 0xbfb770cd
  3  2B @0xbfb770cd: 00 00                              add [eax], al            nextPC: 0xbfb770cf
  4  2B @0xbfb770cf: 00 00                              add [eax], al            nextPC: 0xbfb770d1
  5  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
  6  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
  7  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
  8  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
  9  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
 10  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
 11  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
 12  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
 13  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 14  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 15  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 16  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 17  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 18  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 19  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 20  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 21  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 22  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 23  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 24  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 25  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 26  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 27  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
 28  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
 29  2B @0xbfb77101: 00 00                              add [eax], al            nextPC: 0xbfb77103
 30  2B @0xbfb77103: 00 00                              add [eax], al            nextPC: 0xbfb77105
 31  2B @0xbfb77105: 00 00                              add [eax], al            nextPC: 0xbfb77107
 32  2B @0xbfb77107: 00 00                              add [eax], al            nextPC: 0xbfb77109
 33  2B @0xbfb77109: 00 00                              add [eax], al            nextPC: 0xbfb7710b
 34  2B @0xbfb7710b: 00 00                              add [eax], al            nextPC: 0xbfb7710d
 35  2B @0xbfb7710d: 00 00                              add [eax], al            nextPC: 0xbfb7710f
 36  2B @0xbfb7710f: 00 00                              add [eax], al            nextPC: 0xbfb77111
 37  2B @0xbfb77111: 00 00                              add [eax], al            nextPC: 0xbfb77113
 38  2B @0xbfb77113: 00 00                              add [eax], al            nextPC: 0xbfb77115
 39  2B @0xbfb77115: 00 00                              add [eax], al            nextPC: 0xbfb77117
 40  2B @0xbfb77117: 00 00                              add [eax], al            nextPC: 0xbfb77119
 41  2B @0xbfb77119: 00 00                              add [eax], al            nextPC: 0xbfb7711b
 42  2B @0xbfb7711b: 00 00                              add [eax], al            nextPC: 0xbfb7711d
 43  2B @0xbfb7711d: 00 00                              add [eax], al            nextPC: 0xbfb7711f
 44  2B @0xbfb7711f: 00 00                              add [eax], al            nextPC: 0xbfb77121
 45  2B @0xbfb77121: 00 00                              add [eax], al            nextPC: 0xbfb77123
 46  2B @0xbfb77123: 00 00                              add [eax], al            nextPC: 0xbfb77125
 47  2B @0xbfb77125: 00 00                              add [eax], al            nextPC: 0xbfb77127
 48  2B @0xbfb77127: 00 00                              add [eax], al            nextPC: 0xbfb77129
 49  2B @0xbfb77129: 00 00                              add [eax], al            nextPC: 0xbfb7712b
 50  2B @0xbfb7712b: 00 00                              add [eax], al            nextPC: 0xbfb7712d
 51  2B @0xbfb7712d: 00 00                              add [eax], al            nextPC: 0xbfb7712f
 52  2B @0xbfb7712f: 00 00                              add [eax], al            nextPC: 0xbfb77131
 53  2B @0xbfb77131: 00 00                              add [eax], al            nextPC: 0xbfb77133
 54  2B @0xbfb77133: 00 00                              add [eax], al            nextPC: 0xbfb77135
 55  2B @0xbfb77135: 00 00                              add [eax], al            nextPC: 0xbfb77137
 56  2B @0xbfb77137: 00 00                              add [eax], al            nextPC: 0xbfb77139
 57  2B @0xbfb77139: 00 00                              add [eax], al            nextPC: 0xbfb7713b
 58  2B @0xbfb7713b: 00 00                              add [eax], al            nextPC: 0xbfb7713d
 59  2B @0xbfb7713d: 00 00                              add [eax], al            nextPC: 0xbfb7713f
 60  2B @0xbfb7713f: 00 00                              add [eax], al            nextPC: 0xbfb77141
 61  2B @0xbfb77141: 00 00                              add [eax], al            nextPC: 0xbfb77143
 62  2B @0xbfb77143: 00 00                              add [eax], al            nextPC: 0xbfb77145
 63  2B @0xbfb77145: 00 00                              add [eax], al            nextPC: 0xbfb77147
 64  2B @0xbfb77147: 00 00                              add [eax], al            nextPC: 0xbfb77149
 65  2B @0xbfb77149: 00 00                              add [eax], al            nextPC: 0xbfb7714b
 66  2B @0xbfb7714b: 00 00                              add [eax], al            nextPC: 0xbfb7714d
 67  2B @0xbfb7714d: 00 00                              add [eax], al            nextPC: 0xbfb7714f
 68  2B @0xbfb7714f: 00 00                              add [eax], al            nextPC: 0xbfb77151
 69  2B @0xbfb77151: 00 00                              add [eax], al            nextPC: 0xbfb77153
 70  2B @0xbfb77153: 00 00                              add [eax], al            nextPC: 0xbfb77155
 71  2B @0xbfb77155: 00 00                              add [eax], al            nextPC: 0xbfb77157
 72  2B @0xbfb77157: 00 00                              add [eax], al            nextPC: 0xbfb77159
 73  2B @0xbfb77159: 00 00                              add [eax], al            nextPC: 0xbfb7715b
 74  2B @0xbfb7715b: 00 00                              add [eax], al            nextPC: 0xbfb7715d
 75  2B @0xbfb7715d: 00 00                              add [eax], al            nextPC: 0xbfb7715f
 76  2B @0xbfb7715f: 00 00                              add [eax], al            nextPC: 0xbfb77161
 77  2B @0xbfb77161: 00 00                              add [eax], al            nextPC: 0xbfb77163
 78  2B @0xbfb77163: 00 00                              add [eax], al            nextPC: 0xbfb77165
 79  2B @0xbfb77165: 00 00                              add [eax], al            nextPC: 0xbfb77167
 80  2B @0xbfb77167: 00 00                              add [eax], al            nextPC: 0xbfb77169
 81  2B @0xbfb77169: 00 00                              add [eax], al            nextPC: 0xbfb7716b
 82  2B @0xbfb7716b: 00 00                              add [eax], al            nextPC: 0xbfb7716d
 83  2B @0xbfb7716d: 00 00                              add [eax], al            nextPC: 0xbfb7716f
 84  2B @0xbfb7716f: 00 00                              add [eax], al            nextPC: 0xbfb77171
 85  2B @0xbfb77171: 00 00                              add [eax], al            nextPC: 0xbfb77173
 86  2B @0xbfb77173: 00 00                              add [eax], al            nextPC: 0xbfb77175
 87  2B @0xbfb77175: 00 00                              add [eax], al            nextPC: 0xbfb77177
 88  2B @0xbfb77177: 00 00                              add [eax], al            nextPC: 0xbfb77179
 89  2B @0xbfb77179: 00 00                              add [eax], al            nextPC: 0xbfb7717b
 90  2B @0xbfb7717b: 00 00                              add [eax], al            nextPC: 0xbfb7717d
 91  2B @0xbfb7717d: 00 00                              add [eax], al            nextPC: 0xbfb7717f
 92  2B @0xbfb7717f: 00 00                              add [eax], al            nextPC: 0xbfb77181
 93  2B @0xbfb77181: 00 00                              add [eax], al            nextPC: 0xbfb77183
 94  2B @0xbfb77183: 00 00                              add [eax], al            nextPC: 0xbfb77185
 95  2B @0xbfb77185: 00 00                              add [eax], al            nextPC: 0xbfb77187
 96  2B @0xbfb77187: 00 00                              add [eax], al            nextPC: 0xbfb77189
 97  2B @0xbfb77189: 00 00                              add [eax], al            nextPC: 0xbfb7718b
 98  2B @0xbfb7718b: 00 00                              add [eax], al            nextPC: 0xbfb7718d
 99  2B @0xbfb7718d: 00 00                              add [eax], al            nextPC: 0xbfb7718f
100  2B @0xbfb7718f: 00 00                              add [eax], al            nextPC: 0xbfb77191
101  2B @0xbfb77191: 00 00                              add [eax], al            nextPC: 0xbfb77193
102  2B @0xbfb77193: 00 00                              add [eax], al            nextPC: 0xbfb77195
103  2B @0xbfb77195: 00 00                              add [eax], al            nextPC: 0xbfb77197
104  2B @0xbfb77197: 00 00                              add [eax], al            nextPC: 0xbfb77199
105  2B @0xbfb77199: 00 00                              add [eax], al            nextPC: 0xbfb7719b
106  2B @0xbfb7719b: 00 00                              add [eax], al            nextPC: 0xbfb7719d
107  2B @0xbfb7719d: 00 00                              add [eax], al            nextPC: 0xbfb7719f
108  2B @0xbfb7719f: 00 00                              add [eax], al            nextPC: 0xbfb771a1
109  2B @0xbfb771a1: 00 00                              add [eax], al            nextPC: 0xbfb771a3
110  2B @0xbfb771a3: 00 00                              add [eax], al            nextPC: 0xbfb771a5
111  2B @0xbfb771a5: 00 00                              add [eax], al            nextPC: 0xbfb771a7
112  2B @0xbfb771a7: 00 00                              add [eax], al            nextPC: 0xbfb771a9
113  2B @0xbfb771a9: 00 00                              add [eax], al            nextPC: 0xbfb771ab
114  2B @0xbfb771ab: 00 00                              add [eax], al            nextPC: 0xbfb771ad
115  2B @0xbfb771ad: 00 00                              add [eax], al            nextPC: 0xbfb771af
116  2B @0xbfb771af: 00 00                              add [eax], al            nextPC: 0xbfb771b1
117  2B @0xbfb771b1: 00 00                              add [eax], al            nextPC: 0xbfb771b3
118  2B @0xbfb771b3: 00 00                              add [eax], al            nextPC: 0xbfb771b5
119  2B @0xbfb771b5: 00 00                              add [eax], al            nextPC: 0xbfb771b7
120  2B @0xbfb771b7: 00 00                              add [eax], al            nextPC: 0xbfb771b9
121  2B @0xbfb771b9: 00 00                              add [eax], al            nextPC: 0xbfb771bb
122  2B @0xbfb771bb: 00 00                              add [eax], al            nextPC: 0xbfb771bd
123  2B @0xbfb771bd: 00 00                              add [eax], al            nextPC: 0xbfb771bf
124  2B @0xbfb771bf: 00 00                              add [eax], al            nextPC: 0xbfb771c1
125  2B @0xbfb771c1: 00 00                              add [eax], al            nextPC: 0xbfb771c3
126  2B @0xbfb771c3: 00 00                              add [eax], al            nextPC: 0xbfb771c5
127  2B @0xbfb771c5: 00 00                              add [eax], al            nextPC: 0xbfb771c7
128  2B @0xbfb771c7: 00 00                              add [eax], al            nextPC: 0xbfb771c9
129  2B @0xbfb771c9: 00 00                              add [eax], al            nextPC: 0xbfb771cb
130  2B @0xbfb771cb: 00 00                              add [eax], al            nextPC: 0xbfb771cd
131  2B @0xbfb771cd: 00 00                              add [eax], al            nextPC: 0xbfb771cf
132  2B @0xbfb771cf: 00 00                              add [eax], al            nextPC: 0xbfb771d1
133  2B @0xbfb771d1: 00 00                              add [eax], al            nextPC: 0xbfb771d3
134  2B @0xbfb771d3: 00 00                              add [eax], al            nextPC: 0xbfb771d5
135  2B @0xbfb771d5: 00 00                              add [eax], al            nextPC: 0xbfb771d7
136  2B @0xbfb771d7: 00 00                              add [eax], al            nextPC: 0xbfb771d9
137  2B @0xbfb771d9: 00 00                              add [eax], al            nextPC: 0xbfb771db
138  2B @0xbfb771db: 00 00                              add [eax], al            nextPC: 0xbfb771dd
139  2B @0xbfb771dd: 00 00                              add [eax], al            nextPC: 0xbfb771df
140  2B @0xbfb771df: 00 00                              add [eax], al            nextPC: 0xbfb771e1
141  2B @0xbfb771e1: 00 00                              add [eax], al            nextPC: 0xbfb771e3
142  2B @0xbfb771e3: 00 00                              add [eax], al            nextPC: 0xbfb771e5
143  2B @0xbfb771e5: 00 00                              add [eax], al            nextPC: 0xbfb771e7
144  2B @0xbfb771e7: 00 00                              add [eax], al            nextPC: 0xbfb771e9
145  2B @0xbfb771e9: 00 00                              add [eax], al            nextPC: 0xbfb771eb
146  2B @0xbfb771eb: 00 00                              add [eax], al            nextPC: 0xbfb771ed
147  2B @0xbfb771ed: 00 00                              add [eax], al            nextPC: 0xbfb771ef
Firing timer event
148  2B @0xbfb771ef: 00 00                              add [eax], al            nextPC: 0xbfb771f1
149  2B @0xbfb771f1: 00 00                              add [eax], al            nextPC: 0xbfb771f3
150  2B @0xbfb771f3: 00 00                              add [eax], al            nextPC: 0xbfb771f5
151  2B @0xbfb771f5: 00 00                              add [eax], al            nextPC: 0xbfb771f7
152  2B @0xbfb771f7: 00 00                              add [eax], al            nextPC: 0xbfb771f9
153  2B @0xbfb771f9: 00 00                              add [eax], al            nextPC: 0xbfb771fb
154  2B @0xbfb771fb: 00 00                              add [eax], al            nextPC: 0xbfb771fd
155  2B @0xbfb771fd: 00 00                              add [eax], al            nextPC: 0xbfb771ff
156  2B @0xbfb771ff: 00 00                              add [eax], al            nextPC: 0xbfb77201
157  2B @0xbfb77201: 00 00                              add [eax], al            nextPC: 0xbfb77203
158  2B @0xbfb77203: 00 00                              add [eax], al            nextPC: 0xbfb77205
159  2B @0xbfb77205: 00 00                              add [eax], al            nextPC: 0xbfb77207
160  2B @0xbfb77207: 00 00                              add [eax], al            nextPC: 0xbfb77209
161  2B @0xbfb77209: 00 00                              add [eax], al            nextPC: 0xbfb7720b
162  2B @0xbfb7720b: 00 00                              add [eax], al            nextPC: 0xbfb7720d
163  2B @0xbfb7720d: 00 00                              add [eax], al            nextPC: 0xbfb7720f
164  4B @0xbfb7720f: 00 00 00 00                       disasm didn't do all insn bytes: 2/4 nextPC: 0xbfb77213
651 [State 698] @0xbfb77213, left buffer range after 164 IoB insns; last IoB insn @0xbfb7720f, disasm in debug.
  1  4B @0xbfb7720f: 00 00 00 00                       disasm didn't do all insn bytes: 2/4 nextPC: 0xbfb77213
  1  1B @0xbfb77213: 50                push eax                 nextPC: 0xbfb77214 jmpPc: 0x2f06c890
  2  2B @0xbfb77214: 21 21             and [ecx], esp           nextPC: 0xbfb77216 jmpPc: 0x2f06c890
  3  2B @0xbfb77216: c5 ff             invalid                  nextPC: 0xbfb77218 jmpPc: 0x0000001a
  4  1B @0x080499bf: 55                push ebp                 nextPC: 0x080499c0
  5  2B @0x080499c0: 89 e5             mov ebp, esp             nextPC: 0x080499c2
  6  6B @0x080499c2: 81 ec 38 01 00 00 sub esp, 0x138           nextPC: 0x080499c8
  7  6B @0x080499c8: 65 a1 14 00 00 00 mov eax, [gs:0x14]       nextPC: 0x080499ce
  8  3B @0x080499ce: 89 45 f4          mov [ebp-0xc], eax       nextPC: 0x080499d1
  9  2B @0x080499d1: 31 c0             xor eax, eax             nextPC: 0x080499d3
 10  4B @0x080499d3: 83 7d 08 1f       cmp dword [ebp+0x8], 0x1f nextPC: 0x080499d7
 11  2B @0x080499d7: 7f 0d             jg 0xf                   nextPC: 0x080499d9 jmpPc: 0x00000055
 12  3B @0x080499d9: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080499dc
 13  3B @0x080499dc: c1 e0 08          shl eax, 0x8             nextPC: 0x080499df
 14  5B @0x080499df: 05 a0 96 06 08    add eax, 0x80696a0       nextPC: 0x080499e4
 15  2B @0x080499e4: eb 05             jmp 0x7                  nextPC: 0x080499eb jmpPc: 0x03308f01
 16  5B @0x080499eb: ba a4 05 05 08    mov edx, 0x80505a4       nextPC: 0x080499f0
 17  4B @0x080499f0: 89 44 24 10       mov [esp+0x10], eax      nextPC: 0x080499f4
 18  3B @0x080499f4: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080499f7
 19  4B @0x080499f7: 89 44 24 0c       mov [esp+0xc], eax       nextPC: 0x080499fb
 20  4B @0x080499fb: 89 54 24 08       mov [esp+0x8], edx       nextPC: 0x080499ff
 21  8B @0x080499ff: c7 44 24 04 00 01 00 00 mov dword [esp+0x4], 0x100 nextPC: 0x08049a07
 22  6B @0x08049a07: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a0d
 23  3B @0x08049a0d: 89 04 24          mov [esp], eax           nextPC: 0x08049a10
 24  5B @0x08049a10: e8 77 ee ff ff    call 0xffffffffffffee7c  nextPC: 0x0804888c
 25  6B @0xb75f9b2a: 8b 8d 48 fb ff ff mov ecx, [ebp+0xfffffb48] nextPC: 0xb75f9b30 jmpPc: 0x4c1008e00
 26  6B @0xb75f9b30: 8b 85 48 fb ff ff mov eax, [ebp+0xfffffb48] nextPC: 0xb75f9b36 jmpPc: 0x4c1008e00
 27  2B @0xb75f9b36: 8b 11             mov edx, [ecx]           nextPC: 0xb75f9b38 jmpPc: 0x4c1008e00
 28  3B @0xb75f9b38: 83 c0 04          add eax, 0x4             nextPC: 0xb75f9b3b jmpPc: 0x4c1008e00
 29  6B @0xb75f9b3b: 89 85 64 fb ff ff mov [ebp+0xfffffb64], eax nextPC: 0xb75f9b41 jmpPc: 0x4c1008e00
 30  2B @0xb75f9b41: 85 d2             test edx, edx            nextPC: 0xb75f9b43 jmpPc: 0x4c1008e00
 31  6B @0xb75f9b43: 0f 84 7f 2c 00 00 jz dword 0x2c85          nextPC: 0xb75f9b49
 32  7B @0xb75f9b49: 80 bd 50 fb ff ff 53 cmp byte [ebp+0xfffffb50], 0x53 nextPC: 0xb75f9b50 jmpPc: 0x4c1008e00
 33  6B @0xb75f9b50: 0f 84 e0 25 00 00 jz dword 0x25e6          nextPC: 0xb75f9b56
 34  6B @0xb75f9b56: 8b bd 2c fb ff ff mov edi, [ebp+0xfffffb2c] nextPC: 0xb75f9b5c jmpPc: 0x4c1008e00
 35  2B @0xb75f9b5c: 85 ff             test edi, edi            nextPC: 0xb75f9b5e jmpPc: 0x4c1008e00
 36  6B @0xb75f9b5e: 0f 85 d2 25 00 00 jnz dword 0x25d8         nextPC: 0xb75f9b64
 37  7B @0xb75f9b64: 83 bd 34 fb ff ff ff cmp dword [ebp+0xfffffb34], 0xff nextPC: 0xb75f9b6b jmpPc: 0x4c1008e00
 38  6B @0xb75f9b6b: 0f 84 58 2a 00 00 jz dword 0x2a5e          nextPC: 0xb75f9b71
 39  6B @0xb75fc5c9: 8b 8d 34 fb ff ff mov ecx, [ebp+0xfffffb34] nextPC: 0xb75fc5cf jmpPc: 0x4c1008e00
 40  2B @0xb75fc5cf: 89 d7             mov edi, edx             nextPC: 0xb75fc5d1 jmpPc: 0x4c1008e00
 41  2B @0xb75fc5d1: 31 c0             xor eax, eax             nextPC: 0xb75fc5d3 jmpPc: 0x4c1008e00
 42  2B @0xb75fc5d3: f2 ae             repne scasb              nextPC: 0xb75fc5d5 jmpPc: 0xffffffff
 43  2B @0xb75fc5d3: f2 ae             repne scasb              nextPC: 0xb75fc5d5 jmpPc: 0x2f495360
 44 10B @0xb75fc5d5: c7 85 50 fb ff ff 00 00 00 00 mov dword [ebp+0xfffffb50], 0x0 nextPC: 0xb75fc5df
 45  2B @0xb75fc5df: f7 d1             not ecx                  nextPC: 0xb75fc5e1
 46  3B @0xb75fc5e1: 8d 79 ff          lea edi, [ecx-0x1]       nextPC: 0xb75fc5e4
 47  5B @0xb75fc5e4: e9 c7 d5 ff ff    jmp 0xffffffffffffd5cc   nextPC: 0xb75f9bb0
 48  6B @0xb75f9bb0: 8b 85 1c fb ff ff mov eax, [ebp+0xfffffb1c] nextPC: 0xb75f9bb6
 49  2B @0xb75f9bb6: 29 f8             sub eax, edi             nextPC: 0xb75f9bb8
 50  6B @0xb75f9bb8: 89 85 34 fb ff ff mov [ebp+0xfffffb34], eax nextPC: 0xb75f9bbe
 51  6B @0xb75f9bbe: 0f 88 75 27 00 00 js dword 0x277b          nextPC: 0xb75f9bc4 jmpPc: 0xb75fc5e4
 52  6B @0xb75fc339: 8b 85 6c fb ff ff mov eax, [ebp+0xfffffb6c] nextPC: 0xb75fc33f
 53  2B @0xb75fc33f: 85 c0             test eax, eax            nextPC: 0xb75fc341
 54  6B @0xb75fc341: 0f 88 91 14 00 00 js dword 0x1497          nextPC: 0xb75fc347 jmpPc: 0xb75fc5e4
 55  4B @0xb75fc347: 0f be 46 46       movsx eax, byte [esi+0x46] nextPC: 0xb75fc34b
 56  6B @0xb75fc34b: 8b 8d 54 fb ff ff mov ecx, [ebp+0xfffffb54] nextPC: 0xb75fc351
 57  3B @0xb75fc351: 8b 04 01          mov eax, [ecx+eax]       nextPC: 0xb75fc354
 58  4B @0xb75fc354: 89 7c 24 08       mov [esp+0x8], edi       nextPC: 0xb75fc358
 59  4B @0xb75fc358: 89 54 24 04       mov [esp+0x4], edx       nextPC: 0xb75fc35c
 60  3B @0xb75fc35c: 89 34 24          mov [esp], esi           nextPC: 0xb75fc35f
 61  3B @0xb75fc35f: ff 50 1c          call dword near [eax+0x1c] nextPC: 0x00000000 jmpPc: 0x03308fe0
 62  2B @0xb75fc362: 39 f8             cmp eax, edi             nextPC: 0xb75fc364
 63  6B @0xb75fc364: 0f 84 a2 d7 ff ff jz dword 0xffffffffffffd7a8 nextPC: 0xb75fc36a jmpPc: 0xb75fc5e4
 64  3B @0xb7625925: 83 c4 1c          add esp, 0x1c            nextPC: 0xb7625928 jmpPc: 0x4c1008e00
 65  1B @0xb7625928: 5b                pop ebx                  nextPC: 0xb7625929 jmpPc: 0x4c1008e00
 66  1B @0xb7625929: 5e                pop esi                  nextPC: 0xb762592a jmpPc: 0x4c1008e00
 67  1B @0xb762592a: 5f                pop edi                  nextPC: 0xb762592b jmpPc: 0x4c1008e00
 68  1B @0xb762592b: 5d                pop ebp                  nextPC: 0xb762592c jmpPc: 0x4c1008e00
 69  1B @0xb762592c: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
 70  6B @0x08049a15: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a1b
 71  3B @0x08049a1b: 89 04 24          mov [esp], eax           nextPC: 0x08049a1e
 72  5B @0x08049a1e: e8 39 ee ff ff    call 0xffffffffffffee3e  nextPC: 0x0804885c
 73  6B @0x0804885c: ff 25 60 40 05 08 jmp dword near [0x8054060] nextPC: 0x00000000 jmpPc: 0x03308fe0
 74  1B @0xb7619a40: 55                push ebp                 nextPC: 0xb7619a41 jmpPc: 0x2f49a2a0
 75  2B @0xb7619a41: 89 e5             mov ebp, esp             nextPC: 0xb7619a43 jmpPc: 0x2f49a2a0
 76  3B @0xb7619a43: 83 ec 20          sub esp, 0x20            nextPC: 0xb7619a46 jmpPc: 0x2f49a2a0
 77  3B @0xb7619a46: 89 5d f4          mov [ebp-0xc], ebx       nextPC: 0xb7619a49 jmpPc: 0x2f49a2a0
 78  3B @0xb7619a49: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0xb7619a4c jmpPc: 0x2f49a2a0
 79  5B @0xb7619a4c: e8 8e 90 fb ff    call 0xfffffffffffb9093  nextPC: 0xb75d2adf
 80  6B @0xb7619a51: 81 c3 a3 55 0e 00 add ebx, 0xe55a3         nextPC: 0xb7619a57 jmpPc: 0x00000010
 81  3B @0xb7619a57: 89 7d fc          mov [ebp-0x4], edi       nextPC: 0xb7619a5a jmpPc: 0x00000010
 82  3B @0xb7619a5a: 89 75 f8          mov [ebp-0x8], esi       nextPC: 0xb7619a5d jmpPc: 0x00000010
 83  3B @0xb7619a5d: 89 04 24          mov [esp], eax           nextPC: 0xb7619a60 jmpPc: 0x00000010
 84  5B @0xb7619a60: e8 9b 5b 01 00    call 0x15ba0             nextPC: 0xb762f600
 85  4B @0xb762f600: 8b 44 24 04       mov eax, [esp+0x4]       nextPC: 0xb762f604 jmpPc: 0x2f49dab0
 86  5B @0xb762f604: ba 03 00 00 00    mov edx, 0x3             nextPC: 0xb762f609 jmpPc: 0x2f49dab0
 87  2B @0xb762f609: 21 c2             and edx, eax             nextPC: 0xb762f60b jmpPc: 0x2f49dab0
 88  2B @0xb762f60b: 74 24             jz 0x26                  nextPC: 0xb762f60d
 89  2B @0xb762f631: 8b 08             mov ecx, [eax]           nextPC: 0xb762f633 jmpPc: 0x2f49dab0
 90  3B @0xb762f633: 83 c0 04          add eax, 0x4             nextPC: 0xb762f636 jmpPc: 0x2f49dab0
 91  2B @0xb762f636: 29 ca             sub edx, ecx             nextPC: 0xb762f638 jmpPc: 0x2f49dab0
 92  6B @0xb762f638: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f63e jmpPc: 0x2f49dab0
 93  1B @0xb762f63e: 4a                dec edx                  nextPC: 0xb762f63f jmpPc: 0x2f49dab0
 94  2B @0xb762f63f: 73 58             jae 0x5a                 nextPC: 0xb762f641 jmpPc: 0x2f11c14a
 95  2B @0xb762f641: 31 ca             xor edx, ecx             nextPC: 0xb762f643
 96  6B @0xb762f643: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f649
 97  2B @0xb762f649: 75 4e             jnz 0x50                 nextPC: 0xb762f64b jmpPc: 0x2f11c14a
 98  2B @0xb762f64b: 8b 08             mov ecx, [eax]           nextPC: 0xb762f64d
 99  3B @0xb762f64d: 83 c0 04          add eax, 0x4             nextPC: 0xb762f650
100  2B @0xb762f650: 29 ca             sub edx, ecx             nextPC: 0xb762f652
101  6B @0xb762f652: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f658
102  1B @0xb762f658: 4a                dec edx                  nextPC: 0xb762f659
103  2B @0xb762f659: 73 3e             jae 0x40                 nextPC: 0xb762f65b jmpPc: 0x2f11c14a
104  2B @0xb762f65b: 31 ca             xor edx, ecx             nextPC: 0xb762f65d jmpPc: 0x4c1008e00
105  6B @0xb762f65d: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f663 jmpPc: 0x4c1008e00
106  2B @0xb762f663: 75 34             jnz 0x36                 nextPC: 0xb762f665 jmpPc: 0x2f11c14a
107  2B @0xb762f665: 8b 08             mov ecx, [eax]           nextPC: 0xb762f667 jmpPc: 0x4c1008e00
108  3B @0xb762f667: 83 c0 04          add eax, 0x4             nextPC: 0xb762f66a jmpPc: 0x4c1008e00
109  2B @0xb762f66a: 29 ca             sub edx, ecx             nextPC: 0xb762f66c jmpPc: 0x4c1008e00
110  6B @0xb762f66c: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f672 jmpPc: 0x4c1008e00
111  1B @0xb762f672: 4a                dec edx                  nextPC: 0xb762f673 jmpPc: 0x4c1008e00
112  2B @0xb762f673: 73 24             jae 0x26                 nextPC: 0xb762f675 jmpPc: 0x2f11c14a
113  2B @0xb762f675: 31 ca             xor edx, ecx             nextPC: 0xb762f677 jmpPc: 0x4c1008e00
114  6B @0xb762f677: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f67d jmpPc: 0x4c1008e00
115  2B @0xb762f67d: 75 1a             jnz 0x1c                 nextPC: 0xb762f67f jmpPc: 0x2f11c14a
116  2B @0xb762f67f: 8b 08             mov ecx, [eax]           nextPC: 0xb762f681 jmpPc: 0x4c1008e00
117  3B @0xb762f681: 83 c0 04          add eax, 0x4             nextPC: 0xb762f684 jmpPc: 0x4c1008e00
118  2B @0xb762f684: 29 ca             sub edx, ecx             nextPC: 0xb762f686 jmpPc: 0x4c1008e00
119  6B @0xb762f686: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f68c jmpPc: 0x4c1008e00
120  1B @0xb762f68c: 4a                dec edx                  nextPC: 0xb762f68d jmpPc: 0x4c1008e00
121  2B @0xb762f68d: 73 0a             jae 0xc                  nextPC: 0xb762f68f jmpPc: 0x2f11c14a
122  2B @0xb762f68f: 31 ca             xor edx, ecx             nextPC: 0xb762f691
123  6B @0xb762f691: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f697
124  2B @0xb762f697: 74 98             jz 0xffffffffffffff9a    nextPC: 0xb762f699 jmpPc: 0x2f11c14a
125  3B @0xb762f699: 83 e8 04          sub eax, 0x4             nextPC: 0xb762f69c
126  6B @0xb762f69c: 81 e9 ff fe fe fe sub ecx, 0xfefefeff      nextPC: 0xb762f6a2
127  3B @0xb762f6a2: 80 f9 00          cmp cl, 0x0              nextPC: 0xb762f6a5
128  2B @0xb762f6a5: 74 0f             jz 0x11                  nextPC: 0xb762f6a7 jmpPc: 0x2f11c14a
129  1B @0xb762f6a7: 40                inc eax                  nextPC: 0xb762f6a8
130  2B @0xb762f6a8: 84 ed             test ch, ch              nextPC: 0xb762f6aa
131  2B @0xb762f6aa: 74 0a             jz 0xc                   nextPC: 0xb762f6ac jmpPc: 0x2f11c140
132  4B @0xb762f6b6: 2b 44 24 04       sub eax, [esp+0x4]       nextPC: 0xb762f6ba jmpPc: 0x40196d750
133  1B @0xb762f6ba: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
134  6B @0xb7619a65: 8b 93 4c 08 00 00 mov edx, [ebx+0x84c]     nextPC: 0xb7619a6b jmpPc: 0x0196d750
135  4B @0xb7619a6b: 66 83 3a 00       cmp word [edx], 0x0      nextPC: 0xb7619a6f jmpPc: 0x0196d750
136  3B @0xb7619a6f: 89 55 f0          mov [ebp-0x10], edx      nextPC: 0xb7619a72 jmpPc: 0x0196d750
137  2B @0xb7619a72: 89 c7             mov edi, eax             nextPC: 0xb7619a74 jmpPc: 0x0196d750
138  2B @0xb7619a74: 89 d0             mov eax, edx             nextPC: 0xb7619a76 jmpPc: 0x0196d750
139  2B @0xb7619a76: 78 42             js 0x44                  nextPC: 0xb7619a78 jmpPc: 0x2ef7b5c0
140  3B @0xb7619a78: 8b 72 48          mov esi, [edx+0x48]      nextPC: 0xb7619a7b jmpPc: 0x0196d750
141  7B @0xb7619a7b: 65 8b 0d 08 00 00 00 mov ecx, [gs:0x8]        nextPC: 0xb7619a82 jmpPc: 0x0196d750
142  3B @0xb7619a82: 89 4d ec          mov [ebp-0x14], ecx      nextPC: 0xb7619a85 jmpPc: 0x0196d750
143  3B @0xb7619a85: 39 4e 08          cmp [esi+0x8], ecx       nextPC: 0xb7619a88 jmpPc: 0x0196d750
144  2B @0xb7619a88: 74 2a             jz 0x2c                  nextPC: 0xb7619a8a jmpPc: 0x2ef7b5c0
145  2B @0xb7619a8a: 31 c0             xor eax, eax             nextPC: 0xb7619a8c jmpPc: 0x0196d750
146  5B @0xb7619a8c: b9 01 00 00 00    mov ecx, 0x1             nextPC: 0xb7619a91 jmpPc: 0x0196d750
147  8B @0xb7619a91: 65 83 3d 0c 00 00 00 00 cmp dword [gs:0xc], 0x0  nextPC: 0xb7619a99 jmpPc: 0x0196d750
148  2B @0xb7619a99: 74 01             jz 0x3                   nextPC: 0xb7619a9b jmpPc: 0x2ef7b5c0
149  3B @0xb7619a9c: 0f b1 0e          cmpxchg [esi], ecx       nextPC: 0xb7619a9f jmpPc: 0x0196d750
150  6B @0xb7619a9f: 0f 85 4c 01 00 00 jnz dword 0x152          nextPC: 0xb7619aa5 jmpPc: 0x2ef7b5c0
151  3B @0xb7619aa5: 8b 72 48          mov esi, [edx+0x48]      nextPC: 0xb7619aa8 jmpPc: 0x0196d750
152  3B @0xb7619aa8: 8b 45 ec          mov eax, [ebp-0x14]      nextPC: 0xb7619aab jmpPc: 0x0196d750
153  6B @0xb7619aab: 8b 93 4c 08 00 00 mov edx, [ebx+0x84c]     nextPC: 0xb7619ab1 jmpPc: 0x0196d750
154  3B @0xb7619ab1: 89 46 08          mov [esi+0x8], eax       nextPC: 0xb7619ab4 jmpPc: 0x0196d750
155  4B @0xb7619ab4: 83 46 04 01       add dword [esi+0x4], 0x1 nextPC: 0xb7619ab8 jmpPc: 0x0196d750
156  2B @0xb7619ab8: 89 d0             mov eax, edx             nextPC: 0xb7619aba jmpPc: 0x0196d750
157  4B @0xb7619aba: 0f b6 4a 46       movzx ecx, byte [edx+0x46] nextPC: 0xb7619abe jmpPc: 0x0196d750
158  2B @0xb7619abe: 84 c9             test cl, cl              nextPC: 0xb7619ac0 jmpPc: 0x0196d750
159  6B @0xb7619ac0: 0f 84 92 00 00 00 jz dword 0x98            nextPC: 0xb7619ac6 jmpPc: 0x2ef7b5c0
160  6B @0xb7619b58: 8b 83 f4 fe ff ff mov eax, [ebx+0xfffffef4] nextPC: 0xb7619b5e jmpPc: 0x0196d750
161  2B @0xb7619b5e: 85 c0             test eax, eax            nextPC: 0xb7619b60 jmpPc: 0x0196d750
162  2B @0xb7619b60: 74 1d             jz 0x1f                  nextPC: 0xb7619b62 jmpPc: 0x2ef7b5c0
163  3B @0xb7619b62: 8b 42 68          mov eax, [edx+0x68]      nextPC: 0xb7619b65 jmpPc: 0x0196d750
164  2B @0xb7619b65: 85 c0             test eax, eax            nextPC: 0xb7619b67 jmpPc: 0x0196d750
165  2B @0xb7619b67: 75 27             jnz 0x29                 nextPC: 0xb7619b69 jmpPc: 0x2ef7b5c0
166  3B @0xb7619b90: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7619b93 jmpPc: 0x0196d750
167  6B @0xb7619b93: 0f 85 4c ff ff ff jnz dword 0xffffffffffffff52 nextPC: 0xb7619b99 jmpPc: 0x2ef7b5c0
168  2B @0xb7619b99: eb d5             jmp 0xffffffffffffffd7   nextPC: 0xb7619b70 jmpPc: 0xfffffeff0006
169  6B @0xb7619b70: 8b 83 4c 08 00 00 mov eax, [ebx+0x84c]     nextPC: 0xb7619b76
170  4B @0xb7619b76: 0f b6 48 46       movzx ecx, byte [eax+0x46] nextPC: 0xb7619b7a
171  5B @0xb7619b7a: e9 47 ff ff ff    jmp 0xffffffffffffff4c   nextPC: 0xb7619ac6 jmpPc: 0x03308f01
172  3B @0xb7619ac6: 0f be c9          movsx ecx, cl            nextPC: 0xb7619ac9
173  7B @0xb7619ac9: 8b 94 08 94 00 00 00 mov edx, [eax+ecx+0x94]  nextPC: 0xb7619ad0
174  3B @0xb7619ad0: 8b 4d 08          mov ecx, [ebp+0x8]       nextPC: 0xb7619ad3
175  4B @0xb7619ad3: 89 7c 24 08       mov [esp+0x8], edi       nextPC: 0xb7619ad7
176  3B @0xb7619ad7: 89 04 24          mov [esp], eax           nextPC: 0xb7619ada
177  4B @0xb7619ada: 89 4c 24 04       mov [esp+0x4], ecx       nextPC: 0xb7619ade
178  3B @0xb7619ade: ff 52 1c          call dword near [edx+0x1c] nextPC: 0x00000000 jmpPc: 0x03308fe0
179  2B @0xb7619ae1: 39 f8             cmp eax, edi             nextPC: 0xb7619ae3 jmpPc: 0x4c1008e00
180  2B @0xb7619ae3: 74 4b             jz 0x4d                  nextPC: 0xb7619ae5 jmpPc: 0x2ef7b5c0
181  6B @0xb7619b30: 8b 83 4c 08 00 00 mov eax, [ebx+0x84c]     nextPC: 0xb7619b36 jmpPc: 0x4c1008e00
182  3B @0xb7619b36: 8b 50 14          mov edx, [eax+0x14]      nextPC: 0xb7619b39 jmpPc: 0x4c1008e00
183  3B @0xb7619b39: 3b 50 18          cmp edx, [eax+0x18]      nextPC: 0xb7619b3c jmpPc: 0x4c1008e00
184  2B @0xb7619b3c: 73 5d             jae 0x5f                 nextPC: 0xb7619b3e jmpPc: 0x2ef7b5c0
185  8B @0xb7619b9b: c7 44 24 04 0a 00 00 00 mov dword [esp+0x4], 0xa nextPC: 0xb7619ba3 jmpPc: 0x4c1008e00
186  3B @0xb7619ba3: 89 04 24          mov [esp], eax           nextPC: 0xb7619ba6 jmpPc: 0x4c1008e00
187  5B @0xb7619ba6: e8 f5 c5 00 00    call 0xc5fa              nextPC: 0xb76261a0
188  1B @0xb76261a0: 55                push ebp                 nextPC: 0xb76261a1 jmpPc: 0x00000010
189  2B @0xb76261a1: 89 e5             mov ebp, esp             nextPC: 0xb76261a3 jmpPc: 0x00000010
190  3B @0xb76261a3: 83 ec 10          sub esp, 0x10            nextPC: 0xb76261a6 jmpPc: 0x00000010
191  3B @0xb76261a6: 89 75 fc          mov [ebp-0x4], esi       nextPC: 0xb76261a9 jmpPc: 0x00000010
192  3B @0xb76261a9: 8b 75 08          mov esi, [ebp+0x8]       nextPC: 0xb76261ac jmpPc: 0x00000010
193  3B @0xb76261ac: 89 5d f8          mov [ebp-0x8], ebx       nextPC: 0xb76261af jmpPc: 0x00000010
194  5B @0xb76261af: e8 2b c9 fa ff    call 0xfffffffffffac930  nextPC: 0xb75d2adf
195  6B @0xb76261b4: 81 c3 40 8e 0d 00 add ebx, 0xd8e40         nextPC: 0xb76261ba jmpPc: 0x00000010
196  3B @0xb76261ba: 8b 56 68          mov edx, [esi+0x68]      nextPC: 0xb76261bd jmpPc: 0x00000010
197  2B @0xb76261bd: 85 d2             test edx, edx            nextPC: 0xb76261bf jmpPc: 0x00000010
198  2B @0xb76261bf: 75 11             jnz 0x13                 nextPC: 0xb76261c1 jmpPc: 0xb76261af
199  4B @0xb76261d2: 0f be 46 46       movsx eax, byte [esi+0x46] nextPC: 0xb76261d6 jmpPc: 0x00000010
200  3B @0xb76261d6: 8b 55 0c          mov edx, [ebp+0xc]       nextPC: 0xb76261d9 jmpPc: 0x00000010
201  7B @0xb76261d9: 8b 84 06 94 00 00 00 mov eax, [esi+eax+0x94]  nextPC: 0xb76261e0 jmpPc: 0x00000010
202  3B @0xb76261e0: 89 34 24          mov [esp], esi           nextPC: 0xb76261e3 jmpPc: 0x00000010
203  4B @0xb76261e3: 89 54 24 04       mov [esp+0x4], edx       nextPC: 0xb76261e7 jmpPc: 0x00000010
204  3B @0xb76261e7: ff 50 0c          call dword near [eax+0xc] nextPC: 0x00000000 jmpPc: 0x03308fe0
205  3B @0xb7623997: 3b 46 20          cmp eax, [esi+0x20]      nextPC: 0xb762399a
206  6B @0xb762399a: 0f 84 31 01 00 00 jz dword 0x137           nextPC: 0xb76239a0 jmpPc: 0xb76261af
207  2B @0xb76239a0: 88 10             mov [eax], dl            nextPC: 0xb76239a2
208  2B @0xb76239a2: 8b 0e             mov ecx, [esi]           nextPC: 0xb76239a4
209  3B @0xb76239a4: 83 c0 01          add eax, 0x1             nextPC: 0xb76239a7
210  3B @0xb76239a7: 89 46 14          mov [esi+0x14], eax      nextPC: 0xb76239aa
211  3B @0xb76239aa: f6 c1 02          test cl, 0x2             nextPC: 0xb76239ad
212  6B @0xb76239ad: 0f 85 ad 00 00 00 jnz dword 0xb3           nextPC: 0xb76239b3 jmpPc: 0xb76261af
213  3B @0xb76239b3: 83 fa 0a          cmp edx, 0xa             nextPC: 0xb76239b6
214  6B @0xb76239b6: 0f 84 94 00 00 00 jz dword 0x9a            nextPC: 0xb76239bc jmpPc: 0xb76261af
215  3B @0xb7623a50: 80 e5 02          and ch, 0x2              nextPC: 0xb7623a53 jmpPc: 0x0000001a
216  6B @0xb7623a53: 0f 84 63 ff ff ff jz dword 0xffffffffffffff69 nextPC: 0xb7623a59 jmpPc: 0xb76261af
217  7B @0xb7623a59: 8d b4 26 00 00 00 00 lea esi, [esi+0x0]       nextPC: 0xb7623a60 jmpPc: 0x0000001a
218  3B @0xb7623a60: 8b 4e 10          mov ecx, [esi+0x10]      nextPC: 0xb7623a63 jmpPc: 0x0000001a
219  3B @0xb7623a63: 89 55 f0          mov [ebp-0x10], edx      nextPC: 0xb7623a66 jmpPc: 0x0000001a
220  3B @0xb7623a66: 89 34 24          mov [esp], esi           nextPC: 0xb7623a69 jmpPc: 0x0000001a
221  2B @0xb7623a69: 29 c8             sub eax, ecx             nextPC: 0xb7623a6b jmpPc: 0x0000001a
222  4B @0xb7623a6b: 89 44 24 08       mov [esp+0x8], eax       nextPC: 0xb7623a6f jmpPc: 0x0000001a
223  4B @0xb7623a6f: 89 4c 24 04       mov [esp+0x4], ecx       nextPC: 0xb7623a73 jmpPc: 0x0000001a
224  5B @0xb7623a73: e8 b8 f4 ff ff    call 0xfffffffffffff4bd  nextPC: 0xb7622f30
225  3B @0xb7623a78: 8b 55 f0          mov edx, [ebp-0x10]      nextPC: 0xb7623a7b jmpPc: 0x4bfb75f2f
226  3B @0xb7623a7b: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7623a7e jmpPc: 0x4bfb75f2f
227  6B @0xb7623a7e: 0f 85 38 ff ff ff jnz dword 0xffffffffffffff3e nextPC: 0xb7623a84 jmpPc: 0x7fffbf9c1030
228  3B @0xb76239bc: 0f b6 c2          movzx eax, dl            nextPC: 0xb76239bf jmpPc: 0x4bfb75f2f
229  3B @0xb76239bf: 8b 5d f4          mov ebx, [ebp-0xc]       nextPC: 0xb76239c2 jmpPc: 0x4bfb75f2f
230  3B @0xb76239c2: 8b 75 f8          mov esi, [ebp-0x8]       nextPC: 0xb76239c5 jmpPc: 0x4bfb75f2f
231  3B @0xb76239c5: 8b 7d fc          mov edi, [ebp-0x4]       nextPC: 0xb76239c8 jmpPc: 0x4bfb75f2f
232  2B @0xb76239c8: 89 ec             mov esp, ebp             nextPC: 0xb76239ca jmpPc: 0x4bfb75f2f
233  1B @0xb76239ca: 5d                pop ebp                  nextPC: 0xb76239cb jmpPc: 0x4bfb75f2f
234  1B @0xb76239cb: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
235  3B @0xb76261ea: 8b 5d f8          mov ebx, [ebp-0x8]       nextPC: 0xb76261ed jmpPc: 0x0196d750
236  3B @0xb76261ed: 8b 75 fc          mov esi, [ebp-0x4]       nextPC: 0xb76261f0 jmpPc: 0x0196d750
237  2B @0xb76261f0: 89 ec             mov esp, ebp             nextPC: 0xb76261f2 jmpPc: 0x0196d750
238  1B @0xb76261f2: 5d                pop ebp                  nextPC: 0xb76261f3 jmpPc: 0x0196d750
239  1B @0xb76261f3: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
240  3B @0xb7619bab: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7619bae jmpPc: 0x400000000
241  6B @0xb7619bae: 0f 84 31 ff ff ff jz dword 0xffffffffffffff37 nextPC: 0xb7619bb4 jmpPc: 0x2aaabdb1ef80
242  2B @0xb7619bb4: eb 91             jmp 0xffffffffffffff93   nextPC: 0xb7619b47 jmpPc: 0x00ff0006
243  3B @0xb7619b47: 83 c7 01          add edi, 0x1             nextPC: 0xb7619b4a
244  5B @0xb7619b4a: b8 ff ff ff 7f    mov eax, 0x7fffffff      nextPC: 0xb7619b4f
245  3B @0xb7619b4f: 0f 48 f8          cmovs edi, eax           nextPC: 0xb7619b52
246  2B @0xb7619b52: eb 96             jmp 0xffffffffffffff98   nextPC: 0xb7619aea jmpPc: 0x03308f01
247  3B @0xb7619aea: 8b 4d f0          mov ecx, [ebp-0x10]      nextPC: 0xb7619aed
248  4B @0xb7619aed: 66 83 39 00       cmp word [ecx], 0x0      nextPC: 0xb7619af1
249  2B @0xb7619af1: 78 2b             js 0x2d                  nextPC: 0xb7619af3 jmpPc: 0x2aaabdb1ef80
250  3B @0xb7619af3: 8b 51 48          mov edx, [ecx+0x48]      nextPC: 0xb7619af6
251  3B @0xb7619af6: 8b 42 04          mov eax, [edx+0x4]       nextPC: 0xb7619af9
252  3B @0xb7619af9: 83 e8 01          sub eax, 0x1             nextPC: 0xb7619afc
253  2B @0xb7619afc: 85 c0             test eax, eax            nextPC: 0xb7619afe
254  3B @0xb7619afe: 89 42 04          mov [edx+0x4], eax       nextPC: 0xb7619b01
255  2B @0xb7619b01: 75 1b             jnz 0x1d                 nextPC: 0xb7619b03 jmpPc: 0x2aaabdb1ef80
256  7B @0xb7619b03: c7 42 08 00 00 00 00 mov dword [edx+0x8], 0x0 nextPC: 0xb7619b0a
257  8B @0xb7619b0a: 65 83 3d 0c 00 00 00 00 cmp dword [gs:0xc], 0x0  nextPC: 0xb7619b12
258  2B @0xb7619b12: 74 01             jz 0x3                   nextPC: 0xb7619b14 jmpPc: 0x2aaabdb1ef80
259  3B @0xb7619b15: 83 2a 01          sub dword [edx], 0x1     nextPC: 0xb7619b18
260  6B @0xb7619b18: 0f 85 df 00 00 00 jnz dword 0xe5           nextPC: 0xb7619b1e jmpPc: 0x2aaabdb1ef80
261  2B @0xb7619b1e: 89 f8             mov eax, edi             nextPC: 0xb7619b20
262  3B @0xb7619b20: 8b 5d f4          mov ebx, [ebp-0xc]       nextPC: 0xb7619b23
263  3B @0xb7619b23: 8b 75 f8          mov esi, [ebp-0x8]       nextPC: 0xb7619b26
264  3B @0xb7619b26: 8b 7d fc          mov edi, [ebp-0x4]       nextPC: 0xb7619b29
265  2B @0xb7619b29: 89 ec             mov esp, ebp             nextPC: 0xb7619b2b
266  1B @0xb7619b2b: 5d                pop ebp                  nextPC: 0xb7619b2c
267  1B @0xb7619b2c: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
268  6B @0x08049a23: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a29 jmpPc: 0x0196d750
269  4B @0x08049a29: 89 44 24 04       mov [esp+0x4], eax       nextPC: 0x08049a2d jmpPc: 0x0196d750
270  7B @0x08049a2d: c7 04 24 01 00 00 00 mov dword [esp], 0x1     nextPC: 0x08049a34 jmpPc: 0x0196d750
271  5B @0x08049a34: e8 80 ef ff ff    call 0xffffffffffffef85  nextPC: 0x080489b9
272  1B @0x080489b9: 55                push ebp                 nextPC: 0x080489ba jmpPc: 0x00000010
273  2B @0x080489ba: 89 e5             mov ebp, esp             nextPC: 0x080489bc jmpPc: 0x00000010
274  3B @0x080489bc: 83 ec 04          sub esp, 0x4             nextPC: 0x080489bf jmpPc: 0x00000010
275  3B @0x080489bf: 8b 45 0c          mov eax, [ebp+0xc]       nextPC: 0x080489c2 jmpPc: 0x00000010
276  3B @0x080489c2: 89 04 24          mov [esp], eax           nextPC: 0x080489c5 jmpPc: 0x00000010
277  5B @0x080489c5: e8 9a ff ff ff    call 0xffffffffffffff9f  nextPC: 0x08048964 jmpPc: 0x03308f01
278  3B @0x080489ca: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080489cd jmpPc: 0x4c1008e00
279  3B @0x080489cd: 8b 55 0c          mov edx, [ebp+0xc]       nextPC: 0x080489d0 jmpPc: 0x4c1008e00
280  1B @0x080489d0: 53                push ebx                 nextPC: 0x080489d1 jmpPc: 0x4c1008e00
281  2B @0x080489d1: 89 d3             mov ebx, edx             nextPC: 0x080489d3 jmpPc: 0x4c1008e00
282 10B @0x080489d3: 0f 3f 00 06 00 00 00 00 00 00disasm didn't do all insn bytes: 2/a nextPC: 0x080489dd jmpPc: 0x0196d750
283  1B @0x080489dd: 5b                pop ebx                  nextPC: 0x080489de jmpPc: 0x0196d750
284  1B @0x080489de: c9                leave                    nextPC: 0x080489df jmpPc: 0x0196d750
285  1B @0x080489df: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
651 [State 698] Killing state 698
651 [State 698] Terminating state 698 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11: SIGSEGV Core Invalid memory reference"
            status: 1'
651 [State 698] Switching from state 698 to state 0
Copied 34928 (count=1)
Deleting state 698 0x0x2ef7b5c0
652 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 697
>> fuzzInit: datum forking for value 698
>> fuzzInit: datum forking for value 698
652 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 698)
        (ReadLSB w32 0 v698_fuzz_symb_698)))
    state 699 with condition (Not (Eq false
         (Eq (w32 698)
             (ReadLSB w32 0 v698_fuzz_symb_698))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-698-8048a0e
Size=2 Low=0 splitIndex=1 high=1
652 [State 0] Switching from state 0 to state 699
Copied 34928 (count=1)
Finalizing TB execution 699
s2e_dummyMainFunction
tcg-llvm-tb-698-8048a0e
Firing timer event
652 [State 699] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 698 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  6B @0xbfb770ca: c7 00 00 00 00 00                  mov dword [eax], 0x0     nextPC: 0xbfb770d0
  2  2B @0xbfb770d0: 00 00                              add [eax], al            nextPC: 0xbfb770d2
  3  2B @0xbfb770d2: c5 00                              lds eax, [eax]           nextPC: 0xbfb770d4
  4  2B @0xbfb770d4: 00 00                              add [eax], al            nextPC: 0xbfb770d6
  5  2B @0xbfb770d6: 00 00                              add [eax], al            nextPC: 0xbfb770d8
  6  2B @0xbfb770d8: 00 00                              add [eax], al            nextPC: 0xbfb770da
  7  2B @0xbfb770da: 00 00                              add [eax], al            nextPC: 0xbfb770dc
  8  2B @0xbfb770dc: 00 00                              add [eax], al            nextPC: 0xbfb770de
  9  2B @0xbfb770de: 00 00                              add [eax], al            nextPC: 0xbfb770e0
 10  2B @0xbfb770e0: 00 00                              add [eax], al            nextPC: 0xbfb770e2
 11  2B @0xbfb770e2: 00 00                              add [eax], al            nextPC: 0xbfb770e4
 12  2B @0xbfb770e4: 00 00                              add [eax], al            nextPC: 0xbfb770e6
 13  2B @0xbfb770e6: 00 00                              add [eax], al            nextPC: 0xbfb770e8
 14  2B @0xbfb770e8: 00 00                              add [eax], al            nextPC: 0xbfb770ea
 15  2B @0xbfb770ea: 00 00                              add [eax], al            nextPC: 0xbfb770ec
 16  2B @0xbfb770ec: 00 00                              add [eax], al            nextPC: 0xbfb770ee
 17  2B @0xbfb770ee: 00 00                              add [eax], al            nextPC: 0xbfb770f0
 18  2B @0xbfb770f0: 00 00                              add [eax], al            nextPC: 0xbfb770f2
 19  2B @0xbfb770f2: 00 00                              add [eax], al            nextPC: 0xbfb770f4
 20  2B @0xbfb770f4: 00 00                              add [eax], al            nextPC: 0xbfb770f6
 21  2B @0xbfb770f6: 00 00                              add [eax], al            nextPC: 0xbfb770f8
 22  2B @0xbfb770f8: 00 00                              add [eax], al            nextPC: 0xbfb770fa
 23  2B @0xbfb770fa: 00 00                              add [eax], al            nextPC: 0xbfb770fc
 24  2B @0xbfb770fc: 00 00                              add [eax], al            nextPC: 0xbfb770fe
 25  2B @0xbfb770fe: 00 00                              add [eax], al            nextPC: 0xbfb77100
 26  2B @0xbfb77100: 00 00                              add [eax], al            nextPC: 0xbfb77102
 27  2B @0xbfb77102: 00 00                              add [eax], al            nextPC: 0xbfb77104
 28  2B @0xbfb77104: 00 00                              add [eax], al            nextPC: 0xbfb77106
 29  2B @0xbfb77106: 00 00                              add [eax], al            nextPC: 0xbfb77108
 30  2B @0xbfb77108: 00 00                              add [eax], al            nextPC: 0xbfb7710a
 31  2B @0xbfb7710a: 00 00                              add [eax], al            nextPC: 0xbfb7710c
 32  2B @0xbfb7710c: 00 00                              add [eax], al            nextPC: 0xbfb7710e
 33  2B @0xbfb7710e: 00 00                              add [eax], al            nextPC: 0xbfb77110
 34  2B @0xbfb77110: 00 00                              add [eax], al            nextPC: 0xbfb77112
 35  2B @0xbfb77112: 00 00                              add [eax], al            nextPC: 0xbfb77114
 36  2B @0xbfb77114: 00 00                              add [eax], al            nextPC: 0xbfb77116
 37  2B @0xbfb77116: 00 00                              add [eax], al            nextPC: 0xbfb77118
 38  2B @0xbfb77118: 00 00                              add [eax], al            nextPC: 0xbfb7711a
 39  2B @0xbfb7711a: 00 00                              add [eax], al            nextPC: 0xbfb7711c
 40  2B @0xbfb7711c: 00 00                              add [eax], al            nextPC: 0xbfb7711e
652 [State 699] @0x080499bf, left buffer range after 40 IoB insns; last IoB insn @0xbfb7711c, disasm in debug.
  1  2B @0xbfb7711c: 00 00                              add [eax], al            nextPC: 0xbfb7711e
652 [State 699] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
652 [State 699] Terminating state 699 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
652 [State 699] Switching from state 699 to state 0
Copied 34928 (count=1)
Deleting state 699 0x0x2ef7b5c0
653 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 698
>> fuzzInit: datum forking for value 699
>> fuzzInit: datum forking for value 699
653 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 699)
        (ReadLSB w32 0 v699_fuzz_symb_699)))
    state 700 with condition (Not (Eq false
         (Eq (w32 699)
             (ReadLSB w32 0 v699_fuzz_symb_699))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-699-8048a0e
Size=2 Low=0 splitIndex=1 high=1
653 [State 0] Switching from state 0 to state 700
Copied 34928 (count=1)
Finalizing TB execution 700
s2e_dummyMainFunction
tcg-llvm-tb-699-8048a0e
653 [State 700] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 699 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
653 [State 700] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770cb: 00 00             add [eax], al           
653 [State 700] Terminating state 700 with message 'eliminated a state with an impossible first instruction'
653 [State 700] Switching from state 700 to state 0
Copied 34928 (count=1)
Deleting state 700 0x0x2ef7b5c0
653 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 699
>> fuzzInit: datum forking for value 700
>> fuzzInit: datum forking for value 700
654 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 700)
        (ReadLSB w32 0 v700_fuzz_symb_700)))
    state 701 with condition (Not (Eq false
         (Eq (w32 700)
             (ReadLSB w32 0 v700_fuzz_symb_700))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-700-8048a0e
Size=2 Low=0 splitIndex=1 high=1
654 [State 0] Switching from state 0 to state 701
Copied 34928 (count=1)
Finalizing TB execution 701
s2e_dummyMainFunction
tcg-llvm-tb-700-8048a0e
654 [State 701] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 700 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
654 [State 701] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770cc: 00 00             add [eax], al           
654 [State 701] Terminating state 701 with message 'eliminated a state with an impossible first instruction'
654 [State 701] Switching from state 701 to state 0
Copied 34928 (count=1)
Deleting state 701 0x0x2ef7b5c0
Firing timer event
654 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 700
>> fuzzInit: datum forking for value 701
>> fuzzInit: datum forking for value 701
655 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 701)
        (ReadLSB w32 0 v701_fuzz_symb_701)))
    state 702 with condition (Not (Eq false
         (Eq (w32 701)
             (ReadLSB w32 0 v701_fuzz_symb_701))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-701-8048a0e
Size=2 Low=0 splitIndex=1 high=1
655 [State 0] Switching from state 0 to state 702
Copied 34928 (count=1)
Finalizing TB execution 702
s2e_dummyMainFunction
tcg-llvm-tb-701-8048a0e
655 [State 702] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 701 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
655 [State 702] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770cd: 00 00             add [eax], al           
655 [State 702] Terminating state 702 with message 'eliminated a state with an impossible first instruction'
655 [State 702] Switching from state 702 to state 0
Copied 34928 (count=1)
Deleting state 702 0x0x2ef7b5c0
655 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 701
>> fuzzInit: datum forking for value 702
>> fuzzInit: datum forking for value 702
655 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 702)
        (ReadLSB w32 0 v702_fuzz_symb_702)))
    state 703 with condition (Not (Eq false
         (Eq (w32 702)
             (ReadLSB w32 0 v702_fuzz_symb_702))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-702-8048a0e
Size=2 Low=0 splitIndex=1 high=1
655 [State 0] Switching from state 0 to state 703
Copied 34928 (count=1)
Finalizing TB execution 703
s2e_dummyMainFunction
tcg-llvm-tb-702-8048a0e
Firing timer event
656 [State 703] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 702 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
656 [State 703] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ce: 00 00             add [eax], al           
656 [State 703] Terminating state 703 with message 'eliminated a state with an impossible first instruction'
656 [State 703] Switching from state 703 to state 0
Copied 34928 (count=1)
Deleting state 703 0x0x2ef7b5c0
656 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 702
>> fuzzInit: datum forking for value 703
>> fuzzInit: datum forking for value 703
656 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 703)
        (ReadLSB w32 0 v703_fuzz_symb_703)))
    state 704 with condition (Not (Eq false
         (Eq (w32 703)
             (ReadLSB w32 0 v703_fuzz_symb_703))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-703-8048a0e
Size=2 Low=0 splitIndex=1 high=1
656 [State 0] Switching from state 0 to state 704
Copied 34928 (count=1)
Finalizing TB execution 704
s2e_dummyMainFunction
tcg-llvm-tb-703-8048a0e
656 [State 704] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 703 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
657 [State 704] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770cf: 00 00             add [eax], al           
657 [State 704] Terminating state 704 with message 'eliminated a state with an impossible first instruction'
657 [State 704] Switching from state 704 to state 0
Copied 34928 (count=1)
Deleting state 704 0x0x2ef7b5c0
657 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 703
>> fuzzInit: datum forking for value 704
>> fuzzInit: datum forking for value 704
>> fuzzInit: datum forking for value 704
657 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 704)
        (ReadLSB w32 0 v704_fuzz_symb_704)))
    state 705 with condition (Not (Eq false
         (Eq (w32 704)
             (ReadLSB w32 0 v704_fuzz_symb_704))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-704-8048a0e
Size=2 Low=0 splitIndex=1 high=1
657 [State 0] Switching from state 0 to state 705
Copied 34928 (count=1)
Finalizing TB execution 705
s2e_dummyMainFunction
tcg-llvm-tb-704-8048a0e
657 [State 705] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 704 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
658 [State 705] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d0: 00 00             add [eax], al           
658 [State 705] Terminating state 705 with message 'eliminated a state with an impossible first instruction'
658 [State 705] Switching from state 705 to state 0
Copied 34928 (count=1)
Deleting state 705 0x0x2ef7b5c0
658 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 704
>> fuzzInit: datum forking for value 705
>> fuzzInit: datum forking for value 705
658 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 705)
        (ReadLSB w32 0 v705_fuzz_symb_705)))
    state 706 with condition (Not (Eq false
         (Eq (w32 705)
             (ReadLSB w32 0 v705_fuzz_symb_705))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-705-8048a0e
Size=2 Low=0 splitIndex=1 high=1
658 [State 0] Switching from state 0 to state 706
Copied 34928 (count=1)
Finalizing TB execution 706
s2e_dummyMainFunction
tcg-llvm-tb-705-8048a0e
658 [State 706] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 705 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  2B @0xbfb770d1: 00 c5                              add ch, al               nextPC: 0xbfb770d3
  2  2B @0xbfb770d3: 00 00                              add [eax], al            nextPC: 0xbfb770d5
  3  2B @0xbfb770d5: 00 00                              add [eax], al            nextPC: 0xbfb770d7
  4  2B @0xbfb770d7: 00 00                              add [eax], al            nextPC: 0xbfb770d9
  5  2B @0xbfb770d9: 00 00                              add [eax], al            nextPC: 0xbfb770db
  6  2B @0xbfb770db: 00 00                              add [eax], al            nextPC: 0xbfb770dd
  7  2B @0xbfb770dd: 00 00                              add [eax], al            nextPC: 0xbfb770df
  8  2B @0xbfb770df: 00 00                              add [eax], al            nextPC: 0xbfb770e1
  9  2B @0xbfb770e1: 00 00                              add [eax], al            nextPC: 0xbfb770e3
 10  2B @0xbfb770e3: 00 00                              add [eax], al            nextPC: 0xbfb770e5
 11  2B @0xbfb770e5: 00 00                              add [eax], al            nextPC: 0xbfb770e7
 12  2B @0xbfb770e7: 00 00                              add [eax], al            nextPC: 0xbfb770e9
 13  2B @0xbfb770e9: 00 00                              add [eax], al            nextPC: 0xbfb770eb
 14  2B @0xbfb770eb: 00 00                              add [eax], al            nextPC: 0xbfb770ed
 15  2B @0xbfb770ed: 00 00                              add [eax], al            nextPC: 0xbfb770ef
 16  2B @0xbfb770ef: 00 00                              add [eax], al            nextPC: 0xbfb770f1
 17  2B @0xbfb770f1: 00 00                              add [eax], al            nextPC: 0xbfb770f3
 18  2B @0xbfb770f3: 00 00                              add [eax], al            nextPC: 0xbfb770f5
 19  2B @0xbfb770f5: 00 00                              add [eax], al            nextPC: 0xbfb770f7
 20  2B @0xbfb770f7: 00 00                              add [eax], al            nextPC: 0xbfb770f9
 21  2B @0xbfb770f9: 00 00                              add [eax], al            nextPC: 0xbfb770fb
 22  2B @0xbfb770fb: 00 00                              add [eax], al            nextPC: 0xbfb770fd
 23  2B @0xbfb770fd: 00 00                              add [eax], al            nextPC: 0xbfb770ff
 24  2B @0xbfb770ff: 00 00                              add [eax], al            nextPC: 0xbfb77101
 25  2B @0xbfb77101: 00 00                              add [eax], al            nextPC: 0xbfb77103
 26  2B @0xbfb77103: 00 00                              add [eax], al            nextPC: 0xbfb77105
 27  2B @0xbfb77105: 00 00                              add [eax], al            nextPC: 0xbfb77107
 28  2B @0xbfb77107: 00 00                              add [eax], al            nextPC: 0xbfb77109
 29  2B @0xbfb77109: 00 00                              add [eax], al            nextPC: 0xbfb7710b
 30  2B @0xbfb7710b: 00 00                              add [eax], al            nextPC: 0xbfb7710d
 31  2B @0xbfb7710d: 00 00                              add [eax], al            nextPC: 0xbfb7710f
 32  2B @0xbfb7710f: 00 00                              add [eax], al            nextPC: 0xbfb77111
 33  2B @0xbfb77111: 00 00                              add [eax], al            nextPC: 0xbfb77113
 34  2B @0xbfb77113: 00 00                              add [eax], al            nextPC: 0xbfb77115
 35  2B @0xbfb77115: 00 00                              add [eax], al            nextPC: 0xbfb77117
 36  2B @0xbfb77117: 00 00                              add [eax], al            nextPC: 0xbfb77119
 37  2B @0xbfb77119: 00 00                              add [eax], al            nextPC: 0xbfb7711b
 38  2B @0xbfb7711b: 00 00                              add [eax], al            nextPC: 0xbfb7711d
 39  2B @0xbfb7711d: 00 00                              add [eax], al            nextPC: 0xbfb7711f
 40  2B @0xbfb7711f: 00 00                              add [eax], al            nextPC: 0xbfb77121
 41  2B @0xbfb77121: 00 00                              add [eax], al            nextPC: 0xbfb77123
 42  2B @0xbfb77123: 00 00                              add [eax], al            nextPC: 0xbfb77125
 43  2B @0xbfb77125: 00 00                              add [eax], al            nextPC: 0xbfb77127
 44  2B @0xbfb77127: 00 00                              add [eax], al            nextPC: 0xbfb77129
 45  2B @0xbfb77129: 00 00                              add [eax], al            nextPC: 0xbfb7712b
 46  2B @0xbfb7712b: 00 00                              add [eax], al            nextPC: 0xbfb7712d
 47  2B @0xbfb7712d: 00 00                              add [eax], al            nextPC: 0xbfb7712f
 48  2B @0xbfb7712f: 00 00                              add [eax], al            nextPC: 0xbfb77131
 49  2B @0xbfb77131: 00 00                              add [eax], al            nextPC: 0xbfb77133
 50  2B @0xbfb77133: 00 00                              add [eax], al            nextPC: 0xbfb77135
 51  2B @0xbfb77135: 00 00                              add [eax], al            nextPC: 0xbfb77137
 52  2B @0xbfb77137: 00 00                              add [eax], al            nextPC: 0xbfb77139
 53  2B @0xbfb77139: 00 00                              add [eax], al            nextPC: 0xbfb7713b
 54  2B @0xbfb7713b: 00 00                              add [eax], al            nextPC: 0xbfb7713d
 55  2B @0xbfb7713d: 00 00                              add [eax], al            nextPC: 0xbfb7713f
 56  2B @0xbfb7713f: 00 00                              add [eax], al            nextPC: 0xbfb77141
 57  2B @0xbfb77141: 00 00                              add [eax], al            nextPC: 0xbfb77143
 58  2B @0xbfb77143: 00 00                              add [eax], al            nextPC: 0xbfb77145
 59  2B @0xbfb77145: 00 00                              add [eax], al            nextPC: 0xbfb77147
 60  2B @0xbfb77147: 00 00                              add [eax], al            nextPC: 0xbfb77149
 61  2B @0xbfb77149: 00 00                              add [eax], al            nextPC: 0xbfb7714b
 62  2B @0xbfb7714b: 00 00                              add [eax], al            nextPC: 0xbfb7714d
 63  2B @0xbfb7714d: 00 00                              add [eax], al            nextPC: 0xbfb7714f
 64  2B @0xbfb7714f: 00 00                              add [eax], al            nextPC: 0xbfb77151
 65  2B @0xbfb77151: 00 00                              add [eax], al            nextPC: 0xbfb77153
 66  2B @0xbfb77153: 00 00                              add [eax], al            nextPC: 0xbfb77155
 67  2B @0xbfb77155: 00 00                              add [eax], al            nextPC: 0xbfb77157
 68  2B @0xbfb77157: 00 00                              add [eax], al            nextPC: 0xbfb77159
 69  2B @0xbfb77159: 00 00                              add [eax], al            nextPC: 0xbfb7715b
 70  2B @0xbfb7715b: 00 00                              add [eax], al            nextPC: 0xbfb7715d
 71  2B @0xbfb7715d: 00 00                              add [eax], al            nextPC: 0xbfb7715f
 72  2B @0xbfb7715f: 00 00                              add [eax], al            nextPC: 0xbfb77161
 73  2B @0xbfb77161: 00 00                              add [eax], al            nextPC: 0xbfb77163
Firing timer event
 74  2B @0xbfb77163: 00 00                              add [eax], al            nextPC: 0xbfb77165
 75  2B @0xbfb77165: 00 00                              add [eax], al            nextPC: 0xbfb77167
 76  2B @0xbfb77167: 00 00                              add [eax], al            nextPC: 0xbfb77169
 77  2B @0xbfb77169: 00 00                              add [eax], al            nextPC: 0xbfb7716b
 78  2B @0xbfb7716b: 00 00                              add [eax], al            nextPC: 0xbfb7716d
 79  2B @0xbfb7716d: 00 00                              add [eax], al            nextPC: 0xbfb7716f
 80  2B @0xbfb7716f: 00 00                              add [eax], al            nextPC: 0xbfb77171
 81  2B @0xbfb77171: 00 00                              add [eax], al            nextPC: 0xbfb77173
 82  2B @0xbfb77173: 00 00                              add [eax], al            nextPC: 0xbfb77175
 83  2B @0xbfb77175: 00 00                              add [eax], al            nextPC: 0xbfb77177
 84  2B @0xbfb77177: 00 00                              add [eax], al            nextPC: 0xbfb77179
 85  2B @0xbfb77179: 00 00                              add [eax], al            nextPC: 0xbfb7717b
 86  2B @0xbfb7717b: 00 00                              add [eax], al            nextPC: 0xbfb7717d
 87  2B @0xbfb7717d: 00 00                              add [eax], al            nextPC: 0xbfb7717f
 88  2B @0xbfb7717f: 00 00                              add [eax], al            nextPC: 0xbfb77181
 89  2B @0xbfb77181: 00 00                              add [eax], al            nextPC: 0xbfb77183
 90  2B @0xbfb77183: 00 00                              add [eax], al            nextPC: 0xbfb77185
 91  2B @0xbfb77185: 00 00                              add [eax], al            nextPC: 0xbfb77187
 92  2B @0xbfb77187: 00 00                              add [eax], al            nextPC: 0xbfb77189
 93  2B @0xbfb77189: 00 00                              add [eax], al            nextPC: 0xbfb7718b
 94  2B @0xbfb7718b: 00 00                              add [eax], al            nextPC: 0xbfb7718d
 95  2B @0xbfb7718d: 00 00                              add [eax], al            nextPC: 0xbfb7718f
 96  2B @0xbfb7718f: 00 00                              add [eax], al            nextPC: 0xbfb77191
 97  2B @0xbfb77191: 00 00                              add [eax], al            nextPC: 0xbfb77193
 98  2B @0xbfb77193: 00 00                              add [eax], al            nextPC: 0xbfb77195
 99  2B @0xbfb77195: 00 00                              add [eax], al            nextPC: 0xbfb77197
100  2B @0xbfb77197: 00 00                              add [eax], al            nextPC: 0xbfb77199
101  2B @0xbfb77199: 00 00                              add [eax], al            nextPC: 0xbfb7719b
102  2B @0xbfb7719b: 00 00                              add [eax], al            nextPC: 0xbfb7719d
103  2B @0xbfb7719d: 00 00                              add [eax], al            nextPC: 0xbfb7719f
104  2B @0xbfb7719f: 00 00                              add [eax], al            nextPC: 0xbfb771a1
105  2B @0xbfb771a1: 00 00                              add [eax], al            nextPC: 0xbfb771a3
106  2B @0xbfb771a3: 00 00                              add [eax], al            nextPC: 0xbfb771a5
107  2B @0xbfb771a5: 00 00                              add [eax], al            nextPC: 0xbfb771a7
108  2B @0xbfb771a7: 00 00                              add [eax], al            nextPC: 0xbfb771a9
109  2B @0xbfb771a9: 00 00                              add [eax], al            nextPC: 0xbfb771ab
110  2B @0xbfb771ab: 00 00                              add [eax], al            nextPC: 0xbfb771ad
111  2B @0xbfb771ad: 00 00                              add [eax], al            nextPC: 0xbfb771af
112  2B @0xbfb771af: 00 00                              add [eax], al            nextPC: 0xbfb771b1
113  2B @0xbfb771b1: 00 00                              add [eax], al            nextPC: 0xbfb771b3
114  2B @0xbfb771b3: 00 00                              add [eax], al            nextPC: 0xbfb771b5
115  2B @0xbfb771b5: 00 00                              add [eax], al            nextPC: 0xbfb771b7
116  2B @0xbfb771b7: 00 00                              add [eax], al            nextPC: 0xbfb771b9
117  2B @0xbfb771b9: 00 00                              add [eax], al            nextPC: 0xbfb771bb
118  2B @0xbfb771bb: 00 00                              add [eax], al            nextPC: 0xbfb771bd
119  2B @0xbfb771bd: 00 00                              add [eax], al            nextPC: 0xbfb771bf
120  2B @0xbfb771bf: 00 00                              add [eax], al            nextPC: 0xbfb771c1
121  2B @0xbfb771c1: 00 00                              add [eax], al            nextPC: 0xbfb771c3
122  2B @0xbfb771c3: 00 00                              add [eax], al            nextPC: 0xbfb771c5
123  2B @0xbfb771c5: 00 00                              add [eax], al            nextPC: 0xbfb771c7
124  2B @0xbfb771c7: 00 00                              add [eax], al            nextPC: 0xbfb771c9
125  2B @0xbfb771c9: 00 00                              add [eax], al            nextPC: 0xbfb771cb
126  2B @0xbfb771cb: 00 00                              add [eax], al            nextPC: 0xbfb771cd
127  2B @0xbfb771cd: 00 00                              add [eax], al            nextPC: 0xbfb771cf
128  2B @0xbfb771cf: 00 00                              add [eax], al            nextPC: 0xbfb771d1
129  2B @0xbfb771d1: 00 00                              add [eax], al            nextPC: 0xbfb771d3
130  2B @0xbfb771d3: 00 00                              add [eax], al            nextPC: 0xbfb771d5
131  2B @0xbfb771d5: 00 00                              add [eax], al            nextPC: 0xbfb771d7
132  2B @0xbfb771d7: 00 00                              add [eax], al            nextPC: 0xbfb771d9
133  2B @0xbfb771d9: 00 00                              add [eax], al            nextPC: 0xbfb771db
134  2B @0xbfb771db: 00 00                              add [eax], al            nextPC: 0xbfb771dd
135  2B @0xbfb771dd: 00 00                              add [eax], al            nextPC: 0xbfb771df
136  2B @0xbfb771df: 00 00                              add [eax], al            nextPC: 0xbfb771e1
137  2B @0xbfb771e1: 00 00                              add [eax], al            nextPC: 0xbfb771e3
138  2B @0xbfb771e3: 00 00                              add [eax], al            nextPC: 0xbfb771e5
139  2B @0xbfb771e5: 00 00                              add [eax], al            nextPC: 0xbfb771e7
140  2B @0xbfb771e7: 00 00                              add [eax], al            nextPC: 0xbfb771e9
141  2B @0xbfb771e9: 00 00                              add [eax], al            nextPC: 0xbfb771eb
142  2B @0xbfb771eb: 00 00                              add [eax], al            nextPC: 0xbfb771ed
143  2B @0xbfb771ed: 00 00                              add [eax], al            nextPC: 0xbfb771ef
144  2B @0xbfb771ef: 00 00                              add [eax], al            nextPC: 0xbfb771f1
145  2B @0xbfb771f1: 00 00                              add [eax], al            nextPC: 0xbfb771f3
146  2B @0xbfb771f3: 00 00                              add [eax], al            nextPC: 0xbfb771f5
147  2B @0xbfb771f5: 00 00                              add [eax], al            nextPC: 0xbfb771f7
148  2B @0xbfb771f7: 00 00                              add [eax], al            nextPC: 0xbfb771f9
149  2B @0xbfb771f9: 00 00                              add [eax], al            nextPC: 0xbfb771fb
150  2B @0xbfb771fb: 00 00                              add [eax], al            nextPC: 0xbfb771fd
151  2B @0xbfb771fd: 00 00                              add [eax], al            nextPC: 0xbfb771ff
152  2B @0xbfb771ff: 00 00                              add [eax], al            nextPC: 0xbfb77201
153  2B @0xbfb77201: 00 00                              add [eax], al            nextPC: 0xbfb77203
154  2B @0xbfb77203: 00 00                              add [eax], al            nextPC: 0xbfb77205
155  2B @0xbfb77205: 00 00                              add [eax], al            nextPC: 0xbfb77207
156  2B @0xbfb77207: 00 00                              add [eax], al            nextPC: 0xbfb77209
157  2B @0xbfb77209: 00 00                              add [eax], al            nextPC: 0xbfb7720b
158  2B @0xbfb7720b: 00 00                              add [eax], al            nextPC: 0xbfb7720d
159  2B @0xbfb7720d: 00 00                              add [eax], al            nextPC: 0xbfb7720f
160  4B @0xbfb7720f: 00 00 00 00                       disasm didn't do all insn bytes: 2/4 nextPC: 0xbfb77213
659 [State 706] @0xbfb77213, left buffer range after 160 IoB insns; last IoB insn @0xbfb7720f, disasm in debug.
  1  4B @0xbfb7720f: 00 00 00 00                       disasm didn't do all insn bytes: 2/4 nextPC: 0xbfb77213
  1  1B @0xbfb77213: 50                push eax                 nextPC: 0xbfb77214 jmpPc: 0x2eb5b2d0
  2  2B @0xbfb77214: 21 21             and [ecx], esp           nextPC: 0xbfb77216 jmpPc: 0x2eb5b2d0
  3  2B @0xbfb77216: c5 ff             invalid                  nextPC: 0xbfb77218 jmpPc: 0x0000001a
  4  1B @0x080499bf: 55                push ebp                 nextPC: 0x080499c0
  5  2B @0x080499c0: 89 e5             mov ebp, esp             nextPC: 0x080499c2
  6  6B @0x080499c2: 81 ec 38 01 00 00 sub esp, 0x138           nextPC: 0x080499c8
  7  6B @0x080499c8: 65 a1 14 00 00 00 mov eax, [gs:0x14]       nextPC: 0x080499ce
  8  3B @0x080499ce: 89 45 f4          mov [ebp-0xc], eax       nextPC: 0x080499d1
  9  2B @0x080499d1: 31 c0             xor eax, eax             nextPC: 0x080499d3
 10  4B @0x080499d3: 83 7d 08 1f       cmp dword [ebp+0x8], 0x1f nextPC: 0x080499d7
 11  2B @0x080499d7: 7f 0d             jg 0xf                   nextPC: 0x080499d9 jmpPc: 0x2ef7b555
 12  3B @0x080499d9: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080499dc
 13  3B @0x080499dc: c1 e0 08          shl eax, 0x8             nextPC: 0x080499df
 14  5B @0x080499df: 05 a0 96 06 08    add eax, 0x80696a0       nextPC: 0x080499e4
 15  2B @0x080499e4: eb 05             jmp 0x7                  nextPC: 0x080499eb jmpPc: 0x03308f01
 16  5B @0x080499eb: ba a4 05 05 08    mov edx, 0x80505a4       nextPC: 0x080499f0
 17  4B @0x080499f0: 89 44 24 10       mov [esp+0x10], eax      nextPC: 0x080499f4
 18  3B @0x080499f4: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080499f7
 19  4B @0x080499f7: 89 44 24 0c       mov [esp+0xc], eax       nextPC: 0x080499fb
 20  4B @0x080499fb: 89 54 24 08       mov [esp+0x8], edx       nextPC: 0x080499ff
 21  8B @0x080499ff: c7 44 24 04 00 01 00 00 mov dword [esp+0x4], 0x100 nextPC: 0x08049a07
 22  6B @0x08049a07: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a0d
 23  3B @0x08049a0d: 89 04 24          mov [esp], eax           nextPC: 0x08049a10
 24  5B @0x08049a10: e8 77 ee ff ff    call 0xffffffffffffee7c  nextPC: 0x0804888c
 25  6B @0xb75f9b2a: 8b 8d 48 fb ff ff mov ecx, [ebp+0xfffffb48] nextPC: 0xb75f9b30 jmpPc: 0x400000000
 26  6B @0xb75f9b30: 8b 85 48 fb ff ff mov eax, [ebp+0xfffffb48] nextPC: 0xb75f9b36 jmpPc: 0x400000000
 27  2B @0xb75f9b36: 8b 11             mov edx, [ecx]           nextPC: 0xb75f9b38 jmpPc: 0x400000000
 28  3B @0xb75f9b38: 83 c0 04          add eax, 0x4             nextPC: 0xb75f9b3b jmpPc: 0x400000000
 29  6B @0xb75f9b3b: 89 85 64 fb ff ff mov [ebp+0xfffffb64], eax nextPC: 0xb75f9b41 jmpPc: 0x400000000
 30  2B @0xb75f9b41: 85 d2             test edx, edx            nextPC: 0xb75f9b43 jmpPc: 0x400000000
 31  6B @0xb75f9b43: 0f 84 7f 2c 00 00 jz dword 0x2c85          nextPC: 0xb75f9b49
 32  7B @0xb75f9b49: 80 bd 50 fb ff ff 53 cmp byte [ebp+0xfffffb50], 0x53 nextPC: 0xb75f9b50 jmpPc: 0x400000000
 33  6B @0xb75f9b50: 0f 84 e0 25 00 00 jz dword 0x25e6          nextPC: 0xb75f9b56
 34  6B @0xb75f9b56: 8b bd 2c fb ff ff mov edi, [ebp+0xfffffb2c] nextPC: 0xb75f9b5c jmpPc: 0x400000000
 35  2B @0xb75f9b5c: 85 ff             test edi, edi            nextPC: 0xb75f9b5e jmpPc: 0x400000000
 36  6B @0xb75f9b5e: 0f 85 d2 25 00 00 jnz dword 0x25d8         nextPC: 0xb75f9b64
 37  7B @0xb75f9b64: 83 bd 34 fb ff ff ff cmp dword [ebp+0xfffffb34], 0xff nextPC: 0xb75f9b6b jmpPc: 0x400000000
 38  6B @0xb75f9b6b: 0f 84 58 2a 00 00 jz dword 0x2a5e          nextPC: 0xb75f9b71
 39  6B @0xb75fc5c9: 8b 8d 34 fb ff ff mov ecx, [ebp+0xfffffb34] nextPC: 0xb75fc5cf jmpPc: 0x400000000
 40  2B @0xb75fc5cf: 89 d7             mov edi, edx             nextPC: 0xb75fc5d1 jmpPc: 0x400000000
 41  2B @0xb75fc5d1: 31 c0             xor eax, eax             nextPC: 0xb75fc5d3 jmpPc: 0x400000000
 42  2B @0xb75fc5d3: f2 ae             repne scasb              nextPC: 0xb75fc5d5 jmpPc: 0xffffffff
 43  2B @0xb75fc5d3: f2 ae             repne scasb              nextPC: 0xb75fc5d5 jmpPc: 0x2f655bd0
 44 10B @0xb75fc5d5: c7 85 50 fb ff ff 00 00 00 00 mov dword [ebp+0xfffffb50], 0x0 nextPC: 0xb75fc5df
 45  2B @0xb75fc5df: f7 d1             not ecx                  nextPC: 0xb75fc5e1
 46  3B @0xb75fc5e1: 8d 79 ff          lea edi, [ecx-0x1]       nextPC: 0xb75fc5e4
 47  5B @0xb75fc5e4: e9 c7 d5 ff ff    jmp 0xffffffffffffd5cc   nextPC: 0xb75f9bb0
 48  6B @0xb75f9bb0: 8b 85 1c fb ff ff mov eax, [ebp+0xfffffb1c] nextPC: 0xb75f9bb6
 49  2B @0xb75f9bb6: 29 f8             sub eax, edi             nextPC: 0xb75f9bb8
 50  6B @0xb75f9bb8: 89 85 34 fb ff ff mov [ebp+0xfffffb34], eax nextPC: 0xb75f9bbe
 51  6B @0xb75f9bbe: 0f 88 75 27 00 00 js dword 0x277b          nextPC: 0xb75f9bc4 jmpPc: 0xb75fc5e4
 52  6B @0xb75fc339: 8b 85 6c fb ff ff mov eax, [ebp+0xfffffb6c] nextPC: 0xb75fc33f
 53  2B @0xb75fc33f: 85 c0             test eax, eax            nextPC: 0xb75fc341
 54  6B @0xb75fc341: 0f 88 91 14 00 00 js dword 0x1497          nextPC: 0xb75fc347 jmpPc: 0xb75fc5e4
 55  4B @0xb75fc347: 0f be 46 46       movsx eax, byte [esi+0x46] nextPC: 0xb75fc34b
 56  6B @0xb75fc34b: 8b 8d 54 fb ff ff mov ecx, [ebp+0xfffffb54] nextPC: 0xb75fc351
 57  3B @0xb75fc351: 8b 04 01          mov eax, [ecx+eax]       nextPC: 0xb75fc354
 58  4B @0xb75fc354: 89 7c 24 08       mov [esp+0x8], edi       nextPC: 0xb75fc358
 59  4B @0xb75fc358: 89 54 24 04       mov [esp+0x4], edx       nextPC: 0xb75fc35c
 60  3B @0xb75fc35c: 89 34 24          mov [esp], esi           nextPC: 0xb75fc35f
 61  3B @0xb75fc35f: ff 50 1c          call dword near [eax+0x1c] nextPC: 0x00000000 jmpPc: 0x03308fe0
 62  2B @0xb75fc362: 39 f8             cmp eax, edi             nextPC: 0xb75fc364
 63  6B @0xb75fc364: 0f 84 a2 d7 ff ff jz dword 0xffffffffffffd7a8 nextPC: 0xb75fc36a jmpPc: 0xb75fc5e4
 64  3B @0xb7625925: 83 c4 1c          add esp, 0x1c            nextPC: 0xb7625928
 65  1B @0xb7625928: 5b                pop ebx                  nextPC: 0xb7625929
 66  1B @0xb7625929: 5e                pop esi                  nextPC: 0xb762592a
 67  1B @0xb762592a: 5f                pop edi                  nextPC: 0xb762592b
 68  1B @0xb762592b: 5d                pop ebp                  nextPC: 0xb762592c
 69  1B @0xb762592c: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
 70  6B @0x08049a15: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a1b jmpPc: 0x0196d750
 71  3B @0x08049a1b: 89 04 24          mov [esp], eax           nextPC: 0x08049a1e jmpPc: 0x0196d750
 72  5B @0x08049a1e: e8 39 ee ff ff    call 0xffffffffffffee3e  nextPC: 0x0804885c
 73  6B @0x0804885c: ff 25 60 40 05 08 jmp dword near [0x8054060] nextPC: 0x00000000 jmpPc: 0x03308fe0
 74  1B @0xb7619a40: 55                push ebp                 nextPC: 0xb7619a41 jmpPc: 0x2f6f23b0
 75  2B @0xb7619a41: 89 e5             mov ebp, esp             nextPC: 0xb7619a43 jmpPc: 0x2f6f23b0
 76  3B @0xb7619a43: 83 ec 20          sub esp, 0x20            nextPC: 0xb7619a46 jmpPc: 0x2f6f23b0
 77  3B @0xb7619a46: 89 5d f4          mov [ebp-0xc], ebx       nextPC: 0xb7619a49 jmpPc: 0x2f6f23b0
 78  3B @0xb7619a49: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0xb7619a4c jmpPc: 0x2f6f23b0
 79  5B @0xb7619a4c: e8 8e 90 fb ff    call 0xfffffffffffb9093  nextPC: 0xb75d2adf
 80  6B @0xb7619a51: 81 c3 a3 55 0e 00 add ebx, 0xe55a3         nextPC: 0xb7619a57 jmpPc: 0x4c1008e00
 81  3B @0xb7619a57: 89 7d fc          mov [ebp-0x4], edi       nextPC: 0xb7619a5a jmpPc: 0x4c1008e00
 82  3B @0xb7619a5a: 89 75 f8          mov [ebp-0x8], esi       nextPC: 0xb7619a5d jmpPc: 0x4c1008e00
 83  3B @0xb7619a5d: 89 04 24          mov [esp], eax           nextPC: 0xb7619a60 jmpPc: 0x4c1008e00
 84  5B @0xb7619a60: e8 9b 5b 01 00    call 0x15ba0             nextPC: 0xb762f600
 85  4B @0xb762f600: 8b 44 24 04       mov eax, [esp+0x4]       nextPC: 0xb762f604 jmpPc: 0x2f6f5bc0
 86  5B @0xb762f604: ba 03 00 00 00    mov edx, 0x3             nextPC: 0xb762f609 jmpPc: 0x2f6f5bc0
 87  2B @0xb762f609: 21 c2             and edx, eax             nextPC: 0xb762f60b jmpPc: 0x2f6f5bc0
 88  2B @0xb762f60b: 74 24             jz 0x26                  nextPC: 0xb762f60d
 89  2B @0xb762f631: 8b 08             mov ecx, [eax]           nextPC: 0xb762f633 jmpPc: 0x2f6f5bc0
 90  3B @0xb762f633: 83 c0 04          add eax, 0x4             nextPC: 0xb762f636 jmpPc: 0x2f6f5bc0
 91  2B @0xb762f636: 29 ca             sub edx, ecx             nextPC: 0xb762f638 jmpPc: 0x2f6f5bc0
 92  6B @0xb762f638: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f63e jmpPc: 0x2f6f5bc0
 93  1B @0xb762f63e: 4a                dec edx                  nextPC: 0xb762f63f jmpPc: 0x2f6f5bc0
 94  2B @0xb762f63f: 73 58             jae 0x5a                 nextPC: 0xb762f641 jmpPc: 0x0000004a
 95  2B @0xb762f641: 31 ca             xor edx, ecx             nextPC: 0xb762f643
 96  6B @0xb762f643: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f649
 97  2B @0xb762f649: 75 4e             jnz 0x50                 nextPC: 0xb762f64b jmpPc: 0x0000004a
 98  2B @0xb762f64b: 8b 08             mov ecx, [eax]           nextPC: 0xb762f64d
 99  3B @0xb762f64d: 83 c0 04          add eax, 0x4             nextPC: 0xb762f650
100  2B @0xb762f650: 29 ca             sub edx, ecx             nextPC: 0xb762f652
101  6B @0xb762f652: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f658
102  1B @0xb762f658: 4a                dec edx                  nextPC: 0xb762f659
103  2B @0xb762f659: 73 3e             jae 0x40                 nextPC: 0xb762f65b jmpPc: 0x0000004a
104  2B @0xb762f65b: 31 ca             xor edx, ecx             nextPC: 0xb762f65d
105  6B @0xb762f65d: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f663
106  2B @0xb762f663: 75 34             jnz 0x36                 nextPC: 0xb762f665 jmpPc: 0x0000004a
107  2B @0xb762f665: 8b 08             mov ecx, [eax]           nextPC: 0xb762f667
108  3B @0xb762f667: 83 c0 04          add eax, 0x4             nextPC: 0xb762f66a
109  2B @0xb762f66a: 29 ca             sub edx, ecx             nextPC: 0xb762f66c
110  6B @0xb762f66c: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f672
111  1B @0xb762f672: 4a                dec edx                  nextPC: 0xb762f673
112  2B @0xb762f673: 73 24             jae 0x26                 nextPC: 0xb762f675 jmpPc: 0x0000004a
113  2B @0xb762f675: 31 ca             xor edx, ecx             nextPC: 0xb762f677 jmpPc: 0x4c1008e00
114  6B @0xb762f677: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f67d jmpPc: 0x4c1008e00
115  2B @0xb762f67d: 75 1a             jnz 0x1c                 nextPC: 0xb762f67f jmpPc: 0x0000004a
116  2B @0xb762f67f: 8b 08             mov ecx, [eax]           nextPC: 0xb762f681 jmpPc: 0x4c1008e00
117  3B @0xb762f681: 83 c0 04          add eax, 0x4             nextPC: 0xb762f684 jmpPc: 0x4c1008e00
118  2B @0xb762f684: 29 ca             sub edx, ecx             nextPC: 0xb762f686 jmpPc: 0x4c1008e00
119  6B @0xb762f686: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f68c jmpPc: 0x4c1008e00
120  1B @0xb762f68c: 4a                dec edx                  nextPC: 0xb762f68d jmpPc: 0x4c1008e00
121  2B @0xb762f68d: 73 0a             jae 0xc                  nextPC: 0xb762f68f jmpPc: 0x0000004a
122  2B @0xb762f68f: 31 ca             xor edx, ecx             nextPC: 0xb762f691
123  6B @0xb762f691: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f697
124  2B @0xb762f697: 74 98             jz 0xffffffffffffff9a    nextPC: 0xb762f699 jmpPc: 0x0000004a
125  3B @0xb762f699: 83 e8 04          sub eax, 0x4             nextPC: 0xb762f69c
126  6B @0xb762f69c: 81 e9 ff fe fe fe sub ecx, 0xfefefeff      nextPC: 0xb762f6a2
127  3B @0xb762f6a2: 80 f9 00          cmp cl, 0x0              nextPC: 0xb762f6a5
128  2B @0xb762f6a5: 74 0f             jz 0x11                  nextPC: 0xb762f6a7 jmpPc: 0x0000004a
129  1B @0xb762f6a7: 40                inc eax                  nextPC: 0xb762f6a8
130  2B @0xb762f6a8: 84 ed             test ch, ch              nextPC: 0xb762f6aa
131  2B @0xb762f6aa: 74 0a             jz 0xc                   nextPC: 0xb762f6ac jmpPc: 0x00000040
132  4B @0xb762f6b6: 2b 44 24 04       sub eax, [esp+0x4]       nextPC: 0xb762f6ba
133  1B @0xb762f6ba: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
134  6B @0xb7619a65: 8b 93 4c 08 00 00 mov edx, [ebx+0x84c]     nextPC: 0xb7619a6b jmpPc: 0x0196d750
135  4B @0xb7619a6b: 66 83 3a 00       cmp word [edx], 0x0      nextPC: 0xb7619a6f jmpPc: 0x0196d750
136  3B @0xb7619a6f: 89 55 f0          mov [ebp-0x10], edx      nextPC: 0xb7619a72 jmpPc: 0x0196d750
137  2B @0xb7619a72: 89 c7             mov edi, eax             nextPC: 0xb7619a74 jmpPc: 0x0196d750
138  2B @0xb7619a74: 89 d0             mov eax, edx             nextPC: 0xb7619a76 jmpPc: 0x0196d750
139  2B @0xb7619a76: 78 42             js 0x44                  nextPC: 0xb7619a78 jmpPc: 0x00000040
140  3B @0xb7619a78: 8b 72 48          mov esi, [edx+0x48]      nextPC: 0xb7619a7b jmpPc: 0x0196d750
141  7B @0xb7619a7b: 65 8b 0d 08 00 00 00 mov ecx, [gs:0x8]        nextPC: 0xb7619a82 jmpPc: 0x0196d750
142  3B @0xb7619a82: 89 4d ec          mov [ebp-0x14], ecx      nextPC: 0xb7619a85 jmpPc: 0x0196d750
143  3B @0xb7619a85: 39 4e 08          cmp [esi+0x8], ecx       nextPC: 0xb7619a88 jmpPc: 0x0196d750
144  2B @0xb7619a88: 74 2a             jz 0x2c                  nextPC: 0xb7619a8a jmpPc: 0x00000040
145  2B @0xb7619a8a: 31 c0             xor eax, eax             nextPC: 0xb7619a8c jmpPc: 0x4c1008e00
146  5B @0xb7619a8c: b9 01 00 00 00    mov ecx, 0x1             nextPC: 0xb7619a91 jmpPc: 0x4c1008e00
147  8B @0xb7619a91: 65 83 3d 0c 00 00 00 00 cmp dword [gs:0xc], 0x0  nextPC: 0xb7619a99 jmpPc: 0x4c1008e00
148  2B @0xb7619a99: 74 01             jz 0x3                   nextPC: 0xb7619a9b jmpPc: 0x00000040
149  3B @0xb7619a9c: 0f b1 0e          cmpxchg [esi], ecx       nextPC: 0xb7619a9f jmpPc: 0x40196d750
150  6B @0xb7619a9f: 0f 85 4c 01 00 00 jnz dword 0x152          nextPC: 0xb7619aa5 jmpPc: 0x2ef7b5c0
151  3B @0xb7619aa5: 8b 72 48          mov esi, [edx+0x48]      nextPC: 0xb7619aa8 jmpPc: 0x40196d750
152  3B @0xb7619aa8: 8b 45 ec          mov eax, [ebp-0x14]      nextPC: 0xb7619aab jmpPc: 0x40196d750
153  6B @0xb7619aab: 8b 93 4c 08 00 00 mov edx, [ebx+0x84c]     nextPC: 0xb7619ab1 jmpPc: 0x40196d750
154  3B @0xb7619ab1: 89 46 08          mov [esi+0x8], eax       nextPC: 0xb7619ab4 jmpPc: 0x40196d750
155  4B @0xb7619ab4: 83 46 04 01       add dword [esi+0x4], 0x1 nextPC: 0xb7619ab8 jmpPc: 0x40196d750
156  2B @0xb7619ab8: 89 d0             mov eax, edx             nextPC: 0xb7619aba jmpPc: 0x40196d750
157  4B @0xb7619aba: 0f b6 4a 46       movzx ecx, byte [edx+0x46] nextPC: 0xb7619abe jmpPc: 0x40196d750
158  2B @0xb7619abe: 84 c9             test cl, cl              nextPC: 0xb7619ac0 jmpPc: 0x40196d750
159  6B @0xb7619ac0: 0f 84 92 00 00 00 jz dword 0x98            nextPC: 0xb7619ac6 jmpPc: 0x2ef7b5c0
160  6B @0xb7619b58: 8b 83 f4 fe ff ff mov eax, [ebx+0xfffffef4] nextPC: 0xb7619b5e jmpPc: 0x40196d750
161  2B @0xb7619b5e: 85 c0             test eax, eax            nextPC: 0xb7619b60 jmpPc: 0x40196d750
162  2B @0xb7619b60: 74 1d             jz 0x1f                  nextPC: 0xb7619b62 jmpPc: 0x2ef7b5c0
163  3B @0xb7619b62: 8b 42 68          mov eax, [edx+0x68]      nextPC: 0xb7619b65 jmpPc: 0x40196d750
164  2B @0xb7619b65: 85 c0             test eax, eax            nextPC: 0xb7619b67 jmpPc: 0x40196d750
165  2B @0xb7619b67: 75 27             jnz 0x29                 nextPC: 0xb7619b69 jmpPc: 0x2ef7b5c0
166  3B @0xb7619b90: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7619b93 jmpPc: 0x4c1008e00
167  6B @0xb7619b93: 0f 85 4c ff ff ff jnz dword 0xffffffffffffff52 nextPC: 0xb7619b99 jmpPc: 0x2ef7b5c0
168  2B @0xb7619b99: eb d5             jmp 0xffffffffffffffd7   nextPC: 0xb7619b70 jmpPc: 0xfffffeff0006
169  6B @0xb7619b70: 8b 83 4c 08 00 00 mov eax, [ebx+0x84c]     nextPC: 0xb7619b76
170  4B @0xb7619b76: 0f b6 48 46       movzx ecx, byte [eax+0x46] nextPC: 0xb7619b7a
171  5B @0xb7619b7a: e9 47 ff ff ff    jmp 0xffffffffffffff4c   nextPC: 0xb7619ac6 jmpPc: 0x03308f01
172  3B @0xb7619ac6: 0f be c9          movsx ecx, cl            nextPC: 0xb7619ac9
173  7B @0xb7619ac9: 8b 94 08 94 00 00 00 mov edx, [eax+ecx+0x94]  nextPC: 0xb7619ad0
174  3B @0xb7619ad0: 8b 4d 08          mov ecx, [ebp+0x8]       nextPC: 0xb7619ad3
175  4B @0xb7619ad3: 89 7c 24 08       mov [esp+0x8], edi       nextPC: 0xb7619ad7
176  3B @0xb7619ad7: 89 04 24          mov [esp], eax           nextPC: 0xb7619ada
177  4B @0xb7619ada: 89 4c 24 04       mov [esp+0x4], ecx       nextPC: 0xb7619ade
178  3B @0xb7619ade: ff 52 1c          call dword near [edx+0x1c] nextPC: 0x00000000 jmpPc: 0x03308fe0
179  2B @0xb7619ae1: 39 f8             cmp eax, edi             nextPC: 0xb7619ae3 jmpPc: 0x00000002
180  2B @0xb7619ae3: 74 4b             jz 0x4d                  nextPC: 0xb7619ae5 jmpPc: 0x2ef7b5c0
181  6B @0xb7619b30: 8b 83 4c 08 00 00 mov eax, [ebx+0x84c]     nextPC: 0xb7619b36 jmpPc: 0x00000002
182  3B @0xb7619b36: 8b 50 14          mov edx, [eax+0x14]      nextPC: 0xb7619b39 jmpPc: 0x00000002
183  3B @0xb7619b39: 3b 50 18          cmp edx, [eax+0x18]      nextPC: 0xb7619b3c jmpPc: 0x00000002
184  2B @0xb7619b3c: 73 5d             jae 0x5f                 nextPC: 0xb7619b3e jmpPc: 0x2ef7b5c0
185  8B @0xb7619b9b: c7 44 24 04 0a 00 00 00 mov dword [esp+0x4], 0xa nextPC: 0xb7619ba3 jmpPc: 0x4c1008e00
186  3B @0xb7619ba3: 89 04 24          mov [esp], eax           nextPC: 0xb7619ba6 jmpPc: 0x4c1008e00
187  5B @0xb7619ba6: e8 f5 c5 00 00    call 0xc5fa              nextPC: 0xb76261a0
188  1B @0xb76261a0: 55                push ebp                 nextPC: 0xb76261a1 jmpPc: 0x00000010
189  2B @0xb76261a1: 89 e5             mov ebp, esp             nextPC: 0xb76261a3 jmpPc: 0x00000010
190  3B @0xb76261a3: 83 ec 10          sub esp, 0x10            nextPC: 0xb76261a6 jmpPc: 0x00000010
191  3B @0xb76261a6: 89 75 fc          mov [ebp-0x4], esi       nextPC: 0xb76261a9 jmpPc: 0x00000010
192  3B @0xb76261a9: 8b 75 08          mov esi, [ebp+0x8]       nextPC: 0xb76261ac jmpPc: 0x00000010
193  3B @0xb76261ac: 89 5d f8          mov [ebp-0x8], ebx       nextPC: 0xb76261af jmpPc: 0x00000010
194  5B @0xb76261af: e8 2b c9 fa ff    call 0xfffffffffffac930  nextPC: 0xb75d2adf
195  6B @0xb76261b4: 81 c3 40 8e 0d 00 add ebx, 0xd8e40         nextPC: 0xb76261ba jmpPc: 0x00000010
196  3B @0xb76261ba: 8b 56 68          mov edx, [esi+0x68]      nextPC: 0xb76261bd jmpPc: 0x00000010
197  2B @0xb76261bd: 85 d2             test edx, edx            nextPC: 0xb76261bf jmpPc: 0x00000010
198  2B @0xb76261bf: 75 11             jnz 0x13                 nextPC: 0xb76261c1 jmpPc: 0xb76261af
199  4B @0xb76261d2: 0f be 46 46       movsx eax, byte [esi+0x46] nextPC: 0xb76261d6 jmpPc: 0x00000010
200  3B @0xb76261d6: 8b 55 0c          mov edx, [ebp+0xc]       nextPC: 0xb76261d9 jmpPc: 0x00000010
201  7B @0xb76261d9: 8b 84 06 94 00 00 00 mov eax, [esi+eax+0x94]  nextPC: 0xb76261e0 jmpPc: 0x00000010
202  3B @0xb76261e0: 89 34 24          mov [esp], esi           nextPC: 0xb76261e3 jmpPc: 0x00000010
203  4B @0xb76261e3: 89 54 24 04       mov [esp+0x4], edx       nextPC: 0xb76261e7 jmpPc: 0x00000010
204  3B @0xb76261e7: ff 50 0c          call dword near [eax+0xc] nextPC: 0x00000000 jmpPc: 0x03308fe0
205  3B @0xb7623997: 3b 46 20          cmp eax, [esi+0x20]      nextPC: 0xb762399a
206  6B @0xb762399a: 0f 84 31 01 00 00 jz dword 0x137           nextPC: 0xb76239a0 jmpPc: 0xb76261af
207  2B @0xb76239a0: 88 10             mov [eax], dl            nextPC: 0xb76239a2
208  2B @0xb76239a2: 8b 0e             mov ecx, [esi]           nextPC: 0xb76239a4
209  3B @0xb76239a4: 83 c0 01          add eax, 0x1             nextPC: 0xb76239a7
210  3B @0xb76239a7: 89 46 14          mov [esi+0x14], eax      nextPC: 0xb76239aa
211  3B @0xb76239aa: f6 c1 02          test cl, 0x2             nextPC: 0xb76239ad
212  6B @0xb76239ad: 0f 85 ad 00 00 00 jnz dword 0xb3           nextPC: 0xb76239b3 jmpPc: 0xb76261af
213  3B @0xb76239b3: 83 fa 0a          cmp edx, 0xa             nextPC: 0xb76239b6
214  6B @0xb76239b6: 0f 84 94 00 00 00 jz dword 0x9a            nextPC: 0xb76239bc jmpPc: 0xb76261af
215  3B @0xb7623a50: 80 e5 02          and ch, 0x2              nextPC: 0xb7623a53 jmpPc: 0x0000001a
216  6B @0xb7623a53: 0f 84 63 ff ff ff jz dword 0xffffffffffffff69 nextPC: 0xb7623a59 jmpPc: 0xb76261af
217  7B @0xb7623a59: 8d b4 26 00 00 00 00 lea esi, [esi+0x0]       nextPC: 0xb7623a60 jmpPc: 0x0000001a
218  3B @0xb7623a60: 8b 4e 10          mov ecx, [esi+0x10]      nextPC: 0xb7623a63 jmpPc: 0x0000001a
219  3B @0xb7623a63: 89 55 f0          mov [ebp-0x10], edx      nextPC: 0xb7623a66 jmpPc: 0x0000001a
220  3B @0xb7623a66: 89 34 24          mov [esp], esi           nextPC: 0xb7623a69 jmpPc: 0x0000001a
221  2B @0xb7623a69: 29 c8             sub eax, ecx             nextPC: 0xb7623a6b jmpPc: 0x0000001a
222  4B @0xb7623a6b: 89 44 24 08       mov [esp+0x8], eax       nextPC: 0xb7623a6f jmpPc: 0x0000001a
223  4B @0xb7623a6f: 89 4c 24 04       mov [esp+0x4], ecx       nextPC: 0xb7623a73 jmpPc: 0x0000001a
224  5B @0xb7623a73: e8 b8 f4 ff ff    call 0xfffffffffffff4bd  nextPC: 0xb7622f30
225  3B @0xb7623a78: 8b 55 f0          mov edx, [ebp-0x10]      nextPC: 0xb7623a7b jmpPc: 0x4bfb75f2f
226  3B @0xb7623a7b: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7623a7e jmpPc: 0x4bfb75f2f
227  6B @0xb7623a7e: 0f 85 38 ff ff ff jnz dword 0xffffffffffffff3e nextPC: 0xb7623a84 jmpPc: 0x7fffbf9c1030
228  3B @0xb76239bc: 0f b6 c2          movzx eax, dl            nextPC: 0xb76239bf jmpPc: 0x400000000
229  3B @0xb76239bf: 8b 5d f4          mov ebx, [ebp-0xc]       nextPC: 0xb76239c2 jmpPc: 0x400000000
230  3B @0xb76239c2: 8b 75 f8          mov esi, [ebp-0x8]       nextPC: 0xb76239c5 jmpPc: 0x400000000
231  3B @0xb76239c5: 8b 7d fc          mov edi, [ebp-0x4]       nextPC: 0xb76239c8 jmpPc: 0x400000000
232  2B @0xb76239c8: 89 ec             mov esp, ebp             nextPC: 0xb76239ca jmpPc: 0x400000000
233  1B @0xb76239ca: 5d                pop ebp                  nextPC: 0xb76239cb jmpPc: 0x400000000
234  1B @0xb76239cb: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
235  3B @0xb76261ea: 8b 5d f8          mov ebx, [ebp-0x8]       nextPC: 0xb76261ed jmpPc: 0x0196d750
236  3B @0xb76261ed: 8b 75 fc          mov esi, [ebp-0x4]       nextPC: 0xb76261f0 jmpPc: 0x0196d750
237  2B @0xb76261f0: 89 ec             mov esp, ebp             nextPC: 0xb76261f2 jmpPc: 0x0196d750
238  1B @0xb76261f2: 5d                pop ebp                  nextPC: 0xb76261f3 jmpPc: 0x0196d750
239  1B @0xb76261f3: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
240  3B @0xb7619bab: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7619bae jmpPc: 0x0196d750
241  6B @0xb7619bae: 0f 84 31 ff ff ff jz dword 0xffffffffffffff37 nextPC: 0xb7619bb4 jmpPc: 0x2aaabdb1ef5d
242  2B @0xb7619bb4: eb 91             jmp 0xffffffffffffff93   nextPC: 0xb7619b47 jmpPc: 0x03ff0006
243  3B @0xb7619b47: 83 c7 01          add edi, 0x1             nextPC: 0xb7619b4a
244  5B @0xb7619b4a: b8 ff ff ff 7f    mov eax, 0x7fffffff      nextPC: 0xb7619b4f
245  3B @0xb7619b4f: 0f 48 f8          cmovs edi, eax           nextPC: 0xb7619b52
246  2B @0xb7619b52: eb 96             jmp 0xffffffffffffff98   nextPC: 0xb7619aea jmpPc: 0x03308f01
247  3B @0xb7619aea: 8b 4d f0          mov ecx, [ebp-0x10]      nextPC: 0xb7619aed
248  4B @0xb7619aed: 66 83 39 00       cmp word [ecx], 0x0      nextPC: 0xb7619af1
249  2B @0xb7619af1: 78 2b             js 0x2d                  nextPC: 0xb7619af3 jmpPc: 0x2aaabdb1ef5d
250  3B @0xb7619af3: 8b 51 48          mov edx, [ecx+0x48]      nextPC: 0xb7619af6
251  3B @0xb7619af6: 8b 42 04          mov eax, [edx+0x4]       nextPC: 0xb7619af9
252  3B @0xb7619af9: 83 e8 01          sub eax, 0x1             nextPC: 0xb7619afc
253  2B @0xb7619afc: 85 c0             test eax, eax            nextPC: 0xb7619afe
254  3B @0xb7619afe: 89 42 04          mov [edx+0x4], eax       nextPC: 0xb7619b01
255  2B @0xb7619b01: 75 1b             jnz 0x1d                 nextPC: 0xb7619b03 jmpPc: 0x2aaabdb1ef5d
256  7B @0xb7619b03: c7 42 08 00 00 00 00 mov dword [edx+0x8], 0x0 nextPC: 0xb7619b0a
257  8B @0xb7619b0a: 65 83 3d 0c 00 00 00 00 cmp dword [gs:0xc], 0x0  nextPC: 0xb7619b12
258  2B @0xb7619b12: 74 01             jz 0x3                   nextPC: 0xb7619b14 jmpPc: 0x2aaabdb1ef5d
259  3B @0xb7619b15: 83 2a 01          sub dword [edx], 0x1     nextPC: 0xb7619b18 jmpPc: 0x4c1008e00
260  6B @0xb7619b18: 0f 85 df 00 00 00 jnz dword 0xe5           nextPC: 0xb7619b1e jmpPc: 0x0001afc1
261  2B @0xb7619b1e: 89 f8             mov eax, edi             nextPC: 0xb7619b20 jmpPc: 0x4c1008e00
262  3B @0xb7619b20: 8b 5d f4          mov ebx, [ebp-0xc]       nextPC: 0xb7619b23 jmpPc: 0x4c1008e00
263  3B @0xb7619b23: 8b 75 f8          mov esi, [ebp-0x8]       nextPC: 0xb7619b26 jmpPc: 0x4c1008e00
264  3B @0xb7619b26: 8b 7d fc          mov edi, [ebp-0x4]       nextPC: 0xb7619b29 jmpPc: 0x4c1008e00
265  2B @0xb7619b29: 89 ec             mov esp, ebp             nextPC: 0xb7619b2b jmpPc: 0x4c1008e00
266  1B @0xb7619b2b: 5d                pop ebp                  nextPC: 0xb7619b2c jmpPc: 0x4c1008e00
267  1B @0xb7619b2c: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
268  6B @0x08049a23: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a29 jmpPc: 0x0196d750
269  4B @0x08049a29: 89 44 24 04       mov [esp+0x4], eax       nextPC: 0x08049a2d jmpPc: 0x0196d750
270  7B @0x08049a2d: c7 04 24 01 00 00 00 mov dword [esp], 0x1     nextPC: 0x08049a34 jmpPc: 0x0196d750
271  5B @0x08049a34: e8 80 ef ff ff    call 0xffffffffffffef85  nextPC: 0x080489b9
272  1B @0x080489b9: 55                push ebp                 nextPC: 0x080489ba jmpPc: 0x00000010
273  2B @0x080489ba: 89 e5             mov ebp, esp             nextPC: 0x080489bc jmpPc: 0x00000010
274  3B @0x080489bc: 83 ec 04          sub esp, 0x4             nextPC: 0x080489bf jmpPc: 0x00000010
275  3B @0x080489bf: 8b 45 0c          mov eax, [ebp+0xc]       nextPC: 0x080489c2 jmpPc: 0x00000010
276  3B @0x080489c2: 89 04 24          mov [esp], eax           nextPC: 0x080489c5 jmpPc: 0x00000010
277  5B @0x080489c5: e8 9a ff ff ff    call 0xffffffffffffff9f  nextPC: 0x08048964 jmpPc: 0x03308f01
278  3B @0x080489ca: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080489cd jmpPc: 0x00000010
279  3B @0x080489cd: 8b 55 0c          mov edx, [ebp+0xc]       nextPC: 0x080489d0 jmpPc: 0x00000010
280  1B @0x080489d0: 53                push ebx                 nextPC: 0x080489d1 jmpPc: 0x00000010
281  2B @0x080489d1: 89 d3             mov ebx, edx             nextPC: 0x080489d3 jmpPc: 0x00000010
282 10B @0x080489d3: 0f 3f 00 06 00 00 00 00 00 00disasm didn't do all insn bytes: 2/a nextPC: 0x080489dd jmpPc: 0x0196d750
283  1B @0x080489dd: 5b                pop ebx                  nextPC: 0x080489de jmpPc: 0x0196d750
284  1B @0x080489de: c9                leave                    nextPC: 0x080489df jmpPc: 0x0196d750
285  1B @0x080489df: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
659 [State 706] Killing state 706
659 [State 706] Terminating state 706 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11: SIGSEGV Core Invalid memory reference"
            status: 1'
659 [State 706] Switching from state 706 to state 0
Copied 34928 (count=1)
Deleting state 706 0x0x2ef7b5c0
659 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 705
>> fuzzInit: datum forking for value 706
>> fuzzInit: datum forking for value 706
659 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 706)
        (ReadLSB w32 0 v706_fuzz_symb_706)))
    state 707 with condition (Not (Eq false
         (Eq (w32 706)
             (ReadLSB w32 0 v706_fuzz_symb_706))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-706-8048a0e
Size=2 Low=0 splitIndex=1 high=1
659 [State 0] Switching from state 0 to state 707
Copied 34928 (count=1)
Finalizing TB execution 707
s2e_dummyMainFunction
tcg-llvm-tb-706-8048a0e
659 [State 707] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 706 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
  1  2B @0xbfb770d2: c5 00                              lds eax, [eax]           nextPC: 0xbfb770d4
  2  2B @0xbfb770d4: 00 00                              add [eax], al            nextPC: 0xbfb770d6
  3  2B @0xbfb770d6: 00 00                              add [eax], al            nextPC: 0xbfb770d8
  4  2B @0xbfb770d8: 00 00                              add [eax], al            nextPC: 0xbfb770da
  5  2B @0xbfb770da: 00 00                              add [eax], al            nextPC: 0xbfb770dc
  6  2B @0xbfb770dc: 00 00                              add [eax], al            nextPC: 0xbfb770de
  7  2B @0xbfb770de: 00 00                              add [eax], al            nextPC: 0xbfb770e0
  8  2B @0xbfb770e0: 00 00                              add [eax], al            nextPC: 0xbfb770e2
  9  2B @0xbfb770e2: 00 00                              add [eax], al            nextPC: 0xbfb770e4
 10  2B @0xbfb770e4: 00 00                              add [eax], al            nextPC: 0xbfb770e6
 11  2B @0xbfb770e6: 00 00                              add [eax], al            nextPC: 0xbfb770e8
 12  2B @0xbfb770e8: 00 00                              add [eax], al            nextPC: 0xbfb770ea
 13  2B @0xbfb770ea: 00 00                              add [eax], al            nextPC: 0xbfb770ec
 14  2B @0xbfb770ec: 00 00                              add [eax], al            nextPC: 0xbfb770ee
 15  2B @0xbfb770ee: 00 00                              add [eax], al            nextPC: 0xbfb770f0
 16  2B @0xbfb770f0: 00 00                              add [eax], al            nextPC: 0xbfb770f2
 17  2B @0xbfb770f2: 00 00                              add [eax], al            nextPC: 0xbfb770f4
 18  2B @0xbfb770f4: 00 00                              add [eax], al            nextPC: 0xbfb770f6
 19  2B @0xbfb770f6: 00 00                              add [eax], al            nextPC: 0xbfb770f8
 20  2B @0xbfb770f8: 00 00                              add [eax], al            nextPC: 0xbfb770fa
 21  2B @0xbfb770fa: 00 00                              add [eax], al            nextPC: 0xbfb770fc
 22  2B @0xbfb770fc: 00 00                              add [eax], al            nextPC: 0xbfb770fe
 23  2B @0xbfb770fe: 00 00                              add [eax], al            nextPC: 0xbfb77100
 24  2B @0xbfb77100: 00 00                              add [eax], al            nextPC: 0xbfb77102
 25  2B @0xbfb77102: 00 00                              add [eax], al            nextPC: 0xbfb77104
 26  2B @0xbfb77104: 00 00                              add [eax], al            nextPC: 0xbfb77106
 27  2B @0xbfb77106: 00 00                              add [eax], al            nextPC: 0xbfb77108
 28  2B @0xbfb77108: 00 00                              add [eax], al            nextPC: 0xbfb7710a
 29  2B @0xbfb7710a: 00 00                              add [eax], al            nextPC: 0xbfb7710c
 30  2B @0xbfb7710c: 00 00                              add [eax], al            nextPC: 0xbfb7710e
 31  2B @0xbfb7710e: 00 00                              add [eax], al            nextPC: 0xbfb77110
 32  2B @0xbfb77110: 00 00                              add [eax], al            nextPC: 0xbfb77112
 33  2B @0xbfb77112: 00 00                              add [eax], al            nextPC: 0xbfb77114
 34  2B @0xbfb77114: 00 00                              add [eax], al            nextPC: 0xbfb77116
 35  2B @0xbfb77116: 00 00                              add [eax], al            nextPC: 0xbfb77118
 36  2B @0xbfb77118: 00 00                              add [eax], al            nextPC: 0xbfb7711a
 37  2B @0xbfb7711a: 00 00                              add [eax], al            nextPC: 0xbfb7711c
 38  2B @0xbfb7711c: 00 00                              add [eax], al            nextPC: 0xbfb7711e
660 [State 707] @0x080499bf, left buffer range after 38 IoB insns; last IoB insn @0xbfb7711c, disasm in debug.
  1  2B @0xbfb7711c: 00 00                              add [eax], al            nextPC: 0xbfb7711e
660 [State 707] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
660 [State 707] Terminating state 707 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
660 [State 707] Switching from state 707 to state 0
Copied 34928 (count=1)
Deleting state 707 0x0x2ef7b5c0
660 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 706
>> fuzzInit: datum forking for value 707
>> fuzzInit: datum forking for value 707
660 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 707)
        (ReadLSB w32 0 v707_fuzz_symb_707)))
    state 708 with condition (Not (Eq false
         (Eq (w32 707)
             (ReadLSB w32 0 v707_fuzz_symb_707))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-707-8048a0e
Size=2 Low=0 splitIndex=1 high=1
660 [State 0] Switching from state 0 to state 708
Copied 34928 (count=1)
Finalizing TB execution 708
s2e_dummyMainFunction
tcg-llvm-tb-707-8048a0e
660 [State 708] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 707 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
661 [State 708] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d3: 00 00             add [eax], al           
661 [State 708] Terminating state 708 with message 'eliminated a state with an impossible first instruction'
661 [State 708] Switching from state 708 to state 0
Copied 34928 (count=1)
Deleting state 708 0x0x2ef7b5c0
661 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 707
>> fuzzInit: datum forking for value 708
>> fuzzInit: datum forking for value 708
661 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 708)
        (ReadLSB w32 0 v708_fuzz_symb_708)))
    state 709 with condition (Not (Eq false
         (Eq (w32 708)
             (ReadLSB w32 0 v708_fuzz_symb_708))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-708-8048a0e
Size=2 Low=0 splitIndex=1 high=1
661 [State 0] Switching from state 0 to state 709
Copied 34928 (count=1)
Finalizing TB execution 709
s2e_dummyMainFunction
tcg-llvm-tb-708-8048a0e
661 [State 709] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 708 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
661 [State 709] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d4: 00 00             add [eax], al           
661 [State 709] Terminating state 709 with message 'eliminated a state with an impossible first instruction'
661 [State 709] Switching from state 709 to state 0
Copied 34928 (count=1)
Deleting state 709 0x0x2ef7b5c0
Firing timer event
662 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 708
>> fuzzInit: datum forking for value 709
>> fuzzInit: datum forking for value 709
662 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 709)
        (ReadLSB w32 0 v709_fuzz_symb_709)))
    state 710 with condition (Not (Eq false
         (Eq (w32 709)
             (ReadLSB w32 0 v709_fuzz_symb_709))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-709-8048a0e
Size=2 Low=0 splitIndex=1 high=1
662 [State 0] Switching from state 0 to state 710
Copied 34928 (count=1)
Finalizing TB execution 710
s2e_dummyMainFunction
tcg-llvm-tb-709-8048a0e
662 [State 710] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 709 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
662 [State 710] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d5: 00 00             add [eax], al           
662 [State 710] Terminating state 710 with message 'eliminated a state with an impossible first instruction'
662 [State 710] Switching from state 710 to state 0
Copied 34928 (count=1)
Deleting state 710 0x0x2ef7b5c0
662 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 709
>> fuzzInit: datum forking for value 710
>> fuzzInit: datum forking for value 710
663 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 710)
        (ReadLSB w32 0 v710_fuzz_symb_710)))
    state 711 with condition (Not (Eq false
         (Eq (w32 710)
             (ReadLSB w32 0 v710_fuzz_symb_710))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-710-8048a0e
Size=2 Low=0 splitIndex=1 high=1
663 [State 0] Switching from state 0 to state 711
Copied 34928 (count=1)
Finalizing TB execution 711
s2e_dummyMainFunction
tcg-llvm-tb-710-8048a0e
Firing timer event
663 [State 711] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 710 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
663 [State 711] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d6: 00 00             add [eax], al           
663 [State 711] Terminating state 711 with message 'eliminated a state with an impossible first instruction'
663 [State 711] Switching from state 711 to state 0
Copied 34928 (count=1)
Deleting state 711 0x0x2ef7b5c0
663 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 710
>> fuzzInit: datum forking for value 711
>> fuzzInit: datum forking for value 711
664 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 711)
        (ReadLSB w32 0 v711_fuzz_symb_711)))
    state 712 with condition (Not (Eq false
         (Eq (w32 711)
             (ReadLSB w32 0 v711_fuzz_symb_711))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-711-8048a0e
Size=2 Low=0 splitIndex=1 high=1
664 [State 0] Switching from state 0 to state 712
Copied 34928 (count=1)
Finalizing TB execution 712
s2e_dummyMainFunction
tcg-llvm-tb-711-8048a0e
Firing timer event
664 [State 712] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 711 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
664 [State 712] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d7: 00 00             add [eax], al           
664 [State 712] Terminating state 712 with message 'eliminated a state with an impossible first instruction'
664 [State 712] Switching from state 712 to state 0
Copied 34928 (count=1)
Deleting state 712 0x0x2ef7b5c0
664 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 711
>> fuzzInit: datum forking for value 712
>> fuzzInit: datum forking for value 712
665 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 712)
        (ReadLSB w32 0 v712_fuzz_symb_712)))
    state 713 with condition (Not (Eq false
         (Eq (w32 712)
             (ReadLSB w32 0 v712_fuzz_symb_712))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-712-8048a0e
Size=2 Low=0 splitIndex=1 high=1
665 [State 0] Switching from state 0 to state 713
Copied 34928 (count=1)
Finalizing TB execution 713
s2e_dummyMainFunction
tcg-llvm-tb-712-8048a0e
665 [State 713] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 712 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
665 [State 713] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d8: 00 00             add [eax], al           
665 [State 713] Terminating state 713 with message 'eliminated a state with an impossible first instruction'
665 [State 713] Switching from state 713 to state 0
Copied 34928 (count=1)
Deleting state 713 0x0x2ef7b5c0
665 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 712
>> fuzzInit: datum forking for value 713
>> fuzzInit: datum forking for value 713
666 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 713)
        (ReadLSB w32 0 v713_fuzz_symb_713)))
    state 714 with condition (Not (Eq false
         (Eq (w32 713)
             (ReadLSB w32 0 v713_fuzz_symb_713))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-713-8048a0e
Size=2 Low=0 splitIndex=1 high=1
666 [State 0] Switching from state 0 to state 714
Copied 34928 (count=1)
Finalizing TB execution 714
s2e_dummyMainFunction
tcg-llvm-tb-713-8048a0e
666 [State 714] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 713 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
666 [State 714] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770d9: 00 00             add [eax], al           
666 [State 714] Terminating state 714 with message 'eliminated a state with an impossible first instruction'
666 [State 714] Switching from state 714 to state 0
Copied 34928 (count=1)
Deleting state 714 0x0x2ef7b5c0
Firing timer event
666 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 713
>> fuzzInit: datum forking for value 714
>> fuzzInit: datum forking for value 714
667 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 714)
        (ReadLSB w32 0 v714_fuzz_symb_714)))
    state 715 with condition (Not (Eq false
         (Eq (w32 714)
             (ReadLSB w32 0 v714_fuzz_symb_714))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-714-8048a0e
Size=2 Low=0 splitIndex=1 high=1
667 [State 0] Switching from state 0 to state 715
Copied 34928 (count=1)
Finalizing TB execution 715
s2e_dummyMainFunction
tcg-llvm-tb-714-8048a0e
667 [State 715] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 714 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
667 [State 715] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770da: 00 00             add [eax], al           
667 [State 715] Terminating state 715 with message 'eliminated a state with an impossible first instruction'
667 [State 715] Switching from state 715 to state 0
Copied 34928 (count=1)
Deleting state 715 0x0x2ef7b5c0
Firing timer event
667 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 714
>> fuzzInit: datum forking for value 715
>> fuzzInit: datum forking for value 715
668 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 715)
        (ReadLSB w32 0 v715_fuzz_symb_715)))
    state 716 with condition (Not (Eq false
         (Eq (w32 715)
             (ReadLSB w32 0 v715_fuzz_symb_715))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-715-8048a0e
Size=2 Low=0 splitIndex=1 high=1
668 [State 0] Switching from state 0 to state 716
Copied 34928 (count=1)
Finalizing TB execution 716
s2e_dummyMainFunction
tcg-llvm-tb-715-8048a0e
668 [State 716] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 715 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
668 [State 716] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770db: 00 00             add [eax], al           
668 [State 716] Terminating state 716 with message 'eliminated a state with an impossible first instruction'
668 [State 716] Switching from state 716 to state 0
Copied 34928 (count=1)
Deleting state 716 0x0x2f62ac50
668 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 715
>> fuzzInit: datum forking for value 716
>> fuzzInit: datum forking for value 716
668 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 716)
        (ReadLSB w32 0 v716_fuzz_symb_716)))
    state 717 with condition (Not (Eq false
         (Eq (w32 716)
             (ReadLSB w32 0 v716_fuzz_symb_716))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-716-8048a0e
Size=2 Low=0 splitIndex=1 high=1
668 [State 0] Switching from state 0 to state 717
Copied 34928 (count=1)
Finalizing TB execution 717
s2e_dummyMainFunction
tcg-llvm-tb-716-8048a0e
Firing timer event
669 [State 717] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 716 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
669 [State 717] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770dc: 00 00             add [eax], al           
669 [State 717] Terminating state 717 with message 'eliminated a state with an impossible first instruction'
669 [State 717] Switching from state 717 to state 0
Copied 34928 (count=1)
Deleting state 717 0x0x2f3b9c50
669 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 716
>> fuzzInit: datum forking for value 717
>> fuzzInit: datum forking for value 717
669 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 717)
        (ReadLSB w32 0 v717_fuzz_symb_717)))
    state 718 with condition (Not (Eq false
         (Eq (w32 717)
             (ReadLSB w32 0 v717_fuzz_symb_717))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-717-8048a0e
Size=2 Low=0 splitIndex=1 high=1
669 [State 0] Switching from state 0 to state 718
Copied 34928 (count=1)
Finalizing TB execution 718
s2e_dummyMainFunction
tcg-llvm-tb-717-8048a0e
669 [State 718] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 717 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
670 [State 718] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770dd: 00 00             add [eax], al           
670 [State 718] Terminating state 718 with message 'eliminated a state with an impossible first instruction'
670 [State 718] Switching from state 718 to state 0
Copied 34928 (count=1)
Deleting state 718 0x0x2f3b9c50
670 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 717
>> fuzzInit: datum forking for value 718
>> fuzzInit: datum forking for value 718
670 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 718)
        (ReadLSB w32 0 v718_fuzz_symb_718)))
    state 719 with condition (Not (Eq false
         (Eq (w32 718)
             (ReadLSB w32 0 v718_fuzz_symb_718))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-718-8048a0e
Size=2 Low=0 splitIndex=1 high=1
670 [State 0] Switching from state 0 to state 719
Copied 34928 (count=1)
Finalizing TB execution 719
s2e_dummyMainFunction
tcg-llvm-tb-718-8048a0e
670 [State 719] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 718 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
670 [State 719] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770de: 00 00             add [eax], al           
670 [State 719] Terminating state 719 with message 'eliminated a state with an impossible first instruction'
670 [State 719] Switching from state 719 to state 0
Copied 34928 (count=1)
Deleting state 719 0x0x2f515560
Firing timer event
670 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 718
>> fuzzInit: datum forking for value 719
>> fuzzInit: datum forking for value 719
671 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 719)
        (ReadLSB w32 0 v719_fuzz_symb_719)))
    state 720 with condition (Not (Eq false
         (Eq (w32 719)
             (ReadLSB w32 0 v719_fuzz_symb_719))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-719-8048a0e
Size=2 Low=0 splitIndex=1 high=1
671 [State 0] Switching from state 0 to state 720
Copied 34928 (count=1)
Finalizing TB execution 720
s2e_dummyMainFunction
tcg-llvm-tb-719-8048a0e
671 [State 720] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 719 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
671 [State 720] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770df: 00 00             add [eax], al           
671 [State 720] Terminating state 720 with message 'eliminated a state with an impossible first instruction'
671 [State 720] Switching from state 720 to state 0
Copied 34928 (count=1)
Deleting state 720 0x0x2f515560
Firing timer event
672 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 719
>> fuzzInit: datum forking for value 720
>> fuzzInit: datum forking for value 720
672 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 720)
        (ReadLSB w32 0 v720_fuzz_symb_720)))
    state 721 with condition (Not (Eq false
         (Eq (w32 720)
             (ReadLSB w32 0 v720_fuzz_symb_720))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-720-8048a0e
Size=2 Low=0 splitIndex=1 high=1
672 [State 0] Switching from state 0 to state 721
Copied 34928 (count=1)
Finalizing TB execution 721
s2e_dummyMainFunction
tcg-llvm-tb-720-8048a0e
672 [State 721] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 720 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
672 [State 721] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e0: 00 00             add [eax], al           
672 [State 721] Terminating state 721 with message 'eliminated a state with an impossible first instruction'
672 [State 721] Switching from state 721 to state 0
Copied 34928 (count=1)
Deleting state 721 0x0x2f515560
Firing timer event
673 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 720
>> fuzzInit: datum forking for value 721
>> fuzzInit: datum forking for value 721
673 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 721)
        (ReadLSB w32 0 v721_fuzz_symb_721)))
    state 722 with condition (Not (Eq false
         (Eq (w32 721)
             (ReadLSB w32 0 v721_fuzz_symb_721))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-721-8048a0e
Size=2 Low=0 splitIndex=1 high=1
673 [State 0] Switching from state 0 to state 722
Copied 34928 (count=1)
Finalizing TB execution 722
s2e_dummyMainFunction
tcg-llvm-tb-721-8048a0e
673 [State 722] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 721 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
673 [State 722] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e1: 00 00             add [eax], al           
673 [State 722] Terminating state 722 with message 'eliminated a state with an impossible first instruction'
673 [State 722] Switching from state 722 to state 0
Copied 34928 (count=1)
Deleting state 722 0x0x2f515560
Firing timer event
673 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 721
>> fuzzInit: datum forking for value 722
>> fuzzInit: datum forking for value 722
674 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 722)
        (ReadLSB w32 0 v722_fuzz_symb_722)))
    state 723 with condition (Not (Eq false
         (Eq (w32 722)
             (ReadLSB w32 0 v722_fuzz_symb_722))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-722-8048a0e
Size=2 Low=0 splitIndex=1 high=1
674 [State 0] Switching from state 0 to state 723
Copied 34928 (count=1)
Finalizing TB execution 723
s2e_dummyMainFunction
tcg-llvm-tb-722-8048a0e
674 [State 723] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 722 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
674 [State 723] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e2: 00 00             add [eax], al           
674 [State 723] Terminating state 723 with message 'eliminated a state with an impossible first instruction'
674 [State 723] Switching from state 723 to state 0
Copied 34928 (count=1)
Deleting state 723 0x0x2f969530
Firing timer event
674 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 722
>> fuzzInit: datum forking for value 723
>> fuzzInit: datum forking for value 723
675 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 723)
        (ReadLSB w32 0 v723_fuzz_symb_723)))
    state 724 with condition (Not (Eq false
         (Eq (w32 723)
             (ReadLSB w32 0 v723_fuzz_symb_723))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-723-8048a0e
Size=2 Low=0 splitIndex=1 high=1
675 [State 0] Switching from state 0 to state 724
Copied 34928 (count=1)
Finalizing TB execution 724
s2e_dummyMainFunction
tcg-llvm-tb-723-8048a0e
675 [State 724] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 723 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
675 [State 724] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e3: 00 00             add [eax], al           
675 [State 724] Terminating state 724 with message 'eliminated a state with an impossible first instruction'
675 [State 724] Switching from state 724 to state 0
Copied 34928 (count=1)
Deleting state 724 0x0x2f969530
675 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 723
>> fuzzInit: datum forking for value 724
>> fuzzInit: datum forking for value 724
676 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 724)
        (ReadLSB w32 0 v724_fuzz_symb_724)))
    state 725 with condition (Not (Eq false
         (Eq (w32 724)
             (ReadLSB w32 0 v724_fuzz_symb_724))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-724-8048a0e
Size=2 Low=0 splitIndex=1 high=1
676 [State 0] Switching from state 0 to state 725
Copied 34928 (count=1)
Finalizing TB execution 725
s2e_dummyMainFunction
tcg-llvm-tb-724-8048a0e
Firing timer event
676 [State 725] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 724 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
676 [State 725] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e4: 00 00             add [eax], al           
676 [State 725] Terminating state 725 with message 'eliminated a state with an impossible first instruction'
676 [State 725] Switching from state 725 to state 0
Copied 34928 (count=1)
Deleting state 725 0x0x2f969530
676 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 724
>> fuzzInit: datum forking for value 725
>> fuzzInit: datum forking for value 725
677 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 725)
        (ReadLSB w32 0 v725_fuzz_symb_725)))
    state 726 with condition (Not (Eq false
         (Eq (w32 725)
             (ReadLSB w32 0 v725_fuzz_symb_725))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-725-8048a0e
Size=2 Low=0 splitIndex=1 high=1
677 [State 0] Switching from state 0 to state 726
Copied 34928 (count=1)
Finalizing TB execution 726
s2e_dummyMainFunction
tcg-llvm-tb-725-8048a0e
677 [State 726] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 725 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
677 [State 726] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e5: 00 00             add [eax], al           
677 [State 726] Terminating state 726 with message 'eliminated a state with an impossible first instruction'
677 [State 726] Switching from state 726 to state 0
Copied 34928 (count=1)
Deleting state 726 0x0x2f969530
677 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 725
>> fuzzInit: datum forking for value 726
>> fuzzInit: datum forking for value 726
677 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 726)
        (ReadLSB w32 0 v726_fuzz_symb_726)))
    state 727 with condition (Not (Eq false
         (Eq (w32 726)
             (ReadLSB w32 0 v726_fuzz_symb_726))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-726-8048a0e
Size=2 Low=0 splitIndex=1 high=1
677 [State 0] Switching from state 0 to state 727
Copied 34928 (count=1)
Finalizing TB execution 727
s2e_dummyMainFunction
tcg-llvm-tb-726-8048a0e
678 [State 727] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 726 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
678 [State 727] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e6: 00 00             add [eax], al           
678 [State 727] Terminating state 727 with message 'eliminated a state with an impossible first instruction'
678 [State 727] Switching from state 727 to state 0
Copied 34928 (count=1)
Deleting state 727 0x0x2f969530
Firing timer event
678 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 726
>> fuzzInit: datum forking for value 727
>> fuzzInit: datum forking for value 727
678 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 727)
        (ReadLSB w32 0 v727_fuzz_symb_727)))
    state 728 with condition (Not (Eq false
         (Eq (w32 727)
             (ReadLSB w32 0 v727_fuzz_symb_727))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-727-8048a0e
Size=2 Low=0 splitIndex=1 high=1
678 [State 0] Switching from state 0 to state 728
Copied 34928 (count=1)
Finalizing TB execution 728
s2e_dummyMainFunction
tcg-llvm-tb-727-8048a0e
678 [State 728] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 727 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
679 [State 728] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e7: 00 00             add [eax], al           
679 [State 728] Terminating state 728 with message 'eliminated a state with an impossible first instruction'
679 [State 728] Switching from state 728 to state 0
Copied 34928 (count=1)
Deleting state 728 0x0x2f969530
679 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 727
>> fuzzInit: datum forking for value 728
>> fuzzInit: datum forking for value 728
679 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 728)
        (ReadLSB w32 0 v728_fuzz_symb_728)))
    state 729 with condition (Not (Eq false
         (Eq (w32 728)
             (ReadLSB w32 0 v728_fuzz_symb_728))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-728-8048a0e
Size=2 Low=0 splitIndex=1 high=1
679 [State 0] Switching from state 0 to state 729
Copied 34928 (count=1)
Finalizing TB execution 729
s2e_dummyMainFunction
tcg-llvm-tb-728-8048a0e
Firing timer event
679 [State 729] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 728 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
679 [State 729] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e8: 00 00             add [eax], al           
679 [State 729] Terminating state 729 with message 'eliminated a state with an impossible first instruction'
679 [State 729] Switching from state 729 to state 0
Copied 34928 (count=1)
Deleting state 729 0x0x2fb5f2e0
680 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 728
>> fuzzInit: datum forking for value 729
>> fuzzInit: datum forking for value 729
680 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 729)
        (ReadLSB w32 0 v729_fuzz_symb_729)))
    state 730 with condition (Not (Eq false
         (Eq (w32 729)
             (ReadLSB w32 0 v729_fuzz_symb_729))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-729-8048a0e
Size=2 Low=0 splitIndex=1 high=1
680 [State 0] Switching from state 0 to state 730
Copied 34928 (count=1)
Finalizing TB execution 730
s2e_dummyMainFunction
tcg-llvm-tb-729-8048a0e
Firing timer event
680 [State 730] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 729 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
680 [State 730] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770e9: 00 00             add [eax], al           
680 [State 730] Terminating state 730 with message 'eliminated a state with an impossible first instruction'
680 [State 730] Switching from state 730 to state 0
Copied 34928 (count=1)
Deleting state 730 0x0x2fb5f2e0
681 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 729
>> fuzzInit: datum forking for value 730
>> fuzzInit: datum forking for value 730
681 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 730)
        (ReadLSB w32 0 v730_fuzz_symb_730)))
    state 731 with condition (Not (Eq false
         (Eq (w32 730)
             (ReadLSB w32 0 v730_fuzz_symb_730))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-730-8048a0e
Size=2 Low=0 splitIndex=1 high=1
681 [State 0] Switching from state 0 to state 731
Copied 34928 (count=1)
Finalizing TB execution 731
s2e_dummyMainFunction
tcg-llvm-tb-730-8048a0e
681 [State 731] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 730 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
681 [State 731] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ea: 00 00             add [eax], al           
681 [State 731] Terminating state 731 with message 'eliminated a state with an impossible first instruction'
681 [State 731] Switching from state 731 to state 0
Copied 34928 (count=1)
Deleting state 731 0x0x2fb5f2e0
681 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 730
>> fuzzInit: datum forking for value 731
>> fuzzInit: datum forking for value 731
682 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 731)
        (ReadLSB w32 0 v731_fuzz_symb_731)))
    state 732 with condition (Not (Eq false
         (Eq (w32 731)
             (ReadLSB w32 0 v731_fuzz_symb_731))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-731-8048a0e
Size=2 Low=0 splitIndex=1 high=1
682 [State 0] Switching from state 0 to state 732
Copied 34928 (count=1)
Finalizing TB execution 732
s2e_dummyMainFunction
tcg-llvm-tb-731-8048a0e
682 [State 732] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 731 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
682 [State 732] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770eb: 00 00             add [eax], al           
682 [State 732] Terminating state 732 with message 'eliminated a state with an impossible first instruction'
682 [State 732] Switching from state 732 to state 0
Copied 34928 (count=1)
Deleting state 732 0x0x2fb5f2e0
Firing timer event
682 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 731
>> fuzzInit: datum forking for value 732
>> fuzzInit: datum forking for value 732
683 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 732)
        (ReadLSB w32 0 v732_fuzz_symb_732)))
    state 733 with condition (Not (Eq false
         (Eq (w32 732)
             (ReadLSB w32 0 v732_fuzz_symb_732))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-732-8048a0e
Size=2 Low=0 splitIndex=1 high=1
683 [State 0] Switching from state 0 to state 733
Copied 34928 (count=1)
Finalizing TB execution 733
s2e_dummyMainFunction
tcg-llvm-tb-732-8048a0e
683 [State 733] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 732 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
683 [State 733] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ec: 00 00             add [eax], al           
683 [State 733] Terminating state 733 with message 'eliminated a state with an impossible first instruction'
683 [State 733] Switching from state 733 to state 0
Copied 34928 (count=1)
Deleting state 733 0x0x2fb5f2e0
683 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 732
>> fuzzInit: datum forking for value 733
>> fuzzInit: datum forking for value 733
684 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 733)
        (ReadLSB w32 0 v733_fuzz_symb_733)))
    state 734 with condition (Not (Eq false
         (Eq (w32 733)
             (ReadLSB w32 0 v733_fuzz_symb_733))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-733-8048a0e
Size=2 Low=0 splitIndex=1 high=1
684 [State 0] Switching from state 0 to state 734
Copied 34928 (count=1)
Finalizing TB execution 734
s2e_dummyMainFunction
tcg-llvm-tb-733-8048a0e
Firing timer event
684 [State 734] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 733 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
684 [State 734] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ed: 00 00             add [eax], al           
684 [State 734] Terminating state 734 with message 'eliminated a state with an impossible first instruction'
684 [State 734] Switching from state 734 to state 0
Copied 34928 (count=1)
Deleting state 734 0x0x2fb5f2e0
684 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 733
>> fuzzInit: datum forking for value 734
>> fuzzInit: datum forking for value 734
685 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 734)
        (ReadLSB w32 0 v734_fuzz_symb_734)))
    state 735 with condition (Not (Eq false
         (Eq (w32 734)
             (ReadLSB w32 0 v734_fuzz_symb_734))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-734-8048a0e
Size=2 Low=0 splitIndex=1 high=1
685 [State 0] Switching from state 0 to state 735
Copied 34928 (count=1)
Finalizing TB execution 735
s2e_dummyMainFunction
tcg-llvm-tb-734-8048a0e
Firing timer event
685 [State 735] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 734 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
685 [State 735] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ee: 00 00             add [eax], al           
685 [State 735] Terminating state 735 with message 'eliminated a state with an impossible first instruction'
685 [State 735] Switching from state 735 to state 0
Copied 34928 (count=1)
Deleting state 735 0x0x2fb5f2e0
685 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 734
>> fuzzInit: datum forking for value 735
>> fuzzInit: datum forking for value 735
686 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 735)
        (ReadLSB w32 0 v735_fuzz_symb_735)))
    state 736 with condition (Not (Eq false
         (Eq (w32 735)
             (ReadLSB w32 0 v735_fuzz_symb_735))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-735-8048a0e
Size=2 Low=0 splitIndex=1 high=1
686 [State 0] Switching from state 0 to state 736
Copied 34928 (count=1)
Finalizing TB execution 736
s2e_dummyMainFunction
tcg-llvm-tb-735-8048a0e
Firing timer event
686 [State 736] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 735 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
686 [State 736] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ef: 00 00             add [eax], al           
686 [State 736] Terminating state 736 with message 'eliminated a state with an impossible first instruction'
686 [State 736] Switching from state 736 to state 0
Copied 34928 (count=1)
Deleting state 736 0x0x2fdbfb60
Firing timer event
687 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 735
>> fuzzInit: datum forking for value 736
>> fuzzInit: datum forking for value 736
687 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 736)
        (ReadLSB w32 0 v736_fuzz_symb_736)))
    state 737 with condition (Not (Eq false
         (Eq (w32 736)
             (ReadLSB w32 0 v736_fuzz_symb_736))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-736-8048a0e
Size=2 Low=0 splitIndex=1 high=1
687 [State 0] Switching from state 0 to state 737
Copied 34928 (count=1)
Finalizing TB execution 737
s2e_dummyMainFunction
tcg-llvm-tb-736-8048a0e
688 [State 737] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 736 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
688 [State 737] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f0: 00 00             add [eax], al           
688 [State 737] Terminating state 737 with message 'eliminated a state with an impossible first instruction'
688 [State 737] Switching from state 737 to state 0
Copied 34928 (count=1)
Deleting state 737 0x0x2fdbfb60
689 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 736
>> fuzzInit: datum forking for value 737
>> fuzzInit: datum forking for value 737
689 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 737)
        (ReadLSB w32 0 v737_fuzz_symb_737)))
    state 738 with condition (Not (Eq false
         (Eq (w32 737)
             (ReadLSB w32 0 v737_fuzz_symb_737))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-737-8048a0e
Size=2 Low=0 splitIndex=1 high=1
689 [State 0] Switching from state 0 to state 738
Copied 34928 (count=1)
Finalizing TB execution 738
s2e_dummyMainFunction
tcg-llvm-tb-737-8048a0e
Firing timer event
689 [State 738] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 737 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
690 [State 738] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f1: 00 00             add [eax], al           
690 [State 738] Terminating state 738 with message 'eliminated a state with an impossible first instruction'
690 [State 738] Switching from state 738 to state 0
Copied 34928 (count=1)
Deleting state 738 0x0x2fdbfb60
Firing timer event
690 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 737
>> fuzzInit: datum forking for value 738
>> fuzzInit: datum forking for value 738
>> fuzzInit: datum forking for value 738
691 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 738)
        (ReadLSB w32 0 v738_fuzz_symb_738)))
    state 739 with condition (Not (Eq false
         (Eq (w32 738)
             (ReadLSB w32 0 v738_fuzz_symb_738))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-738-8048a0e
Size=2 Low=0 splitIndex=1 high=1
691 [State 0] Switching from state 0 to state 739
Copied 34928 (count=1)
Finalizing TB execution 739
s2e_dummyMainFunction
tcg-llvm-tb-738-8048a0e
Firing timer event
691 [State 739] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 738 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
691 [State 739] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f2: 00 00             add [eax], al           
691 [State 739] Terminating state 739 with message 'eliminated a state with an impossible first instruction'
691 [State 739] Switching from state 739 to state 0
Copied 34928 (count=1)
Deleting state 739 0x0x2ffbc8c0
692 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 738
>> fuzzInit: datum forking for value 739
>> fuzzInit: datum forking for value 739
692 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 739)
        (ReadLSB w32 0 v739_fuzz_symb_739)))
    state 740 with condition (Not (Eq false
         (Eq (w32 739)
             (ReadLSB w32 0 v739_fuzz_symb_739))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-739-8048a0e
Size=2 Low=0 splitIndex=1 high=1
692 [State 0] Switching from state 0 to state 740
Copied 34928 (count=1)
Finalizing TB execution 740
s2e_dummyMainFunction
tcg-llvm-tb-739-8048a0e
Firing timer event
693 [State 740] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 739 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
693 [State 740] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f3: 00 00             add [eax], al           
693 [State 740] Terminating state 740 with message 'eliminated a state with an impossible first instruction'
693 [State 740] Switching from state 740 to state 0
Copied 34928 (count=1)
Deleting state 740 0x0x2ffbc8c0
693 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 739
>> fuzzInit: datum forking for value 740
>> fuzzInit: datum forking for value 740
693 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 740)
        (ReadLSB w32 0 v740_fuzz_symb_740)))
    state 741 with condition (Not (Eq false
         (Eq (w32 740)
             (ReadLSB w32 0 v740_fuzz_symb_740))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-740-8048a0e
Size=2 Low=0 splitIndex=1 high=1
693 [State 0] Switching from state 0 to state 741
Copied 34928 (count=1)
Finalizing TB execution 741
s2e_dummyMainFunction
tcg-llvm-tb-740-8048a0e
Firing timer event
694 [State 741] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 740 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
694 [State 741] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f4: 00 00             add [eax], al           
694 [State 741] Terminating state 741 with message 'eliminated a state with an impossible first instruction'
694 [State 741] Switching from state 741 to state 0
Copied 34928 (count=1)
Deleting state 741 0x0x3008ff50
694 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 740
>> fuzzInit: datum forking for value 741
>> fuzzInit: datum forking for value 741
694 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 741)
        (ReadLSB w32 0 v741_fuzz_symb_741)))
    state 742 with condition (Not (Eq false
         (Eq (w32 741)
             (ReadLSB w32 0 v741_fuzz_symb_741))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-741-8048a0e
Size=2 Low=0 splitIndex=1 high=1
694 [State 0] Switching from state 0 to state 742
Copied 34928 (count=1)
Finalizing TB execution 742
s2e_dummyMainFunction
tcg-llvm-tb-741-8048a0e
Firing timer event
694 [State 742] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 741 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
695 [State 742] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f5: 00 00             add [eax], al           
695 [State 742] Terminating state 742 with message 'eliminated a state with an impossible first instruction'
695 [State 742] Switching from state 742 to state 0
Copied 34928 (count=1)
Deleting state 742 0x0x3008ff50
695 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 741
>> fuzzInit: datum forking for value 742
>> fuzzInit: datum forking for value 742
695 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 742)
        (ReadLSB w32 0 v742_fuzz_symb_742)))
    state 743 with condition (Not (Eq false
         (Eq (w32 742)
             (ReadLSB w32 0 v742_fuzz_symb_742))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-742-8048a0e
Size=2 Low=0 splitIndex=1 high=1
695 [State 0] Switching from state 0 to state 743
Copied 34928 (count=1)
Finalizing TB execution 743
s2e_dummyMainFunction
tcg-llvm-tb-742-8048a0e
695 [State 743] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 742 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
696 [State 743] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f6: 00 00             add [eax], al           
696 [State 743] Terminating state 743 with message 'eliminated a state with an impossible first instruction'
696 [State 743] Switching from state 743 to state 0
Copied 34928 (count=1)
Deleting state 743 0x0x3008ff50
696 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 742
>> fuzzInit: datum forking for value 743
>> fuzzInit: datum forking for value 743
696 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 743)
        (ReadLSB w32 0 v743_fuzz_symb_743)))
    state 744 with condition (Not (Eq false
         (Eq (w32 743)
             (ReadLSB w32 0 v743_fuzz_symb_743))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-743-8048a0e
Size=2 Low=0 splitIndex=1 high=1
696 [State 0] Switching from state 0 to state 744
Copied 34928 (count=1)
Finalizing TB execution 744
s2e_dummyMainFunction
tcg-llvm-tb-743-8048a0e
Firing timer event
697 [State 744] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 743 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
697 [State 744] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f7: 00 00             add [eax], al           
697 [State 744] Terminating state 744 with message 'eliminated a state with an impossible first instruction'
697 [State 744] Switching from state 744 to state 0
Copied 34928 (count=1)
Deleting state 744 0x0x300bde60
697 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 743
>> fuzzInit: datum forking for value 744
>> fuzzInit: datum forking for value 744
697 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 744)
        (ReadLSB w32 0 v744_fuzz_symb_744)))
    state 745 with condition (Not (Eq false
         (Eq (w32 744)
             (ReadLSB w32 0 v744_fuzz_symb_744))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-744-8048a0e
Size=2 Low=0 splitIndex=1 high=1
697 [State 0] Switching from state 0 to state 745
Copied 34928 (count=1)
Finalizing TB execution 745
s2e_dummyMainFunction
tcg-llvm-tb-744-8048a0e
697 [State 745] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 744 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
697 [State 745] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f8: 00 00             add [eax], al           
697 [State 745] Terminating state 745 with message 'eliminated a state with an impossible first instruction'
697 [State 745] Switching from state 745 to state 0
Copied 34928 (count=1)
Deleting state 745 0x0x300bde60
Firing timer event
698 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 744
>> fuzzInit: datum forking for value 745
>> fuzzInit: datum forking for value 745
698 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 745)
        (ReadLSB w32 0 v745_fuzz_symb_745)))
    state 746 with condition (Not (Eq false
         (Eq (w32 745)
             (ReadLSB w32 0 v745_fuzz_symb_745))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-745-8048a0e
Size=2 Low=0 splitIndex=1 high=1
698 [State 0] Switching from state 0 to state 746
Copied 34928 (count=1)
Finalizing TB execution 746
s2e_dummyMainFunction
tcg-llvm-tb-745-8048a0e
698 [State 746] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 745 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
698 [State 746] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770f9: 00 00             add [eax], al           
698 [State 746] Terminating state 746 with message 'eliminated a state with an impossible first instruction'
698 [State 746] Switching from state 746 to state 0
Copied 34928 (count=1)
Deleting state 746 0x0x300bde60
699 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 745
>> fuzzInit: datum forking for value 746
>> fuzzInit: datum forking for value 746
699 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 746)
        (ReadLSB w32 0 v746_fuzz_symb_746)))
    state 747 with condition (Not (Eq false
         (Eq (w32 746)
             (ReadLSB w32 0 v746_fuzz_symb_746))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-746-8048a0e
Size=2 Low=0 splitIndex=1 high=1
699 [State 0] Switching from state 0 to state 747
Copied 34928 (count=1)
Finalizing TB execution 747
s2e_dummyMainFunction
tcg-llvm-tb-746-8048a0e
Firing timer event
699 [State 747] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 746 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
699 [State 747] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770fa: 00 00             add [eax], al           
699 [State 747] Terminating state 747 with message 'eliminated a state with an impossible first instruction'
699 [State 747] Switching from state 747 to state 0
Copied 34928 (count=1)
Deleting state 747 0x0x300bde60
699 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 746
>> fuzzInit: datum forking for value 747
>> fuzzInit: datum forking for value 747
700 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 747)
        (ReadLSB w32 0 v747_fuzz_symb_747)))
    state 748 with condition (Not (Eq false
         (Eq (w32 747)
             (ReadLSB w32 0 v747_fuzz_symb_747))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-747-8048a0e
Size=2 Low=0 splitIndex=1 high=1
700 [State 0] Switching from state 0 to state 748
Copied 34928 (count=1)
Finalizing TB execution 748
s2e_dummyMainFunction
tcg-llvm-tb-747-8048a0e
700 [State 748] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 747 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
700 [State 748] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770fb: 00 00             add [eax], al           
700 [State 748] Terminating state 748 with message 'eliminated a state with an impossible first instruction'
700 [State 748] Switching from state 748 to state 0
Copied 34928 (count=1)
Deleting state 748 0x0x300bde60
700 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 747
>> fuzzInit: datum forking for value 748
>> fuzzInit: datum forking for value 748
701 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 748)
        (ReadLSB w32 0 v748_fuzz_symb_748)))
    state 749 with condition (Not (Eq false
         (Eq (w32 748)
             (ReadLSB w32 0 v748_fuzz_symb_748))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-748-8048a0e
Size=2 Low=0 splitIndex=1 high=1
701 [State 0] Switching from state 0 to state 749
Copied 34928 (count=1)
Finalizing TB execution 749
s2e_dummyMainFunction
tcg-llvm-tb-748-8048a0e
701 [State 749] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 748 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
701 [State 749] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770fc: 00 00             add [eax], al           
701 [State 749] Terminating state 749 with message 'eliminated a state with an impossible first instruction'
701 [State 749] Switching from state 749 to state 0
Copied 34928 (count=1)
Deleting state 749 0x0x300bde60
701 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 748
>> fuzzInit: datum forking for value 749
>> fuzzInit: datum forking for value 749
702 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 749)
        (ReadLSB w32 0 v749_fuzz_symb_749)))
    state 750 with condition (Not (Eq false
         (Eq (w32 749)
             (ReadLSB w32 0 v749_fuzz_symb_749))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-749-8048a0e
Size=2 Low=0 splitIndex=1 high=1
702 [State 0] Switching from state 0 to state 750
Copied 34928 (count=1)
Finalizing TB execution 750
s2e_dummyMainFunction
tcg-llvm-tb-749-8048a0e
702 [State 750] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 749 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
702 [State 750] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770fd: 00 00             add [eax], al           
702 [State 750] Terminating state 750 with message 'eliminated a state with an impossible first instruction'
702 [State 750] Switching from state 750 to state 0
Copied 34928 (count=1)
Deleting state 750 0x0x300bde60
702 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 749
>> fuzzInit: datum forking for value 750
>> fuzzInit: datum forking for value 750
703 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 750)
        (ReadLSB w32 0 v750_fuzz_symb_750)))
    state 751 with condition (Not (Eq false
         (Eq (w32 750)
             (ReadLSB w32 0 v750_fuzz_symb_750))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-750-8048a0e
Size=2 Low=0 splitIndex=1 high=1
703 [State 0] Switching from state 0 to state 751
Copied 34928 (count=1)
Finalizing TB execution 751
s2e_dummyMainFunction
tcg-llvm-tb-750-8048a0e
703 [State 751] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 750 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
703 [State 751] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770fe: 00 00             add [eax], al           
703 [State 751] Terminating state 751 with message 'eliminated a state with an impossible first instruction'
703 [State 751] Switching from state 751 to state 0
Copied 34928 (count=1)
Deleting state 751 0x0x300bde60
703 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 750
>> fuzzInit: datum forking for value 751
>> fuzzInit: datum forking for value 751
704 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 751)
        (ReadLSB w32 0 v751_fuzz_symb_751)))
    state 752 with condition (Not (Eq false
         (Eq (w32 751)
             (ReadLSB w32 0 v751_fuzz_symb_751))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-751-8048a0e
Size=2 Low=0 splitIndex=1 high=1
704 [State 0] Switching from state 0 to state 752
Copied 34928 (count=1)
Finalizing TB execution 752
s2e_dummyMainFunction
tcg-llvm-tb-751-8048a0e
704 [State 752] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 751 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
704 [State 752] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb770ff: 00 00             add [eax], al           
704 [State 752] Terminating state 752 with message 'eliminated a state with an impossible first instruction'
704 [State 752] Switching from state 752 to state 0
Copied 34928 (count=1)
Deleting state 752 0x0x30487a50
Firing timer event
704 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 751
>> fuzzInit: datum forking for value 752
>> fuzzInit: datum forking for value 752
705 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 752)
        (ReadLSB w32 0 v752_fuzz_symb_752)))
    state 753 with condition (Not (Eq false
         (Eq (w32 752)
             (ReadLSB w32 0 v752_fuzz_symb_752))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-752-8048a0e
Size=2 Low=0 splitIndex=1 high=1
705 [State 0] Switching from state 0 to state 753
Copied 34928 (count=1)
Finalizing TB execution 753
s2e_dummyMainFunction
tcg-llvm-tb-752-8048a0e
705 [State 753] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 752 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
705 [State 753] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77100: 00 00             add [eax], al           
705 [State 753] Terminating state 753 with message 'eliminated a state with an impossible first instruction'
705 [State 753] Switching from state 753 to state 0
Copied 34928 (count=1)
Deleting state 753 0x0x30487a50
Firing timer event
705 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 752
>> fuzzInit: datum forking for value 753
>> fuzzInit: datum forking for value 753
706 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 753)
        (ReadLSB w32 0 v753_fuzz_symb_753)))
    state 754 with condition (Not (Eq false
         (Eq (w32 753)
             (ReadLSB w32 0 v753_fuzz_symb_753))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-753-8048a0e
Size=2 Low=0 splitIndex=1 high=1
706 [State 0] Switching from state 0 to state 754
Copied 34928 (count=1)
Finalizing TB execution 754
s2e_dummyMainFunction
tcg-llvm-tb-753-8048a0e
706 [State 754] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 753 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
706 [State 754] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77101: 00 00             add [eax], al           
706 [State 754] Terminating state 754 with message 'eliminated a state with an impossible first instruction'
706 [State 754] Switching from state 754 to state 0
Copied 34928 (count=1)
Deleting state 754 0x0x30487a50
Firing timer event
706 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 753
>> fuzzInit: datum forking for value 754
>> fuzzInit: datum forking for value 754
706 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 754)
        (ReadLSB w32 0 v754_fuzz_symb_754)))
    state 755 with condition (Not (Eq false
         (Eq (w32 754)
             (ReadLSB w32 0 v754_fuzz_symb_754))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-754-8048a0e
Size=2 Low=0 splitIndex=1 high=1
706 [State 0] Switching from state 0 to state 755
Copied 34928 (count=1)
Finalizing TB execution 755
s2e_dummyMainFunction
tcg-llvm-tb-754-8048a0e
707 [State 755] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 754 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
707 [State 755] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77102: 00 00             add [eax], al           
707 [State 755] Terminating state 755 with message 'eliminated a state with an impossible first instruction'
707 [State 755] Switching from state 755 to state 0
Copied 34928 (count=1)
Deleting state 755 0x0x30487a50
707 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 754
>> fuzzInit: datum forking for value 755
>> fuzzInit: datum forking for value 755
707 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 755)
        (ReadLSB w32 0 v755_fuzz_symb_755)))
    state 756 with condition (Not (Eq false
         (Eq (w32 755)
             (ReadLSB w32 0 v755_fuzz_symb_755))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-755-8048a0e
Size=2 Low=0 splitIndex=1 high=1
707 [State 0] Switching from state 0 to state 756
Copied 34928 (count=1)
Finalizing TB execution 756
s2e_dummyMainFunction
tcg-llvm-tb-755-8048a0e
Firing timer event
708 [State 756] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 755 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
708 [State 756] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77103: 00 00             add [eax], al           
708 [State 756] Terminating state 756 with message 'eliminated a state with an impossible first instruction'
708 [State 756] Switching from state 756 to state 0
Copied 34928 (count=1)
Deleting state 756 0x0x30487a50
708 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 755
>> fuzzInit: datum forking for value 756
>> fuzzInit: datum forking for value 756
708 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 756)
        (ReadLSB w32 0 v756_fuzz_symb_756)))
    state 757 with condition (Not (Eq false
         (Eq (w32 756)
             (ReadLSB w32 0 v756_fuzz_symb_756))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-756-8048a0e
Size=2 Low=0 splitIndex=1 high=1
708 [State 0] Switching from state 0 to state 757
Copied 34928 (count=1)
Finalizing TB execution 757
s2e_dummyMainFunction
tcg-llvm-tb-756-8048a0e
Firing timer event
709 [State 757] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 756 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
709 [State 757] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77104: 00 00             add [eax], al           
709 [State 757] Terminating state 757 with message 'eliminated a state with an impossible first instruction'
709 [State 757] Switching from state 757 to state 0
Copied 34928 (count=1)
Deleting state 757 0x0x30487a50
709 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 756
>> fuzzInit: datum forking for value 757
>> fuzzInit: datum forking for value 757
709 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 757)
        (ReadLSB w32 0 v757_fuzz_symb_757)))
    state 758 with condition (Not (Eq false
         (Eq (w32 757)
             (ReadLSB w32 0 v757_fuzz_symb_757))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-757-8048a0e
Size=2 Low=0 splitIndex=1 high=1
709 [State 0] Switching from state 0 to state 758
Copied 34928 (count=1)
Finalizing TB execution 758
s2e_dummyMainFunction
tcg-llvm-tb-757-8048a0e
709 [State 758] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 757 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
710 [State 758] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77105: 00 00             add [eax], al           
710 [State 758] Terminating state 758 with message 'eliminated a state with an impossible first instruction'
710 [State 758] Switching from state 758 to state 0
Copied 34928 (count=1)
Deleting state 758 0x0x3030faa0
710 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 757
>> fuzzInit: datum forking for value 758
>> fuzzInit: datum forking for value 758
710 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 758)
        (ReadLSB w32 0 v758_fuzz_symb_758)))
    state 759 with condition (Not (Eq false
         (Eq (w32 758)
             (ReadLSB w32 0 v758_fuzz_symb_758))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-758-8048a0e
Size=2 Low=0 splitIndex=1 high=1
710 [State 0] Switching from state 0 to state 759
Copied 34928 (count=1)
Finalizing TB execution 759
s2e_dummyMainFunction
tcg-llvm-tb-758-8048a0e
710 [State 759] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 758 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
711 [State 759] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77106: 00 00             add [eax], al           
711 [State 759] Terminating state 759 with message 'eliminated a state with an impossible first instruction'
711 [State 759] Switching from state 759 to state 0
Copied 34928 (count=1)
Deleting state 759 0x0x3030faa0
711 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 758
>> fuzzInit: datum forking for value 759
>> fuzzInit: datum forking for value 759
711 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 759)
        (ReadLSB w32 0 v759_fuzz_symb_759)))
    state 760 with condition (Not (Eq false
         (Eq (w32 759)
             (ReadLSB w32 0 v759_fuzz_symb_759))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-759-8048a0e
Size=2 Low=0 splitIndex=1 high=1
711 [State 0] Switching from state 0 to state 760
Copied 34928 (count=1)
Finalizing TB execution 760
s2e_dummyMainFunction
tcg-llvm-tb-759-8048a0e
711 [State 760] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 759 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
712 [State 760] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77107: 00 00             add [eax], al           
712 [State 760] Terminating state 760 with message 'eliminated a state with an impossible first instruction'
712 [State 760] Switching from state 760 to state 0
Copied 34928 (count=1)
Deleting state 760 0x0x3030faa0
Firing timer event
712 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 759
>> fuzzInit: datum forking for value 760
>> fuzzInit: datum forking for value 760
712 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 760)
        (ReadLSB w32 0 v760_fuzz_symb_760)))
    state 761 with condition (Not (Eq false
         (Eq (w32 760)
             (ReadLSB w32 0 v760_fuzz_symb_760))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-760-8048a0e
Size=2 Low=0 splitIndex=1 high=1
712 [State 0] Switching from state 0 to state 761
Copied 34928 (count=1)
Finalizing TB execution 761
s2e_dummyMainFunction
tcg-llvm-tb-760-8048a0e
712 [State 761] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 760 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
712 [State 761] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77108: 00 00             add [eax], al           
712 [State 761] Terminating state 761 with message 'eliminated a state with an impossible first instruction'
712 [State 761] Switching from state 761 to state 0
Copied 34928 (count=1)
Deleting state 761 0x0x3030faa0
Firing timer event
713 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 760
>> fuzzInit: datum forking for value 761
>> fuzzInit: datum forking for value 761
713 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 761)
        (ReadLSB w32 0 v761_fuzz_symb_761)))
    state 762 with condition (Not (Eq false
         (Eq (w32 761)
             (ReadLSB w32 0 v761_fuzz_symb_761))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-761-8048a0e
Size=2 Low=0 splitIndex=1 high=1
713 [State 0] Switching from state 0 to state 762
Copied 34928 (count=1)
Finalizing TB execution 762
s2e_dummyMainFunction
tcg-llvm-tb-761-8048a0e
713 [State 762] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 761 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
713 [State 762] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77109: 00 00             add [eax], al           
713 [State 762] Terminating state 762 with message 'eliminated a state with an impossible first instruction'
713 [State 762] Switching from state 762 to state 0
Copied 34928 (count=1)
Deleting state 762 0x0x3030faa0
713 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 761
>> fuzzInit: datum forking for value 762
>> fuzzInit: datum forking for value 762
714 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 762)
        (ReadLSB w32 0 v762_fuzz_symb_762)))
    state 763 with condition (Not (Eq false
         (Eq (w32 762)
             (ReadLSB w32 0 v762_fuzz_symb_762))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-762-8048a0e
Size=2 Low=0 splitIndex=1 high=1
714 [State 0] Switching from state 0 to state 763
Copied 34928 (count=1)
Finalizing TB execution 763
s2e_dummyMainFunction
tcg-llvm-tb-762-8048a0e
Firing timer event
714 [State 763] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 762 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
714 [State 763] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7710a: 00 00             add [eax], al           
714 [State 763] Terminating state 763 with message 'eliminated a state with an impossible first instruction'
714 [State 763] Switching from state 763 to state 0
Copied 34928 (count=1)
Deleting state 763 0x0x3030faa0
714 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 762
>> fuzzInit: datum forking for value 763
>> fuzzInit: datum forking for value 763
715 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 763)
        (ReadLSB w32 0 v763_fuzz_symb_763)))
    state 764 with condition (Not (Eq false
         (Eq (w32 763)
             (ReadLSB w32 0 v763_fuzz_symb_763))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-763-8048a0e
Size=2 Low=0 splitIndex=1 high=1
715 [State 0] Switching from state 0 to state 764
Copied 34928 (count=1)
Finalizing TB execution 764
s2e_dummyMainFunction
tcg-llvm-tb-763-8048a0e
Firing timer event
715 [State 764] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 763 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
715 [State 764] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7710b: 00 00             add [eax], al           
715 [State 764] Terminating state 764 with message 'eliminated a state with an impossible first instruction'
715 [State 764] Switching from state 764 to state 0
Copied 34928 (count=1)
Deleting state 764 0x0x3030faa0
715 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 763
>> fuzzInit: datum forking for value 764
>> fuzzInit: datum forking for value 764
716 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 764)
        (ReadLSB w32 0 v764_fuzz_symb_764)))
    state 765 with condition (Not (Eq false
         (Eq (w32 764)
             (ReadLSB w32 0 v764_fuzz_symb_764))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-764-8048a0e
Size=2 Low=0 splitIndex=1 high=1
716 [State 0] Switching from state 0 to state 765
Copied 34928 (count=1)
Finalizing TB execution 765
s2e_dummyMainFunction
tcg-llvm-tb-764-8048a0e
716 [State 765] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 764 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
716 [State 765] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7710c: 00 00             add [eax], al           
716 [State 765] Terminating state 765 with message 'eliminated a state with an impossible first instruction'
716 [State 765] Switching from state 765 to state 0
Copied 34928 (count=1)
Deleting state 765 0x0x3030faa0
716 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 764
>> fuzzInit: datum forking for value 765
>> fuzzInit: datum forking for value 765
717 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 765)
        (ReadLSB w32 0 v765_fuzz_symb_765)))
    state 766 with condition (Not (Eq false
         (Eq (w32 765)
             (ReadLSB w32 0 v765_fuzz_symb_765))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-765-8048a0e
Size=2 Low=0 splitIndex=1 high=1
717 [State 0] Switching from state 0 to state 766
Copied 34928 (count=1)
Finalizing TB execution 766
s2e_dummyMainFunction
tcg-llvm-tb-765-8048a0e
717 [State 766] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 765 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
717 [State 766] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7710d: 00 00             add [eax], al           
717 [State 766] Terminating state 766 with message 'eliminated a state with an impossible first instruction'
717 [State 766] Switching from state 766 to state 0
Copied 34928 (count=1)
Deleting state 766 0x0x3030faa0
717 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 765
>> fuzzInit: datum forking for value 766
>> fuzzInit: datum forking for value 766
718 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 766)
        (ReadLSB w32 0 v766_fuzz_symb_766)))
    state 767 with condition (Not (Eq false
         (Eq (w32 766)
             (ReadLSB w32 0 v766_fuzz_symb_766))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-766-8048a0e
Size=2 Low=0 splitIndex=1 high=1
718 [State 0] Switching from state 0 to state 767
Copied 34928 (count=1)
Finalizing TB execution 767
s2e_dummyMainFunction
tcg-llvm-tb-766-8048a0e
718 [State 767] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 766 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
718 [State 767] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7710e: 00 00             add [eax], al           
718 [State 767] Terminating state 767 with message 'eliminated a state with an impossible first instruction'
718 [State 767] Switching from state 767 to state 0
Copied 34928 (count=1)
Deleting state 767 0x0x3030faa0
Firing timer event
718 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 766
>> fuzzInit: datum forking for value 767
>> fuzzInit: datum forking for value 767
719 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 767)
        (ReadLSB w32 0 v767_fuzz_symb_767)))
    state 768 with condition (Not (Eq false
         (Eq (w32 767)
             (ReadLSB w32 0 v767_fuzz_symb_767))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-767-8048a0e
Size=2 Low=0 splitIndex=1 high=1
719 [State 0] Switching from state 0 to state 768
Copied 34928 (count=1)
Finalizing TB execution 768
s2e_dummyMainFunction
tcg-llvm-tb-767-8048a0e
719 [State 768] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 767 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
719 [State 768] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7710f: 00 00             add [eax], al           
719 [State 768] Terminating state 768 with message 'eliminated a state with an impossible first instruction'
719 [State 768] Switching from state 768 to state 0
Copied 34928 (count=1)
Deleting state 768 0x0x3030faa0
Firing timer event
719 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 767
>> fuzzInit: datum forking for value 768
>> fuzzInit: datum forking for value 768
719 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 768)
        (ReadLSB w32 0 v768_fuzz_symb_768)))
    state 769 with condition (Not (Eq false
         (Eq (w32 768)
             (ReadLSB w32 0 v768_fuzz_symb_768))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-768-8048a0e
Size=2 Low=0 splitIndex=1 high=1
719 [State 0] Switching from state 0 to state 769
Copied 34928 (count=1)
Finalizing TB execution 769
s2e_dummyMainFunction
tcg-llvm-tb-768-8048a0e
720 [State 769] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 768 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
720 [State 769] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77110: 00 00             add [eax], al           
720 [State 769] Terminating state 769 with message 'eliminated a state with an impossible first instruction'
720 [State 769] Switching from state 769 to state 0
Copied 34928 (count=1)
Deleting state 769 0x0x3030faa0
720 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 768
>> fuzzInit: datum forking for value 769
>> fuzzInit: datum forking for value 769
720 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 769)
        (ReadLSB w32 0 v769_fuzz_symb_769)))
    state 770 with condition (Not (Eq false
         (Eq (w32 769)
             (ReadLSB w32 0 v769_fuzz_symb_769))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-769-8048a0e
Size=2 Low=0 splitIndex=1 high=1
720 [State 0] Switching from state 0 to state 770
Copied 34928 (count=1)
Finalizing TB execution 770
s2e_dummyMainFunction
tcg-llvm-tb-769-8048a0e
Firing timer event
720 [State 770] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 769 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
721 [State 770] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77111: 00 00             add [eax], al           
721 [State 770] Terminating state 770 with message 'eliminated a state with an impossible first instruction'
721 [State 770] Switching from state 770 to state 0
Copied 34928 (count=1)
Deleting state 770 0x0x3030faa0
721 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 769
>> fuzzInit: datum forking for value 770
>> fuzzInit: datum forking for value 770
721 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 770)
        (ReadLSB w32 0 v770_fuzz_symb_770)))
    state 771 with condition (Not (Eq false
         (Eq (w32 770)
             (ReadLSB w32 0 v770_fuzz_symb_770))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-770-8048a0e
Size=2 Low=0 splitIndex=1 high=1
721 [State 0] Switching from state 0 to state 771
Copied 34928 (count=1)
Finalizing TB execution 771
s2e_dummyMainFunction
tcg-llvm-tb-770-8048a0e
Firing timer event
721 [State 771] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 770 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
722 [State 771] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77112: 00 00             add [eax], al           
722 [State 771] Terminating state 771 with message 'eliminated a state with an impossible first instruction'
722 [State 771] Switching from state 771 to state 0
Copied 34928 (count=1)
Deleting state 771 0x0x3030faa0
722 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 770
>> fuzzInit: datum forking for value 771
>> fuzzInit: datum forking for value 771
722 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 771)
        (ReadLSB w32 0 v771_fuzz_symb_771)))
    state 772 with condition (Not (Eq false
         (Eq (w32 771)
             (ReadLSB w32 0 v771_fuzz_symb_771))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-771-8048a0e
Size=2 Low=0 splitIndex=1 high=1
722 [State 0] Switching from state 0 to state 772
Copied 34928 (count=1)
Finalizing TB execution 772
s2e_dummyMainFunction
tcg-llvm-tb-771-8048a0e
722 [State 772] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 771 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
722 [State 772] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77113: 00 00             add [eax], al           
722 [State 772] Terminating state 772 with message 'eliminated a state with an impossible first instruction'
722 [State 772] Switching from state 772 to state 0
Copied 34928 (count=1)
Deleting state 772 0x0x3030faa0
Firing timer event
723 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 771
>> fuzzInit: datum forking for value 772
>> fuzzInit: datum forking for value 772
723 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 772)
        (ReadLSB w32 0 v772_fuzz_symb_772)))
    state 773 with condition (Not (Eq false
         (Eq (w32 772)
             (ReadLSB w32 0 v772_fuzz_symb_772))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-772-8048a0e
Size=2 Low=0 splitIndex=1 high=1
723 [State 0] Switching from state 0 to state 773
Copied 34928 (count=1)
Finalizing TB execution 773
s2e_dummyMainFunction
tcg-llvm-tb-772-8048a0e
723 [State 773] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 772 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
723 [State 773] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77114: 00 00             add [eax], al           
723 [State 773] Terminating state 773 with message 'eliminated a state with an impossible first instruction'
723 [State 773] Switching from state 773 to state 0
Copied 34928 (count=1)
Deleting state 773 0x0x3030faa0
Firing timer event
723 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 772
>> fuzzInit: datum forking for value 773
>> fuzzInit: datum forking for value 773
724 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 773)
        (ReadLSB w32 0 v773_fuzz_symb_773)))
    state 774 with condition (Not (Eq false
         (Eq (w32 773)
             (ReadLSB w32 0 v773_fuzz_symb_773))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-773-8048a0e
Size=2 Low=0 splitIndex=1 high=1
724 [State 0] Switching from state 0 to state 774
Copied 34928 (count=1)
Finalizing TB execution 774
s2e_dummyMainFunction
tcg-llvm-tb-773-8048a0e
724 [State 774] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 773 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
724 [State 774] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77115: 00 00             add [eax], al           
724 [State 774] Terminating state 774 with message 'eliminated a state with an impossible first instruction'
724 [State 774] Switching from state 774 to state 0
Copied 34928 (count=1)
Deleting state 774 0x0x3030faa0
724 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 773
>> fuzzInit: datum forking for value 774
>> fuzzInit: datum forking for value 774
725 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 774)
        (ReadLSB w32 0 v774_fuzz_symb_774)))
    state 775 with condition (Not (Eq false
         (Eq (w32 774)
             (ReadLSB w32 0 v774_fuzz_symb_774))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-774-8048a0e
Size=2 Low=0 splitIndex=1 high=1
725 [State 0] Switching from state 0 to state 775
Copied 34928 (count=1)
Finalizing TB execution 775
s2e_dummyMainFunction
tcg-llvm-tb-774-8048a0e
Firing timer event
725 [State 775] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 774 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
725 [State 775] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77116: 00 00             add [eax], al           
725 [State 775] Terminating state 775 with message 'eliminated a state with an impossible first instruction'
725 [State 775] Switching from state 775 to state 0
Copied 34928 (count=1)
Deleting state 775 0x0x3030faa0
725 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 774
>> fuzzInit: datum forking for value 775
>> fuzzInit: datum forking for value 775
726 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 775)
        (ReadLSB w32 0 v775_fuzz_symb_775)))
    state 776 with condition (Not (Eq false
         (Eq (w32 775)
             (ReadLSB w32 0 v775_fuzz_symb_775))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-775-8048a0e
Size=2 Low=0 splitIndex=1 high=1
726 [State 0] Switching from state 0 to state 776
Copied 34928 (count=1)
Finalizing TB execution 776
s2e_dummyMainFunction
tcg-llvm-tb-775-8048a0e
Firing timer event
726 [State 776] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 775 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
726 [State 776] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77117: 00 00             add [eax], al           
726 [State 776] Terminating state 776 with message 'eliminated a state with an impossible first instruction'
726 [State 776] Switching from state 776 to state 0
Copied 34928 (count=1)
Deleting state 776 0x0x3030faa0
726 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 775
>> fuzzInit: datum forking for value 776
>> fuzzInit: datum forking for value 776
727 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 776)
        (ReadLSB w32 0 v776_fuzz_symb_776)))
    state 777 with condition (Not (Eq false
         (Eq (w32 776)
             (ReadLSB w32 0 v776_fuzz_symb_776))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-776-8048a0e
Size=2 Low=0 splitIndex=1 high=1
727 [State 0] Switching from state 0 to state 777
Copied 34928 (count=1)
Finalizing TB execution 777
s2e_dummyMainFunction
tcg-llvm-tb-776-8048a0e
Firing timer event
727 [State 777] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 776 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
727 [State 777] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77118: 00 00             add [eax], al           
727 [State 777] Terminating state 777 with message 'eliminated a state with an impossible first instruction'
727 [State 777] Switching from state 777 to state 0
Copied 34928 (count=1)
Deleting state 777 0x0x3030faa0
727 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 776
>> fuzzInit: datum forking for value 777
>> fuzzInit: datum forking for value 777
728 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 777)
        (ReadLSB w32 0 v777_fuzz_symb_777)))
    state 778 with condition (Not (Eq false
         (Eq (w32 777)
             (ReadLSB w32 0 v777_fuzz_symb_777))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-777-8048a0e
Size=2 Low=0 splitIndex=1 high=1
728 [State 0] Switching from state 0 to state 778
Copied 34928 (count=1)
Finalizing TB execution 778
s2e_dummyMainFunction
tcg-llvm-tb-777-8048a0e
Firing timer event
728 [State 778] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 777 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
728 [State 778] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77119: 00 00             add [eax], al           
728 [State 778] Terminating state 778 with message 'eliminated a state with an impossible first instruction'
728 [State 778] Switching from state 778 to state 0
Copied 34928 (count=1)
Deleting state 778 0x0x3030faa0
728 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 777
>> fuzzInit: datum forking for value 778
>> fuzzInit: datum forking for value 778
729 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 778)
        (ReadLSB w32 0 v778_fuzz_symb_778)))
    state 779 with condition (Not (Eq false
         (Eq (w32 778)
             (ReadLSB w32 0 v778_fuzz_symb_778))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-778-8048a0e
Size=2 Low=0 splitIndex=1 high=1
729 [State 0] Switching from state 0 to state 779
Copied 34928 (count=1)
Finalizing TB execution 779
s2e_dummyMainFunction
tcg-llvm-tb-778-8048a0e
729 [State 779] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 778 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
729 [State 779] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7711a: 00 00             add [eax], al           
729 [State 779] Terminating state 779 with message 'eliminated a state with an impossible first instruction'
729 [State 779] Switching from state 779 to state 0
Copied 34928 (count=1)
Deleting state 779 0x0x3030faa0
729 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 778
>> fuzzInit: datum forking for value 779
>> fuzzInit: datum forking for value 779
730 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 779)
        (ReadLSB w32 0 v779_fuzz_symb_779)))
    state 780 with condition (Not (Eq false
         (Eq (w32 779)
             (ReadLSB w32 0 v779_fuzz_symb_779))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-779-8048a0e
Size=2 Low=0 splitIndex=1 high=1
730 [State 0] Switching from state 0 to state 780
Copied 34928 (count=1)
Finalizing TB execution 780
s2e_dummyMainFunction
tcg-llvm-tb-779-8048a0e
730 [State 780] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 779 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
730 [State 780] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7711b: 00 00             add [eax], al           
730 [State 780] Terminating state 780 with message 'eliminated a state with an impossible first instruction'
730 [State 780] Switching from state 780 to state 0
Copied 34928 (count=1)
Deleting state 780 0x0x3030faa0
Firing timer event
730 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 779
>> fuzzInit: datum forking for value 780
>> fuzzInit: datum forking for value 780
730 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 780)
        (ReadLSB w32 0 v780_fuzz_symb_780)))
    state 781 with condition (Not (Eq false
         (Eq (w32 780)
             (ReadLSB w32 0 v780_fuzz_symb_780))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-780-8048a0e
Size=2 Low=0 splitIndex=1 high=1
731 [State 0] Switching from state 0 to state 781
Copied 34928 (count=1)
Finalizing TB execution 781
s2e_dummyMainFunction
tcg-llvm-tb-780-8048a0e
731 [State 781] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 780 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
731 [State 781] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7711c: 00 00             add [eax], al           
731 [State 781] Terminating state 781 with message 'eliminated a state with an impossible first instruction'
731 [State 781] Switching from state 781 to state 0
Copied 34928 (count=1)
Deleting state 781 0x0x3030faa0
731 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 780
>> fuzzInit: datum forking for value 781
>> fuzzInit: datum forking for value 781
731 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 781)
        (ReadLSB w32 0 v781_fuzz_symb_781)))
    state 782 with condition (Not (Eq false
         (Eq (w32 781)
             (ReadLSB w32 0 v781_fuzz_symb_781))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-781-8048a0e
Size=2 Low=0 splitIndex=1 high=1
731 [State 0] Switching from state 0 to state 782
Copied 34928 (count=1)
Finalizing TB execution 782
s2e_dummyMainFunction
tcg-llvm-tb-781-8048a0e
Firing timer event
731 [State 782] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 781 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
732 [State 782] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7711d: 00 00             add [eax], al           
732 [State 782] Terminating state 782 with message 'eliminated a state with an impossible first instruction'
732 [State 782] Switching from state 782 to state 0
Copied 34928 (count=1)
Deleting state 782 0x0x3030faa0
732 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 781
>> fuzzInit: datum forking for value 782
>> fuzzInit: datum forking for value 782
732 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 782)
        (ReadLSB w32 0 v782_fuzz_symb_782)))
    state 783 with condition (Not (Eq false
         (Eq (w32 782)
             (ReadLSB w32 0 v782_fuzz_symb_782))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-782-8048a0e
Size=2 Low=0 splitIndex=1 high=1
732 [State 0] Switching from state 0 to state 783
Copied 34928 (count=1)
Finalizing TB execution 783
s2e_dummyMainFunction
tcg-llvm-tb-782-8048a0e
732 [State 783] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 782 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
732 [State 783] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7711e: 00 00             add [eax], al           
732 [State 783] Terminating state 783 with message 'eliminated a state with an impossible first instruction'
732 [State 783] Switching from state 783 to state 0
Copied 34928 (count=1)
Deleting state 783 0x0x3030faa0
733 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 782
>> fuzzInit: datum forking for value 783
>> fuzzInit: datum forking for value 783
733 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 783)
        (ReadLSB w32 0 v783_fuzz_symb_783)))
    state 784 with condition (Not (Eq false
         (Eq (w32 783)
             (ReadLSB w32 0 v783_fuzz_symb_783))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-783-8048a0e
Size=2 Low=0 splitIndex=1 high=1
733 [State 0] Switching from state 0 to state 784
Copied 34928 (count=1)
Finalizing TB execution 784
s2e_dummyMainFunction
tcg-llvm-tb-783-8048a0e
733 [State 784] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 783 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
733 [State 784] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7711f: 00 00             add [eax], al           
733 [State 784] Terminating state 784 with message 'eliminated a state with an impossible first instruction'
733 [State 784] Switching from state 784 to state 0
Copied 34928 (count=1)
Deleting state 784 0x0x3030faa0
734 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 783
>> fuzzInit: datum forking for value 784
>> fuzzInit: datum forking for value 784
734 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 784)
        (ReadLSB w32 0 v784_fuzz_symb_784)))
    state 785 with condition (Not (Eq false
         (Eq (w32 784)
             (ReadLSB w32 0 v784_fuzz_symb_784))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-784-8048a0e
Size=2 Low=0 splitIndex=1 high=1
734 [State 0] Switching from state 0 to state 785
Copied 34928 (count=1)
Finalizing TB execution 785
s2e_dummyMainFunction
tcg-llvm-tb-784-8048a0e
734 [State 785] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 784 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
734 [State 785] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77120: 00 00             add [eax], al           
734 [State 785] Terminating state 785 with message 'eliminated a state with an impossible first instruction'
734 [State 785] Switching from state 785 to state 0
Copied 34928 (count=1)
Deleting state 785 0x0x3030faa0
Firing timer event
735 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 784
>> fuzzInit: datum forking for value 785
>> fuzzInit: datum forking for value 785
735 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 785)
        (ReadLSB w32 0 v785_fuzz_symb_785)))
    state 786 with condition (Not (Eq false
         (Eq (w32 785)
             (ReadLSB w32 0 v785_fuzz_symb_785))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-785-8048a0e
Size=2 Low=0 splitIndex=1 high=1
735 [State 0] Switching from state 0 to state 786
Copied 34928 (count=1)
Finalizing TB execution 786
s2e_dummyMainFunction
tcg-llvm-tb-785-8048a0e
735 [State 786] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 785 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
735 [State 786] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77121: 00 00             add [eax], al           
735 [State 786] Terminating state 786 with message 'eliminated a state with an impossible first instruction'
735 [State 786] Switching from state 786 to state 0
Copied 34928 (count=1)
Deleting state 786 0x0x3030faa0
Firing timer event
735 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 785
>> fuzzInit: datum forking for value 786
>> fuzzInit: datum forking for value 786
736 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 786)
        (ReadLSB w32 0 v786_fuzz_symb_786)))
    state 787 with condition (Not (Eq false
         (Eq (w32 786)
             (ReadLSB w32 0 v786_fuzz_symb_786))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-786-8048a0e
Size=2 Low=0 splitIndex=1 high=1
736 [State 0] Switching from state 0 to state 787
Copied 34928 (count=1)
Finalizing TB execution 787
s2e_dummyMainFunction
tcg-llvm-tb-786-8048a0e
736 [State 787] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 786 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
736 [State 787] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77122: 00 00             add [eax], al           
736 [State 787] Terminating state 787 with message 'eliminated a state with an impossible first instruction'
736 [State 787] Switching from state 787 to state 0
Copied 34928 (count=1)
Deleting state 787 0x0x3030faa0
736 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 786
>> fuzzInit: datum forking for value 787
>> fuzzInit: datum forking for value 787
737 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 787)
        (ReadLSB w32 0 v787_fuzz_symb_787)))
    state 788 with condition (Not (Eq false
         (Eq (w32 787)
             (ReadLSB w32 0 v787_fuzz_symb_787))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-787-8048a0e
Size=2 Low=0 splitIndex=1 high=1
737 [State 0] Switching from state 0 to state 788
Copied 34928 (count=1)
Finalizing TB execution 788
s2e_dummyMainFunction
tcg-llvm-tb-787-8048a0e
Firing timer event
737 [State 788] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 787 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
737 [State 788] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77123: 00 00             add [eax], al           
737 [State 788] Terminating state 788 with message 'eliminated a state with an impossible first instruction'
737 [State 788] Switching from state 788 to state 0
Copied 34928 (count=1)
Deleting state 788 0x0x3030faa0
737 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 787
>> fuzzInit: datum forking for value 788
>> fuzzInit: datum forking for value 788
738 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 788)
        (ReadLSB w32 0 v788_fuzz_symb_788)))
    state 789 with condition (Not (Eq false
         (Eq (w32 788)
             (ReadLSB w32 0 v788_fuzz_symb_788))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-788-8048a0e
Size=2 Low=0 splitIndex=1 high=1
738 [State 0] Switching from state 0 to state 789
Copied 34928 (count=1)
Finalizing TB execution 789
s2e_dummyMainFunction
tcg-llvm-tb-788-8048a0e
Firing timer event
738 [State 789] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 788 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
738 [State 789] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77124: 00 00             add [eax], al           
738 [State 789] Terminating state 789 with message 'eliminated a state with an impossible first instruction'
738 [State 789] Switching from state 789 to state 0
Copied 34928 (count=1)
Deleting state 789 0x0x3030faa0
738 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 788
>> fuzzInit: datum forking for value 789
>> fuzzInit: datum forking for value 789
739 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 789)
        (ReadLSB w32 0 v789_fuzz_symb_789)))
    state 790 with condition (Not (Eq false
         (Eq (w32 789)
             (ReadLSB w32 0 v789_fuzz_symb_789))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-789-8048a0e
Size=2 Low=0 splitIndex=1 high=1
739 [State 0] Switching from state 0 to state 790
Copied 34928 (count=1)
Finalizing TB execution 790
s2e_dummyMainFunction
tcg-llvm-tb-789-8048a0e
Firing timer event
739 [State 790] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 789 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
739 [State 790] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77125: 00 00             add [eax], al           
739 [State 790] Terminating state 790 with message 'eliminated a state with an impossible first instruction'
739 [State 790] Switching from state 790 to state 0
Copied 34928 (count=1)
Deleting state 790 0x0x3030faa0
739 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 789
>> fuzzInit: datum forking for value 790
>> fuzzInit: datum forking for value 790
740 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 790)
        (ReadLSB w32 0 v790_fuzz_symb_790)))
    state 791 with condition (Not (Eq false
         (Eq (w32 790)
             (ReadLSB w32 0 v790_fuzz_symb_790))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-790-8048a0e
Size=2 Low=0 splitIndex=1 high=1
740 [State 0] Switching from state 0 to state 791
Copied 34928 (count=1)
Finalizing TB execution 791
s2e_dummyMainFunction
tcg-llvm-tb-790-8048a0e
740 [State 791] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 790 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
740 [State 791] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77126: 00 00             add [eax], al           
740 [State 791] Terminating state 791 with message 'eliminated a state with an impossible first instruction'
740 [State 791] Switching from state 791 to state 0
Copied 34928 (count=1)
Deleting state 791 0x0x3030faa0
Firing timer event
740 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 790
>> fuzzInit: datum forking for value 791
>> fuzzInit: datum forking for value 791
740 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 791)
        (ReadLSB w32 0 v791_fuzz_symb_791)))
    state 792 with condition (Not (Eq false
         (Eq (w32 791)
             (ReadLSB w32 0 v791_fuzz_symb_791))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-791-8048a0e
Size=2 Low=0 splitIndex=1 high=1
740 [State 0] Switching from state 0 to state 792
Copied 34928 (count=1)
Finalizing TB execution 792
s2e_dummyMainFunction
tcg-llvm-tb-791-8048a0e
741 [State 792] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 791 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
741 [State 792] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77127: 00 00             add [eax], al           
741 [State 792] Terminating state 792 with message 'eliminated a state with an impossible first instruction'
741 [State 792] Switching from state 792 to state 0
Copied 34928 (count=1)
Deleting state 792 0x0x3030faa0
Firing timer event
741 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 791
>> fuzzInit: datum forking for value 792
>> fuzzInit: datum forking for value 792
741 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 792)
        (ReadLSB w32 0 v792_fuzz_symb_792)))
    state 793 with condition (Not (Eq false
         (Eq (w32 792)
             (ReadLSB w32 0 v792_fuzz_symb_792))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-792-8048a0e
Size=2 Low=0 splitIndex=1 high=1
741 [State 0] Switching from state 0 to state 793
Copied 34928 (count=1)
Finalizing TB execution 793
s2e_dummyMainFunction
tcg-llvm-tb-792-8048a0e
742 [State 793] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 792 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
742 [State 793] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77128: 00 00             add [eax], al           
742 [State 793] Terminating state 793 with message 'eliminated a state with an impossible first instruction'
742 [State 793] Switching from state 793 to state 0
Copied 34928 (count=1)
Deleting state 793 0x0x3030faa0
742 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 792
>> fuzzInit: datum forking for value 793
>> fuzzInit: datum forking for value 793
742 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 793)
        (ReadLSB w32 0 v793_fuzz_symb_793)))
    state 794 with condition (Not (Eq false
         (Eq (w32 793)
             (ReadLSB w32 0 v793_fuzz_symb_793))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-793-8048a0e
Size=2 Low=0 splitIndex=1 high=1
742 [State 0] Switching from state 0 to state 794
Copied 34928 (count=1)
Finalizing TB execution 794
s2e_dummyMainFunction
tcg-llvm-tb-793-8048a0e
Firing timer event
742 [State 794] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 793 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
743 [State 794] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77129: 00 00             add [eax], al           
743 [State 794] Terminating state 794 with message 'eliminated a state with an impossible first instruction'
743 [State 794] Switching from state 794 to state 0
Copied 34928 (count=1)
Deleting state 794 0x0x3030faa0
743 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 793
>> fuzzInit: datum forking for value 794
>> fuzzInit: datum forking for value 794
>> fuzzInit: datum forking for value 794
743 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 794)
        (ReadLSB w32 0 v794_fuzz_symb_794)))
    state 795 with condition (Not (Eq false
         (Eq (w32 794)
             (ReadLSB w32 0 v794_fuzz_symb_794))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-794-8048a0e
Size=2 Low=0 splitIndex=1 high=1
743 [State 0] Switching from state 0 to state 795
Copied 34928 (count=1)
Finalizing TB execution 795
s2e_dummyMainFunction
tcg-llvm-tb-794-8048a0e
743 [State 795] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 794 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
744 [State 795] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7712a: 00 00             add [eax], al           
744 [State 795] Terminating state 795 with message 'eliminated a state with an impossible first instruction'
744 [State 795] Switching from state 795 to state 0
Copied 34928 (count=1)
Deleting state 795 0x0x30d30440
744 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 794
>> fuzzInit: datum forking for value 795
>> fuzzInit: datum forking for value 795
744 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 795)
        (ReadLSB w32 0 v795_fuzz_symb_795)))
    state 796 with condition (Not (Eq false
         (Eq (w32 795)
             (ReadLSB w32 0 v795_fuzz_symb_795))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-795-8048a0e
Size=2 Low=0 splitIndex=1 high=1
744 [State 0] Switching from state 0 to state 796
Copied 34928 (count=1)
Finalizing TB execution 796
s2e_dummyMainFunction
tcg-llvm-tb-795-8048a0e
Firing timer event
744 [State 796] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 795 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
745 [State 796] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7712b: 00 00             add [eax], al           
745 [State 796] Terminating state 796 with message 'eliminated a state with an impossible first instruction'
745 [State 796] Switching from state 796 to state 0
Copied 34928 (count=1)
Deleting state 796 0x0x30d30440
745 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 795
>> fuzzInit: datum forking for value 796
>> fuzzInit: datum forking for value 796
745 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 796)
        (ReadLSB w32 0 v796_fuzz_symb_796)))
    state 797 with condition (Not (Eq false
         (Eq (w32 796)
             (ReadLSB w32 0 v796_fuzz_symb_796))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-796-8048a0e
Size=2 Low=0 splitIndex=1 high=1
745 [State 0] Switching from state 0 to state 797
Copied 34928 (count=1)
Finalizing TB execution 797
s2e_dummyMainFunction
tcg-llvm-tb-796-8048a0e
Firing timer event
746 [State 797] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 796 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
746 [State 797] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7712c: 00 00             add [eax], al           
746 [State 797] Terminating state 797 with message 'eliminated a state with an impossible first instruction'
746 [State 797] Switching from state 797 to state 0
Copied 34928 (count=1)
Deleting state 797 0x0x30d30440
746 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 796
>> fuzzInit: datum forking for value 797
>> fuzzInit: datum forking for value 797
746 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 797)
        (ReadLSB w32 0 v797_fuzz_symb_797)))
    state 798 with condition (Not (Eq false
         (Eq (w32 797)
             (ReadLSB w32 0 v797_fuzz_symb_797))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-797-8048a0e
Size=2 Low=0 splitIndex=1 high=1
746 [State 0] Switching from state 0 to state 798
Copied 34928 (count=1)
Finalizing TB execution 798
s2e_dummyMainFunction
tcg-llvm-tb-797-8048a0e
Firing timer event
747 [State 798] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 797 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
747 [State 798] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7712d: 00 00             add [eax], al           
747 [State 798] Terminating state 798 with message 'eliminated a state with an impossible first instruction'
747 [State 798] Switching from state 798 to state 0
Copied 34928 (count=1)
Deleting state 798 0x0x30d30440
747 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 797
>> fuzzInit: datum forking for value 798
>> fuzzInit: datum forking for value 798
747 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 798)
        (ReadLSB w32 0 v798_fuzz_symb_798)))
    state 799 with condition (Not (Eq false
         (Eq (w32 798)
             (ReadLSB w32 0 v798_fuzz_symb_798))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-798-8048a0e
Size=2 Low=0 splitIndex=1 high=1
747 [State 0] Switching from state 0 to state 799
Copied 34928 (count=1)
Finalizing TB execution 799
s2e_dummyMainFunction
tcg-llvm-tb-798-8048a0e
Firing timer event
747 [State 799] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 798 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
748 [State 799] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7712e: 00 00             add [eax], al           
748 [State 799] Terminating state 799 with message 'eliminated a state with an impossible first instruction'
748 [State 799] Switching from state 799 to state 0
Copied 34928 (count=1)
Deleting state 799 0x0x30d30440
748 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 798
>> fuzzInit: datum forking for value 799
>> fuzzInit: datum forking for value 799
748 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 799)
        (ReadLSB w32 0 v799_fuzz_symb_799)))
    state 800 with condition (Not (Eq false
         (Eq (w32 799)
             (ReadLSB w32 0 v799_fuzz_symb_799))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-799-8048a0e
Size=2 Low=0 splitIndex=1 high=1
748 [State 0] Switching from state 0 to state 800
Copied 34928 (count=1)
Finalizing TB execution 800
s2e_dummyMainFunction
tcg-llvm-tb-799-8048a0e
748 [State 800] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 799 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
749 [State 800] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7712f: 00 00             add [eax], al           
749 [State 800] Terminating state 800 with message 'eliminated a state with an impossible first instruction'
749 [State 800] Switching from state 800 to state 0
Copied 34928 (count=1)
Deleting state 800 0x0x30d30440
749 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 799
>> fuzzInit: datum forking for value 800
>> fuzzInit: datum forking for value 800
749 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 800)
        (ReadLSB w32 0 v800_fuzz_symb_800)))
    state 801 with condition (Not (Eq false
         (Eq (w32 800)
             (ReadLSB w32 0 v800_fuzz_symb_800))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-800-8048a0e
Size=2 Low=0 splitIndex=1 high=1
749 [State 0] Switching from state 0 to state 801
Copied 34928 (count=1)
Finalizing TB execution 801
s2e_dummyMainFunction
tcg-llvm-tb-800-8048a0e
749 [State 801] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 800 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
750 [State 801] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77130: 00 00             add [eax], al           
750 [State 801] Terminating state 801 with message 'eliminated a state with an impossible first instruction'
750 [State 801] Switching from state 801 to state 0
Copied 34928 (count=1)
Deleting state 801 0x0x31079860
750 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 800
>> fuzzInit: datum forking for value 801
>> fuzzInit: datum forking for value 801
750 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 801)
        (ReadLSB w32 0 v801_fuzz_symb_801)))
    state 802 with condition (Not (Eq false
         (Eq (w32 801)
             (ReadLSB w32 0 v801_fuzz_symb_801))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-801-8048a0e
Size=2 Low=0 splitIndex=1 high=1
750 [State 0] Switching from state 0 to state 802
Copied 34928 (count=1)
Finalizing TB execution 802
s2e_dummyMainFunction
tcg-llvm-tb-801-8048a0e
750 [State 802] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 801 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
750 [State 802] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77131: 00 00             add [eax], al           
750 [State 802] Terminating state 802 with message 'eliminated a state with an impossible first instruction'
750 [State 802] Switching from state 802 to state 0
Copied 34928 (count=1)
Deleting state 802 0x0x31079860
Firing timer event
751 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 801
>> fuzzInit: datum forking for value 802
>> fuzzInit: datum forking for value 802
751 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 802)
        (ReadLSB w32 0 v802_fuzz_symb_802)))
    state 803 with condition (Not (Eq false
         (Eq (w32 802)
             (ReadLSB w32 0 v802_fuzz_symb_802))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-802-8048a0e
Size=2 Low=0 splitIndex=1 high=1
751 [State 0] Switching from state 0 to state 803
Copied 34928 (count=1)
Finalizing TB execution 803
s2e_dummyMainFunction
tcg-llvm-tb-802-8048a0e
751 [State 803] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 802 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
751 [State 803] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77132: 00 00             add [eax], al           
751 [State 803] Terminating state 803 with message 'eliminated a state with an impossible first instruction'
751 [State 803] Switching from state 803 to state 0
Copied 34928 (count=1)
Deleting state 803 0x0x30d30440
751 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 802
>> fuzzInit: datum forking for value 803
>> fuzzInit: datum forking for value 803
752 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 803)
        (ReadLSB w32 0 v803_fuzz_symb_803)))
    state 804 with condition (Not (Eq false
         (Eq (w32 803)
             (ReadLSB w32 0 v803_fuzz_symb_803))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-803-8048a0e
Size=2 Low=0 splitIndex=1 high=1
752 [State 0] Switching from state 0 to state 804
Copied 34928 (count=1)
Finalizing TB execution 804
s2e_dummyMainFunction
tcg-llvm-tb-803-8048a0e
Firing timer event
752 [State 804] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 803 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
752 [State 804] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77133: 00 00             add [eax], al           
752 [State 804] Terminating state 804 with message 'eliminated a state with an impossible first instruction'
752 [State 804] Switching from state 804 to state 0
Copied 34928 (count=1)
Deleting state 804 0x0x30d30440
752 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 803
>> fuzzInit: datum forking for value 804
>> fuzzInit: datum forking for value 804
753 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 804)
        (ReadLSB w32 0 v804_fuzz_symb_804)))
    state 805 with condition (Not (Eq false
         (Eq (w32 804)
             (ReadLSB w32 0 v804_fuzz_symb_804))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-804-8048a0e
Size=2 Low=0 splitIndex=1 high=1
753 [State 0] Switching from state 0 to state 805
Copied 34928 (count=1)
Finalizing TB execution 805
s2e_dummyMainFunction
tcg-llvm-tb-804-8048a0e
Firing timer event
753 [State 805] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 804 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
753 [State 805] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77134: 00 00             add [eax], al           
753 [State 805] Terminating state 805 with message 'eliminated a state with an impossible first instruction'
753 [State 805] Switching from state 805 to state 0
Copied 34928 (count=1)
Deleting state 805 0x0x30d30440
753 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 804
>> fuzzInit: datum forking for value 805
>> fuzzInit: datum forking for value 805
754 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 805)
        (ReadLSB w32 0 v805_fuzz_symb_805)))
    state 806 with condition (Not (Eq false
         (Eq (w32 805)
             (ReadLSB w32 0 v805_fuzz_symb_805))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-805-8048a0e
Size=2 Low=0 splitIndex=1 high=1
754 [State 0] Switching from state 0 to state 806
Copied 34928 (count=1)
Finalizing TB execution 806
s2e_dummyMainFunction
tcg-llvm-tb-805-8048a0e
754 [State 806] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 805 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
754 [State 806] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77135: 00 00             add [eax], al           
754 [State 806] Terminating state 806 with message 'eliminated a state with an impossible first instruction'
754 [State 806] Switching from state 806 to state 0
Copied 34928 (count=1)
Deleting state 806 0x0x31276b30
754 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 805
>> fuzzInit: datum forking for value 806
>> fuzzInit: datum forking for value 806
755 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 806)
        (ReadLSB w32 0 v806_fuzz_symb_806)))
    state 807 with condition (Not (Eq false
         (Eq (w32 806)
             (ReadLSB w32 0 v806_fuzz_symb_806))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-806-8048a0e
Size=2 Low=0 splitIndex=1 high=1
755 [State 0] Switching from state 0 to state 807
Copied 34928 (count=1)
Finalizing TB execution 807
s2e_dummyMainFunction
tcg-llvm-tb-806-8048a0e
755 [State 807] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 806 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
755 [State 807] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77136: 00 00             add [eax], al           
755 [State 807] Terminating state 807 with message 'eliminated a state with an impossible first instruction'
755 [State 807] Switching from state 807 to state 0
Copied 34928 (count=1)
Deleting state 807 0x0x31276b30
755 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 806
>> fuzzInit: datum forking for value 807
>> fuzzInit: datum forking for value 807
756 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 807)
        (ReadLSB w32 0 v807_fuzz_symb_807)))
    state 808 with condition (Not (Eq false
         (Eq (w32 807)
             (ReadLSB w32 0 v807_fuzz_symb_807))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-807-8048a0e
Size=2 Low=0 splitIndex=1 high=1
756 [State 0] Switching from state 0 to state 808
Copied 34928 (count=1)
Finalizing TB execution 808
s2e_dummyMainFunction
tcg-llvm-tb-807-8048a0e
756 [State 808] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 807 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
756 [State 808] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77137: 00 00             add [eax], al           
756 [State 808] Terminating state 808 with message 'eliminated a state with an impossible first instruction'
756 [State 808] Switching from state 808 to state 0
Copied 34928 (count=1)
Deleting state 808 0x0x31276b30
Firing timer event
756 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 807
>> fuzzInit: datum forking for value 808
>> fuzzInit: datum forking for value 808
757 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 808)
        (ReadLSB w32 0 v808_fuzz_symb_808)))
    state 809 with condition (Not (Eq false
         (Eq (w32 808)
             (ReadLSB w32 0 v808_fuzz_symb_808))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-808-8048a0e
Size=2 Low=0 splitIndex=1 high=1
757 [State 0] Switching from state 0 to state 809
Copied 34928 (count=1)
Finalizing TB execution 809
s2e_dummyMainFunction
tcg-llvm-tb-808-8048a0e
757 [State 809] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 808 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
757 [State 809] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77138: 00 00             add [eax], al           
757 [State 809] Terminating state 809 with message 'eliminated a state with an impossible first instruction'
757 [State 809] Switching from state 809 to state 0
Copied 34928 (count=1)
Deleting state 809 0x0x31276b30
Firing timer event
757 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 808
>> fuzzInit: datum forking for value 809
>> fuzzInit: datum forking for value 809
758 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 809)
        (ReadLSB w32 0 v809_fuzz_symb_809)))
    state 810 with condition (Not (Eq false
         (Eq (w32 809)
             (ReadLSB w32 0 v809_fuzz_symb_809))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-809-8048a0e
Size=2 Low=0 splitIndex=1 high=1
758 [State 0] Switching from state 0 to state 810
Copied 34928 (count=1)
Finalizing TB execution 810
s2e_dummyMainFunction
tcg-llvm-tb-809-8048a0e
758 [State 810] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 809 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
758 [State 810] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77139: 00 00             add [eax], al           
758 [State 810] Terminating state 810 with message 'eliminated a state with an impossible first instruction'
758 [State 810] Switching from state 810 to state 0
Copied 34928 (count=1)
Deleting state 810 0x0x31276b30
Firing timer event
758 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 809
>> fuzzInit: datum forking for value 810
>> fuzzInit: datum forking for value 810
758 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 810)
        (ReadLSB w32 0 v810_fuzz_symb_810)))
    state 811 with condition (Not (Eq false
         (Eq (w32 810)
             (ReadLSB w32 0 v810_fuzz_symb_810))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-810-8048a0e
Size=2 Low=0 splitIndex=1 high=1
759 [State 0] Switching from state 0 to state 811
Copied 34928 (count=1)
Finalizing TB execution 811
s2e_dummyMainFunction
tcg-llvm-tb-810-8048a0e
759 [State 811] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 810 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
759 [State 811] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7713a: 00 00             add [eax], al           
759 [State 811] Terminating state 811 with message 'eliminated a state with an impossible first instruction'
759 [State 811] Switching from state 811 to state 0
Copied 34928 (count=1)
Deleting state 811 0x0x31276b30
Firing timer event
759 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 810
>> fuzzInit: datum forking for value 811
>> fuzzInit: datum forking for value 811
>> fuzzInit: datum forking for value 811
760 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 811)
        (ReadLSB w32 0 v811_fuzz_symb_811)))
    state 812 with condition (Not (Eq false
         (Eq (w32 811)
             (ReadLSB w32 0 v811_fuzz_symb_811))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-811-8048a0e
Size=2 Low=0 splitIndex=1 high=1
760 [State 0] Switching from state 0 to state 812
Copied 34928 (count=1)
Finalizing TB execution 812
s2e_dummyMainFunction
tcg-llvm-tb-811-8048a0e
760 [State 812] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 811 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
760 [State 812] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7713b: 00 00             add [eax], al           
760 [State 812] Terminating state 812 with message 'eliminated a state with an impossible first instruction'
760 [State 812] Switching from state 812 to state 0
Copied 34928 (count=1)
Deleting state 812 0x0x31276b30
760 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 811
>> fuzzInit: datum forking for value 812
>> fuzzInit: datum forking for value 812
761 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 812)
        (ReadLSB w32 0 v812_fuzz_symb_812)))
    state 813 with condition (Not (Eq false
         (Eq (w32 812)
             (ReadLSB w32 0 v812_fuzz_symb_812))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-812-8048a0e
Size=2 Low=0 splitIndex=1 high=1
761 [State 0] Switching from state 0 to state 813
Copied 34928 (count=1)
Finalizing TB execution 813
s2e_dummyMainFunction
tcg-llvm-tb-812-8048a0e
Firing timer event
761 [State 813] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 812 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
762 [State 813] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7713c: 00 00             add [eax], al           
762 [State 813] Terminating state 813 with message 'eliminated a state with an impossible first instruction'
762 [State 813] Switching from state 813 to state 0
Copied 34928 (count=1)
Deleting state 813 0x0x31276b30
Firing timer event
762 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 812
>> fuzzInit: datum forking for value 813
>> fuzzInit: datum forking for value 813
762 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 813)
        (ReadLSB w32 0 v813_fuzz_symb_813)))
    state 814 with condition (Not (Eq false
         (Eq (w32 813)
             (ReadLSB w32 0 v813_fuzz_symb_813))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-813-8048a0e
Size=2 Low=0 splitIndex=1 high=1
762 [State 0] Switching from state 0 to state 814
Copied 34928 (count=1)
Finalizing TB execution 814
s2e_dummyMainFunction
tcg-llvm-tb-813-8048a0e
763 [State 814] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 813 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
763 [State 814] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7713d: 00 00             add [eax], al           
763 [State 814] Terminating state 814 with message 'eliminated a state with an impossible first instruction'
763 [State 814] Switching from state 814 to state 0
Copied 34928 (count=1)
Deleting state 814 0x0x314f25d0
Firing timer event
763 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 813
>> fuzzInit: datum forking for value 814
>> fuzzInit: datum forking for value 814
764 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 814)
        (ReadLSB w32 0 v814_fuzz_symb_814)))
    state 815 with condition (Not (Eq false
         (Eq (w32 814)
             (ReadLSB w32 0 v814_fuzz_symb_814))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-814-8048a0e
Size=2 Low=0 splitIndex=1 high=1
764 [State 0] Switching from state 0 to state 815
Copied 34928 (count=1)
Finalizing TB execution 815
s2e_dummyMainFunction
tcg-llvm-tb-814-8048a0e
Firing timer event
764 [State 815] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 814 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
764 [State 815] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7713e: 00 00             add [eax], al           
764 [State 815] Terminating state 815 with message 'eliminated a state with an impossible first instruction'
764 [State 815] Switching from state 815 to state 0
Copied 34928 (count=1)
Deleting state 815 0x0x31588cc0
765 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 814
>> fuzzInit: datum forking for value 815
>> fuzzInit: datum forking for value 815
765 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 815)
        (ReadLSB w32 0 v815_fuzz_symb_815)))
    state 816 with condition (Not (Eq false
         (Eq (w32 815)
             (ReadLSB w32 0 v815_fuzz_symb_815))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-815-8048a0e
Size=2 Low=0 splitIndex=1 high=1
765 [State 0] Switching from state 0 to state 816
Copied 34928 (count=1)
Finalizing TB execution 816
s2e_dummyMainFunction
tcg-llvm-tb-815-8048a0e
Firing timer event
765 [State 816] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 815 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
766 [State 816] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7713f: 00 00             add [eax], al           
766 [State 816] Terminating state 816 with message 'eliminated a state with an impossible first instruction'
766 [State 816] Switching from state 816 to state 0
Copied 34928 (count=1)
Deleting state 816 0x0x3143c2e0
766 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 815
>> fuzzInit: datum forking for value 816
>> fuzzInit: datum forking for value 816
766 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 816)
        (ReadLSB w32 0 v816_fuzz_symb_816)))
    state 817 with condition (Not (Eq false
         (Eq (w32 816)
             (ReadLSB w32 0 v816_fuzz_symb_816))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-816-8048a0e
Size=2 Low=0 splitIndex=1 high=1
766 [State 0] Switching from state 0 to state 817
Copied 34928 (count=1)
Finalizing TB execution 817
s2e_dummyMainFunction
tcg-llvm-tb-816-8048a0e
Firing timer event
767 [State 817] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 816 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
767 [State 817] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77140: 00 00             add [eax], al           
767 [State 817] Terminating state 817 with message 'eliminated a state with an impossible first instruction'
767 [State 817] Switching from state 817 to state 0
Copied 34928 (count=1)
Deleting state 817 0x0x3169ed50
767 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 816
>> fuzzInit: datum forking for value 817
>> fuzzInit: datum forking for value 817
767 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 817)
        (ReadLSB w32 0 v817_fuzz_symb_817)))
    state 818 with condition (Not (Eq false
         (Eq (w32 817)
             (ReadLSB w32 0 v817_fuzz_symb_817))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-817-8048a0e
Size=2 Low=0 splitIndex=1 high=1
767 [State 0] Switching from state 0 to state 818
Copied 34928 (count=1)
Finalizing TB execution 818
s2e_dummyMainFunction
tcg-llvm-tb-817-8048a0e
Firing timer event
768 [State 818] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 817 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
768 [State 818] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77141: 00 00             add [eax], al           
768 [State 818] Terminating state 818 with message 'eliminated a state with an impossible first instruction'
768 [State 818] Switching from state 818 to state 0
Copied 34928 (count=1)
Deleting state 818 0x0x3169ed50
768 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 817
>> fuzzInit: datum forking for value 818
>> fuzzInit: datum forking for value 818
768 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 818)
        (ReadLSB w32 0 v818_fuzz_symb_818)))
    state 819 with condition (Not (Eq false
         (Eq (w32 818)
             (ReadLSB w32 0 v818_fuzz_symb_818))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-818-8048a0e
Size=2 Low=0 splitIndex=1 high=1
768 [State 0] Switching from state 0 to state 819
Copied 34928 (count=1)
Finalizing TB execution 819
s2e_dummyMainFunction
tcg-llvm-tb-818-8048a0e
Firing timer event
769 [State 819] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 818 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
769 [State 819] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77142: 00 00             add [eax], al           
769 [State 819] Terminating state 819 with message 'eliminated a state with an impossible first instruction'
769 [State 819] Switching from state 819 to state 0
Copied 34928 (count=1)
Deleting state 819 0x0x3169ed50
769 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 818
>> fuzzInit: datum forking for value 819
>> fuzzInit: datum forking for value 819
769 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 819)
        (ReadLSB w32 0 v819_fuzz_symb_819)))
    state 820 with condition (Not (Eq false
         (Eq (w32 819)
             (ReadLSB w32 0 v819_fuzz_symb_819))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-819-8048a0e
Size=2 Low=0 splitIndex=1 high=1
769 [State 0] Switching from state 0 to state 820
Copied 34928 (count=1)
Finalizing TB execution 820
s2e_dummyMainFunction
tcg-llvm-tb-819-8048a0e
769 [State 820] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 819 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
770 [State 820] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77143: 00 00             add [eax], al           
770 [State 820] Terminating state 820 with message 'eliminated a state with an impossible first instruction'
770 [State 820] Switching from state 820 to state 0
Copied 34928 (count=1)
Deleting state 820 0x0x3169ed50
770 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 819
>> fuzzInit: datum forking for value 820
>> fuzzInit: datum forking for value 820
770 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 820)
        (ReadLSB w32 0 v820_fuzz_symb_820)))
    state 821 with condition (Not (Eq false
         (Eq (w32 820)
             (ReadLSB w32 0 v820_fuzz_symb_820))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-820-8048a0e
Size=2 Low=0 splitIndex=1 high=1
770 [State 0] Switching from state 0 to state 821
Copied 34928 (count=1)
Finalizing TB execution 821
s2e_dummyMainFunction
tcg-llvm-tb-820-8048a0e
770 [State 821] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 820 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
771 [State 821] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77144: 00 00             add [eax], al           
771 [State 821] Terminating state 821 with message 'eliminated a state with an impossible first instruction'
771 [State 821] Switching from state 821 to state 0
Copied 34928 (count=1)
Deleting state 821 0x0x3169ed50
771 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 820
>> fuzzInit: datum forking for value 821
>> fuzzInit: datum forking for value 821
771 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 821)
        (ReadLSB w32 0 v821_fuzz_symb_821)))
    state 822 with condition (Not (Eq false
         (Eq (w32 821)
             (ReadLSB w32 0 v821_fuzz_symb_821))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-821-8048a0e
Size=2 Low=0 splitIndex=1 high=1
771 [State 0] Switching from state 0 to state 822
Copied 34928 (count=1)
Finalizing TB execution 822
s2e_dummyMainFunction
tcg-llvm-tb-821-8048a0e
771 [State 822] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 821 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
771 [State 822] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77145: 00 00             add [eax], al           
771 [State 822] Terminating state 822 with message 'eliminated a state with an impossible first instruction'
771 [State 822] Switching from state 822 to state 0
Copied 34928 (count=1)
Deleting state 822 0x0x3169ed50
Firing timer event
772 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 821
>> fuzzInit: datum forking for value 822
>> fuzzInit: datum forking for value 822
772 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 822)
        (ReadLSB w32 0 v822_fuzz_symb_822)))
    state 823 with condition (Not (Eq false
         (Eq (w32 822)
             (ReadLSB w32 0 v822_fuzz_symb_822))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-822-8048a0e
Size=2 Low=0 splitIndex=1 high=1
772 [State 0] Switching from state 0 to state 823
Copied 34928 (count=1)
Finalizing TB execution 823
s2e_dummyMainFunction
tcg-llvm-tb-822-8048a0e
772 [State 823] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 822 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
772 [State 823] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77146: 00 00             add [eax], al           
772 [State 823] Terminating state 823 with message 'eliminated a state with an impossible first instruction'
772 [State 823] Switching from state 823 to state 0
Copied 34928 (count=1)
Deleting state 823 0x0x3169ed50
Firing timer event
773 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 822
>> fuzzInit: datum forking for value 823
>> fuzzInit: datum forking for value 823
773 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 823)
        (ReadLSB w32 0 v823_fuzz_symb_823)))
    state 824 with condition (Not (Eq false
         (Eq (w32 823)
             (ReadLSB w32 0 v823_fuzz_symb_823))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-823-8048a0e
Size=2 Low=0 splitIndex=1 high=1
773 [State 0] Switching from state 0 to state 824
Copied 34928 (count=1)
Finalizing TB execution 824
s2e_dummyMainFunction
tcg-llvm-tb-823-8048a0e
773 [State 824] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 823 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
774 [State 824] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77147: 00 00             add [eax], al           
774 [State 824] Terminating state 824 with message 'eliminated a state with an impossible first instruction'
774 [State 824] Switching from state 824 to state 0
Copied 34928 (count=1)
Deleting state 824 0x0x3169ed50
Firing timer event
774 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 823
>> fuzzInit: datum forking for value 824
>> fuzzInit: datum forking for value 824
774 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 824)
        (ReadLSB w32 0 v824_fuzz_symb_824)))
    state 825 with condition (Not (Eq false
         (Eq (w32 824)
             (ReadLSB w32 0 v824_fuzz_symb_824))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-824-8048a0e
Size=2 Low=0 splitIndex=1 high=1
774 [State 0] Switching from state 0 to state 825
Copied 34928 (count=1)
Finalizing TB execution 825
s2e_dummyMainFunction
tcg-llvm-tb-824-8048a0e
774 [State 825] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 824 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
775 [State 825] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77148: 00 00             add [eax], al           
775 [State 825] Terminating state 825 with message 'eliminated a state with an impossible first instruction'
775 [State 825] Switching from state 825 to state 0
Copied 34928 (count=1)
Deleting state 825 0x0x3169ed50
Firing timer event
775 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 824
>> fuzzInit: datum forking for value 825
>> fuzzInit: datum forking for value 825
775 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 825)
        (ReadLSB w32 0 v825_fuzz_symb_825)))
    state 826 with condition (Not (Eq false
         (Eq (w32 825)
             (ReadLSB w32 0 v825_fuzz_symb_825))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-825-8048a0e
Size=2 Low=0 splitIndex=1 high=1
775 [State 0] Switching from state 0 to state 826
Copied 34928 (count=1)
Finalizing TB execution 826
s2e_dummyMainFunction
tcg-llvm-tb-825-8048a0e
775 [State 826] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 825 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
776 [State 826] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77149: 00 00             add [eax], al           
776 [State 826] Terminating state 826 with message 'eliminated a state with an impossible first instruction'
776 [State 826] Switching from state 826 to state 0
Copied 34928 (count=1)
Deleting state 826 0x0x3169ed50
Firing timer event
776 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 825
>> fuzzInit: datum forking for value 826
>> fuzzInit: datum forking for value 826
776 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 826)
        (ReadLSB w32 0 v826_fuzz_symb_826)))
    state 827 with condition (Not (Eq false
         (Eq (w32 826)
             (ReadLSB w32 0 v826_fuzz_symb_826))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-826-8048a0e
Size=2 Low=0 splitIndex=1 high=1
776 [State 0] Switching from state 0 to state 827
Copied 34928 (count=1)
Finalizing TB execution 827
s2e_dummyMainFunction
tcg-llvm-tb-826-8048a0e
776 [State 827] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 826 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
777 [State 827] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7714a: 00 00             add [eax], al           
777 [State 827] Terminating state 827 with message 'eliminated a state with an impossible first instruction'
777 [State 827] Switching from state 827 to state 0
Copied 34928 (count=1)
Deleting state 827 0x0x3169ed50
Firing timer event
777 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 826
>> fuzzInit: datum forking for value 827
>> fuzzInit: datum forking for value 827
777 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 827)
        (ReadLSB w32 0 v827_fuzz_symb_827)))
    state 828 with condition (Not (Eq false
         (Eq (w32 827)
             (ReadLSB w32 0 v827_fuzz_symb_827))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-827-8048a0e
Size=2 Low=0 splitIndex=1 high=1
777 [State 0] Switching from state 0 to state 828
Copied 34928 (count=1)
Finalizing TB execution 828
s2e_dummyMainFunction
tcg-llvm-tb-827-8048a0e
777 [State 828] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 827 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
777 [State 828] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7714b: 00 00             add [eax], al           
777 [State 828] Terminating state 828 with message 'eliminated a state with an impossible first instruction'
777 [State 828] Switching from state 828 to state 0
Copied 34928 (count=1)
Deleting state 828 0x0x3199de30
Firing timer event
778 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 827
>> fuzzInit: datum forking for value 828
>> fuzzInit: datum forking for value 828
778 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 828)
        (ReadLSB w32 0 v828_fuzz_symb_828)))
    state 829 with condition (Not (Eq false
         (Eq (w32 828)
             (ReadLSB w32 0 v828_fuzz_symb_828))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-828-8048a0e
Size=2 Low=0 splitIndex=1 high=1
778 [State 0] Switching from state 0 to state 829
Copied 34928 (count=1)
Finalizing TB execution 829
s2e_dummyMainFunction
tcg-llvm-tb-828-8048a0e
778 [State 829] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 828 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
778 [State 829] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7714c: 00 00             add [eax], al           
778 [State 829] Terminating state 829 with message 'eliminated a state with an impossible first instruction'
778 [State 829] Switching from state 829 to state 0
Copied 34928 (count=1)
Deleting state 829 0x0x31b380a0
Firing timer event
779 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 828
>> fuzzInit: datum forking for value 829
>> fuzzInit: datum forking for value 829
779 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 829)
        (ReadLSB w32 0 v829_fuzz_symb_829)))
    state 830 with condition (Not (Eq false
         (Eq (w32 829)
             (ReadLSB w32 0 v829_fuzz_symb_829))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-829-8048a0e
Size=2 Low=0 splitIndex=1 high=1
779 [State 0] Switching from state 0 to state 830
Copied 34928 (count=1)
Finalizing TB execution 830
s2e_dummyMainFunction
tcg-llvm-tb-829-8048a0e
779 [State 830] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 829 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
779 [State 830] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7714d: 00 00             add [eax], al           
779 [State 830] Terminating state 830 with message 'eliminated a state with an impossible first instruction'
779 [State 830] Switching from state 830 to state 0
Copied 34928 (count=1)
Deleting state 830 0x0x31b380a0
780 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 829
>> fuzzInit: datum forking for value 830
>> fuzzInit: datum forking for value 830
780 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 830)
        (ReadLSB w32 0 v830_fuzz_symb_830)))
    state 831 with condition (Not (Eq false
         (Eq (w32 830)
             (ReadLSB w32 0 v830_fuzz_symb_830))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-830-8048a0e
Size=2 Low=0 splitIndex=1 high=1
780 [State 0] Switching from state 0 to state 831
Copied 34928 (count=1)
Finalizing TB execution 831
s2e_dummyMainFunction
tcg-llvm-tb-830-8048a0e
Firing timer event
780 [State 831] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 830 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
780 [State 831] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7714e: 00 00             add [eax], al           
780 [State 831] Terminating state 831 with message 'eliminated a state with an impossible first instruction'
780 [State 831] Switching from state 831 to state 0
Copied 34928 (count=1)
Deleting state 831 0x0x31b380a0
781 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 830
>> fuzzInit: datum forking for value 831
>> fuzzInit: datum forking for value 831
781 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 831)
        (ReadLSB w32 0 v831_fuzz_symb_831)))
    state 832 with condition (Not (Eq false
         (Eq (w32 831)
             (ReadLSB w32 0 v831_fuzz_symb_831))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-831-8048a0e
Size=2 Low=0 splitIndex=1 high=1
781 [State 0] Switching from state 0 to state 832
Copied 34928 (count=1)
Finalizing TB execution 832
s2e_dummyMainFunction
tcg-llvm-tb-831-8048a0e
Firing timer event
781 [State 832] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 831 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
781 [State 832] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7714f: 00 00             add [eax], al           
782 [State 832] Terminating state 832 with message 'eliminated a state with an impossible first instruction'
782 [State 832] Switching from state 832 to state 0
Copied 34928 (count=1)
Deleting state 832 0x0x31b380a0
782 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 831
>> fuzzInit: datum forking for value 832
>> fuzzInit: datum forking for value 832
782 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 832)
        (ReadLSB w32 0 v832_fuzz_symb_832)))
    state 833 with condition (Not (Eq false
         (Eq (w32 832)
             (ReadLSB w32 0 v832_fuzz_symb_832))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-832-8048a0e
Size=2 Low=0 splitIndex=1 high=1
782 [State 0] Switching from state 0 to state 833
Copied 34928 (count=1)
Finalizing TB execution 833
s2e_dummyMainFunction
tcg-llvm-tb-832-8048a0e
Firing timer event
782 [State 833] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 832 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
782 [State 833] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77150: 00 00             add [eax], al           
782 [State 833] Terminating state 833 with message 'eliminated a state with an impossible first instruction'
782 [State 833] Switching from state 833 to state 0
Copied 34928 (count=1)
Deleting state 833 0x0x31b380a0
783 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 832
>> fuzzInit: datum forking for value 833
>> fuzzInit: datum forking for value 833
783 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 833)
        (ReadLSB w32 0 v833_fuzz_symb_833)))
    state 834 with condition (Not (Eq false
         (Eq (w32 833)
             (ReadLSB w32 0 v833_fuzz_symb_833))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-833-8048a0e
Size=2 Low=0 splitIndex=1 high=1
783 [State 0] Switching from state 0 to state 834
Copied 34928 (count=1)
Finalizing TB execution 834
s2e_dummyMainFunction
tcg-llvm-tb-833-8048a0e
Firing timer event
783 [State 834] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 833 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
783 [State 834] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77151: 00 00             add [eax], al           
783 [State 834] Terminating state 834 with message 'eliminated a state with an impossible first instruction'
783 [State 834] Switching from state 834 to state 0
Copied 34928 (count=1)
Deleting state 834 0x0x31b380a0
784 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 833
>> fuzzInit: datum forking for value 834
>> fuzzInit: datum forking for value 834
784 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 834)
        (ReadLSB w32 0 v834_fuzz_symb_834)))
    state 835 with condition (Not (Eq false
         (Eq (w32 834)
             (ReadLSB w32 0 v834_fuzz_symb_834))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-834-8048a0e
Size=2 Low=0 splitIndex=1 high=1
784 [State 0] Switching from state 0 to state 835
Copied 34928 (count=1)
Finalizing TB execution 835
s2e_dummyMainFunction
tcg-llvm-tb-834-8048a0e
784 [State 835] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 834 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
784 [State 835] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77152: 00 00             add [eax], al           
784 [State 835] Terminating state 835 with message 'eliminated a state with an impossible first instruction'
784 [State 835] Switching from state 835 to state 0
Copied 34928 (count=1)
Deleting state 835 0x0x31b380a0
784 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 834
>> fuzzInit: datum forking for value 835
>> fuzzInit: datum forking for value 835
785 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 835)
        (ReadLSB w32 0 v835_fuzz_symb_835)))
    state 836 with condition (Not (Eq false
         (Eq (w32 835)
             (ReadLSB w32 0 v835_fuzz_symb_835))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-835-8048a0e
Size=2 Low=0 splitIndex=1 high=1
785 [State 0] Switching from state 0 to state 836
Copied 34928 (count=1)
Finalizing TB execution 836
s2e_dummyMainFunction
tcg-llvm-tb-835-8048a0e
785 [State 836] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 835 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
785 [State 836] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77153: 00 00             add [eax], al           
785 [State 836] Terminating state 836 with message 'eliminated a state with an impossible first instruction'
785 [State 836] Switching from state 836 to state 0
Copied 34928 (count=1)
Deleting state 836 0x0x31d710b0
Firing timer event
785 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 835
>> fuzzInit: datum forking for value 836
>> fuzzInit: datum forking for value 836
786 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 836)
        (ReadLSB w32 0 v836_fuzz_symb_836)))
    state 837 with condition (Not (Eq false
         (Eq (w32 836)
             (ReadLSB w32 0 v836_fuzz_symb_836))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-836-8048a0e
Size=2 Low=0 splitIndex=1 high=1
786 [State 0] Switching from state 0 to state 837
Copied 34928 (count=1)
Finalizing TB execution 837
s2e_dummyMainFunction
tcg-llvm-tb-836-8048a0e
786 [State 837] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 836 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
786 [State 837] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77154: 00 00             add [eax], al           
786 [State 837] Terminating state 837 with message 'eliminated a state with an impossible first instruction'
786 [State 837] Switching from state 837 to state 0
Copied 34928 (count=1)
Deleting state 837 0x0x31d710b0
Firing timer event
786 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 836
>> fuzzInit: datum forking for value 837
>> fuzzInit: datum forking for value 837
787 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 837)
        (ReadLSB w32 0 v837_fuzz_symb_837)))
    state 838 with condition (Not (Eq false
         (Eq (w32 837)
             (ReadLSB w32 0 v837_fuzz_symb_837))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-837-8048a0e
Size=2 Low=0 splitIndex=1 high=1
787 [State 0] Switching from state 0 to state 838
Copied 34928 (count=1)
Finalizing TB execution 838
s2e_dummyMainFunction
tcg-llvm-tb-837-8048a0e
787 [State 838] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 837 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
787 [State 838] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77155: 00 00             add [eax], al           
787 [State 838] Terminating state 838 with message 'eliminated a state with an impossible first instruction'
787 [State 838] Switching from state 838 to state 0
Copied 34928 (count=1)
Deleting state 838 0x0x31d710b0
Firing timer event
787 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 837
>> fuzzInit: datum forking for value 838
>> fuzzInit: datum forking for value 838
788 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 838)
        (ReadLSB w32 0 v838_fuzz_symb_838)))
    state 839 with condition (Not (Eq false
         (Eq (w32 838)
             (ReadLSB w32 0 v838_fuzz_symb_838))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-838-8048a0e
Size=2 Low=0 splitIndex=1 high=1
788 [State 0] Switching from state 0 to state 839
Copied 34928 (count=1)
Finalizing TB execution 839
s2e_dummyMainFunction
tcg-llvm-tb-838-8048a0e
788 [State 839] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 838 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
788 [State 839] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77156: 00 00             add [eax], al           
788 [State 839] Terminating state 839 with message 'eliminated a state with an impossible first instruction'
788 [State 839] Switching from state 839 to state 0
Copied 34928 (count=1)
Deleting state 839 0x0x31d710b0
788 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 838
>> fuzzInit: datum forking for value 839
>> fuzzInit: datum forking for value 839
789 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 839)
        (ReadLSB w32 0 v839_fuzz_symb_839)))
    state 840 with condition (Not (Eq false
         (Eq (w32 839)
             (ReadLSB w32 0 v839_fuzz_symb_839))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-839-8048a0e
Size=2 Low=0 splitIndex=1 high=1
789 [State 0] Switching from state 0 to state 840
Copied 34928 (count=1)
Finalizing TB execution 840
s2e_dummyMainFunction
tcg-llvm-tb-839-8048a0e
Firing timer event
789 [State 840] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 839 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
789 [State 840] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77157: 00 00             add [eax], al           
789 [State 840] Terminating state 840 with message 'eliminated a state with an impossible first instruction'
789 [State 840] Switching from state 840 to state 0
Copied 34928 (count=1)
Deleting state 840 0x0x31d710b0
789 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 839
>> fuzzInit: datum forking for value 840
>> fuzzInit: datum forking for value 840
790 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 840)
        (ReadLSB w32 0 v840_fuzz_symb_840)))
    state 841 with condition (Not (Eq false
         (Eq (w32 840)
             (ReadLSB w32 0 v840_fuzz_symb_840))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-840-8048a0e
Size=2 Low=0 splitIndex=1 high=1
790 [State 0] Switching from state 0 to state 841
Copied 34928 (count=1)
Finalizing TB execution 841
s2e_dummyMainFunction
tcg-llvm-tb-840-8048a0e
Firing timer event
790 [State 841] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 840 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
790 [State 841] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77158: 00 00             add [eax], al           
790 [State 841] Terminating state 841 with message 'eliminated a state with an impossible first instruction'
790 [State 841] Switching from state 841 to state 0
Copied 34928 (count=1)
Deleting state 841 0x0x31d710b0
790 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 840
>> fuzzInit: datum forking for value 841
>> fuzzInit: datum forking for value 841
791 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 841)
        (ReadLSB w32 0 v841_fuzz_symb_841)))
    state 842 with condition (Not (Eq false
         (Eq (w32 841)
             (ReadLSB w32 0 v841_fuzz_symb_841))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-841-8048a0e
Size=2 Low=0 splitIndex=1 high=1
791 [State 0] Switching from state 0 to state 842
Copied 34928 (count=1)
Finalizing TB execution 842
s2e_dummyMainFunction
tcg-llvm-tb-841-8048a0e
Firing timer event
791 [State 842] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 841 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
791 [State 842] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77159: 00 00             add [eax], al           
791 [State 842] Terminating state 842 with message 'eliminated a state with an impossible first instruction'
791 [State 842] Switching from state 842 to state 0
Copied 34928 (count=1)
Deleting state 842 0x0x31d710b0
791 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 841
>> fuzzInit: datum forking for value 842
>> fuzzInit: datum forking for value 842
791 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 842)
        (ReadLSB w32 0 v842_fuzz_symb_842)))
    state 843 with condition (Not (Eq false
         (Eq (w32 842)
             (ReadLSB w32 0 v842_fuzz_symb_842))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-842-8048a0e
Size=2 Low=0 splitIndex=1 high=1
791 [State 0] Switching from state 0 to state 843
Copied 34928 (count=1)
Finalizing TB execution 843
s2e_dummyMainFunction
tcg-llvm-tb-842-8048a0e
792 [State 843] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 842 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
792 [State 843] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7715a: 00 00             add [eax], al           
792 [State 843] Terminating state 843 with message 'eliminated a state with an impossible first instruction'
792 [State 843] Switching from state 843 to state 0
Copied 34928 (count=1)
Deleting state 843 0x0x31d710b0
792 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 842
>> fuzzInit: datum forking for value 843
>> fuzzInit: datum forking for value 843
792 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 843)
        (ReadLSB w32 0 v843_fuzz_symb_843)))
    state 844 with condition (Not (Eq false
         (Eq (w32 843)
             (ReadLSB w32 0 v843_fuzz_symb_843))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-843-8048a0e
Size=2 Low=0 splitIndex=1 high=1
792 [State 0] Switching from state 0 to state 844
Copied 34928 (count=1)
Finalizing TB execution 844
s2e_dummyMainFunction
tcg-llvm-tb-843-8048a0e
792 [State 844] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 843 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
793 [State 844] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7715b: 00 00             add [eax], al           
793 [State 844] Terminating state 844 with message 'eliminated a state with an impossible first instruction'
793 [State 844] Switching from state 844 to state 0
Copied 34928 (count=1)
Deleting state 844 0x0x31e74120
Firing timer event
793 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 843
>> fuzzInit: datum forking for value 844
>> fuzzInit: datum forking for value 844
793 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 844)
        (ReadLSB w32 0 v844_fuzz_symb_844)))
    state 845 with condition (Not (Eq false
         (Eq (w32 844)
             (ReadLSB w32 0 v844_fuzz_symb_844))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-844-8048a0e
Size=2 Low=0 splitIndex=1 high=1
793 [State 0] Switching from state 0 to state 845
Copied 34928 (count=1)
Finalizing TB execution 845
s2e_dummyMainFunction
tcg-llvm-tb-844-8048a0e
793 [State 845] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 844 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
793 [State 845] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7715c: 00 00             add [eax], al           
793 [State 845] Terminating state 845 with message 'eliminated a state with an impossible first instruction'
793 [State 845] Switching from state 845 to state 0
Copied 34928 (count=1)
Deleting state 845 0x0x31e74120
794 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 844
>> fuzzInit: datum forking for value 845
>> fuzzInit: datum forking for value 845
794 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 845)
        (ReadLSB w32 0 v845_fuzz_symb_845)))
    state 846 with condition (Not (Eq false
         (Eq (w32 845)
             (ReadLSB w32 0 v845_fuzz_symb_845))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-845-8048a0e
Size=2 Low=0 splitIndex=1 high=1
794 [State 0] Switching from state 0 to state 846
Copied 34928 (count=1)
Finalizing TB execution 846
s2e_dummyMainFunction
tcg-llvm-tb-845-8048a0e
Firing timer event
794 [State 846] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 845 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
794 [State 846] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7715d: 00 00             add [eax], al           
794 [State 846] Terminating state 846 with message 'eliminated a state with an impossible first instruction'
794 [State 846] Switching from state 846 to state 0
Copied 34928 (count=1)
Deleting state 846 0x0x31ed7980
795 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 845
>> fuzzInit: datum forking for value 846
>> fuzzInit: datum forking for value 846
795 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 846)
        (ReadLSB w32 0 v846_fuzz_symb_846)))
    state 847 with condition (Not (Eq false
         (Eq (w32 846)
             (ReadLSB w32 0 v846_fuzz_symb_846))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-846-8048a0e
Size=2 Low=0 splitIndex=1 high=1
795 [State 0] Switching from state 0 to state 847
Copied 34928 (count=1)
Finalizing TB execution 847
s2e_dummyMainFunction
tcg-llvm-tb-846-8048a0e
Firing timer event
795 [State 847] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 846 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
795 [State 847] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7715e: 00 00             add [eax], al           
795 [State 847] Terminating state 847 with message 'eliminated a state with an impossible first instruction'
795 [State 847] Switching from state 847 to state 0
Copied 34928 (count=1)
Deleting state 847 0x0x31ed7980
796 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 846
>> fuzzInit: datum forking for value 847
>> fuzzInit: datum forking for value 847
796 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 847)
        (ReadLSB w32 0 v847_fuzz_symb_847)))
    state 848 with condition (Not (Eq false
         (Eq (w32 847)
             (ReadLSB w32 0 v847_fuzz_symb_847))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-847-8048a0e
Size=2 Low=0 splitIndex=1 high=1
796 [State 0] Switching from state 0 to state 848
Copied 34928 (count=1)
Finalizing TB execution 848
s2e_dummyMainFunction
tcg-llvm-tb-847-8048a0e
796 [State 848] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 847 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
796 [State 848] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7715f: 00 00             add [eax], al           
796 [State 848] Terminating state 848 with message 'eliminated a state with an impossible first instruction'
796 [State 848] Switching from state 848 to state 0
Copied 34928 (count=1)
Deleting state 848 0x0x31ed7980
796 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 847
>> fuzzInit: datum forking for value 848
>> fuzzInit: datum forking for value 848
797 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 848)
        (ReadLSB w32 0 v848_fuzz_symb_848)))
    state 849 with condition (Not (Eq false
         (Eq (w32 848)
             (ReadLSB w32 0 v848_fuzz_symb_848))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-848-8048a0e
Size=2 Low=0 splitIndex=1 high=1
797 [State 0] Switching from state 0 to state 849
Copied 34928 (count=1)
Finalizing TB execution 849
s2e_dummyMainFunction
tcg-llvm-tb-848-8048a0e
797 [State 849] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 848 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
797 [State 849] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77160: 00 00             add [eax], al           
797 [State 849] Terminating state 849 with message 'eliminated a state with an impossible first instruction'
797 [State 849] Switching from state 849 to state 0
Copied 34928 (count=1)
Deleting state 849 0x0x31ed7980
797 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 848
>> fuzzInit: datum forking for value 849
>> fuzzInit: datum forking for value 849
798 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 849)
        (ReadLSB w32 0 v849_fuzz_symb_849)))
    state 850 with condition (Not (Eq false
         (Eq (w32 849)
             (ReadLSB w32 0 v849_fuzz_symb_849))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-849-8048a0e
Size=2 Low=0 splitIndex=1 high=1
798 [State 0] Switching from state 0 to state 850
Copied 34928 (count=1)
Finalizing TB execution 850
s2e_dummyMainFunction
tcg-llvm-tb-849-8048a0e
798 [State 850] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 849 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
798 [State 850] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77161: 00 00             add [eax], al           
798 [State 850] Terminating state 850 with message 'eliminated a state with an impossible first instruction'
798 [State 850] Switching from state 850 to state 0
Copied 34928 (count=1)
Deleting state 850 0x0x31eff470
Firing timer event
798 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 849
>> fuzzInit: datum forking for value 850
>> fuzzInit: datum forking for value 850
799 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 850)
        (ReadLSB w32 0 v850_fuzz_symb_850)))
    state 851 with condition (Not (Eq false
         (Eq (w32 850)
             (ReadLSB w32 0 v850_fuzz_symb_850))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-850-8048a0e
Size=2 Low=0 splitIndex=1 high=1
799 [State 0] Switching from state 0 to state 851
Copied 34928 (count=1)
Finalizing TB execution 851
s2e_dummyMainFunction
tcg-llvm-tb-850-8048a0e
799 [State 851] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 850 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
799 [State 851] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77162: 00 00             add [eax], al           
799 [State 851] Terminating state 851 with message 'eliminated a state with an impossible first instruction'
799 [State 851] Switching from state 851 to state 0
Copied 34928 (count=1)
Deleting state 851 0x0x31eff470
799 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 850
>> fuzzInit: datum forking for value 851
>> fuzzInit: datum forking for value 851
800 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 851)
        (ReadLSB w32 0 v851_fuzz_symb_851)))
    state 852 with condition (Not (Eq false
         (Eq (w32 851)
             (ReadLSB w32 0 v851_fuzz_symb_851))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-851-8048a0e
Size=2 Low=0 splitIndex=1 high=1
800 [State 0] Switching from state 0 to state 852
Copied 34928 (count=1)
Finalizing TB execution 852
s2e_dummyMainFunction
tcg-llvm-tb-851-8048a0e
Firing timer event
800 [State 852] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 851 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
800 [State 852] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77163: 00 00             add [eax], al           
800 [State 852] Terminating state 852 with message 'eliminated a state with an impossible first instruction'
800 [State 852] Switching from state 852 to state 0
Copied 34928 (count=1)
Deleting state 852 0x0x31eff470
800 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 851
>> fuzzInit: datum forking for value 852
>> fuzzInit: datum forking for value 852
800 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 852)
        (ReadLSB w32 0 v852_fuzz_symb_852)))
    state 853 with condition (Not (Eq false
         (Eq (w32 852)
             (ReadLSB w32 0 v852_fuzz_symb_852))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-852-8048a0e
Size=2 Low=0 splitIndex=1 high=1
800 [State 0] Switching from state 0 to state 853
Copied 34928 (count=1)
Finalizing TB execution 853
s2e_dummyMainFunction
tcg-llvm-tb-852-8048a0e
801 [State 853] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 852 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
801 [State 853] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77164: 00 00             add [eax], al           
801 [State 853] Terminating state 853 with message 'eliminated a state with an impossible first instruction'
801 [State 853] Switching from state 853 to state 0
Copied 34928 (count=1)
Deleting state 853 0x0x31eff470
801 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 852
>> fuzzInit: datum forking for value 853
>> fuzzInit: datum forking for value 853
801 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 853)
        (ReadLSB w32 0 v853_fuzz_symb_853)))
    state 854 with condition (Not (Eq false
         (Eq (w32 853)
             (ReadLSB w32 0 v853_fuzz_symb_853))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-853-8048a0e
Size=2 Low=0 splitIndex=1 high=1
801 [State 0] Switching from state 0 to state 854
Copied 34928 (count=1)
Finalizing TB execution 854
s2e_dummyMainFunction
tcg-llvm-tb-853-8048a0e
802 [State 854] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 853 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
802 [State 854] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77165: 00 00             add [eax], al           
802 [State 854] Terminating state 854 with message 'eliminated a state with an impossible first instruction'
802 [State 854] Switching from state 854 to state 0
Copied 34928 (count=1)
Deleting state 854 0x0x31eff470
802 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 853
>> fuzzInit: datum forking for value 854
>> fuzzInit: datum forking for value 854
802 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 854)
        (ReadLSB w32 0 v854_fuzz_symb_854)))
    state 855 with condition (Not (Eq false
         (Eq (w32 854)
             (ReadLSB w32 0 v854_fuzz_symb_854))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-854-8048a0e
Size=2 Low=0 splitIndex=1 high=1
802 [State 0] Switching from state 0 to state 855
Copied 34928 (count=1)
Finalizing TB execution 855
s2e_dummyMainFunction
tcg-llvm-tb-854-8048a0e
802 [State 855] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 854 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
803 [State 855] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77166: 00 00             add [eax], al           
803 [State 855] Terminating state 855 with message 'eliminated a state with an impossible first instruction'
803 [State 855] Switching from state 855 to state 0
Copied 34928 (count=1)
Deleting state 855 0x0x31eff470
Firing timer event
803 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 854
>> fuzzInit: datum forking for value 855
>> fuzzInit: datum forking for value 855
>> fuzzInit: datum forking for value 855
803 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 855)
        (ReadLSB w32 0 v855_fuzz_symb_855)))
    state 856 with condition (Not (Eq false
         (Eq (w32 855)
             (ReadLSB w32 0 v855_fuzz_symb_855))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-855-8048a0e
Size=2 Low=0 splitIndex=1 high=1
803 [State 0] Switching from state 0 to state 856
Copied 34928 (count=1)
Finalizing TB execution 856
s2e_dummyMainFunction
tcg-llvm-tb-855-8048a0e
803 [State 856] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 855 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
803 [State 856] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77167: 00 00             add [eax], al           
803 [State 856] Terminating state 856 with message 'eliminated a state with an impossible first instruction'
803 [State 856] Switching from state 856 to state 0
Copied 34928 (count=1)
Deleting state 856 0x0x31eff470
804 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 855
>> fuzzInit: datum forking for value 856
>> fuzzInit: datum forking for value 856
804 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 856)
        (ReadLSB w32 0 v856_fuzz_symb_856)))
    state 857 with condition (Not (Eq false
         (Eq (w32 856)
             (ReadLSB w32 0 v856_fuzz_symb_856))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-856-8048a0e
Size=2 Low=0 splitIndex=1 high=1
804 [State 0] Switching from state 0 to state 857
Copied 34928 (count=1)
Finalizing TB execution 857
s2e_dummyMainFunction
tcg-llvm-tb-856-8048a0e
Firing timer event
804 [State 857] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 856 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
804 [State 857] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77168: 00 00             add [eax], al           
804 [State 857] Terminating state 857 with message 'eliminated a state with an impossible first instruction'
804 [State 857] Switching from state 857 to state 0
Copied 34928 (count=1)
Deleting state 857 0x0x31eff470
805 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 856
>> fuzzInit: datum forking for value 857
>> fuzzInit: datum forking for value 857
805 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 857)
        (ReadLSB w32 0 v857_fuzz_symb_857)))
    state 858 with condition (Not (Eq false
         (Eq (w32 857)
             (ReadLSB w32 0 v857_fuzz_symb_857))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-857-8048a0e
Size=2 Low=0 splitIndex=1 high=1
805 [State 0] Switching from state 0 to state 858
Copied 34928 (count=1)
Finalizing TB execution 858
s2e_dummyMainFunction
tcg-llvm-tb-857-8048a0e
Firing timer event
805 [State 858] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 857 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
805 [State 858] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77169: 00 00             add [eax], al           
805 [State 858] Terminating state 858 with message 'eliminated a state with an impossible first instruction'
805 [State 858] Switching from state 858 to state 0
Copied 34928 (count=1)
Deleting state 858 0x0x31eff470
806 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 857
>> fuzzInit: datum forking for value 858
>> fuzzInit: datum forking for value 858
806 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 858)
        (ReadLSB w32 0 v858_fuzz_symb_858)))
    state 859 with condition (Not (Eq false
         (Eq (w32 858)
             (ReadLSB w32 0 v858_fuzz_symb_858))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-858-8048a0e
Size=2 Low=0 splitIndex=1 high=1
806 [State 0] Switching from state 0 to state 859
Copied 34928 (count=1)
Finalizing TB execution 859
s2e_dummyMainFunction
tcg-llvm-tb-858-8048a0e
Firing timer event
806 [State 859] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 858 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
806 [State 859] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7716a: 00 00             add [eax], al           
806 [State 859] Terminating state 859 with message 'eliminated a state with an impossible first instruction'
806 [State 859] Switching from state 859 to state 0
Copied 34928 (count=1)
Deleting state 859 0x0x31eff470
807 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 858
>> fuzzInit: datum forking for value 859
>> fuzzInit: datum forking for value 859
807 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 859)
        (ReadLSB w32 0 v859_fuzz_symb_859)))
    state 860 with condition (Not (Eq false
         (Eq (w32 859)
             (ReadLSB w32 0 v859_fuzz_symb_859))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-859-8048a0e
Size=2 Low=0 splitIndex=1 high=1
807 [State 0] Switching from state 0 to state 860
Copied 34928 (count=1)
Finalizing TB execution 860
s2e_dummyMainFunction
tcg-llvm-tb-859-8048a0e
Firing timer event
807 [State 860] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 859 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
807 [State 860] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7716b: 00 00             add [eax], al           
807 [State 860] Terminating state 860 with message 'eliminated a state with an impossible first instruction'
807 [State 860] Switching from state 860 to state 0
Copied 34928 (count=1)
Deleting state 860 0x0x31eff470
808 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 859
>> fuzzInit: datum forking for value 860
>> fuzzInit: datum forking for value 860
>> fuzzInit: datum forking for value 860
808 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 860)
        (ReadLSB w32 0 v860_fuzz_symb_860)))
    state 861 with condition (Not (Eq false
         (Eq (w32 860)
             (ReadLSB w32 0 v860_fuzz_symb_860))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-860-8048a0e
Size=2 Low=0 splitIndex=1 high=1
808 [State 0] Switching from state 0 to state 861
Copied 34928 (count=1)
Finalizing TB execution 861
s2e_dummyMainFunction
tcg-llvm-tb-860-8048a0e
Firing timer event
808 [State 861] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 860 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
808 [State 861] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7716c: 00 00             add [eax], al           
808 [State 861] Terminating state 861 with message 'eliminated a state with an impossible first instruction'
808 [State 861] Switching from state 861 to state 0
Copied 34928 (count=1)
Deleting state 861 0x0x31eff470
809 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 860
>> fuzzInit: datum forking for value 861
>> fuzzInit: datum forking for value 861
>> fuzzInit: datum forking for value 861
809 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 861)
        (ReadLSB w32 0 v861_fuzz_symb_861)))
    state 862 with condition (Not (Eq false
         (Eq (w32 861)
             (ReadLSB w32 0 v861_fuzz_symb_861))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-861-8048a0e
Size=2 Low=0 splitIndex=1 high=1
809 [State 0] Switching from state 0 to state 862
Copied 34928 (count=1)
Finalizing TB execution 862
s2e_dummyMainFunction
tcg-llvm-tb-861-8048a0e
Firing timer event
809 [State 862] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 861 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
809 [State 862] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7716d: 00 00             add [eax], al           
809 [State 862] Terminating state 862 with message 'eliminated a state with an impossible first instruction'
809 [State 862] Switching from state 862 to state 0
Copied 34928 (count=1)
Deleting state 862 0x0x31eff470
810 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 861
>> fuzzInit: datum forking for value 862
>> fuzzInit: datum forking for value 862
810 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 862)
        (ReadLSB w32 0 v862_fuzz_symb_862)))
    state 863 with condition (Not (Eq false
         (Eq (w32 862)
             (ReadLSB w32 0 v862_fuzz_symb_862))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-862-8048a0e
Size=2 Low=0 splitIndex=1 high=1
810 [State 0] Switching from state 0 to state 863
Copied 34928 (count=1)
Finalizing TB execution 863
s2e_dummyMainFunction
tcg-llvm-tb-862-8048a0e
810 [State 863] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 862 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
810 [State 863] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7716e: 00 00             add [eax], al           
810 [State 863] Terminating state 863 with message 'eliminated a state with an impossible first instruction'
810 [State 863] Switching from state 863 to state 0
Copied 34928 (count=1)
Deleting state 863 0x0x31eff470
Firing timer event
810 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 862
>> fuzzInit: datum forking for value 863
>> fuzzInit: datum forking for value 863
811 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 863)
        (ReadLSB w32 0 v863_fuzz_symb_863)))
    state 864 with condition (Not (Eq false
         (Eq (w32 863)
             (ReadLSB w32 0 v863_fuzz_symb_863))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-863-8048a0e
Size=2 Low=0 splitIndex=1 high=1
811 [State 0] Switching from state 0 to state 864
Copied 34928 (count=1)
Finalizing TB execution 864
s2e_dummyMainFunction
tcg-llvm-tb-863-8048a0e
811 [State 864] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 863 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
811 [State 864] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7716f: 00 00             add [eax], al           
811 [State 864] Terminating state 864 with message 'eliminated a state with an impossible first instruction'
811 [State 864] Switching from state 864 to state 0
Copied 34928 (count=1)
Deleting state 864 0x0x31eff470
811 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 863
>> fuzzInit: datum forking for value 864
>> fuzzInit: datum forking for value 864
812 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 864)
        (ReadLSB w32 0 v864_fuzz_symb_864)))
    state 865 with condition (Not (Eq false
         (Eq (w32 864)
             (ReadLSB w32 0 v864_fuzz_symb_864))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-864-8048a0e
Size=2 Low=0 splitIndex=1 high=1
812 [State 0] Switching from state 0 to state 865
Copied 34928 (count=1)
Finalizing TB execution 865
s2e_dummyMainFunction
tcg-llvm-tb-864-8048a0e
Firing timer event
812 [State 865] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 864 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
812 [State 865] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77170: 00 00             add [eax], al           
812 [State 865] Terminating state 865 with message 'eliminated a state with an impossible first instruction'
812 [State 865] Switching from state 865 to state 0
Copied 34928 (count=1)
Deleting state 865 0x0x31eff470
812 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 864
>> fuzzInit: datum forking for value 865
>> fuzzInit: datum forking for value 865
812 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 865)
        (ReadLSB w32 0 v865_fuzz_symb_865)))
    state 866 with condition (Not (Eq false
         (Eq (w32 865)
             (ReadLSB w32 0 v865_fuzz_symb_865))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-865-8048a0e
Size=2 Low=0 splitIndex=1 high=1
812 [State 0] Switching from state 0 to state 866
Copied 34928 (count=1)
Finalizing TB execution 866
s2e_dummyMainFunction
tcg-llvm-tb-865-8048a0e
Firing timer event
813 [State 866] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 865 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
813 [State 866] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77171: 00 00             add [eax], al           
813 [State 866] Terminating state 866 with message 'eliminated a state with an impossible first instruction'
813 [State 866] Switching from state 866 to state 0
Copied 34928 (count=1)
Deleting state 866 0x0x31eff470
813 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 865
>> fuzzInit: datum forking for value 866
>> fuzzInit: datum forking for value 866
813 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 866)
        (ReadLSB w32 0 v866_fuzz_symb_866)))
    state 867 with condition (Not (Eq false
         (Eq (w32 866)
             (ReadLSB w32 0 v866_fuzz_symb_866))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-866-8048a0e
Size=2 Low=0 splitIndex=1 high=1
813 [State 0] Switching from state 0 to state 867
Copied 34928 (count=1)
Finalizing TB execution 867
s2e_dummyMainFunction
tcg-llvm-tb-866-8048a0e
814 [State 867] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 866 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
814 [State 867] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77172: 00 00             add [eax], al           
814 [State 867] Terminating state 867 with message 'eliminated a state with an impossible first instruction'
814 [State 867] Switching from state 867 to state 0
Copied 34928 (count=1)
Deleting state 867 0x0x31eff470
814 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 866
>> fuzzInit: datum forking for value 867
>> fuzzInit: datum forking for value 867
814 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 867)
        (ReadLSB w32 0 v867_fuzz_symb_867)))
    state 868 with condition (Not (Eq false
         (Eq (w32 867)
             (ReadLSB w32 0 v867_fuzz_symb_867))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-867-8048a0e
Size=2 Low=0 splitIndex=1 high=1
814 [State 0] Switching from state 0 to state 868
Copied 34928 (count=1)
Finalizing TB execution 868
s2e_dummyMainFunction
tcg-llvm-tb-867-8048a0e
814 [State 868] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 867 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
815 [State 868] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77173: 00 00             add [eax], al           
815 [State 868] Terminating state 868 with message 'eliminated a state with an impossible first instruction'
815 [State 868] Switching from state 868 to state 0
Copied 34928 (count=1)
Deleting state 868 0x0x31eff470
Firing timer event
815 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 867
>> fuzzInit: datum forking for value 868
>> fuzzInit: datum forking for value 868
815 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 868)
        (ReadLSB w32 0 v868_fuzz_symb_868)))
    state 869 with condition (Not (Eq false
         (Eq (w32 868)
             (ReadLSB w32 0 v868_fuzz_symb_868))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-868-8048a0e
Size=2 Low=0 splitIndex=1 high=1
815 [State 0] Switching from state 0 to state 869
Copied 34928 (count=1)
Finalizing TB execution 869
s2e_dummyMainFunction
tcg-llvm-tb-868-8048a0e
815 [State 869] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 868 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
816 [State 869] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77174: 00 00             add [eax], al           
816 [State 869] Terminating state 869 with message 'eliminated a state with an impossible first instruction'
816 [State 869] Switching from state 869 to state 0
Copied 34928 (count=1)
Deleting state 869 0x0x31eff470
Firing timer event
816 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 868
>> fuzzInit: datum forking for value 869
>> fuzzInit: datum forking for value 869
816 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 869)
        (ReadLSB w32 0 v869_fuzz_symb_869)))
    state 870 with condition (Not (Eq false
         (Eq (w32 869)
             (ReadLSB w32 0 v869_fuzz_symb_869))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-869-8048a0e
Size=2 Low=0 splitIndex=1 high=1
816 [State 0] Switching from state 0 to state 870
Copied 34928 (count=1)
Finalizing TB execution 870
s2e_dummyMainFunction
tcg-llvm-tb-869-8048a0e
817 [State 870] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 869 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
817 [State 870] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77175: 00 00             add [eax], al           
817 [State 870] Terminating state 870 with message 'eliminated a state with an impossible first instruction'
817 [State 870] Switching from state 870 to state 0
Copied 34928 (count=1)
Deleting state 870 0x0x31eff470
Firing timer event
817 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 869
>> fuzzInit: datum forking for value 870
>> fuzzInit: datum forking for value 870
817 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 870)
        (ReadLSB w32 0 v870_fuzz_symb_870)))
    state 871 with condition (Not (Eq false
         (Eq (w32 870)
             (ReadLSB w32 0 v870_fuzz_symb_870))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-870-8048a0e
Size=2 Low=0 splitIndex=1 high=1
817 [State 0] Switching from state 0 to state 871
Copied 34928 (count=1)
Finalizing TB execution 871
s2e_dummyMainFunction
tcg-llvm-tb-870-8048a0e
817 [State 871] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 870 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
818 [State 871] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77176: 00 00             add [eax], al           
818 [State 871] Terminating state 871 with message 'eliminated a state with an impossible first instruction'
818 [State 871] Switching from state 871 to state 0
Copied 34928 (count=1)
Deleting state 871 0x0x31eff470
Firing timer event
818 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 870
>> fuzzInit: datum forking for value 871
>> fuzzInit: datum forking for value 871
818 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 871)
        (ReadLSB w32 0 v871_fuzz_symb_871)))
    state 872 with condition (Not (Eq false
         (Eq (w32 871)
             (ReadLSB w32 0 v871_fuzz_symb_871))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-871-8048a0e
Size=2 Low=0 splitIndex=1 high=1
818 [State 0] Switching from state 0 to state 872
Copied 34928 (count=1)
Finalizing TB execution 872
s2e_dummyMainFunction
tcg-llvm-tb-871-8048a0e
818 [State 872] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 871 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
818 [State 872] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77177: 00 00             add [eax], al           
818 [State 872] Terminating state 872 with message 'eliminated a state with an impossible first instruction'
818 [State 872] Switching from state 872 to state 0
Copied 34928 (count=1)
Deleting state 872 0x0x31eff470
819 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 871
>> fuzzInit: datum forking for value 872
>> fuzzInit: datum forking for value 872
819 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 872)
        (ReadLSB w32 0 v872_fuzz_symb_872)))
    state 873 with condition (Not (Eq false
         (Eq (w32 872)
             (ReadLSB w32 0 v872_fuzz_symb_872))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-872-8048a0e
Size=2 Low=0 splitIndex=1 high=1
819 [State 0] Switching from state 0 to state 873
Copied 34928 (count=1)
Finalizing TB execution 873
s2e_dummyMainFunction
tcg-llvm-tb-872-8048a0e
Firing timer event
819 [State 873] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 872 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
819 [State 873] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77178: 00 00             add [eax], al           
819 [State 873] Terminating state 873 with message 'eliminated a state with an impossible first instruction'
819 [State 873] Switching from state 873 to state 0
Copied 34928 (count=1)
Deleting state 873 0x0x31eff470
820 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 872
>> fuzzInit: datum forking for value 873
>> fuzzInit: datum forking for value 873
820 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 873)
        (ReadLSB w32 0 v873_fuzz_symb_873)))
    state 874 with condition (Not (Eq false
         (Eq (w32 873)
             (ReadLSB w32 0 v873_fuzz_symb_873))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-873-8048a0e
Size=2 Low=0 splitIndex=1 high=1
820 [State 0] Switching from state 0 to state 874
Copied 34928 (count=1)
Finalizing TB execution 874
s2e_dummyMainFunction
tcg-llvm-tb-873-8048a0e
Firing timer event
820 [State 874] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 873 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
820 [State 874] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77179: 00 00             add [eax], al           
820 [State 874] Terminating state 874 with message 'eliminated a state with an impossible first instruction'
820 [State 874] Switching from state 874 to state 0
Copied 34928 (count=1)
Deleting state 874 0x0x31eff470
821 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 873
>> fuzzInit: datum forking for value 874
>> fuzzInit: datum forking for value 874
821 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 874)
        (ReadLSB w32 0 v874_fuzz_symb_874)))
    state 875 with condition (Not (Eq false
         (Eq (w32 874)
             (ReadLSB w32 0 v874_fuzz_symb_874))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-874-8048a0e
Size=2 Low=0 splitIndex=1 high=1
821 [State 0] Switching from state 0 to state 875
Copied 34928 (count=1)
Finalizing TB execution 875
s2e_dummyMainFunction
tcg-llvm-tb-874-8048a0e
Firing timer event
821 [State 875] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 874 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
821 [State 875] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7717a: 00 00             add [eax], al           
821 [State 875] Terminating state 875 with message 'eliminated a state with an impossible first instruction'
821 [State 875] Switching from state 875 to state 0
Copied 34928 (count=1)
Deleting state 875 0x0x31eff470
822 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 874
>> fuzzInit: datum forking for value 875
>> fuzzInit: datum forking for value 875
822 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 875)
        (ReadLSB w32 0 v875_fuzz_symb_875)))
    state 876 with condition (Not (Eq false
         (Eq (w32 875)
             (ReadLSB w32 0 v875_fuzz_symb_875))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-875-8048a0e
Size=2 Low=0 splitIndex=1 high=1
822 [State 0] Switching from state 0 to state 876
Copied 34928 (count=1)
Finalizing TB execution 876
s2e_dummyMainFunction
tcg-llvm-tb-875-8048a0e
Firing timer event
822 [State 876] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 875 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
822 [State 876] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7717b: 00 00             add [eax], al           
822 [State 876] Terminating state 876 with message 'eliminated a state with an impossible first instruction'
822 [State 876] Switching from state 876 to state 0
Copied 34928 (count=1)
Deleting state 876 0x0x31eff470
823 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 875
>> fuzzInit: datum forking for value 876
>> fuzzInit: datum forking for value 876
823 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 876)
        (ReadLSB w32 0 v876_fuzz_symb_876)))
    state 877 with condition (Not (Eq false
         (Eq (w32 876)
             (ReadLSB w32 0 v876_fuzz_symb_876))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-876-8048a0e
Size=2 Low=0 splitIndex=1 high=1
823 [State 0] Switching from state 0 to state 877
Copied 34928 (count=1)
Finalizing TB execution 877
s2e_dummyMainFunction
tcg-llvm-tb-876-8048a0e
Firing timer event
823 [State 877] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 876 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
823 [State 877] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7717c: 00 00             add [eax], al           
823 [State 877] Terminating state 877 with message 'eliminated a state with an impossible first instruction'
823 [State 877] Switching from state 877 to state 0
Copied 34928 (count=1)
Deleting state 877 0x0x31eff470
824 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 876
>> fuzzInit: datum forking for value 877
>> fuzzInit: datum forking for value 877
824 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 877)
        (ReadLSB w32 0 v877_fuzz_symb_877)))
    state 878 with condition (Not (Eq false
         (Eq (w32 877)
             (ReadLSB w32 0 v877_fuzz_symb_877))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-877-8048a0e
Size=2 Low=0 splitIndex=1 high=1
824 [State 0] Switching from state 0 to state 878
Copied 34928 (count=1)
Finalizing TB execution 878
s2e_dummyMainFunction
tcg-llvm-tb-877-8048a0e
Firing timer event
824 [State 878] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 877 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
824 [State 878] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7717d: 00 00             add [eax], al           
824 [State 878] Terminating state 878 with message 'eliminated a state with an impossible first instruction'
824 [State 878] Switching from state 878 to state 0
Copied 34928 (count=1)
Deleting state 878 0x0x31eff470
825 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 877
>> fuzzInit: datum forking for value 878
>> fuzzInit: datum forking for value 878
825 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 878)
        (ReadLSB w32 0 v878_fuzz_symb_878)))
    state 879 with condition (Not (Eq false
         (Eq (w32 878)
             (ReadLSB w32 0 v878_fuzz_symb_878))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-878-8048a0e
Size=2 Low=0 splitIndex=1 high=1
825 [State 0] Switching from state 0 to state 879
Copied 34928 (count=1)
Finalizing TB execution 879
s2e_dummyMainFunction
tcg-llvm-tb-878-8048a0e
825 [State 879] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 878 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
825 [State 879] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7717e: 00 00             add [eax], al           
825 [State 879] Terminating state 879 with message 'eliminated a state with an impossible first instruction'
825 [State 879] Switching from state 879 to state 0
Copied 34928 (count=1)
Deleting state 879 0x0x31eff470
826 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 878
>> fuzzInit: datum forking for value 879
>> fuzzInit: datum forking for value 879
826 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 879)
        (ReadLSB w32 0 v879_fuzz_symb_879)))
    state 880 with condition (Not (Eq false
         (Eq (w32 879)
             (ReadLSB w32 0 v879_fuzz_symb_879))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-879-8048a0e
Size=2 Low=0 splitIndex=1 high=1
826 [State 0] Switching from state 0 to state 880
Copied 34928 (count=1)
Finalizing TB execution 880
s2e_dummyMainFunction
tcg-llvm-tb-879-8048a0e
826 [State 880] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 879 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
826 [State 880] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7717f: 00 00             add [eax], al           
826 [State 880] Terminating state 880 with message 'eliminated a state with an impossible first instruction'
826 [State 880] Switching from state 880 to state 0
Copied 34928 (count=1)
Deleting state 880 0x0x31eff470
826 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 879
>> fuzzInit: datum forking for value 880
>> fuzzInit: datum forking for value 880
827 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 880)
        (ReadLSB w32 0 v880_fuzz_symb_880)))
    state 881 with condition (Not (Eq false
         (Eq (w32 880)
             (ReadLSB w32 0 v880_fuzz_symb_880))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-880-8048a0e
Size=2 Low=0 splitIndex=1 high=1
827 [State 0] Switching from state 0 to state 881
Copied 34928 (count=1)
Finalizing TB execution 881
s2e_dummyMainFunction
tcg-llvm-tb-880-8048a0e
827 [State 881] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 880 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
827 [State 881] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77180: 00 00             add [eax], al           
827 [State 881] Terminating state 881 with message 'eliminated a state with an impossible first instruction'
827 [State 881] Switching from state 881 to state 0
Copied 34928 (count=1)
Deleting state 881 0x0x31eff470
Firing timer event
827 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 880
>> fuzzInit: datum forking for value 881
>> fuzzInit: datum forking for value 881
828 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 881)
        (ReadLSB w32 0 v881_fuzz_symb_881)))
    state 882 with condition (Not (Eq false
         (Eq (w32 881)
             (ReadLSB w32 0 v881_fuzz_symb_881))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-881-8048a0e
Size=2 Low=0 splitIndex=1 high=1
828 [State 0] Switching from state 0 to state 882
Copied 34928 (count=1)
Finalizing TB execution 882
s2e_dummyMainFunction
tcg-llvm-tb-881-8048a0e
828 [State 882] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 881 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
828 [State 882] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77181: 00 00             add [eax], al           
828 [State 882] Terminating state 882 with message 'eliminated a state with an impossible first instruction'
828 [State 882] Switching from state 882 to state 0
Copied 34928 (count=1)
Deleting state 882 0x0x31eff470
829 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 881
>> fuzzInit: datum forking for value 882
>> fuzzInit: datum forking for value 882
829 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 882)
        (ReadLSB w32 0 v882_fuzz_symb_882)))
    state 883 with condition (Not (Eq false
         (Eq (w32 882)
             (ReadLSB w32 0 v882_fuzz_symb_882))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-882-8048a0e
Size=2 Low=0 splitIndex=1 high=1
829 [State 0] Switching from state 0 to state 883
Copied 34928 (count=1)
Finalizing TB execution 883
s2e_dummyMainFunction
tcg-llvm-tb-882-8048a0e
Firing timer event
829 [State 883] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 882 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
830 [State 883] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77182: 00 00             add [eax], al           
830 [State 883] Terminating state 883 with message 'eliminated a state with an impossible first instruction'
830 [State 883] Switching from state 883 to state 0
Copied 34928 (count=1)
Deleting state 883 0x0x31eff470
830 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 882
>> fuzzInit: datum forking for value 883
>> fuzzInit: datum forking for value 883
830 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 883)
        (ReadLSB w32 0 v883_fuzz_symb_883)))
    state 884 with condition (Not (Eq false
         (Eq (w32 883)
             (ReadLSB w32 0 v883_fuzz_symb_883))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-883-8048a0e
Size=2 Low=0 splitIndex=1 high=1
830 [State 0] Switching from state 0 to state 884
Copied 34928 (count=1)
Finalizing TB execution 884
s2e_dummyMainFunction
tcg-llvm-tb-883-8048a0e
Firing timer event
831 [State 884] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 883 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
831 [State 884] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77183: 00 00             add [eax], al           
831 [State 884] Terminating state 884 with message 'eliminated a state with an impossible first instruction'
831 [State 884] Switching from state 884 to state 0
Copied 34928 (count=1)
Deleting state 884 0x0x32bdfa40
831 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 883
>> fuzzInit: datum forking for value 884
>> fuzzInit: datum forking for value 884
832 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 884)
        (ReadLSB w32 0 v884_fuzz_symb_884)))
    state 885 with condition (Not (Eq false
         (Eq (w32 884)
             (ReadLSB w32 0 v884_fuzz_symb_884))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-884-8048a0e
Size=2 Low=0 splitIndex=1 high=1
832 [State 0] Switching from state 0 to state 885
Copied 34928 (count=1)
Finalizing TB execution 885
s2e_dummyMainFunction
tcg-llvm-tb-884-8048a0e
Firing timer event
832 [State 885] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 884 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
832 [State 885] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77184: 00 00             add [eax], al           
832 [State 885] Terminating state 885 with message 'eliminated a state with an impossible first instruction'
832 [State 885] Switching from state 885 to state 0
Copied 34928 (count=1)
Deleting state 885 0x0x32bdfa40
832 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 884
>> fuzzInit: datum forking for value 885
>> fuzzInit: datum forking for value 885
833 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 885)
        (ReadLSB w32 0 v885_fuzz_symb_885)))
    state 886 with condition (Not (Eq false
         (Eq (w32 885)
             (ReadLSB w32 0 v885_fuzz_symb_885))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-885-8048a0e
Size=2 Low=0 splitIndex=1 high=1
833 [State 0] Switching from state 0 to state 886
Copied 34928 (count=1)
Finalizing TB execution 886
s2e_dummyMainFunction
tcg-llvm-tb-885-8048a0e
Firing timer event
833 [State 886] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 885 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
833 [State 886] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77185: 00 00             add [eax], al           
833 [State 886] Terminating state 886 with message 'eliminated a state with an impossible first instruction'
833 [State 886] Switching from state 886 to state 0
Copied 34928 (count=1)
Deleting state 886 0x0x32bdfa40
833 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 885
>> fuzzInit: datum forking for value 886
>> fuzzInit: datum forking for value 886
834 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 886)
        (ReadLSB w32 0 v886_fuzz_symb_886)))
    state 887 with condition (Not (Eq false
         (Eq (w32 886)
             (ReadLSB w32 0 v886_fuzz_symb_886))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-886-8048a0e
Size=2 Low=0 splitIndex=1 high=1
834 [State 0] Switching from state 0 to state 887
Copied 34928 (count=1)
Finalizing TB execution 887
s2e_dummyMainFunction
tcg-llvm-tb-886-8048a0e
Firing timer event
834 [State 887] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 886 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
834 [State 887] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77186: 00 00             add [eax], al           
834 [State 887] Terminating state 887 with message 'eliminated a state with an impossible first instruction'
834 [State 887] Switching from state 887 to state 0
Copied 34928 (count=1)
Deleting state 887 0x0x32bf8800
834 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 886
>> fuzzInit: datum forking for value 887
>> fuzzInit: datum forking for value 887
835 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 887)
        (ReadLSB w32 0 v887_fuzz_symb_887)))
    state 888 with condition (Not (Eq false
         (Eq (w32 887)
             (ReadLSB w32 0 v887_fuzz_symb_887))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-887-8048a0e
Size=2 Low=0 splitIndex=1 high=1
835 [State 0] Switching from state 0 to state 888
Copied 34928 (count=1)
Finalizing TB execution 888
s2e_dummyMainFunction
tcg-llvm-tb-887-8048a0e
Firing timer event
835 [State 888] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 887 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
835 [State 888] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77187: 00 00             add [eax], al           
835 [State 888] Terminating state 888 with message 'eliminated a state with an impossible first instruction'
835 [State 888] Switching from state 888 to state 0
Copied 34928 (count=1)
Deleting state 888 0x0x32bf8800
836 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 887
>> fuzzInit: datum forking for value 888
>> fuzzInit: datum forking for value 888
836 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 888)
        (ReadLSB w32 0 v888_fuzz_symb_888)))
    state 889 with condition (Not (Eq false
         (Eq (w32 888)
             (ReadLSB w32 0 v888_fuzz_symb_888))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-888-8048a0e
Size=2 Low=0 splitIndex=1 high=1
836 [State 0] Switching from state 0 to state 889
Copied 34928 (count=1)
Finalizing TB execution 889
s2e_dummyMainFunction
tcg-llvm-tb-888-8048a0e
Firing timer event
836 [State 889] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 888 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
836 [State 889] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77188: 00 00             add [eax], al           
836 [State 889] Terminating state 889 with message 'eliminated a state with an impossible first instruction'
836 [State 889] Switching from state 889 to state 0
Copied 34928 (count=1)
Deleting state 889 0x0x32bb3a90
837 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 888
>> fuzzInit: datum forking for value 889
>> fuzzInit: datum forking for value 889
837 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 889)
        (ReadLSB w32 0 v889_fuzz_symb_889)))
    state 890 with condition (Not (Eq false
         (Eq (w32 889)
             (ReadLSB w32 0 v889_fuzz_symb_889))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-889-8048a0e
Size=2 Low=0 splitIndex=1 high=1
837 [State 0] Switching from state 0 to state 890
Copied 34928 (count=1)
Finalizing TB execution 890
s2e_dummyMainFunction
tcg-llvm-tb-889-8048a0e
Firing timer event
837 [State 890] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 889 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
837 [State 890] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77189: 00 00             add [eax], al           
837 [State 890] Terminating state 890 with message 'eliminated a state with an impossible first instruction'
837 [State 890] Switching from state 890 to state 0
Copied 34928 (count=1)
Deleting state 890 0x0x32bbc490
838 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 889
>> fuzzInit: datum forking for value 890
>> fuzzInit: datum forking for value 890
838 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 890)
        (ReadLSB w32 0 v890_fuzz_symb_890)))
    state 891 with condition (Not (Eq false
         (Eq (w32 890)
             (ReadLSB w32 0 v890_fuzz_symb_890))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-890-8048a0e
Size=2 Low=0 splitIndex=1 high=1
838 [State 0] Switching from state 0 to state 891
Copied 34928 (count=1)
Finalizing TB execution 891
s2e_dummyMainFunction
tcg-llvm-tb-890-8048a0e
Firing timer event
838 [State 891] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 890 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
839 [State 891] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7718a: 00 00             add [eax], al           
839 [State 891] Terminating state 891 with message 'eliminated a state with an impossible first instruction'
839 [State 891] Switching from state 891 to state 0
Copied 34928 (count=1)
Deleting state 891 0x0x32bbc490
839 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 890
>> fuzzInit: datum forking for value 891
>> fuzzInit: datum forking for value 891
839 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 891)
        (ReadLSB w32 0 v891_fuzz_symb_891)))
    state 892 with condition (Not (Eq false
         (Eq (w32 891)
             (ReadLSB w32 0 v891_fuzz_symb_891))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-891-8048a0e
Size=2 Low=0 splitIndex=1 high=1
839 [State 0] Switching from state 0 to state 892
Copied 34928 (count=1)
Finalizing TB execution 892
s2e_dummyMainFunction
tcg-llvm-tb-891-8048a0e
Firing timer event
839 [State 892] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 891 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
840 [State 892] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7718b: 00 00             add [eax], al           
840 [State 892] Terminating state 892 with message 'eliminated a state with an impossible first instruction'
840 [State 892] Switching from state 892 to state 0
Copied 34928 (count=1)
Deleting state 892 0x0x32bbc490
840 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 891
>> fuzzInit: datum forking for value 892
>> fuzzInit: datum forking for value 892
840 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 892)
        (ReadLSB w32 0 v892_fuzz_symb_892)))
    state 893 with condition (Not (Eq false
         (Eq (w32 892)
             (ReadLSB w32 0 v892_fuzz_symb_892))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-892-8048a0e
Size=2 Low=0 splitIndex=1 high=1
840 [State 0] Switching from state 0 to state 893
Copied 34928 (count=1)
Finalizing TB execution 893
s2e_dummyMainFunction
tcg-llvm-tb-892-8048a0e
Firing timer event
840 [State 893] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 892 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
841 [State 893] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7718c: 00 00             add [eax], al           
841 [State 893] Terminating state 893 with message 'eliminated a state with an impossible first instruction'
841 [State 893] Switching from state 893 to state 0
Copied 34928 (count=1)
Deleting state 893 0x0x32bbc490
841 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 892
>> fuzzInit: datum forking for value 893
>> fuzzInit: datum forking for value 893
841 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 893)
        (ReadLSB w32 0 v893_fuzz_symb_893)))
    state 894 with condition (Not (Eq false
         (Eq (w32 893)
             (ReadLSB w32 0 v893_fuzz_symb_893))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-893-8048a0e
Size=2 Low=0 splitIndex=1 high=1
841 [State 0] Switching from state 0 to state 894
Copied 34928 (count=1)
Finalizing TB execution 894
s2e_dummyMainFunction
tcg-llvm-tb-893-8048a0e
Firing timer event
841 [State 894] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 893 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
842 [State 894] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7718d: 00 00             add [eax], al           
842 [State 894] Terminating state 894 with message 'eliminated a state with an impossible first instruction'
842 [State 894] Switching from state 894 to state 0
Copied 34928 (count=1)
Deleting state 894 0x0x32bbc490
842 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 893
>> fuzzInit: datum forking for value 894
>> fuzzInit: datum forking for value 894
842 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 894)
        (ReadLSB w32 0 v894_fuzz_symb_894)))
    state 895 with condition (Not (Eq false
         (Eq (w32 894)
             (ReadLSB w32 0 v894_fuzz_symb_894))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-894-8048a0e
Size=2 Low=0 splitIndex=1 high=1
842 [State 0] Switching from state 0 to state 895
Copied 34928 (count=1)
Finalizing TB execution 895
s2e_dummyMainFunction
tcg-llvm-tb-894-8048a0e
Firing timer event
842 [State 895] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 894 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
843 [State 895] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7718e: 00 00             add [eax], al           
843 [State 895] Terminating state 895 with message 'eliminated a state with an impossible first instruction'
843 [State 895] Switching from state 895 to state 0
Copied 34928 (count=1)
Deleting state 895 0x0x32bbc490
843 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 894
>> fuzzInit: datum forking for value 895
>> fuzzInit: datum forking for value 895
843 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 895)
        (ReadLSB w32 0 v895_fuzz_symb_895)))
    state 896 with condition (Not (Eq false
         (Eq (w32 895)
             (ReadLSB w32 0 v895_fuzz_symb_895))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-895-8048a0e
Size=2 Low=0 splitIndex=1 high=1
843 [State 0] Switching from state 0 to state 896
Copied 34928 (count=1)
Finalizing TB execution 896
s2e_dummyMainFunction
tcg-llvm-tb-895-8048a0e
Firing timer event
844 [State 896] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 895 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
844 [State 896] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7718f: 00 00             add [eax], al           
844 [State 896] Terminating state 896 with message 'eliminated a state with an impossible first instruction'
844 [State 896] Switching from state 896 to state 0
Copied 34928 (count=1)
Deleting state 896 0x0x32bbc490
844 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 895
>> fuzzInit: datum forking for value 896
>> fuzzInit: datum forking for value 896
844 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 896)
        (ReadLSB w32 0 v896_fuzz_symb_896)))
    state 897 with condition (Not (Eq false
         (Eq (w32 896)
             (ReadLSB w32 0 v896_fuzz_symb_896))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-896-8048a0e
Size=2 Low=0 splitIndex=1 high=1
844 [State 0] Switching from state 0 to state 897
Copied 34928 (count=1)
Finalizing TB execution 897
s2e_dummyMainFunction
tcg-llvm-tb-896-8048a0e
Firing timer event
845 [State 897] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 896 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
845 [State 897] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77190: 00 00             add [eax], al           
845 [State 897] Terminating state 897 with message 'eliminated a state with an impossible first instruction'
845 [State 897] Switching from state 897 to state 0
Copied 34928 (count=1)
Deleting state 897 0x0x32bbc490
845 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 896
>> fuzzInit: datum forking for value 897
>> fuzzInit: datum forking for value 897
845 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 897)
        (ReadLSB w32 0 v897_fuzz_symb_897)))
    state 898 with condition (Not (Eq false
         (Eq (w32 897)
             (ReadLSB w32 0 v897_fuzz_symb_897))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-897-8048a0e
Size=2 Low=0 splitIndex=1 high=1
845 [State 0] Switching from state 0 to state 898
Copied 34928 (count=1)
Finalizing TB execution 898
s2e_dummyMainFunction
tcg-llvm-tb-897-8048a0e
Firing timer event
845 [State 898] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 897 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
846 [State 898] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77191: 00 00             add [eax], al           
846 [State 898] Terminating state 898 with message 'eliminated a state with an impossible first instruction'
846 [State 898] Switching from state 898 to state 0
Copied 34928 (count=1)
Deleting state 898 0x0x32bbc490
846 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 897
>> fuzzInit: datum forking for value 898
>> fuzzInit: datum forking for value 898
846 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 898)
        (ReadLSB w32 0 v898_fuzz_symb_898)))
    state 899 with condition (Not (Eq false
         (Eq (w32 898)
             (ReadLSB w32 0 v898_fuzz_symb_898))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-898-8048a0e
Size=2 Low=0 splitIndex=1 high=1
846 [State 0] Switching from state 0 to state 899
Copied 34928 (count=1)
Finalizing TB execution 899
s2e_dummyMainFunction
tcg-llvm-tb-898-8048a0e
Firing timer event
847 [State 899] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 898 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
847 [State 899] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77192: 00 00             add [eax], al           
847 [State 899] Terminating state 899 with message 'eliminated a state with an impossible first instruction'
847 [State 899] Switching from state 899 to state 0
Copied 34928 (count=1)
Deleting state 899 0x0x32bbc490
847 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 898
>> fuzzInit: datum forking for value 899
>> fuzzInit: datum forking for value 899
847 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 899)
        (ReadLSB w32 0 v899_fuzz_symb_899)))
    state 900 with condition (Not (Eq false
         (Eq (w32 899)
             (ReadLSB w32 0 v899_fuzz_symb_899))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-899-8048a0e
Size=2 Low=0 splitIndex=1 high=1
847 [State 0] Switching from state 0 to state 900
Copied 34928 (count=1)
Finalizing TB execution 900
s2e_dummyMainFunction
tcg-llvm-tb-899-8048a0e
Firing timer event
847 [State 900] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 899 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
848 [State 900] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77193: 00 00             add [eax], al           
848 [State 900] Terminating state 900 with message 'eliminated a state with an impossible first instruction'
848 [State 900] Switching from state 900 to state 0
Copied 34928 (count=1)
Deleting state 900 0x0x32bbc490
848 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 899
>> fuzzInit: datum forking for value 900
>> fuzzInit: datum forking for value 900
848 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 900)
        (ReadLSB w32 0 v900_fuzz_symb_900)))
    state 901 with condition (Not (Eq false
         (Eq (w32 900)
             (ReadLSB w32 0 v900_fuzz_symb_900))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-900-8048a0e
Size=2 Low=0 splitIndex=1 high=1
848 [State 0] Switching from state 0 to state 901
Copied 34928 (count=1)
Finalizing TB execution 901
s2e_dummyMainFunction
tcg-llvm-tb-900-8048a0e
Firing timer event
849 [State 901] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 900 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
849 [State 901] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77194: 00 00             add [eax], al           
849 [State 901] Terminating state 901 with message 'eliminated a state with an impossible first instruction'
849 [State 901] Switching from state 901 to state 0
Copied 34928 (count=1)
Deleting state 901 0x0x32bbc490
849 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 900
>> fuzzInit: datum forking for value 901
>> fuzzInit: datum forking for value 901
849 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 901)
        (ReadLSB w32 0 v901_fuzz_symb_901)))
    state 902 with condition (Not (Eq false
         (Eq (w32 901)
             (ReadLSB w32 0 v901_fuzz_symb_901))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-901-8048a0e
Size=2 Low=0 splitIndex=1 high=1
849 [State 0] Switching from state 0 to state 902
Copied 34928 (count=1)
Finalizing TB execution 902
s2e_dummyMainFunction
tcg-llvm-tb-901-8048a0e
Firing timer event
850 [State 902] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 901 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
850 [State 902] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77195: 00 00             add [eax], al           
850 [State 902] Terminating state 902 with message 'eliminated a state with an impossible first instruction'
850 [State 902] Switching from state 902 to state 0
Copied 34928 (count=1)
Deleting state 902 0x0x32bbc490
850 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 901
>> fuzzInit: datum forking for value 902
>> fuzzInit: datum forking for value 902
850 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 902)
        (ReadLSB w32 0 v902_fuzz_symb_902)))
    state 903 with condition (Not (Eq false
         (Eq (w32 902)
             (ReadLSB w32 0 v902_fuzz_symb_902))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-902-8048a0e
Size=2 Low=0 splitIndex=1 high=1
850 [State 0] Switching from state 0 to state 903
Copied 34928 (count=1)
Finalizing TB execution 903
s2e_dummyMainFunction
tcg-llvm-tb-902-8048a0e
Firing timer event
851 [State 903] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 902 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
851 [State 903] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77196: 00 00             add [eax], al           
851 [State 903] Terminating state 903 with message 'eliminated a state with an impossible first instruction'
851 [State 903] Switching from state 903 to state 0
Copied 34928 (count=1)
Deleting state 903 0x0x32bbc490
851 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 902
>> fuzzInit: datum forking for value 903
>> fuzzInit: datum forking for value 903
851 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 903)
        (ReadLSB w32 0 v903_fuzz_symb_903)))
    state 904 with condition (Not (Eq false
         (Eq (w32 903)
             (ReadLSB w32 0 v903_fuzz_symb_903))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-903-8048a0e
Size=2 Low=0 splitIndex=1 high=1
851 [State 0] Switching from state 0 to state 904
Copied 34928 (count=1)
Finalizing TB execution 904
s2e_dummyMainFunction
tcg-llvm-tb-903-8048a0e
Firing timer event
852 [State 904] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 903 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
852 [State 904] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77197: 00 00             add [eax], al           
852 [State 904] Terminating state 904 with message 'eliminated a state with an impossible first instruction'
852 [State 904] Switching from state 904 to state 0
Copied 34928 (count=1)
Deleting state 904 0x0x330d1960
852 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 903
>> fuzzInit: datum forking for value 904
>> fuzzInit: datum forking for value 904
853 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 904)
        (ReadLSB w32 0 v904_fuzz_symb_904)))
    state 905 with condition (Not (Eq false
         (Eq (w32 904)
             (ReadLSB w32 0 v904_fuzz_symb_904))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-904-8048a0e
Size=2 Low=0 splitIndex=1 high=1
853 [State 0] Switching from state 0 to state 905
Copied 34928 (count=1)
Finalizing TB execution 905
s2e_dummyMainFunction
tcg-llvm-tb-904-8048a0e
Firing timer event
853 [State 905] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 904 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
853 [State 905] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77198: 00 00             add [eax], al           
853 [State 905] Terminating state 905 with message 'eliminated a state with an impossible first instruction'
853 [State 905] Switching from state 905 to state 0
Copied 34928 (count=1)
Deleting state 905 0x0x330d1960
853 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 904
>> fuzzInit: datum forking for value 905
>> fuzzInit: datum forking for value 905
854 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 905)
        (ReadLSB w32 0 v905_fuzz_symb_905)))
    state 906 with condition (Not (Eq false
         (Eq (w32 905)
             (ReadLSB w32 0 v905_fuzz_symb_905))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-905-8048a0e
Size=2 Low=0 splitIndex=1 high=1
854 [State 0] Switching from state 0 to state 906
Copied 34928 (count=1)
Finalizing TB execution 906
s2e_dummyMainFunction
tcg-llvm-tb-905-8048a0e
Firing timer event
854 [State 906] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 905 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
854 [State 906] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77199: 00 00             add [eax], al           
854 [State 906] Terminating state 906 with message 'eliminated a state with an impossible first instruction'
854 [State 906] Switching from state 906 to state 0
Copied 34928 (count=1)
Deleting state 906 0x0x330d1960
854 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 905
>> fuzzInit: datum forking for value 906
>> fuzzInit: datum forking for value 906
855 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 906)
        (ReadLSB w32 0 v906_fuzz_symb_906)))
    state 907 with condition (Not (Eq false
         (Eq (w32 906)
             (ReadLSB w32 0 v906_fuzz_symb_906))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-906-8048a0e
Size=2 Low=0 splitIndex=1 high=1
855 [State 0] Switching from state 0 to state 907
Copied 34928 (count=1)
Finalizing TB execution 907
s2e_dummyMainFunction
tcg-llvm-tb-906-8048a0e
Firing timer event
855 [State 907] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 906 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
855 [State 907] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7719a: 00 00             add [eax], al           
855 [State 907] Terminating state 907 with message 'eliminated a state with an impossible first instruction'
855 [State 907] Switching from state 907 to state 0
Copied 34928 (count=1)
Deleting state 907 0x0x330d1960
855 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 906
>> fuzzInit: datum forking for value 907
>> fuzzInit: datum forking for value 907
856 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 907)
        (ReadLSB w32 0 v907_fuzz_symb_907)))
    state 908 with condition (Not (Eq false
         (Eq (w32 907)
             (ReadLSB w32 0 v907_fuzz_symb_907))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-907-8048a0e
Size=2 Low=0 splitIndex=1 high=1
856 [State 0] Switching from state 0 to state 908
Copied 34928 (count=1)
Finalizing TB execution 908
s2e_dummyMainFunction
tcg-llvm-tb-907-8048a0e
Firing timer event
856 [State 908] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 907 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
856 [State 908] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7719b: 00 00             add [eax], al           
856 [State 908] Terminating state 908 with message 'eliminated a state with an impossible first instruction'
856 [State 908] Switching from state 908 to state 0
Copied 34928 (count=1)
Deleting state 908 0x0x330d1960
856 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 907
>> fuzzInit: datum forking for value 908
>> fuzzInit: datum forking for value 908
857 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 908)
        (ReadLSB w32 0 v908_fuzz_symb_908)))
    state 909 with condition (Not (Eq false
         (Eq (w32 908)
             (ReadLSB w32 0 v908_fuzz_symb_908))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-908-8048a0e
Size=2 Low=0 splitIndex=1 high=1
857 [State 0] Switching from state 0 to state 909
Copied 34928 (count=1)
Finalizing TB execution 909
s2e_dummyMainFunction
tcg-llvm-tb-908-8048a0e
Firing timer event
857 [State 909] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 908 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
857 [State 909] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7719c: 00 00             add [eax], al           
857 [State 909] Terminating state 909 with message 'eliminated a state with an impossible first instruction'
857 [State 909] Switching from state 909 to state 0
Copied 34928 (count=1)
Deleting state 909 0x0x330d1960
857 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 908
>> fuzzInit: datum forking for value 909
>> fuzzInit: datum forking for value 909
858 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 909)
        (ReadLSB w32 0 v909_fuzz_symb_909)))
    state 910 with condition (Not (Eq false
         (Eq (w32 909)
             (ReadLSB w32 0 v909_fuzz_symb_909))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-909-8048a0e
Size=2 Low=0 splitIndex=1 high=1
858 [State 0] Switching from state 0 to state 910
Copied 34928 (count=1)
Finalizing TB execution 910
s2e_dummyMainFunction
tcg-llvm-tb-909-8048a0e
Firing timer event
858 [State 910] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 909 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
858 [State 910] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7719d: 00 00             add [eax], al           
858 [State 910] Terminating state 910 with message 'eliminated a state with an impossible first instruction'
858 [State 910] Switching from state 910 to state 0
Copied 34928 (count=1)
Deleting state 910 0x0x330d1960
858 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 909
>> fuzzInit: datum forking for value 910
>> fuzzInit: datum forking for value 910
859 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 910)
        (ReadLSB w32 0 v910_fuzz_symb_910)))
    state 911 with condition (Not (Eq false
         (Eq (w32 910)
             (ReadLSB w32 0 v910_fuzz_symb_910))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-910-8048a0e
Size=2 Low=0 splitIndex=1 high=1
859 [State 0] Switching from state 0 to state 911
Copied 34928 (count=1)
Finalizing TB execution 911
s2e_dummyMainFunction
tcg-llvm-tb-910-8048a0e
Firing timer event
859 [State 911] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 910 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
859 [State 911] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7719e: 00 00             add [eax], al           
859 [State 911] Terminating state 911 with message 'eliminated a state with an impossible first instruction'
859 [State 911] Switching from state 911 to state 0
Copied 34928 (count=1)
Deleting state 911 0x0x330d1960
859 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 910
>> fuzzInit: datum forking for value 911
>> fuzzInit: datum forking for value 911
860 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 911)
        (ReadLSB w32 0 v911_fuzz_symb_911)))
    state 912 with condition (Not (Eq false
         (Eq (w32 911)
             (ReadLSB w32 0 v911_fuzz_symb_911))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-911-8048a0e
Size=2 Low=0 splitIndex=1 high=1
860 [State 0] Switching from state 0 to state 912
Copied 34928 (count=1)
Finalizing TB execution 912
s2e_dummyMainFunction
tcg-llvm-tb-911-8048a0e
Firing timer event
860 [State 912] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 911 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
860 [State 912] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7719f: 00 00             add [eax], al           
860 [State 912] Terminating state 912 with message 'eliminated a state with an impossible first instruction'
860 [State 912] Switching from state 912 to state 0
Copied 34928 (count=1)
Deleting state 912 0x0x330d1960
860 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 911
>> fuzzInit: datum forking for value 912
>> fuzzInit: datum forking for value 912
861 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 912)
        (ReadLSB w32 0 v912_fuzz_symb_912)))
    state 913 with condition (Not (Eq false
         (Eq (w32 912)
             (ReadLSB w32 0 v912_fuzz_symb_912))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-912-8048a0e
Size=2 Low=0 splitIndex=1 high=1
861 [State 0] Switching from state 0 to state 913
Copied 34928 (count=1)
Finalizing TB execution 913
s2e_dummyMainFunction
tcg-llvm-tb-912-8048a0e
Firing timer event
861 [State 913] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 912 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
861 [State 913] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a0: 00 00             add [eax], al           
861 [State 913] Terminating state 913 with message 'eliminated a state with an impossible first instruction'
861 [State 913] Switching from state 913 to state 0
Copied 34928 (count=1)
Deleting state 913 0x0x330d1960
861 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 912
>> fuzzInit: datum forking for value 913
>> fuzzInit: datum forking for value 913
862 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 913)
        (ReadLSB w32 0 v913_fuzz_symb_913)))
    state 914 with condition (Not (Eq false
         (Eq (w32 913)
             (ReadLSB w32 0 v913_fuzz_symb_913))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-913-8048a0e
Size=2 Low=0 splitIndex=1 high=1
862 [State 0] Switching from state 0 to state 914
Copied 34928 (count=1)
Finalizing TB execution 914
s2e_dummyMainFunction
tcg-llvm-tb-913-8048a0e
Firing timer event
862 [State 914] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 913 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
862 [State 914] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a1: 00 00             add [eax], al           
862 [State 914] Terminating state 914 with message 'eliminated a state with an impossible first instruction'
862 [State 914] Switching from state 914 to state 0
Copied 34928 (count=1)
Deleting state 914 0x0x330d1960
862 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 913
>> fuzzInit: datum forking for value 914
>> fuzzInit: datum forking for value 914
863 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 914)
        (ReadLSB w32 0 v914_fuzz_symb_914)))
    state 915 with condition (Not (Eq false
         (Eq (w32 914)
             (ReadLSB w32 0 v914_fuzz_symb_914))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-914-8048a0e
Size=2 Low=0 splitIndex=1 high=1
863 [State 0] Switching from state 0 to state 915
Copied 34928 (count=1)
Finalizing TB execution 915
s2e_dummyMainFunction
tcg-llvm-tb-914-8048a0e
863 [State 915] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 914 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
863 [State 915] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a2: 00 00             add [eax], al           
863 [State 915] Terminating state 915 with message 'eliminated a state with an impossible first instruction'
863 [State 915] Switching from state 915 to state 0
Copied 34928 (count=1)
Deleting state 915 0x0x330d1960
863 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 914
>> fuzzInit: datum forking for value 915
>> fuzzInit: datum forking for value 915
864 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 915)
        (ReadLSB w32 0 v915_fuzz_symb_915)))
    state 916 with condition (Not (Eq false
         (Eq (w32 915)
             (ReadLSB w32 0 v915_fuzz_symb_915))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-915-8048a0e
Size=2 Low=0 splitIndex=1 high=1
864 [State 0] Switching from state 0 to state 916
Copied 34928 (count=1)
Finalizing TB execution 916
s2e_dummyMainFunction
tcg-llvm-tb-915-8048a0e
864 [State 916] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 915 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
864 [State 916] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a3: 00 00             add [eax], al           
864 [State 916] Terminating state 916 with message 'eliminated a state with an impossible first instruction'
864 [State 916] Switching from state 916 to state 0
Copied 34928 (count=1)
Deleting state 916 0x0x330d1960
864 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 915
>> fuzzInit: datum forking for value 916
>> fuzzInit: datum forking for value 916
865 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 916)
        (ReadLSB w32 0 v916_fuzz_symb_916)))
    state 917 with condition (Not (Eq false
         (Eq (w32 916)
             (ReadLSB w32 0 v916_fuzz_symb_916))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-916-8048a0e
Size=2 Low=0 splitIndex=1 high=1
865 [State 0] Switching from state 0 to state 917
Copied 34928 (count=1)
Finalizing TB execution 917
s2e_dummyMainFunction
tcg-llvm-tb-916-8048a0e
865 [State 917] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 916 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
865 [State 917] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a4: 00 00             add [eax], al           
865 [State 917] Terminating state 917 with message 'eliminated a state with an impossible first instruction'
865 [State 917] Switching from state 917 to state 0
Copied 34928 (count=1)
Deleting state 917 0x0x330d1960
865 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 916
>> fuzzInit: datum forking for value 917
>> fuzzInit: datum forking for value 917
866 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 917)
        (ReadLSB w32 0 v917_fuzz_symb_917)))
    state 918 with condition (Not (Eq false
         (Eq (w32 917)
             (ReadLSB w32 0 v917_fuzz_symb_917))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-917-8048a0e
Size=2 Low=0 splitIndex=1 high=1
866 [State 0] Switching from state 0 to state 918
Copied 34928 (count=1)
Finalizing TB execution 918
s2e_dummyMainFunction
tcg-llvm-tb-917-8048a0e
866 [State 918] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 917 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
866 [State 918] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a5: 00 00             add [eax], al           
866 [State 918] Terminating state 918 with message 'eliminated a state with an impossible first instruction'
866 [State 918] Switching from state 918 to state 0
Copied 34928 (count=1)
Deleting state 918 0x0x330d1960
866 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 917
>> fuzzInit: datum forking for value 918
>> fuzzInit: datum forking for value 918
867 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 918)
        (ReadLSB w32 0 v918_fuzz_symb_918)))
    state 919 with condition (Not (Eq false
         (Eq (w32 918)
             (ReadLSB w32 0 v918_fuzz_symb_918))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-918-8048a0e
Size=2 Low=0 splitIndex=1 high=1
867 [State 0] Switching from state 0 to state 919
Copied 34928 (count=1)
Finalizing TB execution 919
s2e_dummyMainFunction
tcg-llvm-tb-918-8048a0e
867 [State 919] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 918 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
867 [State 919] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a6: 00 00             add [eax], al           
867 [State 919] Terminating state 919 with message 'eliminated a state with an impossible first instruction'
867 [State 919] Switching from state 919 to state 0
Copied 34928 (count=1)
Deleting state 919 0x0x3344dc10
867 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 918
>> fuzzInit: datum forking for value 919
>> fuzzInit: datum forking for value 919
868 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 919)
        (ReadLSB w32 0 v919_fuzz_symb_919)))
    state 920 with condition (Not (Eq false
         (Eq (w32 919)
             (ReadLSB w32 0 v919_fuzz_symb_919))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-919-8048a0e
Size=2 Low=0 splitIndex=1 high=1
868 [State 0] Switching from state 0 to state 920
Copied 34928 (count=1)
Finalizing TB execution 920
s2e_dummyMainFunction
tcg-llvm-tb-919-8048a0e
868 [State 920] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 919 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
868 [State 920] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a7: 00 00             add [eax], al           
868 [State 920] Terminating state 920 with message 'eliminated a state with an impossible first instruction'
868 [State 920] Switching from state 920 to state 0
Copied 34928 (count=1)
Deleting state 920 0x0x3344dc10
868 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 919
>> fuzzInit: datum forking for value 920
>> fuzzInit: datum forking for value 920
869 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 920)
        (ReadLSB w32 0 v920_fuzz_symb_920)))
    state 921 with condition (Not (Eq false
         (Eq (w32 920)
             (ReadLSB w32 0 v920_fuzz_symb_920))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-920-8048a0e
Size=2 Low=0 splitIndex=1 high=1
869 [State 0] Switching from state 0 to state 921
Copied 34928 (count=1)
Finalizing TB execution 921
s2e_dummyMainFunction
tcg-llvm-tb-920-8048a0e
Firing timer event
869 [State 921] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 920 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
869 [State 921] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a8: 00 00             add [eax], al           
869 [State 921] Terminating state 921 with message 'eliminated a state with an impossible first instruction'
869 [State 921] Switching from state 921 to state 0
Copied 34928 (count=1)
Deleting state 921 0x0x3344dc10
869 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 920
>> fuzzInit: datum forking for value 921
>> fuzzInit: datum forking for value 921
870 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 921)
        (ReadLSB w32 0 v921_fuzz_symb_921)))
    state 922 with condition (Not (Eq false
         (Eq (w32 921)
             (ReadLSB w32 0 v921_fuzz_symb_921))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-921-8048a0e
Size=2 Low=0 splitIndex=1 high=1
870 [State 0] Switching from state 0 to state 922
Copied 34928 (count=1)
Finalizing TB execution 922
s2e_dummyMainFunction
tcg-llvm-tb-921-8048a0e
Firing timer event
870 [State 922] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 921 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
870 [State 922] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771a9: 00 00             add [eax], al           
870 [State 922] Terminating state 922 with message 'eliminated a state with an impossible first instruction'
870 [State 922] Switching from state 922 to state 0
Copied 34928 (count=1)
Deleting state 922 0x0x3344dc10
870 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 921
>> fuzzInit: datum forking for value 922
>> fuzzInit: datum forking for value 922
871 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 922)
        (ReadLSB w32 0 v922_fuzz_symb_922)))
    state 923 with condition (Not (Eq false
         (Eq (w32 922)
             (ReadLSB w32 0 v922_fuzz_symb_922))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-922-8048a0e
Size=2 Low=0 splitIndex=1 high=1
871 [State 0] Switching from state 0 to state 923
Copied 34928 (count=1)
Finalizing TB execution 923
s2e_dummyMainFunction
tcg-llvm-tb-922-8048a0e
Firing timer event
871 [State 923] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 922 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
871 [State 923] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771aa: 00 00             add [eax], al           
871 [State 923] Terminating state 923 with message 'eliminated a state with an impossible first instruction'
871 [State 923] Switching from state 923 to state 0
Copied 34928 (count=1)
Deleting state 923 0x0x3344dc10
872 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 922
>> fuzzInit: datum forking for value 923
>> fuzzInit: datum forking for value 923
872 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 923)
        (ReadLSB w32 0 v923_fuzz_symb_923)))
    state 924 with condition (Not (Eq false
         (Eq (w32 923)
             (ReadLSB w32 0 v923_fuzz_symb_923))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-923-8048a0e
Size=2 Low=0 splitIndex=1 high=1
872 [State 0] Switching from state 0 to state 924
Copied 34928 (count=1)
Finalizing TB execution 924
s2e_dummyMainFunction
tcg-llvm-tb-923-8048a0e
Firing timer event
872 [State 924] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 923 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
872 [State 924] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ab: 00 00             add [eax], al           
872 [State 924] Terminating state 924 with message 'eliminated a state with an impossible first instruction'
872 [State 924] Switching from state 924 to state 0
Copied 34928 (count=1)
Deleting state 924 0x0x3344dc10
873 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 923
>> fuzzInit: datum forking for value 924
>> fuzzInit: datum forking for value 924
873 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 924)
        (ReadLSB w32 0 v924_fuzz_symb_924)))
    state 925 with condition (Not (Eq false
         (Eq (w32 924)
             (ReadLSB w32 0 v924_fuzz_symb_924))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-924-8048a0e
Size=2 Low=0 splitIndex=1 high=1
873 [State 0] Switching from state 0 to state 925
Copied 34928 (count=1)
Finalizing TB execution 925
s2e_dummyMainFunction
tcg-llvm-tb-924-8048a0e
Firing timer event
873 [State 925] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 924 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
873 [State 925] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ac: 00 00             add [eax], al           
873 [State 925] Terminating state 925 with message 'eliminated a state with an impossible first instruction'
873 [State 925] Switching from state 925 to state 0
Copied 34928 (count=1)
Deleting state 925 0x0x3344dc10
874 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 924
>> fuzzInit: datum forking for value 925
>> fuzzInit: datum forking for value 925
874 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 925)
        (ReadLSB w32 0 v925_fuzz_symb_925)))
    state 926 with condition (Not (Eq false
         (Eq (w32 925)
             (ReadLSB w32 0 v925_fuzz_symb_925))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-925-8048a0e
Size=2 Low=0 splitIndex=1 high=1
874 [State 0] Switching from state 0 to state 926
Copied 34928 (count=1)
Finalizing TB execution 926
s2e_dummyMainFunction
tcg-llvm-tb-925-8048a0e
Firing timer event
874 [State 926] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 925 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
874 [State 926] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ad: 00 00             add [eax], al           
874 [State 926] Terminating state 926 with message 'eliminated a state with an impossible first instruction'
874 [State 926] Switching from state 926 to state 0
Copied 34928 (count=1)
Deleting state 926 0x0x3344dc10
875 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 925
>> fuzzInit: datum forking for value 926
>> fuzzInit: datum forking for value 926
>> fuzzInit: datum forking for value 926
875 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 926)
        (ReadLSB w32 0 v926_fuzz_symb_926)))
    state 927 with condition (Not (Eq false
         (Eq (w32 926)
             (ReadLSB w32 0 v926_fuzz_symb_926))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-926-8048a0e
Size=2 Low=0 splitIndex=1 high=1
875 [State 0] Switching from state 0 to state 927
Copied 34928 (count=1)
Finalizing TB execution 927
s2e_dummyMainFunction
tcg-llvm-tb-926-8048a0e
Firing timer event
875 [State 927] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 926 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
875 [State 927] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ae: 00 00             add [eax], al           
875 [State 927] Terminating state 927 with message 'eliminated a state with an impossible first instruction'
875 [State 927] Switching from state 927 to state 0
Copied 34928 (count=1)
Deleting state 927 0x0x3344dc10
876 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 926
>> fuzzInit: datum forking for value 927
>> fuzzInit: datum forking for value 927
876 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 927)
        (ReadLSB w32 0 v927_fuzz_symb_927)))
    state 928 with condition (Not (Eq false
         (Eq (w32 927)
             (ReadLSB w32 0 v927_fuzz_symb_927))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-927-8048a0e
Size=2 Low=0 splitIndex=1 high=1
876 [State 0] Switching from state 0 to state 928
Copied 34928 (count=1)
Finalizing TB execution 928
s2e_dummyMainFunction
tcg-llvm-tb-927-8048a0e
Firing timer event
876 [State 928] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 927 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
877 [State 928] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771af: 00 00             add [eax], al           
877 [State 928] Terminating state 928 with message 'eliminated a state with an impossible first instruction'
877 [State 928] Switching from state 928 to state 0
Copied 34928 (count=1)
Deleting state 928 0x0x3344dc10
877 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 927
>> fuzzInit: datum forking for value 928
>> fuzzInit: datum forking for value 928
877 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 928)
        (ReadLSB w32 0 v928_fuzz_symb_928)))
    state 929 with condition (Not (Eq false
         (Eq (w32 928)
             (ReadLSB w32 0 v928_fuzz_symb_928))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-928-8048a0e
Size=2 Low=0 splitIndex=1 high=1
877 [State 0] Switching from state 0 to state 929
Copied 34928 (count=1)
Finalizing TB execution 929
s2e_dummyMainFunction
tcg-llvm-tb-928-8048a0e
Firing timer event
877 [State 929] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 928 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
878 [State 929] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b0: 00 00             add [eax], al           
878 [State 929] Terminating state 929 with message 'eliminated a state with an impossible first instruction'
878 [State 929] Switching from state 929 to state 0
Copied 34928 (count=1)
Deleting state 929 0x0x3344dc10
878 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 928
>> fuzzInit: datum forking for value 929
>> fuzzInit: datum forking for value 929
878 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 929)
        (ReadLSB w32 0 v929_fuzz_symb_929)))
    state 930 with condition (Not (Eq false
         (Eq (w32 929)
             (ReadLSB w32 0 v929_fuzz_symb_929))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-929-8048a0e
Size=2 Low=0 splitIndex=1 high=1
878 [State 0] Switching from state 0 to state 930
Copied 34928 (count=1)
Finalizing TB execution 930
s2e_dummyMainFunction
tcg-llvm-tb-929-8048a0e
Firing timer event
879 [State 930] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 929 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
879 [State 930] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b1: 00 00             add [eax], al           
879 [State 930] Terminating state 930 with message 'eliminated a state with an impossible first instruction'
879 [State 930] Switching from state 930 to state 0
Copied 34928 (count=1)
Deleting state 930 0x0x3344dc10
879 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 929
>> fuzzInit: datum forking for value 930
>> fuzzInit: datum forking for value 930
880 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 930)
        (ReadLSB w32 0 v930_fuzz_symb_930)))
    state 931 with condition (Not (Eq false
         (Eq (w32 930)
             (ReadLSB w32 0 v930_fuzz_symb_930))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-930-8048a0e
Size=2 Low=0 splitIndex=1 high=1
880 [State 0] Switching from state 0 to state 931
Copied 34928 (count=1)
Finalizing TB execution 931
s2e_dummyMainFunction
tcg-llvm-tb-930-8048a0e
Firing timer event
880 [State 931] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 930 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
880 [State 931] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b2: 00 00             add [eax], al           
880 [State 931] Terminating state 931 with message 'eliminated a state with an impossible first instruction'
880 [State 931] Switching from state 931 to state 0
Copied 34928 (count=1)
Deleting state 931 0x0x3344dc10
880 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 930
>> fuzzInit: datum forking for value 931
>> fuzzInit: datum forking for value 931
881 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 931)
        (ReadLSB w32 0 v931_fuzz_symb_931)))
    state 932 with condition (Not (Eq false
         (Eq (w32 931)
             (ReadLSB w32 0 v931_fuzz_symb_931))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-931-8048a0e
Size=2 Low=0 splitIndex=1 high=1
881 [State 0] Switching from state 0 to state 932
Copied 34928 (count=1)
Finalizing TB execution 932
s2e_dummyMainFunction
tcg-llvm-tb-931-8048a0e
Firing timer event
881 [State 932] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 931 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
881 [State 932] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b3: 00 00             add [eax], al           
881 [State 932] Terminating state 932 with message 'eliminated a state with an impossible first instruction'
881 [State 932] Switching from state 932 to state 0
Copied 34928 (count=1)
Deleting state 932 0x0x3344dc10
881 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 931
>> fuzzInit: datum forking for value 932
>> fuzzInit: datum forking for value 932
882 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 932)
        (ReadLSB w32 0 v932_fuzz_symb_932)))
    state 933 with condition (Not (Eq false
         (Eq (w32 932)
             (ReadLSB w32 0 v932_fuzz_symb_932))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-932-8048a0e
Size=2 Low=0 splitIndex=1 high=1
882 [State 0] Switching from state 0 to state 933
Copied 34928 (count=1)
Finalizing TB execution 933
s2e_dummyMainFunction
tcg-llvm-tb-932-8048a0e
Firing timer event
882 [State 933] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 932 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
882 [State 933] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b4: 00 00             add [eax], al           
882 [State 933] Terminating state 933 with message 'eliminated a state with an impossible first instruction'
882 [State 933] Switching from state 933 to state 0
Copied 34928 (count=1)
Deleting state 933 0x0x3344dc10
882 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 932
>> fuzzInit: datum forking for value 933
>> fuzzInit: datum forking for value 933
883 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 933)
        (ReadLSB w32 0 v933_fuzz_symb_933)))
    state 934 with condition (Not (Eq false
         (Eq (w32 933)
             (ReadLSB w32 0 v933_fuzz_symb_933))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-933-8048a0e
Size=2 Low=0 splitIndex=1 high=1
883 [State 0] Switching from state 0 to state 934
Copied 34928 (count=1)
Finalizing TB execution 934
s2e_dummyMainFunction
tcg-llvm-tb-933-8048a0e
Firing timer event
883 [State 934] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 933 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
883 [State 934] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b5: 00 00             add [eax], al           
883 [State 934] Terminating state 934 with message 'eliminated a state with an impossible first instruction'
883 [State 934] Switching from state 934 to state 0
Copied 34928 (count=1)
Deleting state 934 0x0x33987e30
883 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 933
>> fuzzInit: datum forking for value 934
>> fuzzInit: datum forking for value 934
884 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 934)
        (ReadLSB w32 0 v934_fuzz_symb_934)))
    state 935 with condition (Not (Eq false
         (Eq (w32 934)
             (ReadLSB w32 0 v934_fuzz_symb_934))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-934-8048a0e
Size=2 Low=0 splitIndex=1 high=1
884 [State 0] Switching from state 0 to state 935
Copied 34928 (count=1)
Finalizing TB execution 935
s2e_dummyMainFunction
tcg-llvm-tb-934-8048a0e
Firing timer event
884 [State 935] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 934 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
884 [State 935] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b6: 00 00             add [eax], al           
884 [State 935] Terminating state 935 with message 'eliminated a state with an impossible first instruction'
884 [State 935] Switching from state 935 to state 0
Copied 34928 (count=1)
Deleting state 935 0x0x33987e30
884 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 934
>> fuzzInit: datum forking for value 935
>> fuzzInit: datum forking for value 935
885 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 935)
        (ReadLSB w32 0 v935_fuzz_symb_935)))
    state 936 with condition (Not (Eq false
         (Eq (w32 935)
             (ReadLSB w32 0 v935_fuzz_symb_935))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-935-8048a0e
Size=2 Low=0 splitIndex=1 high=1
885 [State 0] Switching from state 0 to state 936
Copied 34928 (count=1)
Finalizing TB execution 936
s2e_dummyMainFunction
tcg-llvm-tb-935-8048a0e
Firing timer event
885 [State 936] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 935 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
885 [State 936] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b7: 00 00             add [eax], al           
885 [State 936] Terminating state 936 with message 'eliminated a state with an impossible first instruction'
885 [State 936] Switching from state 936 to state 0
Copied 34928 (count=1)
Deleting state 936 0x0x33987e30
885 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 935
>> fuzzInit: datum forking for value 936
>> fuzzInit: datum forking for value 936
886 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 936)
        (ReadLSB w32 0 v936_fuzz_symb_936)))
    state 937 with condition (Not (Eq false
         (Eq (w32 936)
             (ReadLSB w32 0 v936_fuzz_symb_936))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-936-8048a0e
Size=2 Low=0 splitIndex=1 high=1
886 [State 0] Switching from state 0 to state 937
Copied 34928 (count=1)
Finalizing TB execution 937
s2e_dummyMainFunction
tcg-llvm-tb-936-8048a0e
Firing timer event
886 [State 937] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 936 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
886 [State 937] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b8: 00 00             add [eax], al           
886 [State 937] Terminating state 937 with message 'eliminated a state with an impossible first instruction'
886 [State 937] Switching from state 937 to state 0
Copied 34928 (count=1)
Deleting state 937 0x0x33987e30
886 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 936
>> fuzzInit: datum forking for value 937
>> fuzzInit: datum forking for value 937
887 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 937)
        (ReadLSB w32 0 v937_fuzz_symb_937)))
    state 938 with condition (Not (Eq false
         (Eq (w32 937)
             (ReadLSB w32 0 v937_fuzz_symb_937))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-937-8048a0e
Size=2 Low=0 splitIndex=1 high=1
887 [State 0] Switching from state 0 to state 938
Copied 34928 (count=1)
Finalizing TB execution 938
s2e_dummyMainFunction
tcg-llvm-tb-937-8048a0e
Firing timer event
887 [State 938] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 937 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
887 [State 938] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771b9: 00 00             add [eax], al           
887 [State 938] Terminating state 938 with message 'eliminated a state with an impossible first instruction'
887 [State 938] Switching from state 938 to state 0
Copied 34928 (count=1)
Deleting state 938 0x0x33987e30
887 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 937
>> fuzzInit: datum forking for value 938
>> fuzzInit: datum forking for value 938
888 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 938)
        (ReadLSB w32 0 v938_fuzz_symb_938)))
    state 939 with condition (Not (Eq false
         (Eq (w32 938)
             (ReadLSB w32 0 v938_fuzz_symb_938))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-938-8048a0e
Size=2 Low=0 splitIndex=1 high=1
888 [State 0] Switching from state 0 to state 939
Copied 34928 (count=1)
Finalizing TB execution 939
s2e_dummyMainFunction
tcg-llvm-tb-938-8048a0e
Firing timer event
888 [State 939] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 938 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
888 [State 939] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ba: 00 00             add [eax], al           
888 [State 939] Terminating state 939 with message 'eliminated a state with an impossible first instruction'
888 [State 939] Switching from state 939 to state 0
Copied 34928 (count=1)
Deleting state 939 0x0x33987e30
888 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 938
>> fuzzInit: datum forking for value 939
>> fuzzInit: datum forking for value 939
889 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 939)
        (ReadLSB w32 0 v939_fuzz_symb_939)))
    state 940 with condition (Not (Eq false
         (Eq (w32 939)
             (ReadLSB w32 0 v939_fuzz_symb_939))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-939-8048a0e
Size=2 Low=0 splitIndex=1 high=1
889 [State 0] Switching from state 0 to state 940
Copied 34928 (count=1)
Finalizing TB execution 940
s2e_dummyMainFunction
tcg-llvm-tb-939-8048a0e
Firing timer event
889 [State 940] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 939 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
889 [State 940] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771bb: 00 00             add [eax], al           
889 [State 940] Terminating state 940 with message 'eliminated a state with an impossible first instruction'
889 [State 940] Switching from state 940 to state 0
Copied 34928 (count=1)
Deleting state 940 0x0x33987e30
889 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 939
>> fuzzInit: datum forking for value 940
>> fuzzInit: datum forking for value 940
890 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 940)
        (ReadLSB w32 0 v940_fuzz_symb_940)))
    state 941 with condition (Not (Eq false
         (Eq (w32 940)
             (ReadLSB w32 0 v940_fuzz_symb_940))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-940-8048a0e
Size=2 Low=0 splitIndex=1 high=1
890 [State 0] Switching from state 0 to state 941
Copied 34928 (count=1)
Finalizing TB execution 941
s2e_dummyMainFunction
tcg-llvm-tb-940-8048a0e
Firing timer event
890 [State 941] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 940 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
890 [State 941] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771bc: 00 00             add [eax], al           
890 [State 941] Terminating state 941 with message 'eliminated a state with an impossible first instruction'
890 [State 941] Switching from state 941 to state 0
Copied 34928 (count=1)
Deleting state 941 0x0x33987e30
890 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 940
>> fuzzInit: datum forking for value 941
>> fuzzInit: datum forking for value 941
891 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 941)
        (ReadLSB w32 0 v941_fuzz_symb_941)))
    state 942 with condition (Not (Eq false
         (Eq (w32 941)
             (ReadLSB w32 0 v941_fuzz_symb_941))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-941-8048a0e
Size=2 Low=0 splitIndex=1 high=1
891 [State 0] Switching from state 0 to state 942
Copied 34928 (count=1)
Finalizing TB execution 942
s2e_dummyMainFunction
tcg-llvm-tb-941-8048a0e
Firing timer event
891 [State 942] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 941 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
891 [State 942] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771bd: 00 00             add [eax], al           
891 [State 942] Terminating state 942 with message 'eliminated a state with an impossible first instruction'
891 [State 942] Switching from state 942 to state 0
Copied 34928 (count=1)
Deleting state 942 0x0x33987e30
892 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 941
>> fuzzInit: datum forking for value 942
>> fuzzInit: datum forking for value 942
892 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 942)
        (ReadLSB w32 0 v942_fuzz_symb_942)))
    state 943 with condition (Not (Eq false
         (Eq (w32 942)
             (ReadLSB w32 0 v942_fuzz_symb_942))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-942-8048a0e
Size=2 Low=0 splitIndex=1 high=1
892 [State 0] Switching from state 0 to state 943
Copied 34928 (count=1)
Finalizing TB execution 943
s2e_dummyMainFunction
tcg-llvm-tb-942-8048a0e
Firing timer event
892 [State 943] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 942 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
892 [State 943] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771be: 00 00             add [eax], al           
892 [State 943] Terminating state 943 with message 'eliminated a state with an impossible first instruction'
892 [State 943] Switching from state 943 to state 0
Copied 34928 (count=1)
Deleting state 943 0x0x33987e30
893 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 942
>> fuzzInit: datum forking for value 943
>> fuzzInit: datum forking for value 943
893 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 943)
        (ReadLSB w32 0 v943_fuzz_symb_943)))
    state 944 with condition (Not (Eq false
         (Eq (w32 943)
             (ReadLSB w32 0 v943_fuzz_symb_943))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-943-8048a0e
Size=2 Low=0 splitIndex=1 high=1
893 [State 0] Switching from state 0 to state 944
Copied 34928 (count=1)
Finalizing TB execution 944
s2e_dummyMainFunction
tcg-llvm-tb-943-8048a0e
Firing timer event
893 [State 944] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 943 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
893 [State 944] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771bf: 00 00             add [eax], al           
893 [State 944] Terminating state 944 with message 'eliminated a state with an impossible first instruction'
893 [State 944] Switching from state 944 to state 0
Copied 34928 (count=1)
Deleting state 944 0x0x33987e30
894 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 943
>> fuzzInit: datum forking for value 944
>> fuzzInit: datum forking for value 944
894 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 944)
        (ReadLSB w32 0 v944_fuzz_symb_944)))
    state 945 with condition (Not (Eq false
         (Eq (w32 944)
             (ReadLSB w32 0 v944_fuzz_symb_944))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-944-8048a0e
Size=2 Low=0 splitIndex=1 high=1
894 [State 0] Switching from state 0 to state 945
Copied 34928 (count=1)
Finalizing TB execution 945
s2e_dummyMainFunction
tcg-llvm-tb-944-8048a0e
Firing timer event
894 [State 945] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 944 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
894 [State 945] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c0: 00 00             add [eax], al           
894 [State 945] Terminating state 945 with message 'eliminated a state with an impossible first instruction'
894 [State 945] Switching from state 945 to state 0
Copied 34928 (count=1)
Deleting state 945 0x0x33987e30
895 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 944
>> fuzzInit: datum forking for value 945
>> fuzzInit: datum forking for value 945
895 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 945)
        (ReadLSB w32 0 v945_fuzz_symb_945)))
    state 946 with condition (Not (Eq false
         (Eq (w32 945)
             (ReadLSB w32 0 v945_fuzz_symb_945))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-945-8048a0e
Size=2 Low=0 splitIndex=1 high=1
895 [State 0] Switching from state 0 to state 946
Copied 34928 (count=1)
Finalizing TB execution 946
s2e_dummyMainFunction
tcg-llvm-tb-945-8048a0e
Firing timer event
895 [State 946] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 945 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
896 [State 946] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c1: 00 00             add [eax], al           
896 [State 946] Terminating state 946 with message 'eliminated a state with an impossible first instruction'
896 [State 946] Switching from state 946 to state 0
Copied 34928 (count=1)
Deleting state 946 0x0x339e23d0
896 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 945
>> fuzzInit: datum forking for value 946
>> fuzzInit: datum forking for value 946
896 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 946)
        (ReadLSB w32 0 v946_fuzz_symb_946)))
    state 947 with condition (Not (Eq false
         (Eq (w32 946)
             (ReadLSB w32 0 v946_fuzz_symb_946))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-946-8048a0e
Size=2 Low=0 splitIndex=1 high=1
896 [State 0] Switching from state 0 to state 947
Copied 34928 (count=1)
Finalizing TB execution 947
s2e_dummyMainFunction
tcg-llvm-tb-946-8048a0e
Firing timer event
896 [State 947] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 946 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
897 [State 947] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c2: 00 00             add [eax], al           
897 [State 947] Terminating state 947 with message 'eliminated a state with an impossible first instruction'
897 [State 947] Switching from state 947 to state 0
Copied 34928 (count=1)
Deleting state 947 0x0x339e23d0
897 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 946
>> fuzzInit: datum forking for value 947
>> fuzzInit: datum forking for value 947
897 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 947)
        (ReadLSB w32 0 v947_fuzz_symb_947)))
    state 948 with condition (Not (Eq false
         (Eq (w32 947)
             (ReadLSB w32 0 v947_fuzz_symb_947))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-947-8048a0e
Size=2 Low=0 splitIndex=1 high=1
897 [State 0] Switching from state 0 to state 948
Copied 34928 (count=1)
Finalizing TB execution 948
s2e_dummyMainFunction
tcg-llvm-tb-947-8048a0e
Firing timer event
898 [State 948] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 947 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
898 [State 948] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c3: 00 00             add [eax], al           
898 [State 948] Terminating state 948 with message 'eliminated a state with an impossible first instruction'
898 [State 948] Switching from state 948 to state 0
Copied 34928 (count=1)
Deleting state 948 0x0x339e23d0
898 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 947
>> fuzzInit: datum forking for value 948
>> fuzzInit: datum forking for value 948
898 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 948)
        (ReadLSB w32 0 v948_fuzz_symb_948)))
    state 949 with condition (Not (Eq false
         (Eq (w32 948)
             (ReadLSB w32 0 v948_fuzz_symb_948))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-948-8048a0e
Size=2 Low=0 splitIndex=1 high=1
898 [State 0] Switching from state 0 to state 949
Copied 34928 (count=1)
Finalizing TB execution 949
s2e_dummyMainFunction
tcg-llvm-tb-948-8048a0e
Firing timer event
899 [State 949] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 948 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
899 [State 949] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c4: 00 00             add [eax], al           
899 [State 949] Terminating state 949 with message 'eliminated a state with an impossible first instruction'
899 [State 949] Switching from state 949 to state 0
Copied 34928 (count=1)
Deleting state 949 0x0x339e23d0
899 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 948
>> fuzzInit: datum forking for value 949
>> fuzzInit: datum forking for value 949
899 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 949)
        (ReadLSB w32 0 v949_fuzz_symb_949)))
    state 950 with condition (Not (Eq false
         (Eq (w32 949)
             (ReadLSB w32 0 v949_fuzz_symb_949))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-949-8048a0e
Size=2 Low=0 splitIndex=1 high=1
899 [State 0] Switching from state 0 to state 950
Copied 34928 (count=1)
Finalizing TB execution 950
s2e_dummyMainFunction
tcg-llvm-tb-949-8048a0e
Firing timer event
900 [State 950] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 949 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
900 [State 950] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c5: 00 00             add [eax], al           
900 [State 950] Terminating state 950 with message 'eliminated a state with an impossible first instruction'
900 [State 950] Switching from state 950 to state 0
Copied 34928 (count=1)
Deleting state 950 0x0x339e23d0
900 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 949
>> fuzzInit: datum forking for value 950
>> fuzzInit: datum forking for value 950
900 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 950)
        (ReadLSB w32 0 v950_fuzz_symb_950)))
    state 951 with condition (Not (Eq false
         (Eq (w32 950)
             (ReadLSB w32 0 v950_fuzz_symb_950))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-950-8048a0e
Size=2 Low=0 splitIndex=1 high=1
900 [State 0] Switching from state 0 to state 951
Copied 34928 (count=1)
Finalizing TB execution 951
s2e_dummyMainFunction
tcg-llvm-tb-950-8048a0e
Firing timer event
901 [State 951] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 950 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
901 [State 951] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c6: 00 00             add [eax], al           
901 [State 951] Terminating state 951 with message 'eliminated a state with an impossible first instruction'
901 [State 951] Switching from state 951 to state 0
Copied 34928 (count=1)
Deleting state 951 0x0x339e23d0
901 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 950
>> fuzzInit: datum forking for value 951
>> fuzzInit: datum forking for value 951
902 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 951)
        (ReadLSB w32 0 v951_fuzz_symb_951)))
    state 952 with condition (Not (Eq false
         (Eq (w32 951)
             (ReadLSB w32 0 v951_fuzz_symb_951))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-951-8048a0e
Size=2 Low=0 splitIndex=1 high=1
902 [State 0] Switching from state 0 to state 952
Copied 34928 (count=1)
Finalizing TB execution 952
s2e_dummyMainFunction
tcg-llvm-tb-951-8048a0e
Firing timer event
902 [State 952] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 951 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
902 [State 952] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c7: 00 00             add [eax], al           
902 [State 952] Terminating state 952 with message 'eliminated a state with an impossible first instruction'
902 [State 952] Switching from state 952 to state 0
Copied 34928 (count=1)
Deleting state 952 0x0x339e23d0
902 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 951
>> fuzzInit: datum forking for value 952
>> fuzzInit: datum forking for value 952
903 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 952)
        (ReadLSB w32 0 v952_fuzz_symb_952)))
    state 953 with condition (Not (Eq false
         (Eq (w32 952)
             (ReadLSB w32 0 v952_fuzz_symb_952))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-952-8048a0e
Size=2 Low=0 splitIndex=1 high=1
903 [State 0] Switching from state 0 to state 953
Copied 34928 (count=1)
Finalizing TB execution 953
s2e_dummyMainFunction
tcg-llvm-tb-952-8048a0e
Firing timer event
903 [State 953] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 952 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
903 [State 953] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c8: 00 00             add [eax], al           
903 [State 953] Terminating state 953 with message 'eliminated a state with an impossible first instruction'
903 [State 953] Switching from state 953 to state 0
Copied 34928 (count=1)
Deleting state 953 0x0x339e23d0
903 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 952
>> fuzzInit: datum forking for value 953
>> fuzzInit: datum forking for value 953
>> fuzzInit: datum forking for value 953
904 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 953)
        (ReadLSB w32 0 v953_fuzz_symb_953)))
    state 954 with condition (Not (Eq false
         (Eq (w32 953)
             (ReadLSB w32 0 v953_fuzz_symb_953))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-953-8048a0e
Size=2 Low=0 splitIndex=1 high=1
904 [State 0] Switching from state 0 to state 954
Copied 34928 (count=1)
Finalizing TB execution 954
s2e_dummyMainFunction
tcg-llvm-tb-953-8048a0e
Firing timer event
904 [State 954] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 953 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
904 [State 954] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771c9: 00 00             add [eax], al           
904 [State 954] Terminating state 954 with message 'eliminated a state with an impossible first instruction'
904 [State 954] Switching from state 954 to state 0
Copied 34928 (count=1)
Deleting state 954 0x0x339e23d0
904 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 953
>> fuzzInit: datum forking for value 954
>> fuzzInit: datum forking for value 954
905 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 954)
        (ReadLSB w32 0 v954_fuzz_symb_954)))
    state 955 with condition (Not (Eq false
         (Eq (w32 954)
             (ReadLSB w32 0 v954_fuzz_symb_954))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-954-8048a0e
Size=2 Low=0 splitIndex=1 high=1
905 [State 0] Switching from state 0 to state 955
Copied 34928 (count=1)
Finalizing TB execution 955
s2e_dummyMainFunction
tcg-llvm-tb-954-8048a0e
Firing timer event
905 [State 955] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 954 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
905 [State 955] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ca: 00 00             add [eax], al           
905 [State 955] Terminating state 955 with message 'eliminated a state with an impossible first instruction'
905 [State 955] Switching from state 955 to state 0
Copied 34928 (count=1)
Deleting state 955 0x0x339e23d0
905 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 954
>> fuzzInit: datum forking for value 955
>> fuzzInit: datum forking for value 955
906 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 955)
        (ReadLSB w32 0 v955_fuzz_symb_955)))
    state 956 with condition (Not (Eq false
         (Eq (w32 955)
             (ReadLSB w32 0 v955_fuzz_symb_955))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-955-8048a0e
Size=2 Low=0 splitIndex=1 high=1
906 [State 0] Switching from state 0 to state 956
Copied 34928 (count=1)
Finalizing TB execution 956
s2e_dummyMainFunction
tcg-llvm-tb-955-8048a0e
Firing timer event
906 [State 956] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 955 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
906 [State 956] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771cb: 00 00             add [eax], al           
906 [State 956] Terminating state 956 with message 'eliminated a state with an impossible first instruction'
906 [State 956] Switching from state 956 to state 0
Copied 34928 (count=1)
Deleting state 956 0x0x339e23d0
906 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 955
>> fuzzInit: datum forking for value 956
>> fuzzInit: datum forking for value 956
907 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 956)
        (ReadLSB w32 0 v956_fuzz_symb_956)))
    state 957 with condition (Not (Eq false
         (Eq (w32 956)
             (ReadLSB w32 0 v956_fuzz_symb_956))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-956-8048a0e
Size=2 Low=0 splitIndex=1 high=1
907 [State 0] Switching from state 0 to state 957
Copied 34928 (count=1)
Finalizing TB execution 957
s2e_dummyMainFunction
tcg-llvm-tb-956-8048a0e
Firing timer event
907 [State 957] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 956 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
907 [State 957] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771cc: 00 00             add [eax], al           
907 [State 957] Terminating state 957 with message 'eliminated a state with an impossible first instruction'
907 [State 957] Switching from state 957 to state 0
Copied 34928 (count=1)
Deleting state 957 0x0x339e23d0
907 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 956
>> fuzzInit: datum forking for value 957
>> fuzzInit: datum forking for value 957
908 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 957)
        (ReadLSB w32 0 v957_fuzz_symb_957)))
    state 958 with condition (Not (Eq false
         (Eq (w32 957)
             (ReadLSB w32 0 v957_fuzz_symb_957))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-957-8048a0e
Size=2 Low=0 splitIndex=1 high=1
908 [State 0] Switching from state 0 to state 958
Copied 34928 (count=1)
Finalizing TB execution 958
s2e_dummyMainFunction
tcg-llvm-tb-957-8048a0e
Firing timer event
908 [State 958] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 957 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
908 [State 958] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771cd: 00 00             add [eax], al           
908 [State 958] Terminating state 958 with message 'eliminated a state with an impossible first instruction'
908 [State 958] Switching from state 958 to state 0
Copied 34928 (count=1)
Deleting state 958 0x0x339e23d0
908 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 957
>> fuzzInit: datum forking for value 958
>> fuzzInit: datum forking for value 958
909 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 958)
        (ReadLSB w32 0 v958_fuzz_symb_958)))
    state 959 with condition (Not (Eq false
         (Eq (w32 958)
             (ReadLSB w32 0 v958_fuzz_symb_958))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-958-8048a0e
Size=2 Low=0 splitIndex=1 high=1
909 [State 0] Switching from state 0 to state 959
Copied 34928 (count=1)
Finalizing TB execution 959
s2e_dummyMainFunction
tcg-llvm-tb-958-8048a0e
Firing timer event
909 [State 959] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 958 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
909 [State 959] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ce: 00 00             add [eax], al           
909 [State 959] Terminating state 959 with message 'eliminated a state with an impossible first instruction'
909 [State 959] Switching from state 959 to state 0
Copied 34928 (count=1)
Deleting state 959 0x0x339e23d0
909 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 958
>> fuzzInit: datum forking for value 959
>> fuzzInit: datum forking for value 959
910 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 959)
        (ReadLSB w32 0 v959_fuzz_symb_959)))
    state 960 with condition (Not (Eq false
         (Eq (w32 959)
             (ReadLSB w32 0 v959_fuzz_symb_959))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-959-8048a0e
Size=2 Low=0 splitIndex=1 high=1
910 [State 0] Switching from state 0 to state 960
Copied 34928 (count=1)
Finalizing TB execution 960
s2e_dummyMainFunction
tcg-llvm-tb-959-8048a0e
Firing timer event
910 [State 960] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 959 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
910 [State 960] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771cf: 00 00             add [eax], al           
910 [State 960] Terminating state 960 with message 'eliminated a state with an impossible first instruction'
910 [State 960] Switching from state 960 to state 0
Copied 34928 (count=1)
Deleting state 960 0x0x339e23d0
910 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 959
>> fuzzInit: datum forking for value 960
>> fuzzInit: datum forking for value 960
911 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 960)
        (ReadLSB w32 0 v960_fuzz_symb_960)))
    state 961 with condition (Not (Eq false
         (Eq (w32 960)
             (ReadLSB w32 0 v960_fuzz_symb_960))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-960-8048a0e
Size=2 Low=0 splitIndex=1 high=1
911 [State 0] Switching from state 0 to state 961
Copied 34928 (count=1)
Finalizing TB execution 961
s2e_dummyMainFunction
tcg-llvm-tb-960-8048a0e
Firing timer event
911 [State 961] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 960 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
911 [State 961] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d0: 00 00             add [eax], al           
911 [State 961] Terminating state 961 with message 'eliminated a state with an impossible first instruction'
911 [State 961] Switching from state 961 to state 0
Copied 34928 (count=1)
Deleting state 961 0x0x339e23d0
911 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 960
>> fuzzInit: datum forking for value 961
>> fuzzInit: datum forking for value 961
912 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 961)
        (ReadLSB w32 0 v961_fuzz_symb_961)))
    state 962 with condition (Not (Eq false
         (Eq (w32 961)
             (ReadLSB w32 0 v961_fuzz_symb_961))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-961-8048a0e
Size=2 Low=0 splitIndex=1 high=1
912 [State 0] Switching from state 0 to state 962
Copied 34928 (count=1)
Finalizing TB execution 962
s2e_dummyMainFunction
tcg-llvm-tb-961-8048a0e
Firing timer event
912 [State 962] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 961 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
912 [State 962] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d1: 00 00             add [eax], al           
912 [State 962] Terminating state 962 with message 'eliminated a state with an impossible first instruction'
912 [State 962] Switching from state 962 to state 0
Copied 34928 (count=1)
Deleting state 962 0x0x339e23d0
912 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 961
>> fuzzInit: datum forking for value 962
>> fuzzInit: datum forking for value 962
913 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 962)
        (ReadLSB w32 0 v962_fuzz_symb_962)))
    state 963 with condition (Not (Eq false
         (Eq (w32 962)
             (ReadLSB w32 0 v962_fuzz_symb_962))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-962-8048a0e
Size=2 Low=0 splitIndex=1 high=1
913 [State 0] Switching from state 0 to state 963
Copied 34928 (count=1)
Finalizing TB execution 963
s2e_dummyMainFunction
tcg-llvm-tb-962-8048a0e
Firing timer event
913 [State 963] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 962 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
913 [State 963] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d2: 00 00             add [eax], al           
913 [State 963] Terminating state 963 with message 'eliminated a state with an impossible first instruction'
913 [State 963] Switching from state 963 to state 0
Copied 34928 (count=1)
Deleting state 963 0x0x339e23d0
913 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 962
>> fuzzInit: datum forking for value 963
>> fuzzInit: datum forking for value 963
914 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 963)
        (ReadLSB w32 0 v963_fuzz_symb_963)))
    state 964 with condition (Not (Eq false
         (Eq (w32 963)
             (ReadLSB w32 0 v963_fuzz_symb_963))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-963-8048a0e
Size=2 Low=0 splitIndex=1 high=1
914 [State 0] Switching from state 0 to state 964
Copied 34928 (count=1)
Finalizing TB execution 964
s2e_dummyMainFunction
tcg-llvm-tb-963-8048a0e
Firing timer event
914 [State 964] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 963 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
914 [State 964] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d3: 00 00             add [eax], al           
914 [State 964] Terminating state 964 with message 'eliminated a state with an impossible first instruction'
914 [State 964] Switching from state 964 to state 0
Copied 34928 (count=1)
Deleting state 964 0x0x339e23d0
915 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 963
>> fuzzInit: datum forking for value 964
>> fuzzInit: datum forking for value 964
915 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 964)
        (ReadLSB w32 0 v964_fuzz_symb_964)))
    state 965 with condition (Not (Eq false
         (Eq (w32 964)
             (ReadLSB w32 0 v964_fuzz_symb_964))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-964-8048a0e
Size=2 Low=0 splitIndex=1 high=1
915 [State 0] Switching from state 0 to state 965
Copied 34928 (count=1)
Finalizing TB execution 965
s2e_dummyMainFunction
tcg-llvm-tb-964-8048a0e
Firing timer event
915 [State 965] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 964 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
915 [State 965] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d4: 00 00             add [eax], al           
915 [State 965] Terminating state 965 with message 'eliminated a state with an impossible first instruction'
915 [State 965] Switching from state 965 to state 0
Copied 34928 (count=1)
Deleting state 965 0x0x339e23d0
916 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 964
>> fuzzInit: datum forking for value 965
>> fuzzInit: datum forking for value 965
916 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 965)
        (ReadLSB w32 0 v965_fuzz_symb_965)))
    state 966 with condition (Not (Eq false
         (Eq (w32 965)
             (ReadLSB w32 0 v965_fuzz_symb_965))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-965-8048a0e
Size=2 Low=0 splitIndex=1 high=1
916 [State 0] Switching from state 0 to state 966
Copied 34928 (count=1)
Finalizing TB execution 966
s2e_dummyMainFunction
tcg-llvm-tb-965-8048a0e
Firing timer event
916 [State 966] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 965 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
916 [State 966] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d5: 00 00             add [eax], al           
916 [State 966] Terminating state 966 with message 'eliminated a state with an impossible first instruction'
916 [State 966] Switching from state 966 to state 0
Copied 34928 (count=1)
Deleting state 966 0x0x339e23d0
917 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 965
>> fuzzInit: datum forking for value 966
>> fuzzInit: datum forking for value 966
917 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 966)
        (ReadLSB w32 0 v966_fuzz_symb_966)))
    state 967 with condition (Not (Eq false
         (Eq (w32 966)
             (ReadLSB w32 0 v966_fuzz_symb_966))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-966-8048a0e
Size=2 Low=0 splitIndex=1 high=1
917 [State 0] Switching from state 0 to state 967
Copied 34928 (count=1)
Finalizing TB execution 967
s2e_dummyMainFunction
tcg-llvm-tb-966-8048a0e
Firing timer event
917 [State 967] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 966 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
917 [State 967] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d6: 00 00             add [eax], al           
917 [State 967] Terminating state 967 with message 'eliminated a state with an impossible first instruction'
917 [State 967] Switching from state 967 to state 0
Copied 34928 (count=1)
Deleting state 967 0x0x339e23d0
918 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 966
>> fuzzInit: datum forking for value 967
>> fuzzInit: datum forking for value 967
918 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 967)
        (ReadLSB w32 0 v967_fuzz_symb_967)))
    state 968 with condition (Not (Eq false
         (Eq (w32 967)
             (ReadLSB w32 0 v967_fuzz_symb_967))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-967-8048a0e
Size=2 Low=0 splitIndex=1 high=1
918 [State 0] Switching from state 0 to state 968
Copied 34928 (count=1)
Finalizing TB execution 968
s2e_dummyMainFunction
tcg-llvm-tb-967-8048a0e
Firing timer event
918 [State 968] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 967 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
918 [State 968] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d7: 00 00             add [eax], al           
918 [State 968] Terminating state 968 with message 'eliminated a state with an impossible first instruction'
918 [State 968] Switching from state 968 to state 0
Copied 34928 (count=1)
Deleting state 968 0x0x339e23d0
919 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 967
>> fuzzInit: datum forking for value 968
>> fuzzInit: datum forking for value 968
919 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 968)
        (ReadLSB w32 0 v968_fuzz_symb_968)))
    state 969 with condition (Not (Eq false
         (Eq (w32 968)
             (ReadLSB w32 0 v968_fuzz_symb_968))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-968-8048a0e
Size=2 Low=0 splitIndex=1 high=1
919 [State 0] Switching from state 0 to state 969
Copied 34928 (count=1)
Finalizing TB execution 969
s2e_dummyMainFunction
tcg-llvm-tb-968-8048a0e
Firing timer event
919 [State 969] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 968 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
920 [State 969] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d8: 00 00             add [eax], al           
920 [State 969] Terminating state 969 with message 'eliminated a state with an impossible first instruction'
920 [State 969] Switching from state 969 to state 0
Copied 34928 (count=1)
Deleting state 969 0x0x339e23d0
920 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 968
>> fuzzInit: datum forking for value 969
>> fuzzInit: datum forking for value 969
920 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 969)
        (ReadLSB w32 0 v969_fuzz_symb_969)))
    state 970 with condition (Not (Eq false
         (Eq (w32 969)
             (ReadLSB w32 0 v969_fuzz_symb_969))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-969-8048a0e
Size=2 Low=0 splitIndex=1 high=1
920 [State 0] Switching from state 0 to state 970
Copied 34928 (count=1)
Finalizing TB execution 970
s2e_dummyMainFunction
tcg-llvm-tb-969-8048a0e
Firing timer event
920 [State 970] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 969 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
921 [State 970] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771d9: 00 00             add [eax], al           
921 [State 970] Terminating state 970 with message 'eliminated a state with an impossible first instruction'
921 [State 970] Switching from state 970 to state 0
Copied 34928 (count=1)
Deleting state 970 0x0x339e23d0
921 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 969
>> fuzzInit: datum forking for value 970
>> fuzzInit: datum forking for value 970
921 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 970)
        (ReadLSB w32 0 v970_fuzz_symb_970)))
    state 971 with condition (Not (Eq false
         (Eq (w32 970)
             (ReadLSB w32 0 v970_fuzz_symb_970))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-970-8048a0e
Size=2 Low=0 splitIndex=1 high=1
921 [State 0] Switching from state 0 to state 971
Copied 34928 (count=1)
Finalizing TB execution 971
s2e_dummyMainFunction
tcg-llvm-tb-970-8048a0e
Firing timer event
921 [State 971] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 970 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
922 [State 971] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771da: 00 00             add [eax], al           
922 [State 971] Terminating state 971 with message 'eliminated a state with an impossible first instruction'
922 [State 971] Switching from state 971 to state 0
Copied 34928 (count=1)
Deleting state 971 0x0x339e23d0
922 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 970
>> fuzzInit: datum forking for value 971
>> fuzzInit: datum forking for value 971
922 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 971)
        (ReadLSB w32 0 v971_fuzz_symb_971)))
    state 972 with condition (Not (Eq false
         (Eq (w32 971)
             (ReadLSB w32 0 v971_fuzz_symb_971))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-971-8048a0e
Size=2 Low=0 splitIndex=1 high=1
922 [State 0] Switching from state 0 to state 972
Copied 34928 (count=1)
Finalizing TB execution 972
s2e_dummyMainFunction
tcg-llvm-tb-971-8048a0e
922 [State 972] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 971 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
923 [State 972] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771db: 00 00             add [eax], al           
923 [State 972] Terminating state 972 with message 'eliminated a state with an impossible first instruction'
923 [State 972] Switching from state 972 to state 0
Copied 34928 (count=1)
Deleting state 972 0x0x339e23d0
923 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 971
>> fuzzInit: datum forking for value 972
>> fuzzInit: datum forking for value 972
923 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 972)
        (ReadLSB w32 0 v972_fuzz_symb_972)))
    state 973 with condition (Not (Eq false
         (Eq (w32 972)
             (ReadLSB w32 0 v972_fuzz_symb_972))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-972-8048a0e
Size=2 Low=0 splitIndex=1 high=1
923 [State 0] Switching from state 0 to state 973
Copied 34928 (count=1)
Finalizing TB execution 973
s2e_dummyMainFunction
tcg-llvm-tb-972-8048a0e
Firing timer event
923 [State 973] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 972 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
924 [State 973] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771dc: 00 00             add [eax], al           
924 [State 973] Terminating state 973 with message 'eliminated a state with an impossible first instruction'
924 [State 973] Switching from state 973 to state 0
Copied 34928 (count=1)
Deleting state 973 0x0x339e23d0
924 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 972
>> fuzzInit: datum forking for value 973
>> fuzzInit: datum forking for value 973
924 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 973)
        (ReadLSB w32 0 v973_fuzz_symb_973)))
    state 974 with condition (Not (Eq false
         (Eq (w32 973)
             (ReadLSB w32 0 v973_fuzz_symb_973))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-973-8048a0e
Size=2 Low=0 splitIndex=1 high=1
924 [State 0] Switching from state 0 to state 974
Copied 34928 (count=1)
Finalizing TB execution 974
s2e_dummyMainFunction
tcg-llvm-tb-973-8048a0e
Firing timer event
924 [State 974] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 973 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
925 [State 974] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771dd: 00 00             add [eax], al           
925 [State 974] Terminating state 974 with message 'eliminated a state with an impossible first instruction'
925 [State 974] Switching from state 974 to state 0
Copied 34928 (count=1)
Deleting state 974 0x0x339e23d0
925 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 973
>> fuzzInit: datum forking for value 974
>> fuzzInit: datum forking for value 974
925 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 974)
        (ReadLSB w32 0 v974_fuzz_symb_974)))
    state 975 with condition (Not (Eq false
         (Eq (w32 974)
             (ReadLSB w32 0 v974_fuzz_symb_974))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-974-8048a0e
Size=2 Low=0 splitIndex=1 high=1
925 [State 0] Switching from state 0 to state 975
Copied 34928 (count=1)
Finalizing TB execution 975
s2e_dummyMainFunction
tcg-llvm-tb-974-8048a0e
Firing timer event
926 [State 975] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 974 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
926 [State 975] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771de: 00 00             add [eax], al           
926 [State 975] Terminating state 975 with message 'eliminated a state with an impossible first instruction'
926 [State 975] Switching from state 975 to state 0
Copied 34928 (count=1)
Deleting state 975 0x0x339e23d0
926 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 974
>> fuzzInit: datum forking for value 975
>> fuzzInit: datum forking for value 975
927 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 975)
        (ReadLSB w32 0 v975_fuzz_symb_975)))
    state 976 with condition (Not (Eq false
         (Eq (w32 975)
             (ReadLSB w32 0 v975_fuzz_symb_975))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-975-8048a0e
Size=2 Low=0 splitIndex=1 high=1
927 [State 0] Switching from state 0 to state 976
Copied 34928 (count=1)
Finalizing TB execution 976
s2e_dummyMainFunction
tcg-llvm-tb-975-8048a0e
Firing timer event
927 [State 976] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 975 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
927 [State 976] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771df: 00 00             add [eax], al           
927 [State 976] Terminating state 976 with message 'eliminated a state with an impossible first instruction'
927 [State 976] Switching from state 976 to state 0
Copied 34928 (count=1)
Deleting state 976 0x0x339e23d0
927 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 975
>> fuzzInit: datum forking for value 976
>> fuzzInit: datum forking for value 976
928 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 976)
        (ReadLSB w32 0 v976_fuzz_symb_976)))
    state 977 with condition (Not (Eq false
         (Eq (w32 976)
             (ReadLSB w32 0 v976_fuzz_symb_976))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-976-8048a0e
Size=2 Low=0 splitIndex=1 high=1
928 [State 0] Switching from state 0 to state 977
Copied 34928 (count=1)
Finalizing TB execution 977
s2e_dummyMainFunction
tcg-llvm-tb-976-8048a0e
Firing timer event
928 [State 977] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 976 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
928 [State 977] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e0: 00 00             add [eax], al           
928 [State 977] Terminating state 977 with message 'eliminated a state with an impossible first instruction'
928 [State 977] Switching from state 977 to state 0
Copied 34928 (count=1)
Deleting state 977 0x0x339e23d0
928 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 976
>> fuzzInit: datum forking for value 977
>> fuzzInit: datum forking for value 977
929 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 977)
        (ReadLSB w32 0 v977_fuzz_symb_977)))
    state 978 with condition (Not (Eq false
         (Eq (w32 977)
             (ReadLSB w32 0 v977_fuzz_symb_977))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-977-8048a0e
Size=2 Low=0 splitIndex=1 high=1
929 [State 0] Switching from state 0 to state 978
Copied 34928 (count=1)
Finalizing TB execution 978
s2e_dummyMainFunction
tcg-llvm-tb-977-8048a0e
Firing timer event
929 [State 978] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 977 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
929 [State 978] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e1: 00 00             add [eax], al           
929 [State 978] Terminating state 978 with message 'eliminated a state with an impossible first instruction'
929 [State 978] Switching from state 978 to state 0
Copied 34928 (count=1)
Deleting state 978 0x0x339e23d0
929 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 977
>> fuzzInit: datum forking for value 978
>> fuzzInit: datum forking for value 978
930 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 978)
        (ReadLSB w32 0 v978_fuzz_symb_978)))
    state 979 with condition (Not (Eq false
         (Eq (w32 978)
             (ReadLSB w32 0 v978_fuzz_symb_978))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-978-8048a0e
Size=2 Low=0 splitIndex=1 high=1
930 [State 0] Switching from state 0 to state 979
Copied 34928 (count=1)
Finalizing TB execution 979
s2e_dummyMainFunction
tcg-llvm-tb-978-8048a0e
Firing timer event
930 [State 979] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 978 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
930 [State 979] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e2: 00 00             add [eax], al           
930 [State 979] Terminating state 979 with message 'eliminated a state with an impossible first instruction'
930 [State 979] Switching from state 979 to state 0
Copied 34928 (count=1)
Deleting state 979 0x0x346fdee0
930 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 978
>> fuzzInit: datum forking for value 979
>> fuzzInit: datum forking for value 979
931 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 979)
        (ReadLSB w32 0 v979_fuzz_symb_979)))
    state 980 with condition (Not (Eq false
         (Eq (w32 979)
             (ReadLSB w32 0 v979_fuzz_symb_979))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-979-8048a0e
Size=2 Low=0 splitIndex=1 high=1
931 [State 0] Switching from state 0 to state 980
Copied 34928 (count=1)
Finalizing TB execution 980
s2e_dummyMainFunction
tcg-llvm-tb-979-8048a0e
Firing timer event
931 [State 980] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 979 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
931 [State 980] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e3: 00 00             add [eax], al           
931 [State 980] Terminating state 980 with message 'eliminated a state with an impossible first instruction'
931 [State 980] Switching from state 980 to state 0
Copied 34928 (count=1)
Deleting state 980 0x0x345f47d0
931 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 979
>> fuzzInit: datum forking for value 980
>> fuzzInit: datum forking for value 980
932 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 980)
        (ReadLSB w32 0 v980_fuzz_symb_980)))
    state 981 with condition (Not (Eq false
         (Eq (w32 980)
             (ReadLSB w32 0 v980_fuzz_symb_980))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-980-8048a0e
Size=2 Low=0 splitIndex=1 high=1
932 [State 0] Switching from state 0 to state 981
Copied 34928 (count=1)
Finalizing TB execution 981
s2e_dummyMainFunction
tcg-llvm-tb-980-8048a0e
Firing timer event
932 [State 981] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 980 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
932 [State 981] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e4: 00 00             add [eax], al           
932 [State 981] Terminating state 981 with message 'eliminated a state with an impossible first instruction'
932 [State 981] Switching from state 981 to state 0
Copied 34928 (count=1)
Deleting state 981 0x0x345f47d0
933 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 980
>> fuzzInit: datum forking for value 981
>> fuzzInit: datum forking for value 981
933 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 981)
        (ReadLSB w32 0 v981_fuzz_symb_981)))
    state 982 with condition (Not (Eq false
         (Eq (w32 981)
             (ReadLSB w32 0 v981_fuzz_symb_981))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-981-8048a0e
Size=2 Low=0 splitIndex=1 high=1
933 [State 0] Switching from state 0 to state 982
Copied 34928 (count=1)
Finalizing TB execution 982
s2e_dummyMainFunction
tcg-llvm-tb-981-8048a0e
Firing timer event
933 [State 982] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 981 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
934 [State 982] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e5: 00 00             add [eax], al           
934 [State 982] Terminating state 982 with message 'eliminated a state with an impossible first instruction'
934 [State 982] Switching from state 982 to state 0
Copied 34928 (count=1)
Deleting state 982 0x0x345f47d0
934 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 981
>> fuzzInit: datum forking for value 982
>> fuzzInit: datum forking for value 982
934 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 982)
        (ReadLSB w32 0 v982_fuzz_symb_982)))
    state 983 with condition (Not (Eq false
         (Eq (w32 982)
             (ReadLSB w32 0 v982_fuzz_symb_982))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-982-8048a0e
Size=2 Low=0 splitIndex=1 high=1
934 [State 0] Switching from state 0 to state 983
Copied 34928 (count=1)
Finalizing TB execution 983
s2e_dummyMainFunction
tcg-llvm-tb-982-8048a0e
Firing timer event
934 [State 983] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 982 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
935 [State 983] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e6: 00 00             add [eax], al           
935 [State 983] Terminating state 983 with message 'eliminated a state with an impossible first instruction'
935 [State 983] Switching from state 983 to state 0
Copied 34928 (count=1)
Deleting state 983 0x0x345f47d0
935 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 982
>> fuzzInit: datum forking for value 983
>> fuzzInit: datum forking for value 983
935 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 983)
        (ReadLSB w32 0 v983_fuzz_symb_983)))
    state 984 with condition (Not (Eq false
         (Eq (w32 983)
             (ReadLSB w32 0 v983_fuzz_symb_983))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-983-8048a0e
Size=2 Low=0 splitIndex=1 high=1
935 [State 0] Switching from state 0 to state 984
Copied 34928 (count=1)
Finalizing TB execution 984
s2e_dummyMainFunction
tcg-llvm-tb-983-8048a0e
Firing timer event
935 [State 984] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 983 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
936 [State 984] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e7: 00 00             add [eax], al           
936 [State 984] Terminating state 984 with message 'eliminated a state with an impossible first instruction'
936 [State 984] Switching from state 984 to state 0
Copied 34928 (count=1)
Deleting state 984 0x0x345f47d0
936 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 983
>> fuzzInit: datum forking for value 984
>> fuzzInit: datum forking for value 984
937 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 984)
        (ReadLSB w32 0 v984_fuzz_symb_984)))
    state 985 with condition (Not (Eq false
         (Eq (w32 984)
             (ReadLSB w32 0 v984_fuzz_symb_984))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-984-8048a0e
Size=2 Low=0 splitIndex=1 high=1
937 [State 0] Switching from state 0 to state 985
Copied 34928 (count=1)
Finalizing TB execution 985
s2e_dummyMainFunction
tcg-llvm-tb-984-8048a0e
Firing timer event
937 [State 985] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 984 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
937 [State 985] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e8: 00 00             add [eax], al           
937 [State 985] Terminating state 985 with message 'eliminated a state with an impossible first instruction'
937 [State 985] Switching from state 985 to state 0
Copied 34928 (count=1)
Deleting state 985 0x0x345f47d0
937 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 984
>> fuzzInit: datum forking for value 985
>> fuzzInit: datum forking for value 985
938 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 985)
        (ReadLSB w32 0 v985_fuzz_symb_985)))
    state 986 with condition (Not (Eq false
         (Eq (w32 985)
             (ReadLSB w32 0 v985_fuzz_symb_985))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-985-8048a0e
Size=2 Low=0 splitIndex=1 high=1
938 [State 0] Switching from state 0 to state 986
Copied 34928 (count=1)
Finalizing TB execution 986
s2e_dummyMainFunction
tcg-llvm-tb-985-8048a0e
Firing timer event
938 [State 986] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 985 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
938 [State 986] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771e9: 00 00             add [eax], al           
938 [State 986] Terminating state 986 with message 'eliminated a state with an impossible first instruction'
938 [State 986] Switching from state 986 to state 0
Copied 34928 (count=1)
Deleting state 986 0x0x345f47d0
938 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 985
>> fuzzInit: datum forking for value 986
>> fuzzInit: datum forking for value 986
939 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 986)
        (ReadLSB w32 0 v986_fuzz_symb_986)))
    state 987 with condition (Not (Eq false
         (Eq (w32 986)
             (ReadLSB w32 0 v986_fuzz_symb_986))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-986-8048a0e
Size=2 Low=0 splitIndex=1 high=1
939 [State 0] Switching from state 0 to state 987
Copied 34928 (count=1)
Finalizing TB execution 987
s2e_dummyMainFunction
tcg-llvm-tb-986-8048a0e
Firing timer event
939 [State 987] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 986 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
939 [State 987] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ea: 00 00             add [eax], al           
939 [State 987] Terminating state 987 with message 'eliminated a state with an impossible first instruction'
939 [State 987] Switching from state 987 to state 0
Copied 34928 (count=1)
Deleting state 987 0x0x345f47d0
939 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 986
>> fuzzInit: datum forking for value 987
>> fuzzInit: datum forking for value 987
940 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 987)
        (ReadLSB w32 0 v987_fuzz_symb_987)))
    state 988 with condition (Not (Eq false
         (Eq (w32 987)
             (ReadLSB w32 0 v987_fuzz_symb_987))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-987-8048a0e
Size=2 Low=0 splitIndex=1 high=1
940 [State 0] Switching from state 0 to state 988
Copied 34928 (count=1)
Finalizing TB execution 988
s2e_dummyMainFunction
tcg-llvm-tb-987-8048a0e
Firing timer event
940 [State 988] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 987 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
940 [State 988] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771eb: 00 00             add [eax], al           
940 [State 988] Terminating state 988 with message 'eliminated a state with an impossible first instruction'
940 [State 988] Switching from state 988 to state 0
Copied 34928 (count=1)
Deleting state 988 0x0x345f47d0
940 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 987
>> fuzzInit: datum forking for value 988
>> fuzzInit: datum forking for value 988
941 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 988)
        (ReadLSB w32 0 v988_fuzz_symb_988)))
    state 989 with condition (Not (Eq false
         (Eq (w32 988)
             (ReadLSB w32 0 v988_fuzz_symb_988))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-988-8048a0e
Size=2 Low=0 splitIndex=1 high=1
941 [State 0] Switching from state 0 to state 989
Copied 34928 (count=1)
Finalizing TB execution 989
s2e_dummyMainFunction
tcg-llvm-tb-988-8048a0e
Firing timer event
941 [State 989] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 988 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
941 [State 989] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ec: 00 00             add [eax], al           
941 [State 989] Terminating state 989 with message 'eliminated a state with an impossible first instruction'
941 [State 989] Switching from state 989 to state 0
Copied 34928 (count=1)
Deleting state 989 0x0x348c0070
941 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 988
>> fuzzInit: datum forking for value 989
>> fuzzInit: datum forking for value 989
942 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 989)
        (ReadLSB w32 0 v989_fuzz_symb_989)))
    state 990 with condition (Not (Eq false
         (Eq (w32 989)
             (ReadLSB w32 0 v989_fuzz_symb_989))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-989-8048a0e
Size=2 Low=0 splitIndex=1 high=1
942 [State 0] Switching from state 0 to state 990
Copied 34928 (count=1)
Finalizing TB execution 990
s2e_dummyMainFunction
tcg-llvm-tb-989-8048a0e
Firing timer event
942 [State 990] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 989 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
942 [State 990] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ed: 00 00             add [eax], al           
942 [State 990] Terminating state 990 with message 'eliminated a state with an impossible first instruction'
942 [State 990] Switching from state 990 to state 0
Copied 34928 (count=1)
Deleting state 990 0x0x348c0070
942 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 989
>> fuzzInit: datum forking for value 990
>> fuzzInit: datum forking for value 990
943 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 990)
        (ReadLSB w32 0 v990_fuzz_symb_990)))
    state 991 with condition (Not (Eq false
         (Eq (w32 990)
             (ReadLSB w32 0 v990_fuzz_symb_990))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-990-8048a0e
Size=2 Low=0 splitIndex=1 high=1
943 [State 0] Switching from state 0 to state 991
Copied 34928 (count=1)
Finalizing TB execution 991
s2e_dummyMainFunction
tcg-llvm-tb-990-8048a0e
Firing timer event
943 [State 991] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 990 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
943 [State 991] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ee: 00 00             add [eax], al           
943 [State 991] Terminating state 991 with message 'eliminated a state with an impossible first instruction'
943 [State 991] Switching from state 991 to state 0
Copied 34928 (count=1)
Deleting state 991 0x0x348c0070
943 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 990
>> fuzzInit: datum forking for value 991
>> fuzzInit: datum forking for value 991
944 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 991)
        (ReadLSB w32 0 v991_fuzz_symb_991)))
    state 992 with condition (Not (Eq false
         (Eq (w32 991)
             (ReadLSB w32 0 v991_fuzz_symb_991))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-991-8048a0e
Size=2 Low=0 splitIndex=1 high=1
944 [State 0] Switching from state 0 to state 992
Copied 34928 (count=1)
Finalizing TB execution 992
s2e_dummyMainFunction
tcg-llvm-tb-991-8048a0e
Firing timer event
944 [State 992] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 991 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
944 [State 992] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ef: 00 00             add [eax], al           
944 [State 992] Terminating state 992 with message 'eliminated a state with an impossible first instruction'
944 [State 992] Switching from state 992 to state 0
Copied 34928 (count=1)
Deleting state 992 0x0x348c0070
944 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 991
>> fuzzInit: datum forking for value 992
>> fuzzInit: datum forking for value 992
945 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 992)
        (ReadLSB w32 0 v992_fuzz_symb_992)))
    state 993 with condition (Not (Eq false
         (Eq (w32 992)
             (ReadLSB w32 0 v992_fuzz_symb_992))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-992-8048a0e
Size=2 Low=0 splitIndex=1 high=1
945 [State 0] Switching from state 0 to state 993
Copied 34928 (count=1)
Finalizing TB execution 993
s2e_dummyMainFunction
tcg-llvm-tb-992-8048a0e
945 [State 993] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 992 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
945 [State 993] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f0: 00 00             add [eax], al           
945 [State 993] Terminating state 993 with message 'eliminated a state with an impossible first instruction'
945 [State 993] Switching from state 993 to state 0
Copied 34928 (count=1)
Deleting state 993 0x0x348c0070
945 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 992
>> fuzzInit: datum forking for value 993
>> fuzzInit: datum forking for value 993
946 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 993)
        (ReadLSB w32 0 v993_fuzz_symb_993)))
    state 994 with condition (Not (Eq false
         (Eq (w32 993)
             (ReadLSB w32 0 v993_fuzz_symb_993))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-993-8048a0e
Size=2 Low=0 splitIndex=1 high=1
946 [State 0] Switching from state 0 to state 994
Copied 34928 (count=1)
Finalizing TB execution 994
s2e_dummyMainFunction
tcg-llvm-tb-993-8048a0e
Firing timer event
946 [State 994] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 993 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
946 [State 994] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f1: 00 00             add [eax], al           
946 [State 994] Terminating state 994 with message 'eliminated a state with an impossible first instruction'
946 [State 994] Switching from state 994 to state 0
Copied 34928 (count=1)
Deleting state 994 0x0x348c0070
946 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 993
>> fuzzInit: datum forking for value 994
>> fuzzInit: datum forking for value 994
947 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 994)
        (ReadLSB w32 0 v994_fuzz_symb_994)))
    state 995 with condition (Not (Eq false
         (Eq (w32 994)
             (ReadLSB w32 0 v994_fuzz_symb_994))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-994-8048a0e
Size=2 Low=0 splitIndex=1 high=1
947 [State 0] Switching from state 0 to state 995
Copied 34928 (count=1)
Finalizing TB execution 995
s2e_dummyMainFunction
tcg-llvm-tb-994-8048a0e
Firing timer event
947 [State 995] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 994 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
947 [State 995] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f2: 00 00             add [eax], al           
947 [State 995] Terminating state 995 with message 'eliminated a state with an impossible first instruction'
947 [State 995] Switching from state 995 to state 0
Copied 34928 (count=1)
Deleting state 995 0x0x348c0070
947 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 994
>> fuzzInit: datum forking for value 995
>> fuzzInit: datum forking for value 995
948 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 995)
        (ReadLSB w32 0 v995_fuzz_symb_995)))
    state 996 with condition (Not (Eq false
         (Eq (w32 995)
             (ReadLSB w32 0 v995_fuzz_symb_995))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-995-8048a0e
Size=2 Low=0 splitIndex=1 high=1
948 [State 0] Switching from state 0 to state 996
Copied 34928 (count=1)
Finalizing TB execution 996
s2e_dummyMainFunction
tcg-llvm-tb-995-8048a0e
Firing timer event
948 [State 996] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 995 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
948 [State 996] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f3: 00 00             add [eax], al           
948 [State 996] Terminating state 996 with message 'eliminated a state with an impossible first instruction'
948 [State 996] Switching from state 996 to state 0
Copied 34928 (count=1)
Deleting state 996 0x0x348c0070
948 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 995
>> fuzzInit: datum forking for value 996
>> fuzzInit: datum forking for value 996
949 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 996)
        (ReadLSB w32 0 v996_fuzz_symb_996)))
    state 997 with condition (Not (Eq false
         (Eq (w32 996)
             (ReadLSB w32 0 v996_fuzz_symb_996))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-996-8048a0e
Size=2 Low=0 splitIndex=1 high=1
949 [State 0] Switching from state 0 to state 997
Copied 34928 (count=1)
Finalizing TB execution 997
s2e_dummyMainFunction
tcg-llvm-tb-996-8048a0e
Firing timer event
949 [State 997] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 996 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
949 [State 997] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f4: 00 00             add [eax], al           
949 [State 997] Terminating state 997 with message 'eliminated a state with an impossible first instruction'
949 [State 997] Switching from state 997 to state 0
Copied 34928 (count=1)
Deleting state 997 0x0x348c0070
949 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 996
>> fuzzInit: datum forking for value 997
>> fuzzInit: datum forking for value 997
950 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 997)
        (ReadLSB w32 0 v997_fuzz_symb_997)))
    state 998 with condition (Not (Eq false
         (Eq (w32 997)
             (ReadLSB w32 0 v997_fuzz_symb_997))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-997-8048a0e
Size=2 Low=0 splitIndex=1 high=1
950 [State 0] Switching from state 0 to state 998
Copied 34928 (count=1)
Finalizing TB execution 998
s2e_dummyMainFunction
tcg-llvm-tb-997-8048a0e
Firing timer event
950 [State 998] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 997 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
950 [State 998] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f5: 00 00             add [eax], al           
950 [State 998] Terminating state 998 with message 'eliminated a state with an impossible first instruction'
950 [State 998] Switching from state 998 to state 0
Copied 34928 (count=1)
Deleting state 998 0x0x348c0070
950 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 997
>> fuzzInit: datum forking for value 998
>> fuzzInit: datum forking for value 998
951 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 998)
        (ReadLSB w32 0 v998_fuzz_symb_998)))
    state 999 with condition (Not (Eq false
         (Eq (w32 998)
             (ReadLSB w32 0 v998_fuzz_symb_998))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-998-8048a0e
Size=2 Low=0 splitIndex=1 high=1
951 [State 0] Switching from state 0 to state 999
Copied 34928 (count=1)
Finalizing TB execution 999
s2e_dummyMainFunction
tcg-llvm-tb-998-8048a0e
Firing timer event
951 [State 999] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 998 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
951 [State 999] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f6: 00 00             add [eax], al           
951 [State 999] Terminating state 999 with message 'eliminated a state with an impossible first instruction'
951 [State 999] Switching from state 999 to state 0
Copied 34928 (count=1)
Deleting state 999 0x0x348c0070
951 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 998
>> fuzzInit: datum forking for value 999
>> fuzzInit: datum forking for value 999
952 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 999)
        (ReadLSB w32 0 v999_fuzz_symb_999)))
    state 1000 with condition (Not (Eq false
         (Eq (w32 999)
             (ReadLSB w32 0 v999_fuzz_symb_999))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-999-8048a0e
Size=2 Low=0 splitIndex=1 high=1
952 [State 0] Switching from state 0 to state 1000
Copied 34928 (count=1)
Finalizing TB execution 1000
s2e_dummyMainFunction
tcg-llvm-tb-999-8048a0e
952 [State 1000] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 999 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
952 [State 1000] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f7: 00 00             add [eax], al           
952 [State 1000] Terminating state 1000 with message 'eliminated a state with an impossible first instruction'
952 [State 1000] Switching from state 1000 to state 0
Copied 34928 (count=1)
Deleting state 1000 0x0x348c0070
952 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 999
>> fuzzInit: datum forking for value 1000
>> fuzzInit: datum forking for value 1000
953 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1000)
        (ReadLSB w32 0 v1000_fuzz_symb_1000)))
    state 1001 with condition (Not (Eq false
         (Eq (w32 1000)
             (ReadLSB w32 0 v1000_fuzz_symb_1000))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1000-8048a0e
Size=2 Low=0 splitIndex=1 high=1
953 [State 0] Switching from state 0 to state 1001
Copied 34928 (count=1)
Finalizing TB execution 1001
s2e_dummyMainFunction
tcg-llvm-tb-1000-8048a0e
953 [State 1001] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1000 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
953 [State 1001] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f8: 00 00             add [eax], al           
953 [State 1001] Terminating state 1001 with message 'eliminated a state with an impossible first instruction'
953 [State 1001] Switching from state 1001 to state 0
Copied 34928 (count=1)
Deleting state 1001 0x0x348c0070
953 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1000
>> fuzzInit: datum forking for value 1001
>> fuzzInit: datum forking for value 1001
954 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1001)
        (ReadLSB w32 0 v1001_fuzz_symb_1001)))
    state 1002 with condition (Not (Eq false
         (Eq (w32 1001)
             (ReadLSB w32 0 v1001_fuzz_symb_1001))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1001-8048a0e
Size=2 Low=0 splitIndex=1 high=1
954 [State 0] Switching from state 0 to state 1002
Copied 34928 (count=1)
Finalizing TB execution 1002
s2e_dummyMainFunction
tcg-llvm-tb-1001-8048a0e
Firing timer event
954 [State 1002] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1001 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
954 [State 1002] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771f9: 00 00             add [eax], al           
954 [State 1002] Terminating state 1002 with message 'eliminated a state with an impossible first instruction'
954 [State 1002] Switching from state 1002 to state 0
Copied 34928 (count=1)
Deleting state 1002 0x0x348c0070
954 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1001
>> fuzzInit: datum forking for value 1002
>> fuzzInit: datum forking for value 1002
955 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1002)
        (ReadLSB w32 0 v1002_fuzz_symb_1002)))
    state 1003 with condition (Not (Eq false
         (Eq (w32 1002)
             (ReadLSB w32 0 v1002_fuzz_symb_1002))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1002-8048a0e
Size=2 Low=0 splitIndex=1 high=1
955 [State 0] Switching from state 0 to state 1003
Copied 34928 (count=1)
Finalizing TB execution 1003
s2e_dummyMainFunction
tcg-llvm-tb-1002-8048a0e
Firing timer event
955 [State 1003] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1002 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
955 [State 1003] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771fa: 00 00             add [eax], al           
955 [State 1003] Terminating state 1003 with message 'eliminated a state with an impossible first instruction'
955 [State 1003] Switching from state 1003 to state 0
Copied 34928 (count=1)
Deleting state 1003 0x0x348c0070
955 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1002
>> fuzzInit: datum forking for value 1003
>> fuzzInit: datum forking for value 1003
956 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1003)
        (ReadLSB w32 0 v1003_fuzz_symb_1003)))
    state 1004 with condition (Not (Eq false
         (Eq (w32 1003)
             (ReadLSB w32 0 v1003_fuzz_symb_1003))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1003-8048a0e
Size=2 Low=0 splitIndex=1 high=1
956 [State 0] Switching from state 0 to state 1004
Copied 34928 (count=1)
Finalizing TB execution 1004
s2e_dummyMainFunction
tcg-llvm-tb-1003-8048a0e
Firing timer event
956 [State 1004] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1003 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
956 [State 1004] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771fb: 00 00             add [eax], al           
956 [State 1004] Terminating state 1004 with message 'eliminated a state with an impossible first instruction'
956 [State 1004] Switching from state 1004 to state 0
Copied 34928 (count=1)
Deleting state 1004 0x0x348c0070
956 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1003
>> fuzzInit: datum forking for value 1004
>> fuzzInit: datum forking for value 1004
957 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1004)
        (ReadLSB w32 0 v1004_fuzz_symb_1004)))
    state 1005 with condition (Not (Eq false
         (Eq (w32 1004)
             (ReadLSB w32 0 v1004_fuzz_symb_1004))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1004-8048a0e
Size=2 Low=0 splitIndex=1 high=1
957 [State 0] Switching from state 0 to state 1005
Copied 34928 (count=1)
Finalizing TB execution 1005
s2e_dummyMainFunction
tcg-llvm-tb-1004-8048a0e
Firing timer event
957 [State 1005] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1004 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
957 [State 1005] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771fc: 00 00             add [eax], al           
957 [State 1005] Terminating state 1005 with message 'eliminated a state with an impossible first instruction'
957 [State 1005] Switching from state 1005 to state 0
Copied 34928 (count=1)
Deleting state 1005 0x0x34dcb460
957 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1004
>> fuzzInit: datum forking for value 1005
>> fuzzInit: datum forking for value 1005
958 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1005)
        (ReadLSB w32 0 v1005_fuzz_symb_1005)))
    state 1006 with condition (Not (Eq false
         (Eq (w32 1005)
             (ReadLSB w32 0 v1005_fuzz_symb_1005))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1005-8048a0e
Size=2 Low=0 splitIndex=1 high=1
958 [State 0] Switching from state 0 to state 1006
Copied 34928 (count=1)
Finalizing TB execution 1006
s2e_dummyMainFunction
tcg-llvm-tb-1005-8048a0e
Firing timer event
958 [State 1006] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1005 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
958 [State 1006] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771fd: 00 00             add [eax], al           
958 [State 1006] Terminating state 1006 with message 'eliminated a state with an impossible first instruction'
958 [State 1006] Switching from state 1006 to state 0
Copied 34928 (count=1)
Deleting state 1006 0x0x34dcb460
958 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1005
>> fuzzInit: datum forking for value 1006
>> fuzzInit: datum forking for value 1006
959 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1006)
        (ReadLSB w32 0 v1006_fuzz_symb_1006)))
    state 1007 with condition (Not (Eq false
         (Eq (w32 1006)
             (ReadLSB w32 0 v1006_fuzz_symb_1006))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1006-8048a0e
Size=2 Low=0 splitIndex=1 high=1
959 [State 0] Switching from state 0 to state 1007
Copied 34928 (count=1)
Finalizing TB execution 1007
s2e_dummyMainFunction
tcg-llvm-tb-1006-8048a0e
Firing timer event
959 [State 1007] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1006 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
959 [State 1007] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771fe: 00 00             add [eax], al           
959 [State 1007] Terminating state 1007 with message 'eliminated a state with an impossible first instruction'
959 [State 1007] Switching from state 1007 to state 0
Copied 34928 (count=1)
Deleting state 1007 0x0x34e0bfc0
959 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1006
>> fuzzInit: datum forking for value 1007
>> fuzzInit: datum forking for value 1007
960 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1007)
        (ReadLSB w32 0 v1007_fuzz_symb_1007)))
    state 1008 with condition (Not (Eq false
         (Eq (w32 1007)
             (ReadLSB w32 0 v1007_fuzz_symb_1007))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1007-8048a0e
Size=2 Low=0 splitIndex=1 high=1
960 [State 0] Switching from state 0 to state 1008
Copied 34928 (count=1)
Finalizing TB execution 1008
s2e_dummyMainFunction
tcg-llvm-tb-1007-8048a0e
960 [State 1008] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1007 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
960 [State 1008] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb771ff: 00 00             add [eax], al           
960 [State 1008] Terminating state 1008 with message 'eliminated a state with an impossible first instruction'
960 [State 1008] Switching from state 1008 to state 0
Copied 34928 (count=1)
Deleting state 1008 0x0x34e0bfc0
960 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1007
>> fuzzInit: datum forking for value 1008
>> fuzzInit: datum forking for value 1008
961 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1008)
        (ReadLSB w32 0 v1008_fuzz_symb_1008)))
    state 1009 with condition (Not (Eq false
         (Eq (w32 1008)
             (ReadLSB w32 0 v1008_fuzz_symb_1008))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1008-8048a0e
Size=2 Low=0 splitIndex=1 high=1
961 [State 0] Switching from state 0 to state 1009
Copied 34928 (count=1)
Finalizing TB execution 1009
s2e_dummyMainFunction
tcg-llvm-tb-1008-8048a0e
961 [State 1009] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1008 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
Firing timer event
961 [State 1009] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77200: 00 00             add [eax], al           
961 [State 1009] Terminating state 1009 with message 'eliminated a state with an impossible first instruction'
961 [State 1009] Switching from state 1009 to state 0
Copied 34928 (count=1)
Deleting state 1009 0x0x34e0bfc0
961 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1008
>> fuzzInit: datum forking for value 1009
>> fuzzInit: datum forking for value 1009
962 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1009)
        (ReadLSB w32 0 v1009_fuzz_symb_1009)))
    state 1010 with condition (Not (Eq false
         (Eq (w32 1009)
             (ReadLSB w32 0 v1009_fuzz_symb_1009))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1009-8048a0e
Size=2 Low=0 splitIndex=1 high=1
962 [State 0] Switching from state 0 to state 1010
Copied 34928 (count=1)
Finalizing TB execution 1010
s2e_dummyMainFunction
tcg-llvm-tb-1009-8048a0e
962 [State 1010] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1009 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
962 [State 1010] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77201: 00 00             add [eax], al           
962 [State 1010] Terminating state 1010 with message 'eliminated a state with an impossible first instruction'
962 [State 1010] Switching from state 1010 to state 0
Copied 34928 (count=1)
Deleting state 1010 0x0x34e0bfc0
Firing timer event
962 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1009
>> fuzzInit: datum forking for value 1010
>> fuzzInit: datum forking for value 1010
963 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1010)
        (ReadLSB w32 0 v1010_fuzz_symb_1010)))
    state 1011 with condition (Not (Eq false
         (Eq (w32 1010)
             (ReadLSB w32 0 v1010_fuzz_symb_1010))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1010-8048a0e
Size=2 Low=0 splitIndex=1 high=1
963 [State 0] Switching from state 0 to state 1011
Copied 34928 (count=1)
Finalizing TB execution 1011
s2e_dummyMainFunction
tcg-llvm-tb-1010-8048a0e
963 [State 1011] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1010 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
963 [State 1011] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77202: 00 00             add [eax], al           
963 [State 1011] Terminating state 1011 with message 'eliminated a state with an impossible first instruction'
963 [State 1011] Switching from state 1011 to state 0
Copied 34928 (count=1)
Deleting state 1011 0x0x34e0bfc0
Firing timer event
963 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1010
>> fuzzInit: datum forking for value 1011
>> fuzzInit: datum forking for value 1011
964 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1011)
        (ReadLSB w32 0 v1011_fuzz_symb_1011)))
    state 1012 with condition (Not (Eq false
         (Eq (w32 1011)
             (ReadLSB w32 0 v1011_fuzz_symb_1011))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1011-8048a0e
Size=2 Low=0 splitIndex=1 high=1
964 [State 0] Switching from state 0 to state 1012
Copied 34928 (count=1)
Finalizing TB execution 1012
s2e_dummyMainFunction
tcg-llvm-tb-1011-8048a0e
964 [State 1012] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1011 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
964 [State 1012] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77203: 00 00             add [eax], al           
964 [State 1012] Terminating state 1012 with message 'eliminated a state with an impossible first instruction'
964 [State 1012] Switching from state 1012 to state 0
Copied 34928 (count=1)
Deleting state 1012 0x0x34e0bfc0
Firing timer event
964 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1011
>> fuzzInit: datum forking for value 1012
>> fuzzInit: datum forking for value 1012
965 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1012)
        (ReadLSB w32 0 v1012_fuzz_symb_1012)))
    state 1013 with condition (Not (Eq false
         (Eq (w32 1012)
             (ReadLSB w32 0 v1012_fuzz_symb_1012))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1012-8048a0e
Size=2 Low=0 splitIndex=1 high=1
965 [State 0] Switching from state 0 to state 1013
Copied 34928 (count=1)
Finalizing TB execution 1013
s2e_dummyMainFunction
tcg-llvm-tb-1012-8048a0e
965 [State 1013] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1012 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
965 [State 1013] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77204: 00 00             add [eax], al           
965 [State 1013] Terminating state 1013 with message 'eliminated a state with an impossible first instruction'
965 [State 1013] Switching from state 1013 to state 0
Copied 34928 (count=1)
Deleting state 1013 0x0x34e0bfc0
Firing timer event
965 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1012
>> fuzzInit: datum forking for value 1013
>> fuzzInit: datum forking for value 1013
>> fuzzInit: datum forking for value 1013
966 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1013)
        (ReadLSB w32 0 v1013_fuzz_symb_1013)))
    state 1014 with condition (Not (Eq false
         (Eq (w32 1013)
             (ReadLSB w32 0 v1013_fuzz_symb_1013))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1013-8048a0e
Size=2 Low=0 splitIndex=1 high=1
966 [State 0] Switching from state 0 to state 1014
Copied 34928 (count=1)
Finalizing TB execution 1014
s2e_dummyMainFunction
tcg-llvm-tb-1013-8048a0e
966 [State 1014] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1013 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
966 [State 1014] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77205: 00 00             add [eax], al           
966 [State 1014] Terminating state 1014 with message 'eliminated a state with an impossible first instruction'
966 [State 1014] Switching from state 1014 to state 0
Copied 34928 (count=1)
Deleting state 1014 0x0x34e0bfc0
Firing timer event
966 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1013
>> fuzzInit: datum forking for value 1014
>> fuzzInit: datum forking for value 1014
967 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1014)
        (ReadLSB w32 0 v1014_fuzz_symb_1014)))
    state 1015 with condition (Not (Eq false
         (Eq (w32 1014)
             (ReadLSB w32 0 v1014_fuzz_symb_1014))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1014-8048a0e
Size=2 Low=0 splitIndex=1 high=1
967 [State 0] Switching from state 0 to state 1015
Copied 34928 (count=1)
Finalizing TB execution 1015
s2e_dummyMainFunction
tcg-llvm-tb-1014-8048a0e
967 [State 1015] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1014 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
967 [State 1015] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77206: 00 00             add [eax], al           
967 [State 1015] Terminating state 1015 with message 'eliminated a state with an impossible first instruction'
967 [State 1015] Switching from state 1015 to state 0
Copied 34928 (count=1)
Deleting state 1015 0x0x34e0bfc0
Firing timer event
967 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1014
>> fuzzInit: datum forking for value 1015
>> fuzzInit: datum forking for value 1015
968 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1015)
        (ReadLSB w32 0 v1015_fuzz_symb_1015)))
    state 1016 with condition (Not (Eq false
         (Eq (w32 1015)
             (ReadLSB w32 0 v1015_fuzz_symb_1015))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1015-8048a0e
Size=2 Low=0 splitIndex=1 high=1
968 [State 0] Switching from state 0 to state 1016
Copied 34928 (count=1)
Finalizing TB execution 1016
s2e_dummyMainFunction
tcg-llvm-tb-1015-8048a0e
968 [State 1016] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1015 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
968 [State 1016] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77207: 00 00             add [eax], al           
968 [State 1016] Terminating state 1016 with message 'eliminated a state with an impossible first instruction'
968 [State 1016] Switching from state 1016 to state 0
Copied 34928 (count=1)
Deleting state 1016 0x0x34e0bfc0
Firing timer event
968 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1015
>> fuzzInit: datum forking for value 1016
>> fuzzInit: datum forking for value 1016
969 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1016)
        (ReadLSB w32 0 v1016_fuzz_symb_1016)))
    state 1017 with condition (Not (Eq false
         (Eq (w32 1016)
             (ReadLSB w32 0 v1016_fuzz_symb_1016))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1016-8048a0e
Size=2 Low=0 splitIndex=1 high=1
969 [State 0] Switching from state 0 to state 1017
Copied 34928 (count=1)
Finalizing TB execution 1017
s2e_dummyMainFunction
tcg-llvm-tb-1016-8048a0e
969 [State 1017] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1016 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
969 [State 1017] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77208: 00 00             add [eax], al           
969 [State 1017] Terminating state 1017 with message 'eliminated a state with an impossible first instruction'
969 [State 1017] Switching from state 1017 to state 0
Copied 34928 (count=1)
Deleting state 1017 0x0x34e0bfc0
Firing timer event
969 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1016
>> fuzzInit: datum forking for value 1017
>> fuzzInit: datum forking for value 1017
970 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1017)
        (ReadLSB w32 0 v1017_fuzz_symb_1017)))
    state 1018 with condition (Not (Eq false
         (Eq (w32 1017)
             (ReadLSB w32 0 v1017_fuzz_symb_1017))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1017-8048a0e
Size=2 Low=0 splitIndex=1 high=1
970 [State 0] Switching from state 0 to state 1018
Copied 34928 (count=1)
Finalizing TB execution 1018
s2e_dummyMainFunction
tcg-llvm-tb-1017-8048a0e
970 [State 1018] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1017 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
970 [State 1018] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb77209: 00 00             add [eax], al           
970 [State 1018] Terminating state 1018 with message 'eliminated a state with an impossible first instruction'
970 [State 1018] Switching from state 1018 to state 0
Copied 34928 (count=1)
Deleting state 1018 0x0x34e0bfc0
Firing timer event
970 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1017
>> fuzzInit: datum forking for value 1018
>> fuzzInit: datum forking for value 1018
971 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1018)
        (ReadLSB w32 0 v1018_fuzz_symb_1018)))
    state 1019 with condition (Not (Eq false
         (Eq (w32 1018)
             (ReadLSB w32 0 v1018_fuzz_symb_1018))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1018-8048a0e
Size=2 Low=0 splitIndex=1 high=1
971 [State 0] Switching from state 0 to state 1019
Copied 34928 (count=1)
Finalizing TB execution 1019
s2e_dummyMainFunction
tcg-llvm-tb-1018-8048a0e
971 [State 1019] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1018 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
971 [State 1019] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7720a: 00 00             add [eax], al           
971 [State 1019] Terminating state 1019 with message 'eliminated a state with an impossible first instruction'
971 [State 1019] Switching from state 1019 to state 0
Copied 34928 (count=1)
Deleting state 1019 0x0x34e0bfc0
Firing timer event
971 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1018
>> fuzzInit: datum forking for value 1019
>> fuzzInit: datum forking for value 1019
972 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1019)
        (ReadLSB w32 0 v1019_fuzz_symb_1019)))
    state 1020 with condition (Not (Eq false
         (Eq (w32 1019)
             (ReadLSB w32 0 v1019_fuzz_symb_1019))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1019-8048a0e
Size=2 Low=0 splitIndex=1 high=1
972 [State 0] Switching from state 0 to state 1020
Copied 34928 (count=1)
Finalizing TB execution 1020
s2e_dummyMainFunction
tcg-llvm-tb-1019-8048a0e
972 [State 1020] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1019 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
972 [State 1020] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7720b: 00 00             add [eax], al           
972 [State 1020] Terminating state 1020 with message 'eliminated a state with an impossible first instruction'
972 [State 1020] Switching from state 1020 to state 0
Copied 34928 (count=1)
Deleting state 1020 0x0x34e0bfc0
Firing timer event
972 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1019
>> fuzzInit: datum forking for value 1020
>> fuzzInit: datum forking for value 1020
>> fuzzInit: datum forking for value 1020
973 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1020)
        (ReadLSB w32 0 v1020_fuzz_symb_1020)))
    state 1021 with condition (Not (Eq false
         (Eq (w32 1020)
             (ReadLSB w32 0 v1020_fuzz_symb_1020))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1020-8048a0e
Size=2 Low=0 splitIndex=1 high=1
973 [State 0] Switching from state 0 to state 1021
Copied 34928 (count=1)
Finalizing TB execution 1021
s2e_dummyMainFunction
tcg-llvm-tb-1020-8048a0e
973 [State 1021] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1020 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
973 [State 1021] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7720c: 00 00             add [eax], al           
973 [State 1021] Terminating state 1021 with message 'eliminated a state with an impossible first instruction'
973 [State 1021] Switching from state 1021 to state 0
Copied 34928 (count=1)
Deleting state 1021 0x0x34e0bfc0
973 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1020
>> fuzzInit: datum forking for value 1021
>> fuzzInit: datum forking for value 1021
974 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1021)
        (ReadLSB w32 0 v1021_fuzz_symb_1021)))
    state 1022 with condition (Not (Eq false
         (Eq (w32 1021)
             (ReadLSB w32 0 v1021_fuzz_symb_1021))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1021-8048a0e
Size=2 Low=0 splitIndex=1 high=1
974 [State 0] Switching from state 0 to state 1022
Copied 34928 (count=1)
Finalizing TB execution 1022
s2e_dummyMainFunction
tcg-llvm-tb-1021-8048a0e
Firing timer event
974 [State 1022] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1021 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
974 [State 1022] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7720d: 00 00             add [eax], al           
974 [State 1022] Terminating state 1022 with message 'eliminated a state with an impossible first instruction'
974 [State 1022] Switching from state 1022 to state 0
Copied 34928 (count=1)
Deleting state 1022 0x0x34e0bfc0
974 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1021
>> fuzzInit: datum forking for value 1022
>> fuzzInit: datum forking for value 1022
975 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1022)
        (ReadLSB w32 0 v1022_fuzz_symb_1022)))
    state 1023 with condition (Not (Eq false
         (Eq (w32 1022)
             (ReadLSB w32 0 v1022_fuzz_symb_1022))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1022-8048a0e
Size=2 Low=0 splitIndex=1 high=1
975 [State 0] Switching from state 0 to state 1023
Copied 34928 (count=1)
Finalizing TB execution 1023
s2e_dummyMainFunction
tcg-llvm-tb-1022-8048a0e
Firing timer event
975 [State 1023] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1022 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
975 [State 1023] ERROR: this is an impossible first instruction, disasm in debug
  0  2B @0xbfb7720e: 00 00             add [eax], al           
975 [State 1023] Terminating state 1023 with message 'eliminated a state with an impossible first instruction'
975 [State 1023] Switching from state 1023 to state 0
Copied 34928 (count=1)
Deleting state 1023 0x0x34e0bfc0
975 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1022
>> fuzzInit: datum forking for value 1023
>> fuzzInit: datum forking for value 1023
976 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1023)
        (ReadLSB w32 0 v1023_fuzz_symb_1023)))
    state 1024 with condition (Not (Eq false
         (Eq (w32 1023)
             (ReadLSB w32 0 v1023_fuzz_symb_1023))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1023-8048a0e
Size=2 Low=0 splitIndex=1 high=1
976 [State 0] Switching from state 0 to state 1024
Copied 34928 (count=1)
Finalizing TB execution 1024
s2e_dummyMainFunction
tcg-llvm-tb-1023-8048a0e
Firing timer event
976 [State 1024] Message from guest (0xbfb7646c): << About to call dasospreproc_init with shell: 0xbfb76e10 (offset of 1023 not yet applied), shell_len: 1024, eip: 0xbfb77010

>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfb76e10-0xbfb77210 with eip: 0xbfb77010 buffer length: 1024 and syscall number: 4
  1  4B @0xbfb7720f: 00 00 00 00                       disasm didn't do all insn bytes: 2/4 nextPC: 0xbfb77213
976 [State 1024] @0xbfb77213, left buffer range after 1 IoB insns; last IoB insn @0xbfb7720f, disasm in debug.
  1  4B @0xbfb7720f: 00 00 00 00                       disasm didn't do all insn bytes: 2/4 nextPC: 0xbfb77213
  1  1B @0xbfb77213: 50                push eax                 nextPC: 0xbfb77214 jmpPc: 0x355518a0
  2  2B @0xbfb77214: 21 21             and [ecx], esp           nextPC: 0xbfb77216 jmpPc: 0x355518a0
  3  2B @0xbfb77216: c5 ff             invalid                  nextPC: 0xbfb77218 jmpPc: 0x0000001a
  4  1B @0x080499bf: 55                push ebp                 nextPC: 0x080499c0
  5  2B @0x080499c0: 89 e5             mov ebp, esp             nextPC: 0x080499c2
  6  6B @0x080499c2: 81 ec 38 01 00 00 sub esp, 0x138           nextPC: 0x080499c8
  7  6B @0x080499c8: 65 a1 14 00 00 00 mov eax, [gs:0x14]       nextPC: 0x080499ce
  8  3B @0x080499ce: 89 45 f4          mov [ebp-0xc], eax       nextPC: 0x080499d1
  9  2B @0x080499d1: 31 c0             xor eax, eax             nextPC: 0x080499d3
 10  4B @0x080499d3: 83 7d 08 1f       cmp dword [ebp+0x8], 0x1f nextPC: 0x080499d7
 11  2B @0x080499d7: 7f 0d             jg 0xf                   nextPC: 0x080499d9 jmpPc: 0x351ce5b0
 12  3B @0x080499d9: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080499dc
 13  3B @0x080499dc: c1 e0 08          shl eax, 0x8             nextPC: 0x080499df
 14  5B @0x080499df: 05 a0 96 06 08    add eax, 0x80696a0       nextPC: 0x080499e4
 15  2B @0x080499e4: eb 05             jmp 0x7                  nextPC: 0x080499eb jmpPc: 0x03308f01
 16  5B @0x080499eb: ba a4 05 05 08    mov edx, 0x80505a4       nextPC: 0x080499f0
 17  4B @0x080499f0: 89 44 24 10       mov [esp+0x10], eax      nextPC: 0x080499f4
 18  3B @0x080499f4: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080499f7
 19  4B @0x080499f7: 89 44 24 0c       mov [esp+0xc], eax       nextPC: 0x080499fb
 20  4B @0x080499fb: 89 54 24 08       mov [esp+0x8], edx       nextPC: 0x080499ff
 21  8B @0x080499ff: c7 44 24 04 00 01 00 00 mov dword [esp+0x4], 0x100 nextPC: 0x08049a07
 22  6B @0x08049a07: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a0d
 23  3B @0x08049a0d: 89 04 24          mov [esp], eax           nextPC: 0x08049a10
 24  5B @0x08049a10: e8 77 ee ff ff    call 0xffffffffffffee7c  nextPC: 0x0804888c
 25  6B @0xb75f9b2a: 8b 8d 48 fb ff ff mov ecx, [ebp+0xfffffb48] nextPC: 0xb75f9b30 jmpPc: 0x400000000
 26  6B @0xb75f9b30: 8b 85 48 fb ff ff mov eax, [ebp+0xfffffb48] nextPC: 0xb75f9b36 jmpPc: 0x400000000
 27  2B @0xb75f9b36: 8b 11             mov edx, [ecx]           nextPC: 0xb75f9b38 jmpPc: 0x400000000
 28  3B @0xb75f9b38: 83 c0 04          add eax, 0x4             nextPC: 0xb75f9b3b jmpPc: 0x400000000
 29  6B @0xb75f9b3b: 89 85 64 fb ff ff mov [ebp+0xfffffb64], eax nextPC: 0xb75f9b41 jmpPc: 0x400000000
 30  2B @0xb75f9b41: 85 d2             test edx, edx            nextPC: 0xb75f9b43 jmpPc: 0x400000000
 31  6B @0xb75f9b43: 0f 84 7f 2c 00 00 jz dword 0x2c85          nextPC: 0xb75f9b49
 32  7B @0xb75f9b49: 80 bd 50 fb ff ff 53 cmp byte [ebp+0xfffffb50], 0x53 nextPC: 0xb75f9b50 jmpPc: 0x400000000
 33  6B @0xb75f9b50: 0f 84 e0 25 00 00 jz dword 0x25e6          nextPC: 0xb75f9b56 jmpPc: 0x351ce5b0
 34  6B @0xb75f9b56: 8b bd 2c fb ff ff mov edi, [ebp+0xfffffb2c] nextPC: 0xb75f9b5c jmpPc: 0x400000000
 35  2B @0xb75f9b5c: 85 ff             test edi, edi            nextPC: 0xb75f9b5e jmpPc: 0x400000000
 36  6B @0xb75f9b5e: 0f 85 d2 25 00 00 jnz dword 0x25d8         nextPC: 0xb75f9b64 jmpPc: 0x351ce5b0
 37  7B @0xb75f9b64: 83 bd 34 fb ff ff ff cmp dword [ebp+0xfffffb34], 0xff nextPC: 0xb75f9b6b jmpPc: 0x400000000
 38  6B @0xb75f9b6b: 0f 84 58 2a 00 00 jz dword 0x2a5e          nextPC: 0xb75f9b71 jmpPc: 0x351ce5b0
 39  6B @0xb75fc5c9: 8b 8d 34 fb ff ff mov ecx, [ebp+0xfffffb34] nextPC: 0xb75fc5cf jmpPc: 0x4c1008e00
 40  2B @0xb75fc5cf: 89 d7             mov edi, edx             nextPC: 0xb75fc5d1 jmpPc: 0x4c1008e00
 41  2B @0xb75fc5d1: 31 c0             xor eax, eax             nextPC: 0xb75fc5d3 jmpPc: 0x4c1008e00
 42  2B @0xb75fc5d3: f2 ae             repne scasb              nextPC: 0xb75fc5d5 jmpPc: 0xffffffff
 43  2B @0xb75fc5d3: f2 ae             repne scasb              nextPC: 0xb75fc5d5 jmpPc: 0x355e3e90
 44 10B @0xb75fc5d5: c7 85 50 fb ff ff 00 00 00 00 mov dword [ebp+0xfffffb50], 0x0 nextPC: 0xb75fc5df
 45  2B @0xb75fc5df: f7 d1             not ecx                  nextPC: 0xb75fc5e1
 46  3B @0xb75fc5e1: 8d 79 ff          lea edi, [ecx-0x1]       nextPC: 0xb75fc5e4
 47  5B @0xb75fc5e4: e9 c7 d5 ff ff    jmp 0xffffffffffffd5cc   nextPC: 0xb75f9bb0
 48  6B @0xb75f9bb0: 8b 85 1c fb ff ff mov eax, [ebp+0xfffffb1c] nextPC: 0xb75f9bb6
 49  2B @0xb75f9bb6: 29 f8             sub eax, edi             nextPC: 0xb75f9bb8
 50  6B @0xb75f9bb8: 89 85 34 fb ff ff mov [ebp+0xfffffb34], eax nextPC: 0xb75f9bbe
 51  6B @0xb75f9bbe: 0f 88 75 27 00 00 js dword 0x277b          nextPC: 0xb75f9bc4 jmpPc: 0xb75fc5e4
 52  6B @0xb75fc339: 8b 85 6c fb ff ff mov eax, [ebp+0xfffffb6c] nextPC: 0xb75fc33f
 53  2B @0xb75fc33f: 85 c0             test eax, eax            nextPC: 0xb75fc341
 54  6B @0xb75fc341: 0f 88 91 14 00 00 js dword 0x1497          nextPC: 0xb75fc347 jmpPc: 0xb75fc5e4
 55  4B @0xb75fc347: 0f be 46 46       movsx eax, byte [esi+0x46] nextPC: 0xb75fc34b
 56  6B @0xb75fc34b: 8b 8d 54 fb ff ff mov ecx, [ebp+0xfffffb54] nextPC: 0xb75fc351
 57  3B @0xb75fc351: 8b 04 01          mov eax, [ecx+eax]       nextPC: 0xb75fc354
 58  4B @0xb75fc354: 89 7c 24 08       mov [esp+0x8], edi       nextPC: 0xb75fc358
 59  4B @0xb75fc358: 89 54 24 04       mov [esp+0x4], edx       nextPC: 0xb75fc35c
 60  3B @0xb75fc35c: 89 34 24          mov [esp], esi           nextPC: 0xb75fc35f
 61  3B @0xb75fc35f: ff 50 1c          call dword near [eax+0x1c] nextPC: 0x00000000 jmpPc: 0x03308fe0
 62  2B @0xb75fc362: 39 f8             cmp eax, edi             nextPC: 0xb75fc364
 63  6B @0xb75fc364: 0f 84 a2 d7 ff ff jz dword 0xffffffffffffd7a8 nextPC: 0xb75fc36a jmpPc: 0xb75fc5e4
 64  3B @0xb7625925: 83 c4 1c          add esp, 0x1c            nextPC: 0xb7625928
 65  1B @0xb7625928: 5b                pop ebx                  nextPC: 0xb7625929
 66  1B @0xb7625929: 5e                pop esi                  nextPC: 0xb762592a
 67  1B @0xb762592a: 5f                pop edi                  nextPC: 0xb762592b
 68  1B @0xb762592b: 5d                pop ebp                  nextPC: 0xb762592c
 69  1B @0xb762592c: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
 70  6B @0x08049a15: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a1b jmpPc: 0x0196d750
 71  3B @0x08049a1b: 89 04 24          mov [esp], eax           nextPC: 0x08049a1e jmpPc: 0x0196d750
 72  5B @0x08049a1e: e8 39 ee ff ff    call 0xffffffffffffee3e  nextPC: 0x0804885c
 73  6B @0x0804885c: ff 25 60 40 05 08 jmp dword near [0x8054060] nextPC: 0x00000000 jmpPc: 0x7c00000000000000
 74  1B @0xb7619a40: 55                push ebp                 nextPC: 0xb7619a41 jmpPc: 0x355e83a0
 75  2B @0xb7619a41: 89 e5             mov ebp, esp             nextPC: 0xb7619a43 jmpPc: 0x355e83a0
 76  3B @0xb7619a43: 83 ec 20          sub esp, 0x20            nextPC: 0xb7619a46 jmpPc: 0x355e83a0
 77  3B @0xb7619a46: 89 5d f4          mov [ebp-0xc], ebx       nextPC: 0xb7619a49 jmpPc: 0x355e83a0
 78  3B @0xb7619a49: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0xb7619a4c jmpPc: 0x355e83a0
 79  5B @0xb7619a4c: e8 8e 90 fb ff    call 0xfffffffffffb9093  nextPC: 0xb75d2adf
 80  6B @0xb7619a51: 81 c3 a3 55 0e 00 add ebx, 0xe55a3         nextPC: 0xb7619a57 jmpPc: 0x00000010
 81  3B @0xb7619a57: 89 7d fc          mov [ebp-0x4], edi       nextPC: 0xb7619a5a jmpPc: 0x00000010
 82  3B @0xb7619a5a: 89 75 f8          mov [ebp-0x8], esi       nextPC: 0xb7619a5d jmpPc: 0x00000010
 83  3B @0xb7619a5d: 89 04 24          mov [esp], eax           nextPC: 0xb7619a60 jmpPc: 0x00000010
 84  5B @0xb7619a60: e8 9b 5b 01 00    call 0x15ba0             nextPC: 0xb762f600
 85  4B @0xb762f600: 8b 44 24 04       mov eax, [esp+0x4]       nextPC: 0xb762f604 jmpPc: 0x355e9860
 86  5B @0xb762f604: ba 03 00 00 00    mov edx, 0x3             nextPC: 0xb762f609 jmpPc: 0x355e9860
 87  2B @0xb762f609: 21 c2             and edx, eax             nextPC: 0xb762f60b jmpPc: 0x355e9860
 88  2B @0xb762f60b: 74 24             jz 0x26                  nextPC: 0xb762f60d
 89  2B @0xb762f631: 8b 08             mov ecx, [eax]           nextPC: 0xb762f633 jmpPc: 0x355e9860
 90  3B @0xb762f633: 83 c0 04          add eax, 0x4             nextPC: 0xb762f636 jmpPc: 0x355e9860
 91  2B @0xb762f636: 29 ca             sub edx, ecx             nextPC: 0xb762f638 jmpPc: 0x355e9860
 92  6B @0xb762f638: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f63e jmpPc: 0x355e9860
 93  1B @0xb762f63e: 4a                dec edx                  nextPC: 0xb762f63f jmpPc: 0x355e9860
 94  2B @0xb762f63f: 73 58             jae 0x5a                 nextPC: 0xb762f641 jmpPc: 0x0000004a
 95  2B @0xb762f641: 31 ca             xor edx, ecx             nextPC: 0xb762f643
 96  6B @0xb762f643: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f649
 97  2B @0xb762f649: 75 4e             jnz 0x50                 nextPC: 0xb762f64b jmpPc: 0x0000004a
 98  2B @0xb762f64b: 8b 08             mov ecx, [eax]           nextPC: 0xb762f64d
 99  3B @0xb762f64d: 83 c0 04          add eax, 0x4             nextPC: 0xb762f650
100  2B @0xb762f650: 29 ca             sub edx, ecx             nextPC: 0xb762f652
101  6B @0xb762f652: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f658
102  1B @0xb762f658: 4a                dec edx                  nextPC: 0xb762f659
103  2B @0xb762f659: 73 3e             jae 0x40                 nextPC: 0xb762f65b jmpPc: 0x0000004a
104  2B @0xb762f65b: 31 ca             xor edx, ecx             nextPC: 0xb762f65d jmpPc: 0x4c1008e00
105  6B @0xb762f65d: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f663 jmpPc: 0x4c1008e00
106  2B @0xb762f663: 75 34             jnz 0x36                 nextPC: 0xb762f665 jmpPc: 0x0000004a
107  2B @0xb762f665: 8b 08             mov ecx, [eax]           nextPC: 0xb762f667 jmpPc: 0x4c1008e00
108  3B @0xb762f667: 83 c0 04          add eax, 0x4             nextPC: 0xb762f66a jmpPc: 0x4c1008e00
109  2B @0xb762f66a: 29 ca             sub edx, ecx             nextPC: 0xb762f66c jmpPc: 0x4c1008e00
110  6B @0xb762f66c: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f672 jmpPc: 0x4c1008e00
111  1B @0xb762f672: 4a                dec edx                  nextPC: 0xb762f673 jmpPc: 0x4c1008e00
112  2B @0xb762f673: 73 24             jae 0x26                 nextPC: 0xb762f675 jmpPc: 0x0000004a
113  2B @0xb762f675: 31 ca             xor edx, ecx             nextPC: 0xb762f677 jmpPc: 0x4c1008e00
114  6B @0xb762f677: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f67d jmpPc: 0x4c1008e00
115  2B @0xb762f67d: 75 1a             jnz 0x1c                 nextPC: 0xb762f67f jmpPc: 0x0000004a
116  2B @0xb762f67f: 8b 08             mov ecx, [eax]           nextPC: 0xb762f681 jmpPc: 0x4c1008e00
117  3B @0xb762f681: 83 c0 04          add eax, 0x4             nextPC: 0xb762f684 jmpPc: 0x4c1008e00
118  2B @0xb762f684: 29 ca             sub edx, ecx             nextPC: 0xb762f686 jmpPc: 0x4c1008e00
119  6B @0xb762f686: 81 c1 ff fe fe fe add ecx, 0xfefefeff      nextPC: 0xb762f68c jmpPc: 0x4c1008e00
120  1B @0xb762f68c: 4a                dec edx                  nextPC: 0xb762f68d jmpPc: 0x4c1008e00
121  2B @0xb762f68d: 73 0a             jae 0xc                  nextPC: 0xb762f68f jmpPc: 0x0000004a
122  2B @0xb762f68f: 31 ca             xor edx, ecx             nextPC: 0xb762f691 jmpPc: 0x4c1008e00
123  6B @0xb762f691: 81 e2 00 01 01 01 and edx, 0x1010100       nextPC: 0xb762f697 jmpPc: 0x4c1008e00
124  2B @0xb762f697: 74 98             jz 0xffffffffffffff9a    nextPC: 0xb762f699 jmpPc: 0x0000004a
125  3B @0xb762f699: 83 e8 04          sub eax, 0x4             nextPC: 0xb762f69c jmpPc: 0x4c1008e00
126  6B @0xb762f69c: 81 e9 ff fe fe fe sub ecx, 0xfefefeff      nextPC: 0xb762f6a2 jmpPc: 0x4c1008e00
127  3B @0xb762f6a2: 80 f9 00          cmp cl, 0x0              nextPC: 0xb762f6a5 jmpPc: 0x4c1008e00
128  2B @0xb762f6a5: 74 0f             jz 0x11                  nextPC: 0xb762f6a7 jmpPc: 0x0000004a
129  1B @0xb762f6a7: 40                inc eax                  nextPC: 0xb762f6a8 jmpPc: 0x4c1008e00
130  2B @0xb762f6a8: 84 ed             test ch, ch              nextPC: 0xb762f6aa jmpPc: 0x4c1008e00
131  2B @0xb762f6aa: 74 0a             jz 0xc                   nextPC: 0xb762f6ac jmpPc: 0x00000040
132  4B @0xb762f6b6: 2b 44 24 04       sub eax, [esp+0x4]       nextPC: 0xb762f6ba jmpPc: 0x4c1008e00
133  1B @0xb762f6ba: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
134  6B @0xb7619a65: 8b 93 4c 08 00 00 mov edx, [ebx+0x84c]     nextPC: 0xb7619a6b jmpPc: 0x0196d750
135  4B @0xb7619a6b: 66 83 3a 00       cmp word [edx], 0x0      nextPC: 0xb7619a6f jmpPc: 0x0196d750
136  3B @0xb7619a6f: 89 55 f0          mov [ebp-0x10], edx      nextPC: 0xb7619a72 jmpPc: 0x0196d750
137  2B @0xb7619a72: 89 c7             mov edi, eax             nextPC: 0xb7619a74 jmpPc: 0x0196d750
138  2B @0xb7619a74: 89 d0             mov eax, edx             nextPC: 0xb7619a76 jmpPc: 0x0196d750
139  2B @0xb7619a76: 78 42             js 0x44                  nextPC: 0xb7619a78 jmpPc: 0x00000040
140  3B @0xb7619a78: 8b 72 48          mov esi, [edx+0x48]      nextPC: 0xb7619a7b jmpPc: 0x0196d750
141  7B @0xb7619a7b: 65 8b 0d 08 00 00 00 mov ecx, [gs:0x8]        nextPC: 0xb7619a82 jmpPc: 0x0196d750
142  3B @0xb7619a82: 89 4d ec          mov [ebp-0x14], ecx      nextPC: 0xb7619a85 jmpPc: 0x0196d750
143  3B @0xb7619a85: 39 4e 08          cmp [esi+0x8], ecx       nextPC: 0xb7619a88 jmpPc: 0x0196d750
144  2B @0xb7619a88: 74 2a             jz 0x2c                  nextPC: 0xb7619a8a jmpPc: 0x00000040
145  2B @0xb7619a8a: 31 c0             xor eax, eax             nextPC: 0xb7619a8c jmpPc: 0x0196d750
146  5B @0xb7619a8c: b9 01 00 00 00    mov ecx, 0x1             nextPC: 0xb7619a91 jmpPc: 0x0196d750
147  8B @0xb7619a91: 65 83 3d 0c 00 00 00 00 cmp dword [gs:0xc], 0x0  nextPC: 0xb7619a99 jmpPc: 0x0196d750
148  2B @0xb7619a99: 74 01             jz 0x3                   nextPC: 0xb7619a9b jmpPc: 0x00000040
149  3B @0xb7619a9c: 0f b1 0e          cmpxchg [esi], ecx       nextPC: 0xb7619a9f jmpPc: 0x0196d750
150  6B @0xb7619a9f: 0f 85 4c 01 00 00 jnz dword 0x152          nextPC: 0xb7619aa5 jmpPc: 0x00000040
151  3B @0xb7619aa5: 8b 72 48          mov esi, [edx+0x48]      nextPC: 0xb7619aa8 jmpPc: 0x0196d750
152  3B @0xb7619aa8: 8b 45 ec          mov eax, [ebp-0x14]      nextPC: 0xb7619aab jmpPc: 0x0196d750
153  6B @0xb7619aab: 8b 93 4c 08 00 00 mov edx, [ebx+0x84c]     nextPC: 0xb7619ab1 jmpPc: 0x0196d750
154  3B @0xb7619ab1: 89 46 08          mov [esi+0x8], eax       nextPC: 0xb7619ab4 jmpPc: 0x0196d750
155  4B @0xb7619ab4: 83 46 04 01       add dword [esi+0x4], 0x1 nextPC: 0xb7619ab8 jmpPc: 0x0196d750
156  2B @0xb7619ab8: 89 d0             mov eax, edx             nextPC: 0xb7619aba jmpPc: 0x0196d750
157  4B @0xb7619aba: 0f b6 4a 46       movzx ecx, byte [edx+0x46] nextPC: 0xb7619abe jmpPc: 0x0196d750
158  2B @0xb7619abe: 84 c9             test cl, cl              nextPC: 0xb7619ac0 jmpPc: 0x0196d750
159  6B @0xb7619ac0: 0f 84 92 00 00 00 jz dword 0x98            nextPC: 0xb7619ac6 jmpPc: 0x00000040
160  6B @0xb7619b58: 8b 83 f4 fe ff ff mov eax, [ebx+0xfffffef4] nextPC: 0xb7619b5e jmpPc: 0x0196d750
161  2B @0xb7619b5e: 85 c0             test eax, eax            nextPC: 0xb7619b60 jmpPc: 0x0196d750
162  2B @0xb7619b60: 74 1d             jz 0x1f                  nextPC: 0xb7619b62 jmpPc: 0x00000040
163  3B @0xb7619b62: 8b 42 68          mov eax, [edx+0x68]      nextPC: 0xb7619b65 jmpPc: 0x0196d750
164  2B @0xb7619b65: 85 c0             test eax, eax            nextPC: 0xb7619b67 jmpPc: 0x0196d750
165  2B @0xb7619b67: 75 27             jnz 0x29                 nextPC: 0xb7619b69 jmpPc: 0x00000040
166  3B @0xb7619b90: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7619b93 jmpPc: 0x0196d750
167  6B @0xb7619b93: 0f 85 4c ff ff ff jnz dword 0xffffffffffffff52 nextPC: 0xb7619b99 jmpPc: 0x00000040
168  2B @0xb7619b99: eb d5             jmp 0xffffffffffffffd7   nextPC: 0xb7619b70 jmpPc: 0xfffffeff0006
169  6B @0xb7619b70: 8b 83 4c 08 00 00 mov eax, [ebx+0x84c]     nextPC: 0xb7619b76
170  4B @0xb7619b76: 0f b6 48 46       movzx ecx, byte [eax+0x46] nextPC: 0xb7619b7a
171  5B @0xb7619b7a: e9 47 ff ff ff    jmp 0xffffffffffffff4c   nextPC: 0xb7619ac6 jmpPc: 0x03308f01
172  3B @0xb7619ac6: 0f be c9          movsx ecx, cl            nextPC: 0xb7619ac9
173  7B @0xb7619ac9: 8b 94 08 94 00 00 00 mov edx, [eax+ecx+0x94]  nextPC: 0xb7619ad0
174  3B @0xb7619ad0: 8b 4d 08          mov ecx, [ebp+0x8]       nextPC: 0xb7619ad3
175  4B @0xb7619ad3: 89 7c 24 08       mov [esp+0x8], edi       nextPC: 0xb7619ad7
176  3B @0xb7619ad7: 89 04 24          mov [esp], eax           nextPC: 0xb7619ada
177  4B @0xb7619ada: 89 4c 24 04       mov [esp+0x4], ecx       nextPC: 0xb7619ade
178  3B @0xb7619ade: ff 52 1c          call dword near [edx+0x1c] nextPC: 0x00000000 jmpPc: 0x03308fe0
179  2B @0xb7619ae1: 39 f8             cmp eax, edi             nextPC: 0xb7619ae3 jmpPc: 0x00000002
180  2B @0xb7619ae3: 74 4b             jz 0x4d                  nextPC: 0xb7619ae5 jmpPc: 0x00000040
181  6B @0xb7619b30: 8b 83 4c 08 00 00 mov eax, [ebx+0x84c]     nextPC: 0xb7619b36 jmpPc: 0x00000002
182  3B @0xb7619b36: 8b 50 14          mov edx, [eax+0x14]      nextPC: 0xb7619b39 jmpPc: 0x00000002
183  3B @0xb7619b39: 3b 50 18          cmp edx, [eax+0x18]      nextPC: 0xb7619b3c jmpPc: 0x00000002
184  2B @0xb7619b3c: 73 5d             jae 0x5f                 nextPC: 0xb7619b3e jmpPc: 0x00000040
185  8B @0xb7619b9b: c7 44 24 04 0a 00 00 00 mov dword [esp+0x4], 0xa nextPC: 0xb7619ba3 jmpPc: 0x4c1008e00
186  3B @0xb7619ba3: 89 04 24          mov [esp], eax           nextPC: 0xb7619ba6 jmpPc: 0x4c1008e00
187  5B @0xb7619ba6: e8 f5 c5 00 00    call 0xc5fa              nextPC: 0xb76261a0
188  1B @0xb76261a0: 55                push ebp                 nextPC: 0xb76261a1 jmpPc: 0x00000010
189  2B @0xb76261a1: 89 e5             mov ebp, esp             nextPC: 0xb76261a3 jmpPc: 0x00000010
190  3B @0xb76261a3: 83 ec 10          sub esp, 0x10            nextPC: 0xb76261a6 jmpPc: 0x00000010
191  3B @0xb76261a6: 89 75 fc          mov [ebp-0x4], esi       nextPC: 0xb76261a9 jmpPc: 0x00000010
192  3B @0xb76261a9: 8b 75 08          mov esi, [ebp+0x8]       nextPC: 0xb76261ac jmpPc: 0x00000010
193  3B @0xb76261ac: 89 5d f8          mov [ebp-0x8], ebx       nextPC: 0xb76261af jmpPc: 0x00000010
194  5B @0xb76261af: e8 2b c9 fa ff    call 0xfffffffffffac930  nextPC: 0xb75d2adf
195  6B @0xb76261b4: 81 c3 40 8e 0d 00 add ebx, 0xd8e40         nextPC: 0xb76261ba jmpPc: 0x00000010
196  3B @0xb76261ba: 8b 56 68          mov edx, [esi+0x68]      nextPC: 0xb76261bd jmpPc: 0x00000010
197  2B @0xb76261bd: 85 d2             test edx, edx            nextPC: 0xb76261bf jmpPc: 0x00000010
198  2B @0xb76261bf: 75 11             jnz 0x13                 nextPC: 0xb76261c1 jmpPc: 0xb76261af
199  4B @0xb76261d2: 0f be 46 46       movsx eax, byte [esi+0x46] nextPC: 0xb76261d6 jmpPc: 0x00000010
200  3B @0xb76261d6: 8b 55 0c          mov edx, [ebp+0xc]       nextPC: 0xb76261d9 jmpPc: 0x00000010
201  7B @0xb76261d9: 8b 84 06 94 00 00 00 mov eax, [esi+eax+0x94]  nextPC: 0xb76261e0 jmpPc: 0x00000010
202  3B @0xb76261e0: 89 34 24          mov [esp], esi           nextPC: 0xb76261e3 jmpPc: 0x00000010
203  4B @0xb76261e3: 89 54 24 04       mov [esp+0x4], edx       nextPC: 0xb76261e7 jmpPc: 0x00000010
204  3B @0xb76261e7: ff 50 0c          call dword near [eax+0xc] nextPC: 0x00000000 jmpPc: 0x03308fe0
205  3B @0xb7623997: 3b 46 20          cmp eax, [esi+0x20]      nextPC: 0xb762399a
206  6B @0xb762399a: 0f 84 31 01 00 00 jz dword 0x137           nextPC: 0xb76239a0 jmpPc: 0xb76261af
207  2B @0xb76239a0: 88 10             mov [eax], dl            nextPC: 0xb76239a2
208  2B @0xb76239a2: 8b 0e             mov ecx, [esi]           nextPC: 0xb76239a4
209  3B @0xb76239a4: 83 c0 01          add eax, 0x1             nextPC: 0xb76239a7
210  3B @0xb76239a7: 89 46 14          mov [esi+0x14], eax      nextPC: 0xb76239aa
211  3B @0xb76239aa: f6 c1 02          test cl, 0x2             nextPC: 0xb76239ad
212  6B @0xb76239ad: 0f 85 ad 00 00 00 jnz dword 0xb3           nextPC: 0xb76239b3 jmpPc: 0xb76261af
213  3B @0xb76239b3: 83 fa 0a          cmp edx, 0xa             nextPC: 0xb76239b6
214  6B @0xb76239b6: 0f 84 94 00 00 00 jz dword 0x9a            nextPC: 0xb76239bc jmpPc: 0xb76261af
215  3B @0xb7623a50: 80 e5 02          and ch, 0x2              nextPC: 0xb7623a53 jmpPc: 0x0000001a
216  6B @0xb7623a53: 0f 84 63 ff ff ff jz dword 0xffffffffffffff69 nextPC: 0xb7623a59 jmpPc: 0x34e0bfc0
217  7B @0xb7623a59: 8d b4 26 00 00 00 00 lea esi, [esi+0x0]       nextPC: 0xb7623a60 jmpPc: 0x0000001a
218  3B @0xb7623a60: 8b 4e 10          mov ecx, [esi+0x10]      nextPC: 0xb7623a63 jmpPc: 0x0000001a
219  3B @0xb7623a63: 89 55 f0          mov [ebp-0x10], edx      nextPC: 0xb7623a66 jmpPc: 0x0000001a
220  3B @0xb7623a66: 89 34 24          mov [esp], esi           nextPC: 0xb7623a69 jmpPc: 0x0000001a
221  2B @0xb7623a69: 29 c8             sub eax, ecx             nextPC: 0xb7623a6b jmpPc: 0x0000001a
222  4B @0xb7623a6b: 89 44 24 08       mov [esp+0x8], eax       nextPC: 0xb7623a6f jmpPc: 0x0000001a
223  4B @0xb7623a6f: 89 4c 24 04       mov [esp+0x4], ecx       nextPC: 0xb7623a73 jmpPc: 0x0000001a
224  5B @0xb7623a73: e8 b8 f4 ff ff    call 0xfffffffffffff4bd  nextPC: 0xb7622f30
225  3B @0xb7623a78: 8b 55 f0          mov edx, [ebp-0x10]      nextPC: 0xb7623a7b jmpPc: 0x4bfb75f2f
226  3B @0xb7623a7b: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7623a7e jmpPc: 0x4bfb75f2f
227  6B @0xb7623a7e: 0f 85 38 ff ff ff jnz dword 0xffffffffffffff3e nextPC: 0xb7623a84 jmpPc: 0x7fffbf9c1030
228  3B @0xb76239bc: 0f b6 c2          movzx eax, dl            nextPC: 0xb76239bf jmpPc: 0x4bfb75f2f
229  3B @0xb76239bf: 8b 5d f4          mov ebx, [ebp-0xc]       nextPC: 0xb76239c2 jmpPc: 0x4bfb75f2f
230  3B @0xb76239c2: 8b 75 f8          mov esi, [ebp-0x8]       nextPC: 0xb76239c5 jmpPc: 0x4bfb75f2f
231  3B @0xb76239c5: 8b 7d fc          mov edi, [ebp-0x4]       nextPC: 0xb76239c8 jmpPc: 0x4bfb75f2f
232  2B @0xb76239c8: 89 ec             mov esp, ebp             nextPC: 0xb76239ca jmpPc: 0x4bfb75f2f
233  1B @0xb76239ca: 5d                pop ebp                  nextPC: 0xb76239cb jmpPc: 0x4bfb75f2f
234  1B @0xb76239cb: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
235  3B @0xb76261ea: 8b 5d f8          mov ebx, [ebp-0x8]       nextPC: 0xb76261ed jmpPc: 0x0196d750
236  3B @0xb76261ed: 8b 75 fc          mov esi, [ebp-0x4]       nextPC: 0xb76261f0 jmpPc: 0x0196d750
237  2B @0xb76261f0: 89 ec             mov esp, ebp             nextPC: 0xb76261f2 jmpPc: 0x0196d750
238  1B @0xb76261f2: 5d                pop ebp                  nextPC: 0xb76261f3 jmpPc: 0x0196d750
239  1B @0xb76261f3: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
240  3B @0xb7619bab: 83 f8 ff          cmp eax, 0xff            nextPC: 0xb7619bae jmpPc: 0x400000000
241  6B @0xb7619bae: 0f 84 31 ff ff ff jz dword 0xffffffffffffff37 nextPC: 0xb7619bb4 jmpPc: 0x2aaabdb1ef80
242  2B @0xb7619bb4: eb 91             jmp 0xffffffffffffff93   nextPC: 0xb7619b47 jmpPc: 0x00ff0006
243  3B @0xb7619b47: 83 c7 01          add edi, 0x1             nextPC: 0xb7619b4a
244  5B @0xb7619b4a: b8 ff ff ff 7f    mov eax, 0x7fffffff      nextPC: 0xb7619b4f
245  3B @0xb7619b4f: 0f 48 f8          cmovs edi, eax           nextPC: 0xb7619b52
246  2B @0xb7619b52: eb 96             jmp 0xffffffffffffff98   nextPC: 0xb7619aea jmpPc: 0x03308f01
247  3B @0xb7619aea: 8b 4d f0          mov ecx, [ebp-0x10]      nextPC: 0xb7619aed
248  4B @0xb7619aed: 66 83 39 00       cmp word [ecx], 0x0      nextPC: 0xb7619af1
249  2B @0xb7619af1: 78 2b             js 0x2d                  nextPC: 0xb7619af3 jmpPc: 0x2aaabdb1ef80
250  3B @0xb7619af3: 8b 51 48          mov edx, [ecx+0x48]      nextPC: 0xb7619af6
251  3B @0xb7619af6: 8b 42 04          mov eax, [edx+0x4]       nextPC: 0xb7619af9
252  3B @0xb7619af9: 83 e8 01          sub eax, 0x1             nextPC: 0xb7619afc
253  2B @0xb7619afc: 85 c0             test eax, eax            nextPC: 0xb7619afe
254  3B @0xb7619afe: 89 42 04          mov [edx+0x4], eax       nextPC: 0xb7619b01
255  2B @0xb7619b01: 75 1b             jnz 0x1d                 nextPC: 0xb7619b03 jmpPc: 0x2aaabdb1ef80
256  7B @0xb7619b03: c7 42 08 00 00 00 00 mov dword [edx+0x8], 0x0 nextPC: 0xb7619b0a
257  8B @0xb7619b0a: 65 83 3d 0c 00 00 00 00 cmp dword [gs:0xc], 0x0  nextPC: 0xb7619b12
258  2B @0xb7619b12: 74 01             jz 0x3                   nextPC: 0xb7619b14 jmpPc: 0x351ce5b0
259  3B @0xb7619b15: 83 2a 01          sub dword [edx], 0x1     nextPC: 0xb7619b18
260  6B @0xb7619b18: 0f 85 df 00 00 00 jnz dword 0xe5           nextPC: 0xb7619b1e jmpPc: 0x351ce5b0
261  2B @0xb7619b1e: 89 f8             mov eax, edi             nextPC: 0xb7619b20
262  3B @0xb7619b20: 8b 5d f4          mov ebx, [ebp-0xc]       nextPC: 0xb7619b23
263  3B @0xb7619b23: 8b 75 f8          mov esi, [ebp-0x8]       nextPC: 0xb7619b26
264  3B @0xb7619b26: 8b 7d fc          mov edi, [ebp-0x4]       nextPC: 0xb7619b29
265  2B @0xb7619b29: 89 ec             mov esp, ebp             nextPC: 0xb7619b2b
266  1B @0xb7619b2b: 5d                pop ebp                  nextPC: 0xb7619b2c
267  1B @0xb7619b2c: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
268  6B @0x08049a23: 8d 85 f4 fe ff ff lea eax, [ebp+0xfffffef4] nextPC: 0x08049a29 jmpPc: 0x0196d750
269  4B @0x08049a29: 89 44 24 04       mov [esp+0x4], eax       nextPC: 0x08049a2d jmpPc: 0x0196d750
270  7B @0x08049a2d: c7 04 24 01 00 00 00 mov dword [esp], 0x1     nextPC: 0x08049a34 jmpPc: 0x0196d750
271  5B @0x08049a34: e8 80 ef ff ff    call 0xffffffffffffef85  nextPC: 0x080489b9
272  1B @0x080489b9: 55                push ebp                 nextPC: 0x080489ba jmpPc: 0x00000010
273  2B @0x080489ba: 89 e5             mov ebp, esp             nextPC: 0x080489bc jmpPc: 0x00000010
274  3B @0x080489bc: 83 ec 04          sub esp, 0x4             nextPC: 0x080489bf jmpPc: 0x00000010
275  3B @0x080489bf: 8b 45 0c          mov eax, [ebp+0xc]       nextPC: 0x080489c2 jmpPc: 0x00000010
276  3B @0x080489c2: 89 04 24          mov [esp], eax           nextPC: 0x080489c5 jmpPc: 0x00000010
277  5B @0x080489c5: e8 9a ff ff ff    call 0xffffffffffffff9f  nextPC: 0x08048964 jmpPc: 0x03308f01
278  3B @0x080489ca: 8b 45 08          mov eax, [ebp+0x8]       nextPC: 0x080489cd jmpPc: 0x4c1008e00
279  3B @0x080489cd: 8b 55 0c          mov edx, [ebp+0xc]       nextPC: 0x080489d0 jmpPc: 0x4c1008e00
280  1B @0x080489d0: 53                push ebx                 nextPC: 0x080489d1 jmpPc: 0x4c1008e00
281  2B @0x080489d1: 89 d3             mov ebx, edx             nextPC: 0x080489d3 jmpPc: 0x4c1008e00
282 10B @0x080489d3: 0f 3f 00 06 00 00 00 00 00 00disasm didn't do all insn bytes: 2/a nextPC: 0x080489dd jmpPc: 0x0196d750
283  1B @0x080489dd: 5b                pop ebx                  nextPC: 0x080489de jmpPc: 0x0196d750
284  1B @0x080489de: c9                leave                    nextPC: 0x080489df jmpPc: 0x0196d750
285  1B @0x080489df: c3                ret                      nextPC: 0x00000000 jmpPc: 0x03308fe0
976 [State 1024] Killing state 1024
976 [State 1024] Terminating state 1024 with message 'State was terminated by opcode
            message: "!! Caught fatal signal: 11: SIGSEGV Core Invalid memory reference"
            status: 1'
976 [State 1024] Switching from state 1024 to state 0
Copied 34928 (count=1)
Deleting state 1024 0x0x34e0bfc0
977 [State 0] Message from guest (0xbfb7646c): << Looping fork, currently at 1023
977 [State 0] >> Recv'ed onFini custom insn
>> Recv'ed onFini custom insn
>> There were 2 successes
>>    Printing success 0
>> Success from offset 385
>> Success densities, overlay: 0.226277; avg: 0.226277
>> Success eip: 0xbfb77010 offset from base: 512
>> Printing PC Trace (instructions in order of execution)
>>      1  2B @0xbfb76f91: 75 65                              jnz 0x67                 nextPC: 0xbfb76f93 jmpPc: 0xbfb76ff8
>>      2  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
>>      3  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
>>      4  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
>>      5  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
>>      6  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
>>      7  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
>>      8  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
>>      9  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
>>     10  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
>>     11  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
>>     12  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
>>     13  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
>>     14  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
>>     15  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
>>     16  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
>>     17  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
>>     18  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
>>     19  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (31/137) = 0.226277
>>    Mem_map start_addr: 0xbfb76f91, length: 1024B, valid bytes: 31, exec'ed bytes: 31, range: 137B, end_addr: 0xbfb77019
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfb76f90   7565-- -------- -------- --------   ue.............
0xbfb76fa0 -------- -------- -------- --------  ................
0xbfb76fb0 -------- -------- -------- --------  ................
0xbfb76fc0 -------- -------- -------- --------  ................
0xbfb76fd0 -------- -------- -------- --------  ................
0xbfb76fe0 -------- -------- -------- --------  ................
0xbfb76ff0 -------- -------- 90909090 90909090  ................
0xbfb77000 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfb77010 -------- --e8e8ff ffff               ..........      

>>    Done printing success 0
>>    Printing success 1
>> Success from offset 397
>> Success densities, overlay: 0.96; avg: 0.96
>> Success eip: 0xbfb77010 offset from base: 512
>> Printing PC Trace (instructions in order of execution)
>>      1  1B @0xbfb76f9d: 2f                                 das                      nextPC: 0xbfb76f9e
>>      2  1B @0xbfb76f9e: 90                                 nop                      nextPC: 0xbfb76f9f
>>      3  1B @0xbfb76f9f: 90                                 nop                      nextPC: 0xbfb76fa0
>>      4  1B @0xbfb76fa0: 90                                 nop                      nextPC: 0xbfb76fa1
>>      5  1B @0xbfb76fa1: 90                                 nop                      nextPC: 0xbfb76fa2
>>      6  1B @0xbfb76fa2: 90                                 nop                      nextPC: 0xbfb76fa3
>>      7  1B @0xbfb76fa3: 90                                 nop                      nextPC: 0xbfb76fa4
>>      8  1B @0xbfb76fa4: 90                                 nop                      nextPC: 0xbfb76fa5
>>      9  1B @0xbfb76fa5: 90                                 nop                      nextPC: 0xbfb76fa6
>>     10  1B @0xbfb76fa6: 90                                 nop                      nextPC: 0xbfb76fa7
>>     11  1B @0xbfb76fa7: 90                                 nop                      nextPC: 0xbfb76fa8
>>     12  1B @0xbfb76fa8: 90                                 nop                      nextPC: 0xbfb76fa9
>>     13  1B @0xbfb76fa9: 90                                 nop                      nextPC: 0xbfb76faa
>>     14  1B @0xbfb76faa: 90                                 nop                      nextPC: 0xbfb76fab
>>     15  1B @0xbfb76fab: 90                                 nop                      nextPC: 0xbfb76fac
>>     16  1B @0xbfb76fac: 90                                 nop                      nextPC: 0xbfb76fad
>>     17  1B @0xbfb76fad: 90                                 nop                      nextPC: 0xbfb76fae
>>     18  1B @0xbfb76fae: 90                                 nop                      nextPC: 0xbfb76faf
>>     19  1B @0xbfb76faf: 90                                 nop                      nextPC: 0xbfb76fb0
>>     20  1B @0xbfb76fb0: 90                                 nop                      nextPC: 0xbfb76fb1
>>     21  1B @0xbfb76fb1: 90                                 nop                      nextPC: 0xbfb76fb2
>>     22  1B @0xbfb76fb2: 90                                 nop                      nextPC: 0xbfb76fb3
>>     23  1B @0xbfb76fb3: 90                                 nop                      nextPC: 0xbfb76fb4
>>     24  1B @0xbfb76fb4: 90                                 nop                      nextPC: 0xbfb76fb5
>>     25  1B @0xbfb76fb5: 90                                 nop                      nextPC: 0xbfb76fb6
>>     26  1B @0xbfb76fb6: 90                                 nop                      nextPC: 0xbfb76fb7
>>     27  1B @0xbfb76fb7: 90                                 nop                      nextPC: 0xbfb76fb8
>>     28  1B @0xbfb76fb8: 90                                 nop                      nextPC: 0xbfb76fb9
>>     29  1B @0xbfb76fb9: 90                                 nop                      nextPC: 0xbfb76fba
>>     30  1B @0xbfb76fba: 90                                 nop                      nextPC: 0xbfb76fbb
>>     31  1B @0xbfb76fbb: 90                                 nop                      nextPC: 0xbfb76fbc
>>     32  1B @0xbfb76fbc: 90                                 nop                      nextPC: 0xbfb76fbd
>>     33  1B @0xbfb76fbd: 90                                 nop                      nextPC: 0xbfb76fbe
>>     34  1B @0xbfb76fbe: 90                                 nop                      nextPC: 0xbfb76fbf
>>     35  1B @0xbfb76fbf: 90                                 nop                      nextPC: 0xbfb76fc0
>>     36  1B @0xbfb76fc0: 90                                 nop                      nextPC: 0xbfb76fc1
>>     37  1B @0xbfb76fc1: 90                                 nop                      nextPC: 0xbfb76fc2
>>     38  1B @0xbfb76fc2: 90                                 nop                      nextPC: 0xbfb76fc3
>>     39  1B @0xbfb76fc3: 90                                 nop                      nextPC: 0xbfb76fc4
>>     40  1B @0xbfb76fc4: 90                                 nop                      nextPC: 0xbfb76fc5
>>     41  1B @0xbfb76fc5: 90                                 nop                      nextPC: 0xbfb76fc6
>>     42  1B @0xbfb76fc6: 90                                 nop                      nextPC: 0xbfb76fc7
>>     43  1B @0xbfb76fc7: 90                                 nop                      nextPC: 0xbfb76fc8
>>     44  1B @0xbfb76fc8: 90                                 nop                      nextPC: 0xbfb76fc9
>>     45  1B @0xbfb76fc9: 90                                 nop                      nextPC: 0xbfb76fca
>>     46  1B @0xbfb76fca: 90                                 nop                      nextPC: 0xbfb76fcb
>>     47  1B @0xbfb76fcb: 90                                 nop                      nextPC: 0xbfb76fcc
>>     48  1B @0xbfb76fcc: 90                                 nop                      nextPC: 0xbfb76fcd
>>     49  1B @0xbfb76fcd: 90                                 nop                      nextPC: 0xbfb76fce
>>     50  1B @0xbfb76fce: 90                                 nop                      nextPC: 0xbfb76fcf
>>     51  1B @0xbfb76fcf: 90                                 nop                      nextPC: 0xbfb76fd0
>>     52  1B @0xbfb76fd0: 90                                 nop                      nextPC: 0xbfb76fd1
>>     53  1B @0xbfb76fd1: 90                                 nop                      nextPC: 0xbfb76fd2
>>     54  1B @0xbfb76fd2: 90                                 nop                      nextPC: 0xbfb76fd3
>>     55  1B @0xbfb76fd3: 90                                 nop                      nextPC: 0xbfb76fd4
>>     56  1B @0xbfb76fd4: 90                                 nop                      nextPC: 0xbfb76fd5
>>     57  1B @0xbfb76fd5: 90                                 nop                      nextPC: 0xbfb76fd6
>>     58  1B @0xbfb76fd6: 90                                 nop                      nextPC: 0xbfb76fd7
>>     59  1B @0xbfb76fd7: 90                                 nop                      nextPC: 0xbfb76fd8
>>     60  1B @0xbfb76fd8: 90                                 nop                      nextPC: 0xbfb76fd9
>>     61  1B @0xbfb76fd9: 90                                 nop                      nextPC: 0xbfb76fda
>>     62  1B @0xbfb76fda: 90                                 nop                      nextPC: 0xbfb76fdb
>>     63  1B @0xbfb76fdb: 90                                 nop                      nextPC: 0xbfb76fdc
>>     64  1B @0xbfb76fdc: 90                                 nop                      nextPC: 0xbfb76fdd
>>     65  1B @0xbfb76fdd: 90                                 nop                      nextPC: 0xbfb76fde
>>     66  1B @0xbfb76fde: 90                                 nop                      nextPC: 0xbfb76fdf
>>     67  1B @0xbfb76fdf: 90                                 nop                      nextPC: 0xbfb76fe0
>>     68  1B @0xbfb76fe0: 90                                 nop                      nextPC: 0xbfb76fe1
>>     69  1B @0xbfb76fe1: 90                                 nop                      nextPC: 0xbfb76fe2
>>     70  1B @0xbfb76fe2: 90                                 nop                      nextPC: 0xbfb76fe3
>>     71  1B @0xbfb76fe3: 90                                 nop                      nextPC: 0xbfb76fe4
>>     72  1B @0xbfb76fe4: 90                                 nop                      nextPC: 0xbfb76fe5
>>     73  1B @0xbfb76fe5: 90                                 nop                      nextPC: 0xbfb76fe6
>>     74  1B @0xbfb76fe6: 90                                 nop                      nextPC: 0xbfb76fe7
>>     75  1B @0xbfb76fe7: 90                                 nop                      nextPC: 0xbfb76fe8
>>     76  1B @0xbfb76fe8: 90                                 nop                      nextPC: 0xbfb76fe9
>>     77  1B @0xbfb76fe9: 90                                 nop                      nextPC: 0xbfb76fea
>>     78  1B @0xbfb76fea: 90                                 nop                      nextPC: 0xbfb76feb
>>     79  1B @0xbfb76feb: 90                                 nop                      nextPC: 0xbfb76fec
>>     80  1B @0xbfb76fec: 90                                 nop                      nextPC: 0xbfb76fed
>>     81  1B @0xbfb76fed: 90                                 nop                      nextPC: 0xbfb76fee
>>     82  1B @0xbfb76fee: 90                                 nop                      nextPC: 0xbfb76fef
>>     83  1B @0xbfb76fef: 90                                 nop                      nextPC: 0xbfb76ff0
>>     84  1B @0xbfb76ff0: 90                                 nop                      nextPC: 0xbfb76ff1
>>     85  1B @0xbfb76ff1: 90                                 nop                      nextPC: 0xbfb76ff2
>>     86  1B @0xbfb76ff2: 90                                 nop                      nextPC: 0xbfb76ff3
>>     87  1B @0xbfb76ff3: 90                                 nop                      nextPC: 0xbfb76ff4
>>     88  1B @0xbfb76ff4: 90                                 nop                      nextPC: 0xbfb76ff5
>>     89  1B @0xbfb76ff5: 90                                 nop                      nextPC: 0xbfb76ff6
>>     90  1B @0xbfb76ff6: 90                                 nop                      nextPC: 0xbfb76ff7
>>     91  1B @0xbfb76ff7: 90                                 nop                      nextPC: 0xbfb76ff8
>>     92  1B @0xbfb76ff8: 90                                 nop                      nextPC: 0xbfb76ff9
>>     93  1B @0xbfb76ff9: 90                                 nop                      nextPC: 0xbfb76ffa
>>     94  1B @0xbfb76ffa: 90                                 nop                      nextPC: 0xbfb76ffb
>>     95  1B @0xbfb76ffb: 90                                 nop                      nextPC: 0xbfb76ffc
>>     96  1B @0xbfb76ffc: 90                                 nop                      nextPC: 0xbfb76ffd
>>     97  1B @0xbfb76ffd: 90                                 nop                      nextPC: 0xbfb76ffe
>>     98  1B @0xbfb76ffe: 90                                 nop                      nextPC: 0xbfb76fff
>>     99  1B @0xbfb76fff: 90                                 nop                      nextPC: 0xbfb77000
>>    100  2B @0xbfb77000: eb 13                              jmp 0x15                 nextPC: 0xbfb77015
>>    101  5B @0xbfb77015: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbfb77002
>>    102  1B @0xbfb77002: 59                                 pop ecx                  nextPC: 0xbfb77003
>>    103  2B @0xbfb77003: 31 c0                              xor eax, eax             nextPC: 0xbfb77005
>>    104  2B @0xbfb77005: b0 04                              mov al, 0x4              nextPC: 0xbfb77007
>>    105  2B @0xbfb77007: 31 db                              xor ebx, ebx             nextPC: 0xbfb77009
>>    106  1B @0xbfb77009: 43                                 inc ebx                  nextPC: 0xbfb7700a
>>    107  2B @0xbfb7700a: 31 d2                              xor edx, edx             nextPC: 0xbfb7700c
>>    108  2B @0xbfb7700c: b2 0f                              mov dl, 0xf              nextPC: 0xbfb7700e
>>    109  2B @0xbfb7700e: cd 80                              int 0x80                 nextPC: 0xbfb77010
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (120/125) = 0.96
>>    Mem_map start_addr: 0xbfb76f9d, length: 1024B, valid bytes: 120, exec'ed bytes: 120, range: 125B, end_addr: 0xbfb77019
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfb76f90                              2f9090               /..
0xbfb76fa0 90909090 90909090 90909090 90909090  ................
0xbfb76fb0 90909090 90909090 90909090 90909090  ................
0xbfb76fc0 90909090 90909090 90909090 90909090  ................
0xbfb76fd0 90909090 90909090 90909090 90909090  ................
0xbfb76fe0 90909090 90909090 90909090 90909090  ................
0xbfb76ff0 90909090 90909090 90909090 90909090  ................
0xbfb77000 eb135931 c0b00431 db4331d2 b20fcd80  ..Y1...1.C1.....
0xbfb77010 -------- --e8e8ff ffff               ..........      

>>    Done printing success 1
>> Done printing successes
>> The success/offset with the highest overlay density is 1, value of 0.96
>> The success/offset with the highest average density is 1, value of 0.96
>> There were 1 different eips: 0xbfb77010 
977 [State 0] Killing state 0
977 [State 0] Terminating state 0 with message 'State was terminated by opcode
            message: "<< Ending state 0"
            status: 0'
All states were terminated
Deleting state 0 0x0x3b60400
Stack trace
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x742189]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44e685]
  /lib/libc.so.6 : exit()+0xe2
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x71d9e1]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x51e77d]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x4530b1]
  /lib/libc.so.6 : __libc_start_main()+0xfe
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44bea9]
