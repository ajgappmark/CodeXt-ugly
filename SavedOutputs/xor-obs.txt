Current data layout: e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128
Current target triple: 
Creating plugin CorePlugin
Creating plugin BaseInstructions
Creating plugin ExecutionTracer
Creating plugin HostFiles
Creating plugin InterruptMonitor
Creating plugin LinuxSyscallMonitor
Creating plugin DasosPreproc
1 [State 0] Created initial state
Adding memory block (startAddr = 0x0, size = 0xa0000, hostAddr = 0x3382000, isSharedConcrete=0)
Adding memory block (startAddr = 0xa0000, size = 0x60000, hostAddr = 0x3629000, isSharedConcrete=1)
Adding memory block (startAddr = 0x100000, size = 0x7f00000, hostAddr = 0x2aaab8aad000, isSharedConcrete=0)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1c50a000, isSharedConcrete=1)
Adding memory block (startAddr = 0xc0000, size = 0x20000, hostAddr = 0x1c553000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x800000, hostAddr = 0x2aaac09af000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x10000, hostAddr = 0x1e07a000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1e0ee000, isSharedConcrete=1)
Initing initial device state.
Looking for relevant virtual devices...
   Registering device slirp
   Shared device block
   Registering device timer
   Shared device ram
   Registering device cpu_common
   Shared device cpu
   Registering device apic
   Registering device fw_cfg
   Registering device i8259
   Registering device i8259
   Registering device PCIBUS
   Registering device I440FX
   Registering device PIIX3
   Registering device cirrus_vga
   Registering device mc146818rtc
   Registering device ioapic
   Registering device i8254
   Registering device serial
   Registering device e1000
   Registering device ide
   Registering device ps2kbd
   Registering device ps2mouse
   Registering device vmmouse
   Registering device pckbd
   Registering device dma
   Registering device dma
   Registering device fdc
   Registering device piix4_pm
   Registering device i2c_bus
WARNING!!! All writes to disk will be lost after shutdown.
Initializing periodic timer
Firing timer event
Firing timer event
Firing timer event
Firing timer event
28 [State 0] Message from guest (0xbf89d97c): << Within execShellcode with params f: 0, c: 2, eip_known: no

>> fuzzInit: datum forking for value 0
>> fuzzInit: datum forking for value 0
28 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 0)
        (ReadLSB w32 0 v0_fuzz_symb_0)))
    state 1 with condition (Not (Eq false
         (Eq (w32 0)
             (ReadLSB w32 0 v0_fuzz_symb_0))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
Size=2 Low=0 splitIndex=1 high=1
28 [State 0] Switching from state 0 to state 1
Copied 34928 (count=1)
Finalizing TB execution 1
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
Firing timer event
28 [State 1] Message from guest (0xbf89d97c): << About to call dasospreproc_init with shell: 0xbf89e320 (offset of 0 not yet applied), shell_len: 74, eip: 0x00000000

28 [State 1] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbf89e320-0xbf89e36a with eip: 0x00000000 buffer length: 74 and syscall number: 1024
  1  2B @0xbf89e320: eb 1a                              jmp 0x1c                 nextPC: 0xbf89e33c
  2  5B @0xbf89e33c: e8 e1 ff ff ff                     call 0xffffffffffffffe6  nextPC: 0xbf89e322
  3  1B @0xbf89e322: 5e                                 pop esi                  nextPC: 0xbf89e323
  4  2B @0xbf89e323: 89 f7                              mov edi, esi             nextPC: 0xbf89e325
  5  2B @0xbf89e325: 89 f2                              mov edx, esi             nextPC: 0xbf89e327
  6  5B @0xbf89e327: b9 29 00 00 00                     mov ecx, 0x29            nextPC: 0xbf89e32c
  7  5B @0xbf89e32c: bb ff 00 00 00                     mov ebx, 0xff            nextPC: 0xbf89e331
  8  2B @0xbf89e331: 31 c0                              xor eax, eax             nextPC: 0xbf89e333
  9  1B @0xbf89e333: 50                                 push eax                 nextPC: 0xbf89e334
 10  1B @0xbf89e334: ac                                 lodsb                    nextPC: 0xbf89e335
 11  2B @0xbf89e335: 31 d8                              xor eax, ebx             nextPC: 0xbf89e337
 12  1B @0xbf89e337: aa                                 stosb                    nextPC: 0xbf89e338
 13  2B @0xbf89e338: e2 fa                              loop 0xfffffffffffffffc  nextPC: 0xbf89e33a jmpPc: 0xbf89e334
!!* pc != prev insn's next_pc; 0xbf89e334 != bf89e33a
 14  1B @0xbf89e334:*ac                                 lodsb                    nextPC: 0xbf89e335
 15  2B @0xbf89e335:*31*d8                              xor eax, ebx             nextPC: 0xbf89e337
 16  1B @0xbf89e337:*aa                                 stosb                    nextPC: 0xbf89e338
 17  2B @0xbf89e338:*e2*fa                              loop 0xfffffffffffffffc  nextPC: 0xbf89e33a jmpPc: 0xbf89e334
 18  2B @0xbf89e33a: ff d2                              call edx                 nextPC: 0x00000000
 19  2B @0xbf89e341: eb 13                              jmp 0x15                 nextPC: 0xbf89e356
 20  5B @0xbf89e356: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbf89e343
 21  1B @0xbf89e343: 59                                 pop ecx                  nextPC: 0xbf89e344
 22  2B @0xbf89e344: 31 c0                              xor eax, eax             nextPC: 0xbf89e346
 23  2B @0xbf89e346: b0 04                              mov al, 0x4              nextPC: 0xbf89e348
 24  2B @0xbf89e348: 31 db                              xor ebx, ebx             nextPC: 0xbf89e34a
 25  1B @0xbf89e34a: 43                                 inc ebx                  nextPC: 0xbf89e34b
 26  2B @0xbf89e34b: 31 d2                              xor edx, edx             nextPC: 0xbf89e34d
 27  2B @0xbf89e34d: b2 0f                              mov dl, 0xf              nextPC: 0xbf89e34f
 28  2B @0xbf89e34f: cd 80                              int 0x80                 nextPC: 0xbf89e351
[State 1] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbf89e35b
EDX=0xf
ESI=0xbf89e36a
EDI=0xbf89e36a
EBP=0xbf89dd88
ESP=0xc6175fe4
EIP=0xc1003190
CR2=0xb763f29f
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> EIP Found. Syscall number 4 at addr 0xbf89e34f offset from base: 47 (should be EIP-2) within pid: 86716416 number of instructions: 28. This is success #1
>> Success from offset 0
>> Success densities, overlay: 0.915254; avg: 1.01695
>> Success eip: 0xbf89e351 offset from base: 49
>> Printing PC Trace (instructions in order of execution)
>>      1  2B @0xbf89e320: eb 1a                              jmp 0x1c                 nextPC: 0xbf89e33c
>>      2  5B @0xbf89e33c: e8 e1 ff ff ff                     call 0xffffffffffffffe6  nextPC: 0xbf89e322
>>      3  1B @0xbf89e322: 5e                                 pop esi                  nextPC: 0xbf89e323
>>      4  2B @0xbf89e323: 89 f7                              mov edi, esi             nextPC: 0xbf89e325
>>      5  2B @0xbf89e325: 89 f2                              mov edx, esi             nextPC: 0xbf89e327
>>      6  5B @0xbf89e327: b9 29 00 00 00                     mov ecx, 0x29            nextPC: 0xbf89e32c
>>      7  5B @0xbf89e32c: bb ff 00 00 00                     mov ebx, 0xff            nextPC: 0xbf89e331
>>      8  2B @0xbf89e331: 31 c0                              xor eax, eax             nextPC: 0xbf89e333
>>      9  1B @0xbf89e333: 50                                 push eax                 nextPC: 0xbf89e334
>>     10  1B @0xbf89e334:*ac                                 lodsb                    nextPC: 0xbf89e335
>>     11  2B @0xbf89e335:*31*d8                              xor eax, ebx             nextPC: 0xbf89e337
>>     12  1B @0xbf89e337:*aa                                 stosb                    nextPC: 0xbf89e338
>>     13  2B @0xbf89e338:*e2*fa                              loop 0xfffffffffffffffc  nextPC: 0xbf89e33a jmpPc: 0xbf89e334
>>     14  1B @0xbf89e334:*ac                                 lodsb                    nextPC: 0xbf89e335
>>     15  2B @0xbf89e335:*31*d8                              xor eax, ebx             nextPC: 0xbf89e337
>>     16  1B @0xbf89e337:*aa                                 stosb                    nextPC: 0xbf89e338
>>     17  2B @0xbf89e338:*e2*fa                              loop 0xfffffffffffffffc  nextPC: 0xbf89e33a jmpPc: 0xbf89e334
>>     18  2B @0xbf89e33a: ff d2                              call edx                 nextPC: 0x00000000
>>     19  2B @0xbf89e341: eb 13                              jmp 0x15                 nextPC: 0xbf89e356
>>     20  5B @0xbf89e356: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbf89e343
>>     21  1B @0xbf89e343: 59                                 pop ecx                  nextPC: 0xbf89e344
>>     22  2B @0xbf89e344: 31 c0                              xor eax, eax             nextPC: 0xbf89e346
>>     23  2B @0xbf89e346: b0 04                              mov al, 0x4              nextPC: 0xbf89e348
>>     24  2B @0xbf89e348: 31 db                              xor ebx, ebx             nextPC: 0xbf89e34a
>>     25  1B @0xbf89e34a: 43                                 inc ebx                  nextPC: 0xbf89e34b
>>     26  2B @0xbf89e34b: 31 d2                              xor edx, edx             nextPC: 0xbf89e34d
>>     27  2B @0xbf89e34d: b2 0f                              mov dl, 0xf              nextPC: 0xbf89e34f
>>     28  2B @0xbf89e34f: cd 80                              int 0x80                 nextPC: 0xbf89e351
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (60/59) = 1.01695
>>    Mem_map start_addr: 0xbf89e320, length: 74B, valid bytes: 60, exec'ed bytes: 54, range: 59B, end_addr: 0xbf89e35a
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbf89e320 eb1a5e89 f789f2b9 29000000 bbff0000  ..^.....).......
0xbf89e330 0031c050 ac31d8aa e2faffd2 e8e1ffff  .1.P.1..........
0xbf89e340 ffeb1359 31c0b004 31db4331 d2b20fcd  ...Y1...1.C1....
0xbf89e350 80------ ----e8e8 ffffff             ...........     

28 [State 1] Terminating state 1 with message 'EIP reached, success'
28 [State 1] Switching from state 1 to state 0
Copied 34928 (count=1)
Deleting state 1 0x0x1f940570
28 [State 0] Message from guest (0xbf89d97c): << Looping fork, currently at 0
>> fuzzInit: datum forking for value 1
>> fuzzInit: datum forking for value 1
29 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 1)
        (ReadLSB w32 0 v1_fuzz_symb_1)))
    state 2 with condition (Not (Eq false
         (Eq (w32 1)
             (ReadLSB w32 0 v1_fuzz_symb_1))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-1-8048a0e
Size=2 Low=0 splitIndex=1 high=1
29 [State 0] Switching from state 0 to state 2
Copied 34928 (count=1)
Finalizing TB execution 2
s2e_dummyMainFunction
tcg-llvm-tb-1-8048a0e
29 [State 2] Message from guest (0xbf89d97c): << About to call dasospreproc_init with shell: 0xbf89e320 (offset of 1 not yet applied), shell_len: 74, eip: 0x00000000

29 [State 2] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbf89e320-0xbf89e36a with eip: 0x00000000 buffer length: 74 and syscall number: 1024
  1  3B @0xbf89e321: 1a 5e 89                           sbb bl, [esi-0x77]       nextPC: 0xbf89e324
  2  6B @0xbf89e324: f7 89 f2 b9 29 00                  invalid                  nextPC: 0xbf89e32a
29 [State 2] @0x080499bf, left buffer range after 2 IoB insns; last IoB insn @0xbf89e324, disasm in debug.
  1  6B @0xbf89e324: f7 89 f2 b9 29 00                  invalid                  nextPC: 0xbf89e32a
29 [State 2] ERROR: we've left our module/shellcode unexpectedly, terminateStateEarly
29 [State 2] Terminating state 2 with message 'eliminated a state that exec'ed out of module bounds unexpectedly'
29 [State 2] Switching from state 2 to state 0
Copied 34928 (count=1)
Deleting state 2 0x0x1f8e0e60
29 [State 0] Message from guest (0xbf89d97c): << Looping fork, currently at 1
29 [State 0] >> Recv'ed onFini custom insn
>> Recv'ed onFini custom insn
>> There were 1 successes
>>    Printing success 0
>> Success from offset 0
>> Success densities, overlay: 0.915254; avg: 1.01695
>> Success eip: 0xbf89e351 offset from base: 49
>> Printing PC Trace (instructions in order of execution)
>>      1  2B @0xbf89e320: eb 1a                              jmp 0x1c                 nextPC: 0xbf89e33c
>>      2  5B @0xbf89e33c: e8 e1 ff ff ff                     call 0xffffffffffffffe6  nextPC: 0xbf89e322
>>      3  1B @0xbf89e322: 5e                                 pop esi                  nextPC: 0xbf89e323
>>      4  2B @0xbf89e323: 89 f7                              mov edi, esi             nextPC: 0xbf89e325
>>      5  2B @0xbf89e325: 89 f2                              mov edx, esi             nextPC: 0xbf89e327
>>      6  5B @0xbf89e327: b9 29 00 00 00                     mov ecx, 0x29            nextPC: 0xbf89e32c
>>      7  5B @0xbf89e32c: bb ff 00 00 00                     mov ebx, 0xff            nextPC: 0xbf89e331
>>      8  2B @0xbf89e331: 31 c0                              xor eax, eax             nextPC: 0xbf89e333
>>      9  1B @0xbf89e333: 50                                 push eax                 nextPC: 0xbf89e334
>>     10  1B @0xbf89e334:*ac                                 lodsb                    nextPC: 0xbf89e335
>>     11  2B @0xbf89e335:*31*d8                              xor eax, ebx             nextPC: 0xbf89e337
>>     12  1B @0xbf89e337:*aa                                 stosb                    nextPC: 0xbf89e338
>>     13  2B @0xbf89e338:*e2*fa                              loop 0xfffffffffffffffc  nextPC: 0xbf89e33a jmpPc: 0xbf89e334
>>     14  1B @0xbf89e334:*ac                                 lodsb                    nextPC: 0xbf89e335
>>     15  2B @0xbf89e335:*31*d8                              xor eax, ebx             nextPC: 0xbf89e337
>>     16  1B @0xbf89e337:*aa                                 stosb                    nextPC: 0xbf89e338
>>     17  2B @0xbf89e338:*e2*fa                              loop 0xfffffffffffffffc  nextPC: 0xbf89e33a jmpPc: 0xbf89e334
>>     18  2B @0xbf89e33a: ff d2                              call edx                 nextPC: 0x00000000
>>     19  2B @0xbf89e341: eb 13                              jmp 0x15                 nextPC: 0xbf89e356
>>     20  5B @0xbf89e356: e8 e8 ff ff ff                     call 0xffffffffffffffed  nextPC: 0xbf89e343
>>     21  1B @0xbf89e343: 59                                 pop ecx                  nextPC: 0xbf89e344
>>     22  2B @0xbf89e344: 31 c0                              xor eax, eax             nextPC: 0xbf89e346
>>     23  2B @0xbf89e346: b0 04                              mov al, 0x4              nextPC: 0xbf89e348
>>     24  2B @0xbf89e348: 31 db                              xor ebx, ebx             nextPC: 0xbf89e34a
>>     25  1B @0xbf89e34a: 43                                 inc ebx                  nextPC: 0xbf89e34b
>>     26  2B @0xbf89e34b: 31 d2                              xor edx, edx             nextPC: 0xbf89e34d
>>     27  2B @0xbf89e34d: b2 0f                              mov dl, 0xf              nextPC: 0xbf89e34f
>>     28  2B @0xbf89e34f: cd 80                              int 0x80                 nextPC: 0xbf89e351
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (60/59) = 1.01695
>>    Mem_map start_addr: 0xbf89e320, length: 74B, valid bytes: 60, exec'ed bytes: 54, range: 59B, end_addr: 0xbf89e35a
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbf89e320 eb1a5e89 f789f2b9 29000000 bbff0000  ..^.....).......
0xbf89e330 0031c050 ac31d8aa e2faffd2 e8e1ffff  .1.P.1..........
0xbf89e340 ffeb1359 31c0b004 31db4331 d2b20fcd  ...Y1...1.C1....
0xbf89e350 80------ ----e8e8 ffffff             ...........     

>>    Done printing success 0
>> Done printing successes
>> The success/offset with the highest overlay density is 0, value of 0.915254
>> The success/offset with the highest average density is 0, value of 1.01695
>> There were 1 different eips: 0xbf89e351 
29 [State 0] Killing state 0
29 [State 0] Terminating state 0 with message 'State was terminated by opcode
            message: "<< Ending state 0"
            status: 0'
All states were terminated
Deleting state 0 0x0x2f63420
Stack trace
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x742189]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44e685]
  /lib/libc.so.6 : exit()+0xe2
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x71d9e1]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x51e77d]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x4530b1]
  /lib/libc.so.6 : __libc_start_main()+0xfe
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44bea9]
