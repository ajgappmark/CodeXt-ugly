Current data layout: e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128
Current target triple: 
Creating plugin CorePlugin
Creating plugin BaseInstructions
Creating plugin ExecutionTracer
Creating plugin HostFiles
Creating plugin InterruptMonitor
Creating plugin LinuxSyscallMonitor
Creating plugin DasosPreproc
1 [State 0] Created initial state
Adding memory block (startAddr = 0x0, size = 0xa0000, hostAddr = 0x4121000, isSharedConcrete=0)
Adding memory block (startAddr = 0xa0000, size = 0x60000, hostAddr = 0x43c8000, isSharedConcrete=1)
Adding memory block (startAddr = 0x100000, size = 0x7f00000, hostAddr = 0x2aaab8aad000, isSharedConcrete=0)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1d2a9000, isSharedConcrete=1)
Adding memory block (startAddr = 0xc0000, size = 0x20000, hostAddr = 0x1d2f2000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x800000, hostAddr = 0x2aaac09af000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x10000, hostAddr = 0x1ee19000, isSharedConcrete=1)
Adding memory block (startAddr = 0xffffffffffffffff, size = 0x20000, hostAddr = 0x1ee8d000, isSharedConcrete=1)
Initing initial device state.
Looking for relevant virtual devices...
   Registering device slirp
   Shared device block
   Registering device timer
   Shared device ram
   Registering device cpu_common
   Shared device cpu
   Registering device apic
   Registering device fw_cfg
   Registering device i8259
   Registering device i8259
   Registering device PCIBUS
   Registering device I440FX
   Registering device PIIX3
   Registering device cirrus_vga
   Registering device mc146818rtc
   Registering device ioapic
   Registering device i8254
   Registering device serial
   Registering device e1000
   Registering device ide
   Registering device ps2kbd
   Registering device ps2mouse
   Registering device vmmouse
   Registering device pckbd
   Registering device dma
   Registering device dma
   Registering device fdc
   Registering device piix4_pm
   Registering device i2c_bus
WARNING!!! All writes to disk will be lost after shutdown.
Initializing periodic timer
Firing timer event
Firing timer event
Firing timer event
Firing timer event
Firing timer event
25 [State 0] Message from guest (0xbfa2a1cc): << Within execShellcode with params f: 0, c: 1, eip_known: no

>> fuzzInit: datum forking for value 0
>> fuzzInit: datum forking for value 0
25 [State 0] Forking state 0 at pc = 0x8048a0e into states:
    state 0 with condition (Eq false
    (Eq (w32 0)
        (ReadLSB w32 0 v0_fuzz_symb_0)))
    state 1 with condition (Not (Eq false
         (Eq (w32 0)
             (ReadLSB w32 0 v0_fuzz_symb_0))))
Stack frame at fork:
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
Size=2 Low=0 splitIndex=1 high=1
25 [State 0] Switching from state 0 to state 1
Copied 34928 (count=1)
Finalizing TB execution 1
s2e_dummyMainFunction
tcg-llvm-tb-0-8048a0e
25 [State 1] Message from guest (0xbfa2a1cc): << About to call dasospreproc_init with shell: 0xbfa2ab70 (offset of 0 not yet applied), shell_len: 89, eip: 0x00000000

25 [State 1] Warning: EIP is not set, there may be false positives
>> Recv'ed custom insn for a DasosPreproc memory segment within pid 86716416, addr range: 0xbfa2ab70-0xbfa2abc9 with eip: 0x00000000 buffer length: 89 and syscall number: 1024
>>    Mem_map start_addr: 0xbfa2ab70, length: 89B, end_addr: 0xbfa2abc9
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfa2ab70 eb3b5a89 d781ef28 000000fd 31dbb043  .;Z....(....1..C
0xbfa2ab80 b9040000 00f3aa90 909090fc 81c33000  ..............0.
0xbfa2ab90 0000885a 1531c0b0 0431dbb3 0189d131  ...Z.1...1.....1
0xbfa2aba0 d2b217cd 8031c0b0 0131dbcd 80e8c0ff  .....1...1......
0xbfa2abb0 ffff0000 48656c6c 6f2c2057 6f726c64  ....Hello, World
0xbfa2abc0 21206562 783a2075 0a47               ! ebx: u.G      

 >> oTBS pc: 0xbfa2ab70
 >> oTBE Target by pc: 0xbfa2ab70 to pc: 0xbfa2abad
 >> oTIE pc: 0xbfa2ab70:0x00 nextpc: bfa2abad len: 2
  0:  0: 1  2B @0xbfa2ab70: eb 3b                              jmp 0x3d                 nextPC: 0xbfa2abad
 >> oEB pc: 0xbfa2ab70
 >> oEI pc: 0xbfa2ab70
  0:  0: 1  2B @0xbfa2ab70: eb 3b                              jmp 0x3d                 nextPC: 0xbfa2abad
 >> oExc pc: 0xbfa2abad exception_idx: 239(0xef)
 >> oPC prev: 3 curr: 0
 >> oPC prev: 0 curr: 3
 >> oTBS pc: 0xbfa2abad
 >> oTBE Target by pc: 0xbfa2abad to pc: 0xbfa2ab72
 >> oTIE pc: 0xbfa2abad:0x3d nextpc: bfa2ab72 len: 5
  0:  1: 2  5B @0xbfa2abad: e8 c0 ff ff ff                     call 0xffffffffffffffc5  nextPC: 0xbfa2ab72
 >> oDMA OOB Write by seq_num: 1 pc: 0xbfa2abad:0x3d to addr: 0xbfa2a178 len: 4B value:  0xb2  0xab  0xa2  0xbf 
 >> >> oDMA value in memory at that address:  0xb2  0xab  0xa2  0xbf 
 >> oEB pc: 0xbfa2abad
 >> oEI pc: 0xbfa2abad
  1:  1: 2  5B @0xbfa2abad: e8 c0 ff ff ff                     call 0xffffffffffffffc5  nextPC: 0xbfa2ab72
 >> oTBS pc: 0xbfa2ab72
 >> oTIE pc: 0xbfa2ab72:0x02 nextpc: bfa2ab73 len: 1
  0:  2: 3  1B @0xbfa2ab72: 5a                                 pop edx                  nextPC: 0xbfa2ab73
 >> oTIE pc: 0xbfa2ab73:0x03 nextpc: bfa2ab75 len: 2
  0:  3: 3  2B @0xbfa2ab73: 89 d7                              mov edi, edx             nextPC: 0xbfa2ab75
 >> oTIE pc: 0xbfa2ab75:0x05 nextpc: bfa2ab7b len: 6
  0:  4: 3  6B @0xbfa2ab75: 81 ef 28 00 00 00                  sub edi, 0x28            nextPC: 0xbfa2ab7b
 >> oTIE pc: 0xbfa2ab7b:0x0b nextpc: bfa2ab7c len: 1
  0:  5: 3  1B @0xbfa2ab7b: fd                                 std                      nextPC: 0xbfa2ab7c
 >> oTIE pc: 0xbfa2ab7c:0x0c nextpc: bfa2ab7e len: 2
  0:  6: 3  2B @0xbfa2ab7c: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab7e
 >> oTIE pc: 0xbfa2ab7e:0x0e nextpc: bfa2ab80 len: 2
  0:  7: 3  2B @0xbfa2ab7e: b0 43                              mov al, 0x43             nextPC: 0xbfa2ab80
 >> oTIE pc: 0xbfa2ab80:0x10 nextpc: bfa2ab85 len: 5
  0:  8: 3  5B @0xbfa2ab80: b9 04 00 00 00                     mov ecx, 0x4             nextPC: 0xbfa2ab85
 >> oTBE Target by pc: 0xbfa2ab85 to pc: 0xbfa2ab87
 >> oTIE pc: 0xbfa2ab85:0x15 nextpc: bfa2ab87 len: 2
  0:  9: 3  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
 >> oTBE Target by pc: 0xbfa2ab85 to pc: 0xbfa2ab85
 >> oEI pc: 0xbfa2ab72
  2:  2: 3  1B @0xbfa2ab72: 5a                                 pop edx                  nextPC: 0xbfa2ab73
 >> oEI pc: 0xbfa2ab73
  3:  3: 3  2B @0xbfa2ab73: 89 d7                              mov edi, edx             nextPC: 0xbfa2ab75
 >> oEI pc: 0xbfa2ab75
  4:  4: 3  6B @0xbfa2ab75: 81 ef 28 00 00 00                  sub edi, 0x28            nextPC: 0xbfa2ab7b
 >> oEI pc: 0xbfa2ab7b
  5:  5: 3  1B @0xbfa2ab7b: fd                                 std                      nextPC: 0xbfa2ab7c
 >> oEI pc: 0xbfa2ab7c
  6:  6: 3  2B @0xbfa2ab7c: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab7e
 >> oEI pc: 0xbfa2ab7e
  7:  7: 3  2B @0xbfa2ab7e: b0 43                              mov al, 0x43             nextPC: 0xbfa2ab80
 >> oEI pc: 0xbfa2ab80
  8:  8: 3  5B @0xbfa2ab80: b9 04 00 00 00                     mov ecx, 0x4             nextPC: 0xbfa2ab85
 >> Benign write to unused address
 >> oDMA Write by seq_num: 9 pc: 0xbfa2ab85:0x15 to addr: 0xbfa2ab8a len: 1B value:  0x43 
 >> >> oDMA value in memory at that address:  0x43 
 >> oEB pc: 0xbfa2ab85
 >> oExc pc: 0xbfa2ab85 exception_idx: 239(0xef)
 >> oPC prev: 3 curr: 0
 >> oPC prev: 0 curr: 3
 >> oTBS pc: 0xbfa2ab85
 >> oTBE Target by pc: 0xbfa2ab85 to pc: 0xbfa2ab87
 >> oTIE pc: 0xbfa2ab85:0x15 nextpc: bfa2ab87 len: 2
!!* pc != prev insn's next_pc; 0xbfa2ab85 != bfa2ab87
  0: 10: 4  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
 >> oTBE Target by pc: 0xbfa2ab85 to pc: 0xbfa2ab85
 >> Benign write to unused address
 >> oDMA Write by seq_num: 9 pc: 0xbfa2ab85:0x15 to addr: 0xbfa2ab89 len: 1B value:  0x43 
 >> >> oDMA value in memory at that address:  0x43 
 >> oEB pc: 0xbfa2ab85
 >> Benign write to unused address
 >> oDMA Write by seq_num: 9 pc: 0xbfa2ab85:0x15 to addr: 0xbfa2ab88 len: 1B value:  0x43 
 >> >> oDMA value in memory at that address:  0x43 
 >> oEB pc: 0xbfa2ab85
 >> Benign write to unused address
 >> oDMA Write by seq_num: 9 pc: 0xbfa2ab85:0x15 to addr: 0xbfa2ab87 len: 1B value:  0x43 
 >> >> oDMA value in memory at that address:  0x43 
 >> oEB pc: 0xbfa2ab85
 >> oEB pc: 0xbfa2ab85
 >> oEI pc: 0xbfa2ab85
  9: 10: 4  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
 >> oTBS pc: 0xbfa2ab87
 >> oTIE pc: 0xbfa2ab87:0x17 nextpc: bfa2ab88 len: 1
  0: 11: 5  1B @0xbfa2ab87: 43                                 inc ebx                  nextPC: 0xbfa2ab88
 >> oTIE pc: 0xbfa2ab88:0x18 nextpc: bfa2ab89 len: 1
  0: 12: 5  1B @0xbfa2ab88: 43                                 inc ebx                  nextPC: 0xbfa2ab89
 >> oTIE pc: 0xbfa2ab89:0x19 nextpc: bfa2ab8a len: 1
  0: 13: 5  1B @0xbfa2ab89: 43                                 inc ebx                  nextPC: 0xbfa2ab8a
 >> oTIE pc: 0xbfa2ab8a:0x1a nextpc: bfa2ab8b len: 1
  0: 14: 5  1B @0xbfa2ab8a: 43                                 inc ebx                  nextPC: 0xbfa2ab8b
 >> oTIE pc: 0xbfa2ab8b:0x1b nextpc: bfa2ab8c len: 1
  0: 15: 5  1B @0xbfa2ab8b: fc                                 cld                      nextPC: 0xbfa2ab8c
 >> oTIE pc: 0xbfa2ab8c:0x1c nextpc: bfa2ab92 len: 6
  0: 16: 5  6B @0xbfa2ab8c: 81 c3 30 00 00 00                  add ebx, 0x30            nextPC: 0xbfa2ab92
 >> oTIE pc: 0xbfa2ab92:0x22 nextpc: bfa2ab95 len: 3
  0: 17: 5  3B @0xbfa2ab92: 88 5a 15                           mov [edx+0x15], bl       nextPC: 0xbfa2ab95
 >> oTIE pc: 0xbfa2ab95:0x25 nextpc: bfa2ab97 len: 2
  0: 18: 5  2B @0xbfa2ab95: 31 c0                              xor eax, eax             nextPC: 0xbfa2ab97
 >> oTIE pc: 0xbfa2ab97:0x27 nextpc: bfa2ab99 len: 2
  0: 19: 5  2B @0xbfa2ab97: b0 04                              mov al, 0x4              nextPC: 0xbfa2ab99
 >> oTIE pc: 0xbfa2ab99:0x29 nextpc: bfa2ab9b len: 2
  0: 20: 5  2B @0xbfa2ab99: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab9b
 >> oTIE pc: 0xbfa2ab9b:0x2b nextpc: bfa2ab9d len: 2
  0: 21: 5  2B @0xbfa2ab9b: b3 01                              mov bl, 0x1              nextPC: 0xbfa2ab9d
 >> oTIE pc: 0xbfa2ab9d:0x2d nextpc: bfa2ab9f len: 2
  0: 22: 5  2B @0xbfa2ab9d: 89 d1                              mov ecx, edx             nextPC: 0xbfa2ab9f
 >> oTIE pc: 0xbfa2ab9f:0x2f nextpc: bfa2aba1 len: 2
  0: 23: 5  2B @0xbfa2ab9f: 31 d2                              xor edx, edx             nextPC: 0xbfa2aba1
 >> oTIE pc: 0xbfa2aba1:0x31 nextpc: bfa2aba3 len: 2
  0: 24: 5  2B @0xbfa2aba1: b2 17                              mov dl, 0x17             nextPC: 0xbfa2aba3
 >> oTBE Target by pc: 0xbfa2aba3 to pc: 0xbfa2aba3
 >> oTBE INTERRUPT by pc: 0xbfa2aba3 int: 0x80
 >> oTIE pc: 0xbfa2aba3:0x33 nextpc: bfa2aba3 len: 2
  0: 25: 5  2B @0xbfa2aba3: cd 80                              int 0x80                 nextPC: 0xbfa2aba3
 >> oExc pc: 0xbfa2ab87 exception_idx: 239(0xef)
 >> oPC prev: 3 curr: 0
 >> oPC prev: 0 curr: 3
 >> oEI pc: 0xbfa2ab87
 10: 11: 5  1B @0xbfa2ab87: 43                                 inc ebx                  nextPC: 0xbfa2ab88
 >> oEI pc: 0xbfa2ab88
 11: 12: 5  1B @0xbfa2ab88: 43                                 inc ebx                  nextPC: 0xbfa2ab89
 >> oEI pc: 0xbfa2ab89
 12: 13: 5  1B @0xbfa2ab89: 43                                 inc ebx                  nextPC: 0xbfa2ab8a
 >> oEI pc: 0xbfa2ab8a
 13: 14: 5  1B @0xbfa2ab8a: 43                                 inc ebx                  nextPC: 0xbfa2ab8b
 >> oEI pc: 0xbfa2ab8b
 14: 15: 5  1B @0xbfa2ab8b: fc                                 cld                      nextPC: 0xbfa2ab8c
 >> oEI pc: 0xbfa2ab8c
 15: 16: 5  6B @0xbfa2ab8c: 81 c3 30 00 00 00                  add ebx, 0x30            nextPC: 0xbfa2ab92
 >> Benign write to unused address
 >> oDMA Write by seq_num: 16 pc: 0xbfa2ab92:0x22 to addr: 0xbfa2abc7 len: 1B value:  0x34 
 >> >> oDMA value in memory at that address:  0x34 
 >> oEI pc: 0xbfa2ab92
 16: 17: 5  3B @0xbfa2ab92: 88 5a 15                           mov [edx+0x15], bl       nextPC: 0xbfa2ab95
 >> oEI pc: 0xbfa2ab95
 17: 18: 5  2B @0xbfa2ab95: 31 c0                              xor eax, eax             nextPC: 0xbfa2ab97
 >> oEI pc: 0xbfa2ab97
 18: 19: 5  2B @0xbfa2ab97: b0 04                              mov al, 0x4              nextPC: 0xbfa2ab99
 >> oEI pc: 0xbfa2ab99
 19: 20: 5  2B @0xbfa2ab99: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab9b
 >> oEI pc: 0xbfa2ab9b
 20: 21: 5  2B @0xbfa2ab9b: b3 01                              mov bl, 0x1              nextPC: 0xbfa2ab9d
 >> oEI pc: 0xbfa2ab9d
 21: 22: 5  2B @0xbfa2ab9d: 89 d1                              mov ecx, edx             nextPC: 0xbfa2ab9f
 >> oEI pc: 0xbfa2ab9f
 22: 23: 5  2B @0xbfa2ab9f: 31 d2                              xor edx, edx             nextPC: 0xbfa2aba1
 >> oEI pc: 0xbfa2aba1
 23: 24: 5  2B @0xbfa2aba1: b2 17                              mov dl, 0x17             nextPC: 0xbfa2aba3
 >> oEB pc: 0xbfa2aba3
 >> oExc pc: 0xbfa2aba3 exception_idx: 128(0x80)
 >> oExc INT 0x80 pc: 0xbfa2aba3 syscall_num: 4(0x04)
 >> oEI pc: 0xbfa2aba3
 24: 25: 5  2B @0xbfa2aba3: cd 80                              int 0x80                 nextPC: 0xbfa2aba3
>> Be aware that sysc is not set; is the shell read from file vs libDasosFdump struct?
>> onSuccess EIP Found. Syscall number 0x4 at addr 0xbfa2aba3 offset from base: 51 (should be EIP-2) within pid: 86716416 number of exec'ed instructions: 25. This is success #1
[State 1] CPU dump
EAX=0x4
EBX=0x1
ECX=0xbfa2abb2
EDX=0x17
ESI=0x405d5490
EDI=0xbfa2ab86
EBP=0xbfa2a5d8
ESP=0xbfa2a17c
EIP=0xbfa2aba3
CR2=0xb76c629f
>> Success from offset 0
>> Success densities, overlay: 0.878788; avg: 0
>> Success eip: 0xbfa2aba5 offset from base: 53
>> Printing Trans_Trace (instructions in order of translation)
>>      0:  0: 1  2B @0xbfa2ab70: eb 3b                              jmp 0x3d                 nextPC: 0xbfa2abad
>>      0:  1: 2  5B @0xbfa2abad: e8 c0 ff ff ff                     call 0xffffffffffffffc5  nextPC: 0xbfa2ab72
>>      0:  2: 3  1B @0xbfa2ab72: 5a                                 pop edx                  nextPC: 0xbfa2ab73
>>      0:  3: 3  2B @0xbfa2ab73: 89 d7                              mov edi, edx             nextPC: 0xbfa2ab75
>>      0:  4: 3  6B @0xbfa2ab75: 81 ef 28 00 00 00                  sub edi, 0x28            nextPC: 0xbfa2ab7b
>>      0:  5: 3  1B @0xbfa2ab7b: fd                                 std                      nextPC: 0xbfa2ab7c
>>      0:  6: 3  2B @0xbfa2ab7c: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab7e
>>      0:  7: 3  2B @0xbfa2ab7e: b0 43                              mov al, 0x43             nextPC: 0xbfa2ab80
>>      0:  8: 3  5B @0xbfa2ab80: b9 04 00 00 00                     mov ecx, 0x4             nextPC: 0xbfa2ab85
>>      0:  9: 3  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
>>      0: 10: 4  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
>>      0: 11: 5  1B @0xbfa2ab87: 43                                 inc ebx                  nextPC: 0xbfa2ab88
>>      0: 12: 5  1B @0xbfa2ab88: 43                                 inc ebx                  nextPC: 0xbfa2ab89
>>      0: 13: 5  1B @0xbfa2ab89: 43                                 inc ebx                  nextPC: 0xbfa2ab8a
>>      0: 14: 5  1B @0xbfa2ab8a: 43                                 inc ebx                  nextPC: 0xbfa2ab8b
>>      0: 15: 5  1B @0xbfa2ab8b: fc                                 cld                      nextPC: 0xbfa2ab8c
>>      0: 16: 5  6B @0xbfa2ab8c: 81 c3 30 00 00 00                  add ebx, 0x30            nextPC: 0xbfa2ab92
>>      0: 17: 5  3B @0xbfa2ab92: 88 5a 15                           mov [edx+0x15], bl       nextPC: 0xbfa2ab95
>>      0: 18: 5  2B @0xbfa2ab95: 31 c0                              xor eax, eax             nextPC: 0xbfa2ab97
>>      0: 19: 5  2B @0xbfa2ab97: b0 04                              mov al, 0x4              nextPC: 0xbfa2ab99
>>      0: 20: 5  2B @0xbfa2ab99: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab9b
>>      0: 21: 5  2B @0xbfa2ab9b: b3 01                              mov bl, 0x1              nextPC: 0xbfa2ab9d
>>      0: 22: 5  2B @0xbfa2ab9d: 89 d1                              mov ecx, edx             nextPC: 0xbfa2ab9f
>>      0: 23: 5  2B @0xbfa2ab9f: 31 d2                              xor edx, edx             nextPC: 0xbfa2aba1
>>      0: 24: 5  2B @0xbfa2aba1: b2 17                              mov dl, 0x17             nextPC: 0xbfa2aba3
>>      0: 25: 5  2B @0xbfa2aba3: cd 80                              int 0x80                 nextPC: 0xbfa2aba3

>> Printing Exec_Trace (instructions in order of execution)
>>      0:  0: 1  2B @0xbfa2ab70: eb 3b                              jmp 0x3d                 nextPC: 0xbfa2abad
>>      1:  1: 2  5B @0xbfa2abad: e8 c0 ff ff ff                     call 0xffffffffffffffc5  nextPC: 0xbfa2ab72
>>      2:  2: 3  1B @0xbfa2ab72: 5a                                 pop edx                  nextPC: 0xbfa2ab73
>>      3:  3: 3  2B @0xbfa2ab73: 89 d7                              mov edi, edx             nextPC: 0xbfa2ab75
>>      4:  4: 3  6B @0xbfa2ab75: 81 ef 28 00 00 00                  sub edi, 0x28            nextPC: 0xbfa2ab7b
>>      5:  5: 3  1B @0xbfa2ab7b: fd                                 std                      nextPC: 0xbfa2ab7c
>>      6:  6: 3  2B @0xbfa2ab7c: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab7e
>>      7:  7: 3  2B @0xbfa2ab7e: b0 43                              mov al, 0x43             nextPC: 0xbfa2ab80
>>      8:  8: 3  5B @0xbfa2ab80: b9 04 00 00 00                     mov ecx, 0x4             nextPC: 0xbfa2ab85
>>      9: 10: 4  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
>>     10: 11: 5  1B @0xbfa2ab87: 43                                 inc ebx                  nextPC: 0xbfa2ab88
>>     11: 12: 5  1B @0xbfa2ab88: 43                                 inc ebx                  nextPC: 0xbfa2ab89
>>     12: 13: 5  1B @0xbfa2ab89: 43                                 inc ebx                  nextPC: 0xbfa2ab8a
>>     13: 14: 5  1B @0xbfa2ab8a: 43                                 inc ebx                  nextPC: 0xbfa2ab8b
>>     14: 15: 5  1B @0xbfa2ab8b: fc                                 cld                      nextPC: 0xbfa2ab8c
>>     15: 16: 5  6B @0xbfa2ab8c: 81 c3 30 00 00 00                  add ebx, 0x30            nextPC: 0xbfa2ab92
>>     16: 17: 5  3B @0xbfa2ab92: 88 5a 15                           mov [edx+0x15], bl       nextPC: 0xbfa2ab95
>>     17: 18: 5  2B @0xbfa2ab95: 31 c0                              xor eax, eax             nextPC: 0xbfa2ab97
>>     18: 19: 5  2B @0xbfa2ab97: b0 04                              mov al, 0x4              nextPC: 0xbfa2ab99
>>     19: 20: 5  2B @0xbfa2ab99: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab9b
>>     20: 21: 5  2B @0xbfa2ab9b: b3 01                              mov bl, 0x1              nextPC: 0xbfa2ab9d
>>     21: 22: 5  2B @0xbfa2ab9d: 89 d1                              mov ecx, edx             nextPC: 0xbfa2ab9f
>>     22: 23: 5  2B @0xbfa2ab9f: 31 d2                              xor edx, edx             nextPC: 0xbfa2aba1
>>     23: 24: 5  2B @0xbfa2aba1: b2 17                              mov dl, 0x17             nextPC: 0xbfa2aba3
>>     24: 25: 5  2B @0xbfa2aba3: cd 80                              int 0x80                 nextPC: 0xbfa2aba3
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (58/67) = 0
>>    Mem_map start_addr: 0xbfa2ab70, length: 66B, valid bytes: 58, used bytes: 58, range: 67B, end_addr: 0xbfa2abb2
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfa2ab70 eb3b5a89 d781ef28 000000fd 31dbb043  .;Z....(....1..C
0xbfa2ab80 b9040000 00f3aa43 434343fc 81c33000  .......CCCC...0.
0xbfa2ab90 0000885a 1531c0b0 0431dbb3 0189d131  ...Z.1...1.....1
0xbfa2aba0 d2b217cd 80------ -------- --e8c0ff  ................
0xbfa2abb0 ffff--                               ...             

>> Printing Data_Trace (bytes written in order of write)
>>      1 by:0xbfa2abad wrote  4B @0xbfa2a178: OOB b2 ab a2 bf 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab8a: 43 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab89: 43 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab88: 43 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab87: 43 
>>     16 by:0xbfa2ab92 wrote  1B @0xbfa2abc7: 34 
>> Printing the memory map (2 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (5/65) = 0
>>    Mem_map start_addr: 0xbfa2ab87, length: 64B, valid bytes: 5, used bytes: 5, range: 65B, end_addr: 0xbfa2abc7
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfa2ab80                90 909090-- --------         .........
0xbfa2ab90 -------- -------- -------- --------  ................
0xbfa2aba0 -------- -------- -------- --------  ................
0xbfa2abb0 -------- -------- -------- --------  ................
0xbfa2abc0 -------- ------75                    .......u        

>>    Printing snapshot 1
>>    The density (0 to 1) of this state's path is (5/65) = 0
>>    Mem_map start_addr: 0xbfa2ab87, length: 64B, valid bytes: 5, used bytes: 5, range: 65B, end_addr: 0xbfa2abc7
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfa2ab80                43 434343-- --------         CCCC.....
0xbfa2ab90 -------- -------- -------- --------  ................
0xbfa2aba0 -------- -------- -------- --------  ................
0xbfa2abb0 -------- -------- -------- --------  ................
0xbfa2abc0 -------- ------34                    .......4        

25 [State 1] Terminating state 1 with message 'EIP reached, success'
25 [State 1] Switching from state 1 to state 0
Copied 34928 (count=1)
Deleting state 1 0x0x206b52c0
25 [State 0] Message from guest (0xbfa2a1cc): << Looping fork, currently at 0
25 [State 0] >> Recv'ed onFini custom insn
>> Recv'ed onFini custom insn
>> There were 1 successes
>>    Printing success 0
>> Success from offset 0
>> Success densities, overlay: 0.878788; avg: 0
>> Success eip: 0xbfa2aba5 offset from base: 53
>> Printing Trans_Trace (instructions in order of translation)
>>      0:  0: 1  2B @0xbfa2ab70: eb 3b                              jmp 0x3d                 nextPC: 0xbfa2abad
>>      0:  1: 2  5B @0xbfa2abad: e8 c0 ff ff ff                     call 0xffffffffffffffc5  nextPC: 0xbfa2ab72
>>      0:  2: 3  1B @0xbfa2ab72: 5a                                 pop edx                  nextPC: 0xbfa2ab73
>>      0:  3: 3  2B @0xbfa2ab73: 89 d7                              mov edi, edx             nextPC: 0xbfa2ab75
>>      0:  4: 3  6B @0xbfa2ab75: 81 ef 28 00 00 00                  sub edi, 0x28            nextPC: 0xbfa2ab7b
>>      0:  5: 3  1B @0xbfa2ab7b: fd                                 std                      nextPC: 0xbfa2ab7c
>>      0:  6: 3  2B @0xbfa2ab7c: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab7e
>>      0:  7: 3  2B @0xbfa2ab7e: b0 43                              mov al, 0x43             nextPC: 0xbfa2ab80
>>      0:  8: 3  5B @0xbfa2ab80: b9 04 00 00 00                     mov ecx, 0x4             nextPC: 0xbfa2ab85
>>      0:  9: 3  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
>>      0: 10: 4  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
>>      0: 11: 5  1B @0xbfa2ab87: 43                                 inc ebx                  nextPC: 0xbfa2ab88
>>      0: 12: 5  1B @0xbfa2ab88: 43                                 inc ebx                  nextPC: 0xbfa2ab89
>>      0: 13: 5  1B @0xbfa2ab89: 43                                 inc ebx                  nextPC: 0xbfa2ab8a
>>      0: 14: 5  1B @0xbfa2ab8a: 43                                 inc ebx                  nextPC: 0xbfa2ab8b
>>      0: 15: 5  1B @0xbfa2ab8b: fc                                 cld                      nextPC: 0xbfa2ab8c
>>      0: 16: 5  6B @0xbfa2ab8c: 81 c3 30 00 00 00                  add ebx, 0x30            nextPC: 0xbfa2ab92
>>      0: 17: 5  3B @0xbfa2ab92: 88 5a 15                           mov [edx+0x15], bl       nextPC: 0xbfa2ab95
>>      0: 18: 5  2B @0xbfa2ab95: 31 c0                              xor eax, eax             nextPC: 0xbfa2ab97
>>      0: 19: 5  2B @0xbfa2ab97: b0 04                              mov al, 0x4              nextPC: 0xbfa2ab99
>>      0: 20: 5  2B @0xbfa2ab99: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab9b
>>      0: 21: 5  2B @0xbfa2ab9b: b3 01                              mov bl, 0x1              nextPC: 0xbfa2ab9d
>>      0: 22: 5  2B @0xbfa2ab9d: 89 d1                              mov ecx, edx             nextPC: 0xbfa2ab9f
>>      0: 23: 5  2B @0xbfa2ab9f: 31 d2                              xor edx, edx             nextPC: 0xbfa2aba1
>>      0: 24: 5  2B @0xbfa2aba1: b2 17                              mov dl, 0x17             nextPC: 0xbfa2aba3
>>      0: 25: 5  2B @0xbfa2aba3: cd 80                              int 0x80                 nextPC: 0xbfa2aba3

>> Printing Exec_Trace (instructions in order of execution)
>>      0:  0: 1  2B @0xbfa2ab70: eb 3b                              jmp 0x3d                 nextPC: 0xbfa2abad
>>      1:  1: 2  5B @0xbfa2abad: e8 c0 ff ff ff                     call 0xffffffffffffffc5  nextPC: 0xbfa2ab72
>>      2:  2: 3  1B @0xbfa2ab72: 5a                                 pop edx                  nextPC: 0xbfa2ab73
>>      3:  3: 3  2B @0xbfa2ab73: 89 d7                              mov edi, edx             nextPC: 0xbfa2ab75
>>      4:  4: 3  6B @0xbfa2ab75: 81 ef 28 00 00 00                  sub edi, 0x28            nextPC: 0xbfa2ab7b
>>      5:  5: 3  1B @0xbfa2ab7b: fd                                 std                      nextPC: 0xbfa2ab7c
>>      6:  6: 3  2B @0xbfa2ab7c: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab7e
>>      7:  7: 3  2B @0xbfa2ab7e: b0 43                              mov al, 0x43             nextPC: 0xbfa2ab80
>>      8:  8: 3  5B @0xbfa2ab80: b9 04 00 00 00                     mov ecx, 0x4             nextPC: 0xbfa2ab85
>>      9: 10: 4  2B @0xbfa2ab85: f3 aa                              rep stosb                nextPC: 0xbfa2ab87
>>     10: 11: 5  1B @0xbfa2ab87: 43                                 inc ebx                  nextPC: 0xbfa2ab88
>>     11: 12: 5  1B @0xbfa2ab88: 43                                 inc ebx                  nextPC: 0xbfa2ab89
>>     12: 13: 5  1B @0xbfa2ab89: 43                                 inc ebx                  nextPC: 0xbfa2ab8a
>>     13: 14: 5  1B @0xbfa2ab8a: 43                                 inc ebx                  nextPC: 0xbfa2ab8b
>>     14: 15: 5  1B @0xbfa2ab8b: fc                                 cld                      nextPC: 0xbfa2ab8c
>>     15: 16: 5  6B @0xbfa2ab8c: 81 c3 30 00 00 00                  add ebx, 0x30            nextPC: 0xbfa2ab92
>>     16: 17: 5  3B @0xbfa2ab92: 88 5a 15                           mov [edx+0x15], bl       nextPC: 0xbfa2ab95
>>     17: 18: 5  2B @0xbfa2ab95: 31 c0                              xor eax, eax             nextPC: 0xbfa2ab97
>>     18: 19: 5  2B @0xbfa2ab97: b0 04                              mov al, 0x4              nextPC: 0xbfa2ab99
>>     19: 20: 5  2B @0xbfa2ab99: 31 db                              xor ebx, ebx             nextPC: 0xbfa2ab9b
>>     20: 21: 5  2B @0xbfa2ab9b: b3 01                              mov bl, 0x1              nextPC: 0xbfa2ab9d
>>     21: 22: 5  2B @0xbfa2ab9d: 89 d1                              mov ecx, edx             nextPC: 0xbfa2ab9f
>>     22: 23: 5  2B @0xbfa2ab9f: 31 d2                              xor edx, edx             nextPC: 0xbfa2aba1
>>     23: 24: 5  2B @0xbfa2aba1: b2 17                              mov dl, 0x17             nextPC: 0xbfa2aba3
>>     24: 25: 5  2B @0xbfa2aba3: cd 80                              int 0x80                 nextPC: 0xbfa2aba3
>> Printing the memory map (1 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (58/67) = 0
>>    Mem_map start_addr: 0xbfa2ab70, length: 66B, valid bytes: 58, used bytes: 58, range: 67B, end_addr: 0xbfa2abb2
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfa2ab70 eb3b5a89 d781ef28 000000fd 31dbb043  .;Z....(....1..C
0xbfa2ab80 b9040000 00f3aa43 434343fc 81c33000  .......CCCC...0.
0xbfa2ab90 0000885a 1531c0b0 0431dbb3 0189d131  ...Z.1...1.....1
0xbfa2aba0 d2b217cd 80------ -------- --e8c0ff  ................
0xbfa2abb0 ffff--                               ...             

>> Printing Data_Trace (bytes written in order of write)
>>      1 by:0xbfa2abad wrote  4B @0xbfa2a178: OOB b2 ab a2 bf 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab8a: 43 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab89: 43 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab88: 43 
>>      9 by:0xbfa2ab85 wrote  1B @0xbfa2ab87: 43 
>>     16 by:0xbfa2ab92 wrote  1B @0xbfa2abc7: 34 
>> Printing the memory map (2 snapshots)
>>    Printing snapshot 0
>>    The density (0 to 1) of this state's path is (5/65) = 0
>>    Mem_map start_addr: 0xbfa2ab87, length: 64B, valid bytes: 5, used bytes: 5, range: 65B, end_addr: 0xbfa2abc7
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfa2ab80                90 909090-- --------         .........
0xbfa2ab90 -------- -------- -------- --------  ................
0xbfa2aba0 -------- -------- -------- --------  ................
0xbfa2abb0 -------- -------- -------- --------  ................
0xbfa2abc0 -------- ------75                    .......u        

>>    Printing snapshot 1
>>    The density (0 to 1) of this state's path is (5/65) = 0
>>    Mem_map start_addr: 0xbfa2ab87, length: 64B, valid bytes: 5, used bytes: 5, range: 65B, end_addr: 0xbfa2abc7
           0 1 2 3  4 5 6 7  8 9 a b  c d e f   ASCII
0xbfa2ab80                43 434343-- --------         CCCC.....
0xbfa2ab90 -------- -------- -------- --------  ................
0xbfa2aba0 -------- -------- -------- --------  ................
0xbfa2abb0 -------- -------- -------- --------  ................
0xbfa2abc0 -------- ------34                    .......4        

>>    Done printing success 0
>> Done printing successes
>> The success/offset with the highest overlay density is 0, value of 0.878788
>> The success/offset with the highest average density is 0, value of 0
>> There were 1 different eips: 0xbfa2aba5 
25 [State 0] Killing state 0
25 [State 0] Terminating state 0 with message 'State was terminated by opcode
            message: "<< Ending state 0"
            status: 0'
All states were terminated
Deleting state 0 0x0x3d024f0
Stack trace
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x748f09]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44f115]
  /lib/libc.so.6 : exit()+0xe2
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x724761]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x51f20d]
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x453b41]
  /lib/libc.so.6 : __libc_start_main()+0xfe
  /home/s2e/s2e/dasos/s2e/build/qemu-release/i386-s2e-softmmu/qemu() [0x44c939]
